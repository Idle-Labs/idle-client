{"version":3,"sources":["ImageButton/ImageButton.js","TrancheWelcome/TrancheWelcome.module.scss","SmartNumber/SmartNumber.js","PageNotFound/PageNotFound.module.scss","Breadcrumb/Breadcrumb.js","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","RoundIconButton/RoundIconButton.js","NetworkIndicator/NetworkIndicator.js","CustomTooltip/CustomTooltip.js","AllocationChart/AllocationChart.js","CustomTooltip/CustomTooltipRow.js","Faquestion/Faquestion.js","ActiveCoverages/ActiveCoverages.js","PortfolioEquity/PortfolioEquity.js","CardIconButton/CardIconButton.js","TrancheField/TrancheField.js","GenericSelector/GenericSelector.js","TxProgressBar/TxProgressBar.js","theme.js","AssetSelector/AssetSelector.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","utilities/components/ModalCard.module.scss","TwitterShareButton/TwitterShareButton.module.scss","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","IconBox/IconBox.js","GenericChart/GenericChart.js","utilities/components/Header.module.scss","ExecuteTransaction/ExecuteTransaction.js","Tos/Tos.module.scss","TransactionField/TransactionField.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.module.scss","utilities/components/BuyModal.js","TableRow/TableRow.js","DashboardCard/DashboardCard.js","TableHeader/TableHeader.js","FastBalanceSelector/FastBalanceSelector.js","Staking/Staking.js","GenericFaqs/GenericFaqs.js","SendTxWithBalance/SendTxWithBalance.js","utilities/components/LimitReachedModal.js","TrancheDetails/TrancheDetails.js","PortfolioEquityTranches/PortfolioEquityTranches.js","FundsOverviewTranche/FundsOverviewTranche.js","StakingRewardsTranche/StakingRewardsTranche.js","TranchePage/TranchePage.js","TranchesList/TranchesList.js","TrancheBox/TrancheBox.js","TrancheFlash/TrancheFlash.js","TrancheWelcome/TrancheWelcome.js","GenericPieChart/GenericPieChart.js","TotalBalanceCounter/TotalBalanceCounter.js","TotalEarningsCounter/TotalEarningsCounter.js","Tranches/Tranches.js","TokenSwap/TokenSwap.js","LpStaking/LpStaking.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","PolygonBridge/PolygonBridge.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","configs/globalConfigs.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","configs/availableTranches.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","ConnectBox/ConnectBox.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","Migrate/Migrate.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","CustomList/CustomList.js","AssetsList/AssetsList.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","Footer/Footer.module.scss","utilities/components/ModalCard.js","colors.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","FlexLoader/FlexLoader.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js","ChartCustomTooltip/ChartCustomTooltip.js","CustomField/CustomField.js","RoundButton/RoundButton.js","Title/Title.js","ExtLink/ExtLink.js","AssetField/AssetField.js"],"names":["ImageButton","isMobile","this","props","image","imageSrc","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","Object","assign","width","src","imageProps","iconName","name","iconProps","caption","textAlign","fontSize","fontWeight","color","borderRadius","px","py","my","mx","onClick","handleClick","height","mainColor","isActive","contrastColor","style","buttonStyle","justifyContent","buttonProps","Fragment","badge","position","backgroundColor","bgColor","right","top","text","flexDirection","alignItems","mr","captionPos","subcaption","split","map","v","i","key","concat","lineHeight","Component","module","exports","trancheFlash","mobile","SmartNumber","functionsUtil","setProps","FunctionsUtil","loadUtils","_this2","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","decimals","maxPrecision","minPrecision","flexProps","keys","length","forEach","p","showUnit","unit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unitProps","headerContainer","headerBgFiller","bgContainer","list","textContainer","Breadcrumb","_this","showPathMobile","id","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_7__","border","iconSize","ml","hoverColor","path","index","link","pathLink","Link","Text","pl","maxWidth","overflow","whiteSpace","textOverflow","borderLeft","theme","colors","divider","e","goToSection","ShortHash","state","componentUnmounted","loadData","prevProps","prevState","hash","newState","callback","setState","resolveAddress","shortenHash","getENSName","ensName","setStateSafe","loader","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","size","display","LoadingSpinner","react_default","index_es","className","styles","ButtonLoader","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","RoundIconButton","disabled","minWidth","react__WEBPACK_IMPORTED_MODULE_6___default","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","NetworkIndicator","activeNetworks","defaultNetwork","loadNetworks","networkInitialized","availableNetworks","getGlobalConfig","networkId","networkConfig","value","config","label","requiredNetwork","getRequiredNetwork","find","network","setRequiredNetwork","JSON","stringify","required","_this3","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","isSearchable","innerProps","customOptionProps","pr","options","CustomOptionValue","data","provider","rimble_ui__WEBPACK_IMPORTED_MODULE_10__","defaultValue","onChange","selectNetwork","bind","CustomValueContainer","selectProps","flex","cursor","isCorrectNetwork","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","cardProps","isInteractive","CustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","point","left","itemPos","xFormatted","mb","children","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","selectedToken","getTokenAllocation","tokenConfig","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","onMouseLeave","tooltipFormat","sliceLabel","radialLabel","tooltip","container","inline","background","cardBg","labels","fontFamily","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","margin","bottom","protocols","protocolInfo","protocolName","protocolAddr","address","toLowerCase","protocolAllocationPercParsed","parseFloat","times","toFixed","push","globalConfigs","stats","hsl","join","capitalize","protocolIcon","icon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","zIndex","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","CustomTooltipRow","flexBasis","textTransform","dangerouslySetInnerHTML","__html","Faquestion","isShowingAnswer","preventDefault","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","isOpened","boxShadow","h4","question","answer","Base","loaded","activeCoverages","loadCoverages","account","getActiveCoverages","coverages","c","availableTokens","includes","collateral","statusColors","transactions","status","statusIcon","statusColor","completed","failed","pending","statusIconProps","portfolioCoverage","react__WEBPACK_IMPORTED_MODULE_9___default","title","_Title_Title__WEBPACK_IMPORTED_MODULE_8__","titleProps","_CustomList_CustomList__WEBPACK_IMPORTED_MODULE_10__","rows","row","fileClaimUrl","openWindow","cols","fields","themeMode","parentProps","funcProps","actionLabel","actionDisabled","actionUrl","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","enabledTokens","componentDidMount","mobileChanged","themeModeChanged","getEtherscanTxs","etherscanTxs","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","values","filter","tx","token","BNify","action","Math","min","parseInt","timeStamp","tokenAmount","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","arguments","currentDate","strToMoment","Date","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","tokenAddress","_context4","getAvailableTokenAddress","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","pop","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTx","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","chartToken","conversionRate","momentDate","isSameOrAfter","isSameOrBefore","formattedDate","format","max","frequencySeconds","_loop","aggregatedBalances","date","x","y","balances","itemIndex","item","floor","toUpperCase","yFormatDecimals","gridYStep","gridYValues","gridYValue","axisBottomIndex","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","tickValues","legendPosition","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","CardIconButton","isDisabled","align","useIconOnly","iconColor","isSidebar","iconBgColor","actionBg","redeem","textProps","TrancheField","ready","loadField","_callee","fieldName","fieldInfo","fieldProps","addGovTokens","formatValue","addTokenName","output","_args","_context","undefined","protocol","abrupt","t0","loadTrancheField","tranche","trancheConfig","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","tokenChanged","accountChanged","trancheChanged","protocolChanged","fieldChanged","contractInitialized","contractsInitialized","transactionsChanged","oldState","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","trancheDetails","rgb","hex","buttonLabel","_CustomField_CustomField__WEBPACK_IMPORTED_MODULE_11__","feesCounter","feesStart","feesEnd","react_countup__WEBPACK_IMPORTED_MODULE_8___default","delay","decimal","separator","useEasing","duration","end","start","formattingFn","n","countUpRef","ref","earningsCounter","earningsStart","earningsEnd","_ref3","govTokenConfig","govTokenIndex","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_10__","tooltipProps","message","getGovTokensDistributionSpeed","distributionFrequency","formattedValue","_isBigNumber","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","defaultValueChanged","componentsChanged","ControlComponent","menuIsOpen","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","CustomIndicatorSeparator","CustomMenu","mt","CustomInputContainer","fontSizes","copyColor","fontWeights","searchInput","dark","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","TxProgressBar","txCount","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","initProgressBar","getTransaction","transaction","Promise","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","web3","eth","err","_x","_x2","getBlockTime","pt","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","blockNumber","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txHash","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","window","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","currentNetwork","react__WEBPACK_IMPORTED_MODULE_10___default","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","loaderProps","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","target","rel","href","getEtherscanTransactionUrl","explorer","cancelTransaction","cancelTextColor","cancelTextHoverColor","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","letterSpacings","lineHeights","solid","copy","serif","counter","space","radii","widths","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","blue","base","gradient-bg","primary-light","light","primary-dark","bgBlue","tick","dark-blue","skyBlue","lightBlue","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","green","connect","newblue","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider2","deposit","migrate","menuBg","menuHover","flashColor","menuRightBorder","menuIconActive","cardBgContrast","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","blacks","whites","zIndices","messageStyle","shade","tint","success","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","AssetSelector","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","showCustomField","cachedData","setCachedData","showBalance","changeToken","TwitterShareButton","share","sendGoogleAnalyticsEvent","eventCategory","eventAction","eventLabel","parent","w","innerWidth","open","tweet","twitterIcon","ShareModal","closeModal","regenerator_default","getGlobalConfigs","analytics","google","events","enabled","escape","customText","isOpen","ModalCard","closeFunc","confettiEnabled","react_confetti_default","run","recycle","innerHeight","Header","Body","src_TwitterShareButton_TwitterShareButton","React","bg","radioBtn","button","IconBox","isVisible","GenericChart","addEventListener","handleWindowSizeChange","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","minHeight","loaderText","gradientButton","empty","select","selectDark","input","ExecuteTransaction","txStatus","loading","console","log","eventData","methodName","contractName","getTransactionError","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","transactionParams","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_11__","progressBarProps","execute","componentProps","TransactionField","hashChanged","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_11__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","amount","tokenSymbol","iconSrc","CustomComponent","customValue","getArrayPath","Image","Icon","IdleGovToken","classCallCheck","tokenName","getBalance","asyncToGenerator","getTokenBalance","claimRewards","getPriorVotes","priorVotes","_args3","genericContractCall","refreshIdleSpeed","getUnclaimedTokens","getAPR","_ref6","IDLETokenConfig","cachedDataKey","APR","_ref7","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","idle","getDistribution","slicedToArray","getUniswapConversionRate","lte","convertTokenBalance","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","blocksPerYear","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","currentNetworkId","totalSpeed","_args10","_context10","availableStrategies","getRequiredNetworkId","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","getUserPoolShare","_x7","fixDistributionSpeed","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","profiler","idleGovToken","trimEth","toBN","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","innerHTML","childNodes","nodeValue","BNify_obj","s","BigNumber","String","_len","Array","_key","logs","messagesEnabled","moment","customLogError","_console","_len2","_key2","errorsEnabled","getContractByName","contract","contracts","normalizeSimpleIDNotification","replace","str","replaceArrayProps","arr1","arr2","replaceArrayPropsRecursive","objectSpread","stripHtml","html","tmp","textContent","innerText","scrollTo","to","scrollY","change","currentTime","easeInOutQuad","t","b","animateScroll","val","getQueryStringParameterByName","url","location","results","RegExp","exec","decodeURIComponent","getTxAction","depositProxyContractInfo","migrationContractAddr","migration","migrationContract","migrationContractOldAddrs","oldAddresses","batchMigration","batchMigrationContractAddr","isMigrationTx","contractAddress","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","shortHash","txStart","txEnd","addEthereumChain","chainId","getCurrentWeb3","currentProvider","request","chainName","providerConfig","blockExplorerUrl","rpcUrls","publicRpc","rpc","toHex","nativeCurrency","baseToken","symbol","blockExplorerUrls","method","ensConfig","TTL","ens","addressCheck","supportedNetworks","checkAddress","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolioTranches","availableTranches","portfolio","tranches","avgAPY","totalEarnings","totalAmountLent","totalEarningsPerc","_args5","tranchesBalance","totalBalance","protocolConfig","_ref4","_ref5","trancheTokenBalance","tranchePool","tranchePrice","tokenBalance","trancheUserInfo","trancheApy","poolShare","amountDeposited","trancheEarnings","loadTrancheFieldRaw","getTrancheUserInfo","toConsumableArray","trancheInfo","trancheWeight","getAccountPortfolio","orderedTokensBalance","depositedTokens","_args8","totalBalanceConverted","_ref11","tokenBalanceConverted","getIdleTokenPrice","tokenAprs","tokenAPY","tokenWeight","amountLentToken","tokenEarnings","getAmountDeposited","getTokenAprs","avgApy","web3RpcKey","web3Rpc","ethereum","Web3","providers","HttpProvider","getCurveAvgSlippage","processedTxs","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","_args9","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","avgBuyPrice","prevAvgBuyPrice","getAvgBuyPrice","_args11","idleTokensBalance","getFirstDepositTx","deposits","firstDepositTx","getDashboardSectionUrl","section","origin","asyncTimeout","ms","getDepositTimestamp","_callee13","firstDepositTxs","_args13","_context13","reduce","acc","getTrancheRewardTokensInfo","_callee15","stakingRewards","tokensDistribution","_context15","_ref19","_callee14","eventFilters","transfers","firstHarvest","latestHarvest","firstBlock","_ref20","_ref21","prevBlockInfo","lastBlockInfo","lastBlockPoolSize","poolSize","elapsedBlocks","elapsedSeconds","lastAmount","totalAmount","tokensPerBlock","tokensPerSecond","tokensPerDay","tokensPerYear","convertedTokensPerYear","tokenApr","tokenApy","_context14","CDO","CDORewards","getContractEvents","fromBlock","toBlock","_address","getBlockInfo","genericContractCallCached","returnValues","total","apr2apy","apr","apy","_x9","_ref22","_callee17","defaultEventsConfig","underlyingEventsConfig","underlyingEventsFilters","_ref23","_ref24","underlying_transfers","trancheToken_transfers","totalAmountDeposited","_context17","_ref25","_callee16","trancheTokenTransferEvent","tokenTransferEvent","trancheTokenAmount","blockInfo","hashKey","_context16","trancheTokens","_x13","_x10","_x11","_x12","getTrancheUserTransactions","_ref26","_callee18","_context18","_x14","_x15","_x16","getTrancheFirstDepositTx","_ref27","_callee19","_context19","_x17","_x18","_x19","getAmountDepositedTranche","_ref28","_callee20","_context20","_x20","_x21","_x22","_ref29","_callee21","_ref30","_ref31","userAvgPrice","_context21","_x23","_x24","getAmountLent","_callee22","amountLents","_args22","_context22","getBaseToken","getCurrentNetwork","getCurrentNetworkId","current","getPolygonBridgeTxs","_callee28","txs","covalentInfo","etherscanInfo","stateSenderConfig","erc20PredicateConfig","etherPredicateConfig","depositManagerConfig","rootChainManagerConfig","polygonNetworkId","covalentApiUrl","polygonAvailableTokens","polygonEndpoint","ethereumNetworkId","etherscanApiUrl","etherscanEndpoint","etherscanTxlistEndpoint","etherscanTxlistInternalEndpoint","_ref34","_ref35","last_state_id","polygonTxs","etherscanTxlist","etherscanTxlistInternal","rootTokensAddresses","childTokensAddresses","depositTxs","exitTxs","depositTxsHashes","depositETHInputRexExp","depositETHTxs","exitETHTxs","_args28","_context28","getCachedData","endpoints","getPolygonCurrentLastStateId","makeCachedRequest","makeEtherscanApiRequest","childToken","rootToken","result","_ref36","_callee23","ethereumTx","txReceipt","stateSenderLog","tx_state_id","_context23","bridgeType","getTxReceipt","web3Infura","hexToNumberString","topics","included","_x25","_ref37","_callee24","_context24","_x26","match","_ref38","_callee25","_context25","_x27","_ref39","_callee26","_context26","_x28","items","to_address","_ref40","_callee27","polygonTx","_context27","normalizePolygonTx","exited","maticPOSClient","exitERC20","encodeAbi","_x29","sort","getPolygonBaseTxs","_callee29","debug","baseTxs","baseEndpoint","cachedRows","lastCachedTx","lastCachedBlockNumber","covalentEndpointLastBlock","latestTxs","latestBlockNumbers","requestCount","requestStatus","cachedRequests_polygon","_args29","_context29","getCachedRequest","block_height","filterPolygonTxs","tx_hash","saveFetchedTransactions","makeRequest","now","getEtherscanBaseTxs","_callee30","firstBlockNumber","endBlockNumber","firstIdleBlockNumber","etherscanEndpointLastBlock","cachedRequests","_args30","_context30","filterEthereumTxs","_callee31","_args31","_context31","filterCurveTxs","endpoint","txsToStore","cachedRequest","saveCachedRequest","_callee32","resultData","_resultData","allAvailableTokens","_args32","_context32","processStoredTxs","t1","_callee33","contractInstance","_context33","web3Polygon","Contract","constant","inputs","outputs","internalType","payable","stateMutability","methods","lastStateId","call","checkPolygonTransactionIncluded","_ref46","_callee34","_ref47","_ref48","_context34","getTransactionReceipt","_x30","_ref49","_callee35","_args35","_context35","_x31","depositLogEvent","log_events","sender_address","decoded","param","redeemLogEvent","withdrawLogEvent","tokenDecimal","idleToken","block_signed_at","_d","logEvent","raw_log_topics","from_address","gasUsed","gas_spent","gas_price","_ref50","_callee36","processTransactions","idleTokensAddresses","_args36","_context36","mappedTx","_x32","_x33","filterEtherscanTxs","_ref51","_callee37","processTxs","_args37","_context37","_x34","_ref52","_callee38","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args38","_context38","tokenMigrationToolParams","curveTokenConfig","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenValue","newValue","iTxs","withdrawnValue","_x35","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref53","_callee43","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args43","_context43","baseTokenConfig","baseTokenAddress","_ref54","_callee42","minedTxs","_context42","_ref55","_callee41","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context41","getCurveTokenPrice","_ref56","_callee39","_context39","_x40","_x41","baseTokensConfig","t2","_ref57","_callee40","_context40","_x42","_x43","_x38","_x39","_x37","_x36","_ref58","_callee49","txsToProcess","_args49","_context49","_ref59","_callee48","_context48","_ref60","_callee47","isStoredTx","allowedMethods","pendingStatus","txSucceeded","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context47","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","created","_ref61","_callee44","_context44","_x48","_x49","_ref62","_callee45","_context45","_x50","_x51","oldContract","raw","_ref63","_callee46","_context46","_x52","_x53","abi","decodeLog","_token","_x46","_x47","_x45","_x44","alias","getCustomAddress","setCustomAddress","customAddress","_ref64","_callee50","error_callback","_args50","_context50","catch","_x54","_ref65","_callee51","apiKeyIndex","apiKey","_args51","_context51","_x55","_ref66","_callee52","return_data","_args52","_context52","_x56","code","errorCode","array","prop","shift","configs","getAppUrl","baseURL","checkUrlOrigin","checkUrlBeta","betaURL","sendGoogleAnalyticsPageview","_callee53","page","googlePageviewInfo","isOrigin","_args53","_context53","ga","_ref68","_callee55","googleEventsInfo","debugEnabled","originOk","_args55","_context55","addPostfixForTestnet","_ref69","_callee54","_context54","hitCallback","hitCallbackFail","_x58","_x59","_x57","createContract","_ref70","_callee56","_context56","_x60","_x61","_x62","getWalletProvider","defaultProvider","simpleIDPassUserInfo","userInfo","simpleID","email","initSimpleID","passUserInfo","defaultUrl","baseurl","getEtherscanAddressUrl","decimalCount","thousands","abs","negativeSign","Number","j","getSnapshotProposals","_callee59","activeOnly","whitelist","proposals","currTime","validProposals","_args59","_context59","addr","msg","payload","_ref72","_callee58","checkedStrategies","_context58","snapshot","metadata","strategies","_ref73","_callee57","_context57","_x64","_x63","_ref74","_callee60","startTimestamp","endTimestamp","forceStartTimestamp","frequency","order","limit","statsConfig","filteredCachedData","_filteredData","apiInfo","filteredData","_args60","_context60","_x65","getTokenExchangeRate","_ref75","_callee61","exchangeRateParams","exchangeRate","_context61","_x66","_x67","getTokenDecimals","_ref76","_callee62","_context62","_x68","aprs","allocations","avgApr","aprWeighted","allocation","getFrequencySeconds","quantity","hour","day","week","getIdleStakingRewardsTxs","_callee63","idleTokenConfig","feeDistributorConfig","_context63","getProtocolInfoByAddress","integerValue","ROUND_FLOOR","normalizeTokenDecimals","normalizeTokenAmount","normalizedTokenDecimals","checkContractPaused","_callee64","contractPaused","_args64","_context64","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref79","_callee66","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context66","lastAllocationsPromise","_ref80","_callee65","lastAllocations","_context65","_x70","_x71","alloc","_x69","checkMigration","_ref81","_callee67","migrationEnabled","oldContractBalance","oldContractTokenDecimals","oldContractBalanceFormatted","oldContractName","_context67","getContractBalance","_x72","_x73","_ref82","_callee68","eventName","_args68","_context68","getContractPastEvents","_x74","_x75","estimateMethodGasUsage","_ref83","_callee69","methodParams","_contract$methods","functionCall","gasLimit","_ref84","_ref85","_args69","_context69","getGasPrice","estimateGas","_x76","_x77","_ref86","_callee70","userAddress","signedParameters","callback_receipt","_contract$methods2","_context70","on","once","confirmationNumber","receipt","_x78","_x79","_x80","_x81","_x82","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref87","_callee71","biconomyInfo","res","_context71","limits","apiId","headers","x-api-key","_x83","sendTxWithPermit","_ref88","_callee72","_contract$methods3","messageToSign","_this$getSignaturePar","_context72","encodeABI","personal","sign","_x84","_x85","_x86","_x87","_x88","_x89","buildBiconomyErc20ForwarderTx","_ref89","_callee73","permitType","callData","buildParams","_context73","txGas","erc20ForwarderClient","buildTx","_x90","_x91","_x92","_x93","_x94","_ref90","_callee75","_context75","_ref91","_callee74","_context74","_x96","_x97","_x95","sendBiconomyTxWithErc20Forwarder","_ref92","_callee76","req","metaInfo","txResponse","fetchReceiptIntervalId","_context76","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x98","_x99","_x100","_x101","sendBiconomyTxWithPersonalSign","_ref93","_callee77","_this$getSignaturePar2","_context77","getNonce","_x102","_x103","_x104","_x105","signPermitEIP2612","_ref94","_callee78","erc20Name","owner","spender","deadline","domain","permit","domainData","_context78","getChainId","version","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x106","_x107","_x108","_x109","_x110","_x111","_x112","_x113","signPermit","_ref95","_callee79","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","expiry","EIPVersion","permitName","_args79","_context79","net","getId","round","nonceMethod","pow","allowed","response","_x114","_x115","_x116","_ref96","_callee80","permitParams","methodAbi","useNonce","_args80","_context80","_jsonInterface","f","unshift","_x117","_x118","_x119","_x120","_x121","_x122","_x123","sendSignedTx","_ref97","_callee81","MetaTransaction","dataToSign","_context81","_x124","_x125","_x126","_x127","_x128","checkTokenApproved","_ref98","_callee82","contractAddr","walletAddr","_ref99","_ref100","allowance","_context82","getAllowance","gte","_x129","_x130","_x131","_ref101","_callee83","_context83","_x132","_x133","_x134","contractMethodSendWrapperWithValue","txData","send_raw","raw_tx_data","disableERC20","toTwosComplement","enableERC20","getTrancheStakedBalance","_ref102","_callee84","stakedBalance","_args84","_context84","_x135","_x136","getTrancheStakingRewards","_ref103","_callee86","_context86","_ref104","_callee85","tokenGlobalConfig","_context85","_x139","_x137","_x138","_ref105","_callee87","field","_args87","_context87","_x140","_x141","_x142","_x143","_x144","_x145","_x146","_x147","_ref106","_callee88","strategyConfig","idleStrategyAddress","idleGovTokenConfig","_ref107","_ref108","totalSupply","virtualPrice","_ref109","_ref110","staked1","lastPrice1","_ref111","_ref112","deposited1","lastPrice","_ref113","_ref114","redeemable1","staked2","_ref115","_ref116","trancheApy2","deposited3","_ref117","_ref118","trancheFee","_ref119","_ref120","deposited4","redeemable3","_ref121","_ref122","deposited2","redeemable2","_ref123","_ref124","earningsPerc","secondsFromFirstTx","rewardsTokensInfo","_ref125","_ref126","rewardsTokens","incentiveTokens","govTokens","_args88","_context88","Strategy","initContract","AA","BB","getTokenTotalSupply","IDLE","rewardTokenAddr","govTokenAddress","getGovTokenConfigByAddress","_x148","_x149","_x150","_x151","_x152","_x153","_x154","loadAssetField","_ref127","_callee89","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref128","_ref129","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref130","_ref131","amountLentCurve1","redeemableBalanceCurve","_ref132","_ref133","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref134","_ref135","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","selectedTokenConfig","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref136","_ref137","tokenPriceFirstDeposit","_ref138","_ref139","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref140","_ref141","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref142","_ref143","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref144","_ref145","amountLentCurve2","redeemableBalanceCurve1","_ref146","_ref147","redeemableBalance2","_args89","_context89","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","distributionMode","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getTokenPrice","getUserTokenFees","t8","t9","getGovTokenUserBalance","getGovTokensUserTotalBalance","_x155","_x156","_x157","_x158","getIdleTokenSupply","_ref148","_callee90","idleTokenSupply","_args90","_context90","_x159","getIdleTokenPriceWithFee","_ref149","_callee91","_ref150","_ref151","fee","priceWFee","_args91","_context91","eq","_x160","_x161","_ref152","_callee92","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args92","_context92","_x162","clearCachedData","clear_all","useLocalStorage","expirationDate","_ref153","_callee93","_ref154","_ref155","idleTokensTotalSupply","userShare","_context93","_x163","_x164","_callee95","coverProtocolConfig","nexusMutualConfig","_args95","_context95","_ref157","_callee94","coverage","coverageTokens","protocolImage","_context94","tokens","expirationTimestamp","utc","_x165","getNexusMutualCoverages","sumAssured","coverAssetConfig","yieldTokenConfig","collateralIcon","incident","claimId","protocolImageDark","coverDetails","validUntil","route","_ref158","_callee97","incidentsInfo","_ref159","_ref160","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context97","directProps","startBlock","contractInfo","buyer","_ref161","_callee96","cover","coverId","claimSubmittedEvent","_ref162","_ref163","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimedAmount","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","coveredTokenAmount","_ref164","_ref165","_context96","claim","productId","incidentDate","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","findIndex","_x167","_x166","getBatchedDepositExecutions","_ref166","_callee98","_context98","_x168","getBatchedDeposits","_callee100","filter_by_status","batchDepositConfig","batchedDeposits","_args100","_context100","_ref168","_callee99","currBatchIndex","batchIndex","_ref169","_ref170","batchExecutions","batchTotal","batchRedeem","batchDeposit","batchTotals","batchRedeems","batchDeposits","lastExecution","_context99","_x169","getETHBalance","_ref171","_callee101","fixDecimals","_args101","_context101","_x170","_ref172","_callee102","_ref173","_ref174","_args102","_context102","_x171","_x172","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","script","attr","readyState","onreadystatechange","onload","body","appendChild","isValidJSON","_ref175","_callee103","_args103","_context103","_x173","_ref176","_callee104","_args104","_context104","_x174","_ref177","_callee105","_args105","_context105","_x175","_x176","getProtocolBalance","_ref178","_callee106","_context106","_x177","_x178","getAprs","_ref179","_callee107","_context107","addresses","_x179","genericIdleCall","_ref180","_callee108","callParams","_args108","_context108","_x180","_ref181","_callee109","_contract$methods4","_args109","_context109","_x181","_x182","_ref182","_callee111","_args111","_context111","_ref183","_callee110","_context110","_x184","_x185","_x183","getTxDecodedLogs","_ref184","_callee113","logAddr","decodeLogs","internalTransfers","_context113","_ref185","_callee112","_context112","_x190","_x191","_x186","_x187","_x188","_x189","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee114","_context114","_ref187","_callee115","_context115","getBlock","_x192","_ref188","_callee116","_args116","_context116","getPastEvents","_x193","_x194","_ref189","_callee117","_args117","_context117","_x195","_x196","cachedContractCall","_ref190","_callee118","_args118","_context118","_x197","_x198","_ref191","_callee119","_contract$methods5","_args119","_context119","_x199","_x200","_ref192","_callee120","async","_args120","_context120","_x201","_x202","getUnlentBalance","_ref193","_callee121","unlentBalance","_context121","_x203","_ref194","_callee122","_args122","_context122","_x204","getLastAllocations","_ref195","_callee124","tokenAllocations","_context124","_ref196","_callee123","_context123","_x206","_x207","_x205","_ref197","_callee125","protocolsAprs","_ref198","_ref199","govTokensBalances","_args125","_context125","totalAllocationConverted","totalAllocationWithUnlentConverted","getTokenConversionRate","getGovTokensBalances","protocolAllocationPerc","protocolAllocation","_x208","getSushiswapPoolTokenPrice","_ref200","_callee126","_ref201","_ref202","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref203","_ref204","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","poolTokenPrice","_context126","getSushiswapConversionRate","_x209","_ref205","_callee127","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context127","_x210","_x211","_ref206","_callee128","unires","_context128","addressForPrice","_x212","_x213","getCurveDepositedTokens","_ref207","_callee129","idleTokensBalances","remainingCurveTokens","_args129","_context129","_x214","getCurveUnevenTokenAmounts","_ref208","_callee130","amounts","max_burn_amount","unevenAmounts","_context130","getCurveDepositContract","_x215","_x216","_callee131","curveRatesInfo","_context131","strategyTokens","getCurveAPYContract","_callee132","blocksForPrevTokenPrice","_ref211","_ref212","prevTokenPrice","blocksMultiplier","curveAPR","_context132","getCurveTokenSupply","_callee133","_context133","getCurvePoolContract","_callee134","_args134","_context134","_callee135","_args135","_context135","_ref216","_callee136","_ref217","_ref218","_context136","_x217","_callee137","depositContractInfo","_context137","getCurveZapContract","_callee138","zapContractInfo","_context138","_callee139","poolContractInfo","_context139","getCurveSwapContract","_callee140","migrationContractInfo","_context140","getCurveIdleTokensAmounts","_callee142","max_slippage","curveTokenSupply","curveTokenShare","n_coins","_args142","_context142","_ref224","_callee141","coinIndex","curveIdleTokens","_context141","migrationParams","_x218","getCurveTokensAmounts","_callee144","useCoinIndex","_args144","_context144","_ref226","_callee143","_ref227","_ref228","idleTokenPrice","totalTokenSupply","_context143","_x219","getCurveAmounts","_ref229","_callee146","_args146","_context146","_ref230","_callee145","_context145","_x222","_x220","_x221","getCurveTokenAmount","_ref231","_callee147","_args147","_context147","_x223","getCurveSlippage","_ref232","_callee148","uneven_amounts","depositContract","_ref233","_ref234","Sv","_args148","_context148","_x224","_x225","_ref235","_callee149","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","disabledTokens","aaveIncentivesController_address","IAaveIncentivesController_name","_ref236","_ref237","aTokenTotalSupply","assetData","aaveAllocationPerc","aaveSpeed","secondsPerYear","aavePoolShare","_args149","_context149","IAaveIncentivesController","emissionPerSecond","_x226","_callee151","_args151","_context151","_ref239","_callee150","_ref240","_ref241","_context150","_x227","getWMaticApr","_ref242","_callee152","maticConversionRate","wMaticTokenConfig","wMaticApr","distributionSpeed","destTokenConfig","wMaticValue","_args152","_context152","_x228","_x229","getStkAaveApr","_ref243","_callee153","aaveConversionRate","stkAaveAPR","stkAaveValue","_args153","_context153","_x230","_x231","getCompAPR","_ref244","_callee154","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args154","_context154","_x232","_x233","getCompSpeed","_ref245","_callee155","cTokenAddress","compSpeed","_context155","_x234","_ref246","_callee156","cTokenInfo","compoundAllocationPerc","_ref247","_ref248","cTokenTotalSupply","compoundPoolShare","_args156","_context156","_x235","_callee158","_args158","_context158","_ref250","_callee157","_ref251","_ref252","_context157","_x236","_callee160","_args160","_context160","_ref254","_callee159","_ref255","_ref256","compApr","_context159","_x237","getTokensCsv","_callee163","csv","_context163","prototype","sum","pv","cv","avg","_ref258","_callee162","strategy","_context162","_ref259","_callee161","rates","header","aprAvg","scoreAvg","lastRow","_context161","protocolsData","p1","foundProtocol","p2","rate","idleRate","score","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","avgScore","_x239","_x238","_callee165","govToken","convertToken","_args165","_context165","_ref261","_callee164","compTokenBalance","_context164","_x240","getGovTokensFarming","tokenGovTokens","getTokenGovTokens","speed","mode","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref262","_callee167","govTokensUserDistribution","_args167","_context167","_ref263","_callee166","_context166","_x242","_x241","_ref264","_callee169","govTokensDistribution","_args169","_context169","_ref265","_callee168","govSpeed","_context168","_x244","_x243","getGovTokensAprs","_ref266","_callee171","govTokensAprs","_args171","_context171","_ref267","_callee170","_ref268","_ref269","_ref270","_ref271","cTokenConfig","_context170","aprTooltipMode","_x247","_x245","_x246","_callee173","_args173","_context173","_ref273","_callee172","govTokenBalance","tokenConversionRate","fromTokenConfig","_context172","_x248","_callee174","checkShowBalance","govTokensUserBalances","govTokensEarnings","_args174","_context174","getGovTokensUserBalances","govTokenAmount","getGovTokensIndexes","_ref275","_callee176","govTokensAmounts","_context176","getGovTokensUserAmounts","_ref276","_callee175","_context175","getGovTokenAddessByIndex","_x251","_x252","_x249","_x250","_ref277","_callee177","_context177","_x253","_x254","_ref278","_callee178","_context178","_x255","_x256","_callee181","govTokenConfigForced","_args181","_context181","_ref280","_callee180","_context180","_ref281","_callee179","_context179","_x258","_x259","_x257","getTokenFees","_callee182","_args182","_context182","_callee183","_ref284","_ref285","feePercentage","gain","fees","_args183","_context183","_ref286","_callee184","_args184","_context184","_x260","getTotalTVL","_callee185","tokensTVL","_context185","getTokensTVL","totalTVL","tokenInfo","tokenTVL","_callee189","_context189","_ref289","_callee188","_context188","_ref290","_callee187","oldTokenTVL","idleTokenName","_ref291","_ref292","oldTokenConfig","_ref296","_ref297","oldTokenPrice","oldTotalSupply","_context187","showAUM","_ref293","_callee186","_ref294","_ref295","govTokenConversionRate","govTokenBalanceConverted","_context186","_x263","oldProtocols","oldProtocol","protocolPos","_x262","_x261","getSubstackLatestFeed","_callee190","endpointInfo","idleSubstackFeed","latestFeed","_context190","getAggregatedStats","_callee192","allNetworks","networkIds","totalAUM","_args192","_context192","_ref300","_callee191","tvls","_context191","getAggregatedStats_chain","_x264","_callee196","avgAPR","_args196","_context196","_ref302","_callee195","_context195","_ref303","_callee194","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context194","_ref304","_callee193","_ref305","_ref306","_context193","_x267","_x266","_x265","getTokenApy","_ref307","_callee197","_context197","_x268","getTokensToMigrate","_callee200","tokensToMigrate","_args200","_context200","_ref309","_callee199","_context199","_ref310","_callee198","_ref311","_context198","_x270","_x269","getProtocolsTokensBalances","_callee202","tokenBalances","minTokenBalance","protocolsTokens","_args202","_context202","_ref313","_callee201","tokenContract","_context201","_x271","_ref314","_callee203","_args203","_context203","_x272","_x273","_x274","getAvgAPYStats","_ref315","_callee204","apiResults","_args204","_context204","_x275","_x276","_ref316","_callee205","count","_conversionRate","ToTokenConfig","_args205","_context205","_x277","_x278","getTokenScore","_ref317","_callee206","_ref318","_ref319","tokenScore","_context206","protocolScore","getTokenScoreApi","_x279","_x280","_ref320","_callee207","scores","_context207","_x281","_x282","_ref321","_callee208","idleGovTokenShowAPR","idleAPR","_args208","_context208","_x283","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","defaultOpacity","hidden","interactive","rainbow","BuyModal","selectedMethod","availableMethods","selectedCountry","selectedProvider","availableProviders","buyToken","renderPaymentMethod","buyParams","onSuccess","onClose","paymentProvider","initParams","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","getAccountBalance","payments","getInitParams","render","goBack","resetModal","componentWillMount","showInline","getProviderInfo","providerInfo","getInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","supportedMethods","providerSupportToken","supportedTokens","defaultPaymentProvider","showDefaultOnly","selectProvider","ethAvailable","tokenAvailable","selectMethod","selectToken","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","supportedCountries","countryCode","countries","remoteResources","scriptID","remoteResourceParams","precall","parentElement","head","stylesheetId","methodInfo","loadAvailableMethods","_this4","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","showAllTokens","InnerComponent","flexWrap","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","placeholder","noOptionsMessage","inputValue","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","Footer","TableRow","FieldComponent","fieldComponent","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","cardId","rowProps","rowId","colInfo","colIndex","visibleOnDesktop","visible","fieldIndex","colProps","DashboardCard","mouseOver","isRainbow","active","onMouseOut","setMouseOver","onMouseOver","titleParentProps","description","placement","TableHeader","pb","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","desc","FastBalanceSelector","onMouseDown","Staking","selectedOption","toolProps","SelectedComponent","component","AssetField","FlexLoader","GenericFaqs","openedAnswer","selectedSection","questions","setSection","showSections","isSelected","borderBottom","q","toggleAnswer","SendTxWithBalance","permitEnabled","showPermitBox","approveEnabled","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","executeTx","_amount","_params","checkLimit","eventValue","getPermitTransactionParams","approveCallback","actionChanged","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","contractChanged","tokenConfigChanged","viewOnly","connectorName","infoBox","steps","step","stepIndex","ExtLink","checked","togglePermitEnabled","approveDescription","RoundButton","balanceSelectorInfo","ConnectBox","LimitReachedModal","possibleConstructorReturn","getPrototypeOf","componentDidUpdate","iconHeight","TrancheDetails","infoText","canUnstake","canWithdraw","activeModal","balanceProp","trancheBalance","selectedAction","userHasAvailableFunds","loadActionData","selectedProtocol","selectedTranche","trancheAPY","cdoConfig","cantUnstake","cantWithdraw","functions","trancheLimit","otherTrancheType","otherTrancheDetails","showSelectButton","selectTrancheType","setSelectedAction","src_SendTxWithBalance_SendTxWithBalance","transactionSucceeded","contractApprovedCallback","components_LimitReachedModal","PortfolioEquityTranches","transactionsList","ChartCustomTooltip","ChartCustomTooltipRow","FundsOverviewTranche","aggregatedValues","govTokensTotalApr","govTokensUserBalance","govTokensTotalBalance","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","govTokensTotalBalanceTooltip","src_PortfolioEquityTranches_PortfolioEquityTranches","Title","Heading","h3","StakingRewardsTranche","stakingRewardsRows","loadUserRewards","portfolioChanged","trancheConfigChanged","rewardTokensInfo","trancheStakedAmount","trancheBalanceInfo","rewardToken","rewardTokenInfo","staked","reedemable","tokenIcon","CustomList","Button","claimCallback","TranchePage","componentLoaded","loadTransactions","trancheType","tranchesDetails","filteredTranchesTypes","src_TrancheDetails_TrancheDetails","userHasFunds","src_StakingRewardsTranche_StakingRewardsTranche","src_FundsOverviewTranche_FundsOverviewTranche","TransactionsList","availableActions","src_GenericFaqs_GenericFaqs","","TranchesList","enabledProtocols","alt","baseName","showTooltip","justifyItems","long","features","feature","TrancheFlash","flashData","bold","subtitle","openTooltipModal","helpcircle","arrows","seniorinfo","juniorinfo","TrancheWelcome","aligItems","src_TrancheFlash_TrancheFlash","TrancheBox","GenericPieChart","showLegend","itemWidth","itemHeight","translateY","symbolSize","anchor","direction","itemTextColor","symbolShape","effects","defaultImage","defaultLabel","TotalBalanceCounter","counterEnd","counterStart","loadTotalEarnings","counterStyle","build_default","TotalEarningsCounter","Tranches","trancheRoute","useTrancheType","portfolioLoaded","allocationChartData","portfolioEquityQuickSelection","loadPortfolio","then","urlParams","param1","param3","param2","availableTranchesChanged","tranchesConfig","tranchesTokens","tranchesBalances","weight","portfolioDonutData","balanceValue","trancheName","balanceInfo","_this5","breadcrumbPath","src_TranchePage_TranchePage","src_TotalBalanceCounter_TotalBalanceCounter","src_TotalEarningsCounter_TotalEarningsCounter","src_GenericPieChart_GenericPieChart","setPortfolioEquityQuickSelection","src_TranchesList_TranchesList","selectTranche","src_TrancheWelcome_TrancheWelcome","textSize","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","selectDestToken","initProps","buttonId","loadTokens","fromTokenChanged","destTokenChanged","loadKyberWidget","LpStaking","globalStats","statsLoaded","programEnded","rewardMultiplier","accountingData","programEndDate","successMessage","rewardTokenPrice","tokenWrapperProps","showTokenWrapperEnabled","updateData","selectedActionChanged","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","normalizedInputValue","unstakeRewards","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","initialLockedShares","durationSec","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","stakedTokens","unstakedTokensLog","unstakedTokens","rewardTokenConfig","receivedRewardsLog","receivedRewards","startContract","wrapMethod","destContract","unwrapMethod","_this6","loadStats","_this7","StatsCard","isStake","isUnstake","isStats","txAction","poolLink","statInfo","setAction","IdleStaking","maxApr","lockPeriods","lockedEnd","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","add","mDate","maxDate","isAfter","endDate","endDateTime","maxDateTime","stkIDLEAmount","_value","_unlock_time","etherscanRewardsTxs","tokenTotalSupply","claimableRewards","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","totalRewardsDays","totalClaimedUser","recipient","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","event","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","_this8","isLock","isClaim","isIncrease","canIncrease","maxHeight","reward","setIncreaseAction","changelockPeriodInput","selectLockPeriod","getIncreaseTimeParams","NexusMutual","quote","1","2","periodOptions","30","60","90","365","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","getClaimTransactionParams","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","validClaimableCoverFromParam","paramIsValidToken","changeSelectedToken","selectedUnderlyingChanged","loadTokenData","isETH","getPoolCapacity","coverData","period","coverAmount","currency","asset","quoteURL","encodeParameters","priceInNXM","expiresAt","generatedAt","COVER_TYPE","basePrice","priceWithFee","mul","divn","amountInWei","textDecoration","activeColor","reset","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","connectAndValidateAccount","PortfolioDonut","totalFunds","parentWidth","tokenPercentage","tokenColorHsl","radialLabelsLinkOffset","strategyIcon","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","earningsPercStep","possibleSteps","maxPossibleStep","maxCountStep","orderedTokensEarnings","estimationStep","option","setEstimationStepsPerc","tokenIndex","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","borderTop","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","estimationLabel","DashboardIconButton","StrategyPage","remainingTokens","portfolioLoading","availableGovTokens","polygonTransactions","portfolioEquityStartDate","batchedDepositsAvailableTokens","polygonTransactionsAvailableTokens","availableTokensChanged","polygonBridgeConfig","batchInfo","redeemable","actionIcon","actionIconProps","apyLong","yieldFarming","strategyName","src_PortfolioDonut_PortfolioDonut","toolName","toolIndex","toolConfig","src_DashboardIconButton_DashboardIconButton","ActiveCoverages","AssetsList","showDirection","src_EarningsEstimation_EarningsEstimation","paginationEnabled","BatchDeposit","canClaim","canDeposit","usePermit","hasDeposited","permitSigned","batchCompleted","claimSucceeded","executeSucceeded","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","functionInfo","permitContract","batchDepositInfo","depositEnabled","availableStrategiesKeys","selectStrategy","obj","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","Migrate","useMetaTx","showActions","isMigrationTool","showBalanceSelector","migrationIcon","toMigrate","callbackPermit","migrationText","minPoolSize","PolygonBridge","txsToExit","dataLoaded","defaultTransaction","selectedTransaction","rootTokenConfig","childTokenConfig","encodeParameter","depositData","sendValue","exitCalldata","ERC20Predicate","DepositManager","depositedTokensLog","depositedTokensEvent","EtherPredicate","maticNetwork","mainNetworkId","mainNetworkName","withdrawnTokensEvent","withdrawnTokensLog","withdrawnTokens","Transfer","paramIsToken","defaultAction","loadPolygonTxs","isExit","isDeposit","isWithdraw","selectTransaction","exitCallback","getExitTransactionParams","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","balancerTokenConfig","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","TokenMigration","changeFromToken","convertTool","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actions","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","validateForm","checkInputs","vesterImplementation","proxyCreated","deployedContractsAddresses","implementation","proxy","vestingPeriod","availableBalance","depositAmounts","claimedTokensLog","returnString","fieldPattern","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","defineProperty","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","fieldType","pattern","inputChange","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","env","process","appName","forumURL","telegramURL","discordURL","twitterURL","darkModeEnabled","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","messages","scoreShort","apyShort","totalProfitPerc","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","riskAdjustedDisabledMessageDeposit","riskScore","curveInstructions","riskAdjustedDisabledMessageRedeem","pageView","modals","first_deposit_referral","first_deposit_share","welcome","dashboard","baseRoute","governance","test","availableContracts","FeeTreasury","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","12","7","delegates","imageInactive","poolContract","CurvePool","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","idleUSDCYield","idleUSDTYield","DAI","USDC","SLP","showAPR","showPrice","137","COMP","stkAAVE","aToken","WMATIC","ERC20","ProtocolDataProvider","useInfuraProvider","ChildChainManager","UniswapRouter","UniswapV2Router02","SushiswapRouter","SushiV2Router02","RootChainManager","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","BalancerExchangeProxy","zeroExInstant","orderSource","affiliateInfo","feeRecipient","tranchflash","bubble","stake","unstake","extraicons","best","iconDark","iconInactive","iconInactiveDark","risk","tools","forum","leaderboard","overview","delegate","comingSoon","titlePostfix","enabledEnvs","govTokensEnabled","chartColor","descShort","descLong","substack","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","chart","labelTextColorModifiers","performanceTooltip","MATIC","USD","USDT","TUSD","SUSD","WBTC","WETH","RAI","disabledCharts","FEI","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","42","3","4","5","1337","80001","isForked","requiredConfirmations","enabledNetworks","accountBalanceMinimum","infura","REACT_APP_INFURA_KEY","polygon","baseUrl","networkPairs","nexus","covalent","REACT_APP_COVALENT_KEY","etherscan","REACT_APP_ETHERSCAN_KEY","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","urls","biconomy","enableLogin","disabledWallets","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","getNetwork","networkName","appOrigin","appId","renderNotifications","notifications","subComponent","stkIDLE","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","stakePolygon","nexusMutual","IdleTokenV4","NexusMutualDistributor","NexusMutualIncidents","b2bVesting","B2BVester","polygonBridge","StateSender","ChildERC20","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","tokenSwap","ETH","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","bank","card","wallet","wyre","envParams","accountId","prod","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","wyreStyle","ramp","hostAppName","hostApiKey","REACT_APP_RAMP_KEY","hostLogoUrl","swapAsset","RampInstantSDK","purchase","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","tokenParams","RimbleWeb3_context","connector","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","Tos","h1","h2","listStyle","theme_dark","exit","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","NetworkUtil","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","splice","gnosisIndex","connectorInfo","walletIcon","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","INFURA_KEY","RimbleTransactionContext","createContext","currentWeb3","permitClient","accountBalance","initWeb3","maticPlasmaClient","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","isSupportedNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","handleNetworkChanged","reload","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","customAddressChanged","contextAccountChanged","accountDisconnected","availableStrategiesChanged","gnosisSafeLoaded","setNetwork","initCurrentWeb3","useWeb3Provider","web3InfuraRpc","connectorNameChanged","web3Host","web3Provider","forceCallback","polygonConfig","web3PolygonRpc","maticProvider","parentProvider","maticPOSClientConfig","maticPlasmaClientConfig","web3Callback","originalWeb3","biconomyWeb3Provider","library","IFrameEthereumProvider","MaticJs","MaticPOSClient","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","_args7","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","race","$crisp","notificationId","content","Sentry","increaseAmount","_ref15","balanceOf","determineAccountLowBalance","openConnectionModal","_args25","getNetworkType","getNetworkId","currentNetworkChanged","requiredNetworkChanged","_args27","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","IdleCDO","IdleStrategy","IdleCDOTrancheRewards","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","cachedKeyFound","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","warn","jQuery","setThemeMode","closeIframe","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCustomAddress","loadCurrentEnvironment","strategyChanged","networkChanged","_this9","hasMetamask","store","themeDark","_this10","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","recreateOnNetworkChange","recreateOnAccountChange","RimbleWeb3","needsPreflight","initContractCustomProvider","react_router","react","fallback","isDashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","registration","unregister","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","TransactionListFilters","activeFilters","assets","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","filters","filterCategory","filterValues","TableCellHeader","filterValue","filterLabel","isChecked","filterName","prevTxs","txsPerPage","totalTxs","totalPages","renderedTxs","lastBlockNumber","txsIndexes","parsedValue","loadTxs","enabledActions","hasActiveFilters","m","src_TransactionListFilters_TransactionListFilters","txHashKey","prevPage","nextPage","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","_skipRebalance","_migrationContract$me","skipMintForDeposit","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","rowsPerPage","processedRows","processRows","totalRows","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","rowIndex","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_8__","CustomField","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","anonymous","indexed","govTokensDisabled","defiPrime","crToken","cToken","yToken","iToken","CHAI","fToken","defiScoreDisabled","disabledMessageRedeemKey","disabledMessageDepositKey","footer","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","subtitleProps","BackButton","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","VariationNumber","IconDirection","iconPos","loading-dots","loading-dots--dot","dot-keyframes","currYear","getFullYear","columnWidth","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle","componentHasChildren","fieldPath","customFieldName","customFieldProps","HeadingComponent","earningsCurveStart","earningsCurveEnd","tokenAPY2","tokenAPR","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","random","aprChartRowElement","$aprChartRowElement","lineWidth","defs","linearGradientDef","offset","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","icon1","icon2","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","react_countup__WEBPACK_IMPORTED_MODULE_11___default","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","governanceTokenName","tooltipMode","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__"],"mappings":"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","file":"static/js/main.9247b9de.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trancheFlash\":\"TrancheWelcome_trancheFlash__2aaz5\",\"mobile\":\"TrancheWelcome_mobile__fIBQP\"};","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = this.props.unit && formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               border:2,\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${this.props.theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const hashChanged = prevProps.hash !== this.props.hash;\n    if (hashChanged){\n      this.loadData();\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    if (ensName){\n      text = ensName;\n    }\n    this.setStateSafe({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from \"react\";\nimport { Flex, Button } from \"rimble-ui\";\nimport LoadingSpinner from \"../LoadingSpinner/LoadingSpinner.js\";\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n      <Button onClick={this.props.handleClick} {...this.props.buttonProps}>\n        <Flex\n          flexDirection={\"column\"}\n          alignItems={\"center\"}\n          justifyContent={\"center\"}\n        >\n          <Flex width={1} display={this.props.isLoading ? \"flex\" : \"none\"}>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={this.props.isLoading ? \"none\" : \"flex\"}>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n      </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      border:1,\n      width:'40px',\n      height:'40px',\n      borderRadius:'50%',\n      mainColor:'backButtonBg',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Text, Image, Box, Loader } from \"rimble-ui\";\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass NetworkIndicator extends Component {\n\n  state = {\n    activeNetworks:[],\n    defaultNetwork:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadNetworks();\n  }\n\n  loadNetworks(){\n\n    if (!this.props.networkInitialized){\n      return false;\n    }\n\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const enabledNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n    const activeNetworks = enabledNetworks.map( networkId => {\n      const networkConfig = availableNetworks[networkId];\n      return {\n        value:networkId,\n        config:networkConfig,\n        label:networkConfig.name,\n      }\n    });\n\n    const requiredNetwork = this.functionsUtil.getRequiredNetwork();\n    const defaultNetwork = activeNetworks.find( network => network.value === requiredNetwork.id );\n\n    this.setState({\n      defaultNetwork,\n      activeNetworks\n    });\n  }\n\n  selectNetwork(networkId){\n    this.props.setRequiredNetwork(networkId);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const networkInitialized = !prevProps.networkInitialized && this.props.networkInitialized;\n    const requiredNetworkChanged = JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required);\n    if (requiredNetworkChanged || networkInitialized){\n      this.setState({\n        defaultNetwork:null\n      },() => {\n        this.loadNetworks();\n      });\n    }\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const imageSrc = `images/networks/${props.data.config.provider}.svg`;\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <Image\n              mr={2}\n              src={imageSrc}\n              width={'1.3em'}\n              height={'1.3em'}\n            />\n            <Text\n              fontSize={2}\n              fontWeight={3}\n              color={'copyColor'}\n            >\n              {props.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const selectProps = props.selectProps.value || props.data;\n      const label = selectProps.label;\n      const imageSrc = `images/networks/${selectProps.config.provider}.svg`;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n          px={0}\n        >\n          <Flex\n            {...props.innerProps}\n            p={0}\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <Image\n              mr={2}\n              src={imageSrc}\n              width={'1.3em'}\n              height={'1.3em'}\n            />\n            <Text\n              fontSize={2}\n              fontWeight={3}\n              color={'copyColor'}\n            >\n              {label}\n            </Text>\n            <Box\n              ml={2}\n              width={'8px'}\n              height={'8px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.network.isCorrectNetwork ? '#00b84a' : '#fa0000'}\n            >\n            </Box>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return this.state.defaultNetwork ? (\n      <GenericSelector\n        {...this.props}\n        name={'network'}\n        isSearchable={false}\n        innerProps={Object.assign({\n          px:1,\n          py:0,\n          height:'42px'\n        },this.props.innerProps)}\n        customOptionProps={{\n          px:0,\n          pl:3,\n          pr:0\n        }}\n        options={this.state.activeNetworks}\n        CustomOptionValue={CustomOptionValue}\n        defaultValue={this.state.defaultNetwork}\n        onChange={this.selectNetwork.bind(this)}\n        CustomValueContainer={CustomValueContainer}\n      />\n    ) : (\n      <DashboardCard\n        {...this.props}\n        cardProps={{\n          px:[2,3],\n          display:'flex',\n          width:[1,'auto'],\n          alignItems:'center',\n          justifyContent:'center',\n          height:(this.props.innerProps && this.props.innerProps.height) || '42px',\n        }}\n        isInteractive={false}\n      >\n        <Loader size={'20px'} />\n      </DashboardCard>\n    );\n  }\n}\n\nexport default NetworkIndicator;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'cardBg'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              my={0}\n              fontWeight={3}\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              color={this.props.isOpened ? 'link' : 'dark-gray'}\n            >\n              {this.props.question}\n            </Heading.h4>\n          </Box>\n          <Flex\n            width={1/5}\n            justifyContent={'flex-end'}\n          >\n            <Icon\n              size={\"1.5em\"}\n              color={this.props.isOpened ? 'link' : 'copyColor'}\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n        >\n          {this.props.isOpened &&\n            <Text.p\n              textAlign={'justify'}\n              fontSize={[1,2]}\n              dangerouslySetInnerHTML={{ __html: this.props.answer }}\n            >\n            </Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass Base extends Component {\n\n  state = {\n    loaded:false,\n    activeCoverages:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadCoverages();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadCoverages();\n    }\n  }\n\n  async loadCoverages(){\n    if (!this.props.account){\n      return false;\n    }\n\n    const coverages = await this.functionsUtil.getActiveCoverages(this.props.account);\n    const activeCoverages = [];\n    if (coverages && coverages.length>0){\n      coverages.forEach( c => {\n        if (!this.props.availableTokens || !this.props.availableTokens.length || this.props.availableTokens.includes(c.collateral)){\n          const statusColors = this.props.theme.colors.transactions.status;\n          let statusIcon = 'VerifiedUser';\n          let statusColor = statusColors.completed;\n          switch (c.status){\n            case 'Expired':\n              statusIcon = 'Error';\n              statusColor = statusColors.failed;\n            break;\n            case 'Claimed':\n              statusIcon = 'Error';\n              statusColor = statusColors.pending;\n            break;\n            default:\n            case 'Active':\n              statusIcon = 'VerifiedUser';\n              statusColor = statusColors.completed;\n            break;\n          }\n\n          const statusIconProps = {\n            color:statusColor\n          };\n\n          const portfolioCoverage = c.portfolioCoverage || 'N/A';\n\n          activeCoverages.push(Object.assign(c,{\n            statusIcon,\n            statusIconProps,\n            portfolioCoverage\n          }));\n        }\n      })\n    }\n\n    this.setState({\n      loaded:true,\n      activeCoverages\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.activeCoverages && this.state.activeCoverages.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.activeCoverages && this.state.activeCoverages.length>0 ? (\n            <CustomList\n              rows={this.state.activeCoverages}\n              handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n              cols={[\n                {\n                  title:'PROTOCOL',\n                  props:{\n                    width:[0.28,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:[this.props.themeMode === 'dark' ? 'protocolImageDark' : 'protocolImage']\n                    },\n                    {\n                      type:'text',\n                      path:['protocolName'],\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.33,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:['collateralIcon']\n                    },\n                    {\n                      type:'text',\n                      path:['collateral'],\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.24, 0.12],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['balance'],\n                      props:{\n                        decimals: this.props.isMobile ? 2 :  4,\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                      props:{\n                        ml:[1,2],\n                        style:{\n                          textTransform:'uppercase'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'EXPIRATION DATE',\n                  props:{\n                    width:0.19,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['expirationDate'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'COVERED FUNDS',\n                  props:{\n                    width:0.14,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['portfolioCoverage'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.15,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      name:'custom',\n                      path:['statusIcon'],\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'',\n                  mobile:false,\n                  props:{\n                    width:0.17,\n                  },\n                  parentProps:{\n                    width:1\n                  },\n                  fields:[\n                    {\n                      type:'button',\n                      name:'custom',\n                      funcProps:{\n                        label:(props) => (props.row.actionLabel),\n                        disabled:(props) => (props.row.actionDisabled)\n                      },\n                      props:{\n                        width:1,\n                        fontSize:3,\n                        fontWeight:3,\n                        height:'45px',\n                        borderRadius:4,\n                        boxShadow:null,\n                        mainColor:'redeem',\n                        size: this.props.isMobile ? 'small' : 'medium',\n                        handleClick:(props) => props.row.status!=='Expired' && props.row.actionUrl && this.functionsUtil.openWindow(props.row.actionUrl)\n                      }\n                    }\n                  ]\n                }\n              ]}\n              {...this.props}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default Base;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || !tx.action || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      const tokenAddress = this.functionsUtil.getAvailableTokenAddress(token,this.props.selectedStrategy);\n      tokensData[token] = await this.functionsUtil.getTokenApiData(tokenAddress,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // console.log('tokensData',tokensData);\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    // debugger;\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    let axisBottomIndex = 0;\n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        tickValues:'every day',\n        legendPosition: 'middle',\n        format: (value) => {\n          if (axisBottomIndex++ % daysFrequency === 0){\n            return this.functionsUtil.strToMoment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n          }\n        },\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import React, { Component } from \"react\";\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign(\n      {\n        py: 1,\n        width: \"auto\",\n        px: [\"12px\", 3]\n      },\n      this.props.cardProps\n    );\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isInteractive={true}\n        isActive={this.props.isActive}\n        isDisabled={this.props.isDisabled}\n        handleClick={this.props.handleClick}\n        backgroundColor={\"blue\"}\n      >\n        <Flex\n          mx={this.props.margin ? this.props.margin : 0}\n          my={1}\n          alignItems={\"center\"}\n          flexDirection={\"row\"}\n          justifyContent={this.props.align ? this.props.align : \"center\"}\n        >\n          {this.props.image ? (\n            <Image\n              align={\"center\"}\n              src={this.props.image}\n              height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              {...this.props.imageProps}\n            />\n          ) : this.props.useIconOnly ? (\n            <Icon\n              align={\"center\"}\n              name={this.props.icon}\n              size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n              {...this.props.iconProps}\n            />\n          ) : (\n            <Flex\n              mr={this.props.isSidebar ? 0 : 2}\n              p={this.props.isSidebar ? 0 : [\"4px\", \"7px\"]}\n              borderRadius={\"50%\"}\n              alignItems={\"center\"}\n              justifyContent={\"center\"}\n              backgroundColor={\n                this.props.iconBgColor\n                  ? this.props.iconBgColor\n                  : this.props.theme.colors.transactions.actionBg.redeem\n              }\n            >\n              <Icon\n                align={\"center\"}\n                name={this.props.icon}\n                size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n                {...this.props.iconProps}\n              />\n            </Flex>\n          )}\n          <Text fontWeight={3} fontSize={[1, 3]} {...this.props.textProps}>\n            {this.props.text}\n          </Text>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;\n","// import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport CustomField from '../CustomField/CustomField';\n// import SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import GenericChart from '../GenericChart/GenericChart';\n// import CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport { Image, Text, Loader, Button, Flex, Icon } from \"rimble-ui\";\n// import VariationNumber from '../VariationNumber/VariationNumber';\n// import AllocationChart from '../AllocationChart/AllocationChart';\n// import CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\n\nclass TrancheField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const trancheChanged = prevProps.tranche !== this.props.tranche;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const protocolChanged = prevProps.protocol !== this.props.protocol;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || protocolChanged || trancheChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      // console.log('componentDidUpdate-1',fieldChanged,tokenChanged,protocolChanged,trancheChanged,accountChanged,transactionsChanged,(contractInitialized && !this.state.ready));\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      // console.log('componentDidUpdate-2',mobileChanged,themeModeChanged);\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n\n    if (this.componentUnmounted || !this.props.protocol || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    const formatValue = typeof this.props.formatValue !== 'undefined' ? this.props.formatValue : true;\n    const addTokenName = typeof this.props.addTokenName !== 'undefined' ? this.props.addTokenName : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        default:\n          output = await this.functionsUtil.loadTrancheField(fieldName,fieldProps,this.props.protocol,this.props.token,this.props.tranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account,addGovTokens,formatValue,addTokenName);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    // const tokenName = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'label']) || this.functionsUtil.capitalize(this.props.token);\n\n    // const tokenConfig = this.props.tokenConfig;// || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    // console.log('TrancheField',fieldInfo.name,fieldProps);\n    const flexProps = fieldProps.flexProps;\n    delete fieldProps.flexProps;\n\n    switch (fieldInfo.name){\n      case 'protocolIcon':\n        output = (\n          <Image src={`images/protocols/${this.props.protocol}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'trancheTypeIcon':\n        const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.tranche]);\n        output = (\n          <Flex\n            p={'6px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={`rgba(${trancheDetails.color.rgb.join(',')},0.2)`}\n            {...flexProps}\n          >\n            <Icon\n              {...fieldProps}\n              align={'center'}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n            />\n          </Flex>\n        );\n      break;\n      case 'tokenIcon':\n        output = (\n          <Image src={`images/tokens/${this.props.token}.svg`} {...fieldProps} />\n        );\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'custom':\n        output = (\n          <CustomField\n            row={this.props}\n            fieldInfo={fieldInfo}\n          />\n        );\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesCounter.feesStart && this.state.feesCounter.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesCounter.feesEnd)}\n            start={parseFloat(this.state.feesCounter.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsCounter && this.state.earningsCounter.earningsStart && this.state.earningsCounter.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCounter.earningsEnd)}\n            start={parseFloat(this.state.earningsCounter.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = this.state[fieldInfo.name] && Object.keys(this.state[fieldInfo.name]).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.values(this.state[fieldInfo.name]).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.4em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state[fieldInfo.name]).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TrancheField;\n","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            height={'100%'}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput,this.props.themeMode==='dark' ? styles.dark : null,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      // console.log('CustomOption',this.props.customOptionProps);\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? 'selectBgFocused' : 'selectBg' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      // console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    // console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    if (currentNetwork.provider === 'polygon'){\n      return 30;\n    } else {\n      let prediction = null;\n      if (this.state.predictTable){\n        this.state.predictTable.forEach((p,i) => {\n          if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n            prediction = p;\n            return true;\n          }\n        });\n      }\n\n      if (this.state.blockTime && prediction){\n        const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n        const blocksWait = pdValues[0];\n        const blockInterval = this.state.blockTime.block_time;\n        let txMeanSecs = blocksWait * blockInterval;\n        txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n        this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n        return txMeanSecs; // Customized\n      }\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    // console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          window.setTimeout(() => {\n            this.initProgressBar();\n          },1000);\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in {this.functionsUtil.capitalize(currentNetwork.explorer)}\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from \"polished\";\n\n// theme.js\nexport default {\n  breakpoints: [\"52em\", \"64em\"],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: [\"0\", \"4px\", \"8px\", \"16px\", \"2rem\"],\n  widths: [0, 16, 32, 64, 128, 256, 550],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, \"1px solid #eee\", \"1px solid #b6c2ff\"],\n  borderWidths: [\"0\", \"1px\", \"2px\", \"4px\"],\n  shadows: [\n    \"0\",\n    \"0px 2px 4px rgba(0, 0, 0, 0.1)\",\n    \"0 7px 14px rgba(50,50,93,.1)\",\n    \"1px 1px 0px rgba(0,0,0,0.2)\",\n    \"0px 0px 16px 2px rgba(0,54,255,0.3)\"\n  ],\n  opacity: {\n    disabled: 0.4\n  },\n  colors: {\n    primary: blue.base,\n    \"gradient-bg\": \"linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)\",\n    \"primary-light\": blue.light[1],\n    \"primary-dark\": blue.dark[1],\n    bgBlue: \"#0030e0\",\n    blue: \"#0036ff\",\n    tick: \"#00b84a\",\n    \"dark-blue\": \"#00219a\",\n    skyBlue: \"#00abfe\",\n    lightBlue: \"#79f4e1\",\n    copyColor: \"#3F3D4B\",\n    subColor: \"#a7a7a7\",\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    green:'#00b84a',\n    /*\n    NEW COLORS\n    */\n    connect: \"#0042F5\",\n    newblue: \"#2B65D9\",\n    alert: \"#ff9900\",\n    arrowActive: \"#4f4f4f\",\n    arrowInactive: \"#d8d8d8\",\n    selectBgFocused: \"#fbfbfb\",\n    selectBg: \"#ffffff\",\n    backButtonBg: \"#ffffff\",\n    lineChartStroke: \"#dbdbdb\",\n    wrongNetworkBannerBg: \"#ffffff\",\n    dashboardBg: \"#f9fafd\",\n    statValue: \"#959595\",\n    boxBorder: \"#eeeeee\",\n    cellTitle: \"#a3a4a5\",\n    cellText: \"#a6a6a6\",\n    divider: \"#d8d8d8\",\n    divider2: \"#EBEBEB\",\n    counter: \"#5d5d5d\",\n    redeem: \"#00a9fe\",\n    link: \"#0036ff\",\n    deposit: \"#0239ff\",\n    migrate: \"#00a9fe\",\n    legend: \"#c9c9c9\",\n    menuBg: \"#fff\",\n    menuHover: \"#f3f6ff\",\n    cardBg: \"#fff\",\n    flashColor: \"#3f4e9a\",\n    menuRightBorder: \"#eee\",\n    menuIconActive:'#2a65d9',\n    cardBgContrast: \"#fafafa\",\n    cardHoverShadow: \"0px 0px 0px 1px rgba(0, 54, 255, 0.3)\",\n    cardBgHover: \"#f7f8ff\",\n    cardBorder: \"#eee\",\n    pageActive: \"#4f4f4f\",\n    pageInactive: \"#d8d8d8\",\n    transactions: {\n      action: {\n        send: \"#10a0dd\",\n        swap: \"#3d53c0\",\n        boost: \"#ffff00\",\n        redeem: \"#10a0dd\",\n        swapout: \"#10a0dd\",\n        deposit: \"#3d53c0\",\n        curvein: \"#10a0dd\",\n        receive: \"#3d53c0\",\n        migrate: \"#3d53c0\",\n        default: \"#4f4f4f\",\n        curveout: \"#3d53c0\",\n        withdraw: \"#10a0dd\",\n        curvedepositin: \"#10a0dd\",\n        curvedepositout: \"#3d53c0\"\n      },\n      actionBg: {\n        send: \"#ceeff6\",\n        swap: \"#ced6ff\",\n        boost: \"#ff7979\",\n        redeem: \"#ceeff6\",\n        swapout: \"#ceeff6\",\n        deposit: \"#ced6ff\",\n        curvein: \"#ceeff6\",\n        default: \"#dadada\",\n        receive: \"#ced6ff\",\n        migrate: \"#ced6ff\",\n        withdraw: \"#ceeff6\",\n        curveout: \"#ced6ff\",\n        curvedepositin: \"#ceeff6\",\n        curvedepositout: \"#ced6ff\"\n      },\n      status: {\n        completed: \"#00b84a\",\n        pending: \"#a5a5a5\",\n        failed: \"#fa0000\"\n      }\n    },\n    blacks: [\n      \"rgba(0,0,0,.0125)\",\n      \"rgba(0,0,0,.025)\",\n      \"rgba(0,0,0,.05)\",\n      \"rgba(0,0,0,.1)\",\n      \"rgba(0,0,0,.2)\",\n      \"rgba(0,0,0,.3)\",\n      \"rgba(0,0,0,.4)\",\n      \"rgba(0,0,0,.5)\",\n      \"rgba(0,0,0,.6)\",\n      \"rgba(0,0,0,.7)\",\n      \"rgba(0,0,0,.8)\",\n      \"rgba(0,0,0,.9)\"\n    ],\n    whites: [\n      \"rgba(255,255,255,.0125)\",\n      \"rgba(255,255,255,.025)\",\n      \"rgba(255,255,255,.05)\",\n      \"rgba(255,255,255,.1)\",\n      \"rgba(255,255,255,.2)\",\n      \"rgba(255,255,255,.3)\",\n      \"rgba(255,255,255,.4)\",\n      \"rgba(255,255,255,.5)\",\n      \"rgba(255,255,255,.6)\",\n      \"rgba(255,255,255,.7)\",\n      \"rgba(255,255,255,.8)\",\n      \"rgba(255,255,255,.9)\"\n    ]\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, \"#AAA\"),\n      backgroundColor: tint(0.9, \"#AAA\"),\n      borderColor: \"#AAA\"\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: \"#f3f6ff\",\n      borderColor: \"#b6c2ff\"\n    }\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      \"--main-color\": blue.base,\n      \"--contrast-color\": blue.text\n    },\n    normal: {\n      color: baseColors.black,\n      \"--contrast-color\": baseColors.black\n    },\n    success: {\n      \"--main-color\": green.base,\n      \"--contrast-color\": green.text\n    },\n    danger: {\n      \"--main-color\": red.base,\n      \"--contrast-color\": red.text\n    }\n  },\n  buttonSizes: {\n    small: {\n      fontSize: \"0.75rem\",\n      height: \"2rem\",\n      minWidth: \"2rem\",\n      padding: \"0 1rem\"\n    },\n    medium: {\n      fontSize: \"1rem\",\n      height: \"3rem\",\n      minWidth: \"3rem\"\n    },\n    large: {\n      fontSize: \"1.5rem\",\n      height: \"4rem\",\n      minWidth: \"4rem\",\n      borderRadius: \"2rem\"\n    }\n  }\n};\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__2QCmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n          if (!newState.width){\n            newState.width = chartHeight;\n          }\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    newState.height = newState.height || newState.width;\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n\n      console.log('callback',tx,error);\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    } else if (typeof this.props.transactionParams === 'object'){\n      params = this.props.transactionParams;\n    }\n\n    if (!params){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        case 'custom':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        const tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol.toUpperCase()}</Text>\n        );\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.functionsUtil.getArrayPath(fieldInfo.path,this.props.transaction);\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n            customValue = null;\n          break;\n          case 'image':\n            CustomComponent = Image;\n            fieldProps.src = customValue;\n            customValue = null;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            customValue = null;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : <CustomComponent {...fieldProps} />\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const currentNetworkId = this.functionsUtil.getRequiredNetworkId();\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      const disabledTokens = this.functionsUtil.getArrayPath(['disabledTokens',currentNetworkId],this.tokenConfig);\n\n      if (disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import Web3 from \"web3\";\nimport React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\nimport availableTokens from '../configs/availableTokens';\nimport IAaveIncentivesController from '../abis/aave/IAaveIncentivesController.json';\n\nconst ethereumjsABI = require('ethereumjs-abi');\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0,1).toUpperCase()+str.substr(1) : '';\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  replaceArrayPropsRecursive = (arr1,arr2,props=null) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        if (typeof arr2[p]==='function'){\n          arr1[p] = arr2[p](props);\n        } else if (typeof arr2[p]==='object'){\n          arr1[p] = {...arr1[p],...this.replaceArrayPropsRecursive(arr1,arr2[p],props)};\n        } else {\n          arr1[p] = arr2[p];\n        }\n      });\n    }\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    if (!tokenConfig.idle){\n      return null;\n    }\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n  addEthereumChain = (chainId) => {\n    const web3 = this.getCurrentWeb3();\n\n    // console.log('addEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function'){\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network','availableNetworks',chainId]);\n\n    // console.log('networkConfig',networkConfig);\n\n    if (!networkConfig){\n      return false;\n    }\n\n    const chainName = networkConfig.chainName || networkConfig.name;\n    const providerConfig = this.getGlobalConfig(['network','providers',networkConfig.provider]);\n    const blockExplorerUrl = this.getGlobalConfig(['network','providers',networkConfig.explorer,'baseUrl',chainId]);\n    const rpcUrl = (providerConfig.publicRpc && providerConfig.publicRpc[chainId]) || (providerConfig.rpc[chainId]+providerConfig.key);\n    const params = [{\n      chainName,\n      rpcUrls:[rpcUrl],\n      chainId: web3.utils.toHex(chainId),\n      nativeCurrency: {\n        decimals: 18,\n        name: networkConfig.baseToken,\n        symbol: networkConfig.baseToken\n      },\n      blockExplorerUrls: [blockExplorerUrl]\n    }];\n\n    // console.log('addEthereumChain',params);\n\n    web3.currentProvider.request({\n      params,\n      method:'wallet_addEthereumChain',\n    })\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.getRequiredNetworkId();\n    const ensConfig = this.getGlobalConfig(['network','providers','ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)){\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3){\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1){\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name){\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,ensName.name,TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolioTranches = async (availableTranches=null,account=null) => {\n    const portfolio = {\n      transactions:[],\n      tranchesBalance:[],\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n    };\n\n    availableTranches = availableTranches ? availableTranches : this.props.availableTranches;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTranches){\n      return portfolio;\n    }\n\n    const tranches = this.getGlobalConfig(['tranches']);\n\n    await this.asyncForEach(Object.keys(availableTranches),async (protocol) => {\n      const protocolConfig = availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig),async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(Object.keys(tranches),async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const trancheTokenBalance = await this.loadTrancheFieldRaw('trancheDeposited',{},protocol,token,tranche,tokenConfig,trancheConfig,account);\n          if (trancheTokenBalance){\n            const [\n              tranchePool,\n              tranchePrice,\n            ] = await Promise.all([\n              this.loadTrancheFieldRaw('tranchePool',{},protocol,token,tranche,tokenConfig,trancheConfig,account),\n              this.loadTrancheFieldRaw('tranchePrice',{},protocol,token,tranche,tokenConfig,trancheConfig,account)\n            ]);\n            const tokenBalance = trancheTokenBalance.times(tranchePrice);\n\n            if (!this.BNify(tranchePrice).isNaN() && !this.BNify(tokenBalance).isNaN()){\n              const [\n                trancheUserInfo,\n                trancheApy,\n              ] = await Promise.all([\n                this.getTrancheUserInfo(tokenConfig,trancheConfig,account),\n                this.loadTrancheFieldRaw('trancheApy',{},protocol,token,tranche,tokenConfig,trancheConfig,account),\n              ]);\n\n              const poolShare = tokenBalance.div(tranchePool);\n              const amountDeposited = trancheUserInfo.amountDeposited;\n              const trancheEarnings = tokenBalance.minus(amountDeposited);\n\n              // console.log('trancheBalance',protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(),'tranchePrice',tranchePrice.toFixed(),'tokenBalance',tokenBalance.toFixed(),'trancheApy',trancheApy.toFixed(),'amountDeposited',amountDeposited.toFixed());\n              portfolio.transactions = [...portfolio.transactions,...trancheUserInfo.transactions];\n\n              portfolio.tranchesBalance.push({\n                token,\n                tranche,\n                protocol,\n                poolShare,\n                trancheApy,\n                tranchePrice,\n                tokenBalance,\n                trancheEarnings,\n                amountDeposited, \n                trancheTokenBalance\n              });\n\n              // console.log(protocol,token,tranche,amountDeposited.toFixed(),tokenBalance.toFixed(),trancheEarnings.toFixed());\n\n              // Increment total balance\n              portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n            }\n          }\n        });\n      });\n    });\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n\n    // Calculate aggregated data\n    portfolio.tranchesBalance.forEach( trancheInfo => {\n      const trancheApy = this.BNify(trancheInfo.trancheApy);\n      const trancheWeight = trancheInfo.tokenBalance.div(portfolio.totalBalance);\n\n      // Add tranche weight\n      trancheInfo.trancheWeight = trancheWeight;\n\n      if (trancheInfo.trancheEarnings){\n        totalEarnings = totalEarnings.plus(trancheInfo.trancheEarnings);\n      }\n\n      if (trancheApy){\n        avgAPY = avgAPY.plus(trancheApy.times(trancheWeight));\n      }\n\n      if (trancheInfo.amountDeposited){\n        totalAmountLent = totalAmountLent.plus(trancheInfo.amountDeposited);\n      }\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    return portfolio;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n      totalBalanceConverted:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance,token,tokenConfig,isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens,async (token) => {\n      const tokenConfig = availableTokens[token];\n      const amountDeposited = await this.getAmountDeposited(tokenConfig,account);\n\n      // console.log(token,'amountDeposited',amountDeposited.toString(),'amountLent',amountLents[token].toString());\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n      const tokenAprs = await this.getTokenAprs(tokenConfig);\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings){\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY){\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken){\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurrentWeb3 = () => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const networkConfig = this.getGlobalConfig(['network','availableNetworks',requiredNetwork.id]);\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.getGlobalConfig(['network','providers',provider,'key']);\n    const web3Rpc = this.getGlobalConfig(['network','providers',provider,'rpc',requiredNetwork.id])+web3RpcKey;\n\n    let currentWeb3 = null;\n    if (window.ethereum) {\n      currentWeb3 = new Web3(window.ethereum);\n    } else if (window.web3) {\n      currentWeb3 = new Web3(window.web3);\n    } else {\n      currentWeb3 = new Web3(new Web3.providers.HttpProvider(web3Rpc));\n    }\n\n    return currentWeb3;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx){\n                firstDepositTx = tx;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section) => {\n    return `${window.location.origin}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens,account);\n    if (firstDepositTxs){\n      return Object.keys(firstDepositTxs).reduce( (acc,token) => {\n        if (firstDepositTxs[token]){\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      },{});\n    }\n    return null;\n  }\n  getTrancheRewardTokensInfo = async (tokenConfig,trancheConfig) => {\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    // console.log('getTrancheTokensDistribution',stakingRewards);\n    const tokensDistribution = {};\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from:tokenConfig.CDO.address,\n        to:trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token,'Transfer',{fromBlock: tokenConfig.blockNumber,toBlock:'latest',filter:eventFilters});\n\n      if (transfers && transfers.length>0){\n        const firstHarvest = transfers.length ? transfers[0] : null;\n        const latestHarvest = transfers[transfers.length-1];\n        const firstBlock = firstHarvest ? firstHarvest.blockNumber : tokenConfig.blockNumber;\n\n        const govTokenConfig = this.getGlobalConfig(['govTokens',token]);\n        const DAITokenConfig = {\n          address:this.getContractByName('DAI')._address\n        };\n        const [\n          prevBlockInfo,\n          lastBlockInfo,\n          conversionRate,\n          lastBlockPoolSize\n        ] = await Promise.all([\n          this.getBlockInfo(firstBlock),\n          this.getBlockInfo(latestHarvest.blockNumber),\n          this.getUniswapConversionRate(DAITokenConfig,govTokenConfig),\n          this.genericContractCallCached(tokenConfig.CDO.name,'getContractValue',[],{},latestHarvest.blockNumber)\n        ]);\n        if (prevBlockInfo && lastBlockInfo){\n          const poolSize = this.fixTokenDecimals(lastBlockPoolSize,tokenConfig.CDO.decimals);\n          const elapsedBlocks = latestHarvest.blockNumber-firstBlock;\n          const elapsedSeconds = lastBlockInfo.timestamp-prevBlockInfo.timestamp;\n\n          const lastAmount = this.fixTokenDecimals(latestHarvest.returnValues.value,govTokenConfig.decimals);\n          const totalAmount = transfers.reduce( (total,t) => {\n            total = total.plus(this.fixTokenDecimals(t.returnValues.value,govTokenConfig.decimals));\n            return total;\n          },this.BNify(0));\n\n          const tokensPerBlock = totalAmount.div(elapsedBlocks);\n          const tokensPerSecond = totalAmount.div(elapsedSeconds);\n          const tokensPerDay = tokensPerSecond.times(86400);\n          const tokensPerYear = tokensPerSecond.times(this.getGlobalConfig(['network','secondsPerYear']));\n          const convertedTokensPerYear = tokensPerYear.times(conversionRate);\n          const tokenApr = convertedTokensPerYear.div(poolSize);\n          const tokenApy = this.apr2apy(tokenApr);\n\n          tokensDistribution[token] = {\n            lastAmount,\n            totalAmount,\n            apr:tokenApr,\n            apy:tokenApy,\n            tokensPerDay,\n            tokensPerYear,\n            tokensPerBlock,\n            tokensPerSecond,\n            convertedTokensPerYear\n          };\n        }\n      }\n    });\n\n    // console.log('tokensDistribution',tokensDistribution);\n\n    return tokensDistribution;\n  }\n  getTrancheUserInfo = async (tokenConfig,trancheConfig,account) => {\n    account = account || this.props.account;\n    const cachedDataKey = `amountDepositedTranche_${tokenConfig.token}_${trancheConfig.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const defaultEventsConfig = {to:'to',from:'from',value:'value'};\n    const underlyingEventsConfig = this.getGlobalConfig(['events',tokenConfig.token,'fields']) || defaultEventsConfig;\n\n    const underlyingEventsFilters = {};\n    underlyingEventsFilters[underlyingEventsConfig.to] = [this.props.account,tokenConfig.CDO.address];\n    underlyingEventsFilters[underlyingEventsConfig.from] = [this.props.account,tokenConfig.CDO.address];\n\n    const [\n      underlying_transfers,\n      trancheToken_transfers\n    ] = await Promise.all([\n      this.getContractEvents(tokenConfig.token,'Transfer',{fromBlock: trancheConfig.blockNumber, toBlock:'latest',filter:underlyingEventsFilters}),\n      this.getContractEvents(trancheConfig.name,'Transfer',{fromBlock: trancheConfig.blockNumber, toBlock:'latest',filter:{from:['0x0000000000000000000000000000000000000000',this.props.account],to:['0x0000000000000000000000000000000000000000',this.props.account]}})\n    ]);\n\n    // console.log('getAmountDepositedTranche',trancheConfig.name,'underlying_transfers',underlying_transfers,'trancheToken_transfers',trancheToken_transfers);\n\n    const transactions = [];\n    let firstDepositTx = null;\n    let avgBuyPrice = this.BNify(0);\n    let amountDeposited = this.BNify(0);\n    let totalAmountDeposited = this.BNify(0);\n\n    await this.asyncForEach(trancheToken_transfers, async (trancheTokenTransferEvent) => {\n      const tokenTransferEvent = underlying_transfers.find( t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase() );\n\n      // Skip if no tranche token transfer event found\n      if (!tokenTransferEvent){\n        return;\n      }\n\n      const tokenAmount = this.fixTokenDecimals(tokenTransferEvent.returnValues[underlyingEventsConfig.value],tokenConfig.decimals);\n      const trancheTokenAmount = this.fixTokenDecimals(trancheTokenTransferEvent.returnValues.value,trancheConfig.decimals);\n\n      // console.log('tranchePrice',trancheConfig.token,tokenAmount.toFixed(),trancheTokenAmount.toFixed(),tranchePrice.toFixed());\n      const tranchePrice = tokenAmount.div(trancheTokenAmount);\n      const blockInfo = await this.getBlockInfo(tokenTransferEvent.blockNumber);\n      const hashKey = `${trancheConfig.token}_${tokenTransferEvent.transactionHash}`;\n      const protocolConfig = this.getGlobalConfig(['stats','protocols',tokenConfig.protocol]);\n      const protocolIcon = `images/protocols/${protocolConfig.icon || `${tokenConfig.protocol}.svg`}`;\n\n      const tx = {\n        hashKey,\n        action:null,\n        tokenAmount,\n        tranchePrice,\n        protocolIcon,\n        value:tokenAmount,\n        status:'Completed',\n        token:tokenConfig.token,\n        tranche:trancheConfig.tranche,\n        protocol:protocolConfig.label,\n        tokenSymbol:tokenConfig.token,\n        trancheTokens:trancheTokenAmount,\n        hash:tokenTransferEvent.transactionHash,\n        blockNumber:tokenTransferEvent.blockNumber,\n        timeStamp:blockInfo ? blockInfo.timestamp : null,\n      };\n\n      // Deposit\n      if (trancheTokenTransferEvent.returnValues.from.toLowerCase() === '0x0000000000000000000000000000000000000000'){\n        // Set first deposit tx\n        if (!firstDepositTx){\n          firstDepositTx = tx;\n        }\n        avgBuyPrice = avgBuyPrice.plus(tranchePrice.times(tokenAmount));\n        amountDeposited = amountDeposited.plus(tokenAmount);\n        totalAmountDeposited = totalAmountDeposited.plus(tokenAmount);\n\n        tx.action = 'Deposit';\n        // console.log('Deposit',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),tranchePrice.toFixed(),avgBuyPrice.toFixed());\n      // Withdraw\n      } else if (trancheTokenTransferEvent.returnValues.to.toLowerCase() === '0x0000000000000000000000000000000000000000'){\n        tx.action = 'Withdraw';\n        amountDeposited = amountDeposited.minus(tokenAmount);\n        if (amountDeposited.lt(0)){\n          firstDepositTx = null;\n          avgBuyPrice = this.BNify(0);\n          amountDeposited = this.BNify(0);\n          totalAmountDeposited = this.BNify(0);\n        }\n        // console.log('Redeem',trancheConfig.token,tokenAmount.toFixed(),amountDeposited.toFixed(),avgBuyPrice.toFixed());\n      }\n\n      transactions.push(tx);\n    });\n\n    avgBuyPrice = avgBuyPrice.div(totalAmountDeposited);\n\n    // console.log(trancheConfig.token,'amountDeposited',amountDeposited.toFixed(),'avgBuyPrice',avgBuyPrice.toFixed(),'transactions',transactions);\n\n    return {\n      avgBuyPrice,\n      transactions,\n      firstDepositTx,\n      amountDeposited\n    }\n  }\n  getTrancheUserTransactions = async (tokenConfig,trancheConfig,account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n    if (trancheUserInfo){\n      return trancheUserInfo.transactions;\n    }\n    return null;\n  }\n  getTrancheFirstDepositTx = async (tokenConfig,trancheConfig,account) => {\n      const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n      if (trancheUserInfo){\n        return trancheUserInfo.firstDepositTx;\n      }\n      return null;\n  }\n  getAmountDepositedTranche = async (tokenConfig,trancheConfig,account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig,trancheConfig,account);\n    if (trancheUserInfo){\n      return trancheUserInfo.amountDeposited;\n    }\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens,false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getBaseToken = () => {\n    const networkConfig = this.getCurrentNetwork();\n    return networkConfig ? networkConfig.baseToken : this.getGlobalConfig(['baseToken']);\n  }\n  getCurrentNetwork = () => {\n    const networkId = this.getCurrentNetworkId();\n    const network = this.getGlobalConfig(['network','availableNetworks',networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetwork = () => {\n    const networkId = this.getRequiredNetworkId();\n    const network = this.getGlobalConfig(['network','availableNetworks',networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    return this.props.network && this.props.network.required ? this.props.network.required.id || defaultNetwork : defaultNetwork;\n  }\n  getCurrentNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    return this.props.network && this.props.network.current ? this.props.network.current.id || defaultNetwork : defaultNetwork;\n  }\n  getPolygonBridgeTxs = async (account=false,enabledTokens=[]) => {\n\n    account = account ? account : this.props.account;\n\n    if (!account || !this.props.web3){\n      return [];\n    }\n\n    const cachedDataKey = `polygonBridgeTxs_${account}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    account = account.toLowerCase();\n\n    let txs = [];\n    const currentNetwork = this.getCurrentNetwork();\n    const covalentInfo = this.getGlobalConfig(['network','providers','covalent']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    const stateSenderConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','StateSender']);\n    const erc20PredicateConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','ERC20Predicate']);\n    const etherPredicateConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','EtherPredicate']);\n    const depositManagerConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','DepositManager']);\n    const rootChainManagerConfig = this.getGlobalConfig(['tools','polygonBridge','props','contracts','RootChainManager']);\n\n    const currentNetworkId = this.getRequiredNetworkId();\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? currentNetworkId : this.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]);\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[polygonNetworkId]){\n      const covalentApiUrl = covalentInfo.endpoints[polygonNetworkId];\n      const polygonAvailableTokens = this.getGlobalConfig(['tools','polygonBridge','props','availableTokens']);\n      const polygonEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=0&key=${covalentInfo.key}`;\n\n      const ethereumNetworkId = this.getGlobalConfig(['network','providers','polygon','networkPairs',polygonNetworkId]);\n      const etherscanApiUrl = etherscanInfo.endpoints[ethereumNetworkId];\n      const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistEndpoint =`${etherscanApiUrl}?module=account&action=txlist&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistInternalEndpoint =`${etherscanApiUrl}?module=account&action=txlistinternal&address=${this.props.account}&sort=desc`;\n\n      const [\n        last_state_id,\n        polygonTxs,\n        etherscanTxs,\n        etherscanTxlist,\n        etherscanTxlistInternal\n      ] = await Promise.all([\n        this.getPolygonCurrentLastStateId(),\n        this.makeCachedRequest(polygonEndpoint,120),\n        this.makeEtherscanApiRequest(etherscanEndpoint,etherscanInfo.keys,120),\n        this.makeEtherscanApiRequest(etherscanTxlistEndpoint,etherscanInfo.keys,120),\n        this.makeEtherscanApiRequest(etherscanTxlistInternalEndpoint,etherscanInfo.keys,120),\n      ]);\n\n      // console.log('polygonTxs',polygonTxs);\n      // console.log('etherscanTxs',etherscanTxs);\n      // console.log('etherscanTxlist',etherscanTxlist);\n      // console.log('etherscanTxlistInternal',etherscanTxlistInternal);\n\n      const rootTokensAddresses = [];\n      const childTokensAddresses = [];\n      Object.values(polygonAvailableTokens).forEach( tokenConfig => {\n        if (tokenConfig.childToken){\n          childTokensAddresses.push(tokenConfig.childToken.address.toLowerCase())\n        }\n        if (tokenConfig.rootToken){\n          rootTokensAddresses.push(tokenConfig.rootToken.address.toLowerCase())\n        }\n      });\n\n      let depositTxs = [];\n\n      if (etherscanTxs && etherscanTxs.data && etherscanTxs.data.result && typeof etherscanTxs.data.result.filter === 'function'){\n        depositTxs = etherscanTxs.data.result.filter( tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) &&  [erc20PredicateConfig.address.toLowerCase(),depositManagerConfig.address.toLowerCase()].includes(tx.to.toLowerCase())  && tx.from.toLowerCase() === this.props.account.toLowerCase() );\n        await this.asyncForEach(depositTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( t => t.name === tx.tokenSymbol );\n          const ethereumTx = {...tx};\n          ethereumTx.action = 'Deposit';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value,tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash,this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find( log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase() ) : null;\n          const tx_state_id = stateSenderLog ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id>=tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n        const exitTxs = etherscanTxs.data.result.filter( tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(),depositManagerConfig.address.toLowerCase()].includes(tx.from.toLowerCase()) && tx.to.toLowerCase() === this.props.account.toLowerCase() );\n        await this.asyncForEach(exitTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( t => t.name === tx.tokenSymbol );\n          const ethereumTx = {...tx};\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value,tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      const depositTxsHashes = depositTxs.map( tx => tx.hash.toLowerCase() );\n      const depositETHInputRexExp = new RegExp(this.props.account.replace('0x','').toLowerCase()+'$');\n      if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function'){\n        const depositETHTxs = etherscanTxlist.data.result.filter( tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.to.toLowerCase() === rootChainManagerConfig.address.toLowerCase() && tx.input.toLowerCase().match(depositETHInputRexExp) && tx.from.toLowerCase() === this.props.account.toLowerCase() );\n        await this.asyncForEach(depositETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( t => t.name === 'WETH' );\n          const ethereumTx = {...tx};\n          ethereumTx.action = 'Deposit';\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value,tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash,this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find( log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase() ) : null;\n          const tx_state_id = stateSenderLog ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id>=tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (etherscanTxlistInternal && etherscanTxlistInternal.data && etherscanTxlistInternal.data.result && typeof etherscanTxlistInternal.data.result.filter === 'function'){\n        const exitETHTxs = etherscanTxlistInternal.data.result.filter( tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.from.toLowerCase() === etherPredicateConfig.address.toLowerCase() && !tx.input.toLowerCase().match(depositETHInputRexExp) && tx.to.toLowerCase() === this.props.account.toLowerCase() );\n        await this.asyncForEach(exitETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( t => t.name === 'WETH' );\n          const ethereumTx = {...tx};\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.timeStamp = parseInt(tx.timeStamp);\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value,tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (polygonTxs && polygonTxs.data && polygonTxs.data.data && polygonTxs.data.data.items && Object.values(polygonTxs.data.data.items).length){\n        const filteredTxs = polygonTxs.data.data.items.filter( tx => childTokensAddresses.includes(tx.to_address.toLowerCase()) );\n        // console.log('polygonTxs',polygonTxs);\n        await this.asyncForEach(filteredTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find( tokenConfig => (tokenConfig.childToken && tokenConfig.childToken.address.toLowerCase() === tx.to_address.toLowerCase()) );\n          if (!tokenConfig || !tokenConfig.childToken){\n            return;\n          }\n          tokenConfig.address = tokenConfig.childToken.address;\n          if (!enabledTokens || !enabledTokens.length || enabledTokens.includes(tokenConfig.token)){\n            const polygonTx = this.normalizePolygonTx(tx,tokenConfig);\n            // console.log('polygonTx',polygonTx);\n            if (polygonTx.action === 'Withdraw'){\n              const tx_state_id = parseInt(this.props.web3.utils.hexToNumberString(polygonTx.logs[polygonTx.logs.length-1].topics[1]));\n              polygonTx.exited = false;\n              polygonTx.networkId = polygonNetworkId;\n              polygonTx.bridgeType = tokenConfig.bridgeType;\n              polygonTx.included = last_state_id && tx_state_id ? last_state_id>=tx_state_id : false;\n              try {\n                await this.props.maticPOSClient.exitERC20(polygonTx.hash, {from: this.props.account, encodeAbi:true});\n              } catch (error){\n                if (error.toString().match('EXIT_ALREADY_PROCESSED')){\n                  polygonTx.exited = true;\n                }\n              }\n              txs.push(polygonTx);\n            }\n          }\n        });\n      }\n    }\n\n    txs = txs.sort((a,b) => (parseInt(a.timeStamp) < parseInt(b.timeStamp) ? 1 : -1));\n\n    // console.log('getPolygonBridgeTxs',cachedDataKey,txs);\n\n    return this.setCachedData(cachedDataKey,txs,120);\n  }\n  getPolygonBaseTxs = async (account=false,enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n    const requiredNetwork = this.getRequiredNetworkId();\n    // const selectedStrategy = this.props.selectedStrategy;\n    const covalentInfo = this.getGlobalConfig(['network','providers','covalent']);\n\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[requiredNetwork]){\n      const covalentApiUrl = covalentInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&key=${covalentInfo.key}`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data && baseTxs.data.data && baseTxs.data.data.items && Object.values(baseTxs.data.data.items).length){\n\n        const cachedRows = Object.values(baseTxs.data.data.items).length;\n        const lastCachedTx = Object.values(baseTxs.data.data.items).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.block_height ? parseInt(lastCachedTx.block_height)+1 : 0;\n\n        const covalentEndpointLastBlock = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=${cachedRows}`;\n        let latestTxs = await this.makeCachedRequest(covalentEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.data.items && latestTxs.data.data.items.length){\n          latestTxs = await this.filterPolygonTxs(latestTxs.data.data.items,enabledTokens);\n          // latestTxs = await this.filterEthereumTxs(latestTxs,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.block_height)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.data.items).includes(tx.tx_hash);\n                if (!txFound){\n                  baseTxs.data.data.items[tx.tx_hash] = tx;\n                }\n              });\n\n              // Save covalent txs\n              this.saveFetchedTransactions(baseEndpoint,baseTxs.data.data.items);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          const cachedRequests_polygon = this.getCachedDataWithLocalStorage('cachedRequests_polygon',{});\n          cachedRequests_polygon[baseEndpoint] = {\n            data:txs,\n            timestamp\n          };\n          this.setCachedDataWithLocalStorage('cachedRequests_polygon',cachedRequests_polygon);\n        }\n      }\n\n      if (txs && txs.data && txs.data.data && txs.data.data.items){\n        results = txs.data.data.items;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${etherscanInfo.key}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      if (debug){\n        console.log('DEBUG - CACHED - baseTxs',baseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data.result && Object.values(baseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(baseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        // let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n        let latestTxs = await this.makeEtherscanApiRequest(etherscanEndpointLastBlock,etherscanInfo.keys,15);        \n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEthereumTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  baseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveFetchedTransactions(baseEndpoint,baseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          cachedRequests[baseEndpoint] = {\n            data:txs,\n            timestamp\n          };\n          this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveFetchedTransactions = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n\n    let resultData = null;\n    const currentNetwork = this.getCurrentNetwork();\n\n    switch (currentNetwork.explorer){\n      case 'polygon':\n        resultData = await this.getPolygonBaseTxs(account,enabledTokens,debug);\n      break;\n      case 'etherscan':\n      default:\n        resultData = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens,debug);\n      break;\n    }\n\n    // Initialize prevTxs\n    let txs = {};\n\n    if (resultData){\n      let {\n        results,\n        baseTxs,\n        baseEndpoint\n      } = resultData;\n\n      if (baseTxs){\n        // Filter txs for token\n        txs = await this.processStoredTxs(results,enabledTokens);\n      } else {\n        const allAvailableTokens = Object.keys(this.props.availableTokens);\n        // Save base endpoint with all available tokens\n        switch (currentNetwork.explorer){\n          case 'polygon':\n            txs = await this.filterPolygonTxs(results,allAvailableTokens);\n            // console.log('polygon txs',results,allAvailableTokens,txs);\n          break;\n          case 'etherscan':\n          default:\n            txs = await this.filterEthereumTxs(results,allAvailableTokens);\n          break;\n        }\n\n        // Store filtered txs\n        if (txs && Object.keys(txs).length){\n          this.saveFetchedTransactions(baseEndpoint,txs);\n        }\n      }\n    }\n\n    // console.log('DEBUG - TXS -',txs);\n\n    return Object\n            .values(txs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  getPolygonCurrentLastStateId = async () => {\n    const contractInstance = new this.props.web3Polygon.eth.Contract(\n      [\n        {\n          constant: true,\n          inputs: [],\n          name: \"lastStateId\",\n          outputs: [\n            {\n              internalType: \"uint256\",\n              name: \"\",\n              type: \"uint256\",\n            },\n          ],\n          payable: false,\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n      ],\n      \"0x0000000000000000000000000000000000001001\"\n    );\n\n    return parseInt(await contractInstance.methods.lastStateId().call());\n  }\n  checkPolygonTransactionIncluded = async (txHash) => {\n    const [\n      last_state_id,\n      tx,\n    ] = await Promise.all([\n      this.getPolygonCurrentLastStateId(),\n      this.props.web3Polygon.eth.getTransactionReceipt(txHash)\n    ]);\n\n    const tx_state_id = tx && tx.logs && tx.logs.length ? this.props.web3.utils.hexToNumberString(tx.logs[tx.logs.length-1].topics[1]) : null;\n\n    return tx_state_id ? parseInt(last_state_id) >= parseInt(tx_state_id) : null;\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  normalizePolygonTx = (tx,tokenConfig=null) => {\n    tokenConfig = tokenConfig || Object.values(this.props.availableTokens).find( tokenConfig => tokenConfig.idle.address.toLowerCase() === tx.to_address.toLowerCase() );\n    \n    const depositLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find( log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param=>param.name==='from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param=>param.name==='to').value.toLowerCase() === tokenConfig.idle.address.toLowerCase() ) : null;\n    const redeemLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find( log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param=>param.name==='to').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param=>param.name==='from').value.toLowerCase() === tokenConfig.idle.address.toLowerCase() ) : null;\n    const withdrawLogEvent = tx.log_events && tokenConfig && tokenConfig.address ? tx.log_events.find( log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded.name === 'Transfer' && log.decoded.params.find(param=>param.name==='from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param=>param.name==='to').value.toLowerCase() === '0x0000000000000000000000000000000000000000' ) : null;\n\n    const tokenDecimal = tokenConfig.decimals;\n    const tokenSymbol = tokenConfig.name || tokenConfig.token;\n    const hashKey = `${tx.tx_hash}_${tokenSymbol}`;\n    const idleToken = tokenConfig.idle ? tokenConfig.idle.token : null;\n    const action = depositLogEvent ? 'Deposit' : (redeemLogEvent ? 'Redeem' : (withdrawLogEvent ? 'Withdraw' : null));\n    const timeStamp = parseInt(this.strToMoment(tx.block_signed_at)._d.getTime()/1000);\n\n    let logEvent = null;\n    switch (action){\n      case 'Deposit':\n        logEvent = depositLogEvent;\n      break;\n      case 'Redeem':\n        logEvent = redeemLogEvent;\n      break;\n      case 'Withdraw':\n        logEvent = withdrawLogEvent;\n      break;\n      default:\n      break;\n    }\n\n    const logs = tx.log_events ? tx.log_events.map( log => ({\n      topics:log.raw_log_topics\n    })) : [];\n    const value = logEvent ? this.fixTokenDecimals(logEvent.decoded.params.find( param => param.name==='value' ).value,tokenDecimal) : this.fixTokenDecimals(tx.value,tokenDecimal);\n\n    // if (tokenSymbol === 'USDC'){\n    //   debugger;\n    // }\n\n    return {\n      logs,\n      value,\n      action,\n      hashKey,\n      timeStamp,\n      idleToken,\n      tokenSymbol,\n      tokenDecimal,\n      hash:tx.tx_hash,\n      to:tx.to_address,\n      status:'Completed',\n      from:tx.from_address,\n      gasUsed:tx.gas_spent,\n      gasPrice:tx.gas_price,\n      token:tokenConfig.token,\n      contractAddress:tokenConfig.address,\n      blockNumber:tx.log_events[0].block_height\n    };\n  }\n  filterPolygonTxs = async (txs,enabledTokens,processTransactions=true) => {\n    const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => tokenConfig.idle.address.toLowerCase() );\n    const polygonTxs = txs ? txs.filter( tx => idleTokensAddresses.includes(tx.to_address.toLowerCase()) ).reduce( (output,tx) => {\n      const mappedTx = this.normalizePolygonTx(tx);\n      output[mappedTx.hashKey] = mappedTx;\n      return output;\n    },{}) : {};\n\n    return processTransactions ? await this.processTransactions(polygonTxs,enabledTokens) : polygonTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    return await this.filterEthereumTxs(results,enabledTokens,processTxs,processStoredTxs);\n  }\n  filterEthereumTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    const networkId = this.getRequiredNetworkId();\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    const timestamp = parseInt(Date.now()/1000);\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress',false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress',customAddress);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeEtherscanApiRequest = async (endpoint,keys=[],TTL=120,apiKeyIndex=0) => {\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp-cachedRequests[endpoint].timestamp<TTL){\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint+'&apikey='+apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,data,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && data.data.message === 'OK'){\n      cachedRequests[endpoint] = {\n        data,\n        timestamp\n      };\n      this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n      return data;\n    } else if (apiKeyIndex<keys.length-1) {\n      return await this.makeEtherscanApiRequest(endpoint,keys,TTL,apiKeyIndex+1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint,TTL=60,return_data=false,alias=false,config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint,false,config);\n\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    if (!array){\n      return null;\n    }\n    path = Object.assign([],path);\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] !== undefined ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  getAppUrl = (path) => {\n    return globalConfigs.baseURL+'/'+path;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page=null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics','google','pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga){\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider=null) => {\n    return this.getStoredItem('walletProvider',false,defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash,requiredNetwork=null) => {\n    const defaultNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network','availableNetworks',requiredNetwork,'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network','providers',explorer,'baseUrl',requiredNetwork]) || defaultUrl;\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address,requiredNetwork=null) => {\n    const defaultNetwork = this.getGlobalConfig(['network','requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network','availableNetworks',requiredNetwork,'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network','providers',explorer,'baseUrl',requiredNetwork]) || defaultUrl;\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly=false) => {\n\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network','providers','snapshot','whitelist']).map( addr => addr.toLowerCase() );\n    const endpoint = this.getGlobalConfig(['network','providers','snapshot','endpoints','proposals']);\n    let proposals = await this.makeCachedRequest(endpoint,1440,true);\n\n    // console.log('getSnapshotProposals',proposals);\n\n    if (proposals && !proposals.error){\n      proposals = Object.values(proposals);\n\n      const currTime = parseInt(Date.now()/1000);\n      if (activeOnly){\n        proposals =  proposals.filter( p => (p.msg.payload.start<=currTime && p.msg.payload.end>currTime) );\n      }\n\n      // console.log(proposals);\n\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        // Add proposal if ended\n        if (p.msg.payload.end<=currTime || whitelist.includes(p.address.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.msg.payload.snapshot;\n\n          let checkedStrategies = false;\n          await this.asyncForEach( p.msg.payload.metadata.strategies, async (s) => {\n            if (checkedStrategies){\n              return;\n            }\n            if (s.name==='erc20-balance-of'){\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract){\n                const tokenBalance = await this.getTokenBalance(tokenName,p.address,true,blockNumber);\n                // console.log(p.relayerIpfsHash,p.address,s.name,tokenBalance ? tokenBalance.toFixed() : null);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)){\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n\n            // console.log(p.relayerIpfsHash,p.address,s.name,checkedStrategies);\n          });\n          \n          // Add proposal is passed token balances check\n          if (checkedStrategies){\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey,validProposals);\n    }\n\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    const currentNetworkId = this.getRequiredNetworkId();\n    const statsConfig = this.getGlobalConfig(['stats']);\n    const statsEnabled = statsConfig.enabled && statsConfig.availableNetworks.includes(currentNetworkId);\n    if (!statsEnabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData !== null){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n      if (filteredCachedData && filteredCachedData.length>0){\n        let filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          filteredData = filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n          if (filteredData.length>0){\n            return filteredData;\n          }\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats','rates']);\n    let endpoint = `${apiInfo.endpoint[networkId]}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    let output = await this.makeRequest(endpoint,false,config);\n    if (!output){\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null){\n      filteredData = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data:filteredData,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName,exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName,exchangeRateParams.name,exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,exchangeRate,null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName){\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats','tokens',contractName]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName,'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,decimals,null);\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint,etherscanInfo.keys,3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function'){\n      return etherscanTxlist.data.result.filter( tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0) ));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate=null) => {\n    if (!tokenDecimals){\n      return this.BNify(tokenBalance);\n    }\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig){\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length){\n      return false;\n    }\n\n    for (let protocolIndex=0;protocolIndex<allocations.length;protocolIndex++){\n      const lastAllocationsPromise = new Promise( async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations){\n      return true;\n    }\n\n    const diff = allocations.filter( (alloc,index) => alloc !== newAllocations[index] );\n\n    return diff.length>0;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  getContractEvents = async (contractName, eventName, params = {}) => {\n    return await this.getContractPastEvents(contractName, eventName, params);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]){\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n      \n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({from: account})\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit){\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice,9).times(gasLimit),9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null,error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName,tokenAddress,permitType,callData,gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data:callData,\n      token:tokenAddress,\n      to:contract._address,\n      txGas:parseInt(gasLimit)\n    };\n\n    // console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise( async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash,(err,tx)=>{\n        if (err){\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req,metaInfo,callback,callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({req,metaInfo});\n      transactionHash = txResponse.txHash;\n      // console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      // console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null,true);\n      return false;\n    }\n\n    if (!transactionHash){\n      // console.log('!transactionHash ERROR');\n      callback(null,true);\n      return false;\n    }\n    \n    const tx = {\n      method:'mintIdleToken',\n      transactionHash\n    };\n    // console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(()=> {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt)=> {\n        // console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if(!err && receipt){\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx,err);\n\n          if (typeof window.updateTransaction === 'function'){\n            window.updateTransaction(tx,transactionHash,tx.status,null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce=0, value=null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit',baseContractName]);\n\n    // console.log('permitConfig',permitConfig);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce>0){\n      nonce = parseInt(nonce)+parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion){\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n      break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n      break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit=null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters){\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find( f => f.name === methodName );\n      const useNonce = methodAbi ? methodAbi.inputs.find( i => i.name === 'nonce' ) : true;\n      if (!isNaN(parseInt(nonce)) && useNonce){\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null,'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName,walletAddr,false),\n      this.getAllowance(contractName,contractAddr,walletAddr)\n    ]);\n    this.customLog('checkTokenApproved',contractName,this.BNify(allowance).toFixed(),this.BNify(balance).toFixed(),(allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName,methodName,params,value,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData=null,send_raw=false,raw_tx_data=null) => {\n    try{\n      this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n        if (typeof callback === 'function'){\n          callback(tx);\n        }\n      }, (tx) => {\n        if (typeof callback_receipt === 'function'){\n          callback_receipt(tx);\n        }\n      }, null, txData, send_raw, raw_tx_data);\n    } catch (error) {\n      callback(null,error);\n    }\n  }\n  disableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  getTrancheStakedBalance = async (contractName,walletAddr,decimals=null) => {\n    // Check for cached data\n    const cachedDataKey = `trancheStakedBalance_${contractName}_${walletAddr}_${decimals}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stakedBalance = await this.genericContractCall(contractName,'usersStakes',[walletAddr]);\n    if (stakedBalance){\n      if (decimals){\n        stakedBalance = this.fixTokenDecimals(stakedBalance,decimals);\n      }\n      stakedBalance = this.BNify(stakedBalance);\n\n      if (!stakedBalance.isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,stakedBalance,30);\n      }\n    }\n    return this.BNify(0);\n  }\n  getTrancheStakingRewards = async (account,trancheConfig) => {\n    const stakingRewards = {};\n    await this.asyncForEach(trancheConfig.CDORewards.stakingRewards, async (tokenConfig) => {\n      const tokenGlobalConfig = this.getGlobalConfig(['stats','tokens',tokenConfig.token]);\n      tokenConfig = {...tokenConfig,...tokenGlobalConfig};\n      const tokenAmount = await this.genericContractCallCached(trancheConfig.CDORewards.name,'expectedUserReward',[account,tokenConfig.address]);\n      stakingRewards[tokenConfig.token] = this.fixTokenDecimals(tokenAmount,tokenConfig.decimals);\n    });\n\n    // console.log('getTrancheStakingRewards',stakingRewards);\n\n    return stakingRewards;\n  }\n  loadTrancheFieldRaw = async (field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens=true) => {\n    return await this.loadTrancheField(field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,false);\n  }\n  loadTrancheField = async (field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account=null,addGovTokens=true,formatValue=true,addTokenName=true) => {\n    let output = null;\n    const maxPrecision = (fieldProps && fieldProps.maxPrecision) || 5;\n    const decimals = (fieldProps && fieldProps.decimals) || (this.props.isMobile ? 2 : 3);\n    const minPrecision = (fieldProps && fieldProps.minPrecision) || (this.props.isMobile ? 3 : 4);\n    const tokenName = this.getGlobalConfig(['stats','tokens',token,'label']) || this.capitalize(token);\n\n    const strategyConfig = tokenConfig.Strategy;\n    const idleStrategyAddress = await this.genericContractCallCached(tokenConfig.CDO.name,'strategy'); \n    if (idleStrategyAddress){\n      await this.props.initContract(strategyConfig.name,idleStrategyAddress,strategyConfig.abi);\n    }\n\n    const idleGovTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n    switch (field){\n      case 'protocolName':\n        output = (this.getGlobalConfig(['stats','protocols',protocol,'label']) || this.capitalize(protocol)).toUpperCase();\n      break;\n      case 'tokenName':\n        output = tokenName;\n      break;\n      case 'trancheType':\n        output = (this.getGlobalConfig(['tranches',tranche,'baseName']) || '').toUpperCase();\n        // console.log('trancheType',tranche,trancheConfig,output);\n      break;\n      case 'pool':\n        let poolSize = await this.genericContractCallCached(tokenConfig.CDO.name,'getContractValue');\n        if (!this.BNify(poolSize).isNaN()){\n          output = this.fixTokenDecimals(poolSize,tokenConfig.CDO.decimals);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision);\n          }\n        }\n      break;\n      case 'seniorPool':\n        output = await this.loadTrancheField('tranchePool',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens);\n      break;\n      case 'juniorPool':\n        output = await this.loadTrancheField('tranchePool',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens);\n      break;\n      case 'seniorApy':\n        output = await this.loadTrancheField('trancheApy',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.AA,account,addGovTokens);\n      break;\n      case 'juniorApy':\n        output = await this.loadTrancheField('trancheApy',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens);\n      break;\n      case 'tranchePool':\n        let [\n          totalSupply,\n          virtualPrice\n        ] = await Promise.all([\n          this.getTokenTotalSupply(trancheConfig.name,'latest',180),\n          this.loadTrancheField('tranchePrice',fieldProps,protocol,token,tranche,tokenConfig,tokenConfig.BB,account,addGovTokens)\n        ]);\n\n\n        output = this.BNify(0);\n        if (!this.BNify(virtualPrice).isNaN() && !this.BNify(totalSupply).isNaN()){\n          output = this.fixTokenDecimals(totalSupply,tokenConfig.CDO.decimals).times(virtualPrice);\n        }\n        if (formatValue){\n          output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n        }\n        // console.log('tranchePool',tokenConfig.CDO.name,totalSupply,virtualPrice,output);\n      break;\n      case 'trancheDeposited':\n        const deposited = await this.getAmountDepositedTranche(tokenConfig,trancheConfig,account);\n\n        output = output || this.BNify(0);\n\n        output = this.BNify(deposited);\n        if (output.gt(0)){\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        } else {\n          output = formatValue ? '-' : null;\n        }\n      break;\n      case 'trancheFee':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name,'fee');\n        if (output){\n          output = this.BNify(output).div(this.BNify(100000));\n        }\n      break;\n      case 'tranchePrice':\n        output = await this.genericContractCall(tokenConfig.CDO.name,'virtualPrice',[trancheConfig.address]);\n        if (output){\n          output = this.fixTokenDecimals(output,trancheConfig.decimals);\n        }\n      break;\n      case 'trancheStaked':\n        let [\n          staked1,\n          lastPrice1\n        ] = await Promise.all([\n          this.getTrancheStakedBalance(trancheConfig.CDORewards.name,account,trancheConfig.CDORewards.decimals),\n          this.loadTrancheField(`tranchePrice`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n\n        output = formatValue ? '-' : null;\n        if (staked1 && lastPrice1){\n          output = this.BNify(staked1).times(lastPrice1);\n          // console.log('trancheStaked',staked1.toString(),lastPrice1.toString(),output.toString());\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemable':\n        let [\n          deposited1,\n          lastPrice\n        ] = await Promise.all([\n          this.getTokenBalance(trancheConfig.name,account),\n          this.loadTrancheFieldRaw(`tranchePrice`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (deposited1 && lastPrice){\n          output = this.BNify(deposited1).times(lastPrice);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemableWithStaked':\n        let [\n          redeemable1,\n          staked2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheRedeemable`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (redeemable1 && staked2){\n          output = this.BNify(redeemable1).plus(staked2);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsCounter':\n        let [\n          earningsStart,\n          trancheApy2,\n          deposited3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`earnings`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheApy`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n        ]);\n\n\n        if (deposited3 && earningsStart && trancheApy2){\n          const earningsEnd = deposited3.gt(0) ? deposited3.times(trancheApy2.div(100)).plus(earningsStart) : 0;\n\n          output = {\n            earningsEnd,\n            earningsStart\n          };\n        }\n      break;\n      case 'feesCounter':\n        let [\n          trancheFee,\n          earningsCounter\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheFee`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`earningsCounter`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n        ]);\n\n        if (trancheFee && earningsCounter){\n          const feesStart = earningsCounter.earningsStart.times(trancheFee);\n          const feesEnd =  earningsCounter.earningsEnd.times(trancheFee);\n\n          // console.log('feesCounter',feesStart.toString(),feesEnd.toString());\n\n          output = {\n            feesEnd,\n            feesStart\n          };\n        }\n      break;\n      case 'earnings':\n        const [\n          deposited4,\n          redeemable3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        if (deposited4 && redeemable3){\n          output = this.BNify(redeemable3).minus(deposited4);\n          if (formatValue){\n            output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+(addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsPerc':\n        const [\n          deposited2,\n          redeemable2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n        output = redeemable2.div(deposited2).minus(1).times(100);\n        if (formatValue){\n          output = output.toFixed(decimals)+'%';\n        }\n      break;\n      case 'trancheApy':\n        let trancheApy = await this.genericContractCallCached(tokenConfig.CDO.name,'getApr',[trancheConfig.address]);\n        // console.log('trancheApy',tokenConfig,trancheConfig,output);\n        if (trancheApy){\n          output = this.fixTokenDecimals(trancheApy,tokenConfig.CDO.decimals);\n          output = this.apr2apy(output.div(100)).times(100);\n          if (formatValue){\n            output = output.toFixed(2)+'%';\n          }\n        }\n      break;\n      case 'realizedApy':\n        const [\n          firstDepositTx,\n          earningsPerc\n        ] = await Promise.all([\n          this.getTrancheFirstDepositTx(tokenConfig,trancheConfig,account),\n          this.loadTrancheFieldRaw(`earningsPerc`,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens)\n        ]);\n\n        // console.log('realizedApy',earningsPerc.toString(),firstDepositTx);\n\n        if (earningsPerc && firstDepositTx){\n          const secondsFromFirstTx = parseInt(Date.now()/1000)-parseInt(firstDepositTx.timeStamp);\n          output = this.BNify(earningsPerc).times(31536000).div(secondsFromFirstTx);\n\n          // console.log('realizedApy2',firstDepositTx,earningsPerc.toString(),output.toString());\n\n          if (formatValue){\n            output = output.toFixed(2)+'%';\n          }\n        }\n      break;\n      case 'trancheIDLELastHarvest':\n      case 'trancheIDLEDistribution':\n        const rewardsTokensInfo = await this.getTrancheRewardTokensInfo(tokenConfig,trancheConfig);\n        if (rewardsTokensInfo && rewardsTokensInfo.IDLE){\n          if (field === 'trancheIDLEDistribution'){\n            output = this.fixDistributionSpeed(rewardsTokensInfo.IDLE.tokensPerSecond,idleGovTokenConfig.distributionFrequency);\n            if (formatValue){\n              output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` IDLE/${idleGovTokenConfig.distributionFrequency}`\n            }\n          } else {\n            output = rewardsTokensInfo.IDLE.lastAmount;\n            if (formatValue){\n              output = this.abbreviateNumber(output,decimals,maxPrecision,minPrecision)+` IDLE (last harvest)`\n            }\n          }\n        }\n      break;\n      case 'AAIDLEDistribution':\n        output = this.abbreviateNumber('1234',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'BBIDLEDistribution':\n        output = this.abbreviateNumber('4321',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = {};\n        const [\n          rewardsTokens,\n          incentiveTokens\n        ] = await Promise.all([\n          this.genericContractCall(strategyConfig.name,'getRewardTokens'),\n          this.genericContractCall(tokenConfig.CDO.name,'getIncentiveTokens')\n        ]);\n\n        const govTokens = field === 'govTokens' ? rewardsTokens : (field === 'autoFarming' && rewardsTokens ? rewardsTokens.filter( rewardTokenAddr => incentiveTokens && !incentiveTokens.map( addr => addr.toLowerCase() ).includes(rewardTokenAddr.toLowerCase()) ) : incentiveTokens);\n\n        // console.log(field,tokenConfig,rewardsTokens,incentiveTokens,govTokens);\n\n        if (govTokens){\n          govTokens.forEach( govTokenAddress => {\n            const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n            if (govTokenConfig && !govTokenConfig.enabled){\n              return;\n            }\n            output[govTokenConfig.token] = govTokenConfig;\n          });\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('loadTrancheField',field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,formatValue);\n\n    return output;\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(Date.now()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency,tokenConfig.distributionMode);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // console.log('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toFixed() : null,tokenApys.avgApy ? tokenApys.avgApy.toFixed() : null);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()){\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n      break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token],account),\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]){\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig,firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n      break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = {\n            address:this.getContractByName('DAI')._address\n          };\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken,blockNumber='latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken,blockNumber);\n    if (idleTokenSupply){\n      return this.BNify(idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig,account,blockNumber='latest') => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n    \n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))){\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = (clear_all=false) => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData(null,clear_all);\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]){\n      cachedData = this.props.cachedData[key];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]){\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || cachedData.expirationDate>=parseInt(Date.now()/1000));\n\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url,'_blank','noopener');\n  }\n  getActiveCoverages = async (account=null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account){\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now()/1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools','coverProtocol']);\n    if (coverProtocolConfig.enabled){\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name,account);\n        if (balance && balance.gt(0)){\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp<=currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n    if (nexusMutualConfig.enabled){\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach( coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance','nexusMutual','label']);\n        const protocolImage = this.getGlobalConfig(['insurance','nexusMutual','image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance','nexusMutual','imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil)<=currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n    \n    await Promise.all([\n      this.props.initContract(incidentsInfo.name,incidentsInfo.address,incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n       this.getContractEvents(feeDistributorConfig.name,'CoverBought',{fromBlock, toBlock:'latest',filter:{buyer:account}}),\n       this.getContractEvents(feeDistributorConfig.name,'ClaimSubmitted',{fromBlock, toBlock:'latest',filter:{buyer:account}})\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents,async (cover) => {\n    // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find( claim => parseInt(claim.returnValues.coverId)===coverId );\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name,'getCover',[coverId]),\n        this.getContractEvents(incidentsInfo.name,'IncidentAdded',{fromBlock:cover.blockNumber, toBlock:'latest',filter:{productId:cover.contractAddress}})\n      ]);\n\n      if (!coverDetails){\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n        this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n        this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n        parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      });\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find( tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase() );\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured,yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find( underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase() );\n      const expiryDate = this.strToMoment(coverDetails.validUntil*1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = claimId ? await this.genericContractCall(feeDistributorConfig.name,'getPayoutOutcome',[claimId]) : null;\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent){\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find( log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase() ) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data,16),coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured,coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount,coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token,account,false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice,yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance,yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2)+'%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? {...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date)} : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${etherscanInfo.key}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint,1800,true);\n      if (transactions && typeof transactions.result === 'object'){\n        return transactions.result.filter( tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase() );\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account=null,filter_by_status=null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools','batchDeposit']);\n    if (!batchDepositConfig.enabled){\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name,migrationContract.address,migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name,'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name,'batchTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null){\n          batchTotals = this.fixTokenDecimals(batchTotal,tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchRedeem = this.fixTokenDecimals(batchRedeem,18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit,tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)){\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status){\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,batchedDeposits);\n  }\n  getETHBalance = async (walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr,blockNumber)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance,30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,totalSupply);\n  }\n  getTokenPrice = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName,'tokenPrice',[],{},blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice,60);\n  }\n  getContractBalance = async (contractName,address,blockNumber='latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,balance,30);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    return await this.getContractBalance(contractName,address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs){\n      const result = {\n        aprs:aprs[1],\n        addresses:aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey,result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxReceipt = async (txHash,web3=null) => {\n    web3 = web3 || this.props.web3;\n    if (!web3 || !web3.eth){\n      return null;\n    }\n    return await (new Promise( async (resolve, reject) => {\n      web3.eth.getTransactionReceipt(txHash,(err,tx)=>{\n        if (err){\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    if (!this.props.web3){\n      return false;\n    }\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber) => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n    return blockInfo ? this.setCachedDataWithLocalStorage(cachedDataKey,blockInfo,null) : null;\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    // console.log('getContractPastEvents',contractName,methodName);\n\n    return await contract.getPastEvents(methodName, params);\n  }\n\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL=180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest'){\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,result,TTL);\n  }\n\n  cachedContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL=180) => {\n    return await this.genericContractCallCached(contractName, methodName, params, callParams, blockNumber, TTL);\n  }\n\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', count=0) => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      // this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      // if (!value){\n      //   console.log('genericContractCall - NULL - ',contractName,methodName,params);\n      // }\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      // console.log('genericContractCall ERROR - ',contractName,methodName,params);\n      this.customLog(\"genericContractCall error\", error);\n      // if (count<=3){\n      //   await this.asyncTimeout(1000);\n      //   return await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, count+1);\n      // }\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    let output = [];\n    if (async){\n      output = await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        output.push(await callback(array[index], index, array));\n      }\n    }\n    return output;\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(365))).pow(365).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  getLastAllocations = async (tokenConfig) => {\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    const aprs = await this.getAprs(tokenConfig.idle.token);\n    const allAvailableTokens = aprs ? aprs.addresses : null;\n    if (allAvailableTokens){\n      const tokenAllocations = await this.asyncForEach(allAvailableTokens, async (protocolAddr,index) => {\n        return await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[index]);\n      });\n      return allAvailableTokens.reduce( (lastAllocations,protocolAddr,index) => {\n        lastAllocations[protocolAddr.toLowerCase()] = tokenAllocations[index];\n        return lastAllocations;\n      },{});\n    }\n\n    return {};\n  }\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n    \n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    let [\n      unlentBalance,\n      tokenPrice,\n      lastAllocations,\n      tokenUsdConversionRate,\n      totalSupply,\n      govTokensBalances,\n    ] = await Promise.all([\n      this.getUnlentBalance(tokenConfig),\n      this.getIdleTokenPrice(tokenConfig),\n      this.getLastAllocations(tokenConfig),\n      this.getTokenConversionRate(tokenConfig,false),\n      this.getIdleTokenSupply(tokenConfig.idle.token),\n      addGovTokens ? this.getGovTokensBalances(tokenConfig.idle.address) : null,\n    ]);\n\n    const totalAllocation = this.fixTokenDecimals(totalSupply,18).times(tokenPrice).minus(unlentBalance);\n\n    if (lastAllocations){\n      Object.keys(lastAllocations).forEach( (protocolAddr) => {\n        const protocolInfo = tokenConfig.protocols.find( p => p.address.toLowerCase() === protocolAddr.toLowerCase() );\n        if (protocolInfo && protocolInfo.enabled){\n          const protocolAllocationPerc = this.BNify(lastAllocations[protocolAddr]).div(100000);\n          const protocolAllocation = totalAllocation.times(protocolAllocationPerc);\n          protocolsAllocations[protocolAddr.toLowerCase()] = protocolAllocation;\n          protocolsAllocationsPerc[protocolAddr.toLowerCase()] = protocolAllocationPerc;\n        }\n      });\n    }\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = totalAllocation;\n\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    // Sum gov tokens balances\n    if (govTokensBalances && govTokensBalances.total){\n      if (tokenUsdConversionRate){\n        govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n      }\n\n      // add gov token balance to total allocation\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n    }\n\n    tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocation;\n    tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlent;\n\n    if (tokenUsdConversionRate){\n      tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocationConverted.times(tokenUsdConversionRate);\n      tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlentConverted.times(tokenUsdConversionRate);\n    }\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    // console.log('getTokenAllocation',tokenConfig.idle.token,totalSupply ? totalSupply.toFixed(8) : null,tokenPrice ? tokenPrice.toFixed(8) : null,unlentBalance ? unlentBalance.toFixed(8) : null,tokenAllocation);\n\n    // console.log('Allocations for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getSushiswapPoolTokenPrice = async (contractName) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCallCached(contractName,'token0'),\n      this.genericContractCallCached(contractName,'token1'),\n      this.genericContractCallCached(contractName,'getReserves'),\n      this.getTokenTotalSupply(contractName)\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply){\n      const token0_config = {\n        address:token0_address\n      };\n      const token1_config = {\n        address:token1_address\n      };\n      const DAITokenConfig = {\n        address:this.getContractByName('DAI')._address\n      };\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig,token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig,token1_config)\n      ]);\n\n      if (token0_price && token1_price){\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0],18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1],18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply,18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      // console.log('getSushiswapConversionRate',path,res);\n\n      if (res){\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    if (tokenConfigDest.addressForPrice){\n      tokenConfigDest = Object.assign({},tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log('getUniswapConversionRate - CACHED',cachedDataKey,cachedData);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      // console.log('getUniswapConversionRate',path,unires);\n      \n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig,aTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const currentNetworkId = this.getRequiredNetworkId();\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find( p => p.name === stkAAVETokenConfig.protocol );\n\n    // console.log('getStkAaveDistribution_1',tokenConfig.idle.token,aTokenConfig.token);\n    const disabledTokens = this.getArrayPath(['disabledTokens',currentNetworkId],stkAAVETokenConfig) || [];\n\n    if (!aTokenConfig || disabledTokens.includes(tokenConfig.idle.token)){\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCall(aTokenConfig.token,'getIncentivesController');\n\n    if (!aaveIncentivesController_address){\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aaveIncentivesController_address}`;\n    await this.props.initContract(IAaveIncentivesController_name,aaveIncentivesController_address,IAaveIncentivesController);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig,false,false),\n      this.genericContractCall(IAaveIncentivesController_name,'assets',[aTokenConfig.address]),\n    ]);\n\n    // console.log('getStkAaveDistribution',IAaveIncentivesController_name,aTokenConfig.address,assetData);\n\n    if (assetData && tokenAllocation){\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)){\n        if (!aTokenIdleSupply){\n          aTokenIdleSupply = await this.genericContractCall(aTokenConfig.token,'balanceOf',[tokenConfig.idle.address]);\n        }\n\n        const aaveSpeed = this.BNify(assetData.emissionPerSecond);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network','secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize){\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        if (!this.BNify(aaveDistribution).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find( p => (p.name === stkAAVETokenConfig.protocol) );\n      if (aTokenInfo){\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getStkAaveDistribution(tokenConfig,null,false),\n        ]);\n\n        if (aaveDistribution && userPoolShare && !this.BNify(aaveDistribution).isNaN() && !this.BNify(userPoolShare).isNaN() ){\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getWMaticApr = async (token,tokenConfig,maticConversionRate=null) => {\n    const wMaticTokenConfig = this.getGlobalConfig(['govTokens','WMATIC']);\n    if (!wMaticTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getWMaticApr_${tokenConfig.idle.token}_${maticConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let wMaticApr = this.BNify(0);\n    const distributionSpeed = await this.getStkAaveDistribution(tokenConfig);\n\n    if (distributionSpeed && this.BNify(distributionSpeed).gt(0)){\n\n      // Get COMP conversion rate\n      if (!maticConversionRate){\n        const DAITokenConfig = {\n          address:this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address:wMaticTokenConfig.addressForPrice || wMaticTokenConfig.address\n          };\n          maticConversionRate = await this.getUniswapConversionRate(DAITokenConfig,destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!maticConversionRate || maticConversionRate.isNaN()){\n          maticConversionRate = this.BNify(1);\n        }\n      }\n\n      const wMaticValue = this.BNify(maticConversionRate).times(distributionSpeed);\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),tokenAllocation);\n\n      if (tokenAllocation){\n        wMaticApr = wMaticValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),wMaticValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),wMaticApr.toFixed());\n\n        if (!this.BNify(wMaticApr).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,wMaticApr);\n        }\n      }\n    }\n\n    return wMaticApr;\n  }\n  getStkAaveApr = async (token,tokenConfig,aaveConversionRate=null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    if (!stkAAVETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)){\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate){\n        const DAITokenConfig = {\n          address:this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address:stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig,destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()){\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = {\n        address:this.getContractByName('DAI')._address\n      };\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      console.log('getCompAPR',tokenConfig.idle.token,compConversionRate.toFixed(5),compDistribution.toFixed(5),compValue.toFixed(5),tokenAllocation.totalAllocationConverted.toFixed(5));\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token,tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = this.fixTokenDecimals(compDistribution,18).times(blocksPerYear);\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    } else {\n      this.idleGovToken.setProps(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getGovTokensFarming = () => {\n    const output = {};\n    const availableTokens = this.props.availableTokens;\n\n    Object.keys(availableTokens).forEach( token => {\n      const tokenGovTokens = this.getTokenGovTokens(availableTokens[token]);\n      Object.keys(tokenGovTokens).forEach( govToken => {\n        output[govToken] = tokenGovTokens[govToken];\n      });\n    });\n\n    return output;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const currentNetworkId = this.getRequiredNetworkId();\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      const disabledTokens = this.getArrayPath(['disabledTokens',currentNetworkId],govTokenConfig) || [];\n      if (!govTokenConfig.enabled || disabledTokens.includes(tokenConfig.idle.token) || (govTokenConfig.availableNetworks && !govTokenConfig.availableNetworks.includes(currentNetworkId))){\n        return;\n      }\n\n      if (govTokenConfig.protocol === 'idle'){\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency='day',mode='block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network','secondsPerYear']));\n    const multipliers = {\n      'day':{\n        'block':blocksPerYear.div(365.242199),\n        'second':secondsPerYear.div(365.242199)\n      },\n      'week':{\n        'block':blocksPerYear.div(52.1429),\n        'second':secondsPerYear.div(52.1429)\n      },\n      'month':{\n        'block':blocksPerYear.div(12),\n        'second':secondsPerYear.div(12)\n      },\n      'year':{\n        'block':blocksPerYear.div(1),\n        'second':secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n    \n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken){\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n        break;\n        case 'WMATIC':\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig,null,false);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'WMATIC':\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation){\n                const aTokenConfig = tokenConfig.protocols.find( p => (p.name === govTokenConfig.protocol) );\n                if (aTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]){\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const cTokenConfig = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (cTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null){\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const destTokenConfig = {\n        address:govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,govTokensBalances);\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${availableTokens ? JSON.stringify(Object.keys(availableTokens)) : 'null'}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account,tokenConfig) => {\n    if (!account){\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token,account);\n    if (govTokensAmounts){\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token,govTokenIndex);\n\n        if (govTokenAddress){\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig){\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token,govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'govTokens',[govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress,null);\n  }\n  getGovTokensUserAmounts = async (token,account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'getGovTokensAmounts',[account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token,account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token,govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce( (totalTVL,tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()){\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    },this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = {\n      address:this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens:{},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(idleTokenName)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply,18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL,token,tokenConfig,isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (govTokenBalance && govTokenConversionRate){\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance,govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()){\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply){\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply,18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL,token,oldTokenConfig,isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()){\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint[networkId],false,config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length>0){\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey,latestFeed,endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAvailableTokenAddress = (token,strategy) => {\n    const networkId = this.getRequiredNetworkId();\n    const tokenConfig = this.getArrayPath([networkId,strategy,token],availableTokens);\n    return tokenConfig ? tokenConfig.address : null;\n  }\n  getAggregatedStats = async (addGovTokens=true,allNetworks=false) => {\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','tvls']);\n    let networkIds = [networkId];\n    if (allNetworks){\n      networkIds = Object.keys(endpointInfo.endpoint);\n    }\n\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n\n    await this.asyncForEach(networkIds, async (networkId) => {\n      let tvls = await this.makeCachedRequest(endpointInfo.endpoint[networkId],endpointInfo.TTL,true,false,config);\n      if (!tvls){\n        tvls = await this.getAggregatedStats_chain();\n      }\n\n      if (tvls){\n        avgAPY = avgAPY.plus(this.BNify(tvls.avgAPY).times(this.BNify(tvls.totalTVL)));\n        totalAUM = totalAUM.plus(this.BNify(tvls.totalTVL));\n      }\n    });\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats_chain = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = {\n      address:this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n\n  getAvgAPYStats = async (address,isRisk,startTimestamp=null,endTimestamp=null) => {\n\n    const apiResults = await this.getTokenApiData(address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    if (apiResults && apiResults.length){\n      const apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate,18);\n        return sum.plus(idleRate);\n      },this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null,count=0) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = {\n      address:this.getContractByName('DAI')._address\n    };\n    const ToTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats','tokens',tokenConfig.token]) : tokenConfig;\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig,ToTokenConfig);\n    if (!this.BNify(conversionRate).isNaN()){\n      return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n    }\n\n    if (count<3){\n      return await this.getTokenConversionRate(tokenConfig,isRisk,conversionRateField,count+1); \n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats','rates']);\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001)){\n          let protocolScore = null;\n\n          const protocolInfo = tokenData && tokenData.length>0 ? tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) ) : null;\n          if (protocolInfo){\n            protocolScore = this.BNify(protocolInfo.defiScore);\n          }\n\n          // Take protocol score from tokenConfig\n          if (!protocolScore || this.BNify(protocolScore).isNaN() || this.BNify(protocolScore).lte(0)){\n            const protocolConfig = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n            if (protocolConfig){\n              protocolScore = this.BNify(protocolConfig.defiScore);\n            }\n          }\n\n          if (!protocolScore.isNaN()){\n            tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = await this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats','scores']);\n\n    if (!apiInfo.endpoint[networkId]){\n      return this.BNify(0);\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config);\n\n    if (scores && scores.length>0){\n      let tokenData = scores.find( s => s.address.toLowerCase() === tokenConfig.address.toLowerCase() );\n      if (tokenData){\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)){\n          // Set cached data\n          return this.setCachedData(cachedDataKey,tokenScore);\n        // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now()/1000);\n          const startTimestamp = parseInt(timestamp)-(60*60*24);\n          tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n          const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n          if (filteredTokenData.length){\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle){\n      return tokenAprs;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgApr && !this.BNify(cachedData.avgApr).isNaN()) && (cachedData.avgApy && !this.BNify(cachedData.avgApy).isNaN()) ){\n      // console.log('getTokenAprs - CACHED',tokenConfig.idle.token,cachedData);\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    tokenAprs.avgApr = await this.genericContractCallCached(tokenConfig.idle.token,'getAvgAPR');\n    if (tokenAprs.avgApr){\n      tokenAprs.avgApr = this.fixTokenDecimals(tokenAprs.avgApr,18);\n    }\n\n    if (tokenAprs.avgApr){\n\n      tokenAprs.avgApy = this.apr2apy(tokenAprs.avgApr.div(100)).times(100);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      // console.log('getTokenAprs',tokenConfig.idle.token,govTokensApr.toFixed(8),tokenAprs.avgApr.toFixed(8),tokenAprs.avgApy.toFixed(8));\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()){\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()){\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      // console.log('Aprs for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber = (value,decimals=3,maxPrecision=5,minPrecision=0) => {\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'icon']) || `images/tokens/${token}.svg`;\n                return (\n                  <ImageButton\n                    caption={token}\n                    imageSrc={imageSrc}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  width={1}\n                  maxWidth={this.props.showInline ? '31em' : 'initial'}\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'icon']) || `images/tokens/${token}.svg`;\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={imageSrc} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        const CustomComponent = fieldInfo.fieldComponent;\n\n                        let fieldProps = fieldInfo.props;\n\n                        // Merge with funcProps\n                        if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length>0){\n                          fieldProps = this.functionsUtil.replaceArrayPropsRecursive(fieldProps,fieldInfo.funcProps,this.props);\n                        }\n\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            {\n                              CustomComponent ? (\n                                <CustomComponent\n                                  {...this.props}\n                                  {...fieldProps}\n                                />\n                              ) : (\n                                <FieldComponent\n                                  {...this.props}\n                                  fieldInfo={fieldInfo}\n                                  colProps={colInfo.props}\n                                  parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                />\n                              )\n                            }\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver:false\n  }\n\n  setMouseOver(mouseOver){\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      border:1,\n      boxShadow:1,\n      borderRadius:2,\n      borderColor:null,\n      position:'relative',\n      minHeight:'initial',\n      backgroundColor:'cardBg'\n    };\n\n    if (isActive || (isInteractive && this.state.mouseOver)){\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Box, Flex, Text } from 'rimble-ui'\nimport Faquestion from '../Faquestion/Faquestion';\n\nclass GenericFaqs extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection:null\n  };\n  componentWillMount(){\n    const selectedSection = Object.keys(this.props.questions)[0];\n    this.setSection(selectedSection);\n  }\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const showSections = this.props.showSections === undefined || this.props.showSections;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n        >\n          {\n            showSections && (\n              <Flex\n                mb={[3,4]}\n                px={[2,0]}\n                width={[1,3/5]}\n                flexDirection={'row'}\n                justifyContent={'space-between'}\n              >\n                {\n                  Object.keys(this.props.questions).map( (section,i) => {\n                    const isSelected = section === this.state.selectedSection;\n                    return (\n                      <Flex\n                        key={`section_${i}`}\n                        textAlign={'center'}\n                        justifyContent={'center'}\n                        width={1/Object.keys(this.props.questions).length}\n                        borderBottom={ isSelected ? '3px solid #0036ff' : 'none'}\n                      >\n                        <Text\n                          mb={1}\n                          fontWeight={3}\n                          fontSize={[2, 3]}\n                          textAlign={'center'}\n                          onClick={() => this.setSection(section)}\n                          color={isSelected ? 'blue' : 'copyColor'}\n                          className={['pointer', isSelected ? 'selected' : '']}\n                        >\n                          {section}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            )\n          }\n          <Box\n            width={1}\n          >\n            {\n              this.props.questions[this.state.selectedSection].map( (question,i) => (\n                <Faquestion\n                  key={`answer_${i}`}\n                  answer={question.a}\n                  pt={i === 0 ? 0 : ''}\n                  question={question.q}\n                  isOpened={this.state.openedAnswer === i}\n                  handleClick={ e => this.toggleAnswer(e,i) }\n                />\n              ))\n            }\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default GenericFaqs;","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    approveEnabled:true,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || approveEnabledChanged || tokenConfigChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('Approve',this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    if (typeof this.props.checkLimit === 'function'){\n      const limitCheck = await this.props.checkLimit(inputValue);\n      if (!limitCheck){\n        return false;\n      }\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventValue: inputValue.toFixed(),\n        eventAction: this.props.tokenConfig.token,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const contractName = this.props.contractInfo.name;\n\n    let params = null;\n\n    // Check contract approved without permit\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      params = this.props.getTransactionParams(_amount,this.state.fastBalanceSelector);\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n\n      console.log('SendTxWithBalance',contractName, methodName, methodParams, value);\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n    const contractInfo = await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n\n    if (contractInfo){\n      const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n      return contractApproved;\n    }\n    \n    return false;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const contractApproved = await this.checkContractApproved();\n    const approveEnabled = this.props.approveEnabled !== false;\n\n    this.setState({\n      inputValue,\n      approveEnabled,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                mt={2}\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                this.state.approveEnabled && !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          dangerouslySetInnerHTML={{\n                            __html:this.props.approveDescription\n                          }}\n                        />\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={Object.assign({\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          },this.props.buttonProps)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass LimitReachedModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            iconHeight={'40px'}\n            title={'Limit Reached'}\n            icon={'images/warning.svg'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n              >\n                The pool has reached the limit size of {this.props.limit}! Please wait for the limit to be increased before trying to deposit again!\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                Got it\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default LimitReachedModal;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport { Flex, Text, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakedBalance:null,\n    trancheBalance:null,\n    approveEnabled:null,\n    buttonDisabled:false,\n    approveDescription:null,\n    selectedAction:'deposit',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChange = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChange){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account){\n      return null;\n    }\n\n    const [\n      // blockNumber,\n      tokenBalance,\n      trancheBalance,\n      // cdoCoolingPeriod,\n      // latestHarvestBlock,\n      // stakeCoolingPeriod,\n      // rewardsTokensInfo,\n      // userStakeBlock,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'coolingPeriod'),\n      // this.functionsUtil.genericContractCall(this.props.tokenConfig.CDO.name,'latestHarvestBlock'),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'coolingPeriod'),\n      // this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      // this.functionsUtil.genericContractCall(this.props.trancheConfig.CDORewards.name,'usersStakeBlock',[this.props.account]),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      tranchePrice,\n      stakedBalance,\n      trancheBalance,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        approveEnabled = true;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        contractInfo = this.props.trancheConfig.CDORewards;\n      break;\n      case 'unstake':\n        approveEnabled = false;\n        tokenConfig = this.props.trancheConfig;\n        contractInfo = this.props.trancheConfig.CDORewards;\n        balanceProp = this.state.stakedBalance;\n        if (!this.state.canUnstake){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantUnstake;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.`;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      // if (this.state.selectedAction === 'withdraw'){\n\n      // }\n\n      methodParams = [amount];\n    }\n\n    console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n    if (poolSize.plus(amount).gt(trancheLimit)){\n      this.setState({\n        activeModal:'limit'\n      })\n      return false;\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    const otherTrancheType = this.props.selectedTranche === 'AA' ? 'BB' : 'AA';\n    const otherTrancheDetails = this.functionsUtil.getGlobalConfig(['tranches',otherTrancheType]);\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        maxWidth={['100%','45em']}\n      >\n        {\n          !this.props.showSelectButton && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'flex-end'}\n            >\n              <Button\n                mb={2}\n                size={'small'}\n                width={'auto'}\n                contrastColor={'cardBg'}\n                icon={otherTrancheDetails.icon}\n                mainColor={otherTrancheDetails.color.hex}\n                onClick={e => this.props.selectTrancheType(otherTrancheDetails.route)}\n              >\n                Switch to {otherTrancheDetails.name}\n              </Button>\n            </Flex>\n          )\n        }\n        <DashboardCard\n          cardProps={{\n            py:3,\n            px:3,\n            border:null,\n            // style:{\n            //   border:`1px solid ${trancheDetails.color.hex}`\n            // }\n          }}\n        >\n          <Flex\n            pb={2}\n            mb={2}\n            alignItems={'center'}\n            flexDirection={'row'}\n            borderBottom={`1px solid ${trancheDetails.color.hex}`}\n          > \n            <Image\n              mr={2}\n              src={trancheDetails.image}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={4}\n              fontSize={[3,4]}\n              color={'copyColor'}\n            >\n              {trancheDetails.name}\n            </Text>\n          </Flex>\n          <Flex\n            style={{\n              flexBasis:'0',\n              flex:'1 1 0px',\n              flexWrap:'wrap',\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }}\n            alignItems={'flex-start'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Protocol\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Token\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Pool Size\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'tranchePool',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Auto-Farming\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'autoFarming',\n                  parentProps:{\n                    justifyContent:'flex-start'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Staking Rewards\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'stakingRewards',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                APY\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheApy',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <Text\n                  fontSize={1}\n                  fontWeight={2}\n                  lineHeight={'1'}\n                  color={'cellText'}\n                >\n                  +\n                </Text>\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'trancheIDLELastHarvest',\n                    props:{\n                      decimals:4,\n                      fontSize:1,\n                      fontWeight:2,\n                      lineHeight:'1',\n                      color:'cellText'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tranche={this.props.selectedTranche}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            /*\n            (this.functionsUtil.BNify(this.state.stakedBalance).gt(0) || this.functionsUtil.BNify(this.state.trancheBalance).gt(0)) && (\n              <Flex\n                py={2}\n                style={{\n                  flexBasis:'0',\n                  flex:'1 1 0px',\n                  flexWrap:'wrap',\n                  borderBottom:`1px solid ${this.props.theme.colors.divider}`\n                }}\n                alignItems={'flex-start'}\n                justifyContent={'flex-start'}\n              >\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Deposited\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheDeposited',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Staked\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheStaked',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n                <Flex\n                  width={0.33}\n                  flexDirection={'column'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Redeemable\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheRedeemable',\n                      props:{\n                        decimals:4,\n                        fontWeight:2,\n                        fontSize:[2,4],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n              </Flex>\n            )\n            */\n          }\n          {\n            this.props.showSelectButton ? (\n                <Button\n                  mt={3}\n                  width={1}\n                  contrastColor={'cardBg'}\n                  icon={trancheDetails.icon}\n                  mainColor={trancheDetails.color.hex}\n                  onClick={e => this.props.selectTrancheType(trancheDetails.route)}\n                >\n                  {\n                    this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Start with ${trancheDetails.name}`\n                  }\n                </Button>\n            ) : this.state.balanceProp && this.state.tokenConfig ? (\n              <Flex\n                width={1}\n                flexDirection={'column'}\n              >\n                <Flex\n                  mt={3}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <CardIconButton\n                    {...this.props}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    cardProps={{\n                      px:3,\n                      py:2,\n                      width:0.32\n                    }}\n                    text={'Deposit'}\n                    iconColor={'deposit'}\n                    icon={'ArrowDownward'}\n                    iconBgColor={'#ced6ff'}\n                    isActive={ this.state.selectedAction === 'deposit' }\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  {\n                    this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) ? (\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.32\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isActive={ this.state.selectedAction === 'unstake' }\n                        handleClick={ e => this.setSelectedAction('unstake') }\n                      />\n                    ) : (\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.32\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        isDisabled={ !this.state.userHasAvailableFunds }\n                        isActive={ this.state.selectedAction === 'stake' }\n                        handleClick={ e => this.state.userHasAvailableFunds ? this.setSelectedAction('stake') : null }\n                      />\n                    )\n                  }\n                  <CardIconButton\n                    {...this.props}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    cardProps={{\n                      px:3,\n                      py:2,\n                      width:0.32\n                    }}\n                    text={'Withdraw'}\n                    icon={'ArrowUpward'}\n                    iconColor={'redeem'}\n                    iconBgColor={'#ceeff6'}\n                    isDisabled={ !this.state.userHasAvailableFunds }\n                    isActive={ this.state.selectedAction === 'withdraw' }\n                    handleClick={ e => this.state.userHasAvailableFunds ? this.setSelectedAction('withdraw') : null }\n                  />\n                </Flex>\n                {\n                  this.state.infoText && (\n                    <IconBox\n                      cardProps={{\n                        p:2,\n                        mt:3,\n                        width:1,\n                      }}\n                      isActive={true}\n                      isInteractive={false}\n                      iconProps={{\n                        size:'1.2em',\n                        color:'flashColor'\n                      }}\n                      textProps={{\n                        fontWeight:500,\n                        color:'flashColor',\n                        textAlign:'center',\n                        fontSize:['13px','15px']\n                      }}\n                      icon={'LightbulbOutline'}\n                      text={this.state.infoText}\n                    />\n                  )\n                }\n                <Flex\n                  mt={2}\n                >\n                  <SendTxWithBalance\n                    error={null}\n                    {...this.props}\n                    buttonProps={{\n                      width:[1,0.45]\n                    }}\n                    permitEnabled={false}\n                    tokenConfig={this.state.tokenConfig}\n                    tokenBalance={this.state.balanceProp}\n                    contractInfo={this.state.contractInfo}\n                    checkLimit={this.checkLimit.bind(this)}\n                    approveEnabled={this.state.approveEnabled}\n                    buttonDisabled={this.state.buttonDisabled}\n                    callback={this.transactionSucceeded.bind(this)}\n                    approveDescription={this.state.approveDescription}\n                    changeInputCallback={this.changeInputCallback.bind(this)}\n                    contractApproved={this.contractApprovedCallback.bind(this)}\n                    getTransactionParams={this.getTransactionParams.bind(this)}\n                    action={this.functionsUtil.capitalize(this.state.selectedAction)}\n                  >\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <BuyModal\n                        {...this.props}\n                        showInline={true}\n                        availableMethods={[]}\n                        buyToken={this.props.selectedToken}\n                      />\n                    </Flex>\n                  </SendTxWithBalance>\n                </Flex>\n              </Flex>\n            ) : !this.props.account ? (\n              <ConnectBox\n                {...this.props}\n              />\n            ) : (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading Tranche Data...'}\n              />\n            )\n          }\n        </DashboardCard>\n        <LimitReachedModal\n          {...this.props}\n          limit={trancheLimit}\n          closeModal={this.resetModal}\n          isOpen={this.state.activeModal === 'limit'}\n        />\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityTranches extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n    let enabledTokens = this.props.enabledTokens;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTranches).reduce( (enabledTokens,protocol) => {\n        const tokens = Object.keys(this.props.availableTranches[protocol]);\n        tokens.forEach( token => {\n          if (!enabledTokens.includes(token)){\n            enabledTokens.push(token);\n          }\n        });\n        return enabledTokens;\n      },[]);\n    }\n\n    const transactions = this.props.transactionsList;\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(transactions).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Deposit':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const action = tx.action;\n          const balance = amountLent;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tranchePrice = this.functionsUtil.BNify(tx.tranchePrice);\n          const trancheTokens = this.functionsUtil.BNify(tx.trancheTokens);\n\n          if (!tranchePrice.isNaN() && !tranchePrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenAmount,\n              tranchePrice,\n              trancheTokens\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(Date.now()/1000)+86400;\n\n    const tokensData = {};\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n      tokensData[token] = [];\n    });\n\n    const trancheTokenBalance = {};\n\n    if (!firstTxTimestamp){\n      firstTxTimestamp = currTimestamp;\n    }\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      if (timeStamp > currTimestamp){\n        timeStamp = currTimestamp;\n      }\n      // timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!trancheTokenBalance[token]){\n          trancheTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenDecimals = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'decimals']);\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const trancheTokens = trancheTokenBalance[token];\n              const tranchePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.tranchePrice,tokenDecimals);\n              let newBalance = trancheTokens.times(tranchePrice);\n\n              // Set new balance and tranchePrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tranchePrice = tranchePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tranchePrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Deposit':\n                trancheTokenBalance[token] = trancheTokenBalance[token].plus(tx.trancheTokens);\n              break;\n              default:\n                trancheTokenBalance[token] = trancheTokenBalance[token].minus(tx.trancheTokens);\n                if (trancheTokenBalance[token].lt(0)){\n                  trancheTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = trancheTokenBalance[token].times(lastTx.tranchePrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(timeStamp,formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    // console.log('PortfolioEquityTranches',chartData);\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityTranches;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass FundsOverviewTranche extends Component {\n\n  state = {\n    // govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const [\n      // govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      apy,\n      depositTimestamp,\n      days\n    ] = await Promise.all([\n      // this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadTrancheField('apy',this.props.selectedToken,this.props.tokenConfig,this.props.account,false),\n      this.functionsUtil.loadTrancheField('depositTimestamp',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadTrancheField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    let avgAPY = await this.functionsUtil.getAvgAPYStats(this.props.tokenConfig.address,isRisk,depositTimestamp);\n\n    if (!avgAPY || this.functionsUtil.BNify(avgAPY).lte(0)){\n      avgAPY = apy;\n    }\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          desc:this.functionsUtil.getGlobalConfig(['messages','apyLong']),\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '0.00%') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <TrancheField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      // govTokensAprs,\n      aggregatedValues,\n      // govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      // govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Flex\n                          mt={2}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={2}\n                            fontSize={[1,2]}\n                            color={'cellText'}\n                          >\n                            {v.props.title}\n                          </Text>\n                          {\n                            v.props.desc && \n                              <Tooltip\n                                placement={'bottom'}\n                                message={v.props.desc}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          {\n            this.props.transactionsList && this.props.transactionsList.length>0 && (\n              <Flex\n                width={1}\n                ml={[0,3]}\n                id={\"funds-overview\"}\n              >\n                <PortfolioEquityTranches\n                  {...this.props}\n                  chartHeight={350}\n                  parentId={'funds-overview'}\n                  chartToken={this.props.selectedToken}\n                  enabledTokens={[this.props.selectedToken]}\n                  frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                />\n              </Flex>\n            )\n          }\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheDeposited',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Staked Amount\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheStaked',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheRedeemableWithStaked',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:this.props.theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-8px'}\n                justifyContent={'center'}\n              >\n                <TrancheField\n                  {...this.props}\n                  addTokenName={false}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,1/6]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Realized APY\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'realizedApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewTranche;","import Title from '../Title/Title';\nimport { Button, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass StakingRewardsTranche extends Component {\n\n  state = {\n    stakingRewards:null,\n    stakingRewardsRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadUserRewards();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const portfolioChanged = JSON.stringify(prevProps.portfolio) !== JSON.stringify(this.props.portfolio);\n    const trancheConfigChanged = JSON.stringify(prevProps.trancheConfig) !== JSON.stringify(this.props.trancheConfig);\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || trancheConfigChanged || portfolioChanged || transactionsChanged){\n      this.loadUserRewards();\n    }\n  }\n\n  async loadUserRewards(){\n    if (!this.props.account || !this.props.trancheConfig || !this.props.portfolio){\n      return false;\n    }\n\n    const [\n      stakingRewards,\n      trancheBalance,\n      rewardTokensInfo,\n      trancheStakedAmount\n    ] = await Promise.all([\n      this.functionsUtil.getTrancheStakingRewards(this.props.account,this.props.trancheConfig),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account,false),\n      this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals)\n    ]);\n\n    const trancheBalanceInfo = this.props.portfolio.tranchesBalance.find( p => p.token === this.props.token && p.protocol === this.props.protocol && p.tranche === this.props.tranche );\n    \n    const stakingRewardsRows = [];\n    await this.functionsUtil.asyncForEach(Object.keys(stakingRewards), async (rewardToken) => {\n      const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',rewardToken]);\n      const tokenAmount = this.functionsUtil.BNify(stakingRewards[rewardToken]);\n      const rewardTokenInfo = rewardTokensInfo[rewardToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(rewardToken,this.props.account);\n      let distributionSpeed = rewardTokenInfo ? rewardTokenInfo.lastAmount : null;\n      if (trancheBalanceInfo){\n        distributionSpeed = distributionSpeed.times(trancheBalanceInfo.poolShare);\n      }\n      stakingRewardsRows.push({\n        token:rewardToken,\n        staked:trancheStakedAmount,\n        balance:tokenBalance.toFixed(8),\n        reedemable:tokenAmount.toFixed(8),\n        trancheBalance:this.functionsUtil.integerValue(trancheBalance),\n        tokenIcon:tokenConfig.icon || `images/tokens/${rewardToken}.svg`,\n        distributionSpeed:distributionSpeed ? distributionSpeed.toFixed(8)+` ${rewardToken} (last harvest)` : '-'\n      });\n    });\n\n    // console.log('stakingRewardsRows',stakingRewardsRows);\n\n    this.setState({\n      stakingRewardsRows\n    });\n  }\n\n  claimCallback(tx){\n    this.loadUserRewards();\n  }\n\n  stakeCallback(tx){\n    this.loadUserRewards();\n  }\n\n  render() {\n    return (\n      this.state.stakingRewardsRows ?\n        <Flex\n          mb={[0,4]}\n          width={1}\n          flexDirection={'column'}\n          id={'funds-overview-container'}\n        >\n          <Title my={[3,4]}>Staking Rewards</Title>\n          <CustomList\n            rows={this.state.stakingRewardsRows}\n            cols={[\n              {\n                title:'TOKEN',\n                props:{\n                  width:[0.18,0.16]\n                },\n                fields:[\n                  {\n                    type:'image',\n                    props:{\n                      mr:2,\n                      size:this.props.isMobile ? '1.2em' : '1.8em'\n                    },\n                    path:['tokenIcon']\n                  },\n                  {\n                    type:'text',\n                    path:['token'],\n                  }\n                ]\n              },\n              {\n                mobile:false,\n                title:'BALANCE',\n                props:{\n                  width:[0.27,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['balance'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'REDEEMABLE',\n                desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                props:{\n                  width:[0.29,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['reedemable'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'DISTRIBUTION',\n                desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                props:{\n                  width:[0.29,0.24],\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['distributionSpeed'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  }\n                ]\n              },\n              {\n                title:'',\n                props:{\n                  width:[0.26,0.16],\n                },\n                parentProps:{\n                  width:1\n                },\n                fields:[\n                  {\n                    funcProps:{\n                      componentProps:{\n                        disabled:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? true : false ),\n                      },\n                      // value:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // action:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'Stake' : 'Claim') : 'Claim'),\n                      // methodName:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // transactionParams:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? [this.functionsUtil.BNify(props.row.trancheBalance).toFixed()] : []) : []),\n                      // callback:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? this.stakeCallback.bind(this) : this.claimCallback.bind(this)) : this.claimCallback.bind(this))\n                    },\n                    fieldComponent:ExecuteTransaction,\n                    props:{\n                      params:[],\n                      parentProps:{\n                        width:1\n                      },\n                      Component:Button,\n                      componentProps:{\n                        style:{\n                          width:'100%'\n                        },\n                        value:'Claim',\n                        borderRadius:4,\n                        mainColor:'redeem',\n                        size:this.props.isMobile ? 'small' : 'medium'\n                      },\n                      value:'Claim',\n                      action:'claim',\n                      methodName:'claim',\n                      callback:this.claimCallback.bind(this),\n                      contractName:this.props.trancheConfig.CDORewards.name\n                    }\n                  }\n                ]\n              }\n            ]}\n            {...this.props}\n          />\n        </Flex>\n      : this.props.children || null\n    );\n  }\n}\n\nexport default StakingRewardsTranche;\n","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport GenericFaqs from '../GenericFaqs/GenericFaqs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheDetails from '../TrancheDetails/TrancheDetails';\n// import TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport FundsOverviewTranche from '../FundsOverviewTranche/FundsOverviewTranche';\nimport StakingRewardsTranche from '../StakingRewardsTranche/StakingRewardsTranche';\n\nclass TranchePage extends Component {\n\n  state = {\n    transactions:[],\n    componentLoaded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTransactions();\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const portfolioChanged = (this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio);\n    if (portfolioChanged){\n      this.loadTransactions();\n    }\n  }\n\n  loadTransactions(){\n    const transactions = this.props.portfolio ? this.props.portfolio.transactions.filter( t => t.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && t.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || t.tranche === this.props.trancheType) ) : [];\n\n    // console.log('loadTransactions',this.props.selectedProtocol,this.props.selectedToken,this.props.trancheType,transactions);\n    const componentLoaded = true;\n\n    this.setState({\n      transactions,\n      componentLoaded\n    });\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    const filteredTranchesTypes = Object.keys(tranchesDetails).filter( trancheType => !this.props.trancheType || this.props.trancheType === trancheType );\n    return (\n      <Box\n        mb={4}\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.capitalize(this.props.selectedProtocol)} - {this.props.selectedToken} - {this.props.trancheDetails ? this.props.trancheDetails.name : 'Tranches'} \n        </Title>\n        {\n          /*\n          !this.props.trancheType ? (\n            <TrancheWelcome\n              {...this.props}\n              tokenConfig={this.props.tokenConfig}\n              selectTrancheType={this.props.selectTrancheType}\n            />\n          ) : (\n          */\n            <Flex\n              mt={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={this.props.trancheType ? 'center' : 'space-between'}\n            >\n              {\n                filteredTranchesTypes.map( trancheType => (\n                  <Flex\n                    mb={[3,0]}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    key={`tranche_${trancheType}`}\n                    width={[1,(1/filteredTranchesTypes.length)-0.02]}\n                  >\n                    <TrancheDetails\n                      {...this.props}\n                      selectedTranche={trancheType}\n                      cdoConfig={this.props.tokenConfig.CDO}\n                      showSelectButton={!this.props.trancheType}\n                      selectTrancheType={this.props.selectTrancheType}\n                      trancheConfig={this.props.tokenConfig[trancheType]}\n                    />\n                  </Flex>\n                ))\n              }\n            </Flex>\n            /*\n          )\n        */\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.props.userHasFunds && this.props.trancheType &&\n            <StakingRewardsTranche\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              transactionsList={this.state.transactions}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.props.userHasFunds && this.props.trancheType &&\n            <Flex\n              mb={[0,4]}\n              width={1}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewTranche\n                {...this.props}\n                token={this.props.selectedToken}\n                tranche={this.props.trancheType}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                transactionsList={this.state.transactions}\n                trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n              />\n            </Flex>\n        }\n        {\n          this.props.account && this.state.transactions && this.state.transactions.length>0 && \n            <Flex\n              mb={[3,4]}\n              width={1}\n              id={'transactions'}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Transactions</Title>\n              <TransactionsList\n                {...this.props}\n                enabledTokens={[this.props.selectedToken]}\n                transactionsList={this.state.transactions}\n                availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                  availableActions[t.action.toLowerCase()] = t.action;\n                  return availableActions;\n                },{})}\n                cols={[\n                  {\n                    title: this.props.isMobile ? '' : 'HASH',\n                    props:{\n                      width:[0.13,0.18]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        name:'hash',\n                        mobile:false\n                      }\n                    ]\n                  },\n                  {\n                    title:'ACTION',\n                    mobile:false,\n                    props:{\n                      width:0.12,\n                    },\n                    fields:[\n                      {\n                        name:'action'\n                      }\n                    ]\n                  },\n                  {\n                    title:'DATE',\n                    props:{\n                      width:[0.27,0.15],\n                    },\n                    fields:[\n                      {\n                        name:'date'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'STATUS',\n                    props:{\n                      width:[0.18,0.16],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'statusIcon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'status'\n                      }\n                    ]\n                  },\n                  {\n                    title:'AMOUNT',\n                    props:{\n                      width:[0.23,0.11],\n                    },\n                    fields:[\n                      {\n                        name:'amount'\n                      },\n                    ]\n                  },\n                  {\n                    title:'PROTOCOL',\n                    props:{\n                      width:[0.21, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'image',\n                        name:'custom',\n                        path:['protocolIcon'],\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        type:'text',\n                        mobile:false,\n                        name:'custom',\n                        path:['protocol']\n                      }\n                    ]\n                  },\n                  {\n                    title:'ASSET',\n                    props:{\n                      width:[0.16,0.14],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:[0,2],\n                          height:['1.4em','1.6em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      },\n                    ]\n                  },\n                ]}\n              />\n            </Flex>\n        }\n        {\n          this.props.trancheType && (\n            <Flex\n              width={1}\n              id={'faqs'}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                my={3}\n              >\n                Frequently asked questions\n              </Title>\n              <Flex\n                width={[1,0.5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <GenericFaqs\n                  showSections={false}\n                  questions={{\n                    '':[\n                      {\n                        q: 'Is there a locking period?',\n                        a: `There are no locking period or epochs and users are free to enter and exit at any time. The interest earned (and governance tokens, after being partially sold in the market) will be split between the two classes according to a predefined ratio called trancheAPRSplitRatio (eg 20% interest to Senior tranche holders and 80% to Junior tranche). Hence, the rate is variable for both classes of tranches.`\n                      },\n                      {\n                        q: 'How the APY is determined?',\n                        a: `The base APY, before being splitted between tranches, is provided by the underlying strategy that takes into account the reinvestment of the accrued governance tokens (except for eventual IDLE rewards). The actual APY of each tranche class is determined by the ratio between the current underlying TVL of Senior and Junior tranches (ie APY = share of yield allocated to senior tranches / Senior TVL). The APY has to be considered net of fees. For more info <a href=\"https://github.com/Idle-Labs/idle-tranches#idle-dynamic-tranches\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.link}\">view the readme</a>`\n                      },\n                      {\n                        q: 'What happens in case of hack?',\n                        a: `In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).`\n                      },\n                      {\n                        q: 'How are fees collected?',\n                        a: `Fees collected at each harvest event. When the strategy auto-reinvest accrued tokens, Idle protocol charges a 10% performance fee. Renevues get routed to FeeCollector address.`\n                      },\n                      {\n                        q: 'What are staking rewards?',\n                        a: `To keep a good ratio between Senior and Junior tranches and an healthy APY part of farmed governance tokens (eg IDLE) are redistributed to users who stakes their tranche tokens in specific tranche rewards contracts.`\n                      } \n                    ]\n                  }}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default TranchePage;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\n\nclass TranchesList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledProtocols = this.props.enabledProtocols;\n    if (!enabledProtocols || !enabledProtocols.length){\n      enabledProtocols = Object.keys(this.props.availableTranches);\n    }\n\n    return (\n      <Flex id=\"tranches-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            enabledProtocols.map(protocol => {\n              const protocolConfig = this.props.availableTranches[protocol];\n              if (!protocolConfig){\n                return null;\n              }\n              const tranche = this.props.trancheType || null;\n              return Object.keys(protocolConfig).map( token => (\n                <TableRow\n                  {...this.props}\n                  token={token}\n                  tranche={tranche}\n                  protocol={protocol}\n                  key={`tranche-${protocol}`}\n                  rowId={`tranche-col-${protocol}`}\n                  tokenConfig={protocolConfig[token]}\n                  cardId={`tranche-card-${protocol}`}\n                  fieldComponent={this.props.fieldComponent || TrancheField}\n                />\n              ))\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TranchesList;\n","import React, { Component } from \"react\";\nimport RoundButton from \"../RoundButton/RoundButton\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheField from \"../TrancheField/TrancheField\";\nimport { Box, Flex, Icon, Text, Image } from \"rimble-ui\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass Base extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const trancheDetails = this.props.trancheDetails;\n    const strategyInfo = this.functionsUtil.getGlobalConfig([\n      \"strategies\",\n      \"tranches\"\n    ]);\n\n    const tokenConfig =\n      this.props.tokenConfig ||\n      this.props.availableTranches[strategyInfo.protocol][strategyInfo.token];\n\n    return (\n      <Box my={[3, 0]} boxShadow={1} width={[1, 0.49]} borderRadius={2}>\n        <Flex\n          height={\"100%\"}\n          p={0}\n          mx={0}\n          borderColor={\"transparent\"}\n          border={\"0\"}\n          borderRadius={2}\n          overflow={\"hidden\"}\n          flexDirection={\"column\"}\n          backgroundColor={\"cardBg\"}\n          justifyContent={[\n            \"center\",\n            trancheDetails.type === \"AA\" ? \"left\" : \"right\"\n          ]}\n        >\n          <Flex\n            width={1}\n            borderBottom={`1px solid ${this.props.theme.colors.divider2}`}\n          >\n            <Flex pb={2} mx={2} my={3} flexDirection={\"column\"}>\n              <Flex mt={3} alignItems={\"center\"}>\n                <Image\n                  ml={3}\n                  mr={1}\n                  src={trancheDetails.image}\n                  alt={\"random unsplash image\"}\n                  size={this.props.isMobile ? \"2em\" : \"2.4em\"}\n                />\n                <Flex mx={1}>\n                  <Text\n                    ml={[2, 0]}\n                    fontWeight={4}\n                    fontSize={[4, 5]}\n                    lineHeight={1}\n                  >\n                    {trancheDetails.name}\n                  </Text>\n                </Flex>\n              </Flex>\n              <Flex\n                ml={5}\n                mr={3}\n                mt={3}\n                alignItems={\"flex-start\"}\n                flexDirection={\"column\"}\n              >\n                <Flex mr={1} flexDirection={\"row\"} alignItems={\"baseline\"}>\n                  <TrancheField\n                    fieldInfo={{\n                      name: `${trancheDetails.baseName}Apy`,\n                      showTooltip: false,\n                      props: {\n                        decimals: 2,\n                        fontWeight: 4,\n                        lineHeight: \"1\",\n                        fontSize: [3, 4],\n                        textAlign: \"center\",\n                        flexProps: {\n                          justifyItems: \"flex-end\"\n                        },\n                        color: this.props.trancheDetails.color.hex\n                      }\n                    }}\n                    {...this.props}\n                    tokenConfig={tokenConfig}\n                    token={strategyInfo.token}\n                    tranche={strategyInfo.tranche}\n                    protocol={strategyInfo.protocol}\n                  />\n                  <Text\n                    my={1}\n                    ml={[2, 3]}\n                    fontSize={1}\n                    lineHeight={\"1\"}\n                    textAlign={\"left\"}\n                    color={\"cellText\"}\n                  >\n                    Current APY (variable)\n                  </Text>\n                </Flex>\n                {/*\n                <TrancheField\n                  fieldInfo={{\n                    showLoader:false,\n                    name:'trancheIDLEDistribution',\n                    props:{\n                      decimals:2,\n                      fontWeight:2,\n                      fontSize:[0,1],\n                      color:'cellText',\n                      textAlign:'center',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    },\n                  }}\n                  {...this.props}\n                  tokenConfig={tokenConfig}\n                  token={strategyInfo.token}\n                  trancheConfig={tokenConfig.AA}\n                  tranche={strategyInfo.tranche}\n                  protocol={strategyInfo.protocol}\n                />\n                */}\n                <Text\n                  mt={3}\n                  fontWeight={2}\n                  fontSize={[1, 2]}\n                  textAlign={\"left\"}\n                  lineHeight={\"1.5\"}\n                  color={\"copyColor\"}\n                >\n                  {trancheDetails.description.long}\n                </Text>\n              </Flex>\n            </Flex>\n          </Flex>\n          <Flex bg={\"cardBgContrast\"} height={\"100%\"} flexDirection={\"column\"}>\n            <Flex mt={3} my={3} pl={2} width={1} flexDirection={\"column\"}>\n              {trancheDetails.features.map((feature, index) => (\n                <Flex\n                  mb={2}\n                  my={1}\n                  px={2}\n                  mt={[2, 1]}\n                  alignItems={\"center\"}\n                  flexDirection={\"row\"}\n                  key={`feature_${index}`}\n                >\n                  <Icon\n                    mr={2}\n                    ml={3}\n                    name={\"Done\"}\n                    color={\"tick\"}\n                    size={this.props.isMobile ? \"1.6em\" : \"1.8em\"}\n                  />\n                  <Text ml={[2, 1]} fontSize={[1, 2]} fontWeight={\"500\"}>\n                    {feature}\n                  </Text>\n                </Flex>\n              ))}\n            </Flex>\n            <Flex\n              height={\"100%\"}\n              alignItems={\"flex-end\"}\n              width={1}\n              justifyContent={\"center\"}\n            >\n              <RoundButton\n                buttonProps={{\n                  my: 3,\n                  width: 0.85,\n                  fontSize: 2,\n                  contrastColor: \"white\",\n                  mainColor: trancheDetails.color.hex\n                }}\n                handleClick={e =>\n                  this.props.selectTrancheType(trancheDetails.route)\n                }\n              >\n                {this.props.tokenConfig\n                  ? `Go to ${trancheDetails.name}`\n                  : `Enter the ${trancheDetails.name}`}\n              </RoundButton>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Base;\n","import React, { Component } from \"react\";\nimport { Link, Flex, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass TrancheFlash extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const flashData = this.functionsUtil.getGlobalConfig([\"tranchflash\"]);\n    return (\n      <Flex\n        width={1}\n        mx={4}\n        flexDirection={[\"column\", \"row\"]}\n        justifyContent={\"center\"}\n      >\n        <Flex mx={2} my={[2, 4]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex justifyContent={\"left\"} my={3} width={[1, 0.7]}>\n            <Text\n              bold={\"true\"}\n              fontWeight={4}\n              lineHeight={1}\n              color={\"white\"}\n              fontSize={[5, 6]}\n              textAlign={\"left\"}\n            >\n              {flashData.subtitle}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            width={1}\n            mb={[2, 3]}\n            justifyContent={\"left\"}\n          >\n            <Text\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n            >\n              {flashData.desc}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            mb={2}\n            width={1}\n            flexDirection={\"column\"}\n          >\n            {\n              flashData.questions.map( (question,index) => (\n                <Flex\n                  my={2}\n                  key={`question_${index}`}\n                  alignItems={\"flex-start\"}\n                >\n                  <Link\n                    fontSize={2}\n                    fontWeight={2}\n                    opacity={\"50%\"}\n                    color={\"white\"}\n                    textAlign={\"left\"}\n                    onClick={e =>\n                      this.props.openTooltipModal(question.desc, question.msg)\n                    }\n                  >\n                    <Flex\n                      flexDirection={'row'}\n                      alignItems={\"flex-start\"}\n                    >\n                      <Image\n                        mr={2}\n                        src={flashData.helpcircle}\n                      />\n                      {question.desc}\n                    </Flex>\n                  </Link>\n                </Flex>\n              ))\n            }\n          </Flex>\n        </Flex>\n        <Flex\n          mt={6}\n          width={0.2}\n          hidden={this.props.isMobile ? 1 : 0}\n          alignItems={\"flex-start\"}\n        >\n          <Image hidden={this.props.isMobile ? 1 : 0} src={flashData.arrows} />\n        </Flex>\n        <Flex ml={2} my={[3, 5]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"AA\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.seniorinfo\n              }}\n            ></Text>\n          </Flex>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              ml={[0, 4]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"BB\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.juniorinfo\n              }}\n            ></Text>\n          </Flex>\n        </Flex>\n        {/*<Flex width={0.3}>\n          <Text>ABC</Text>\n        </Flex>*/}\n      </Flex>\n    );\n  }\n}\nexport default TrancheFlash;\n","import Title from \"../Title/Title\";\nimport { Flex, Text } from \"rimble-ui\";\nimport ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport styles from \"./TrancheWelcome.module.scss\";\nimport TrancheBox from \"../TrancheBox/TrancheBox\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheFlash from \"../TrancheFlash/TrancheFlash\";\n\nclass TrancheWelcome extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig([\"tranches\"]);\n    return (\n      <Flex width={1} aligItems={\"center\"} justifyContent={\"center\"}>\n        <Flex\n          mb={3}\n          width={1}\n          maxWidth={8}\n          aligItems={\"center\"}\n          flexDirection={\"column\"}\n          justifyContent={\"space-between\"}\n        >\n          {!this.props.tokenConfig ? (\n            <>\n              <Title fontSize={[5, 6]}>Perpetual Yield Tranches</Title>\n              <Flex\n                width={1}\n                mb={[3, 4]}\n                mx={\"auto\"}\n                aligItems={\"center\"}\n                justifyContent={\"center\"}\n              ></Flex>\n              <Flex\n                border={1}\n                borderRadius={2}\n                borderColor={\"transparent\"}\n                backgroundColor={\"newblue\"}\n                className={[\n                  styles.trancheFlash,\n                  this.props.isMobile ? styles.mobile : null\n                ]}\n              >\n                <TrancheFlash {...this.props}></TrancheFlash>\n              </Flex>\n            </>\n          ) : (\n            <Title\n              mb={3}\n              fontWeight={2}\n              fontSize={[3, 4]}\n              color={\"copyColor\"}\n              textAlign={\"center\"}\n            >\n              Select your preferred Tranche\n            </Title>\n          )}\n          <Flex my={3} mx={0} justifyContent={\"center\"}>\n            <Flex\n              width={1}\n              flexDirection={[\"column\", \"row\"]}\n              justifyContent={\"space-between\"}\n            >\n              {Object.keys(tranchesDetails).map((trancheType, index) => (\n                <TrancheBox\n                  {...this.props}\n                  key={`tranche_${index}`}\n                  tokenConfig={this.props.tokenConfig}\n                  trancheDetails={tranchesDetails[trancheType]}\n                />\n              ))}\n            </Flex>\n          </Flex>\n          <Flex\n            mt={3}\n            width={1}\n            px={[0,5]}\n            justifyContent={\"center\"}\n          >\n            <Text\n              fontSize={[0,1]}\n              color={'statValue'}\n              textAlign={\"center\"}\n            >\n              If you're still unsure in which Tranche to pick, reach out to us on our <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['forumURL'])}>Forum</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['discordURL'])}>Discord</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['telegramURL'])}>Telegram</ExtLink> or <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['twitterURL'])}>Twitter</ExtLink>.<br />The team and the community would be happy to help!\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheWelcome;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass GenericPieChart extends Component {\n  state = {\n    chartProps:null,\n    selectedSlice:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.setStateSafe({\n        chartProps:null,\n        selectedSlice:null,\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: this.props.tooltipFormat || (v => v),\n      sliceLabel: this.props.sliceLabel || (d => d.value),\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.margin || {top:0,right:0,bottom:0,left:0},\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n    };\n\n    if (this.props.showLegend){\n      chartProps.legends = [\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: this.props.theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ];\n    }\n\n    this.setStateSafe({\n      chartProps\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        {\n          this.state.chartProps && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.state.selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={this.state.selectedSlice.image}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={this.state.selectedSlice.value}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={this.props.defaultImage}\n                    />\n                    <Text\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                    >\n                      {this.props.defaultValue}\n                    </Text>\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.props.defaultLabel}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.props.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default GenericPieChart;","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = earningsStart.plus(portfolio.totalAmountLent.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TranchePage from '../TranchePage/TranchePage';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport GenericPieChart from '../GenericPieChart/GenericPieChart';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport { Box, Flex, Heading, Loader, Text, Icon, Tooltip, Image } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass Tranches extends Component {\n\n  state = {\n    portfolio:null,\n    transactions:[],\n    tokenConfig:null,\n    trancheType:null,\n    trancheRoute:null,\n    selectedToken:null,\n    userHasFunds:false,\n    depositedTokens:[],\n    trancheDetails:null,\n    useTrancheType:false,\n    portfolioLoaded:false,\n    componentLoaded:false,\n    selectedProtocol:null,\n    allocationChartData:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n\n    this.loadPortfolio().then( () => {\n      const componentLoaded = true;\n      const trancheRoute = this.props.urlParams.param1;\n      const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n      const trancheDetails = Object.values(tranchesDetails).find( t => t.route === trancheRoute );\n\n      if (trancheDetails !== undefined){\n        const trancheType = trancheDetails.type;\n        const useTrancheType = !this.state.userHasFunds;\n        const selectedToken = this.props.urlParams.param3;\n        const selectedProtocol = this.props.urlParams.param2;\n        const tokenConfig = selectedProtocol ? (this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null) : null;\n\n        if (this.state.userHasFunds && !tokenConfig){\n          return this.props.goToSection(this.props.selectedSection.route);\n        }\n\n        this.setState({\n          trancheType,\n          tokenConfig,\n          trancheRoute,\n          selectedToken,\n          trancheDetails,\n          useTrancheType,\n          selectedProtocol\n        });\n      } else {\n        const selectedToken = this.props.urlParams.param2;\n        const selectedProtocol = this.props.urlParams.param1;\n        const tokenConfig = this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null;\n        if (tokenConfig){\n          this.setState({\n            tokenConfig,\n            selectedToken,\n            selectedProtocol\n          });\n        }\n      }\n\n      this.setState({\n        componentLoaded\n      });\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTranchesChanged = JSON.stringify(prevProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    if (accountChanged || availableTranchesChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async loadPortfolio(){\n    if (!this.props.account){\n      const userHasFunds = false;\n      const portfolioLoaded = true;\n      this.setState({\n        userHasFunds,\n        portfolioLoaded\n      });\n      return false;\n    }\n\n    const portfolio = await this.functionsUtil.getAccountPortfolioTranches(this.props.availableTranches,this.props.account);\n    // console.log('loadPortfolio',portfolio);\n\n    if (portfolio){\n      const portfolioLoaded = true;\n      const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n\n      const tranchesTokens = [];\n      const tranchesBalances = [];\n      portfolio.tranchesBalance.forEach( trancheInfo => {\n        if (!tranchesBalances[trancheInfo.tranche]){\n          tranchesBalances[trancheInfo.tranche] = {\n            weight:this.functionsUtil.BNify(0),\n            balance:this.functionsUtil.BNify(0)\n          };\n        }\n        tranchesBalances[trancheInfo.tranche].weight = tranchesBalances[trancheInfo.tranche].weight.plus(trancheInfo.trancheWeight);\n        tranchesBalances[trancheInfo.tranche].balance = tranchesBalances[trancheInfo.tranche].balance.plus(trancheInfo.tokenBalance);\n\n        if (!tranchesTokens[trancheInfo.token]){\n          tranchesTokens[trancheInfo.token] = this.functionsUtil.BNify(0);\n        }\n        tranchesTokens[trancheInfo.token] = tranchesTokens[trancheInfo.token].plus(trancheInfo.tokenBalance);\n      });\n\n      const depositedTokens = Object.keys(tranchesTokens);\n\n      const portfolioDonutData = Object.keys(tranchesTokens).map( token => {\n        const balanceValue = parseFloat(tranchesTokens[token].toFixed(4));\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token]);\n        return {\n          id:token,\n          name:token,\n          label:token,\n          value:balanceValue,\n          description: `$ ${balanceValue} in ${token}`,\n          color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n          image:tokenConfig.icon || `images/tokens/${token}.svg`,\n        };\n      });\n\n      const allocationChartData = Object.keys(tranchesBalances).map((trancheName,i)=>{\n        const trancheConfig = tranchesConfig[trancheName];\n        const balanceInfo = tranchesBalances[trancheName];\n        const weightValue = parseFloat(balanceInfo.weight.times(100).toFixed(2));\n        return {\n          id:trancheName,\n          name:trancheName,\n          value:weightValue,\n          label: trancheConfig.name,\n          color:'hsl('+trancheConfig.color.hsl.join(',')+')',\n          description: `$ ${balanceInfo.balance.toFixed(2)} in ${trancheConfig.name}`\n        };\n      });\n\n      // console.log('allocationChartData',allocationChartData,'portfolioDonutData',portfolioDonutData);\n      \n      const transactions = portfolio.transactions;\n      const userHasFunds = portfolio && this.functionsUtil.BNify(portfolio.totalBalance).gt(0);\n\n      this.setState({\n        portfolio,\n        userHasFunds,\n        transactions,\n        portfolioLoaded,\n        depositedTokens,\n        portfolioDonutData,\n        allocationChartData\n      });\n    }\n  }\n\n  selectTrancheType(trancheRoute){\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`;\n    const tokenConfig = this.props.availableTranches[this.state.selectedProtocol] && this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] ? this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] : null;\n    if (tokenConfig){\n      route += `/${this.state.selectedProtocol}/${this.state.selectedToken}`;\n    }\n    this.props.goToSection(route);\n  }\n\n  selectTranche(protocol,token){\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if (tokenConfig){\n      let route = `${this.props.selectedSection.route}`;\n      if (this.state.trancheRoute){\n        route += `/${this.state.trancheRoute}`;\n      }\n      route += `/${protocol}/${token}`;\n\n      this.props.goToSection(route);\n    }\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setState({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  goBack(){\n    if (this.state.tokenConfig && this.state.trancheType){\n      if (!this.state.userHasFunds){\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n      } else {\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n      }\n    }/* else if (this.state.trancheType){\n      this.props.goToSection(this.props.selectedSection.route);\n    } */else {\n      this.props.goToSection(this.props.selectedSection.route);\n    }\n  }\n\n  render() {\n\n    const pathLink = [];\n    const breadcrumbPath = [];\n    if (this.state.trancheType){\n      breadcrumbPath.push(this.functionsUtil.capitalize(this.state.trancheDetails.baseName));\n      if (this.state.tokenConfig){\n        if (!this.state.userHasFunds){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n        } else if (this.state.tokenConfig){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n        }\n      }\n    }\n    if (this.state.selectedProtocol){\n      breadcrumbPath.push(this.functionsUtil.getGlobalConfig(['stats','protocols',this.state.selectedProtocol,'label']));\n    }\n    if (this.state.selectedToken){\n      breadcrumbPath.push(this.state.selectedToken);\n    }\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          breadcrumbPath.length>0 && (\n            <Flex\n              width={1}\n              mb={[2,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-start'}\n            >\n              <Flex\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Tranches'}\n                  pathLink={pathLink}\n                  path={breadcrumbPath}\n                  isMobile={this.props.isMobile}\n                  handleClick={this.goBack.bind(this)}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                justifyContent={'flex-end'}\n              >\n                \n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !this.state.componentLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                my:3,\n                minHeight:'60vh',\n                flexDirection:'column'\n              }}\n              text={'Loading Portfolio...'}\n            />\n          ) : this.state.tokenConfig ? (\n            <TranchePage\n              {...this.props}\n              portfolio={this.state.portfolio}\n              trancheType={this.state.trancheType}\n              tokenConfig={this.state.tokenConfig}\n              userHasFunds={this.state.userHasFunds}\n              selectedToken={this.state.selectedToken}\n              trancheDetails={this.state.trancheDetails}\n              selectedProtocol={this.state.selectedProtocol}\n              availableTranches={this.props.availableTranches}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : !this.state.trancheType && !this.state.userHasFunds ? (\n            <TrancheWelcome\n              {...this.props}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {this.state.useTrancheType ? (\n                <Box\n                  width={1}\n                >\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  > \n                    {\n                    /*\n                      <Icon\n                        mr={2}\n                        name={this.state.trancheDetails.icon}\n                        color={this.state.trancheDetails.color.hex}\n                        size={this.props.isMobile ? '1.8em' : '2.2em'}\n                      />\n                    */\n                    }\n                    <Image\n                      mr={2}\n                      src={this.state.trancheDetails.image}\n                      size={this.props.isMobile ? '1.8em' : '2.2em'}\n                    />\n                    <Title\n                    >\n                      {this.functionsUtil.capitalize(this.state.trancheDetails.baseName)} Tranches\n                    </Title>\n                  </Flex>\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {this.functionsUtil.getGlobalConfig(['tranches',this.state.trancheType,'description','long'])}\n                    </Text>\n                  </Flex>\n                </Box>\n              ) : (\n                <Title\n                  mb={3}\n                >\n                  Perpetual Yield Tranches\n                </Title>\n              )}\n              {\n                this.state.portfolioLoaded && this.state.userHasFunds && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.portfolio.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={5}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                /*\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.allocationChartData ? (\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  id={'allocationChart'}\n                                  height={['55px','59px']}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <GenericPieChart\n                                    {...this.props}\n                                    inline={true}\n                                    showLoader={false}\n                                    tooltipFormat={v => v+'%'}\n                                    sliceLabel={d => d.value+'%'}\n                                    width={ this.props.isMobile ? 55 : 59 }\n                                    height={ this.props.isMobile ? 55 : 59 }\n                                    chartData={this.state.allocationChartData}\n                                  />\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Portfolio Distribution\n                              </Text>\n                              {\n                                /*\n                                <Tooltip\n                                  placement={'bottom'}\n                                  message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                                >\n                                  <Icon\n                                    ml={2}\n                                    name={\"Info\"}\n                                    size={'1em'}\n                                    color={'cellTitle'}\n                                  />\n                                </Tooltip>\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={3}\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <GenericPieChart\n                            {...this.props}\n                            showLegend={true}\n                            showLoader={false}\n                            sliceLabel={d => d.value}\n                            defaultLabel={'Total Funds'}\n                            parentId={'portfolio-composition'}\n                            chartData={this.state.portfolioDonutData}\n                            defaultImage={this.props.selectedSection.image}\n                            defaultValue={`$ ${this.functionsUtil.formatMoney(parseFloat(this.state.portfolio.totalBalance),4)}`}\n                            margin={this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 }}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquityTranches\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              transactionsList={this.state.transactions}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                mb={[3,4]}\n                id={\"migrate-assets\"}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,4]}\n                    fontWeight={[3,4]}\n                  >\n                    Available Tranches\n                  </Heading.h4>\n                </Flex>\n                <TranchesList\n                  enabledProtocols={[]}\n                  trancheType={this.state.trancheType}\n                  availableTranches={this.props.availableTranches}\n                  handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                  cols={[\n                    {\n                      title:'PROTOCOL',\n                      props:{\n                        width:[0.25,0.15]\n                      },\n                      fields:[\n                        {\n                          name:'protocolIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          name:'protocolName'\n                        }\n                      ]\n                    },\n                    {\n                      title:'TOKEN',\n                      props:{\n                        width:[0.16, 0.12],\n                      },\n                      fields:[\n                        {\n                          name:'tokenIcon',\n                          props:{\n                            mr:2,\n                            height:['1.4em','2em']\n                          }\n                        },\n                        {\n                          mobile:false,\n                          name:'tokenName'\n                        }\n                      ]\n                    },\n                    /*\n                    {\n                      title:'TYPE',\n                      props:{\n                        width:[0.29,0.13],\n                      },\n                      fields:[\n                        {\n                          name:'trancheTypeIcon',\n                          props:{\n                            flexProps:{\n                              mr:2\n                            },\n                            size:'1.4em'\n                          }\n                        },\n                        {\n                          name:'trancheType'\n                        }\n                      ],\n                      visible:this.state.useTrancheType\n                    },\n                    */\n                    {\n                      title:'POOL',\n                      props:{\n                        width:[0.21, 0.14],\n                      },\n                      fields:[\n                        {\n                          name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}Pool` : 'pool',\n                          props:{\n                            decimals:2\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.29,this.state.useTrancheType ? 0.12 : 0.15],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'seniorApy',\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                      visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                      props:{\n                        width:[this.state.useTrancheType ? 0.16 : 0.29,this.state.useTrancheType ? 0.12 : 0.15],\n                      },\n                      parentProps:{\n                        flexDirection:'column',\n                        alignItems:'flex-start',\n                      },\n                      fields:[\n                        {\n                          name:'juniorApy',\n                          showTooltip:true\n                        },\n                      ],\n                    },\n                    {\n                      mobile:false,\n                      title:'AUTO-FARMING',\n                      props:{\n                        width:[0.25,this.state.useTrancheType ? 0.18 : 0.15],\n                      },\n                      fields:[\n                        {\n                          name:'autoFarming'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'STAKING REWARDS',\n                      props:{\n                        width:[0.25,this.state.useTrancheType ? 0.18 : 0.13],\n                      },\n                      fields:[\n                        {\n                          name:'stakingRewards'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:true,\n                      title:'TOKENS',\n                      props:{\n                        width:[0.17],\n                      },\n                      fields:[\n                        {\n                          name:'govTokens'\n                        }\n                      ]\n                    },\n                    {\n                      title:'',\n                      mobile:false,\n                      props:{\n                        width:[0.29, 0.16],\n                      },\n                      parentProps:{\n                        width:1\n                      },\n                      fields:[\n                        {\n                          name:'button',\n                          label: 'Deposit',\n                          props:{\n                            width:1,\n                            fontSize:3,\n                            fontWeight:3,\n                            height:'45px',\n                            borderRadius:4,\n                            boxShadow:null,\n                            mainColor:'deposit',\n                            size: this.props.isMobile ? 'small' : 'medium',\n                            handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                          }\n                        }\n                      ]\n                    }\n                  ]}\n                  {...this.props}\n                />\n              </Flex>\n              {\n                this.props.account && this.state.userHasFunds && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title mb={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                      transactionsList={this.state.transactions}\n                      availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                        availableActions[t.action.toLowerCase()] = t.action;\n                        return availableActions;\n                      },{})}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.13,0.18]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.12,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.27,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.16],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:[0.23,0.11],\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'PROTOCOL',\n                          props:{\n                            width:[0.21, 0.14],\n                          },\n                          fields:[\n                            {\n                              type:'image',\n                              name:'custom',\n                              path:['protocolIcon'],\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              type:'text',\n                              mobile:false,\n                              name:'custom',\n                              path:['protocol']\n                            }\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.16,0.14],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Tranches;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    programEnded:false,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    programEndDate:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },0) : null;\n\n    const programEndDate = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programEndDate\n    });\n\n    const programEnded = programEndTime && programEndTime*1000<=Date.now();\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      programEnded,\n      totalRewards,\n      programEndDate,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = {\n          address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n        };\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = {\n      address:this.functionsUtil.getContractByName('DAI')._address\n    };\n    const rewardTokenConfig = {\n      address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n    };\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                isStake && this.state.programEnded ? (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      mt:1\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    >\n                      <Icon\n                        name={'Warning'}\n                        color={'cellText'}\n                        size={this.props.isMobile ? '1.8em' : '2.3em'}\n                      />\n                      <Text\n                        mt={1}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        The {this.props.selectedToken} staking program ended on {this.state.programEndDate}.\n                      </Text>\n                    </Flex>\n                  </DashboardCard>\n                ) : (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    maxApr:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    // console.log('checkButtonDisabled',this.state.selectedAction,this.state.increaseAction,buttonDisabled);\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}% of staking power).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n        // console.log('getTransactionParams',methodName,methodParams);\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      totalSupply,\n      tokenTotalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name, 'totalSupply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',{fromBlock: this.props.contractInfo.fromBlock, toBlock:'latest',filter:{provider:this.props.account}}) : []\n    ]);\n\n    // console.log('etherscanRewardsTxs',etherscanRewardsTxs);\n\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    let distributedRewards = [];\n    let totalRewards = this.functionsUtil.BNify(0);\n    let totalRewardsDays = this.functionsUtil.BNify(0);\n\n    if (etherscanRewardsTxs && etherscanRewardsTxs.length){\n      totalRewardsDays = Math.abs(etherscanRewardsTxs[0].timeStamp-etherscanRewardsTxs[etherscanRewardsTxs.length-1].timeStamp)/86400;\n      distributedRewards = etherscanRewardsTxs.map( tx => {\n        const amount = this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals);\n        totalRewards = totalRewards.plus(amount);\n        return {\n          amount,\n          hash:tx.hash,\n          timeStamp:tx.timeStamp,\n          tokenName:tx.tokenSymbol,\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n        };\n      });\n    }\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n      if (this.props.account && e.returnValues && e.returnValues.recipient && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n        const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n        if (blockInfo){\n          const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n          totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n          claimedRewards.push({\n            amount:claimedAmount,\n            hash:e.transactionHash,\n            tokenName:this.props.contractInfo.rewardToken,\n            date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n          });\n        }\n      }\n    });\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0] : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1] : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2] : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    // const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n    //   const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n    //   totalClaimed = totalClaimed.plus(claimedAmount);\n    //   return totalClaimed;\n    // },this.functionsUtil.BNify(0));\n\n    const totalRewardsFormatted = this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken;\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const maxApr = totalRewards.div(tokenTotalSupply).times(365.2425).div(totalRewardsDays);\n    stats.push({\n      title:'APR (1 year staking)',\n      value:maxApr.div(4).times(100).toFixed(2)+'%'\n    });\n    stats.push({\n      title:'APR (4 years staking)',\n      value:maxApr.times(100).toFixed(2)+'%'\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0));\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      maxApr,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  changelockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // console.log('changelockPeriodInput',lockPeriodTimestamp);\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      });\n    }\n  }\n\n  selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n    let mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    // Check if after 4 years from now\n    if (mDate.isAfter(maxDate)){\n      mDate = maxDate;\n    }\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // console.log('selectLockPeriod',lockPeriodInput,lockPeriodTimestamp);\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    // const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year').format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Flex\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.45 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.4 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.15 : 0.3}\n                              >\n                                { this.props.isMobile ? '' : 'Hash' }\n                              </Text>\n                            </Flex>\n                            <Flex\n                              flexDirection={'column'}\n                              alignItems={'flex-start'}\n                              overflow={['visible','scroll']}\n                              maxHeight={['initial','500px']}\n                            >\n                              {\n                                this.state.distributedRewards.map( (reward,index) => (\n                                  <Flex\n                                    width={1}\n                                    py={[2,1]}\n                                    flexDirection={'row'}\n                                    key={`rewards_${index}`}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.45 : 0.4}\n                                    >\n                                      {reward.date}\n                                    </Text>\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.4 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      {reward.amount.toFixed(4)} {reward.tokenName}\n                                    </Text>\n                                    <Flex\n                                      width={this.props.isMobile ? 0.15 : 0.13}\n                                      justifyContent={this.props.isMobile ? 'flex-end' : 'flex-start'}\n                                    >\n                                      <ExtLink\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          {\n                                            !this.props.isMobile && (\n                                              <Text\n                                                fontSize={2}\n                                                fontWeight={2}\n                                                color={'link'}\n                                              >\n                                                {this.functionsUtil.shortenHash(reward.hash)}\n                                              </Text>\n                                            )\n                                          }\n                                          <Icon\n                                            ml={1}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                            size={this.props.isMobile ? '1.4em' : '1.2em'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    </Flex>\n                                  </Flex>\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changelockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={Button}\n                                          componentProps={{\n                                            fontSize:3,\n                                            fontWeight:3,\n                                            size:'medium',\n                                            width:[1,1/2],\n                                            borderRadius:4,\n                                            mainColor:'deposit',\n                                            value:'Increase Time',\n                                            disabled:this.state.buttonDisabled\n                                          }}\n                                          action={'Increase Time'}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/3],\n                                    value:'Claim',\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Button, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    // console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  borderRadius:4,\n                                  mainColor:'blue',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={Button}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    value:'Approve',\n                                    mainColor:'deposit'\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'deposit',\n                                  value:'Buy Coverage',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.maxCoveredAmount) ? this.state.selectedCoverToClaim.maxCoveredAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          color:'hsl('+tokenColorHsl+')',\n          value:Math.round(tokenPercentage),\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = finalEarnings.gt(0) ? Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings))) : 1;\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport CustomList from '../CustomList/CustomList';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    depositedTokens:[],\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    portfolioLoading:false,\n    availableGovTokens:null,\n    polygonTransactions:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week',\n    polygonTransactionsAvailableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return await this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n\n    if (this.state.portfolioLoaded || this.state.portfolioLoading || currentNetwork.id === 137){\n      return false;\n    }\n\n    await this.setStateSafe({\n      portfolioLoading:true\n    });\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n      const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n\n      // Load data\n      const [\n        batchedDeposits,\n        tokensToMigrate,\n        portfolio,\n        polygonTransactions\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load tokens to be migrated\n        this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n        // Get Polygon deposits\n        polygonBridgeConfig.enabled ? this.functionsUtil.getPolygonBridgeTxs(this.props.account) : null,\n        // Load and process Etherscan Txs\n        this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n      newState.polygonTransactions = polygonTransactions && polygonTransactions.length>0 ? polygonTransactions : null;\n      if (newState.polygonTransactions){\n        newState.polygonTransactionsAvailableTokens = polygonTransactions.map( (tx) => {\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge','props','availableTokens',tx.tokenSymbol]);\n          let actionIcon = null;\n          switch (tx.action){\n            default:\n            case 'Deposit':\n              actionIcon = 'ArrowDownward';\n            break;\n            case 'Withdraw':\n              actionIcon = 'ArrowUpward';\n            break;\n            case 'Exit':\n              actionIcon = 'Undo';\n            break;\n          }\n          const depositInfo = {\n            actionIcon,\n            amount:tx.value,\n            token:tx.tokenSymbol,\n            action:tx.action.toUpperCase(),\n            bridgeType:tx.bridgeType.toUpperCase(),\n            status:tx.included ? 'Completed' : 'pending',\n            hash:this.functionsUtil.shortenHash(tx.hash),\n            statusIcon:tx.included ? 'Done' : 'Timelapse',\n            actionIconProps:{\n              color:this.props.theme.colors.transactions.action[tx.action.toLowerCase()],\n              bgColor:this.props.theme.colors.transactions.actionBg[tx.action.toLowerCase()]\n            },\n            url:this.functionsUtil.getEtherscanTransactionUrl(tx.hash,tx.networkId),\n            date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).format('DD MMM, YYYY'),\n            statusIconProps:{\n              color:tx.included ? this.props.theme.colors.transactions.status.completed : this.props.theme.colors.transactions.status.pending\n            },\n            tokenIcon:tokenConfig.icon || this.functionsUtil.getGlobalConfig(['stats','tokens',tx.tokenSymbol,'icon']) || `images/tokens/${tx.tokenSymbol}.svg`\n          };\n          return depositInfo;\n        });\n      }\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        // let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        // let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            // tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            // this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          // if (!tokenScore.isNaN() && tokenScore.gt(0)){\n          //   avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n          //   totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          // }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n        //   avgScore = avgScore.div(totalBalanceWithScore);\n        // }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        // newState.avgScore = avgScore;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n      newState.portfolioLoading = false;\n\n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        portfolioLoading:false,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title']);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {strategyName} strategy\n        </Title>\n        {\n          currentNetwork.id === 137 ? (\n            <Flex\n              width={1}\n              minHeight={'45vh'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  width:[1,0.5],\n                }}\n              >\n                <Flex\n                  aligItems={'center'}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={'2.3em'}\n                    color={'cellText'}\n                    name={'AccessTime'}\n                  />\n                  <Text\n                    mt={2}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Hang on, please!<br />The {strategyName} strategy has not yet been activated in Polygon.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,1/2]\n                    }}\n                    handleClick={e => this.props.goToSection(`stake`)}\n                  >\n                    Go to Staking\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          ) : !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    mt={1}\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    {\n                                      /*\n                                      <Flex\n                                        width={0.45}\n                                        alignItems={'center'}\n                                        justifyContent={'flex-end'}\n                                      >\n                                        <Text\n                                          fontSize={1}\n                                          fontWeight={3}\n                                          fontFamily={this.props.theme.fonts.counter}\n                                          color={this.props.theme.colors.transactions.status.completed}\n                                        >\n                                          +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                        </Text>\n                                      </Flex>\n                                      <Text\n                                        mx={1}\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >|</Text>\n                                      */\n                                    }\n                                    <TotalEarningsCounter\n                                      {...this.props}\n                                      unit={'+$'}\n                                      decimals={4}\n                                      counterStyle={{\n                                        fontSize:14,\n                                        fontWeight:600,\n                                        color:this.props.theme.colors.transactions.status.completed\n                                      }}\n                                      portfolio={this.state.portfolio}\n                                    />\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: '<small>+</small>'+this.state.portfolio.totalEarningsPerc.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Profit\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','totalProfitPerc'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.state.depositedTokens.length>0 && this.props.account && nexusMutualConfig.enabled && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              width={[1,1/3]}\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                nexusMutualConfig.enabled && nexusMutualConfig.availableNetworks.includes(currentNetwork.id) && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.26,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                showLoader:false,\n                                name:'idleDistribution',\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'OLD APY',\n                            props:{\n                              width:[0.26,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'oldApy'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            props:{\n                              width:[0.21,0.11],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.13],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.15],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:true,\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            props:{\n                              width:[0.21, 0.13],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'FARMING',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.22,0.16],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(this.functionsUtil.getGovTokensFarming())}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && this.state.polygonTransactions && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                    id={'polygon-transactions'}\n                  >\n                    <Title my={[3,4]}>Polygon Bridge Transactions</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <CustomList\n                        paginationEnabled={true}\n                        handleClick={(props) => this.functionsUtil.openWindow(props.row.url)}\n                        cols={[\n                          {\n                            title:'HASH',\n                            mobile:false,\n                            props:{\n                              width:[0.44,0.18],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'bgIcon',\n                                path:['actionIcon'],\n                              },\n                              {\n                                type:'text',\n                                path:['hash'],\n                                props:{\n                                  ml:[0,2]\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'ACTION',\n                            props:{\n                              width:[0.25,0.14],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['action'],\n                              },\n                            ]\n                          },\n                          {\n                            title:'DATE',\n                            props:{\n                              width:[0.25,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['date'],\n                              },\n                            ]\n                          },\n                          {\n                            title:'BRIDGE',\n                            mobile:false,\n                            props:{\n                              width:[0.44,0.12],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['bridgeType'],\n                              },\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.25,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'AMOUNT',\n                            props:{\n                              width:[0.25, 0.15],\n                            },\n                            fields:[\n                              {\n                                type:'number',\n                                path:['amount'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.25,0.13]\n                            },\n                            fields:[\n                              {\n                                type:'image',\n                                path:['tokenIcon'],\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','1.6em']\n                                }\n                              },\n                              {\n                                type:'text',\n                                path:['token'],\n                              }\n                            ]\n                          },\n                        ]}\n                        {...this.props}\n                        rows={this.state.polygonTransactionsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        useMetaTx={false}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass PolygonBridge extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    txsToExit:[],\n    infoBox:null,\n    polygonTxs:[],\n    inputValue:null,\n    dataLoaded:false,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    availableTokens:null,\n    availableNetworks:[],\n    approveEnabled:false,\n    contractApproved:false,\n    defaultTransaction:null,\n    approveDescription:null,\n    selectedTransaction:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  async loadPolygonTxs(){\n    const polygonTxs = await this.functionsUtil.getPolygonBridgeTxs();\n    this.setState({\n      polygonTxs,\n      dataLoaded:true\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const rootTokenConfig = tokenConfig.rootToken;\n      const childTokenConfig = tokenConfig.childToken;\n\n      // Init contracts\n      await Promise.all([\n        rootTokenConfig ? this.props.initContract(rootTokenConfig.name,rootTokenConfig.address,rootTokenConfig.abi) : null,\n        childTokenConfig ? this.props.initContract(childTokenConfig.name,childTokenConfig.address,childTokenConfig.abi) : null\n      ]);\n\n      this.setState({\n        tokenConfig\n      },() => {\n        this.updateData();\n      });\n    } else {\n      const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n      const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n      if (selectedActionChanged || contractApprovedChanged){\n        this.updateData();\n      }\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n  }\n\n  getTransactionParams(amount){\n    let value = null;\n    let methodName = null;\n    let methodParams = [];\n    let contractName = null;\n    amount = this.functionsUtil.toBN(amount);\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        switch (this.state.selectedToken){\n          case 'ETH':\n            methodName = 'depositEtherFor';\n            contractName = 'RootChainManager';\n            value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            methodParams = [this.props.account];\n          break;\n          default:\n            const depositData = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            switch (bridgeType){\n              case 'plasma':\n                contractName = 'DepositManager';\n                methodName = 'depositERC20ForUser';\n                methodParams = [this.state.tokenConfig.rootToken.address,this.props.account,depositData];\n              break;\n              default:\n              case 'pos':\n                methodName = 'depositFor';\n                contractName = 'RootChainManager';\n                methodParams = [this.props.account,this.state.tokenConfig.rootToken.address,depositData];\n              break;\n            }\n          break;\n        }\n      break;\n      case 'Withdraw':\n        methodName = 'withdraw';\n        methodParams = [amount];\n        contractName = this.state.tokenConfig.childToken.name;\n        if (this.state.tokenConfig.sendValue){\n          value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('getTransactionParams',{\n    //   value,\n    //   methodName,\n    //   methodParams,\n    //   contractName\n    // });\n\n    return {\n      value,\n      methodName,\n      methodParams,\n      contractName\n    };\n  }\n\n  exitCallback(){\n\n  }\n\n  async getExitTransactionParams(){\n    const txHash = this.state.selectedTransaction;\n    const exitCalldata = await this.props.maticPOSClient.exitERC20(txHash, { from:this.props.account, encodeAbi: true })\n    if (exitCalldata && exitCalldata.data){\n      return exitCalldata.data;\n    }\n    return null;\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async selectTransaction(selectedTransaction){\n    this.setState({\n      selectedTransaction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    /*\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        const depositedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      break;\n      case 'Withdraw':\n        const withdrawnTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (tx.txReceipt && tx.txReceipt.events && tx.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(tx.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n      break;\n      default:\n      break;\n    }\n    */\n    const transactionSucceeded = tx;\n    this.setState({\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(){\n    const newState = {};\n    const isETH = this.state.tokenConfig.token==='ETH';\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        newState.steps = [];\n        newState.permitEnabled = false;\n        newState.availableNetworks = [1,5];\n        newState.approveEnabled = !isETH;\n        newState.approveDescription = `Approve the contract to deposit your ${this.state.selectedToken}`;\n        newState.contractInfo = bridgeType === 'pos' ? this.props.toolProps.contracts.ERC20Predicate : this.props.toolProps.contracts.DepositManager;\n        newState.balanceProp = isETH ? await this.functionsUtil.getETHBalance(this.props.account) : await this.functionsUtil.getTokenBalance(this.state.tokenConfig.rootToken.name,this.props.account);\n        if (this.state.transactionSucceeded){\n          let depositedTokensLog = null;\n          let depositedTokensEvent = null;\n          if (!isETH){\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          } else {\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          }\n          const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : ( depositedTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensEvent.raw.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully deposited <strong>${depositedTokens.toFixed(4)} ${this.state.selectedToken}</strong> in the Polygon chain. Please wait ~7-8 minutes for your balance to be accounted in the Polygon chain.`\n          }\n        } else {\n          newState.infoBox = {\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n            text:`Please note that deposit of funds takes ~7-8 minutes to be accounted in the Polygon chain.`\n          }\n        }\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.availableNetworks = [137,80001];\n        newState.contractInfo = this.state.tokenConfig.childToken;\n        newState.balanceProp = await this.functionsUtil.getTokenBalance(this.state.tokenConfig.childToken.name,this.props.account);\n\n        const currentNetwork = this.functionsUtil.getRequiredNetwork();\n        const maticNetwork = currentNetwork.name;\n        const mainNetworkId = this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetwork.id]);\n        const mainNetworkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',mainNetworkId,'name']);\n        newState.steps = [\n          {\n            icon:'LooksOne',\n            completed:false,\n            description:`Withdraw ${this.state.selectedToken} from ${maticNetwork} network`\n          },\n          {\n            icon:'LooksTwo',\n            completed:false,\n            description:`Wait for the checkpoint to be submitted`\n          },\n          {\n            icon:'Looks3',\n            completed:false,\n            description:`Exit ${this.state.selectedToken} from ${mainNetworkName} network`\n          },\n        ];\n        if (this.state.transactionSucceeded){\n          const withdrawnTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events && this.state.transactionSucceeded.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(this.state.transactionSucceeded.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : ( withdrawnTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensEvent.raw.data,16),this.state.tokenConfig.decimals)  : this.functionsUtil.BNify(0)));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully withdrawn <strong>${withdrawnTokens.toFixed(4)} ${this.state.selectedToken}</strong> from the Polygon chain. Please wait up to 2-3 hours to be able to complete the withdrawal.`\n          }\n        } else {\n          let text = '';\n          switch (bridgeType){\n            case 'plasma':\n              text = `Please note that withdraw of funds takes ~7 days in Plasma.`;\n            break;\n            default:\n            case 'pos':\n              text = `Please note that withdraw of funds takes ~45 mins to 1 hour in PoS.`;\n            break;\n          }\n          newState.infoBox = {\n            text,\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          }\n        }\n      break;\n      case 'Exit':\n        newState.availableNetworks = [1,5];\n        newState.txsToExit = this.state.polygonTxs.filter( tx => tx.included && tx.action === 'Withdraw' && !tx.exited && tx.tokenSymbol === this.state.selectedToken ).map( tx => {\n          const label = this.functionsUtil.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm')+' - '+tx.value.toFixed(6)+' '+tx.token;\n          return {\n            label,\n            data:tx,\n            value:tx.hash\n          }\n        });\n\n        newState.defaultTransaction = newState.txsToExit.length>0 ? newState.txsToExit[0] : null;\n        newState.selectedTransaction = newState.defaultTransaction ? newState.defaultTransaction.data.hash : null;\n      break;\n      default:\n      break;\n    }\n\n    if (!newState.balanceProp){\n      newState.balanceProp = this.functionsUtil.BNify(0);\n    }\n\n    // console.log('updateData',newState);\n\n    this.setState(newState);\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          label:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const paramIsToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2];\n    const selectedToken = paramIsToken ? this.props.urlParams.param2 : (this.props.selectedToken || this.state.selectedToken || availableTokens[0].value);\n    const selectedOption = availableTokens.find( t => t.value === selectedToken );\n    const defaultAction = !paramIsToken ? (currentNetwork.provider === 'infura' ? 'Deposit' : 'Withdraw') : 'Deposit';\n    const selectedAction = this.props.action || this.state.action || defaultAction;\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n\n    // console.log('loadData',this.props.urlParams);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedOption,\n      selectedAction,\n      availableTokens\n    },() => {\n      this.loadPolygonTxs();\n    });\n  }\n\n  async exitSelectedTransaction(){\n\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const fullWidth = !!this.props.fullWidth;\n    const isExit = this.state.selectedAction === 'Exit';\n    const isDeposit = this.state.selectedAction === 'Deposit';\n    const isWithdraw = this.state.selectedAction === 'Withdraw';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const currentNetworkId = currentNetwork.id;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                    width={[1,fullWidth ? 1 : 0.38]}\n                  >\n                    {\n                      !this.props.selectedToken && (\n                        <Box\n                          width={1}\n                        >\n                          <Text\n                            mb={1}\n                          >\n                            Select Token:\n                          </Text>\n                          <AssetSelector\n                            id={'tokens'}\n                            {...this.props}\n                            showBalance={false}\n                            isSearchable={false}\n                            onChange={this.selectToken.bind(this)}\n                            selectedToken={this.state.selectedToken}\n                            availableTokens={this.props.toolProps.availableTokens}\n                          />\n                        </Box>\n                      )\n                    }\n                    {\n                      this.state.selectedToken && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          {\n                            !this.props.action && (\n                              <Box\n                                width={1}\n                              >\n                                <Text\n                                  mb={2}\n                                >\n                                  Choose the action:\n                                </Text>\n                                <Flex\n                                  mb={3}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'space-between'}\n                                >\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Deposit'}\n                                    iconColor={'deposit'}\n                                    icon={'ArrowDownward'}\n                                    iconBgColor={'#ced6ff'}\n                                    handleClick={ e => this.setAction('Deposit') }\n                                    isActive={ this.state.selectedAction === 'Deposit' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Withdraw'}\n                                    iconColor={'redeem'}\n                                    icon={'ArrowUpward'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Withdraw') }\n                                    isActive={ this.state.selectedAction === 'Withdraw' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Exit'}\n                                    icon={'SwapHoriz'}\n                                    iconColor={'redeem'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Exit') }\n                                    isActive={ this.state.selectedAction === 'Exit' }\n                                  />\n                                </Flex>\n                              </Box>\n                            )\n                          }\n                          {\n                            !this.state.availableNetworks.includes(currentNetworkId) ? (\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mb:3,\n                                  width:1\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    name={'Warning'}\n                                    color={'cellText'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    The <strong>{this.functionsUtil.capitalize(currentNetwork.name)} network</strong> is not supported for this function, please switch to <strong>{this.functionsUtil.getGlobalConfig(['network','availableNetworks',this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]),'name'])} network</strong>.\n                                  </Text>\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,1/2],\n                                      fontSize:[1,2]\n                                    }}\n                                    handleClick={e => this.props.setRequiredNetwork(this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]))}\n                                  >\n                                    Switch Network\n                                  </RoundButton>\n                                </Flex>\n                              </DashboardCard>\n                            ) : (this.state.tokenConfig && this.state.balanceProp && this.state.contractInfo) ? (\n                              <Box\n                                mt={1}\n                                width={1}\n                                mb={[4,3]}\n                              >\n                                {\n                                  (isDeposit || isWithdraw) ? (\n                                    <SendTxWithBalance\n                                      {...this.props}\n                                      error={this.state.error}\n                                      steps={this.state.steps}\n                                      infoBox={this.state.infoBox}\n                                      action={this.state.selectedAction}\n                                      tokenConfig={this.state.tokenConfig}\n                                      tokenBalance={this.state.balanceProp}\n                                      contractInfo={this.state.contractInfo}\n                                      permitEnabled={this.state.permitEnabled}\n                                      approveEnabled={this.state.approveEnabled}\n                                      callback={this.transactionSucceeded.bind(this)}\n                                      approveDescription={this.state.approveDescription}\n                                      contractApproved={this.contractApproved.bind(this)}\n                                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                      changeInputCallback={this.changeInputCallback.bind(this)}\n                                      getTransactionParams={this.getTransactionParams.bind(this)}\n                                    >\n                                      {\n                                        isDeposit ? (\n                                          <Flex\n                                            width={1}\n                                            alignItems={'stretch'}\n                                            flexDirection={'column'}\n                                            justifyContent={'center'}\n                                          >\n                                            <BuyModal\n                                              {...this.props}\n                                              showInline={true}\n                                              availableMethods={[]}\n                                              buyToken={this.state.selectedToken}\n                                            />\n                                          </Flex>\n                                          // `You don't have any ${this.state.selectedToken} in your wallet.`\n                                        ) : isWithdraw && (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                name={'MoneyOff'}\n                                                color={'cellText'}\n                                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You don't have any {this.state.selectedToken} to withdraw.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </SendTxWithBalance>\n                                  ) : isExit && (\n                                    <Box\n                                      width={1}\n                                    >\n                                      {\n                                        !this.state.dataLoaded ? (\n                                          <Flex\n                                            mt={4}\n                                            flexDirection={'column'}\n                                          >\n                                            <FlexLoader\n                                              flexProps={{\n                                                flexDirection:'row'\n                                              }}\n                                              loaderProps={{\n                                                size:'30px'\n                                              }}\n                                              textProps={{\n                                                ml:2\n                                              }}\n                                              text={'Loading transactions...'}\n                                            />\n                                          </Flex>\n                                        ) : this.state.txsToExit.length ? (\n                                          <Box\n                                            width={1}\n                                          >\n                                            <Text mb={1}>\n                                              Select Transaction:\n                                            </Text>\n                                            <GenericSelector\n                                              {...this.props}\n                                              isSearchable={false}\n                                              name={'transactions'}\n                                              options={this.state.txsToExit}\n                                              onChange={this.selectTransaction.bind(this)}\n                                              defaultValue={this.state.defaultTransaction}\n                                            />\n                                            {\n                                              this.state.selectedTransaction && (\n                                                <ExecuteTransaction\n                                                  action={'Exit'}\n                                                  Component={RoundButton}\n                                                  parentProps={{\n                                                    mt:3,\n                                                    alignItems:'center',\n                                                    justifyContent:'center'\n                                                  }}\n                                                  componentProps={{\n                                                    buttonProps:{\n                                                      value:'Exit',\n                                                      width:[1,1/3],\n                                                      size:'medium',\n                                                      mainColor:'redeem'\n                                                    },\n                                                    value:'Exit Transaction',\n                                                  }}\n                                                  params={[]}\n                                                  methodName={'exit'}\n                                                  sendRawTransaction={true}\n                                                  contractName={'RootChainManager'}\n                                                  callback={this.exitCallback.bind(this)}\n                                                  getTransactionParamsAsync={this.getExitTransactionParams.bind(this)}\n                                                  {...this.props}\n                                                >\n                                                  <Flex\n                                                    flexDirection={'row'}\n                                                    alignItems={'center'}\n                                                    justifyContent={'center'}\n                                                  >\n                                                    <Icon\n                                                      mr={1}\n                                                      name={'Done'}\n                                                      size={'1.4em'}\n                                                      color={this.props.theme.colors.transactions.status.completed}\n                                                    />\n                                                    <Text\n                                                      fontWeight={500}\n                                                      fontSize={'15px'}\n                                                      color={'copyColor'}\n                                                      textAlign={'center'}\n                                                    >\n                                                      Transaction successfully exited!\n                                                    </Text>\n                                                  </Flex>\n                                                </ExecuteTransaction>\n                                              )\n                                            }\n                                          </Box>\n                                        ) : (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3,\n                                              width:1\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                size={'1.8em'}\n                                                name={'Warning'}\n                                                color={'cellText'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You cannot exit any transaction yet.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </Box>\n                                  )\n                                }\n                              </Box>\n                            ) : (\n                              <Flex\n                                mt={3}\n                                mb={3}\n                                width={1}\n                              >\n                                <FlexLoader\n                                  flexProps={{\n                                    flexDirection:'row'\n                                  }}\n                                  loaderProps={{\n                                    size:'30px'\n                                  }}\n                                  textProps={{\n                                    ml:2\n                                  }}\n                                  text={'Loading info...'}\n                                />\n                              </Flex>\n                            )\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default PolygonBridge;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.props.account ? this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() ) : [];\n    const claimContracts = this.props.account ? this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() ) : [];\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Staking from \"../Staking/Staking\";\nimport DAI from '../abis/tokens/DAI.json';\nimport IDLE from '../contracts/IDLE.json';\nimport Tranches from '../Tranches/Tranches';\nimport USDC from '../abis/tokens/USDC.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from \"../abis/curve/CurvePool.json\";\nimport NexusMutual from \"../NexusMutual/NexusMutual\";\nimport CoverMint from \"../abis/cover/CoverMint.json\";\nimport LockedIDLE from \"../contracts/LockedIDLE.json\";\nimport LpStakingAbi from \"../contracts/LpStaking.json\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TokenWrapper from \"../TokenWrapper/TokenWrapper\";\nimport PriceOracle from \"../contracts/PriceOracle.json\";\nimport FeeTreasury from \"../contracts/FeeTreasury.json\";\nimport IdleTokenV2 from \"../contracts/IdleTokenV2.json\";\nimport StrategyPage from \"../StrategyPage/StrategyPage\";\nimport BuyModal from \"../utilities/components/BuyModal\";\nimport IdleTokenV3 from \"../contracts/IdleTokenV3.json\";\nimport IdleTokenV4 from \"../contracts/IdleTokenV4.json\";\nimport BatchDeposit from \"../BatchDeposit/BatchDeposit\";\nimport ChildERC20 from '../abis/polygon/ChildERC20.json';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport PolygonBridge from '../PolygonBridge/PolygonBridge';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport DepositManager from '../abis/polygon/DepositManager.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport RootChainManager from '../abis/polygon/RootChainManager.json';\nimport SushiV2Router02 from \"../abis/sushiswap/SushiV2Router02.json\";\nimport IdleBatchConverter from \"../contracts/IdleBatchConverter.json\";\nimport UniswapV2Router02 from \"../abis/uniswap/UniswapV2Router02.json\";\nimport ChildChainManager from '../abis/polygon/ChildChainManager.json';\nimport IdleDepositForwarder from \"../contracts/IdleDepositForwarder.json\";\nimport ProtocolDataProvider from '../abis/aave/ProtocolDataProvider.json';\nimport SushiLiquidityPool from \"../abis/sushiswap/SushiLiquidityPool.json\";\nimport NexusMutualIncidents from \"../abis/nexus/NexusMutualIncidents.json\";\nimport StakingFeeDistributor from \"../contracts/StakingFeeDistributor.json\";\nimport NexusMutualDistributor from \"../abis/nexus/NexusMutualDistributor.json\";\nimport BalancerExchangeProxy from \"../abis/balancer/BalancerExchangeProxy.json\";\nimport IdleConverterPersonalSignV4 from \"../contracts/IdleConverterPersonalSignV4.json\";\nimport MinimalInitializableProxyFactory from \"../contracts/MinimalInitializableProxyFactory.json\";\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: \"Idle\",\n  version: \"v6.0\",\n  baseToken: \"ETH\",\n  baseURL: \"https://idle.finance\",\n  forumURL: \"https://gov.idle.finance\",\n  telegramURL: \"https://t.me/idlefinance\",\n  discordURL: \"https://discord.gg/mpySAJp\",\n  twitterURL: \"https://twitter.com/idlefinance\",\n  theme: {\n    darkModeEnabled: true\n  },\n  betaURL: \"https://beta.idle.finance\",\n  countries: {\n    USA: \"United States of America\",\n    GBR: \"United Kingdom\",\n    AUS: \"Australia\",\n    BRA: \"Brazil\",\n    CHN: \"China\",\n    CAN: \"Canada\",\n    EUR: \"Europe\",\n    HKG: \"Hong Kong\",\n    IND: \"India\",\n    MEX: \"Mexico\",\n    RUS: \"Russia\",\n    ZAF: \"South Africa\",\n    KOR: \"South Korea\"\n  },\n  logs: {\n    // Enable logs levels\n    errorsEnabled: false,\n    messagesEnabled: false\n  },\n  connectors: {\n    // Connectors props\n    metamask: {\n      enabled: true,\n      subcaption: \"Browser extension\"\n    },\n    opera: {\n      enabled: true,\n      subcaption: \"Opera injected wallet\"\n    },\n    dapper: {\n      enabled: true,\n      icon: \"dapper.png\",\n      subcaption: \"Browser extension\"\n    },\n    coinbase: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      subcaption: \"Connect with Coinbase wallet\"\n    },\n    trustwallet: {\n      enabled: true,\n      subcaption: \"Connect with Trust Wallet\"\n    },\n    walletconnect: {\n      enabled: true,\n      iconModal: \"walletconnect.png\",\n      subcaption: \"Connect with QR code\"\n    },\n    walletlink: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      name: \"Coinbase Wallet\",\n      subcaption: \"Connect with QR code\"\n    },\n    gnosis: {\n      enabled: true,\n      // icon:'coinbase.png',\n      name: \"Gnosis Safe App\",\n      subcaption: \"Connect with Gnosis Safe App\"\n    },\n    fortmatic: {\n      enabled: true,\n      subcaption: \"Login with phone-number\"\n    },\n    portis: {\n      enabled: true,\n      subcaption: \"Login with e-mail\"\n    },\n    authereum: {\n      enabled: true,\n      subcaption: \"Cross-device wallet\"\n    },\n    torus: {\n      enabled: true,\n      icon: \"torus.png\",\n      subcaption: \"One-Click login for Web 3.0\"\n    },\n    trezor: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledger: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledgerlive: {\n      enabled: true,\n      subcaption: \"Ledger Live Browser\"\n    },\n    custom: {\n      enabled: true,\n      subcaption: \"Custom address\"\n    }\n  },\n  newsletterSubscription: {\n    endpoint: \"https://dev.lapisgroup.it/idle/newsletter.php\"\n  },\n  messages: {\n    scoreShort: \"Protocol Risk Score\",\n    apyShort: \"Annual Percentage Yield\",\n    totalProfitPerc: \"Total percentage profit generated on your balance\",\n    tokenPrice: \"The token price is calculated using Uniswap spot prices.\",\n    cheapRedeem: \"Amount of unlent funds available for low gas fees redeem\",\n    curveBonusSlippage: \"Slippage or bonus depending on if the coin is low or high in the Curve Pool\",\n    distributionSpeed: \"The distribution indicates the amount of tokens distributed for the entire pool.\",\n    directMint: \"Pay an additional gas fee to rebalance the pool and help all users gain an additional APR\",\n    performanceFee: \"This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE\",\n    userDistributionSpeed: \"The distribution indicates the amount of tokens distributed for your account based on your current pool share.\",\n    govTokenApr: \"Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.\",\n    govTokenRedeemableBalance: \"The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.\",\n    riskScoreShort: \"It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.\",\n    redeemSkipGov: \"This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool\",\n    batchDepositExecutionSchedule: \"Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.\",\n    riskAdjustedDisabledMessageDeposit: `The Risk Adjusted strategy is no longer available.<br />Please consider to deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to have a similar risk profile.`,\n    apyLong: \"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.\",\n    riskScore: `It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions: `<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`,\n    yieldFarming: 'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\" class=\"link\">Read more here</a>.',\n    riskAdjustedDisabledMessageRedeem: `The Risk Adjusted strategy is no longer available, please redeem your funds from this strategy. You can deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to maintain a similar risk profile and receive an incentive. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://gov.idle.finance/t/risk-adjusted-removal-for-tranches-migration/673\" class=\"link\">Read more here</a>.`,\n  },\n  analytics: {\n    google: {\n      events: {\n        enabled: true, // Enable Google Analytics events\n        debugEnabled: false, // Enable sending for test environments\n        addPostfixForTestnet: true // Append testnet to eventCategory\n      },\n      pageView: {\n        enabled: true\n      }\n    }\n  },\n  modals: {\n    // Enable modals\n    first_deposit_referral: false, // Referral share modal\n    first_deposit_share: true, // First deposit share modal\n    migrate: {\n      enabled: true,\n      availableNetworks: [1]\n    },\n    welcome: {\n      // Welcome modal\n      enabled: true,\n      frequency: 604800 // One week\n    }\n  },\n  dashboard: {\n    baseRoute: \"/dashboard\",\n    theme: {\n      mode: \"light\",\n      darkModeEnabled: true\n    }\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    availableNetworks:[1],\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals: {\n      12: {\n        description: 'Details in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620\">https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620</a>'\n      },\n      7: {\n        description: `Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>`\n      }\n    },\n    contracts: {\n      delegates: \"IDLE\",\n      governance: \"GovernorAlpha\"\n    }\n  },\n  curve: {\n    enabled: false,\n    params: {\n      n_coins: 3,\n      label: \"Curve\",\n      route: \"/dashboard/curve\",\n      image: \"images/protocols/curve.svg\",\n      imageInactive: \"images/protocols/curve-off.svg\"\n    },\n    rates: {\n      path: [\"apy\", \"day\", \"idle\"],\n      endpoint: \"https://www.curve.fi/raw-stats/apys.json\"\n    },\n\n    poolContract: {\n      decimals: 18,\n      abi: CurvePool,\n      name: \"idleDAI+idleUSDC+idleUSDT\",\n      token: \"idleDAI+idleUSDC+idleUSDT\",\n      address: \"0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05\"\n    },\n    depositContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\"\n    },\n    gaugeContract: {\n      abi: LiquidityGaugeV2,\n      name: \"LiquidityGaugeV2\",\n      address: \"0xd69ac8d9D25e99446171B5D0B3E4234dAd294890\"\n    },\n    zapContract: {\n      abi: CurveZap,\n      name: \"idleCurveZap\",\n      address: \"0x456974df1042ba7a46fd49512a8778ac3b840a21\"\n    },\n    migrationContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\",\n      functions: [\n        {\n          label: \"Deposit\",\n          name: \"add_liquidity\"\n        }\n      ]\n    },\n    availableTokens: {\n      idleDAIYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"DAI\",\n        token: \"idleDAIYield\",\n        address: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 0\n        }\n      },\n      idleUSDCYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDC\",\n        token: \"idleUSDCYield\",\n        address: \"0x5274891bEC421B39D23760c04A6755eCB444797C\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 1\n        }\n      },\n      idleUSDTYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDT\",\n        token: \"idleUSDTYield\",\n        address: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 2\n        }\n      }\n    }\n  },\n  permit: {\n    DAI: {\n      version: 1,\n      EIPVersion: null,\n      nonceMethod: \"nonces\",\n      name: \"Dai Stablecoin\",\n      type: [\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" }\n      ]\n    },\n    USDC: {\n      version: 2,\n      name: \"USD Coin\",\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    },\n    SLP: {\n      version: 1,\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      name: \"SushiSwap LP Token\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    }\n  },\n  govTokens:{\n    IDLE: {\n      abi: IDLE,\n      decimals: 18,\n      token: \"IDLE\",\n      enabled: true,\n      showAUM: false, // Include IDLE balance in AUM\n      showAPR: false, // Include IDLE Apr\n      protocol: \"idle\",\n      showPrice: false, // Show price in Yield Farming section\n      showBalance: false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode: false,\n      availableNetworks:[1,137],\n      distributionMode: \"block\",\n      distributionFrequency: \"day\", // Multiply distribution per block\n      color: \"hsl(162, 100%, 41%)\",\n      icon: \"images/tokens/IDLE.svg\",\n      addresses:{\n        1:\"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\",\n        137:\"0xc25351811983818c9fe6d8c580531819c8ade90f\"\n      },\n      address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // MAIN\n      disabledTokens:{\n        137:[\"idleDAIYield\",\"idleUSDCYield\",\"idleWETHYield\"],\n        1:[\"idleFEIYield\",\"idleDAISafe\",\"idleUSDCSafe\",\"idleUSDTSafe\"]\n      }\n    },\n    COMP: {\n      abi: COMP,\n      decimals: 18,\n      token: \"COMP\",\n      enabled: true,\n      showAUM: true, // Include IDLE balance in AUM\n      showAPR: true, // Include COMP Apr\n      showPrice: true,\n      showBalance: true, // Include COMP balance in Portfolio Donut\n      disabledTokens: [],\n      protocol: \"compound\",\n      aprTooltipMode: false,\n      availableNetworks:[1],\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      color: \"hsl(162, 100%, 41%)\",\n      address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE:{\n      abi:aToken,\n      decimals:18,\n      showAUM:true, // Include stkAAVE balance in AUM\n      showAPR:true, // Include stkAAVE Apr\n      enabled:true,\n      showPrice:true,\n      token:'stkAAVE',\n      showBalance:true, // Include stkAAVE balance in Portfolio Donut\n      protocol:'aavev2',\n      aprTooltipMode:false,\n      availableNetworks:[1],\n      distributionMode:'second',\n      color:'hsl(314, 41%, 51%)',\n      distributionFrequency:'day',\n      address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice:'0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n      disabledTokens:{\n        1:[\"idleTUSDYield\", \"idleSUSDYield\", \"idleFEIYield\"]\n      }\n    },\n    WMATIC:{\n      abi:ERC20,\n      decimals:18,\n      showAUM:true, // Include stkAAVE balance in AUM\n      showAPR:true, // Include stkAAVE Apr\n      enabled:true,\n      token:'WMATIC',\n      showPrice:true,\n      showBalance:true, // Include stkAAVE balance in Portfolio Donut\n      protocol:'aavev2',\n      disabledTokens:[],\n      aprTooltipMode:false,\n      distributionMode:'second',\n      color:'hsl(314, 41%, 51%)',\n      distributionFrequency:'day',\n      availableNetworks:[137,80001],\n      // address:'0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889', // Mumbai\n      address:'0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', // Polygon\n      addressForPrice:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0' // Mainnet\n    }\n  },\n  contracts:{\n    137:{\n      ProtocolDataProvider:{\n        useInfuraProvider:false,\n        abi:ProtocolDataProvider,\n        address:'0x7551b5D2763519d4e37e8B81929D336De671d46d'\n      },\n      ChildChainManager:{\n        abi:ChildChainManager,\n        useInfuraProvider:false,\n        // address:'0x2e5e27d50EFa501D90Ad3638ff8441a0C0C0d75e' // Mumbai\n        address:'0xA6FA4fB5f76172d178d61B04b0ecd319C5d1C0aa' // Matic\n      },\n      UniswapRouter:{\n        abi:UniswapV2Router02,\n        useInfuraProvider:true,\n        address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      SushiswapRouter:{\n        abi:SushiV2Router02,\n        address:'0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506'\n      },\n    },\n    1:{\n      DepositManager:{\n        abi:DepositManager,\n        address:'0x401f6c983ea34274ec46f84d70b31c151321188b'\n      },\n      RootChainManager:{\n        abi:RootChainManager,\n        // address:'0xBbD7cBFA79faee899Eaf900F13C9065bF03B1A74' // Goerli\n        address:'0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n      },\n      ProxyFactory: {\n        abi: MinimalInitializableProxyFactory,\n        address: \"0x91baced76e3e327ba7850ef82a7a8251f6e43fb8\"\n      },\n      LockedIDLE:{\n        abi:LockedIDLE,\n        address:'0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n      },\n      FeeTreasury:{\n        abi:FeeTreasury,\n        address:'0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n      },\n      PriceOracle:{\n        abi:PriceOracle,\n        address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n        // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n      },\n      Timelock:{\n        abi:Timelock,\n        address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n        // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n      },\n      EcosystemFund:{\n        abi:EcosystemFund,\n        address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n        // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n      },\n      VesterFactory:{\n        abi:VesterFactory,\n        address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n        // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n      },\n      IdleController:{\n        abi:IdleController,\n        address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n        // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n      },\n      EarlyRewards:{\n          abi:EarlyRewards,\n          address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n          // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n      },\n      GovernorAlpha:{\n        abi:GovernorAlpha,\n        address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n        // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n      },\n      Comptroller:{\n        abi:Comptroller,\n        address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n        // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n      },\n      SushiswapRouter:{\n        abi:SushiV2Router02,\n        address:'0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n      },\n      UniswapRouter:{\n        abi:UniswapV2Router02,\n        address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      BalancerExchangeProxy:{\n        abi:BalancerExchangeProxy,\n        address:'0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n      }\n    }\n  },\n  tokens: {\n    DAI: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    },\n    USDC: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\n          \"0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    }\n  },\n  tranchflash: {\n    name: \"perpetual yield tranches\",\n    subtitle: \"Make yield your own.\",\n    desc:\"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\",\n    arrows: \"images/idlearrows.svg\",\n    juniorinfo:\n      \"<b>Junior Tranches</b><br>Higher risk, leveraged for variable rate rewards\",\n    seniorinfo:\n      \"<b>Senior Tranches</b><br>Lower risk, built-in coverage for variable rate rewards\",\n    helpcircle: \"images/help-circle.svg\",\n    questions: [\n      {\n        desc: \"How it Works?\",\n        msg:\"This product aggregates user deposits into underlying markets and allocates the accrued yield on the sum between two different risk profile subsets. You get to choose the strategy according to your risk tolerance. Users are able to deposit funds into either the Junior or Senior Tranches in exchange for a token indicating their claim on their principal and whatever yield is allocated for them. These aggregated holdings are then deposited into the specified originating lending market, in this current version Idle Best-Yield strategy.\"\n      },\n      {\n        desc: \"What happens in a case of a default?\",\n        msg:\"In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).\"\n      }\n    ]\n  },\n  tranches: {\n    AA: {\n      color: {\n        hex: \"#337de5\",\n        rgb: [51, 125, 229],\n        hsl: [\"215\", \"77%\", \"55%\"]\n      },\n      type: \"AA\",\n      route: \"senior\",\n      icon: \"Security\",\n      image: \"images/SeniorTranche.svg\",\n      bubble: \"images/SeniorBubble.svg\",\n      baseName: \"senior\",\n      name: \"Senior Tranche\",\n      features: [\n        \"Covered by Junior tranches funds\",\n        \"Minimized risk exposure\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        long:\n          \"Senior Tranches provide a shielded access to optimized DeFi yields, thanks to an integrated funds' coverage given by Junior Tranches\",\n        deposit:\n          \"By depositing in the Senior Tranche in case of Smart-Contract breach your funds are covered by the funds deposited in the Junior Tranche.\",\n        stake:\n          \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake:\n          \"By unstaking your tranche tokens you will no more get additional rewards.\",\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        cantUnstake:\n          \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw:\n          \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\"\n      }\n    },\n    BB: {\n      color: {\n        hex: \"#FAB325\",\n        rgb: [250, 179, 37],\n        hsl: [\"40\", \"95%\", \"56%\"]\n      },\n      type: \"BB\",\n      route: \"junior\",\n      icon: \"TrendingUp\",\n      image: \"images/JuniorTranche.svg\",\n      bubble: \"images/JuniorBubble.svg\",\n      baseName: \"junior\",\n      name: \"Junior Tranche\",\n      features: [\n        \"Leverage yield using Senior tranches funds\",\n        \"Higher risk exposure by protecting senior tranches\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        long:\n          \"The Junior Tranches provide amplified optimized DeFi yields by carrying a higher grade of risks and protecting Senior Tranches\",\n        deposit:\n          \"By depositing in the Junior Tranche in case of Smart-Contract breach your funds will be used to cover eventual losses on the Senior Tranche.\",\n        stake:\n          \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake:\n          \"By unstaking your tranche tokens you will no more get additional rewards.\",\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        cantUnstake:\n          \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw:\n          \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\"\n      }\n    }\n  },\n  extraicons: {\n    best: {\n      icon: \"images/sidebar/best-on.svg\",\n      iconDark: \"images/sidebar/best-on-dark.svg\",\n      iconInactive: \"images/sidebar/best-off.svg\",\n      iconInactiveDark: \"images/sidebar/best-off-dark.svg\",\n    },\n    tranches: {\n      icon: \"images/sidebar/tranches-on.svg\",\n      iconDark: \"images/sidebar/tranches-on-dark.svg\",\n      iconInactive: \"images/strategies/tranches-off.svg\",\n      iconInactiveDark: \"images/strategies/tranches-off-dark.svg\"\n    },\n    risk: {\n      icon: \"images/sidebar/risk-on.svg\",\n      iconDark: \"images/sidebar/risk-on-dark.svg\",\n      iconInactive: \"images/sidebar/risk-off.svg\",\n      iconInactiveDark: \"images/sidebar/risk-off-dark.svg\"\n    },\n    stats: {\n      icon: \"images/sidebar/stats-on.svg\",\n      iconDark: \"images/sidebar/stats-on-dark.svg\",\n      iconInactive: \"images/sidebar/stats-off.svg\",\n      iconInactiveDark: \"images/sidebar/stats-off-dark.svg\"\n    },\n    tools: {\n      icon: \"images/sidebar/tools-on.svg\",\n      iconDark: \"images/sidebar/tools-on-dark.svg\",\n      iconInactive: \"images/sidebar/tools-off.svg\",\n      iconInactiveDark: \"images/sidebar/tools-off-dark.svg\"\n    },\n    forum: {\n      icon: \"images/sidebar/forum-on.svg\",\n      iconDark: \"images/sidebar/forum-on-dark.svg\",\n      iconInactive: \"images/sidebar/forum-off.svg\",\n      iconInactiveDark: \"images/sidebar/forum-off-dark.svg\"\n    },\n    stake: {\n      icon: \"images/sidebar/stake-on.svg\",\n      iconDark: \"images/sidebar/stake-on-dark.svg\",\n      iconInactive: \"images/sidebar/stake-off.svg\",\n      iconInactiveDark: \"images/sidebar/stake-off-dark.svg\"\n    },\n    leaderboard: {\n      icon: \"images/sidebar/leaderboard-on.svg\",\n      iconDark: \"images/sidebar/leaderboard-on-dark.svg\",\n      iconInactive: \"images/sidebar/leaderboard-off.svg\",\n      iconInactiveDark: \"images/sidebar/leaderboard-off-dark.svg\"\n    }, overview: {\n      icon: \"images/sidebar/overview-on.svg\",\n      iconDark: \"images/sidebar/overview-on-dark.svg\",\n      iconInactive: \"images/sidebar/overview-off.svg\",\n      iconInactiveDark: \"images/sidebar/overview-off-dark.svg\"\n    }, proposals: {\n      icon: \"images/sidebar/proposals-on.svg\",\n      iconDark: \"images/sidebar/proposals-on-dark.svg\",\n      iconInactive: \"images/sidebar/proposals-off.svg\",\n      iconInactiveDark: \"images/sidebar/proposals-off-dark.svg\"\n    }, delegate: {\n      icon: \"images/sidebar/delegate-on.svg\",\n      iconDark: \"images/sidebar/delegate-on-dark.svg\",\n      iconInactive: \"images/sidebar/delegate-off.svg\",\n      iconInactiveDark: \"images/sidebar/delegate-off-dark.svg\"\n    },\n  },\n  strategies: {\n    tranches: {\n      token: \"DAI\",\n      visible: true,\n      type: \"tranche\",\n      protocol: \"idle\",\n      color: \"#f32121\",\n      comingSoon: false,\n      title: \"Tranches\",\n      addGovTokens: true,\n      titlePostfix: null,\n      component: Tranches,\n      iconName: \"Whatshot\",\n      enabledEnvs: ['beta'],\n      availableNetworks:[1],\n      govTokensEnabled: true,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc:\"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort:\"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong:\"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      availableNetworks:[1,137],\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong:\"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort:\"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    risk: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#2196F3\",\n      type: \"strategy\",\n      comingSoon: false,\n      titlePostfix: null,\n      addGovTokens: true,\n      iconName: \"Security\",\n      availableNetworks:[1],\n      title: \"Risk-Adjusted\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(211,67%,47%)\",\n      icon: \"images/strategies/risk-on.svg\",\n      iconInactive: \"images/strategies/risk-off.svg\",\n      iconInactiveDark: \"images/strategies/risk-white.svg\",\n      desc: \"Optimize your risk exposure across DeFi protocols\",\n      descLong:\"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.\",\n      descShort:\"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.\"\n    }\n    /*\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n    */\n  },\n  stats: {\n    enabled: true, // Enable endpoint\n    availableNetworks:[1],\n    rates: {\n      TTL: 300, // 5 minutes\n      endpoint:{\n        1:\"https://api.idle.finance/rates/\",\n        137:\"https://api-polygon.idle.finance/rates/\"\n      }\n    },\n    tvls: {\n      TTL: 120,\n      endpoint:{\n        1:\"https://api.idle.finance/tvls/\",\n        137:\"https://api-polygon.idle.finance/tvls/\"\n      }\n    },\n    substack: {\n      TTL: 1800,\n      endpoint:{\n        1:\"https://api.idle.finance/substack/\",\n        137:\"https://api-polygon.idle.finance/substack/\"\n      }\n    },\n    scores: {\n      TTL: 300, // 5 minutes\n      endpoint:{\n        1:\"https://api.idle.finance/scores/\"\n      }\n    },\n    config: {\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {}\n    },\n    versions: {\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3: {\n        label: \"Idle V3\",\n        additionalProtocols: [],\n        endTimestamp: 1597237542,\n        startTimestamp: 1589801874,\n        showPerformanceTooltip: false,\n        strategiesParams: {\n          risk: {\n            endTimestamp: 1597233922\n          }\n        },\n        enabledStrategies: [\"best\", \"risk\"],\n        enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"]\n      },\n      v4: {\n        label: \"Idle V4\",\n        endTimestamp: null,\n        startTimestamp: 1597442400, // 1598220000\n        enabledStrategies: [\"best\", \"risk\"],\n        showPerformanceTooltip: true,\n        strategiesParams: {\n          risk: {\n            startTimestamp: 1599183170\n          }\n        },\n        enabledTokens: ['DAI', 'USDC', 'USDT', 'TUSD', 'SUSD', 'WBTC', 'WETH', 'RAI', 'FEI'],\n        additionalProtocols: [\n          {\n            decimals: 16,\n            protocol: \"compound\",\n            name: \"compoundWithCOMP\",\n            enabledTokens: [\n              \"DAI\",\n              \"USDC\",\n              \"USDT\",\n              \"TUSD\",\n              \"SUSD\",\n              \"WBTC\",\n              \"WETH\"\n            ]\n          },\n          {\n            decimals: 18,\n            protocol: \"aavev2\",\n            name: \"aavev2WithStkAAVE\",\n            enabledTokens: [\n              \"DAI\",\n              \"USDC\",\n              \"USDT\",\n              \"TUSD\",\n              \"SUSD\",\n              \"WBTC\",\n              \"WETH\",\n              \"RAI\"\n            ]\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      MATIC:{\n        decimals:18,\n        enabled:true,\n        address:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      USD: {\n        enabled: true,\n        color: {\n          hex: \"#85bb65\",\n          rgb: [133, 187, 101],\n          hsl: [\"98\", \"39%\", \"56%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        address: null,\n        startTimestamp: \"2020-02-04\"\n      },\n      USDC: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#2875C8\",\n          rgb: [40, 117, 200],\n          hsl: [\"211\", \"67%\", \"47%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      USDT: {\n        decimals: 6,\n        enabled: true,\n        color: {\n          hex: \"#22a079\",\n          rgb: [34, 160, 121],\n          hsl: [\"161\", \"65%\", \"38%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      TUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"0340a1\",\n          rgb: [3, 64, 161],\n          hsl: [\"217\", \"96%\", \"32%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x0000000000085d4780b73119b644ae5ecd22b376\"\n      },\n      SUSD: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#1e1a31\",\n          rgb: [30, 26, 49],\n          hsl: [\"250\", \"31%\", \"15%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x57ab1ec28d129707052df4df418d58a2d46d5f51\"\n      },\n      WBTC: {\n        decimals: 8,\n        enabled: true,\n        color: {\n          hex: \"#eb9444\",\n          rgb: [235, 148, 68],\n          hsl: [\"29\", \"81%\", \"59%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"wbtcDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      WETH: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#ee1f79\",\n          rgb: [238, 31, 121],\n          hsl: [\"334\", \"86%\", \"53%\"]\n        },\n        startTimestamp: \"2021-02-16\",\n        conversionRateField: \"wethDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      COMP: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#00d395\",\n          rgb: [0, 211, 149],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"compDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\"\n      },\n      stkAAVE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        startTimestamp: \"2021-04-30\",\n        conversionRateField: \"aaveDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x4da27a545c0c5b758a6ba100e3a049001de870f5\"\n      },\n      IDLE: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#0d55bb\",\n          rgb: [13, 85, 187],\n          hsl: [\"215\", \"87%\", \"39%\"]\n        },\n        startTimestamp: \"2020-11-10\",\n        conversionRateField: \"idleDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n      },\n      RAI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#378879\",\n          rgb: [55, 136, 121],\n          hsl: [\"169\", \"42%\", \"37%\"]\n        },\n        disabledCharts: [\"score\"],\n        startTimestamp: \"2021-05-25\",\n        icon: \"images/tokens/RAI.png\",\n        conversionRateField: \"raiDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x03ab458634910aad20ef5f1c8ee96f1d6ac54919\"\n      },\n      FEI: {\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#229b6e',\n          rgb: [34, 155, 110],\n          hsl: ['158', '64%', '37%']\n        },\n        disabledCharts: ['score'],\n        startTimestamp: '2021-09-24',\n        conversionRateField: 'feiDAIPrice',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      },\n      WMATIC:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#2891f8',\n          rgb:[40, 145, 248],\n          hsl:['210', '94%', '56%']\n        },\n        startTimestamp:'2021-05-25',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0',\n      },\n      'idleDAI+idleUSDC+idleUSDT':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp: \"2020-06-15\"\n      }\n    },\n    protocols: {\n      compound: {\n        legend: true,\n        enabled: true,\n        label: \"Compound\",\n        color: {\n          rgb: [0, 209, 146],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        }\n      },\n      aavev2WithStkAAVE: {\n        enabled: true,\n        label: \"Aave V2 + stkAAVE\",\n        startTimestamp: \"2021-05-08 14:30:00\",\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        rateField: [\"rate\", \"aaveAdditionalAPR\"]\n      },\n      compoundWithCOMP: {\n        enabled: true,\n        label: \"Compound + COMP\",\n        color: {\n          rgb: [0, 153, 107],\n          hsl: [\"162\", \"100%\", \"30%\"]\n        },\n        rateField: [\"rate\", \"compoundAdditionalAPR\"]\n      },\n      fulcrum: {\n        legend: false,\n        enabled: false,\n        label: \"Fulcrum\",\n        color: {\n          rgb: [2, 138, 192],\n          hsl: [\"197\", \"98%\", \"38%\"]\n        }\n      },\n      dsr: {\n        label: \"DSR\",\n        enabled: false,\n        icon: \"CHAI.png\",\n        color: {\n          rgb: [222, 52, 67],\n          hsl: [\"355\", \"72%\", \"54%\"]\n        }\n      },\n      dydx: {\n        legend: true,\n        label: \"DyDx\",\n        enabled: true,\n        color: {\n          rgb: [87, 87, 90],\n          hsl: [\"240\", \"2%\", \"35%\"]\n        }\n      },\n      iearn: {\n        label: \"Yearn\",\n        enabled: true\n      },\n      aave: {\n        label: \"Aave V1\",\n        legend: false,\n        enabled: false,\n        color: {\n          rgb: [230, 131, 206],\n          hsl: [\"315\", \"66%\", \"71%\"]\n        }\n      },\n      aavev2: {\n        legend: true,\n        enabled: true,\n        icon: \"aave.svg\",\n        label: \"Aave V2\",\n        color: {\n          rgb: [151, 79, 141],\n          hsl: [\"308\", \"31%\", \"45%\"]\n        }\n      },\n      cream: {\n        legend: true,\n        enabled: true,\n        label: \"Cream\",\n        icon: \"cream.svg\",\n        color: {\n          rgb: [105, 226, 220],\n          hsl: [\"177\", \"68%\", \"65%\"]\n        }\n      },\n      fuse: {\n        legend: true,\n        enabled: true,\n        label: \"Fuse\",\n        icon: \"fuse.png\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: [\"0\", \"0%\", \"0%\"]\n        }\n      },\n      curve: {\n        label: \"\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      },\n      idle: {\n        label: \"Idle\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      }\n    }\n  },\n  contract: {\n    methods: {\n      refreshIdleSpeed:{\n        enabled:true,\n        availableNetworks:[1]\n      },\n      redeem: {\n        skipRebalance: true,\n        metaTransactionsEnabled: false\n      },\n      deposit: {\n        skipMint: true,\n        minAmountForMint: 100000,\n        erc20ForwarderEnabled: true,\n        skipMintCheckboxEnabled: true,\n        metaTransactionsEnabled: false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract: {\n          forwarder: {\n            enabled: true,\n            abi: erc20Forwarder,\n            name: \"erc20Forwarder\",\n            function: \"emitMessage\",\n            address: \"0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda\" // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens: {\n            DAI: {\n              enabled: true,\n              permitType: \"DAI_Permit\",\n              abi: IdleDepositForwarder,\n              function: \"permitAndDeposit\", // foo\n              name: \"IdleDepositForwarderDAI\",\n              address: \"0xDe3c769cCD1878372864375e9f89956806B86daA\" // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC: {\n              enabled: true,\n              abi: IdleDepositForwarder,\n              permitType: \"EIP2612_Permit\",\n              name: \"IdleDepositForwarderUSDC\",\n              function: \"permitEIP2612AndDeposit\", // 'foo'\n              address: \"0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761\" // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            }\n          }\n        },\n        proxyContract: {\n          enabled: false,\n          abi: IdleProxyMinter,\n          name: \"IdleProxyMinter\",\n          function: \"mintIdleTokensProxy\",\n          address: \"0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a\"\n        }\n      },\n      migrate: {\n        skipRebalance: true,\n        minAmountForRebalance: 10000,\n        minAmountForRebalanceMetaTx: 10000\n      },\n      redeemGovTokens: {\n        enabled: true\n      },\n      redeemSkipGov: {\n        enabled: true,\n        disabledTokens: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"]\n      },\n      rebalance: {\n        enabled: true,\n        abi: IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:{\n        version:'v1',\n        name:'Mainnet',\n        baseToken:'ETH',\n        provider:'infura',\n        network:'mainnet',\n        explorer:'etherscan',\n        chainName:'Ethereum Mainnet',\n      },\n      42:{\n        name:'Kovan',\n        baseToken:'ETH',\n        provider:'infura',\n        explorer:'etherscan',\n        chainName:'Ethereum Testnet Kovan',\n      },\n      3:{\n        name:'Ropsten',\n        baseToken:'ETH',\n        provider:'infura',\n        explorer:'etherscan',\n        chainName:'Ethereum Testnet Ropsten',\n      },\n      4:{\n        name:'Rinkeby',\n        baseToken:'ETH',\n        provider:'infura',\n        explorer:'etherscan',\n        chainName:'Ethereum Testnet Rinkeby',\n      },\n      137:{\n        name:'Matic',\n        version:'v1',\n        network:'mainnet',\n        baseToken:'MATIC',\n        explorer:'polygon',\n        provider:'polygon',\n        chainName:'Matic(Polygon) Mainnet',\n      },\n      5:{\n        name:'Görli',\n        baseToken:'ETH',\n        version:'mumbai',\n        network:'testnet',\n        provider:'infura',\n        explorer:'etherscan',\n        chainName:'Ethereum Testnet Görli',\n      },\n      1337:{\n        name:'Hardhat',\n        baseToken:'ETH',\n        provider:'infura',\n        explorer:'etherscan',\n        chainName:'Ethereum Mainnet',\n      },\n      80001:{\n        name:'Mumbai',\n        version:'mumbai',\n        network:'testnet',\n        baseToken:'MATIC',\n        explorer:'polygon',\n        provider:'polygon',\n        chainName:'Matic Testnet Mumbai',\n      }\n    },\n    isForked: false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork: 1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear: 2371428,\n    secondsPerYear: 31536000,\n    requiredConfirmations: 1,\n    firstBlockNumber: 8119247,\n    enabledNetworks: [1, 137],\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers:{\n      infura:{\n        key:env.REACT_APP_INFURA_KEY,\n        rpc:{\n          5: 'https://goerli.infura.io/v3/',\n          42: 'https://kovan.infura.io/v3/',\n          1: 'https://mainnet.infura.io/v3/',\n          1337: 'https://mainnet.infura.io/v3/',\n          137: 'https://mainnet.infura.io/v3/',\n          80001: 'https://goerli.infura.io/v3/'\n        }\n      },\n      polygon:{\n        enabled:true,\n        // key:env.REACT_APP_POLYGON_KEY,\n        key:env.REACT_APP_INFURA_KEY,\n        baseUrl:{\n          137:'https://polygonscan.com',\n          80001:'https://explorer-mumbai.maticvigil.com'\n        },\n        networkPairs:{\n          1:137,\n          137:1,\n          5:80001,\n          80001:5\n        },\n        publicRpc:{\n          137:'https://rpc-mainnet.matic.network'\n        },\n        rpc:{\n          // 1:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 5:'https://rpc-mumbai.maticvigil.com/v1/',\n          // 137:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 80001:'https://rpc-mumbai.maticvigil.com/v1/'\n\n          1:'https://polygon-mainnet.infura.io/v3/',\n          5:'https://polygon-mainnet.infura.io/v3/',\n          137:'https://polygon-mainnet.infura.io/v3/',\n          80001:'https://polygon-mainnet.infura.io/v3/'\n\n          // 1:'https://matic-mainnet.chainstacklabs.com/',\n          // 137:'https://matic-mainnet.chainstacklabs.com/',\n          // 5:'https://matic-mumbai.chainstacklabs.com/',\n          // 80001:'https://matic-mumbai.chainstacklabs.com/' \n        }\n      },\n      nexus: {\n        endpoints: {\n          1: \"https://api.nexusmutual.io/v1/\",\n          42: \"https://api.staging.nexusmutual.io/v1/\"\n        }\n      },\n      ens:{\n        enabled:true,\n        supportedNetworks:[1]\n      },\n      covalent:{\n        enabled:true,\n        key:env.REACT_APP_COVALENT_KEY,\n        endpoints:{\n          137:'https://api.covalenthq.com/v1/137/',\n          80001:'https://api.covalenthq.com/v1/80001/'\n        }\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        keys: [\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          5: 'https://api-goerli.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl:{\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          5: 'https://goerli.etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      snapshot: {\n        whitelist: [\n          \"0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa\",\n          \"0xf12ce5807e3d3128B876aa1Cec0632D63547E22E\"\n        ],\n        endpoints: {\n          proposals: \"https://hub.snapshot.page/api/idlefinance.eth/proposals\"\n        },\n        urls: {\n          proposals: \"https://signal.idle.finance/#/idlefinance.eth/proposal/\"\n        }\n      },\n      biconomy: {\n        enabled: true,\n        enableLogin: false,\n        supportedNetworks: [1, 42],\n        disabledWallets: [\"authereum\"],\n        endpoints: {\n          limits: \"https://api.biconomy.io/api/v1/dapp/checkLimits\"\n        },\n        params: {\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: \"36572ec9-ae5c-4c4a-9530-f3ae7c7ac829\"\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID: {\n        enabled: false,\n        supportedNetworks: [1],\n        getNetwork: (networkId, availableNetworks) => {\n          let networkName = null;\n          switch (networkId) {\n            case 1:\n              networkName = \"mainnet\";\n              break;\n            default:\n              networkName = availableNetworks[networkId]\n                ? availableNetworks[networkId].toLowerCase()\n                : \"mainnet\";\n              break;\n          }\n          return networkName;\n        },\n        params: {\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: \"mainnet\"\n        }\n      }\n    }\n  },\n  events: {\n    DAI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    }\n  },\n  notifications: [\n    {\n      enabled: false,\n      end: 1612282726374,\n      start: 1611677841027,\n      date: \"Jan 26, 2021 16:18 UTC\",\n      title: \"Cover Protocol Available\",\n      hash: \"/dashboard/tools/cover-protocol\",\n      image: \"/images/protocols/cover-logo.svg\",\n      text: \"Protect your portfolio with Cover Protocol\"\n    }\n  ],\n  tools: {\n    stake: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      route: \"staking\",\n      subComponent: Staking,\n      availableNetworks:[1],\n      desc: \"Stake your IDLE / Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          IDLE: {\n            component: IdleStaking,\n            contract: {\n              abi: stkIDLE,\n              decimals: 18,\n              name: \"stkIDLE\",\n              fromBlock: 12561464,\n              rewardToken: \"IDLE\",\n              address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n            },\n            feeDistributor: {\n              fromBlock: 12649361,\n              abi: StakingFeeDistributor,\n              name: \"StakingFeeDistributor\",\n              address: \"0xbabb82456c013fd7e3f25857e0729de8207f80e2\" // Mainnet\n            },\n            abi: IDLE,\n            name: \"IDLE\",\n            token: \"IDLE\",\n            decimals: 18,\n            enabled: true,\n            label: \"IDLE Token\",\n            icon: \"images/tokens/IDLE.svg\",\n            address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // Mainnet\n            poolLink:\n              \"https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n          },\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 120,\n              rewardToken: \"IDLE\",\n              address: \"0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d\" // Mainnet\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/ETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0xa7f11e026a0af768d285360a855f2bded3047530\", // Mainnet\n            poolLink:\n              \"https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530\"\n          }\n        }\n      }\n    },\n    stakePolygon: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      subComponent: Staking,\n      availableNetworks:[137],\n      route: \"staking-polygon\",\n      desc: \"Stake your Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 60,\n              rewardToken: \"IDLE\",\n              address: \"0x59CDF902b6A964CD5dB04d28f12b774bFB876Be9\" // Polygon\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/WETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\", // Polygon\n            poolLink: \"https://analytics-polygon.sushi.com/pairs/0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\"\n          }\n        }\n      }\n    },\n    nexusMutual: {\n      enabled: true,\n      icon: \"Security\",\n      route: \"coverage\",\n      label: \"Coverage\",\n      availableNetworks:[1],\n      desc: \"Buy Nexus Mutual coverage without KYC for your deposits\",\n      subComponent: NexusMutual,\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleDAIYield\",\n            token: \"idleDAIYield\", // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000011\",\n            realAddress: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\", // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleUSDTYield\",\n            token: \"idleUSDTYield\", // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000012\",\n            realAddress: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          }\n        }\n      },\n      directProps: {\n        // startBlock:25858186, // Kovan\n        startBlock: 12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo: {\n          abi: NexusMutualDistributor,\n          name: \"NexusMutualDistributor\",\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address: \"0xf2b36f823eae36e53a5408d8bd452748b24fbf76\" // Mainnet\n        },\n        incidentsInfo: {\n          abi: NexusMutualIncidents,\n          name: \"NexusMutualIncidents\",\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address: \"0x8ceba69a8e96a4ce71aa65859dbdb180b489a719\" // Mainnet\n        }\n      }\n    },\n    b2bVesting: {\n      enabled: true,\n      visible: true,\n      icon: \"CloudUpload\",\n      label: \"B2B Vesting\",\n      availableNetworks:[1],\n      route: \"b2b-vesting-contract\",\n      subComponent: DeployB2BVesting,\n      desc:'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props: {\n        contracts: {\n          vesterImplementation: {\n            abi: B2BVester,\n            address: \"0x3024656ae91d7bf724f613c314bc56030ba2344c\"\n          }\n        }\n      }\n    },\n    polygonBridge:{\n      enabled:true,\n      route:'polygon-bridge',\n      availableNetworks:[1,137],\n      subComponent:PolygonBridge,\n      label:'Ethereum <> Polygon Bridge',\n      image:'images/protocols/polygon.svg',\n      desc:'Transfer your tokens from Ethereum to Polygon and vice versa with Plasma and PoS Bridge.',\n      props:{\n        contracts:{\n          ERC20Predicate:{\n            abi:null,\n            name:'ERC20Predicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address:'0x40ec5B33f54e0E8A33A975908C5BA1c14e5BbbDf' // Mainnet\n          },\n          EtherPredicate:{\n            abi:null,\n            name:'EtherPredicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address:'0x8484Ef722627bf18ca5Ae6BcF031c23E6e922B30' // Mainnet\n          },\n          DepositManager:{\n            name:'DepositManager',\n            address:'0x401f6c983ea34274ec46f84d70b31c151321188b'\n          },\n          RootChainManager:{\n            name:'RootChainManager',\n            address:'0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n          },\n          StateSender:{\n            name:'StateSender',\n            address:'0x28e4F3a7f651294B9564800b2D01f35189A5bFbE'\n          }\n        },\n        availableTokens:{\n          /*\n          DERC20:{\n            decimals:18,\n            enabled:true,\n            name:'DERC20',\n            token:'DERC20',\n            rootToken:{\n              name:'DERC20',\n              abi:DummyERC20,\n              address:'0x655F2166b0709cd575202630952D71E2bB0d61Af' // Goerli\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'DummyERC20',\n              address:'0xfe4F5145f6e09952a5ba9e956ED0C25e3Fa4c7F1' // Mumbai\n            }\n          },\n          */\n          MATIC:{\n            name:'MATIC',\n            token:'MATIC',\n            decimals:18,\n            enabled:true,\n            sendValue:true,\n            bridgeType:'plasma',\n            rootToken:{\n              abi:ERC20,\n              name:'MATIC',\n              address:'0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childMATIC',\n              address:'0x0000000000000000000000000000000000001010' // Matic\n            }\n          },\n          WETH:{\n            name:'WETH',\n            token:'ETH',\n            decimals:18,\n            enabled:true,\n            bridgeType:'pos',\n            childToken:{\n              abi:ChildERC20,\n              name:'maticWETH',\n              address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          /*\n          WETH:{\n            name:'WETH',\n            token:'WETH',\n            decimals:18,\n            enabled:true,\n            sendValue:false,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'WETH',\n              address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childWETH',\n              address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          */\n          DAI:{\n            name:'DAI',\n            token:'DAI',\n            decimals:18,\n            enabled:true,\n            sendValue:false,\n            bridgeType:'pos',\n            rootToken:{\n              abi:DAI,\n              name:'DAI',\n              // address:'0x6311344B50D2077BF9804d376EA4C2cEDcB75C1f', // Goerli\n              address:'0x6b175474e89094c44da98b954eedeac495271d0f', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childDAI',\n              // address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F', // Mumbai\n              address:'0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063' // Matic\n            }\n          },\n          USDC:{\n            decimals:6,\n            name:'USDC',\n            token:'USDC',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:USDC,\n              name:'USDC',\n              // address:'0x98339D8C260052B7ad81c28c16C0b98420f2B46a' // Goerli\n              address:'0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childUSDC',\n              // address:'0x6D4dd09982853F08d9966aC3cA4Eb5885F16f2b2' // Mubai\n              address:'0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174' // Matic\n            }\n          },\n          IDLE:{\n            decimals:18,\n            name:'IDLE',\n            token:'IDLE',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:IDLE,\n              name:'IDLE',\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childUSDC',\n              address:'0xc25351811983818c9fe6d8c580531819c8ade90f' // Matic\n            }\n          },\n          /*\n          AAVE:{\n            decimals:18,\n            name:'AAVE',\n            token:'AAVE',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'AAVE',\n              address:'0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childAAVE',\n              address:'0xD6DF932A45C0f255f85145f286eA0b292B21C90B' // Matic\n            }\n          }\n          */\n        }\n      }\n    },\n    ethWrapper:{\n      enabled:true,\n      label:'ETH Wrapper',\n      route:'eth-wrapper',\n      availableNetworks:[1,42],\n      subComponent:TokenWrapper,\n      image:'images/tokens/WETH.svg',\n      desc:'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props:{\n        startContract:{\n          name:'ETH',\n          token:'ETH',\n          decimals:18,\n          wrapMethod:'deposit',\n        },\n        destContract:{\n          abi:WETH,\n          name:'WETH',\n          decimals:18,\n          token:'WETH',\n          unwrapMethod:'withdraw',\n          address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol:{\n      enabled:false,\n      availableNetworks:[1],\n      label:'Cover Protocol',\n      route:'cover-protocol',\n      subComponent:CoverProtocol,\n      image:'images/protocols/cover-logo.svg',\n      desc:'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl:'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props:{\n        contract:{\n          decimals:18,\n          abi:CoverMint,\n          name:'CoverMint',\n          address:'0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages:[\n          {\n            collateral: \"DAI\",\n            expirationTimestamp: 1714470400,\n            tokens: {\n              Claim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                address: \"0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                  address: \"0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c\"\n                }\n              },\n              NoClaim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                address: \"0x53df0bfa014b7522299c129c5a7b318f02adb469\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                  address: \"0xce0e9e7a1163badb7ee79cfe96b5148e178cab73\"\n                }\n              }\n            }\n          }\n        ]\n      }\n    },\n    batchDeposit:{\n      enabled: true,\n      icon: \"Storage\",\n      claimEnabled: true,\n      depositEnabled: true,\n      availableNetworks:[1],\n      route: \"batch-deposit\",\n      label: \"Batch Deposit\",\n      subComponent: BatchDeposit,\n      desc:\"Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintDAI\",\n              address: \"0x633fb4d38B24dC890b11Db2AE2B248D13F996A79\", // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  usePermit: true,\n                  label: \"Deposit\",\n                  permitName: \"permitAndDeposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 6,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintUSDC\",\n              address: \"0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B\", // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  label: \"Deposit\",\n                  usePermit: true,\n                  permitName: \"permitEIP2612AndDepositUnlimited\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    batchMigration: {\n      enabled: true,\n      claimEnabled: true,\n      icon: \"FileDownload\",\n      depositEnabled:false,\n      availableNetworks:[1],\n      route: \"batch-migration\",\n      label: \"Batch Migration\",\n      subComponent: BatchMigration,\n      desc:\"Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            name: \"idleDAIYieldV3\",\n            token: \"idleDAIYieldV3\",\n            address: \"0x78751b12da02728f467a44eac40f5cbc16bd7934\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAI\",\n              address: \"0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCYieldV3\",\n            token: \"idleUSDCYieldV3\",\n            address: \"0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDC\",\n              address: \"0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTYieldV3\",\n            token: \"idleUSDTYieldV3\",\n            address: \"0x63D27B3DA94A9E871222CB0A32232674B02D2f2D\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDT\",\n              address: \"0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleSUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"SUSD\",\n            name: \"idleSUSDYieldV3\",\n            token: \"idleSUSDYieldV3\",\n            address: \"0xe79e177d2a5c7085027d7c64c8f271c81430fc9b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterSUSD\",\n              address: \"0xE2eE519399a49f1A2004a25DA61e82867A69b9b1\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleTUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"TUSD\",\n            name: \"idleTUSDYieldV3\",\n            token: \"idleTUSDYieldV3\",\n            address: \"0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterTUSD\",\n              address: \"0x174a273f0ea28e55b6dd13259aa43d262b863a86\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleWBTCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"WBTC\",\n            name: \"idleWBTCYieldV3\",\n            token: \"idleWBTCYieldV3\",\n            address: \"0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterWBTC\",\n              address: \"0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleDAISafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"DAI\",\n            name: \"idleDAISafeV3\",\n            token: \"idleDAISafeV3\",\n            address: \"0x1846bdfDB6A0f5c473dEc610144513bd071999fB\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAISafe\",\n              address: \"0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCSafeV3\",\n            token: \"idleUSDCSafeV3\",\n            address: \"0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDCSafe\",\n              address: \"0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTSafeV3\",\n            token: \"idleUSDTSafeV3\",\n            address: \"0x42740698959761baf1b06baa51efbd88cb1d862b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDTSafe\",\n              address: \"0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    tokenMigration: {\n      enabled: true,\n      icon: \"SwapHoriz\",\n      route: \"convert\",\n      availableNetworks:[1],\n      label: \"Token Migration\",\n      desc:\"Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle\",\n      subComponent: TokenMigration,\n      props: {\n        migrationContract: {\n          name: \"IdleConverterV4\",\n          abi: IdleConverterPersonalSignV4,\n          address: \"0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743\",\n          oldAddresses: [],\n          functions: [\n            {\n              label: \"Migrate\",\n              name: \"migrateFromToIdle\"\n            }\n          ]\n        },\n        availableStrategies: [\"best\", \"risk\"],\n        availableTokens: {\n          idleDAIv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            baseToken: \"DAI\",\n            abi: IdleTokenV2,\n            token: \"idleDAIOld\",\n            icon: \"images/tokens/idleDAI.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0x10eC0D497824e342bCB0EDcE00959142aAa766dD\"\n          },\n          cDAI: {\n            decimals: 8,\n            enabled: true,\n            token: \"cDAI\",\n            baseToken: \"DAI\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\"\n          },\n          iDAI: {\n            decimals: 18,\n            enabled: false,\n            token: \"iDAI\",\n            baseToken: \"DAI\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x493c57c4763932315a328269e1adad09653b9081\"\n          },\n          aDAI: {\n            decimals: 18,\n            enabled: true,\n            token: \"aDAI\",\n            protocol: \"aave\",\n            baseToken: \"DAI\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\"\n          },\n          yDAIv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv3\",\n            abi: yDAIv3.abi,\n            baseToken: \"DAI\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xC2cB1040220768554cf699b0d863A3cd4324ce32\"\n          },\n          yDAIv2: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv2\",\n            baseToken: \"DAI\",\n            abi: yDAIv3.abi,\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\"\n          },\n          idleUSDCv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            abi: IdleTokenV2,\n            baseToken: \"USDC\",\n            token: \"idleUSDCOld\",\n            icon: \"images/tokens/idleUSDC.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0xeB66ACc3d011056B00ea521F8203580C2E5d3991\"\n          },\n          cUSDC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x39aa39c021dfbae8fac545936693ac917d5e7563\"\n          },\n          iUSDC: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\"\n          },\n          aUSDC: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDC\",\n            protocol: \"aave\",\n            baseToken: \"USDC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\"\n          },\n          yUSDCv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv3\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x26EA744E5B887E5205727f55dFBE8685e3b21951\"\n          },\n          yUSDCv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv2\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\"\n          },\n          cUSDT: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\"\n          },\n          iUSDT: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x8326645f3aa6de6420102fdb7da9e3a91855045b\"\n          },\n          aUSDT: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDT\",\n            protocol: \"aave\",\n            baseToken: \"USDT\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\"\n          },\n          yUSDTv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv3\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\"\n          },\n          yUSDTv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv2\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\"\n          },\n          idleSUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"SUSD\",\n            token: \"idleSUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleSUSDYield.svg\",\n            address: \"0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5\"\n          },\n          aSUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aSUSD\",\n            protocol: \"aave\",\n            baseToken: \"SUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x625aE63000f46200499120B906716420bd059240\"\n          },\n          ySUSDv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"ySUSDv3\",\n            abi: ySUSDv3,\n            baseToken: \"SUSD\",\n            protocol: \"iearn\",\n            availableStrategies: [\"best\"],\n            icon: \"images/tokens/ySUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xf61718057901f84c4eec4339ef8f0d86d2b45600\"\n          },\n          idleTUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"TUSD\",\n            token: \"idleTUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleTUSDYield.svg\",\n            address: \"0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6\"\n          },\n          aTUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aTUSD\",\n            protocol: \"aave\",\n            baseToken: \"TUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x4DA9b813057D04BAef4e5800E36083717b4a0341\"\n          },\n          yTUSDv3: {\n            decimals: 18,\n            enabled: true,\n            abi: yTUSDv3,\n            token: \"yTUSDv3\",\n            baseToken: \"TUSD\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yTUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x73a052500105205d34daf004eab301916da8190f\"\n          },\n          cWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\"\n          },\n          iWBTC: {\n            decimals: 8,\n            enabled: false,\n            token: \"iWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\"\n          },\n          aWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"aWBTC\",\n            protocol: \"aave\",\n            baseToken: \"WBTC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\"\n          }\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      route:'add-funds',\n      label:'Add Funds',\n      availableNetworks:[1],\n      icon:'AddCircleOutline',\n      desc:'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    tokenSwap: {\n      enabled: true,\n      icon: \"Sync\",\n      route: \"token-swap\",\n      label: \"Token Swap\",\n      availableNetworks:[1],\n      desc: \"Easily swap your tokens using Kyber Swap widget\",\n      subComponent: TokenSwap,\n      props: {\n        availableTokens: {\n          ETH: { token: \"ETH\" },\n          DAI: { token: \"DAI\" },\n          SUSD: { token: \"SUSD\" },\n          TUSD: { token: \"TUSD\" },\n          USDC: { token: \"USDC\" },\n          USDS: { token: \"USDS\" },\n          USDT: { token: \"USDT\" },\n          WBTC: { token: \"WBTC\" },\n          WETH: { token: \"WETH\" },\n          BUSD: { token: \"BUSD\" },\n          EURS: { token: \"EURS\" },\n          \"2KEY\": { token: \"2KEY\" },\n          ABT: { token: \"ABT\" },\n          ABYSS: { token: \"ABYSS\" },\n          AMPL: { token: \"AMPL\" },\n          ANT: { token: \"ANT\" },\n          BAM: { token: \"BAM\" },\n          BAND: { token: \"BAND\" },\n          BAT: { token: \"BAT\" },\n          BLZ: { token: \"BLZ\" },\n          BNT: { token: \"BNT\" },\n          BQX: { token: \"BQX\" },\n          BTU: { token: \"BTU\" },\n          CDT: { token: \"CDT\" },\n          CVC: { token: \"CVC\" },\n          DAT: { token: \"DAT\" },\n          DGX: { token: \"DGX\" },\n          EKG: { token: \"EKG\" },\n          ELF: { token: \"ELF\" },\n          ENJ: { token: \"ENJ\" },\n          EQUAD: { token: \"EQUAD\" },\n          FXC: { token: \"FXC\" },\n          GDC: { token: \"GDC\" },\n          GEN: { token: \"GEN\" },\n          GHT: { token: \"GHT\" },\n          GNO: { token: \"GNO\" },\n          IOST: { token: \"IOST\" },\n          KEY: { token: \"KEY\" },\n          KNC: { token: \"KNC\" },\n          LEND: { token: \"LEND\" },\n          LINK: { token: \"LINK\" },\n          LOOM: { token: \"LOOM\" },\n          LRC: { token: \"LRC\" },\n          MANA: { token: \"MANA\" },\n          MCO: { token: \"MCO\" },\n          MET: { token: \"MET\" },\n          MFG: { token: \"MFG\" },\n          MKR: { token: \"MKR\" },\n          MLN: { token: \"MLN\" },\n          MTL: { token: \"MTL\" },\n          MYB: { token: \"MYB\" },\n          NEXXO: { token: \"NEXXO\" },\n          NPXS: { token: \"NPXS\" },\n          OGN: { token: \"OGN\" },\n          OMG: { token: \"OMG\" },\n          OST: { token: \"OST\" },\n          PAX: { token: \"PAX\" },\n          PBTC: { token: \"PBTC\" },\n          PLR: { token: \"PLR\" },\n          PNK: { token: \"PNK\" },\n          POLY: { token: \"POLY\" },\n          POWR: { token: \"POWR\" },\n          PT: { token: \"PT\" },\n          QKC: { token: \"QKC\" },\n          QNT: { token: \"QNT\" },\n          RAE: { token: \"RAE\" },\n          REN: { token: \"REN\" },\n          REP: { token: \"REP\" },\n          REQ: { token: \"REQ\" },\n          RLC: { token: \"RLC\" },\n          RSR: { token: \"RSR\" },\n          RSV: { token: \"RSV\" },\n          SAN: { token: \"SAN\" },\n          SNT: { token: \"SNT\" },\n          SNX: { token: \"SNX\" },\n          SPIKE: { token: \"SPIKE\" },\n          SPN: { token: \"SPN\" },\n          TKN: { token: \"TKN\" },\n          TKX: { token: \"TKX\" },\n          TRYB: { token: \"TRYB\" },\n          UBT: { token: \"UBT\" },\n          UPP: { token: \"UPP\" },\n          ZRX: { token: \"ZRX\" }\n        }\n      },\n      directProps: {}\n    }\n  },\n  insurance: {\n    nexusMutual: {\n      label: \"Nexus Mutual\",\n      image: \"images/protocols/nexus-mutual.png\",\n      imageDark: \"images/protocols/nexus-mutual-white.png\"\n    },\n    coverProtocol: {\n      label: \"Cover Protocol\",\n      image: \"images/protocols/cover-logo.svg\",\n      imageDark: \"images/protocols/cover-logo.svg\"\n    }\n  },\n  payments: {\n    // Payment methods & providers\n    methods: {\n      bank: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/bank.png\",\n          caption: \"Bank Account\"\n        }\n      },\n      card: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/debit-card.png\",\n          caption: \"Credit Card\"\n        }\n      },\n      wallet: {\n        defaultProvider: \"zeroExInstant\",\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/ethereum-wallet.svg\",\n          caption: \"Ethereum Wallet\",\n          imageProps: {\n            padding: [\"0\", \"5px\"]\n          }\n        }\n      }\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: \"images/payments/wyre.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.75% fee ~\",\n        supportedMethods: [\"card\"],\n        supportedCountries: [\"USA\", \"GBR\", \"AUS\", \"BRA\", \"CHN\", \"MEX\", \"EUR\"],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        remoteResources: {},\n        env: \"prod\",\n        envParams: {\n          test: {\n            accountId: \"AC_Q2Y4AARC3TP\"\n          },\n          prod: {\n            accountId: \"AC_PQQBX33XVEQ\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n                break;\n              case \"card\":\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = \"https://pay.sendwyre.com/purchase\";\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken,\n            referrerAccountId,\n            redirectUrl: globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const wyreWidget = document.getElementById(\"wyre-widget\");\n          if (!wyreWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById(\"wyreWidget_style\")) {\n              const wyreStyle = document.createElement(\"style\");\n              wyreStyle.id = \"wyreWidget_style\";\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        }\n      },\n      ramp: {\n        enabled: true,\n        imageSrc: \"images/payments/ramp.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods: [\"bank\", \"card\"],\n        badge: {\n          text: \"NO ID REQUIRED\",\n          color: \"#fff\",\n          bgColor: \"#0cade4\"\n        },\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CAN\",\n          \"EUR\",\n          \"HKG\",\n          \"IND\",\n          \"MEX\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        getInfo: props => {\n          const info = {};\n          switch (props.selectedMethod) {\n            case \"bank\":\n              info.supportedCountries = [\"GBR\", \"EUR\"];\n              info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n            case \"card\":\n              info.supportedCountries = [\n                \"USA\",\n                \"GBR\",\n                \"AUS\",\n                \"BRA\",\n                \"CAN\",\n                \"EUR\",\n                \"HKG\",\n                \"IND\",\n                \"MEX\",\n                \"RUS\",\n                \"ZAF\",\n                \"KOR\"\n              ];\n              info.subcaption = `~ 2.90% fee ~`;\n              break;\n            default:\n              break;\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          return {\n            hostAppName: \"Idle\",\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? \"mobile\" : \"desktop\",\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken\n              ? buyParams.selectedToken\n              : props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset\n                ? props.tokenConfig.ramp.swapAsset\n                : props.selectedToken\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on(\"*\", async event => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type) {\n                case \"PURCHASE_SUCCESSFUL\":\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil\n                    .BNify(tokenAmount.toString())\n                    .div(\n                      functionsUtil.BNify(\n                        Math.pow(10, parseInt(tokenDecimals)).toString()\n                      )\n                    )\n                    .toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: \"light\",\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\"\n                  });\n\n                  break;\n                default:\n                  break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled: true,\n        imageSrc: \"images/payments/transak.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods: [\"bank\", \"card\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"EUR\",\n          \"IND\"\n        ],\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"],\n        remoteResources: { \"https://global.transak.com/v1/widget.js\": {} },\n        env: \"prod\",\n        badge: {\n          text: \"INSTANT\",\n          bgColor: \"#0069ee\"\n        },\n        envParams: {\n          test: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_TEST,\n            url: \"https://global.transak.com\"\n          },\n          prod: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_PROD,\n            url: \"https://global.transak.com\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === \"bank\" ? \"1.5%\" : \"4.5%\";\n\n          if (props.selectedCountry && props.selectedCountry.value) {\n            switch (props.selectedCountry.value.toUpperCase()) {\n              case \"GBR\":\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n                break;\n              case \"IND\":\n                fee = \"1.0%\";\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n                break;\n              case \"EUR\":\n                if (selectedMethod === \"bank\") {\n                  info.badge = {\n                    text: \"SEPA\",\n                    color: \"#f7cb05 \",\n                    bgColor: \"#10288a\"\n                  };\n                } else {\n                  info.badge = {\n                    text: \"INSTANT\",\n                    bgColor: \"#0069ee\"\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams =\n            globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value) {\n            switch (buyParams.selectedCountry.value.toUpperCase()) {\n              case \"IND\":\n                fiatCurrency = \"INR\";\n                break;\n              case \"GBR\":\n                fiatCurrency = \"GBP\";\n                break;\n              case \"EUR\":\n                fiatCurrency = \"EUR\";\n                break;\n              case \"USA\":\n                fiatCurrency = \"USD\";\n                break;\n              default:\n                fiatCurrency = \"GBP\";\n                break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken\n            ? buyParams.selectedToken.toLowerCase()\n            : props.tokenConfig.transak &&\n              props.tokenConfig.transak.currencyCode\n              ? props.tokenConfig.transak.currencyCode\n              : props.selectedToken;\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width: \"100%\",\n            height: \"100%\"\n            // email,\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          if (window.transakGlobal) {\n            const transakWidget = document.getElementById(\"transak-widget\");\n            if (!transakWidget) {\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById(\"transakWidget_style\")) {\n                const transakStyle = document.createElement(\"style\");\n                transakStyle.id = \"transakWidget_style\";\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, \"transak-widget-container\");\n          }\n        }\n      },\n      moonpay: {\n        enabled: true,\n        imageSrc: \"images/payments/moonpay.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 4.5% fee ~\",\n        supportedMethods: [\"card\", \"bank\"],\n        supportedCountries: [\n          \"GBR\",\n          \"EUR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"CAN\",\n          \"HKG\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        env: \"prod\",\n        envParams: {\n          test: {\n            url: \"https://buy-staging.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod: {\n            url: \"https://buy.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                if (props.selectedCountry && props.selectedCountry.value) {\n                  switch (props.selectedCountry.value.toUpperCase()) {\n                    case \"EUR\":\n                      info.badge = {\n                        text: \"SEPA\",\n                        color: \"#f7cb05 \",\n                        bgColor: \"#10288a\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                      break;\n                    case \"GBR\":\n                      info.badge = {\n                        text: \"GBP\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                      break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                      break;\n                  }\n                }\n                break;\n              case \"card\":\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams =\n            globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken\n              ? buyParams.selectedToken.toLowerCase()\n              : props.tokenConfig.moonpay &&\n                props.tokenConfig.moonpay.currencyCode\n                ? props.tokenConfig.moonpay.currencyCode\n                : props.selectedToken.toLowerCase(),\n            walletAddress: props.account,\n            baseCurrencyCode: \"USD\",\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            bank: {\n              GBR: \"gbp_bank_transfer\",\n              EUR: \"sepa_bank_transfer\"\n            },\n            card: \"credit_debit_card\"\n          };\n\n          const selectedCountry =\n            buyParams.selectedCountry && buyParams.selectedCountry.value\n              ? buyParams.selectedCountry.value.toUpperCase()\n              : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod) {\n            switch (buyParams.selectedMethod) {\n              case \"bank\":\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod][\"EUR\"];\n                switch (selectedCountry) {\n                  case \"GBR\":\n                  case \"EUR\":\n                    params.enabledPaymentMethods =\n                      methods[buyParams.selectedMethod][selectedCountry];\n                    break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(\n                      methods[buyParams.selectedMethod]\n                    ).join(\",\");\n                    break;\n                }\n                break;\n              case \"card\":\n              default:\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod];\n                break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry) {\n            case \"GBR\":\n              params.baseCurrencyCode = \"GBP\";\n              break;\n            case \"EUR\":\n              params.baseCurrencyCode = \"EUR\";\n              break;\n            default:\n              params.baseCurrencyCode = \"USD\";\n              break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (\n              !document.cookie.match(\n                /^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/\n              )\n            ) {\n              document.cookie =\n                \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const moonpayWidget = document.getElementById(\"moonpay-widget\");\n          if (!moonpayWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById(\"moonpayWidget_style\")) {\n              const moonpayStyle = document.createElement(\"style\");\n              moonpayStyle.id = \"moonpayWidget_style\";\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: \"images/payments/zeroexinstant.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        remoteResources: { \"https://instant.0x.org/v3/instant.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onSuccess,\n          onClose\n        ) => {\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context\n            ? window.RimbleWeb3_context.connectorName\n            : null;\n\n          if (!tokenParams.zeroExInstant) {\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider:\n              connectorName &&\n                connectorName !== \"Injected\" &&\n                window.RimbleWeb3_context.connector[connectorName.toLowerCase()]\n                ? window.RimbleWeb3_context.connector[\n                  window.RimbleWeb3_context.connectorName.toLowerCase()\n                ].provider\n                : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount) => {\n          if (window.zeroExInstant && initParams) {\n            if (amount) {\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: \"images/payments/kyber.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Swap with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\n          \"WETH\",\n          \"USDC\",\n          \"DAI\",\n          \"USDT\",\n          \"TUSD\",\n          \"SUSD\",\n          \"WBTC\",\n          \"RAI\",\n          \"FEI\"\n        ],\n        web3Subscription: {\n          // Data for web3 subscription\n          enabled: true,\n          contractAddress: \"0x818e6fecd516ecc3849daf6845e3ec868087b755\",\n          decodeLogsData: [\n            {\n              internalType: \"address\",\n              name: \"_startAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"address\",\n              name: \"_tokenAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_startAmount\",\n              type: \"uint256\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_tokenAmount\",\n              type: \"uint256\"\n            }\n          ]\n        },\n        remoteResources: {\n          \"https://widget.kyber.network/v0.7.5/widget.css\": {},\n          \"https://widget.kyber.network/v0.7.5/widget.js\": {\n            parentElement: document.body,\n            precall: (props, globalConfigs, providerInfo) => {\n              // Remove previous elements\n              const buttons = document.querySelectorAll(\".kyber-widget-button\");\n              for (let i = 0; i < buttons.length; i++) {\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll(\".script_kyberSwap\");\n              for (let i = 0; i < scripts.length; i++) {\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId\n                ? props.buttonId\n                : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)) {\n                const a = document.createElement(\"a\");\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props, globalConfigs);\n                a.target = \"_blank\";\n                a.rel = \"nofollow noopener noreferrer\";\n                a.className = \"kyber-widget-button theme-ocean theme-supported\";\n                a.title = \"Swap with Kyber\";\n                a.style = \"display:none;\";\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props, globalConfigs, buyParams = null) => {\n          const baseToken = props.baseToken ? props.baseToken : \"ETH\";\n          const params = {\n            lang: \"en\",\n            type: \"swap\",\n            mode: \"iframe\",\n            theme: \"theme-ocean\",\n            paramForwarding: true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens: `${baseToken}_${props.selectedToken}`,\n            title: `Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair: `${baseToken}_${props.selectedToken}`,\n            commissionId: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n            network:\n              globalConfigs.network.requiredNetwork === 1 ? \"mainnet\" : \"test\"\n          };\n\n          const url = \"https://widget.kyber.network/v0.7.5/\";\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props) => {\n          const buttonId = props.buttonId\n            ? props.buttonId\n            : `kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a) {\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: \"images/payments/airswap.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: {\n          \"https://cdn.airswap.io/airswap-instant-widget.js\": {}\n        },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            env: \"production\",\n            mode: \"buy\",\n            token: props.tokenConfig.address,\n            baseToken: \"ETH\",\n            onComplete: onComplete ? onComplete : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.AirSwapInstant) {\n            if (amount) {\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: \"images/payments/totle.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: { \"https://widget.totle.com/latest/dist.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.TotleWidget) {\n            const nodeId = \"totle-widget\";\n            if (!document.getElementById(nodeId)) {\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(\n              initParams,\n              document.getElementById(nodeId)\n            );\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034','1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    tick: \"#00b84a\",\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    green:'#00b84a',\n    /*\n    NEW COLORS\n    */\n    newblue: \"#2B65D9\",\n    alert:'#ff9900',\n    arrowActive:'#d8d8d8',\n    arrowInactive:'#4f4f4f',\n    selectBgFocused:'#1e3657',\n    selectBg:'#162e4d',\n    backButtonBg:'#162e4d',\n    lineChartStroke:'#a4aec6',\n    wrongNetworkBannerBg:'#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link:'#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#162e4d',\n    menuBg:'#162e4d',\n    menuHover:'#1e3657',\n    flashColor:'#bac5ff',\n    cardBgHover:'#1e3657',\n    cardBorder:'#0d2034',\n    pageActive:'#d8d8d8',\n    pageInactive:'#4f4f4f',\n    menuIconActive:'#2a65d9',\n    cardBgContrast:\"#1e3657\",\n    menuRightBorder:'#0d2034',\n    cardHoverShadow:'0px 0px 0px 1px rgb(45 74 114)',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        exit:'#10a0dd',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        exit:'#ceeff6',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura).forEach((networkId,index) => {\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: globalConfigs.network.providers.infura[defaultNetwork]+env.REACT_APP_INFURA_KEY\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      // await this.props.context.setFirstValidConnector(['Infura']);\n      // this.props.context.setConnector('Infura');\n      this.props.context.unsetConnector();\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport MaticJs from '@maticnetwork/maticjs';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\n// import detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\nconst INFURA_KEY = process.env[\"REACT_APP_INFURA_KEY\"];\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  currentWeb3: {},\n  web3Polygon: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  maticPlasmaClient :{},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n    isSupportedNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    // debugger;\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        this.handleNetworkChanged(networkId);\n        // window.location.reload();\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n    window.initAccount = this.initAccount;\n  }\n\n  handleNetworkChanged = async (networkId=null) => {\n    this.functionsUtil.removeStoredItem('cachedRequests');\n    this.functionsUtil.removeStoredItem('cachedRequests_polygon');\n    this.functionsUtil.removeStoredItem('transactions');\n    await this.props.clearCachedData(() => {\n      // console.log(networkId,this.state.network);\n      if (this.state.network.required && networkId && parseInt(networkId) === parseInt(this.state.network.required.id)){\n        window.location.reload();\n      } else {\n        this.setState({\n          web3:null,\n          contracts:[],\n          biconomy:null,\n          web3Infura:null,\n          permitClient:null,\n          networkInitialized:false,\n          erc20ForwarderClient:null,\n          contractsInitialized:false\n        },() => {\n          this.checkNetwork();\n        });\n      }\n    });\n  }\n\n  componentDidMount = async () => {\n    // this.initSimpleID();\n    // this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe);\n      if (isGnosisSafe){\n        this.props.setConnector('gnosis','gnosis');\n      } else if (walletProvider === 'gnosis') {\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    // console.log('gnosisSafeLoaded',this.state.gnosisSafeLoaded,this.props.connectors.gnosis.safeLoaded,gnosisSafeLoaded);\n    if (gnosisSafeLoaded){\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    const contextAccountChanged = prevProps.context.account !== this.props.context.account;\n    const accountDisconnected = prevProps.connectorName !== this.props.connectorName && this.props.connectorName === 'Infura';\n    if (contextAccountChanged){\n      // console.log('contextAccountChanged',prevProps.context.account,this.props.context.account,contextAccountChanged);\n    }\n    if (accountDisconnected){\n      // console.log('accountDisconnected',prevProps.connectorName,this.props.connectorName,accountDisconnected);\n    }\n    if (customAddressChanged || contextAccountChanged || accountDisconnected){\n      this.initAccount();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const selectedNetworkChanged = prevProps.config.requiredNetwork !== this.props.config.requiredNetwork;\n    if (selectedNetworkChanged){\n      // console.log('selectedNetworkChanged',JSON.stringify(prevProps.config.requiredNetwork),this.props.config.requiredNetwork);\n      this.handleNetworkChanged();\n    }\n\n    const currentNetworkChanged = this.state.networkInitialized && prevState.network.current.id !== this.state.network.current.id;\n    if (currentNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.initWeb3();\n    }\n\n    const requiredNetworkChanged = prevState.network.required.id !== this.state.network.required.id;\n    if (requiredNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.setState({\n        contracts:[],\n        contractsInitialized:false\n      }, () => {\n        this.initWeb3();\n        if (typeof this.props.setNetwork === 'function'){\n          this.props.setNetwork(this.state.network);\n        }\n      });\n    }\n  }\n\n  initCurrentWeb3 = async () => {\n\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    // const metamaskProvider = await detectEthereumProvider();\n    // if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n    //   window.ethereum = metamaskProvider;\n    // }\n    if (!this.state.networkInitialized){\n      return false;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.required.id;\n\n    // if (!networkId){\n    //   return false;\n    // }\n\n    const networkConfig = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.functionsUtil.getGlobalConfig(['network','providers',provider,'key']);\n    const web3Rpc = this.functionsUtil.getGlobalConfig(['network','providers',provider,'rpc',networkId])+web3RpcKey;\n\n    const useWeb3Provider = this.state.networkInitialized && this.state.network.isCorrectNetwork;\n\n    // console.log('initWeb3',this.state.network.current.id,networkId,provider,web3Rpc,useWeb3Provider);\n\n    const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers','infura','rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers','infura','key']);\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n    let currentWeb3 = context.library;\n    let web3 = useWeb3Provider ? context.library : null;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      currentWeb3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // console.log('context',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (connectorName !== 'ledgerLive'){\n      if (!context.active || connectorNameChanged) {\n        // Select preferred web3 provider\n        if (connectorName && connectorNameChanged){\n\n          if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n            return false;\n          }\n\n          // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n          setConnectorName = connectorName;\n          await context.setConnector(connectorName);\n          // await context.setFirstValidConnector([connectorName, 'Infura']);\n          return web3;\n        }\n      }\n    }\n\n    let web3Host = web3Rpc;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = web3InfuraRpc;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider && useWeb3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n      // if (this.state.networkInitialized && connectorName !== 'Infura'){\n      //   this.props.setConnector('Infura',null);\n      // }\n    }\n\n    let web3Polygon = null;\n    let maticPOSClient = null;\n    let maticPlasmaClient = null;\n\n    // const infuraConfig = globalConfigs.network.providers.infura;\n    const polygonConfig = globalConfigs.network.providers.polygon;\n\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      web3Polygon = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n\n      const maticProvider = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      const parentProvider = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n      // console.log('maticProvider',web3PolygonRpc);\n      // console.log('parentProvider',web3InfuraRpc);\n\n      const maticPOSClientConfig = {\n        maticProvider,\n        parentProvider,\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n      maticPOSClient = new MaticJs.MaticPOSClient(maticPOSClientConfig);\n\n      // console.log('maticPOSClientConfig',networkConfig,maticPOSClientConfig);\n\n      const maticPlasmaClientConfig = {\n        maticProvider,\n        parentProvider,\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n      maticPlasmaClient = new MaticJs(maticPlasmaClientConfig);\n    }\n\n    window.web3Polygon = web3Polygon;\n    window.maticPOSClient = maticPOSClient;\n    window.maticPlasmaClient = maticPlasmaClient;\n\n    if (window.ethereum) {\n      currentWeb3 = new Web3(window.ethereum);\n    } else if (window.web3) {\n      currentWeb3 = new Web3(window.web3);\n    } else {\n      currentWeb3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n    }\n\n    this.setState({\n      web3Infura,\n      currentWeb3,\n      web3Polygon,\n      maticPOSClient,\n      maticPlasmaClient\n    },() => {\n      // this.checkNetwork();\n    });\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // console.log('web3Callback',context.account,this.state.network.isSupportedNetwork,this.state.contractsInitialized,this.state.networkInitialized);\n\n      // After setting the web3 provider, check network\n      try {\n        // if (!this.state.networkInitialized){\n        //   await this.checkNetwork();\n        // }\n\n        if (this.state.network.isSupportedNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(networkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    // console.log(`initContract: ${name} - addr: ${address}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : this.state.web3;\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // console.log(`createContract: ${name} - addr: ${address}`);\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      return this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      },()=>{\n        this.getAccountBalance();\n      });\n    } else if (this.props.connectorName === 'Infura' || !this.props.connectorName){\n      return this.setState({\n        account:null,\n        accountInizialized:true\n      });\n    }\n\n    try {\n      if (!account){\n        const wallets = await Promise.race([\n            this.state.web3.eth.getAccounts(),\n            new Promise((resolve) => setTimeout(resolve, 300))\n        ]);\n\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account){\n        account = this.props.context.account;\n      }\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n\n      // Request account access if needed\n      if (account){\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          account:null,\n          accountInizialized: true,\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      // console.log('getAccountBalance',parseFloat(accountBalance));\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    if (!this.state.web3){\n      return false;\n    }\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts',this.state.network.required.id]);\n\n    // console.log('initializeContracts',this.state.network,this.state.web3,contracts,this.props.availableStrategies);\n\n    if (contracts){\n      await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n        const contractInfo = contracts[contractName];\n        if (contractInfo.address !== null && contractInfo.abi !== null){\n          const useInfuraProvider = !!contractInfo.useInfuraProvider;\n          this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n          await this.initContract(contractName, contractInfo.address, contractInfo.abi, useInfuraProvider);\n        }\n      });\n    }\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    if (govTokens){\n      await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n        const govTokenConfig = govTokens[token];\n        if (!govTokenConfig.enabled){\n          return;\n        }\n        // Initialize govToken contracts\n        let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n        if (!foundGovTokenContract) {\n          const contractAddress = govTokenConfig.addresses && govTokenConfig.addresses[this.state.network.required.id] ? govTokenConfig.addresses[this.state.network.required.id] : govTokenConfig.address;\n          this.functionsUtil.customLog('initializeContracts, init contract', token, contractAddress);\n          await this.initContract(token, contractAddress, govTokenConfig.abi);\n        }\n      });\n    }\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    if (this.props.availableTranches){\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTranches),async (protocol) => {\n        const tokens = this.props.availableTranches[protocol];\n        await this.functionsUtil.asyncForEach(Object.keys(tokens),async (token) => {\n          const tokenConfig = tokens[token];\n          await Promise.all([\n            this.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi),\n            this.initContract(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi),\n            this.initContract(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi),\n            this.initContract(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi),\n            this.initContract(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi),\n            this.initContract(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi)\n          ]);\n        });\n      });\n    }\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n     const networkId = typeof this.props.config !== \"undefined\" && typeof this.props.config.requiredNetwork !== \"undefined\" ? this.props.config.requiredNetwork : globalConfigs.network.requiredNetwork;\n     const networkName = networkId && globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId].name : 'unknown';\n     return {\n       id: networkId,\n       name: networkName\n     };\n   }\n\n   getCurrentNetwork = async (networkId=null) => {\n\n     const currentWeb3 = this.functionsUtil.getCurrentWeb3();\n\n     networkId = parseInt(networkId) || await currentWeb3.eth.net.getId();\n     const networkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId,'name']) || await currentWeb3.eth.net.getNetworkType();\n\n     return {\n       id:networkId,\n       name:networkName\n     }\n   }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  checkNetwork = async (networkId=null) => {\n    let network = {...this.state.network};\n\n    network.required = this.getRequiredNetwork();\n    network.current = await this.getCurrentNetwork(networkId);\n    const networkInitialized = !!network.current.id;\n    network.isCorrectNetwork = !networkInitialized || network.current.id === network.required.id;\n    network.isSupportedNetwork = !network.current.id || globalConfigs.network.enabledNetworks.includes(network.current.id);\n\n    const currentNetworkChanged = network.current.id && network.current.id !== this.state.network.current.id;\n    const requiredNetworkChanged = network.required.id && network.required.id !== this.state.network.required.id;\n\n    if (!this.state.network.current.id || currentNetworkChanged || requiredNetworkChanged || !this.state.networkInitialized){\n      this.setState({\n        network,\n        networkInitialized\n      });\n    }\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    CrispClient: null,\n    currentWeb3: null,\n    permitClient:null,\n    tokenDecimals:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    maticPlasmaClient:null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    networkInitialized:false,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\nimport NetworkIndicator from \"../../NetworkIndicator/NetworkIndicator\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n          <Flex\n            width={[0.5,8/12]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={\"flex-end\"}\n          >\n            {\n              !this.props.isMobile &&\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                >\n                  {\n                    governanceEnabled && \n                      <Link\n                        mr={4}\n                        fontSize={3}\n                        color={'white'}\n                        hoverColor={'white'}\n                        fontFamily={'sansSerif'}\n                        textAlign={['center','left']}\n                        onClick={ (e) => window.location.hash='#/governance' }\n                      >\n                        Governance\n                      </Link>\n                  }\n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                  >\n                    Contact Us\n                  </Link>\n                  <Link\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                  >\n                    FAQs\n                  </Link>\n                </Flex>\n            }\n            <Flex\n              ml={4}\n            >\n              <NetworkIndicator\n                {...this.props}\n              />\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","import ERC20 from '../contracts/ERC20.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport IdleStrategy from '../contracts/IdleStrategy.json';\nimport IdleCDOTrancheRewards from '../contracts/IdleCDOTrancheRewards.json';\nconst availableTranches = {\n  idle:{\n    DAI:{\n      token:'DAI',\n      decimals:18,\n      limit:500000,\n      protocol:'idle',\n      blockNumber:13054628,\n      address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleDAIYield',\n        address:'0xd0DbcD556cA22d3f3c142e9a3220053FD7a247BC'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleDAIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_AA',\n          address:'0x9c3bC87693c65E740d8B2d5F0820E04A61D8375B',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI AA',\n        blockNumber:13054628,\n        name:'AA_idleDAIYield',\n        token:'AA_idleDAIYield',\n        address:'0xE9ada97bDB86d827ecbaACCa63eBcD8201D8b12E'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB'\n        },\n        CDORewards:{\n          decimals:18,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_BB',\n          address:'0x4473bc90118b18be890af42d793b5252c4dc382d',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI BB',\n        blockNumber:13054628,\n        name:'BB_idleDAIYield',\n        token:'BB_idleDAIYield',\n        address:'0x730348a54bA58F64295154F0662A08Cbde1225c2'\n      }\n    }\n  }\n  /*\n  yearn:{\n  \tDAI:{\n  \t  junior:{\n  \t    address:'0x000000000000000000000000000000000000'\n  \t  },\n  \t  senior:{\n  \t    address:'0x000000000000000000000000000000000000'\n  \t  }\n  \t}\n  }\n  */\n};\nexport default availableTranches;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport { Web3Consumer } from 'web3-react';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport availableTranches from '../configs/availableTranches';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import('../Dashboard/Dashboard'));\nconst Governance = React.lazy(() => import('../Governance/Governance'));\n\nclass App extends Component {\n  state = {\n    network: null,\n    cachedData: {},\n    buyToken: null,\n    currentEnv: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode: 'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme: theme,\n    currentSection: null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    config:globalConfigs.network,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps: null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps: props\n    });\n  }\n\n  processCustomParam = (props, prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback = null, clear_all = false) => {\n\n    const cachedData = { ...this.state.cachedData };\n    Object.keys(cachedData).forEach(key => {\n      const data = cachedData[key];\n      if (data.expirationDate !== null) {\n        delete cachedData[key];\n      }\n    });\n\n    const storedCachedData = clear_all ? {} : this.functionsUtil.getStoredItem('cachedData');\n    if (storedCachedData){\n      Object.keys(storedCachedData).forEach( key => {\n        const storedData = storedCachedData[key];\n        if (storedData.expirationDate !== null){\n          delete storedCachedData[key];\n        }\n      });\n    }\n\n    this.functionsUtil.setLocalStorage('cachedData', storedCachedData, true);\n\n    await this.setState({\n      cachedData\n    }, () => {\n      if (typeof callback === 'function') {\n        callback();\n      }\n    });\n    return true;\n  }\n\n  setCachedData = (key, data, TTL = null, useLocalStorage = false) => {\n\n    key = key.toLowerCase();\n    const cachedKeyFound = this.state.cachedData[key];\n    const currentTime = parseInt(Date.now() / 1000);\n\n    const update_key = !cachedKeyFound || ((cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate >= currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key) {\n      const expirationDate = TTL ? currentTime + (TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage) {\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData) {\n          storedCachedData = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [key]: {\n            data,\n            expirationDate\n          }\n        };\n        \n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key]: {\n            data,\n            expirationDate\n          }\n        }\n      }), () => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)) {\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress) {\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw: false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({ ...state, selectedTab: tabIndex }));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : this.state.config.requiredNetwork;\n\n    // console.log('loadAvailableTokens_1',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = Object.keys(availableTokens[requiredNetwork][strategy]).reduce((enabledTokens, token) => {\n        const tokenConfig = availableTokens[requiredNetwork][strategy][token];\n        const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n        if (tokenConfig.enabled && envEnabled) {\n          enabledTokens[token] = tokenConfig;\n        }\n        return enabledTokens;\n      }, {});\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]) {\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]) {\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens_2',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy, selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig: !selectedToken ? null : this.state.tokenConfig,\n      availableTokens: !selectedToken ? null : this.state.availableTokens,\n      selectedToken: !selectedToken ? selectedToken : this.state.selectedToken,\n      selectedStrategy: !selectedStrategy ? selectedStrategy : this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())) {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if (this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',selectedStrategy,selectedToken,newState);\n\n    await this.setState(newState, callback);\n  }\n\n  async setRequiredNetwork(requiredNetwork){\n    requiredNetwork = parseInt(requiredNetwork);\n    if (globalConfigs.network.enabledNetworks.includes(requiredNetwork)){\n      this.functionsUtil.setLocalStorage('requiredNetwork',requiredNetwork);\n      // console.log('setRequiredNetwork',requiredNetwork);\n      this.functionsUtil.addEthereumChain(requiredNetwork);\n      return this.setState(prevState => ({\n        config:{\n          ...prevState.config,\n          requiredNetwork\n        }\n      }));\n    }\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())) {\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState, callback);\n    } else if (!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig: null\n      }, callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction) {\n      window.console.error = () => { };\n      window.console.warn = () => { };\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage) {\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version', false);\n      if (version !== globalConfigs.version) {\n        // Clear cached data\n        this.clearCachedData(() => {\n          // Reset Localstorage\n          this.functionsUtil.clearStoredData(['walletProvider', 'connectorName', 'themeMode']);\n          this.functionsUtil.setLocalStorage('version', globalConfigs.version);\n        }, true);\n      }\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode', false);\n    if (themeMode) {\n      this.setThemeMode(themeMode);\n    }\n\n    const requiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',false);\n    // console.log('requiredNetwork',requiredNetwork);\n    if (requiredNetwork){\n      this.setRequiredNetwork(requiredNetwork);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i = 0; i < iFrames.length; i++) {\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w) {\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCustomAddress();\n    this.loadCurrentEnvironment();\n  }\n\n  loadCurrentEnvironment() {\n    const isLive = this.functionsUtil.checkUrlOrigin();\n    const currentEnv = isLive ? 'live' : 'beta';\n    this.setState({\n      currentEnv\n    }, () => {\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress() {\n    if (!this.state.customAddress) {\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom') {\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress) {\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged) {\n      if (this.state.currentSection === 'landing') {\n        this.setThemeMode('light', false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode', false) || this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged) {\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage) {\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive) {\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName, walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width: this.state.width,\n      height: this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged) {\n      if (widthChanged) {\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged) {\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e) {\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken: null,\n      buyModalOpened: false\n    });\n  }\n\n  openBuyModal(e, buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened: true\n    });\n  }\n\n  async logout() {\n    // Reset Custom Address\n    this.setState({\n      customAddress: null\n    });\n    // Clear cached data\n    this.clearCachedData(() => {\n      // Reset Localstorage\n      this.functionsUtil.clearStoredData(['version', 'themeMode', 'lastLogin', 'cachedData']);\n    });\n  }\n\n  setNetwork(network) {\n    this.setState({\n      network\n    });\n  }\n\n  setConnector(connectorName, walletProvider) {\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider) {\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ((connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if (connectorName === 'Injected') {\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider) {\n        case 'Metamask':\n          if (!hasMetamask && hasDapper) {\n            walletProvider = 'Dapper';\n          }\n          break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask) {\n            walletProvider = 'Metamask';\n          }\n          break;\n        default:\n          break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    }, () => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode, store = true) {\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled) {\n      themeMode = 'light';\n    }\n\n    switch (themeMode) {\n      default:\n      case 'light':\n        selectedTheme = theme;\n        break;\n      case 'dark':\n        selectedTheme = themeDark;\n        break;\n    }\n\n    if (store) {\n      this.functionsUtil.setLocalStorage('themeMode', themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection) {\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance', 'enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize: 4,\n            fontWeight: 2\n          }}\n          loaderProps={{\n            mb: 3,\n            size: '80px',\n            color: 'primary'\n          }}\n          flexProps={{\n            my: 3,\n            flexDirection: 'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer\n              recreateOnNetworkChange={false}\n              recreateOnAccountChange={false}\n            >\n              {context => {\n                //console.log('Web3Consumer render',context);\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    connectors={connectors}\n                    config={this.state.config}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    availableTranches={availableTranches}\n                    tokenConfig={this.state.tokenConfig}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        web3Infura,\n                        web3Polygon,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        checkNetwork,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        networkInitialized,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper,\n                        initContractCustomProvider\n                      }) => {\n                        return (\n                          <Box>\n                            <Switch>\n                              <Route\n                                path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                                render={\n                                  (props) => \n                                    <Suspense\n                                      fallback={SuspenseLoader}\n                                    >\n                                      <Dashboard\n                                        {...props}\n                                        web3={web3}\n                                        modals={modals}\n                                        network={network}\n                                        context={context}\n                                        account={account}\n                                        isDashboard={true}\n                                        initWeb3={initWeb3}\n                                        biconomy={biconomy}\n                                        isMobile={isMobile}\n                                        simpleID={simpleID}\n                                        contracts={contracts}\n                                        web3Infura={web3Infura}\n                                        web3Polygon={web3Polygon}\n                                        initAccount={initAccount}\n                                        permitClient={permitClient}\n                                        initSimpleID={initSimpleID}\n                                        initContract={initContract}\n                                        transactions={transactions}\n                                        buyToken={this.state.buyToken}\n                                        logout={this.logout.bind(this)}\n                                        accountBalance={accountBalance}\n                                        themeMode={this.state.themeMode}\n                                        theme={this.state.selectedTheme}\n                                        validateAccount={validateAccount}\n                                        currentEnv={this.state.currentEnv}\n                                        connecting={this.state.connecting}\n                                        cachedData={this.state.cachedData}\n                                        setToken={this.setToken.bind(this)}\n                                        accountValidated={accountValidated}\n                                        getTokenDecimals={getTokenDecimals}\n                                        rejectValidation={rejectValidation}\n                                        tokenConfig={this.state.tokenConfig}\n                                        availableTranches={availableTranches}\n                                        getAccountBalance={getAccountBalance}\n                                        accountBalanceLow={accountBalanceLow}\n                                        accountInizialized={accountInizialized}\n                                        networkInitialized={networkInitialized}\n                                        selectedToken={this.state.selectedToken}\n                                        connectorName={this.state.connectorName}\n                                        setStrategy={this.setStrategy.bind(this)}\n                                        userRejectedConnect={userRejectedConnect}\n                                        accountBalanceToken={accountBalanceToken}\n                                        initializeContracts={initializeContracts}\n                                        walletProvider={this.state.walletProvider}\n                                        buyModalOpened={this.state.buyModalOpened}\n                                        erc20ForwarderClient={erc20ForwarderClient}\n                                        contractsInitialized={contractsInitialized}\n                                        openBuyModal={this.openBuyModal.bind(this)}\n                                        rejectAccountConnect={rejectAccountConnect}\n                                        handleMenuClick={this.selectTab.bind(this)}\n                                        setConnector={this.setConnector.bind(this)}\n                                        setThemeMode={this.setThemeMode.bind(this)}\n                                        availableTokens={this.state.availableTokens}\n                                        closeBuyModal={this.closeBuyModal.bind(this)}\n                                        setCachedData={this.setCachedData.bind(this)}\n                                        selectedStrategy={this.state.selectedStrategy}\n                                        userRejectedValidation={userRejectedValidation}\n                                        clearCachedData={this.clearCachedData.bind(this)}\n                                        setStrategyToken={this.setStrategyToken.bind(this)}\n                                        accountValidationPending={accountValidationPending}\n                                        availableStrategies={this.state.availableStrategies}\n                                        setCurrentSection={this.setCurrentSection.bind(this)}\n                                        connectAndValidateAccount={connectAndValidateAccount}\n                                        contractMethodSendWrapper={contractMethodSendWrapper}\n                                        setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                        initContractCustomProvider={initContractCustomProvider}\n                                        setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                      />\n                                    </Suspense>\n\n                                }\n                              >\n                              </Route>\n                              {\n                                governanceEnabled && (\n                                  <Route\n                                    path=\"/governance/:section?/:item_id?\"\n                                    render={\n                                      (props) =>\n                                        <Suspense\n                                          fallback={SuspenseLoader}\n                                        >\n                                          <Governance\n                                            {...props}\n                                            web3={web3}\n                                            modals={modals}\n                                            network={network}\n                                            context={context}\n                                            account={account}\n                                            initWeb3={initWeb3}\n                                            biconomy={biconomy}\n                                            isMobile={isMobile}\n                                            simpleID={simpleID}\n                                            isGovernance={true}\n                                            contracts={contracts}\n                                            web3Infura={web3Infura}\n                                            web3Polygon={web3Polygon}\n                                            initAccount={initAccount}\n                                            initSimpleID={initSimpleID}\n                                            initContract={initContract}\n                                            checkNetwork={checkNetwork}\n                                            transactions={transactions}\n                                            buyToken={this.state.buyToken}\n                                            logout={this.logout.bind(this)}\n                                            accountBalance={accountBalance}\n                                            themeMode={this.state.themeMode}\n                                            theme={this.state.selectedTheme}\n                                            validateAccount={validateAccount}\n                                            currentEnv={this.state.currentEnv}\n                                            connecting={this.state.connecting}\n                                            cachedData={this.state.cachedData}\n                                            setToken={this.setToken.bind(this)}\n                                            accountValidated={accountValidated}\n                                            getTokenDecimals={getTokenDecimals}\n                                            rejectValidation={rejectValidation}\n                                            tokenConfig={this.state.tokenConfig}\n                                            getAccountBalance={getAccountBalance}\n                                            accountBalanceLow={accountBalanceLow}\n                                            accountInizialized={accountInizialized}\n                                            networkInitialized={networkInitialized}\n                                            selectedToken={this.state.selectedToken}\n                                            connectorName={this.state.connectorName}\n                                            setStrategy={this.setStrategy.bind(this)}\n                                            userRejectedConnect={userRejectedConnect}\n                                            accountBalanceToken={accountBalanceToken}\n                                            initializeContracts={initializeContracts}\n                                            walletProvider={this.state.walletProvider}\n                                            buyModalOpened={this.state.buyModalOpened}\n                                            contractsInitialized={contractsInitialized}\n                                            openBuyModal={this.openBuyModal.bind(this)}\n                                            rejectAccountConnect={rejectAccountConnect}\n                                            handleMenuClick={this.selectTab.bind(this)}\n                                            setConnector={this.setConnector.bind(this)}\n                                            setThemeMode={this.setThemeMode.bind(this)}\n                                            availableTokens={this.state.availableTokens}\n                                            closeBuyModal={this.closeBuyModal.bind(this)}\n                                            setCachedData={this.setCachedData.bind(this)}\n                                            selectedStrategy={this.state.selectedStrategy}\n                                            userRejectedValidation={userRejectedValidation}\n                                            clearCachedData={this.clearCachedData.bind(this)}\n                                            setStrategyToken={this.setStrategyToken.bind(this)}\n                                            accountValidationPending={accountValidationPending}\n                                            availableStrategies={this.state.availableStrategies}\n                                            setCurrentSection={this.setCurrentSection.bind(this)}\n                                            connectAndValidateAccount={connectAndValidateAccount}\n                                            contractMethodSendWrapper={contractMethodSendWrapper}\n                                            setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                          />\n                                        </Suspense>\n                                    }\n                                  >\n                                  </Route>\n                                )\n                              }\n                              <Route>\n                                <Header\n                                  modals={modals}\n                                  network={network}\n                                  context={context}\n                                  account={account}\n                                  initWeb3={initWeb3}\n                                  isMobile={isMobile}\n                                  contracts={contracts}\n                                  initAccount={initAccount}\n                                  initContract={initContract}\n                                  buyToken={this.state.buyToken}\n                                  accountBalance={accountBalance}\n                                  logout={this.logout.bind(this)}\n                                  validateAccount={validateAccount}\n                                  connecting={this.state.connecting}\n                                  accountValidated={accountValidated}\n                                  getTokenDecimals={getTokenDecimals}\n                                  rejectValidation={rejectValidation}\n                                  setToken={e => { this.setToken(e) }}\n                                  tokenConfig={this.state.tokenConfig}\n                                  getAccountBalance={getAccountBalance}\n                                  accountBalanceLow={accountBalanceLow}\n                                  networkInitialized={networkInitialized}\n                                  selectedToken={this.state.selectedToken}\n                                  connectorName={this.state.connectorName}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountBalanceToken={accountBalanceToken}\n                                  walletProvider={this.state.walletProvider}\n                                  buyModalOpened={this.state.buyModalOpened}\n                                  contractsInitialized={contractsInitialized}\n                                  openBuyModal={this.openBuyModal.bind(this)}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  handleMenuClick={this.selectTab.bind(this)}\n                                  setConnector={this.setConnector.bind(this)}\n                                  availableTokens={this.state.availableTokens}\n                                  closeBuyModal={this.closeBuyModal.bind(this)}\n                                  userRejectedValidation={userRejectedValidation}\n                                  accountValidationPending={accountValidationPending}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                />\n\n                                {\n                                  this.state.route === \"onboarding\" && (\n                                    <Web3Debugger\n                                      web3={web3}\n                                      account={account}\n                                      accountBalance={accountBalance}\n                                      accountBalanceToken={accountBalanceToken}\n                                      accountBalanceLow={accountBalanceLow}\n                                      initAccount={initAccount}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountValidated={accountValidated}\n                                      accountValidationPending={accountValidationPending}\n                                      rejectValidation={rejectValidation}\n                                      userRejectedValidation={userRejectedValidation}\n                                      validateAccount={validateAccount}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      modals={modals}\n                                      network={network}\n                                      transaction={transaction}\n                                    />\n                                  )\n                                }\n\n                                {\n                                  this.state.route === \"default\" && (\n                                    <Switch>\n                                      <Route exact path=\"/\"\n                                        render={(props) =>\n                                          <Suspense\n                                            fallback={SuspenseLoader}\n                                          >\n                                            <Landing\n                                              {...props}\n                                              web3={web3}\n                                              network={network}\n                                              account={account}\n                                              isMobile={isMobile}\n                                              simpleID={simpleID}\n                                              contracts={contracts}\n                                              initContract={initContract}\n                                              innerWidth={this.state.width}\n                                              logout={this.logout.bind(this)}\n                                              innerHeight={this.state.height}\n                                              accountBalance={accountBalance}\n                                              themeMode={this.state.themeMode}\n                                              theme={this.state.selectedTheme}\n                                              cachedData={this.state.cachedData}\n                                              currentEnv={this.state.currentEnv}\n                                              connecting={this.state.connecting}\n                                              selectedTab={this.state.selectedTab}\n                                              tokenConfig={this.state.tokenConfig}\n                                              accountBalanceLow={accountBalanceLow}\n                                              getAccountBalance={getAccountBalance}\n                                              availableTranches={availableTranches}\n                                              networkInitialized={networkInitialized}\n                                              customAddress={this.state.customAddress}\n                                              selectedToken={this.state.selectedToken}\n                                              accountBalanceToken={accountBalanceToken}\n                                              closeToastMessage={this.closeToastMessage}\n                                              contractsInitialized={contractsInitialized}\n                                              openBuyModal={this.openBuyModal.bind(this)}\n                                              setThemeMode={this.setThemeMode.bind(this)}\n                                              processCustomParam={this.processCustomParam}\n                                              availableTokens={this.state.availableTokens}\n                                              setCachedData={this.setCachedData.bind(this)}\n                                              updateSelectedTab={this.selectTab.bind(this)}\n                                              toastMessageProps={this.state.toastMessageProps}\n                                              clearCachedData={this.clearCachedData.bind(this)}\n                                              availableStrategies={this.state.availableStrategies}\n                                              setCurrentSection={this.setCurrentSection.bind(this)}\n                                              connectAndValidateAccount={connectAndValidateAccount}\n                                              setToken={e => { this.setToken(e) }}\n                                            />\n                                            <CookieConsent\n                                              expires={365}\n                                              buttonText={\"Ok\"}\n                                              location={\"bottom\"}\n                                              acceptOnScroll={true}\n                                              cookieName={\"cookieAccepted\"}\n                                              acceptOnScrollPercentage={5}\n                                              style={{ background: \"rgba(255,255,255,0.95)\", zIndex: '9999999' }}\n                                              buttonStyle={{ display: isMobile ? \"block\" : \"none\", backgroundColor: '#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\" }}\n                                            >\n                                              <Flex flexDirection={'row'} alignItems={['flex-start', 'center']} justifyContent={'flex-start'} maxHeight={['150px', 'initial']} style={isMobile ? { overflowY: 'scroll' } : null}>\n                                                <Image display={['none', 'block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                                <Text pl={[0, 3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                                  This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                                  You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                              </Text>\n                                              </Flex>\n                                            </CookieConsent>\n                                          </Suspense>\n                                        }\n                                      ></Route>\n                                      <Route exact path=\"/terms-of-service\">\n                                        <Tos />\n                                      </Route>\n                                      <Route>\n                                        <PageNotFound />\n                                      </Route>\n                                    </Switch>\n                                  )\n                                }\n                              </Route>\n                            </Switch>\n                            <TransactionToastUtil\n                              transactions={transactions}\n                              themeMode={this.state.themeMode}\n                            />\n                          </Box>\n                        )\n                      }}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = this.props.availableActions || {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = this.props.transactionsList || await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // console.log('TransactionsList',etherscanTxs);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens && this.props.availableTokens[selectedToken] ? this.props.availableTokens[selectedToken] : this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]);\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.action = action;\n      tx.amount = amount;\n      tx.momentDate = momentDate;\n      tx.status = tx.status ? tx.status : 'Completed';\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.useMetaTx !== false && this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport { Flex, Link, Icon, Text } from \"rimble-ui\";\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {\n    page:1,\n    rowsPerPage:5,\n    totalPages:null,\n    processedRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.processRows();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const rowsChanged = JSON.stringify(prevProps.rows) !== JSON.stringify(this.props.rows);\n\n    if (rowsChanged){\n      this.setState({\n        page:1,\n      },()=>{\n        this.processRows();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processRows();\n    }\n  }\n\n  processRows = (page=null) => {\n    page = page ? page : this.state.page;\n\n    const totalRows = this.props.rows.length;\n    const totalPages = Math.ceil(totalRows/this.state.rowsPerPage);\n    \n    let processedRows = [];\n    if (this.props.paginationEnabled){\n      this.props.rows.forEach((row, i) => {\n        if (i>=((page-1)*this.state.rowsPerPage) && i<((page-1)*this.state.rowsPerPage)+this.state.rowsPerPage) {\n          processedRows.push(row);\n        }\n      });\n    } else {\n      processedRows = this.props.rows;\n    }\n\n    this.setState({\n      totalPages,\n      processedRows\n    });\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processRows(page);\n    this.setState({\n      page\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.state.processedRows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n        {\n          this.props.paginationEnabled && (\n            <Flex\n              height={'50px'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-end'}\n              id={'transactions-list-pagination'}\n            >\n              <Flex mr={3}>\n                <Link mr={1} onClick={ e => this.prevPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowLeft'}\n                    size={'2em'}\n                    color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n                <Link onClick={ e => this.nextPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowRight'}\n                    size={'2em'}\n                    color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n              </Flex>\n              <Flex alignItems={'center'}>\n                <Text \n                  fontSize={1}\n                  fontWeight={3}\n                  color={'cellText'}\n                >\n                  Page {this.state.page} of {this.state.totalPages}\n                </Text>\n              </Flex>\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens ? this.props.availableTokens[token] : null;\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  // Goerli\n  5:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n\n    }\n  },\n  80001:{ // Mumbai-Testnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      /*\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      */\n    },\n    risk:{\n      \n    }\n  },\n  137:{ // Matic Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x8a999F5A3546F8243205b2c0eCb0627cC10003ab',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crDAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x4eCEDdF62277eD78623f9A94995c680f8fd6C00e',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x27F8D03b3a2196956ED754baDc28D73be8830A6e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x1ee6470CD75D5686d0b2b90C0305Fa46fb0C89A1',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:16,\n            name:'cream',\n            enabled:true,\n            token:'crUSDC',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x73CF8c5D14Aa0EbC89f18272A568319F5BAB6cBD',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amUSDC',\n            address:'0x1a13F4Ca1d028320A707D99520AbFefca3998b7F',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xfdA25D931258Df948ffecb66b5518299Df6527C4',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crWETH',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x7ef18d0a9C3Fb1A716FF6c3ED0Edf52a2427F716',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            token:'aWETH',\n            name:'aavev2',\n            address:'0x28424507fefb6f7f8E9D3860F56504E4e5f5f390',\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  // Ethereum\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        token: 'USDC',\n        decimals: 6,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        ramp: {\n          swapAsset: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols: [\n          {\n            decimals: 16,\n            enabled: true,\n            token: 'cUSDC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk: {\n\n    }\n  },\n  1337: {\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crRAI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  },\n  1: { // Mainnet\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.8,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            defiScore: 8.8,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.9,\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          /*\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            token:'crRAI',\n            enabled:false,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          */\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aRAI',\n            enabled: true,\n            name: 'aavev2',\n            functions: {\n            },\n            address: '0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aFEI',\n            enabled: true,\n            functions: {},\n            name: 'aavev2',\n            address: '0x683923dB55Fead99A79Fa01A27EeC3cB19679cC3',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://idlelabs.notion.site/Idle-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Text, Icon, Image, Button, Link, Flex } from \"rimble-ui\";\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText'\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'link':\n        CustomComponent = Link;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'bgIcon':\n        CustomComponent = (props) => (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={props.bgColor}\n          >\n            <Icon\n              align={'center'}\n              name={customValue}\n              color={props.color}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontWeight:3,\n      height:'45px',\n      fontSize:[2,3],\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        color={'link'}\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex, Link } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            if (aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfig = this.props.tokenConfig || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = (this.props.tokenConfig && this.props.tokenConfig.defiScoreDisabled) ? (<Text {...fieldProps}>N/A</Text>) : (this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0)) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : (this.functionsUtil.BNify(this.state.score).lte(0) ? (<Text {...fieldProps}>-</Text>) : loader)\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'link':\n            CustomComponent = Link;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n\n        // Custom Field Props\n        const customFieldName = Object.values(fieldInfo.path).pop();\n        if (this.props.tokenConfig[`${customFieldName}Props`]){\n          const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n          // Replace props\n          if (customFieldProps && Object.keys(customFieldProps).length){\n            Object.keys(customFieldProps).forEach(p => {\n              fieldProps[p] = customFieldProps[p];\n            });\n          }\n        }\n\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n"],"sourceRoot":""}