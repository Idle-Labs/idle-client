{"version":3,"sources":["Landing/Landing.module.scss","HowItWorks/HowItWorks.module.scss","StrategyBox/StrategyBox.module.scss","NewsletterForm/NewsletterForm.module.scss","Faq/Faq.js","FlexCards/FlexCards.js","AuditCard/AuditCard.js","HowItWorks/HowItWorks.js","StrategyBox/StrategyBox.js","NewsletterForm/NewsletterForm.js","FloatingToastMessage/FloatingToastMessage.js","Landing/Landing.js"],"names":["module","exports","mainViewport","headerContainer","bgContainer","button","graySection","whiteSection","howItWork","skewBg","bgHeart","platformLogo","bulletCard","bulletCardFirst","bulletCardActive","bulletPoint","bulletRight","bulletTop","bulletLeft","bulletBottom","bulletBottomLeft","bulletBottomBottom","bulletMobile","carouselItem","pos1","carouselItemMobile","pos2","pos3","bentTube","bounceArrow","bounce","rebalanceCircle","spin","carouselDesc","selected","carouselNav","footer","socialIcon","gradientBackground","bentTubeLeft","bentTubeRight","bentTubeActive","bg1","ribbon","infura","polygon","content","gradientButton","Faq","state","openedAnswer","selectedSection","generalQuestions","q","a","guidelinesQuestions","ratesQuestions","section","this","setState","Object","objectSpread","e","i","preventDefault","_this2","_this$state","generalDivs","map","question","react_default","createElement","Faquestion","handleClick","toggleAnswer","isOpened","key","concat","answer","pt","guidelinesDivs","ratesDivs","isGeneralSelected","isGuidelinesSelected","isRatesSelected","index_es","flexDirection","Title","mb","mt","fontWeight","fontSize","component","Heading","h4","justifyContent","alignItems","width","px","textAlign","borderBottom","onClick","setSection","color","className","Component","FlexCards","functionsUtil","setProps","props","FunctionsUtil","loadUtils","prevProps","prevState","maxItemPerc","itemPerc","itemsPerRow","Math","floor","cards","length","style","flexWrap","p","index","DashboardCard","isInteractive","cardProps","display","height","mx","flex","isMobile","min","link","href","target","rel","assign","src","image","maxHeight","imageProps","AuditCard","my","window","open","date","title","hoverColor","borderRadius","ml","size","transform","name","HowItWorks","id","maxWidth","position","styles","h3","fontFamily","lineHeight","StrategyBox","network","selectedToken","loadData","_callee3","strategyInfo","aprs","tokensAprs","highestValue","availableTokens","regenerator_default","wrap","_context3","prev","next","_this","getGlobalConfig","strategy","contractsInitialized","abrupt","t0","type","token","availableStrategiesNetworks","networkId","t1","getAprsFromApi","sent","lendRates","forEach","aprInfo","tokenAPR","BNify","apy","tokenSymbol","lt","asyncForEach","keys","_ref2","asyncToGenerator","mark","_callee","tokenConfig","_context","getTokenAprs","avgApr","stop","_x","apply","arguments","_ref3","_callee2","_context2","_x2","newProps","required","current","url","location","strategyEnv","currentEnv","getCurrentEnvironment","enabledEnvs","includes","setRequiredNetwork","getDashboardSectionUrl","_this3","networkInfo","availableTranches","protocol","mr","isVisible","provider","backgroundColor","py","top","right","icon","minHeight","desc","comingSoon","borderRight","theme","colors","divider","placement","message","AssetField","fieldInfo","showTooltip","decimals","flexProps","selectedStrategy","showLoader","TrancheField","tranche","trancheConfig","AA","BB","chartProps","lineWidth","rowId","boxShadow","fontStyle","goToStrategy","NewsletterForm","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","validated","privacy","email","handleSubmit","bind","assertThisInitialized","handleValidation","messageColor","axios","post","globalConfigs","newsletterSubscription","endpoint","then","r","data","status","catch","err","checked","value","parentNode","classList","add","onSubmit","Field","label","Input","outline","border","pl","pb","placeholder","onChange","toggleCheckbox","FloatingToastMessage","ToastComponent","variant","ToastMessage","Success","Processing","Failure","bottom","zIndex","closeElem","secondaryMessage","handleClose","scrolling","Landing","carouselMax","carouselIndex","activeCarousel","runConfetti","activeBullet","protocolsAprs","testPerformed","totalAllocation","visibleStrategies","landingStrategies","carouselOffsetLeft","setActiveCarousel","carouselIntervalID","protocolsAllocations","randomAllocationEnabled","handleCarousel","action","multiplier","$element","jQuery","parseFloat","left","processScrolling","bulletCards","document","getElementsByClassName","offsetParent","offsetY","offsetTop","scrollY","parseInt","getAllocations","newState","exchangeRates","protocolsBalances","protocolsAllocationsPerc","remainingAllocation","totProtocols","protocols","protocolInfo","contractName","protocolAddr","_ref4","protocolBalance","tokenDecimals","exchangeRate","protocolAllocation","address","toLowerCase","Promise","all","getProtocolBalance","getTokenDecimals","functions","getTokenExchangeRate","slicedToArray","fixTokenDecimals","plus","toString","alloc","random","protocolAllocationPerc","div","getAvgApr","getAprs","Aprs","addresses","genericIdleCall","addr","info","addrIndex","indexOf","protocolApr","toEth","startLending","_callee4","_context4","updateSelectedTab","setConfetti","connectAndGoToRoute","route","goToLocation","account","connectAndValidateAccount","_callee5","_context5","hash","setCurrentSection","loadStrategies","currentNetworkId","getRequiredNetworkId","filter","s","visible","availableNetworks","processCustomParam","requiredNetworkChanged","JSON","stringify","networkInitialized","availableStrategies","values","tokens","push","paddingBottom","isCorrectNetwork","pr","overflow","max","innerHeight","h1","textAlignLast","h2","RoundButton","overflowY","transition","strategyIndex","src_StrategyBox_StrategyBox","RoundIconButton","buttonProps","iconName","disabled","src_HowItWorks_HowItWorks","AssetsUnderManagement","subtitle","allNetworks","subtitleProps","counterStyle","whiteSpace","textOverflow","fonts","counter","fontWeights","fontSizes","src_AuditCard_AuditCard","h5","ExtLink","sandbox","src_FlexCards_FlexCards","src_Faq_Faq","src_NewsletterForm_NewsletterForm","Footer","toastMessageProps","src_FloatingToastMessage_FloatingToastMessage","closeToastMessage","FlexLoader","textProps","textSize","loaderProps","text"],"mappings":"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","file":"static/js/3.9c19f4c8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainViewport\":\"Landing_mainViewport__foI3b\",\"headerContainer\":\"Landing_headerContainer__TvHkH\",\"bgContainer\":\"Landing_bgContainer__2WN2x\",\"button\":\"Landing_button__1Dxq1\",\"graySection\":\"Landing_graySection__2p8Tj\",\"whiteSection\":\"Landing_whiteSection__3bI3Y\",\"howItWork\":\"Landing_howItWork__1ukLM\",\"skewBg\":\"Landing_skewBg__gqJRL\",\"bgHeart\":\"Landing_bgHeart__NA46m\",\"platformLogo\":\"Landing_platformLogo__1hJaf\",\"bulletCard\":\"Landing_bulletCard__1JBcJ\",\"bulletCardFirst\":\"Landing_bulletCardFirst__HI7ri\",\"bulletCardActive\":\"Landing_bulletCardActive__AVHnI\",\"bulletPoint\":\"Landing_bulletPoint__uVUzZ\",\"bulletRight\":\"Landing_bulletRight__3vjg5\",\"bulletTop\":\"Landing_bulletTop__2qDPm\",\"bulletLeft\":\"Landing_bulletLeft__MYQV4\",\"bulletBottom\":\"Landing_bulletBottom__1vQq-\",\"bulletBottomLeft\":\"Landing_bulletBottomLeft__1bIB1\",\"bulletBottomBottom\":\"Landing_bulletBottomBottom__mqq0k\",\"bulletMobile\":\"Landing_bulletMobile__1dlqp\",\"carouselItem\":\"Landing_carouselItem__2leMl\",\"pos1\":\"Landing_pos1__tMo3K\",\"carouselItemMobile\":\"Landing_carouselItemMobile__2GqCc\",\"pos2\":\"Landing_pos2__2HmVh\",\"pos3\":\"Landing_pos3__28UmQ\",\"bentTube\":\"Landing_bentTube__2dNhi\",\"bounceArrow\":\"Landing_bounceArrow__3SKSY\",\"bounce\":\"Landing_bounce__z5RHk\",\"rebalanceCircle\":\"Landing_rebalanceCircle__2UwcI\",\"spin\":\"Landing_spin__1_Jg0\",\"carouselDesc\":\"Landing_carouselDesc__351uo\",\"selected\":\"Landing_selected__190kp\",\"carouselNav\":\"Landing_carouselNav__3oCdi\",\"footer\":\"Landing_footer__1wRkb\",\"socialIcon\":\"Landing_socialIcon__1nHuK\",\"gradientBackground\":\"Landing_gradientBackground__2DtpV\",\"bentTubeLeft\":\"Landing_bentTubeLeft__3844Y\",\"bentTubeRight\":\"Landing_bentTubeRight__2akHv\",\"bentTubeActive\":\"Landing_bentTubeActive__3rtbt\",\"bg1\":\"Landing_bg1__23mxk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bulletCard\":\"HowItWorks_bulletCard__2Ym_N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ribbon\":\"StrategyBox_ribbon__1gxyX\",\"infura\":\"StrategyBox_infura__2FN8L\",\"polygon\":\"StrategyBox_polygon__2M0hT\",\"content\":\"StrategyBox_content__1Nsg-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"NewsletterForm_gradientButton__PMcBV\"};","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Faquestion from '../Faquestion/Faquestion';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Faq extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection: 'general',\n    generalQuestions: [\n      {\n        q: 'What is Idle?',\n        a: `Idle is a decentralized rebalancing protocol that allows users to automatically and algorithmically manage their digital asset allocation among different third-party DeFi protocols. You can choose to maximize your interest rate returns through our MaxYield strategy or minimize your risk exposure through our RiskAdjusted allocation strategy.`\n      },\n      {\n        q: 'What third-party protocols and assets does Idle support?',\n        a: `Idle connects with Compound, Aave, dYdX, Fulcrum, and DSR, and supports DAI, USDC and USDT.  Security is fundamental at Idle, meaning that our products will only connect to protocols that are audited by a top security firm and battle-tested in terms of time in market and digital assets locked. To add more security, we passed through multiple audit reviews and we use <a href=\"https://defiscore.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">DeFiScore</a> risk assessment to evaluate the risk across DeFi protocols.`\n      },\n      {\n        q: 'Can you walk me through an example?',\n        a: `When utilizing the Idle protocol, a user supplies capital for lending as a part of Idle’s non-custodial smart contract pools; the protocol will automatically rebalance the pool’s current allocation to achieve optimized interest rates, based on the strategy.`\n      }\n    ],\n    guidelinesQuestions: [\n      {\n        q: 'How do I manage my assets?',\n        a: `You can access Idle’s user dashboard where you can deposit funds, monitor performances and see insights, rebalance funds, convert from FIAT to crypto, and redeem back your assets.`\n      },\n      {\n        q: 'How does the rebalancing process work?',\n        a: `A rebalance calculation involves assessing the total assets within a pool, incorporating underlying protocol rate functions and levels of supply and demand, and finally determining an allocation that achieves the optimal interest rate possible after the rebalance takes place, based on the strategy.`\n      },\n      {\n        q: 'What are IdleTokens?',\n        a: `IdleTokens represent your balance in the protocol, and accrue interest over time. As a specific Idle’s pool earns interest, its idleToken becomes convertible into an increasing quantity of the underlying asset. IdleTokens conform to the ERC-20 standard.`\n      }\n    ],\n    ratesQuestions: [\n      {\n        q: 'Has Idle had a security audit?',\n        a: `Idle completed multiple and incremental security audits with Quantstamp in December 2019 and April/May 2020 (<a href=\"https://certificate.quantstamp.com/full/idle-finance\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">view the report</a>). Any issues affecting the performance of the protocol or security of funds have been resolved. Users should review our Terms of Service before using the protocol.`\n      },\n      {\n        q: 'How are digital assets custodied?',\n        a: `Idle does not custody digital assets. When you interact with the Idle protocol, your digital assets will be sent to a smart contract that Idle does not control. The smart contract has the concept of “accounts,” to which only you have access. These accounts have balances for each asset, which then are lent out to underlying protocols. When you want to withdraw, the smart contract interacts with the underlying platforms to withdraw digital assets and route them to your wallet.`\n      },\n      {\n        q: 'Who is the administrator of the Idle smart contract?',\n        a: `We have few administrative privileges (eg pause deposits in case of emergency), but we cannot, in any case, withdraw or move user funds directly. You can read more about here <a href=\"https://developers.idle.finance/advanced/admin-powers\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://developers.idle.finance/advanced/admin-powers</a>`\n      }\n    ]\n  };\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const {generalQuestions, selectedSection, guidelinesQuestions, ratesQuestions} = this.state;\n    const generalDivs = generalQuestions.map((question, i) => (\n      <Faquestion handleClick={ e => this.toggleAnswer(e,i) } isOpened={this.state.openedAnswer === i} key={`general-${i}`} question={question.q} answer={question.a} pt={i === 0 ? 0 : ''} />\n    ));\n    const guidelinesDivs = guidelinesQuestions.map((question, i) => (\n      <Faquestion handleClick={ e => this.toggleAnswer(e,i) } isOpened={this.state.openedAnswer === i} key={`guidelines-${i}`} question={question.q} answer={question.a} pt={i === 0 ? 0 : ''} />\n    ));\n    const ratesDivs = ratesQuestions.map((question, i) => (\n      <Faquestion handleClick={ e => this.toggleAnswer(e,i) } isOpened={this.state.openedAnswer === i} key={`rates-${i}`} question={question.q} answer={question.a} pt={i === 0 ? 0 : ''} />\n    ));\n    const isGeneralSelected = selectedSection === 'general';\n    const isGuidelinesSelected = selectedSection === 'guidelines';\n    const isRatesSelected = selectedSection === 'rates';\n    return (\n      <Flex\n        flexDirection={'column'}\n      >\n        <Title\n          mb={3}\n          mt={[3,4]}\n          fontWeight={5}\n          fontSize={[5,6]}\n          component={Heading.h4}\n        >\n          Frequently asked questions\n        </Title>\n\n        <Flex\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n          alignItems={'center'}\n        >\n          <Flex width={[1,3/5]} px={[2,0]} flexDirection={'row'} justifyContent={'space-between'}>\n            <Flex width={1/3} textAlign={'center'} justifyContent={'center'} borderBottom={ isGeneralSelected ? '3px solid #0036ff' : 'none'}>\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[2, 3]}\n                textAlign={'center'}\n                onClick={() => this.setSection('general')}\n                color={isGeneralSelected ? 'blue' : 'copyColor'}\n                className={['pointer', isGeneralSelected ? 'selected' : '']}\n              >\n                General\n              </Text>\n            </Flex>\n            <Flex width={1/3} textAlign={'center'} justifyContent={'center'} borderBottom={ isGuidelinesSelected ? '3px solid #0036ff' : 'none'}>\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[2, 3]}\n                textAlign={'center'}\n                onClick={() => this.setSection('guidelines')}\n                color={isGuidelinesSelected ? 'blue' : 'copyColor'}\n                className={['pointer', isGuidelinesSelected ? 'selected' : '']}\n              >\n                Liquidity Providers\n              </Text>\n            </Flex>\n            <Flex width={1/3} textAlign={'center'} justifyContent={'center'} borderBottom={ isRatesSelected ? '3px solid #0036ff' : 'none'}>\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[2, 3]}\n                textAlign={'center'}\n                onClick={() => this.setSection('rates')}\n                color={isRatesSelected ? 'blue' : 'copyColor'}\n                className={['pointer', isRatesSelected ? 'selected' : '']}\n              >\n                Security\n              </Text>\n            </Flex>\n          </Flex>\n          <Box width={1} mt={[3, 4]} mb={[4, 0]}>\n            {isGeneralSelected && generalDivs}\n            {isGuidelinesSelected && guidelinesDivs}\n            {isRatesSelected && ratesDivs}\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faq;\n","import React, { Component } from 'react';\nimport { Flex, Link, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FlexCards extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    const maxItemPerc = this.props.maxItemPerc || 100;\n    const itemPerc = this.props.itemsPerRow ? Math.floor(100/this.props.itemsPerRow)-2 : Math.floor(100/this.props.cards.length)-1;\n    const justifyContent = this.props.justifyContent ? this.props.justifyContent : 'space-between';\n\n    return (\n      <Flex\n        width={1}\n        px={[3,0]}\n        style={{\n          flexWrap:'wrap'\n        }}\n        alignItems={'flex-start'}\n        justifyContent={justifyContent}\n        flexDirection={['column','row']}\n      >\n        {\n          this.props.cards.map( (p,index) => (\n            <DashboardCard\n              isInteractive={true}\n              key={`card_${index}`}\n              cardProps={{\n                p:2,\n                mb:[2,3],\n                display:'flex',\n                alignItems:'center',\n                height:['65px','80px'],\n                justifyContent:'center',\n                mx: justifyContent !== 'space-between' ? [0,2] : 0,\n                style:{\n                  textAlign:'center',\n                  flex:this.props.isMobile ? null : `0 ${Math.min(maxItemPerc,itemPerc)}%`,\n                }\n              }}\n            >\n              {\n                p.link ? (\n                  <Link\n                    px={[5,4]}\n                    style={{\n                      width:'100%',\n                      height:'100%',\n                      display:'flex',\n                      alignItems:'center',\n                      justifyContent:'center',\n                    }}\n                    href={p.link}\n                    target={'_blank'}\n                    textAlign={'center'}\n                    rel={'nofollow noopener noreferrer'}\n                  >\n                    <Image\n                      src={p.image}\n                      width={'auto'}\n                      height={'auto'}\n                      maxHeight={'50px'}\n                      {...this.props.imageProps}\n                    />\n                  </Link>\n                ) : (\n                  <Image\n                    src={p.image}\n                    width={'auto'}\n                    height={'auto'}\n                    maxHeight={['35px','50px']}\n                  />\n                )\n              }\n            </DashboardCard>\n            \n          ) )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexCards;","import React, { Component } from 'react';\nimport { Flex, Text, Link, Icon } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass AuditCard extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          my:[2,0],\n          mx:[0,3],\n          width:[1,'auto']\n        }}\n        isInteractive={this.props.link ? true : false}\n        handleClick={this.props.link ? e => window.open(this.props.link) : null}\n      >\n        <Flex\n          flexDirection={'column'}\n        >\n          <Text\n            mb={2}\n            color={'blue'}\n            fontSize={[1,3]}\n          >\n            {this.props.date}\n          </Text>\n          <Text\n            mb={2}\n            fontSize={4}\n            fontWeight={500}\n          >\n            {this.props.title}\n          </Text>\n          <Link\n            hoverColor={'blue'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'center'\n            }}\n          >\n            VIEW REPORT\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'blue'}\n              style={{\n                transform:'rotate(180deg)'\n              }}\n              name={'KeyboardBackspace'}\n            />\n          </Link>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default AuditCard;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport styles from './HowItWorks.module.scss';\nimport { Box, Flex, Heading, Image } from \"rimble-ui\";\n\nclass HowItWorks extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Box\n        p={[3,4]}\n        id={'how-it-works'}\n      >\n        <Flex flexDirection={['column','column']} alignItems={'center'} justifyContent={'center'}>\n          <Title\n            mt={[3,4]}\n            mb={[3,4]}\n            fontWeight={5}\n            fontSize={[5,6]}\n            component={Heading.h4}\n          >\n            How it works\n          </Title>\n          <Flex\n            width={1}\n            alignItems={'center'}\n            maxWidth={['24em','90em']}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              p={[3,3]}\n              mx={[0,2]}\n              my={[2,0]}\n              width={[1,1/4]}\n              position={'relative'}\n              flexDirection={'column'}\n              className={styles.bulletCard}\n            >\n              <Flex\n                mb={2}\n                width={1}\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Image width={['2.5em','3.3em']} src={'images/how-it-works/choose-strategy.svg'} />\n              </Flex>\n              <Box width={1}>\n                <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontSize={[3,3]} mb={[1,2]} color={'blue'}>\n                  Choose your strategy\n                </Heading.h3>\n                <Heading.h4 fontSize={1} px={[1,0]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  Build your portfolio with different allocation strategies that aim to maximize your returns and keeping you in your risk comfort zone\n                </Heading.h4>\n              </Box>\n            </Flex>\n\n            <Flex\n              p={[3,3]}\n              mx={[0,2]}\n              my={[2,0]}\n              width={[1,1/4]}\n              position={'relative'}\n              flexDirection={'column'}\n              className={styles.bulletCard}\n            >\n              <Flex\n                mb={2}\n                width={1}\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Image width={['2.5em','3.3em']} src={'images/how-it-works/deposit-stablecoins.svg'} />\n              </Flex>\n              <Box width={1}>\n                <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontSize={[3,3]} mb={[1,2]} color={'blue'}>\n                  Deposit your crypto-assets\n                </Heading.h3>\n                <Heading.h4 fontSize={1} px={[1,0]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  Just deposit and relax. Your funds will be automatically allocated among DeFi protocols and you will immediately start earning interest.\n                </Heading.h4>\n              </Box>\n            </Flex>\n\n            <Flex\n              p={[3,3]}\n              mx={[0,2]}\n              my={[2,0]}\n              width={[1,1/4]}\n              position={'relative'}\n              flexDirection={'column'}\n              className={styles.bulletCard}\n            >\n              <Flex\n                mb={2}\n                width={1}\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Image width={['2.5em','3.3em']} src={'images/how-it-works/rebalance.svg'} />\n              </Flex>\n              <Box width={1}>\n                <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontSize={[3,3]} mb={[1,2]} color={'blue'}>\n                  Automated Rebalancing\n                </Heading.h3>\n                <Heading.h4 fontSize={1} px={[1,0]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  Idle automatically keeps the appropriate allocation mix, depending on the strategy. Idle consistently checks for better opportunities.\n                </Heading.h4>\n              </Box>\n            </Flex>\n            <Flex\n              p={[3,3]}\n              mx={[0,2]}\n              my={[2,0]}\n              width={[1,1/4]}\n              position={'relative'}\n              flexDirection={'column'}\n              className={styles.bulletCard}\n            >\n              <Flex\n                mb={2}\n                width={1}\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Image width={['2.5em','3.3em']} src={'images/how-it-works/insights-redeem.svg'} />\n              </Flex>\n              <Box width={1}>\n                <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontSize={[3,3]} mb={[1,2]} color={'blue'}>\n                  Easy insights and redeem\n                </Heading.h3>\n                <Heading.h4 fontSize={1} px={[1,0]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                  Monitor your funds’ performance and rebalance events, see your estimated earnings and easlily redeem back your funds + interest.\n                </Heading.h4>\n              </Box>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default HowItWorks;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport styles from './StrategyBox.module.scss';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Text, Link, Icon, Tooltip, Image, Loader } from \"rimble-ui\";\n\nclass StrategyBox extends Component {\n\n  state = {\n    network:null,\n    selectedToken:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n\n      // Override required network in props\n      const newProps = {...this.props};\n      if (this.state.network){\n        newProps.network = this.state.network;\n      }\n      // console.log('network',strategyInfo.networkId,newProps.network);\n\n      this.functionsUtil.setProps(newProps);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n\n    const strategyInfo = this.functionsUtil.getGlobalConfig(['landingStrategies',this.props.strategy]);\n    \n    // Override required network id\n    const network = Object.assign({},this.props.network);\n    network.required = Object.assign({},this.props.network.required);\n    network.current = Object.assign({},this.props.network.current);\n\n    network.required.id = strategyInfo.networkId;\n    network.required.name = this.functionsUtil.getGlobalConfig(['network','availableNetworks',strategyInfo.networkId,'name']);\n\n    this.setState({\n      network\n    },() => {\n      this.loadUtils();\n      this.loadData();\n    });\n  }\n\n  componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    if (contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  loadData = async () => {\n\n    const strategyInfo = this.functionsUtil.getGlobalConfig(['landingStrategies',this.props.strategy]);\n\n    // console.log('loadData - contractsInitialized',this.props.contractsInitialized);\n\n    if (!this.props.contractsInitialized){\n      return false;\n    }\n\n    let aprs = {};\n    const tokensAprs = {};\n    let highestValue = null;\n    let selectedToken = null;\n    \n    switch (strategyInfo.type){\n      case 'tranche':\n        selectedToken = strategyInfo.token;\n      break;\n      default:\n      case 'strategy':\n        const availableTokens = this.props.availableStrategiesNetworks[strategyInfo.networkId][strategyInfo.strategy];\n        switch (this.props.strategy){\n          case 'best':\n            aprs = await this.functionsUtil.getAprsFromApi(strategyInfo.networkId);\n            if (aprs && aprs.lendRates){\n              aprs.lendRates.forEach( aprInfo => {\n                const tokenAPR = this.functionsUtil.BNify(aprInfo.apy);\n                if (tokenAPR){\n                  const token = aprInfo.tokenSymbol;\n                  tokensAprs[token] = tokenAPR;\n                  if (!highestValue || highestValue.lt(tokenAPR)){\n                    highestValue = tokenAPR;\n                    selectedToken = token;\n                  }\n                }\n              });\n            } else if (availableTokens) {\n              await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n                const tokenConfig = availableTokens[token];\n                const tokenAPR = await this.functionsUtil.getTokenAprs(tokenConfig);\n                if (tokenAPR && tokenAPR.avgApr !== null){\n                  tokensAprs[token] = tokenAPR.avgApr;\n                  if (!highestValue || highestValue.lt(tokenAPR.avgApr)){\n                    highestValue = tokenAPR.avgApr;\n                    selectedToken = token;\n                  }\n                }\n              });\n            }\n          break;\n          case 'polygon':\n            aprs = await this.functionsUtil.getAprsFromApi(strategyInfo.networkId);\n            if (aprs && aprs.lendRates){\n              aprs.lendRates.forEach( aprInfo => {\n                const tokenAPR = this.functionsUtil.BNify(aprInfo.apy);\n                if (tokenAPR){\n                  const token = aprInfo.tokenSymbol;\n                  tokensAprs[token] = tokenAPR;\n                  if (!highestValue || highestValue.lt(tokenAPR)){\n                    highestValue = tokenAPR;\n                    selectedToken = token;\n                  }\n                }\n              });\n            } else if (availableTokens) {\n              await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n                const tokenConfig = availableTokens[token];\n                const tokenAPR = await this.functionsUtil.getTokenAprs(tokenConfig);\n                if (tokenAPR && tokenAPR.avgApr !== null){\n                  tokensAprs[token] = tokenAPR.avgApr;\n                  if (!highestValue || highestValue.lt(tokenAPR.avgApr)){\n                    highestValue = tokenAPR.avgApr;\n                    selectedToken = token;\n                  }\n                }\n              });\n            }\n          break;\n          case 'risk':\n          default:\n            selectedToken = strategyInfo.token;\n          break;\n        }\n      break;\n    }\n\n    // console.log('loadData',strategyInfo.type,this.props.strategy,strategyInfo.strategy,selectedToken);\n\n    this.setState({\n      selectedToken\n    });\n  }\n\n  async goToStrategy(){\n    const strategyInfo = this.functionsUtil.getGlobalConfig(['landingStrategies',this.props.strategy]);\n\n    if (strategyInfo.url){\n      window.location.href = strategyInfo.url;\n      return true;\n    }\n\n    let strategyEnv = null;\n    const currentEnv = this.functionsUtil.getCurrentEnvironment();\n    if (strategyInfo.enabledEnvs.length>0 && !strategyInfo.enabledEnvs.includes(currentEnv)){\n      strategyEnv = strategyInfo.enabledEnvs[0];\n    }\n\n    if (!strategyEnv){\n      await this.props.setRequiredNetwork(strategyInfo.networkId,true);\n    }\n\n    window.location.href = this.functionsUtil.getDashboardSectionUrl(strategyInfo.strategy,strategyEnv);\n  }\n\n  render() {\n    const strategyInfo = this.functionsUtil.getGlobalConfig(['landingStrategies',this.props.strategy]);\n    const networkInfo = this.functionsUtil.getGlobalConfig(['network','availableNetworks',strategyInfo.networkId]);\n\n    // const chartColor = strategyInfo.chartColor ? strategyInfo.chartColor : null;\n    // const networkTokenInfo = this.functionsUtil.getGlobalConfig(['stats','tokens',networkInfo.baseToken]);\n    let tokenConfig = null;\n    switch (strategyInfo.type){\n      case 'tranche':\n        tokenConfig = this.props.availableTranches[strategyInfo.protocol][strategyInfo.token];\n      break;\n      default:\n      case 'strategy':\n        tokenConfig = this.state.selectedToken ? this.props.availableStrategiesNetworks[strategyInfo.networkId][strategyInfo.strategy][this.state.selectedToken] : null;\n      break;\n    }\n\n    // console.log('StrategyBox',strategyInfo.type,strategyInfo.strategy,this.state.selectedToken,strategyInfo.networkId,this.props.network.required,this.state.network.required);\n\n    return (\n      <DashboardCard\n        cardProps={{\n          mt:[3,0],\n          ml:['0.35em',0],\n          width:[1,'21em'],\n          mr:['0.35em','2em'],\n          alignItems:'center',\n          height:'fit-content',\n          flexDirection:'column',\n          justifyContent:'flex-start',\n        }}\n        isVisible={ typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true }\n      >\n        <Flex\n          className={[styles.ribbon,styles[networkInfo.provider]]}\n        >\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'center'}\n            className={[styles.content]}\n          >\n            <Flex\n              p={1}\n              mr={2}\n              width={'1em'}\n              height={'1em'}\n              alignItems={'center'}\n              borderRadius={'50px'}\n              justifyContent={'center'}\n              backgroundColor={'white'}\n            >\n              <Image\n                height={'1em'}\n                src={`images/networks/${networkInfo.provider}.svg`}\n              />\n            </Flex>\n            <Text\n              fontSize={1}\n              fontWeight={3}\n              color={'white'}\n            >\n              {networkInfo.name}\n            </Text>\n          </Flex>\n        </Flex>\n        {\n          strategyInfo.enabledEnvs.includes('beta') && (\n            <Flex\n              px={2}\n              py={'1px'}\n              top={'2px'}\n              right={'2px'}\n              borderRadius={2}\n              position={'absolute'}\n              alignItems={'center'}\n              justifyContent={'center'}\n              backgroundColor={'#ff7600'}\n            >\n              <Text\n                fontSize={1}\n                fontWeight={3}\n                color={'white'}\n              >\n                BETA\n              </Text>\n            </Flex>\n          )\n        }\n        {\n          /*\n          <Flex\n            mb={3}\n            py={1}\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'center'}\n            backgroundColor={networkInfo.color}\n          >\n            <Image\n              mr={2}\n              height={'1em'}\n              src={`images/networks/${networkInfo.provider}-white.svg`}\n            />\n            <Text\n              fontSize={1}\n              fontWeight={3}\n              color={'white'}\n            >\n              {networkInfo.name} Network\n            </Text>\n          </Flex>\n          */\n        }\n        <Flex\n          mt={3}\n          mb={2}\n          justifyContent={'center'}\n        >\n          <Image\n            src={strategyInfo.icon}\n            height={['2.2em','2.4em']}\n          />\n        </Flex>\n        <Flex\n          mt={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n        >\n          <Title\n            fontWeight={5}\n            fontSize={[4,'1.7em']}\n          >\n            {strategyInfo.title}\n          </Title>\n        </Flex>\n        {\n          /*\n          <Flex\n            my={1}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n          >\n            <Flex\n              pb={'1px'}\n              pl={'3px'}\n              pr={'6px'}\n              alignItems={'center'}\n              borderRadius={'50px'}\n              flexDirection={'row'}\n              display={'inline-flex'}\n              justifyContent={'center'}\n              backgroundColor={networkInfo.color}\n            >\n              <Flex\n                p={1}\n                mr={1}\n                width={'1.1em'}\n                height={'1.1em'}\n                alignItems={'center'}\n                borderRadius={'50px'}\n                justifyContent={'center'}\n                backgroundColor={'white'}\n              >\n                <Image\n                  height={'1.1em'}\n                  src={`images/networks/${networkInfo.provider}.svg`}\n                />\n              </Flex>\n              <Text\n                fontSize={'13px'}\n                color={'white'}\n                fontWeight={500}\n              >\n                {networkInfo.name}\n              </Text>\n            </Flex>\n          </Flex>\n          */\n        }\n        <Flex\n          mb={[2,3]}\n          minHeight={'50px'}\n          alignItems={'flex-start'}\n          justifyContent={'center'}\n        >\n          <Text\n            px={[3,4]}\n            fontWeight={500}\n            textAlign={'center'}\n          >\n            {strategyInfo.desc}\n          </Text>\n        </Flex>\n        {\n          strategyInfo.comingSoon ? (\n            <Flex\n              mt={3}\n              mb={[0,3]}\n              height={'126px'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n              alignItems={['flex-end','end']}\n            >\n              <Image\n                width={1}\n                src={'/images/strategy-placeholder.jpg'}\n              />\n            </Flex>\n          ) : strategyInfo.type === 'strategy' ? (\n            <Flex\n              mt={[0,3]}\n              flexDirection={'row'}\n              alignItems={'flex-start'}\n              justifyContent={'center'}\n              minHeight={['69px','88px']}\n            >\n              <Flex\n                width={0.5}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n                borderRight={`1px solid ${this.props.theme.colors.divider}`}\n              >\n                <Flex\n                  width={1}\n                  alignItems={'center'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={2}\n                    fontWeight={4}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    APY\n                  </Text>\n                  <Tooltip\n                    placement={'bottom'}\n                    message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                  >\n                    <Icon\n                      ml={1}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n                </Flex>\n                <AssetField\n                  fieldInfo={{\n                    name:'apy',\n                    showTooltip:false,\n                    props:{\n                      decimals:2,\n                      fontWeight:4,\n                      color:'copyColor',\n                      textAlign:'center',\n                      fontSize:[3,'1.8em'],\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    },\n                  }}\n                  {...this.props}\n                  tokenConfig={tokenConfig}\n                  network={this.state.network}\n                  token={this.state.selectedToken}\n                  selectedStrategy={strategyInfo.strategy}\n                />\n                <AssetField\n                  fieldInfo={{\n                    showLoader:false,\n                    name:'idleDistribution',\n                    props:{\n                      decimals:2,\n                      fontWeight:2,\n                      fontSize:[0,1],\n                      color:'cellText',\n                      textAlign:'center',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    },\n                  }}\n                  {...this.props}\n                  tokenConfig={tokenConfig}\n                  network={this.state.network}\n                  token={this.state.selectedToken}\n                  selectedStrategy={strategyInfo.strategy}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  width={1}\n                  alignItems={'center'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={2}\n                    fontWeight={4}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    TOKEN\n                  </Text>\n                </Flex>\n                {\n                  tokenConfig ? (\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <AssetField\n                        fieldInfo={{\n                          name:'icon',\n                          props:{\n                            mr:[1,2],\n                            fontWeight:4,\n                            textAlign:'center',\n                            size: this.props.isMobile ? '1.4em' : '1.8em'\n                          },\n                        }}\n                        {...this.props}\n                        tokenConfig={tokenConfig}\n                        network={this.state.network}\n                        token={this.state.selectedToken}\n                        selectedStrategy={strategyInfo.strategy}\n                      />\n                      <AssetField\n                        fieldInfo={{\n                          name:'tokenName',\n                          props:{\n                            fontWeight:4,\n                            color:'copyColor',\n                            textAlign:'center',\n                            fontSize:[3,'1.6em'],\n                            flexProps:{\n                              justifyContent:'center'\n                            }\n                          },\n                        }}\n                        {...this.props}\n                        tokenConfig={tokenConfig}\n                        network={this.state.network}\n                        token={this.state.selectedToken}\n                        selectedStrategy={strategyInfo.strategy}\n                      />\n                    </Flex>\n                  ) : (\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Loader size=\"20px\" />\n                    </Flex>\n                  )\n                }\n              </Flex>\n            </Flex>\n          ) : strategyInfo.type === 'tranche' && (\n            <Flex\n              mt={[0,3]}\n              flexDirection={'row'}\n              alignItems={'flex-start'}\n              justifyContent={'center'}\n              minHeight={['69px','88px']}\n            >\n              <Flex\n                width={0.5}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n                borderRight={`1px solid ${this.props.theme.colors.divider}`}\n              >\n                <Flex\n                  width={1}\n                  alignItems={'center'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={2}\n                    fontWeight={4}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Senior APY\n                  </Text>\n                  <Tooltip\n                    placement={'bottom'}\n                    message={this.functionsUtil.getGlobalConfig(['tranches','AA','description','deposit'])}\n                  >\n                    <Icon\n                      ml={1}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n                </Flex>\n                <TrancheField\n                  fieldInfo={{\n                    name:'seniorApy',\n                    showTooltip:false,\n                    props:{\n                      decimals:2,\n                      fontWeight:4,\n                      color:'copyColor',\n                      textAlign:'center',\n                      fontSize:[3,'1.8em'],\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    },\n                  }}\n                  {...this.props}\n                  tokenConfig={tokenConfig}\n                  token={strategyInfo.token}\n                  network={this.state.network}\n                  tranche={strategyInfo.tranche}\n                  protocol={strategyInfo.protocol}\n                />\n                <TrancheField\n                  fieldInfo={{\n                    showLoader:false,\n                    name:'trancheIDLEDistribution',\n                    props:{\n                      decimals:2,\n                      fontWeight:2,\n                      fontSize:[0,1],\n                      color:'cellText',\n                      textAlign:'center',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    },\n                  }}\n                  {...this.props}\n                  tokenConfig={tokenConfig}\n                  token={strategyInfo.token}\n                  network={this.state.network}\n                  trancheConfig={tokenConfig.AA}\n                  tranche={strategyInfo.tranche}\n                  protocol={strategyInfo.protocol}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  width={1}\n                  alignItems={'center'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={2}\n                    fontWeight={4}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Junior APY\n                  </Text>\n                  <Tooltip\n                    placement={'bottom'}\n                    message={this.functionsUtil.getGlobalConfig(['tranches','BB','description','deposit'])}\n                  >\n                    <Icon\n                      ml={1}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n                </Flex>\n                <TrancheField\n                  fieldInfo={{\n                    name:'juniorApy',\n                    showTooltip:false,\n                    props:{\n                      decimals:2,\n                      fontWeight:4,\n                      color:'copyColor',\n                      textAlign:'center',\n                      fontSize:[3,'1.8em'],\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    },\n                  }}\n                  {...this.props}\n                  tokenConfig={tokenConfig}\n                  token={strategyInfo.token}\n                  network={this.state.network}\n                  tranche={strategyInfo.tranche}\n                  protocol={strategyInfo.protocol}\n                />\n                <TrancheField\n                  fieldInfo={{\n                    showLoader:false,\n                    name:'trancheIDLEDistribution',\n                    props:{\n                      decimals:2,\n                      fontWeight:2,\n                      fontSize:[0,1],\n                      color:'cellText',\n                      textAlign:'center',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    },\n                  }}\n                  {...this.props}\n                  tokenConfig={tokenConfig}\n                  token={strategyInfo.token}\n                  network={this.state.network}\n                  trancheConfig={tokenConfig.BB}\n                  tranche={strategyInfo.tranche}\n                  protocol={strategyInfo.protocol}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !strategyInfo.comingSoon && \n            <Flex\n              mt={2}\n              width={1}\n              height={'60px'}\n              flexDirection={'row'}\n              alignItems={'center'}\n              justifyContent={'center'}\n              id={`${this.props.strategy}_performance_chart`}\n            >\n              {\n                /*\n                <Image\n                  width={1}\n                  height={'60px'}\n                  src={`/images/strategies/${this.props.strategy}-chart.png`}\n                />\n                */\n              }\n              <AssetField\n                fieldInfo={{\n                  name:'aprChart'\n                }}\n                chartProps={{\n                  lineWidth:2\n                }}\n                {...this.props}\n                tokenConfig={tokenConfig}\n                network={this.state.network}\n                token={this.state.selectedToken}\n                rowId={`${this.props.strategy}_performance_chart`}\n              />\n            </Flex>\n        }\n        <Flex\n          width={1}\n          height={'64px'}\n          position={'relative'}\n          boxShadow={'0px -6px 6px -4px rgba(0,0,0,0.1)'}\n        >\n          {\n            strategyInfo.comingSoon ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  mr={2}\n                  fontSize={3}\n                  fontWeight={550}\n                  color={'copyColor'}\n                  style={{\n                    fontStyle:'italic'\n                  }}\n                  hoverColor={'copyColor'}\n                >\n                  Coming Soon\n                </Text>\n              </Flex>\n            ) : (\n              <Link\n                onClick={ e => this.goToStrategy() }\n                style={{display:'flex',width:'100%'}}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mr={2}\n                      fontSize={3}\n                      fontWeight={4}\n                      color={'copyColor'}\n                      hoverColor={'copyColor'}\n                    >\n                      Start with {strategyInfo.title}\n                    </Text>\n                    <Icon\n                      size={'1.2em'}\n                      color={'copyColor'}\n                      name={'ArrowForward'}\n                    />\n                  </Flex>\n              </Link>\n            )\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default StrategyBox;\n","import React, { Component } from \"react\";\nimport { Flex, Box, Button, Form, Text, Checkbox, Link } from 'rimble-ui';\nimport axios from 'axios';\nimport styles from './NewsletterForm.module.scss';\nimport globalConfigs from '../configs/globalConfigs';\n\nclass NewsletterForm extends Component {\n  state = {\n    validated: false,\n    privacy: false,\n    email: null,\n    message: ''\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = { validated: false };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleValidation = this.handleValidation.bind(this);\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    if (!this.state.privacy){\n      this.setState({message:'Please check the privacy policy box to proceed.', messageColor:'red' });\n      return false;\n    }\n\n    this.setState({validated:true });\n\n    axios.post(globalConfigs.newsletterSubscription.endpoint, {\n      'email': this.state.email\n    }).then(r => {\n      if (r.data.status === 'success'){\n        this.setState({message:'Thanks! Check your e-mail and confirm your subscription', messageColor:'green' });\n      } else {\n        this.setState({message:'Error while sending your subscription... Please try again', messageColor:'red' });\n      }\n    })\n    .catch(err => {\n      this.setState({message:'Error while sending your subscription... Please try again', messageColor:'red' });\n    });\n  }\n\n  toggleCheckbox(e) {\n    this.setState({ privacy: e.target.checked });\n  }\n\n  handleValidation(e) {\n    if (e && e.target) {\n      this.setState({ email: e.target.value });\n      e.target.parentNode.classList.add(\"was-validated\");\n    }\n  }\n\n  render() {\n\n    return (\n        <Box mt={[2,3]} maxWidth={'45em'} width={1}>\n          <Form onSubmit={this.handleSubmit}>\n            <Flex flexDirection={['column','row']} alignItems={['center','flex-start']} justifyContent={'center'}>\n              <Box width={[1,7/10]}>\n                <Form.Field width={1} label={''}>\n                  <Form.Input\n                    type=\"email\"\n                    name=\"EMAIL\"\n                    required\n                    width={1}\n                    outline={'none'}\n                    border={0}\n                    fontSize={[2,5]}\n                    borderRadius={0}\n                    pl={0}\n                    pb={3}\n                    textAlign={['center','left']}\n                    placeholder={'Enter your e-mail'}\n                    boxShadow={'none !important'}\n                    borderBottom={'1px solid #a6a6a6'}\n                    onChange={this.handleValidation}\n                  />\n                </Form.Field>\n                <Flex mb={[3,0]} flexDirection={'row'} alignItems={'center'}>\n                  <Checkbox onClick={ e => this.toggleCheckbox(e) } label={'I\\'ve read and accepted the'} required />\n                  <Link color={'blue'} hoverColor={'blue'} target={'_blank'} rel=\"nofollow noopener noreferrer\" href={\"https://www.iubenda.com/privacy-policy/61211749\"}>Privacy Policy</Link>\n                </Flex>\n                {this.state.message && this.state.message.length &&\n                  <Text.p py={0} mt={[2,3]} mb={3} textAlign={['center','left']} color={this.state.messageColor}>{this.state.message}</Text.p>\n                }\n              </Box>\n              <Box width={[1,3/10]} my={[0,'26px']}>\n                <Button className={styles.gradientButton} type=\"submit\" width={1}>\n                  GET UPDATES\n                </Button>\n              </Box>\n            </Flex>\n          </Form>\n        </Box>\n    );\n  }\n}\nexport default NewsletterForm;\n","import React, { Component } from 'react';\nimport { Flex, ToastMessage, Link, Icon } from \"rimble-ui\";\n\nclass FloatingToastMessage extends Component {\n  state = {}\n\n  render() {\n    let ToastComponent = null;\n\n    switch (this.props.variant){\n      case 'success':\n        ToastComponent = ToastMessage.Success;\n      break;\n      case 'processing':\n        ToastComponent = ToastMessage.Processing;\n      break;\n      case 'failure':\n        ToastComponent = ToastMessage.Failure;\n      break;\n      default:\n      break;\n    }\n\n    if (ToastComponent){\n      return (\n        <Flex\n          right={'0'}\n          bottom={'0'}\n          zIndex={'9999'}\n          position={'fixed'}\n          p={ !this.props.isMobile ? '1em' : 0 }\n          width={ !this.props.isMobile ? '420px': '100vw' }\n        >\n          <ToastComponent\n            closeElem={false}\n            style={{width:'100%'}}\n            backgroundColor={'cardBg'}\n            message={this.props.message}\n            secondaryMessage={this.props.secondaryMessage}\n          />\n          <Link onClick={this.props.handleClose} style={ this.props.isMobile ? {position:'absolute',top:'10px',right:'10px',width:'20px',height:'20px'} : {position:'absolute',top:'22px',right:'22px',width:'16px',height:'16px'}}>\n            <Icon\n              name={'Close'}\n              color={'dark-gray'}\n              size={ this.props.isMobile ? '20' : '16' }\n            />\n          </Link>\n        </Flex>\n      );\n    }\n\n    return null;\n  }\n}\n\nexport default FloatingToastMessage;","import Faq from '../Faq/Faq';\nimport Title from '../Title/Title';\nimport Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport ExtLink from '../ExtLink/ExtLink';\nimport styles from './Landing.module.scss';\nimport FlexCards from '../FlexCards/FlexCards';\nimport AuditCard from '../AuditCard/AuditCard';\nimport HowItWorks from '../HowItWorks/HowItWorks';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport RoundButton from '../RoundButton/RoundButton';\nimport StrategyBox from '../StrategyBox/StrategyBox';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport NewsletterForm from '../NewsletterForm/NewsletterForm';\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\nimport { Image, Flex, Box, Heading, Link, Text, Icon } from 'rimble-ui';\nimport FloatingToastMessage from '../FloatingToastMessage/FloatingToastMessage';\nimport AssetsUnderManagement from '../AssetsUnderManagement/AssetsUnderManagement';\n\nlet scrolling = false;\n\nclass Landing extends Component {\n  state = {\n    avgApr:null,\n    carouselMax:0,\n    carouselIndex:0,\n    activeCarousel:1,\n    runConfetti:false,\n    activeBullet:null,\n    protocolsAprs:null,\n    testPerformed:false,\n    totalAllocation:null,\n    visibleStrategies:[],\n    landingStrategies:[],\n    carouselOffsetLeft:0,\n    setActiveCarousel:null,\n    carouselIntervalID:null,\n    protocolsAllocations:null,\n    randomAllocationEnabled:false\n  };\n\n  // Clear all the timeouts\n  async componentWillUnmount(){\n\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    window.functionsUtil = this.functionsUtil;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.props.setCurrentSection('landing');\n    this.loadStrategies();\n  }\n\n  loadStrategies(){\n    const currentNetworkId = this.functionsUtil.getRequiredNetworkId();\n    const landingStrategies = Object.keys(globalConfigs.landingStrategies);\n    const visibleStrategies = landingStrategies.filter(s => globalConfigs.landingStrategies[s].visible && (!globalConfigs.landingStrategies[s].availableNetworks.length || globalConfigs.landingStrategies[s].availableNetworks.includes(currentNetworkId)) && (!globalConfigs.landingStrategies[s].enabledEnvs.length || globalConfigs.landingStrategies[s].enabledEnvs.includes(this.props.currentEnv)) );\n    const carouselMax = landingStrategies.length-1;\n    this.setState({\n      carouselMax,\n      visibleStrategies,\n      landingStrategies\n    });\n  }\n\n  setActiveCarousel = (activeCarousel) => {\n    activeCarousel = activeCarousel<=3 ? activeCarousel : 1;\n    this.setState({activeCarousel});\n  }\n\n  async componentDidMount(){\n    this.props.processCustomParam(this.props);\n\n    if (this.props.contractsInitialized){\n      // await Promise.all([\n      //   this.getAprs(),\n      //   this.getAllocations()\n      // ]);\n    }\n  }\n\n  handleCarousel = action => {\n    let carouselIndex = this.state.carouselIndex;\n    if (action==='next' && carouselIndex<this.state.carouselMax){\n      carouselIndex++;\n    } else if (action==='back' && carouselIndex>0){\n      carouselIndex--;\n    }\n\n    const multiplier = this.props.isMobile ? 1 : 0.75;\n    const $element = window.jQuery(`#carousel-cursor > div:eq(${carouselIndex})`);\n    const carouselOffsetLeft = -parseFloat($element.position().left*multiplier)+'px';\n\n    this.setState({\n      carouselIndex,\n      carouselOffsetLeft\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n    this.props.processCustomParam(this.props,prevProps);\n\n\n    const requiredNetworkChanged = JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required);\n    const networkChanged = (!prevProps.networkInitialized && this.props.networkInitialized) || requiredNetworkChanged;\n    if (networkChanged){\n      this.loadStrategies();\n    }\n\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (contractsInitialized) {\n      // await Promise.all([\n      //   this.getAprs(),\n      //   this.getAllocations()\n      // ]);\n    }\n  }\n\n  processScrolling = () => {\n    if (scrolling){\n\n      const bulletCards = document.getElementsByClassName('bulletCard');\n      let activeBullet = 0;\n\n      for (let i=0;i<bulletCards.length;i++){\n        const bulletCard = bulletCards[i];\n        if (bulletCard && bulletCard.offsetParent){\n          const offsetY = bulletCard.offsetTop ? bulletCard.offsetTop : bulletCard.offsetParent.offsetTop;\n          if (window.scrollY >= offsetY-200){\n            activeBullet = i+2;\n          }\n        }\n      }\n      scrolling = false;\n\n      if (parseInt(activeBullet) !== parseInt(this.state.activeBullet)){\n        this.setState({activeBullet});\n      }\n    }\n  };\n\n  getAllocations = async () => {\n\n    let totalAllocation = this.functionsUtil.BNify(0);\n\n    const newState = {\n      avgApr: null,\n      totalAllocation:null,\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.functionsUtil.asyncForEach(this.props.tokenConfig.protocols,async (protocolInfo,i) => {\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [protocolBalance, tokenDecimals, exchangeRate] = await Promise.all([\n        this.functionsUtil.getProtocolBalance(contractName),\n        this.functionsUtil.getTokenDecimals(contractName),\n        ( protocolInfo.functions.exchangeRate ? this.getTokenExchangeRate(contractName,protocolInfo.functions.exchangeRate) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.functionsUtil.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      const protocolAllocation = this.functionsUtil.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n    });\n\n    if (this.state.randomAllocationEnabled){\n      let remainingAllocation = parseFloat(totalAllocation.toString());\n      const totProtocols = Object.keys(protocolsAllocations).length;\n      Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n        let alloc = parseFloat(protocolsAllocations[protocolAddr].toString());\n        if (i === totProtocols-1){\n          alloc = remainingAllocation;\n        } else {\n          alloc = parseFloat(Math.random()*(remainingAllocation-(remainingAllocation/3))+(remainingAllocation/3));\n          remainingAllocation -= alloc;\n        }\n        protocolsAllocations[protocolAddr] = this.functionsUtil.BNify(alloc);\n      });\n    }\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    newState.totalAllocation = totalAllocation;\n    newState.protocolsAllocations = protocolsAllocations;\n    newState.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (this.state.protocolsAprs){\n      newState.avgApr = this.functionsUtil.getAvgApr(this.state.protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    this.setState(newState);\n\n    return newState;\n  }\n\n  getAprs = async () => {\n    const Aprs = await this.functionsUtil.genericIdleCall('getAPRs');\n\n    if (!Aprs){\n      return false;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n    const protocolsAprs = {};\n\n    this.props.tokenConfig.protocols.forEach((info,i) => {\n      // const protocolName = info.name;\n      const protocolAddr = info.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        const protocolApr = aprs[addrIndex];\n        protocolsAprs[protocolAddr] = this.functionsUtil.BNify(+this.functionsUtil.toEth(protocolApr));\n      }\n    });\n\n    const newState = {\n      avgApr: null,\n      protocolsAprs\n    };\n\n    if (this.state.protocolsAllocations && this.state.totalAllocation){\n      newState.avgApr = this.functionsUtil.getAvgApr(protocolsAprs,this.state.protocolsAllocations,this.state.totalAllocation);\n    }\n\n    this.setState(newState);\n    return newState;\n  };\n\n  startLending = async e => {\n    this.props.updateSelectedTab(e, '1');\n    window.location.href = '#invest';\n  }\n\n  setConfetti = (runConfetti) => {\n    this.setState({\n      runConfetti\n    })\n  }\n\n  connectAndGoToRoute = (route) => {\n\n    const goToLocation = () => {\n      window.location = \"/#\"+route;\n    }\n\n    if (this.props.account){\n      goToLocation();\n    } else {\n      this.props.connectAndValidateAccount(goToLocation);\n    }\n  }\n\n  goToStrategy = async () => {\n    window.location.hash = this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])+'/'+this.state.visibleStrategies[0];\n  }\n\n  render() {\n    const { network } = this.props;\n    const availableTokens = [];\n\n    if (!this.props.availableStrategies){\n      return (\n        <Flex\n          width={1}\n          minHeight={'100vh'}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          backgroundColor={'selectBg'}\n        >\n          <FlexLoader\n            textProps={{\n              textSize: 4,\n              fontWeight: 2\n            }}\n            loaderProps={{\n              mb: 3,\n              size: '80px',\n              color: 'primary'\n            }}\n            flexProps={{\n              my: 3,\n              flexDirection: 'column'\n            }}\n            text={''}\n          />\n        </Flex>\n      );\n    }\n\n    Object.values(this.props.availableStrategies).forEach( tokens => {\n      Object.keys(tokens).forEach( token => {\n        if (availableTokens.indexOf(token) === -1){\n          availableTokens.push(token);\n        }\n      });\n    });\n\n    return (\n      <Box\n        height={'100vh'}\n        className={styles.mainViewport}\n        style={{\n          paddingBottom: !network.isCorrectNetwork ? \"8em\" : \"0\"\n        }}\n      >\n        <Box\n          pl={[3,5]}\n          pr={[3,0]}\n          overflow={'hidden'}\n          pt={['2.5em', '3em']}\n          className={styles.headerContainer}\n          minHeight={ Math.max((this.props.innerHeight+this.props.innerHeight*0.025),768) }\n        >\n          <Box\n            zIndex={10}\n            position={'relative'}\n          >\n            <Flex\n              overflow={'visible'}\n              alignItems={'flex-start'}\n              flexDirection={['column','row']}\n              mt={['7em',Math.max(window.innerHeight*0.225,145)+'px']}\n            >\n              <Flex\n                width={[1,1/3]}\n                justifyContent={['center','flex-end']}\n              >\n                <Flex\n                  pb={3}\n                  width={1}\n                  textAlign={'center'}\n                  flexDirection={'column'}\n                  maxWidth={['50em', '24em']}\n                  alignItems={['center','flex-start']}\n                >\n                  <Heading.h1\n                    fontWeight={5}\n                    color={'white'}\n                    fontFamily={'sansSerif'}\n                    fontSize={['2.2em','3.2rem']}\n                    textAlign={['center','left']}\n                    lineHeight={['initial','2.5rem']}\n                    style={{\n                      width:'100%',\n                      textAlignLast: this.props.isMobile ? 'center' : 'justify'\n                    }}\n                  >\n                    The best place\n                  </Heading.h1>\n                  <Heading.h1\n                    mb={[2,3]}\n                    color={'white'}\n                    fontWeight={300}\n                    lineHeight={'initial'}\n                    fontFamily={'sansSerif'}\n                    fontSize={['2.2em','3.2rem']}\n                    textAlign={['center','left']}\n                    style={{\n                      width:'100%',\n                      textAlignLast: this.props.isMobile ? 'center' : 'justify'\n                    }}\n                  >\n                    for your money\n                  </Heading.h1>\n                  <Heading.h2\n                    style={{\n                      width:'100%',\n                    }}\n                    color={'white'}\n                    fontWeight={400}\n                    fontSize={[2,'1.2em']}\n                    textAlign={['center','justify']}\n                  >\n                    Choose your strategy and earn the yield you deserve without worry about finding the best option, either if you want to optimize returns or risks.\n                  </Heading.h2>\n                  {\n                    !this.props.isMobile && \n                      <Flex\n                        mt={4}\n                      >\n                        <RoundButton\n                          handleClick={ (e) => this.goToStrategy() }\n                        >\n                          Go to Dashboard\n                        </RoundButton>\n                      </Flex>\n                  }\n                </Flex>\n              </Flex>\n              <Flex\n                mr={['auto',0]}\n                width={[1,2/3]}\n                ml={[0,'100px']}\n                textAlign={'center'}\n                position={'relative'}\n                flexDirection={'column'}\n                height={['415px','460px']}\n                justifyContent={['flex-start','flex-end']}\n              >\n                <Flex\n                  left={0}\n                  right={0}\n                  width={'100%'}\n                  height={'420px'}\n                  top={['initial','0']}\n                  position={'absolute'}\n                  bottom={['0','initial']}\n                  overflow={this.state.carouselIndex === 0 ? 'visible' : 'hidden'}\n                  style={{\n                    overflowY:'visible'\n                  }}\n                >\n                  <Flex\n                    pt={'9px'}\n                    pl={'9px'}\n                    top={['initial',0]}\n                    flexDirection={'row'}\n                    position={'absolute'}\n                    id={'carousel-cursor'}\n                    height={['auto','420px']}\n                    bottom={['5px','initial']}\n                    justifyContent={'flex-start'}\n                    left={this.state.carouselOffsetLeft}\n                    style={{\n                      overflowY:'visible',\n                      transition:'left 0.3s ease-in-out'\n                    }}\n                    width={[this.state.landingStrategies.length*100+'%','140%']}\n                  >\n                    {\n                      this.state.landingStrategies.map((strategy,strategyIndex) => (\n                        <StrategyBox\n                          {...this.props}\n                          strategy={strategy}\n                          key={`strategy_${strategy}`}\n                        />\n                      ))\n                    }\n                  </Flex>\n                </Flex>\n                <Flex\n                  width={1}\n                  mt={[0,'20px']}\n                  id={'carousel-container'}\n                  justifyContent={['center','flex-start']}\n                >\n                  <RoundIconButton\n                    buttonProps={{\n                      mr:[4,3]\n                    }}\n                    iconName={'ArrowBack'}\n                    disabled={this.state.carouselIndex === 0}\n                    handleClick={ e => this.handleCarousel('back') }\n                  />\n                  <RoundIconButton\n                    iconName={'ArrowForward'}\n                    handleClick={ e => this.handleCarousel('next') }\n                    disabled={this.state.carouselIndex === this.state.carouselMax}\n                  />\n                </Flex>\n              </Flex>\n            </Flex>\n          </Box>\n        </Box>\n\n        <HowItWorks />\n\n        <Box\n          mb={[3,4]}\n          pt={[4,5]}\n          pb={[4,4]}\n          id={'partners'}\n        >\n          <Box\n            mx={'auto'}\n            maxWidth={['50em','70em']}\n          >\n            <Title\n              mb={3}\n              mt={[3,4]}\n              fontWeight={5}\n              fontSize={[5,6]}\n              component={Heading.h4}\n            >\n              Audited and Battle-tested\n            </Title>\n            <Text\n              fontSize={[2,3]}\n              fontWeight={500}\n              color={'cellTitle'}\n              textAlign={'center'}\n            >\n              We take security very seriously, that's why our Smart-Contracts are fully Audited and battle-tested.\n            </Text>\n            <Flex\n              width={1}\n              px={[3,4]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <AssetsUnderManagement\n                {...this.props}\n                subtitle={null}\n                allNetworks={true}\n                subtitleProps={{\n                  textAlign:'center'\n                }}\n                counterStyle={{\n                  display:'block',\n                  color:'dark-gray',\n                  overflow: 'hidden',\n                  textAlign: 'center',\n                  whiteSpace: 'nowrap',\n                  textOverflow: 'ellipsis',\n                  fontFamily:this.props.theme.fonts.counter,\n                  fontWeight:this.props.theme.fontWeights[5],\n                  fontSize: this.props.isMobile ? this.props.theme.fontSizes[5] : this.props.theme.fontSizes[9],\n                }}\n              />\n              <Link\n                mb={3}\n                target={'_blank'}\n                textAlign={'center'}\n                rel={'nofollow noopener noreferrer'}\n                href={'https://certificate.quantstamp.com/view/idle-finance'}\n              >\n                <Image\n                  width={'15em'}\n                  src={'images/quantstamp-badge.svg'}\n                />\n              </Link>\n              <Title\n                my={[2,3]}\n                mt={[3,4]}\n                fontWeight={3}\n                fontSize={[3,4]}\n                color={'dark-gray'}\n                component={Heading.h4}\n              >\n                Full Audit Report:\n              </Title>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <AuditCard\n                  title={'Idle Protocol'}\n                  date={'December 10th 2020 — Quantstamp Verified'}\n                  link={'https://certificate.quantstamp.com/full/idle-finance'}\n                />\n                <AuditCard\n                  title={'Idle Governance'}\n                  date={'November 26th 2020 — Quantstamp Verified'}\n                  link={'https://certificate.quantstamp.com/full/idle-goverance'}\n                />\n              </Flex>\n            </Flex>\n          </Box>\n        </Box>\n        <Box\n          mt={[4,5]}\n          px={[3,4]}\n          py={[4,5]}\n          id={'integrators'}\n          className={styles.gradientBackground}\n        >\n          <Box\n            mx={'auto'}\n            maxWidth={['50em','75em']}\n          >\n            <Title\n              mb={3}\n              fontWeight={5}\n              fontSize={[5,6]}\n              component={Heading.h4}\n            >\n              Build with Idle\n            </Title>\n            <Text\n              mb={3}\n              fontSize={[2,3]}\n              fontWeight={500}\n              color={'cellTitle'}\n              textAlign={'center'}\n            >\n              Just few lines of code to integrate the power of Idle into your dApp\n            </Text>\n            <Flex\n              mt={2}\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={['center','space-between']}\n            >\n              <Flex\n                mt={2}\n                width={1}\n                flexDirection={['column','row']}\n                alignItems={['center','flex-start']}\n                justifyContent={['center','flex-start']}\n              >\n                <Flex\n                  mb={[3,0]}\n                  width={[1,0.5]}\n                  flexDirection={'column'}\n                  alignItems={['center','flex-start']}\n                  justifyContent={['center','flex-start']}\n                >\n                  <Title\n                    mb={3}\n                    fontWeight={5}\n                    component={Heading.h5}\n                    fontSize={[4,'1.75em']}\n                  >\n                    Designed for Developers\n                  </Title>\n\n                  <Text\n                    mb={3}\n                    pr={[0,5]}\n                    textAlign={['center','justify']}\n                  >\n                    A fully integrated suite of DeFi yield products easy to integrate into your dApp so your teams don't need to stitch together disparate protocols or spend months integrating and updating yield functionality.<br />One integration to rule them all.\n                  </Text>\n                  <Text\n                    mb={2}\n                    fontWeight={500}\n                  >\n                    Supported Assets:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    flexDirection={'row'}\n                  >\n                    {\n                      availableTokens.map( token => (\n                        <AssetField\n                          token={token}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:2,\n                              width:'1.9em',\n                              height:'1.9em'\n                            }\n                          }}\n                          key={`asset_${token}`}\n                        />\n                      ))\n                    }\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={['column','row']}\n                    justifyContent={['center','flex-start']}\n                  >\n                    <RoundButton\n                      buttonProps={{\n                        width:[1,'auto']\n                      }}\n                      handleClick={ (e) => {\n                        window.open('https://developers.idle.finance')\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'flex-end'}\n                        justifyContent={'center'}\n                      >\n                        <Text\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'white'}\n                        >\n                          Read the docs\n                        </Text>\n                        <Icon\n                          ml={2}\n                          size={'1.2em'}\n                          color={'white'}\n                          name={'KeyboardArrowRight'}\n                        />\n                      </Flex>\n                    </RoundButton>\n                    <Text\n                      mt={[2,0]}\n                      ml={[0,2]}\n                    >\n                      or\n                    </Text>\n                    <ExtLink\n                      mt={[2,0]}\n                      ml={[0,2]}\n                      fontSize={2}\n                      hoverColor={'primary'}\n                      href={'https://idlefinance.typeform.com/to/PUC7nO'}\n                    >\n                      Contact Us\n                    </ExtLink>\n                    {\n                      /*\n                      <RoundButton\n                        buttonProps={{\n                          ml:2,\n                          mainColor:'red',\n                          width:[1,'auto']\n                        }}\n                        handleClick={ (e) => {\n                          window.open('https://idlefinance.typeform.com/to/PUC7nO')\n                        }}\n                      >\n                        <Flex\n                          width={1}\n                          alignItems={'flex-end'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={3}\n                            color={'white'}\n                            fontSize={[1,2]}\n                          >\n                            Contact us\n                          </Text>\n                          <Icon\n                            ml={2}\n                            name={'Send'}\n                            size={'1.2em'}\n                            color={'white'}\n                          />\n                        </Flex>\n                      </RoundButton>\n                      */\n                    }\n                  </Flex>\n                </Flex>\n                <Flex\n                  width={[1,0.5]}\n                >\n                  <iframe\n                    height={\"350\"}\n                    title={'integrate'}\n                    id={'carbon-iframe'}\n                    style={{\n                      border:'0',\n                      width: '100%',\n                      height: '350px',\n                      overflow:'hidden',\n                      transform: 'scale(1)',\n                    }}\n                    sandbox={\"allow-scripts allow-same-origin\"}\n                    src={'https://carbon.now.sh/embed?bg=rgba%28255%2C255%2C255%2C0%29&t=cobalt&wt=none&l=auto&ds=false&dsyoff=20px&dsblur=68px&wc=true&wa=true&pv=0px&ph=0px&ln=false&fl=1&fm=Fira+Code&fs=13.5px&lh=143%25&si=false&es=2x&wm=false&code=const%2520DAIAbi%2520%253D%2520require%28%27DAI.json%27%29%253B%2520%252F%252F%2520DAI%2520ABI%250Aconst%2520idleTokenAbi%2520%253D%2520require%28%27idleToken.json%27%29%253B%2520%252F%252F%2520idleToken%2520ABI%250A%250Aconst%2520user%2520%253D%2520%270x...%27%253B%2520%252F%252F%2520set%2520user%2520address%250Aconst%2520idleDAI%2520%253D%2520%270x3fE7940616e5Bc47b0775a0dccf6237893353bB4%27%253B%2520%252F%252F%2520idleDAIYield%2520address%250Aconst%2520DAIAddress%2520%253D%2520%270x6b175474e89094c44da98b954eedeac495271d0f%27%253B%250A%250A%252F%252F%2520Initialize%2520web3%2520contract%250Aconst%2520DAI%2520%253D%2520new%2520web3.eth.Contract%28DAIAbi%252C%2520DAIAddress%29%253B%250Aconst%2520idleToken%2520%253D%2520new%2520web3.eth.Contract%28idleTokenAbi%252C%2520idleDAI%29%253B%250A%250A%252F%252F%2520Approve%2520contract%250Aconst%2520_amount%2520%253D%2520%271000000000000000000%27%253B%2520%252F%252F%25201%2520DAI%250Aawait%2520DAI.approve%28idleTokenAddress%252C%2520_amount%252C%2520%257B%2520from%253A%2520user%2520%257D%29%253B%250A%250A%252F%252F%2520Deposit%2520tokens%250Aawait%2520idleToken.mintIdleToken%28_amount%252C%2520true%252C%2520user%252C%2520%257B%2520from%253A%2520user%2520%257D%29%253B'}\n                  >\n                  </iframe>\n                </Flex>\n              </Flex>\n            </Flex>\n          </Box>\n        </Box>\n\n        <Box\n          pt={[4,5]}\n          pb={[4,4]}\n          id={'investors'}\n        >\n          <Box\n            mx={'auto'}\n            maxWidth={['50em','70em']}\n          >\n            <Title\n              mb={3}\n              mt={[3,4]}\n              fontWeight={5}\n              fontSize={[5,6]}\n              component={Heading.h4}\n            >\n              Backed By\n            </Title>\n            <Text\n              mb={3}\n              fontSize={[2,3]}\n              fontWeight={500}\n              color={'cellTitle'}\n              textAlign={'center'}\n            >\n              Idle has been funded by industry leaders\n            </Text>\n            <FlexCards\n              justifyContent={'center'}\n              itemsPerRow={4}\n              cards={[\n                {\n                  link:'https://consensys.net',\n                  image:'images/investors/consensys.png'\n                },\n                {\n                  link:'https://www.gumi-cryptos.com',\n                  image:'images/investors/gumi.png'\n                },\n                {\n                  link:'https://www.greenfield.one',\n                  image:'images/investors/greenfield.png'\n                },\n                /*\n                {\n                  link:'https://quantstamp.com',\n                  image:'images/investors/quantstamp.png'\n                },\n                */\n                {\n                  link:'https://dialectic.ch',\n                  image:'images/investors/dialectic.png'\n                },\n                {\n                  link:'https://www.thelao.io',\n                  image:'images/investors/the-lao.png'\n                },\n                {\n                  link:'https://br.capital',\n                  image:'images/investors/br-capital.png'\n                },\n                {\n                  link:'https://www.longhashventures.com',\n                  image:'images/investors/lh-ventures.png'\n                },\n              ]}\n              {...this.props}\n            />\n          </Box>\n        </Box>\n\n        <Box\n          pt={[4,5]}\n          pb={[4,4]}\n          id={'protocols'}\n        >\n          <Box\n            mx={'auto'}\n            maxWidth={['50em','70em']}\n          >\n            <Title\n              mb={3}\n              mt={[3,4]}\n              fontWeight={5}\n              fontSize={[5,6]}\n              component={Heading.h4}\n            >\n              Built with the best\n            </Title>\n            <Text\n              mb={3}\n              px={2}\n              fontSize={[2,3]}\n              fontWeight={500}\n              color={'cellTitle'}\n              textAlign={'center'}\n            >\n              Idle infrastructure rely on the most powerful DeFi protocols\n            </Text>\n            <FlexCards\n              imageProps={{\n                width:'80%'\n              }}\n              maxItemPerc={25}\n              justifyContent={'center'}\n              cards={[\n                {\n                  link:'https://app.compound.finance',\n                  image:'images/partners/compound.svg'\n                },\n                /*\n                {\n                  link:'https://fulcrum.trade',\n                  image:'images/partners/fulcrum.svg'\n                },\n                */\n                {\n                  link:'https://aave.com',\n                  image:'images/partners/aave.svg'\n                },\n                {\n                  link:'https://dydx.exchange',\n                  image:'images/partners/dydx.svg'\n                },\n                /*\n                {\n                  link:'https://cream.finance',\n                  image:'images/partners/cream.svg'\n                },\n                */\n              ]}\n              {...this.props}\n            />\n          </Box>\n        </Box>\n\n        <Box id=\"faq\" pt={[4,5]} pb={[4,6]}>\n          <Box maxWidth={['50em','60em']} mx={'auto'} px={[3,5]}>\n            <Faq selectedToken={this.props.selectedToken} tokenConfig={this.props.tokenConfig} />\n          </Box>\n        </Box>\n\n        <Flex id=\"contacts\" flexDirection={'column'} position={'relative'} justifyContent={'center'} alignItems={'center'} pb={[3,6]} px={[3,6]}>\n          <Flex flexDirection={'column'} justifyContent={['center','flex-start']} alignItems={['center','flex-start']} width={1} maxWidth={['35em','70em']}>\n            <Heading.h3 color={'blue'} textAlign={['center','left']} fontWeight={4} lineHeight={'initial'} fontSize={[4,5]}>\n              Don't be shy, let's talk.\n            </Heading.h3>\n            <Heading.h3 color={'dark-gray'} textAlign={['center','left']} fontWeight={4} lineHeight={'initial'} fontSize={[4,5]}>\n              Let's build something great together.\n            </Heading.h3>\n            <NewsletterForm />\n          </Flex>\n        </Flex>\n\n        <Footer tokenConfig={this.props.tokenConfig} />\n\n        {\n          this.props.toastMessageProps &&\n            <FloatingToastMessage isMobile={this.props.isMobile} {...this.props.toastMessageProps} handleClose={this.props.closeToastMessage} />\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Landing;\n"],"sourceRoot":""}