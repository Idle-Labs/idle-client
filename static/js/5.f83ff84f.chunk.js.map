{"version":3,"sources":["Governance/ProposalListFilters/ProposalListFilters.module.scss","Governance/NewProposal/NewProposal.module.scss","Governance/ProposalField/ProposalField.js","Governance/ProposalListFilters/ProposalListFilters.js","Governance/ProposalsList/ProposalsList.js","Governance/DelegateField/DelegateField.js","Governance/DelegatesList/DelegatesList.js","Governance/Overview.js","Governance/DelegateVote/DelegateVote.js","Governance/Delegate.js","Governance/NewProposal/NewProposal.js","Governance/CastVote/CastVote.js","Governance/ProposalDetails/ProposalDetails.js","Governance/Proposals.js","Governance/DelegateDetails/DelegateDetails.js","Governance/Leaderboard.js","Governance/Governance.js"],"names":["module","exports","radioBtn","input","ProposalField","state","functionsUtil","this","setProps","props","FunctionsUtil","loadUtils","prevProps","prevState","icon","color","output","fieldInfo","proposal","Object","assign","fieldProps","fontWeight","fontSize","style","maxWidth","overflow","whiteSpace","textOverflow","flexProps","justifyContent","keys","length","forEach","p","name","formattedDate","strToMoment","timestamp","format","react_default","a","createElement","index_es","alignItems","align","size","isMobile","id","title","forVotes","BNify","div","againstVotes","totalVotes","plus","formatMoney","toFixed","support","delegate","toLowerCase","vote","votes","find","v","voter","SmartNumber","number","Component","ProposalListFilters","minWidth","maxHeight","isOpened","activeFilters","status","assets","actions","setFilter","filter","value","_this","setState","objectSpread","defineProperty","applyFilters","toggle","arguments","undefined","toggleOpened","resetFilter","resetFilters","_this2","mb","top","width","zIndex","flexDirection","position","DashboardCard","cardProps","py","px","transition","isInteractive","handleClick","cursor","onClick","mt","borderTop","concat","theme","colors","divider","filters","map","filterCategory","filterValues","key","flexBasis","flex","TableCellHeader","pb","toUpperCase","filterValue","filterLabel","isChecked","my","label","checked","className","styles","onChange","e","Text","mainColor","ml","values","filterName","mr","textTransform","hoverColor","textAlign","ProposalsList","page","loading","rowsPerPage","totalRows","totalPages","pending","active","canceled","defeated","succeeded","queued","expired","executed","processedRows","lastBlockNumber","processList","proposals","sort","b","Math","ceil","i","push","preventDefault","max","min","pageChanged","proposalsChanged","JSON","stringify","filtersEnabled","hasActiveFilters","hasRows","m","FlexLoader","minHeight","loaderProps","textProps","text","pt","Governance_ProposalListFilters_ProposalListFilters","bind","TableHeader","cols","index","proposalId","TableRow","rowProps","goToSection","fieldComponent","rowId","cardId","height","prevPage","nextPage","h3","fontFamily","DelegateField","loadData","getENSName","ensName","opts","bgcolor","spotcolor","seed","DelegatesList","delegates","maxRows","splice","delegatesChanged","delegateId","Overview","totalSupply","dataLoaded","votesDelegated","governanceUtil","GovernanceUtil","Promise","all","getDelegates","getProposals","getTotalSupply","reduce","d","parseFloat","Title","pr","StatsCard","labelTooltip","titleMinHeight","pl","Governance_ProposalsList_ProposalsList","fields","mobile","parentProps","Governance_DelegatesList_DelegatesList","DelegateVote","newDelegate","processing","txHash","checkNewDelegate","checkAddress","currentDelegate","changeDelegate","target","address","setDelegate","tx","error","eventData","eventCategory","eventAction","eventLabel","getTransactionError","sendGoogleAnalyticsEvent","loadUserData","transactionHash","_this3","isUndelegated","parseInt","account","canClose","right","icononly","closeFunc","themeMode","ethInput","ethInputDark","TxProgressBar","waitText","hash","endMessage","cancelTransaction","type","required","borderRadius","borderColor","backgroundColor","boxShadow","placeholder","border","RoundButton","buttonProps","mx","disabled","redeem","ConnectBox","Delegate","Breadcrumb","path","Governance_DelegateVote_DelegateVote","NewProposal","txError","actionValue","customABI","description","validated","newAction","editAction","actionInputs","actionValid","customAddress","contractOptions","proposalCreated","functionsOptions","selectedContract","selectedFunction","selectedSignature","availableFunctions","availableContracts","validateForm","checkInputs","loadFunctionsOptions","getGlobalConfig","contractName","field","contractABI","parse","err","getContractABI","f","constant","inputs","includes","stateMutability","unshift","newState","Array","valid","isValidJSON","fieldPattern","getPatternByFieldType","toString","match","returnString","RegExp","inputValue","inputIndex","inputInfo","inputValid","validateField","split","n","toBN","substr","contract","getContractByName","_address","inputTypes","calldata","web3","eth","abi","encodeParameters","signature","join","action","params","function","_this4","targets","signatures","calldatas","propose","_this5","transactions","completed","gte","proposalThreshold","onSubmit","handleSubmit","borderBottom","h4","handleInput","rows","actionIndex","titleParentProps","titleProps","setEditAction","display","counter","cardBg","options","changeContract","pattern","changeFunction","payable","valueChange","fieldType","inputChange","addAction","deleteAction","actionBg","proposalMaxOperations","setNewAction","balance","fixTokenDecimals","CastVote","loaded","userVote","voteSucceed","showDelegateBox","setVote","castVote","callback","Governance_ProposalField_ProposalField","lte","toggleDelegateBox","onMouseDown","isActive","gt","ProposalDetails","showActionParams","callbackReceipt","queueProposal","executeProposal","window","creationTime","states","start_time","lastState","pop","hasVotes","forVotesPerc","times","againstVotesPerc","endTime","blocksToSeconds","votingPeriod","forVotesAddrs","lt","againstVotesAddrs","canQueue","canExecute","Date","getTime","timelockDelay","utc","ExtLink","href","getEtherscanAddressUrl","proposer","ShortHash","lineHeight","Governance_CastVote_CastVote","data","decodedParams","attrs","decodeParameters","toggleShowParams","param","paramIndex","stateInfo","stateIndex","rel","getEtherscanTransactionUrl","trx_hash","wordBreak","dangerouslySetInnerHTML","__html","background","voteInfo","voteIndex","Proposals","addProposal","selectedProposal","contractsInitialized","item_id","foundProposal","pathLink","CardIconButton","Governance_ProposalDetails_ProposalDetails","Governance_NewProposal_NewProposal","DelegateDetails","loadProposals","rank","Leaderboard","selectedDelegate","Governance_DelegateDetails_DelegateDetails","Dashboard","menu","baseRoute","modalTitle","clickEvent","activeModal","menuOpened","blockNumber","currentRoute","modalContent","pageComponent","currentSection","selectedSection","selectedSubsection","timeoutId","resetModal","openTooltipModal","setActiveModal","logout","_callee","regenerator_default","wrap","_context","prev","next","setConnector","initWeb3","stop","extraicons","submenu","selected","route","component","bgColor","primary","image","imageDark","iconDark","imageInactive","iconInactive","imageInactiveDark","iconInactiveDark","isExternalLink","location","sectionRoute","section","subm","sendGoogleAnalyticsPageview","clearTimeout","setCurrentSection","loadMenu","loadParams","setTimeout","accountInizialized","showResetButton","currentNetwork","getRequiredNetwork","governanceConfig","governanceEnabled","enabled","availableNetworks","console","log","prevParams","accountChanged","isGovernance","replace","newRoute","scrollTo","getBlockNumber","getVotingPeriod","getTimelockDelay","getProposalParams","getCurrentVotes","getTokensBalance","getCurrentDelegate","setMenu","dir","PageComponent","Swipeable","swipeCallback","bottom","menuRightBorder","borderRight","DashboardMenu","closeMenu","overflowY","overflowX","DashboardHeader","toggleMenu","urlParams","network","isCorrectNetwork","textSize","capitalize","current","TooltipModal","closeModal","content","isOpen"],"mappings":"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","file":"static/js/5.f83ff84f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"ProposalListFilters_radioBtn__2_8YL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"NewProposal_input__KvbCb\"};","import React, { Component } from 'react';\nimport { Flex, Text, Icon } from \"rimble-ui\";\nimport SmartNumber from '../../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ProposalField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const proposal = Object.assign({},this.props.proposal);\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n\n    switch (fieldInfo.name){\n      case 'date':\n        const formattedDate = this.functionsUtil.strToMoment(proposal.timestamp*1000).format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        const state = fieldInfo.state ? fieldInfo.state : proposal.state;\n        switch (state) {\n          case 'Pending':\n            icon = \"HourglassEmpty\";\n            color = '#a5a5a5';\n          break;\n          case 'Active':\n            icon = \"Adjust\";\n            color = '#a5a5a5';\n          break;\n          case 'Canceled':\n            icon = \"Cancel\";\n            color = '#fa0000';\n          break;\n          case 'Defeated':\n            icon = \"Block\";\n            color = '#fa0000';\n          break;\n          case 'Succeeded':\n            icon = \"Done\";\n            color = '#00b84a';\n          break;\n          case 'Queued':\n            icon = \"Timelapse\";\n            color = '#ff9900';\n          break;\n          case 'Expired':\n            icon = \"ErrorOutline\";\n            color = '#a5a5a5';\n          break;\n          case 'Executed':\n            icon = \"CheckCircle\";\n            color = '#00b84a';\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            {...fieldProps}\n            alignItems={'center'}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ fieldProps.size ? fieldProps.size : (this.props.isMobile ? '1em' : '1.8em') }\n            />\n          </Flex>\n        );\n      break;\n      case 'id':\n        output = (\n          <Text {...fieldProps}>{proposal.id}</Text>\n        );\n      break;\n      case 'title':\n        output = (\n          <Text {...fieldProps}>{proposal.title}</Text>\n        );\n      break;\n      case 'votes':\n        const forVotes = this.functionsUtil.BNify(proposal.forVotes).div(1e18);\n        const againstVotes = this.functionsUtil.BNify(proposal.againstVotes).div(1e18);\n        const totalVotes = forVotes.plus(againstVotes);\n        output = (\n          <Text {...fieldProps}>{this.functionsUtil.formatMoney(totalVotes.toFixed(0,1),0)}</Text>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{proposal.state}</Text>\n        );\n      break;\n      case 'support':\n        let support = null;\n        if (this.props.delegate){\n          const delegate = this.props.delegate.delegate.toLowerCase();\n          const vote = proposal.votes.find( v => (v.voter.toLowerCase() === delegate) );\n          if (vote){\n            support = vote.support;\n          }\n        }\n        output = (\n          <Text {...fieldProps}>{ support === null ? 'NONE' : (support ? 'FOR' : 'AGAINST') }</Text>\n        );\n      break;\n      case 'forVotes':\n        output = (\n          <SmartNumber {...fieldProps} number={proposal.forVotes} />\n        );\n      break;\n      case 'againstVotes':\n        output = (\n          <SmartNumber {...fieldProps} number={proposal.againstVotes} />\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default ProposalField;\n","import React, { Component } from 'react';\nimport styles from './ProposalListFilters.module.scss';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\nimport TableCellHeader from '../../TableCellHeader/TableCellHeader';\n\nclass ProposalListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${this.props.theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ProposalListFilters;","import React, { Component } from 'react';\nimport TableRow from '../../TableRow/TableRow';\nimport FlexLoader from '../../FlexLoader/FlexLoader';\nimport TableHeader from '../../TableHeader/TableHeader';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport ProposalField from '../ProposalField/ProposalField';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport ProposalListFilters from '../ProposalListFilters/ProposalListFilters';\n\nclass ProposalsList extends Component {\n\n  state = {\n    page:1,\n    loading:true,\n    rowsPerPage:10,\n    totalRows:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n    },\n    filters:{\n      status:{\n        pending:'Pending',\n        active:'Active',\n        canceled:'Canceled',\n        defeated:'Defeated',\n        succeeded:'Succeeded',\n        queued:'Queued',\n        expired:'Expired',\n        executed:'Executed'\n      },\n    },\n    processedRows:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);\n    this.processList(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.processList();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processList();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n      }\n    },() => {\n      this.processList();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const pageChanged = prevState.page !== this.state.page;\n    const proposalsChanged = JSON.stringify(prevProps.proposals) !== JSON.stringify(this.props.proposals);\n    if (pageChanged || proposalsChanged){\n      this.processList();\n    }\n  }\n\n  processList = (page=null) => {\n\n    if (!this.props.proposals){\n      return false;\n    }\n\n    page = page ? page : this.state.page;\n\n    const rowsPerPage = this.props.rowsPerPage ? this.props.rowsPerPage : this.state.rowsPerPage;\n\n    // Sort Proposals by timeStamp\n    const proposals = Object.values(this.props.proposals)\n                        .filter(p => (\n                          (this.state.activeFilters.status === null || p.state.toLowerCase() === this.state.activeFilters.status.toLowerCase())\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timestamp > b.timestamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalRows = proposals.length;\n    const totalPages = Math.ceil(totalRows/rowsPerPage);\n\n    const processedRows = [];\n\n    proposals.forEach((p, i) => {\n      if (i>=((page-1)*rowsPerPage) && i<((page-1)*rowsPerPage)+rowsPerPage) {\n        processedRows.push(p);\n      }\n    });\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalRows,\n      totalPages,\n      processedRows\n    });\n  }\n\n  render() {\n\n    const filtersEnabled = typeof this.props.filtersEnabled === 'undefined' || this.props.filtersEnabled;\n    const hasActiveFilters = filtersEnabled && Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n    const processedRows = this.state.processedRows ? Object.values(this.state.processedRows) : null;\n    const hasRows = processedRows && processedRows.length>0;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          (this.state.loading || !this.state.processedRows === null) ? (\n            <FlexLoader\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'row'\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading Proposals...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'proposals-list-container'}\n              pt={[0, (!filtersEnabled || !hasRows ? 0 : hasActiveFilters ? '116px' : 5) ] }\n            >\n              {\n                hasRows ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    {\n                      filtersEnabled &&\n                        <ProposalListFilters\n                          {...this.props}\n                          filters={this.state.filters}\n                          activeFilters={this.state.activeFilters}\n                          resetFilters={this.resetFilters.bind(this)}\n                          applyFilters={this.applyFilters.bind(this)}\n                        />\n                    }\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'proposals-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedRows.map( (proposal,index) => {\n                          const proposalId = proposal.id;\n                          const handleClick = (e) => {\n                            return (proposalId ? this.props.goToSection(`proposals/${proposalId}`) : null);\n                          };\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              id={proposalId}\n                              proposal={proposal}\n                              handleClick={handleClick}\n                              key={`proposal-${proposalId}`}\n                              fieldComponent={ProposalField}\n                              rowId={`proposal-col-${proposalId}`}\n                              cardId={`proposal-card-${proposalId}`}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'proposals-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'pageActive' : 'pageInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'pageActive' : 'pageInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                    fontFamily={'sansSerif'}\n                  >\n                    There are no proposals\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ProposalsList;\n","import React, { Component } from 'react';\nimport { Flex, Text, Blockie, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass DelegateField extends Component {\n\n  state = {\n    value:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const delegateChanged = JSON.stringify(prevProps.delegate) !== JSON.stringify(this.props.delegate);\n    if (delegateChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const fieldInfo = this.props.fieldInfo;\n    const delegate = Object.assign({},this.props.delegate);\n\n    let value = delegate[fieldInfo.name];\n    switch (fieldInfo.name){\n      case 'votes':\n        value = this.functionsUtil.formatMoney(this.functionsUtil.BNify(value).toFixed(2,1),2);\n      break;\n      case 'delegate':\n        const ensName = await this.functionsUtil.getENSName(value);\n        value = ensName || value;\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      value\n    });\n  }\n\n  render(){\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const delegate = Object.assign({},this.props.delegate);\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'avatar':\n        output = (\n          <Flex\n            {...fieldProps}\n            alignItems={'center'}\n            justifyContent={'center'}\n          >\n            <Blockie\n              opts={{\n                size: 7,\n                color: \"#dfe\",\n                bgcolor: \"#a71\",\n                spotcolor: \"#000\",\n                seed: delegate.delegate,\n              }}\n            />\n          </Flex>\n        );\n      break;\n      default:\n        output = this.state.value !== null ? (\n          <Text\n            {...fieldProps}\n          >\n            {this.state.value}\n          </Text>\n        ) : (<Loader size={\"20px\"} />);\n      break;\n    }\n    return output;\n  }\n}\n\nexport default DelegateField;\n","import React, { Component } from 'react';\nimport TableRow from '../../TableRow/TableRow';\nimport FlexLoader from '../../FlexLoader/FlexLoader';\nimport TableHeader from '../../TableHeader/TableHeader';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport DelegateField from '../DelegateField/DelegateField';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\n\nclass DelegatesList extends Component {\n\n  state = {\n    page:1,\n    filters:{},\n    loading:true,\n    rowsPerPage:10,\n    totalRows:null,\n    totalPages:null,\n    activeFilters:{},\n    processedRows:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);\n    this.processList(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.processList();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processList();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n      }\n    },() => {\n      this.processList();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const pageChanged = prevState.page !== this.state.page;\n    const delegatesChanged = JSON.stringify(prevProps.delegates) !== JSON.stringify(this.props.delegates);\n    if (pageChanged || delegatesChanged){\n      this.processList();\n    }\n  }\n\n  processList = (page=null) => {\n\n    if (!this.props.delegates){\n      return false;\n    }\n\n    page = page ? page : this.state.page;\n\n    const rowsPerPage = this.props.rowsPerPage ? this.props.rowsPerPage : this.state.rowsPerPage;\n\n    // Sort Proposals by timeStamp\n    let delegates = Object.values(this.props.delegates)\n                        .sort((a,b) => (a.timestamp > b.timestamp) ? -1 : 1 );\n\n    if (this.props.maxRows !== null && this.props.maxRows>0){\n      delegates = delegates.splice(0,this.props.maxRows);\n    }\n\n    // Calculate max number of pages\n    const totalRows = delegates.length;\n    const totalPages = Math.ceil(totalRows/rowsPerPage);\n\n    const processedRows = [];\n\n    delegates.forEach((p, i) => {\n      if (i>=((page-1)*rowsPerPage) && i<((page-1)*rowsPerPage)+rowsPerPage) {\n        processedRows.push(p);\n      }\n    });\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalRows,\n      totalPages,\n      processedRows\n    });\n  }\n\n  render() {\n\n    const processedRows = this.state.processedRows ? Object.values(this.state.processedRows) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          (this.state.loading || !this.state.processedRows === null) ? (\n            <FlexLoader\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'row'\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading Leaderboard...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'delegates-list-container'}\n            >\n              {\n                processedRows && processedRows.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'delegates-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedRows.map( (delegate,index) => {\n                          const delegateId = delegate.delegate;\n                          const handleClick = (e) => {\n                            return (delegateId ? this.props.goToSection(`leaderboard/${delegateId}`) : null);\n                          };\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              id={delegateId}\n                              delegate={delegate}\n                              key={`delegate-${index}`}\n                              handleClick={handleClick}\n                              fieldComponent={DelegateField}\n                              rowId={`delegate-col-${index}`}\n                              cardId={`delegate-card-${index}`}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'delegates-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link\n                          mr={1}\n                          onClick={ e => this.prevPage(e) }\n                        >\n                          <Icon\n                            size={'2em'}\n                            name={'KeyboardArrowLeft'}\n                            color={ this.state.page>1 ? 'pageActive' : 'pageInactive' }\n                          />\n                        </Link>\n                        <Link\n                          onClick={ e => this.nextPage(e) }\n                        >\n                          <Icon\n                            size={'2em'}\n                            name={'KeyboardArrowRight'}\n                            color={ this.state.page<this.state.totalPages ? 'pageActive' : 'pageInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                    fontFamily={'sansSerif'}\n                  >\n                    There are no delegates\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default DelegatesList;\n","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport StatsCard from '../StatsCard/StatsCard';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport ProposalsList from './ProposalsList/ProposalsList';\nimport DelegatesList from './DelegatesList/DelegatesList';\n\nclass Overview extends Component {\n\n  state = {\n    delegates:[],\n    proposals:[],\n    totalSupply:0,\n    dataLoaded:false,\n    votesDelegated:0,\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const [\n      delegates,\n      proposals,\n      totalSupply\n    ] = await Promise.all([\n      this.governanceUtil.getDelegates(),\n      this.governanceUtil.getProposals(),\n      this.governanceUtil.getTotalSupply()\n    ]);\n\n    const votesDelegated = delegates.reduce( (votesDelegated,d) => {\n      votesDelegated = votesDelegated+parseFloat(d.votes);\n      return votesDelegated;\n    },0);\n\n    const dataLoaded = true;\n\n    this.setState({\n      delegates,\n      proposals,\n      dataLoaded,\n      totalSupply,\n      votesDelegated\n    });\n  }\n\n  render() {\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={[3,4]}\n        >\n          Governance Overview\n        </Title>\n        {\n          !this.state.dataLoaded ? (\n            <FlexLoader\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'row'\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading Data...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              <Flex\n                width={1}\n                mb={[3,4]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <Flex\n                  mb={[2,0]}\n                  pr={[0,1]}\n                  width={[1,1/4]}\n                  flexDirection={'column'}\n                >\n                  <StatsCard\n                    label={null}\n                    labelTooltip={null}\n                    title={'Votes Delegated'}\n                    minHeight={['130px','143px']}\n                    titleMinHeight={['auto','50px']}\n                    value={this.functionsUtil.formatMoney(this.state.votesDelegated.toFixed(2,1),2)}\n                  />\n                </Flex>\n                <Flex\n                  mb={[2,0]}\n                  pl={[0,1]}\n                  pr={[0,1]}\n                  width={[1,1/4]}\n                  flexDirection={'column'}\n                >\n                  <StatsCard\n                    label={null}\n                    labelTooltip={null}\n                    title={'Voting Addresses'}\n                    minHeight={['130px','143px']}\n                    titleMinHeight={['auto','50px']}\n                    value={this.state.delegates.length}\n                  />\n                </Flex>\n                <Flex\n                  mb={[2,0]}\n                  pl={[0,1]}\n                  pr={[0,1]}\n                  width={[1,1/4]}\n                  flexDirection={'column'}\n                >\n                  <StatsCard\n                    label={null}\n                    labelTooltip={null}\n                    title={'Proposals'}\n                    minHeight={['130px','143px']}\n                    titleMinHeight={['auto','50px']}\n                    value={this.state.proposals.length}\n                  />\n                </Flex>\n                <Flex\n                  pl={[0,1]}\n                  mb={[2,0]}\n                  width={[1,1/4]}\n                  flexDirection={'column'}\n                >\n                  <StatsCard\n                    label={null}\n                    labelTooltip={null}\n                    title={'IDLE Circulating'}\n                    minHeight={['130px','143px']}\n                    titleMinHeight={['auto','50px']}\n                    value={this.functionsUtil.formatMoney(this.state.totalSupply,0)}\n                  />\n                </Flex>\n              </Flex>\n              <Box\n                width={1}\n                mt={[4,5]}\n              >\n                <Title\n                  mb={[3,4]}\n                >\n                  Recent Proposals\n                </Title>\n                <Flex\n                  mb={[3,4]}\n                  width={1}\n                  id={'transactions'}\n                  flexDirection={'column'}\n                >\n                  <ProposalsList\n                    {...this.props}\n                    rowsPerPage={5}\n                    filtersEnabled={false}\n                    proposals={this.state.proposals}\n                    cols={[\n                      {\n                        title: '#',\n                        props:{\n                          width:[0.1,0.05]\n                        },\n                        fields:[\n                          {\n                            name:'id',\n                            props:{\n                            }\n                          },\n                        ]\n                      },\n                      {\n                        title:'DATE',\n                        mobile:false,\n                        props:{\n                          width:[0.15,0.12],\n                        },\n                        fields:[\n                          {\n                            name:'date'\n                          }\n                        ]\n                      },\n                      {\n                        title:'TITLE',\n                        props:{\n                          width:[0.75,0.60],\n                        },\n                        fields:[\n                          {\n                            name:'title'\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'VOTES',\n                        props:{\n                          width:[0.11,0.11],\n                        },\n                        fields:[\n                          {\n                            name:'votes'\n                          }\n                        ]\n                      },\n                      {\n                        title:'STATUS',\n                        props:{\n                          width:[0.15,0.12],\n                          alignItems:['center','flex-start'],\n                          justifyContent:['center','flex-start']\n                        },\n                        parentProps:{\n                          justifyContent:['center','flex-start']\n                        },\n                        fields:[\n                          {\n                            name:'statusIcon',\n                            props:{\n                              mr:[0,2],\n                            },\n                          },\n                          {\n                            mobile:false,\n                            name:'status'\n                          }\n                        ]\n                      },\n                    ]}\n                  />\n                </Flex>\n              </Box>\n              <Box\n                width={1}\n              >\n                <Title\n                  mb={[3,4]}\n                >\n                  Leaderboard\n                </Title>\n                <Flex\n                  mb={[3,4]}\n                  width={1}\n                  id={'transactions'}\n                  flexDirection={'column'}\n                >\n                  <DelegatesList\n                    maxRows={100}\n                    {...this.props}\n                    rowsPerPage={5}\n                    delegates={this.state.delegates}\n                    cols={[\n                      {\n                        title: 'RANK',\n                        props:{\n                          width:[0.13,0.08]\n                        },\n                        fields:[\n                          {\n                            name:'rank'\n                          },\n                        ]\n                      },\n                      {\n                        title:'ADDRESS',\n                        props:{\n                          width:[0.60,0.50],\n                        },\n                        fields:[\n                          {\n                            mobile:false,\n                            name:'avatar',\n                            props:{\n                              mr:2\n                            }\n                          },\n                          {\n                            name:'delegate'\n                          }\n                        ]\n                      },\n                      {\n                        title:'VOTES',\n                        props:{\n                          width:[0.27,0.12],\n                        },\n                        fields:[\n                          {\n                            name:'votes'\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'VOTE WEIGHT',\n                        props:{\n                          width:[0.15,0.15],\n                        },\n                        fields:[\n                          {\n                            name:'vote_weight',\n                            parentProps:{\n                              alignItems:'center'\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'PROPOSALS VOTED',\n                        props:{\n                          width:[0.15,0.15],\n                        },\n                        fields:[\n                          {\n                            name:'proposals',\n                            parentProps:{\n                              alignItems:'center'\n                            }\n                          }\n                        ]\n                      },\n                    ]}\n                  />\n                </Flex>\n              </Box>\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Overview;\n","import React, { Component } from 'react';\nimport ConnectBox from '../../ConnectBox/ConnectBox';\nimport FlexLoader from '../../FlexLoader/FlexLoader';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport styles from '../../CryptoInput/CryptoInput.module.scss';\nimport { Flex, Text, Input, Button, Box, EthAddress } from \"rimble-ui\";\n\nclass DelegateVote extends Component {\n\n  state = {\n    newDelegate:'',\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  }\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  checkNewDelegate = () => {\n    return this.functionsUtil.checkAddress(this.state.newDelegate) && this.state.newDelegate.toLowerCase() !== this.props.currentDelegate.toLowerCase();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  setDelegate(address){\n    const addressOk = this.functionsUtil.checkAddress(address);\n\n    if (addressOk){\n\n      const callback = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventCategory: 'Delegate',\n          eventAction: address,\n          eventLabel: tx.status\n        };\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        if (typeof this.props.loadUserData === 'function' && tx.status === 'success'){\n          this.props.loadUserData();\n        }\n\n        this.setState({\n          processing: {\n            txHash:null,\n            loading:false\n          }\n        });\n      };\n\n      const callbackReceipt = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      this.governanceUtil.setDelegate(address,callback,callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    }\n    return null;\n  }\n\n  changeDelegate = (e) => {\n    const newDelegate = e.target.value;\n    this.setState({\n      newDelegate\n    });\n  }\n\n  render() {\n    const isUndelegated = parseInt(this.props.currentDelegate) === 0;\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n        !this.props.account ? (\n          <Flex\n            width={[1,0.36]}\n            alignItems={'stretch'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            <ConnectBox\n              {...this.props}\n            />\n          </Flex>\n        ) : this.props.currentDelegate ? (\n          <DashboardCard\n            cardProps={{\n              mb:2,\n              py:[2,3],\n              px:[3,4],\n              width:[1,0.5],\n              position:'relative',\n            }}\n            isInteractive={false}\n          >\n            {\n              this.props.canClose &&\n                <Box\n                  top={'0'}\n                  zIndex={1}\n                  right={'0'}\n                  position={'absolute'}\n                >\n                  <Button.Text\n                    icononly\n                    icon={'Close'}\n                    size={'2.5em'}\n                    mainColor={'statValue'}\n                    onClick={this.props.closeFunc}\n                  />\n                </Box>\n            }\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                /*\n                <Text\n                  mb={2}\n                  fontWeight={3}\n                  fontSize={[2,3]}\n                  color={'dark-gray'}\n                  textAlign={'center'}\n                >\n                  You have {this.functionsUtil.fixTokenDecimals(this.props.balance,18).toFixed(4)} {this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])} available.\n                </Text>\n                */\n              }\n              <Text\n                mb={1}\n                fontWeight={3}\n                color={'statValue'}\n                textAlign={'center'}\n              >\n                Current Delegate:\n              </Text>\n              <Flex\n                mb={3}\n                width={1}\n                alignItems={'center'}\n                justifyContent={isUndelegated ? 'center' : 'stretch'}\n              >\n                {\n                  isUndelegated ? (\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'dark-gray'}\n                      textAlign={'center'}\n                    >\n                      Undelegated\n                    </Text>\n                  ) : (\n                    <EthAddress\n                      width={1}\n                      address={this.props.currentDelegate}\n                      className={ this.props.themeMode === 'light' ? styles.ethInput : styles.ethInputDark }\n                    />\n                  )\n                }\n              </Flex>\n              {\n                this.state.processing && this.state.processing.loading ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      waitText={`Delegate estimated in`}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing delegate request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                    />\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mb={1}\n                      fontWeight={3}\n                      color={'statValue'}\n                      textAlign={'center'}\n                    >\n                      Set New Delegate:\n                    </Text>\n                    <Input\n                      min={0}\n                      type={'text'}\n                      width={'100%'}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      textAlign={'center'}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      value={this.state.newDelegate}\n                      placeholder={`Insert delegate address`}\n                      onChange={this.changeDelegate.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                    />\n                    <Flex\n                      mt={3}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          mx:1,\n                          fontSize:[1,2],\n                          width:['auto','10em'],\n                          disabled:!this.checkNewDelegate()\n                        }}\n                        handleClick={ e => this.setDelegate(this.state.newDelegate) }\n                      >\n                        Delegate\n                      </RoundButton>\n                      <RoundButton\n                        buttonProps={{\n                          mx:1,\n                          fontSize:[1,2],\n                          width:['auto','10em'],\n                          mainColor:this.props.theme.colors.redeem,\n                          disabled:this.props.currentDelegate.toLowerCase() === this.props.account.toLowerCase()\n                        }}\n                        handleClick={ e => this.setDelegate(this.props.account) }\n                      >\n                        Self-delegate\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </DashboardCard>\n        ) : (\n          <FlexLoader\n            flexProps={{\n              minHeight:'50vh',\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Loading Delegate...'}\n          />\n        )\n       } \n      </Flex>\n    );\n  }\n}\n\nexport default DelegateVote;","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport DelegateVote from './DelegateVote/DelegateVote';\n\nclass Delegate extends Component {\n\n  render() {\n    return (\n      <Box\n        width={1}\n      >\n        <Flex\n          mb={3}\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'flex-start'}\n        >\n          <Breadcrumb\n            {...this.props}\n            text={'Governance'}\n            path={['Delegate votes']}\n            isMobile={this.props.isMobile}\n            handleClick={ e => this.props.goToSection('') }\n          />\n        </Flex>\n        <Box\n          width={1}\n        >\n          <Title\n            mb={[3,4]}\n          >\n            Delegate Votes\n          </Title>\n          <Flex\n            px={[0,3]}\n            mb={[3,4]}\n            width={1}\n            flexDirection={'column'}\n            id={'delegate-container'}\n          >\n            <DelegateVote\n              {...this.props}\n            />\n          </Flex>\n        </Box>\n      </Box>\n    );\n  }\n}\n\nexport default Delegate;\n","import Title from '../../Title/Title';\nimport React, { Component } from 'react';\nimport styles from './NewProposal.module.scss';\nimport DelegateVote from '../DelegateVote/DelegateVote';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport { Flex, Text, Heading, Input, Form, Field, Textarea, Icon, Select, Link } from \"rimble-ui\";\n\nclass NewProposal extends Component {\n\n  state = {\n    title:'',\n    actions:[],\n    txError:false,\n    actionValue:0,\n    customABI:null,\n    description:'',\n    processing: {\n      txHash:null,\n      loading:false\n    },\n    validated:false,\n    newAction:false,\n    editAction:null,\n    actionInputs:null,\n    actionValid:false,\n    customAddress:null,\n    contractOptions:[],\n    proposalCreated:false,\n    functionsOptions:null,\n    selectedContract:null,\n    selectedFunction:null,\n    selectedSignature:null,\n    availableFunctions:null,\n    availableContracts:null\n  }\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const customABIChanged = prevState.customABI !== this.state.customABI;\n    // console.log('customABIChanged',customABIChanged,this.state.selectedContract);\n    if (customABIChanged && this.state.selectedContract === 'custom'){\n      this.loadFunctionsOptions();\n    }\n  }\n\n  loadData(){\n    const availableContracts = this.functionsUtil.getGlobalConfig(['governance','props','availableContracts']);\n    const contractOptions = [\n      {label:'Select a Contract',value:null}\n    ];\n\n    Object.keys(availableContracts).forEach( contractName => {\n      contractOptions.push({label:contractName,value:contractName});\n    });\n\n    contractOptions.push({label:'Custom',value:'custom'});\n\n    this.setState({\n      contractOptions,\n      availableContracts\n    });\n  }\n\n  handleInput(field,e,type=null){\n    let value = e.target.value;\n    this.setState({\n      [field]:value\n    });\n  }\n\n  validateForm(){\n    const validated = this.state.title.length>0 && this.state.description.length>0 && Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getContractABI(selectedContract=null){\n    selectedContract = selectedContract ? selectedContract : this.state.selectedContract;\n\n    let contractABI = null;\n    try {\n      contractABI = selectedContract === 'custom' ? JSON.parse(this.state.customABI) : this.state.availableContracts[selectedContract];\n    } catch (err) {\n      \n    }\n    return contractABI;\n  }\n\n  loadFunctionsOptions(selectedContract=null){\n    let actionInputs = null;\n    let functionsOptions = null;\n    let selectedFunction = null;\n    let selectedSignature = null;\n    let availableFunctions = null;\n\n    const contractABI = this.getContractABI(selectedContract);\n    if (contractABI){\n      availableFunctions = contractABI.filter( f => (!f.constant && f.type === 'function' && f.inputs.length>0 && ['nonpayable','payable'].includes(f.stateMutability)) )\n      functionsOptions = availableFunctions.map( (f,index) => ({\n                          label:f.name,\n                          value:index\n                        }));\n\n      // Add default option\n      functionsOptions.unshift({label:'Select a Function',value:null});\n    }\n\n    // console.log('loadFunctionsOptions',contractABI,functionsOptions);\n\n    this.setState({\n      actionInputs,\n      functionsOptions,\n      selectedFunction,\n      selectedSignature,\n      availableFunctions\n    });\n  }\n\n  changeContract(e){\n    const selectedContract = e.target.value;\n    const selectedContractChanged = selectedContract !== this.state.selectedContract;\n\n    if (selectedContractChanged){\n\n      // Reset function\n      let selectedFunction = null;\n      let selectedSignature = null;\n\n      const newState = {\n        selectedContract,\n        selectedFunction,\n        selectedSignature\n      };\n\n      // Load contract functions\n      if (selectedContract !== null){\n        const contractABI = this.getContractABI(selectedContract);\n        if (contractABI){\n          this.loadFunctionsOptions(selectedContract);\n        } else {\n          newState.functionsOptions = null;\n        }\n      }\n\n      // console.log('changeContract',newState);\n\n      this.setState(newState);\n    }\n  }\n\n  changeFunction(e){\n    const actionValue = 0;\n    let actionInputs = null;\n    const selectedSignature = e.target.value;\n    let selectedFunction = this.state.availableFunctions.find( (f,index) => (index === parseInt(selectedSignature)) );\n\n    if (selectedFunction){\n      actionInputs = new Array(selectedFunction.inputs.length);\n    } else {\n      selectedFunction  = null;\n    }\n\n    this.setState({\n      actionValue,\n      actionInputs,\n      selectedFunction,\n      selectedSignature\n    })\n  }\n  validateField(value,type){\n    if (value===null){\n      return false;\n    }\n    let valid = true;\n    if (type === 'json'){\n      valid = this.functionsUtil.isValidJSON(value);\n    } else {\n      const fieldPattern = this.getPatternByFieldType(type);\n      if (fieldPattern){\n        valid = value.toString().match(fieldPattern) !== null;\n      }\n    }\n    return valid;\n  }\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs || !this.state.selectedFunction){\n      return false;\n    }\n\n    const inputs = this.state.selectedFunction.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    // Check custom token\n    if (actionValid && this.state.selectedContract === 'custom'){\n      actionValid = actionValid && this.validateField(this.state.customABI,'json') && this.validateField(this.state.customAddress,'address');\n    }\n\n    // console.log('actionValid',this.state.selectedContract,this.validateField(this.state.customABI,'json'),this.state.customAddress,this.validateField(this.state.customAddress,'address'),actionValid);\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n        const selectedContract = null;\n        const selectedFunction = null;\n        const selectedSignature = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs,\n          selectedContract,\n          selectedFunction,\n          selectedSignature\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.selectedFunction.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.selectedFunction.inputs.length){\n      return false;\n    }\n\n    // Check contract\n    let target = null;\n    if (this.state.selectedContract !== 'custom'){\n      const contract = this.functionsUtil.getContractByName(this.state.selectedContract);\n      if (!contract){\n        return false;\n      } else {\n        target = contract._address;\n      }\n    } else {\n      const contractABIValid = this.functionsUtil.isValidJSON(this.state.customABI);\n      if (!contractABIValid){\n        return false;\n      } else {\n        target = this.state.customAddress;\n      }\n    }\n    \n    const customABI = this.state.customABI;\n    const customAddress = this.state.customAddress;\n    const inputTypes = this.state.selectedFunction.inputs.map( i => (i.type) );\n    const calldata = this.props.web3.eth.abi.encodeParameters(inputTypes,inputs);\n    const signature = this.state.selectedFunction.name+'('+inputTypes.join(',')+')';\n    const value = this.state.actionValue ? this.functionsUtil.BNify(this.state.actionValue).toFixed(0) : this.functionsUtil.BNify(0).toFixed(0);\n\n    const action = {\n      params:{\n        value,\n        target,\n        calldata,\n        signature\n      },\n      customABI,\n      customAddress,\n      inputs:this.state.actionInputs,\n      function:this.state.selectedFunction,\n      contract:this.state.selectedContract,\n      signature:this.state.selectedSignature\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n    const customABI = action.customABI;\n    const actionValue = action.params.value;\n    const selectedContract = action.contract;\n    const selectedFunction = action.function;\n    const customAddress = action.customAddress;\n    const selectedSignature = action.signature;\n\n    this.setState({\n      customABI,\n      newAction,\n      editAction,\n      actionValue,\n      actionInputs,\n      customAddress,\n      selectedContract,\n      selectedFunction,\n      selectedSignature\n    });\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n    const selectedContract = null;\n    const selectedFunction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n      selectedContract,\n      selectedFunction\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  handleSubmit(e){\n    e.preventDefault();\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventAction: 'propose',\n        eventCategory: 'Proposal',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx.status === 'success';\n\n      const newState = {\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      };\n      \n      if (txSucceeded){\n        newState.actionValue = 0;\n        newState.customABI = null;\n        newState.newAction = null;\n        newState.editAction = null;\n        newState.actionInputs = null;\n        newState.customAddress = null;\n        newState.proposalCreated = true;\n        newState.selectedContract = null;\n        newState.functionsOptions = null;\n        newState.selectedFunction = null;\n        newState.selectedSignature = null;\n      } else {\n        newState.txError = true;\n      }\n\n      this.setState(newState);\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const targets = [];\n    const values = [];\n    const signatures = [];\n    const calldatas = [];\n    const description = '#'+this.state.title+\"\\n\"+this.state.description;\n\n    Object.values(this.state.actions).forEach( action => {\n      values.push(action.params.value);\n      targets.push(action.params.target);\n      calldatas.push(action.params.calldata);\n      signatures.push(action.params.signature);\n    });\n\n    this.governanceUtil.propose(targets, values, signatures, calldatas, description, callback, callbackReceipt);\n    // this.governanceUtil.proposeAndVoteFor(targets, values, signatures, calldatas, description, callback, callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  formValidated(){\n\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Title\n          mb={[3,4]}\n        >\n          Create Proposal\n        </Title>\n        {\n        this.state.proposalCreated ? (\n          <DashboardCard\n            cardProps={{\n              py:3,\n              px:4,\n              width:[1,'auto']\n            }}\n          >\n            <Flex\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Icon\n                name={'Done'}\n                align={'center'}\n                size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                color={this.props.theme.colors.transactions.status.completed}\n              />\n              <Text\n                mt={1}\n                fontWeight={3}\n                fontSize={[2,3]}\n                color={'dark-gray'}\n                textAlign={'center'}\n              >\n                The proposal has been successfully created\n              </Text>\n            </Flex>\n          </DashboardCard>\n        ) : \n        // Has balance\n        this.props.votes && this.functionsUtil.BNify(this.props.votes).gte(this.props.proposalThreshold) ? (\n          <Form\n            width={1}\n            validated={this.state.validated}\n            onSubmit={this.handleSubmit.bind(this)}\n          >\n            <Flex\n              mb={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={['center','space-between']}\n            >\n              <Flex\n                width={[1,0.48]}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,3]}\n                    fontWeight={[2,3]}\n                  >\n                    Proposal Description\n                  </Heading.h4>\n                </Flex>\n                <Flex\n                  flexDirection={'column'}\n                >\n                  <Field\n                    width={1}\n                    label={\"Title\"}\n                    validated={this.state.validated}\n                  >\n                    <Input\n                      required\n                      width={1}\n                      type={'text'}\n                      className={styles.input}\n                      value={this.state.title}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      placeholder={'Title of your proposal'}\n                      onChange={ e => this.handleInput('title',e) }\n                    />\n                  </Field>\n                </Flex>\n                <Flex\n                  flexDirection={'column'}\n                >\n                  <Field\n                    width={1}\n                    label={'Description'}\n                    validated={this.state.validated}\n                  >\n                    <Textarea\n                      required\n                      rows={8}\n                      width={1}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      value={this.state.description}\n                      placeholder={'Description of your proposal'}\n                      onChange={ e => this.handleInput('description',e) }\n                    />\n                  </Field>\n                </Flex>\n              </Flex>\n\n              <Flex\n                width={[1,0.48]}\n                flexDirection={'column'}\n              >\n                <Flex\n                  pb={2}\n                  width={1}\n                  mb={[2,3]}\n                  borderColor={'divider'}\n                  borderBottom={'1px solid transparent'}\n                >\n                  <Heading.h4\n                    fontSize={[2,3]}\n                    fontWeight={[2,3]}\n                  >\n                    Actions\n                  </Heading.h4>\n                </Flex>\n                <Flex\n                  flexDirection={'column'}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          handleClick={ e => this.setEditAction(actionIndex) }\n                          title={ this.state.editAction === actionIndex ? 'Edit Action' : null }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Field\n                                  style={{\n                                    width:'100%',\n                                    display:'flex',\n                                    alignItems:'stretch',\n                                    flexDirection:'column'\n                                  }}\n                                  label={\"Select Contract\"}\n                                >\n                                  <Select\n                                    style={{\n                                      width:'100%',\n                                      color:this.props.theme.colors.counter,\n                                      backgroundColor:this.props.theme.colors.cardBg\n                                    }}\n                                    required={true}\n                                    value={this.state.selectedContract}\n                                    options={this.state.contractOptions}\n                                    onChange={this.changeContract.bind(this)}\n                                  />\n                                </Field>\n                                {\n                                  this.state.selectedContract && this.state.selectedContract === 'custom' &&\n                                  (\n                                    <Flex\n                                      width={1}\n                                      flexDirection={'column'}\n                                    >\n                                      <Field\n                                        width={1}\n                                        label={\"Contract Address\"}\n                                        validated={this.state.validated}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={'text'}\n                                          className={styles.input}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={'Custom contract address'}\n                                          pattern={this.getPatternByFieldType('address',true)}\n                                          onChange={ e => this.handleInput('customAddress',e,'address') }\n                                          value={this.state.customAddress ? this.state.customAddress : ''}\n                                        />\n                                      </Field>\n                                      <Field\n                                        width={1}\n                                        label={'Custom ABI'}\n                                        validated={this.state.validated}\n                                      >\n                                        <Textarea\n                                          required\n                                          rows={8}\n                                          width={1}\n                                          className={styles.input}\n                                          placeholder={'Insert the ABI of your contract'}\n                                          onChange={ e => this.handleInput('customABI',e,'json') }\n                                          value={this.state.customABI ? this.state.customABI : ''}\n                                        />\n                                      </Field>\n                                    </Flex>\n                                  )\n                                }\n                                {\n                                  this.state.selectedContract && this.state.functionsOptions &&\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      label={\"Select Function\"}\n                                    >\n                                      <Select\n                                        style={{\n                                          width:'100%',\n                                          color:this.props.theme.colors.counter,\n                                          backgroundColor:this.props.theme.colors.cardBg\n                                        }}\n                                        required={true}\n                                        options={this.state.functionsOptions}\n                                        onChange={this.changeFunction.bind(this)}\n                                        value={this.state.selectedSignature ? this.state.selectedSignature : ''}\n                                      />\n                                    </Field>\n                                }\n                                {\n                                  this.state.selectedFunction && this.state.selectedFunction.payable && (\n                                    <Field\n                                      label={`Value`}\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={'number'}\n                                        className={styles.input}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`Enter ETH value`}\n                                        onChange={ e => this.valueChange(e) }\n                                        value={this.state.actionValue ? this.state.actionValue : 0}\n                                      />\n                                    </Field>\n                                  )\n                                }\n                                {\n                                  this.state.selectedFunction &&\n                                    this.state.selectedFunction.inputs.map( (input,inputIndex) => {\n                                      const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                      const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                      return (\n                                        <Field\n                                          style={{\n                                            width:'100%',\n                                            display:'flex',\n                                            alignItems:'stretch',\n                                            flexDirection:'column'\n                                          }}\n                                          key={`input_${inputIndex}`}\n                                          label={`${input.name} (${input.type})`}\n                                        >\n                                          <Input\n                                            required\n                                            width={1}\n                                            type={fieldType}\n                                            pattern={fieldPattern}\n                                            className={styles.input}\n                                            borderColor={'cardBorder'}\n                                            backgroundColor={'cardBg'}\n                                            placeholder={`${input.name} (${input.type})`}\n                                            onChange={ e => this.inputChange(e,inputIndex) }\n                                            value={this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                          />\n                                        </Field>\n                                      )\n                                    })\n                                }\n                                {\n                                  this.state.selectedContract && this.state.selectedFunction &&\n                                    <Flex\n                                      mb={2}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'column'}\n                                      justifyContent={'center'}\n                                    >\n                                      <RoundButton\n                                        buttonProps={{\n                                          px:[0,4],\n                                          width:[1,'auto'],\n                                          type:'button',\n                                          disabled:!this.state.actionValid\n                                        }}\n                                        handleClick={this.addAction.bind(this)}\n                                      >\n                                        Save Action\n                                      </RoundButton>\n                                      <Link\n                                        mt={2}\n                                        color={'red'}\n                                        hoverColor={'red'}\n                                        onClick={this.deleteAction.bind(this)}\n                                      >\n                                        Delete Action\n                                      </Link>\n                                    </Flex>\n                                }\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {action.contract} - {action.params.signature}\n                                </Text>\n                                <Flex\n                                  p={['4px','7px']}\n                                  borderRadius={'50%'}\n                                  alignItems={'center'}\n                                  justifyContent={'center'}\n                                  backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                >\n                                  <Icon\n                                    name={'Edit'}\n                                    align={'center'}\n                                    color={'redeem'}\n                                    size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                  />\n                                </Flex>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.actions || Object.values(this.state.actions).length<this.props.proposalMaxOperations) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Action' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={\"Select Contract\"}\n                              >\n                                <Select\n                                  style={{\n                                    width:'100%',\n                                    color:this.props.theme.colors.counter,\n                                    backgroundColor:this.props.theme.colors.cardBg\n                                  }}\n                                  required={true}\n                                  options={this.state.contractOptions}\n                                  onChange={this.changeContract.bind(this)}\n                                />\n                              </Field>\n                              {\n                                this.state.selectedContract && this.state.selectedContract === 'custom' &&\n                                (\n                                  <Flex\n                                    width={1}\n                                    flexDirection={'column'}\n                                  >\n                                    <Field\n                                      width={1}\n                                      label={\"Contract Address\"}\n                                      validated={this.state.validated}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={'text'}\n                                        className={styles.input}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={'Custom contract address'}\n                                        pattern={this.getPatternByFieldType('address',true)}\n                                        onChange={ e => this.handleInput('customAddress',e,'address') }\n                                        value={this.state.customAddress ? this.state.customAddress : ''}\n                                      />\n                                    </Field>\n                                    <Field\n                                      width={1}\n                                      label={'Custom ABI'}\n                                      validated={this.state.validated}\n                                    >\n                                      <Textarea\n                                        required\n                                        rows={8}\n                                        width={1}\n                                        className={styles.input}\n                                        placeholder={'Insert the ABI of your contract'}\n                                        onChange={ e => this.handleInput('customABI',e,'json') }\n                                        value={this.state.customABI ? this.state.customABI : ''}\n                                      />\n                                    </Field>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.selectedContract && this.state.functionsOptions && \n                                  <Field\n                                    style={{\n                                      width:'100%',\n                                      display:'flex',\n                                      alignItems:'stretch',\n                                      flexDirection:'column'\n                                    }}\n                                    label={\"Select Function\"}\n                                  >\n                                    <Select\n                                      style={{\n                                        width:'100%',\n                                        color:this.props.theme.colors.counter,\n                                        backgroundColor:this.props.theme.colors.cardBg\n                                      }}\n                                      required={true}\n                                      options={this.state.functionsOptions}\n                                      onChange={this.changeFunction.bind(this)}\n                                      value={this.state.selectedSignature ? this.state.selectedSignature : ''}\n                                    />\n                                  </Field>\n                              }\n                              {\n                                this.state.selectedFunction && this.state.selectedFunction.payable && (\n                                  <Field\n                                    label={`Value`}\n                                    style={{\n                                      width:'100%',\n                                      display:'flex',\n                                      alignItems:'stretch',\n                                      flexDirection:'column'\n                                    }}\n                                  >\n                                    <Input\n                                      required\n                                      width={1}\n                                      type={'number'}\n                                      className={styles.input}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      placeholder={`Enter ETH value`}\n                                      onChange={ e => this.valueChange(e) }\n                                      value={this.state.actionValue ? this.state.actionValue : 0}\n                                    />\n                                  </Field>\n                                )\n                              }\n                              {\n                                this.state.selectedFunction &&\n                                  this.state.selectedFunction.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          className={styles.input}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                              }\n                              {\n                                this.state.selectedContract && this.state.selectedFunction &&\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                  >\n                                    <RoundButton\n                                      buttonProps={{\n                                        px:[0,4],\n                                        type:'button',\n                                        width:[1,'auto'],\n                                        disabled:!this.state.actionValid\n                                      }}\n                                      handleClick={this.addAction.bind(this)}\n                                    >\n                                      Add Action\n                                    </RoundButton>\n                                  </Flex>\n                              }\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Action\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n\n                </Flex>\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                // Sending transaction\n                this.state.processing && this.state.processing.loading ? (\n                  <TxProgressBar\n                    {...this.props}\n                    hash={this.state.processing.txHash}\n                    waitText={`Proposal creation estimated in`}\n                    endMessage={`Finalizing proposal creation request...`}\n                    cancelTransaction={this.cancelTransaction.bind(this)}\n                  />\n                ) : (\n                  <RoundButton\n                    buttonProps={{\n                      type:'submit',\n                      width:[1,'15em'],\n                      disabled:!this.state.validated\n                    }}\n                  >\n                    Submit Proposal\n                  </RoundButton>\n                )\n              }\n            </Flex>\n          </Form>\n        ) : this.props.balance && this.functionsUtil.BNify(this.props.balance).gte(this.props.proposalThreshold) ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            <Text\n              mb={3}\n              fontWeight={2}\n              fontSize={[2,3]}\n              color={'dark-gray'}\n              textAlign={'center'}\n            >\n              Please delegate your votes to yourself to create a new proposal.\n            </Text>\n            <DelegateVote\n              {...this.props}\n            />\n          </Flex>\n        ) : (\n          <Text\n            fontWeight={2}\n            fontSize={[2,3]}\n            color={'dark-gray'}\n            textAlign={'center'}\n          >\n            You need at least {this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(this.props.proposalThreshold,18),0)} delegated votes to send a new proposal.\n          </Text>\n        )\n       }\n      </Flex>\n    );\n  }\n}\n\nexport default NewProposal;","import React, { Component } from 'react';\nimport { Flex, Text, Box, Link } from \"rimble-ui\";\nimport FlexLoader from '../../FlexLoader/FlexLoader';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport DelegateVote from '../DelegateVote/DelegateVote';\nimport ProposalField from '../ProposalField/ProposalField';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\n\nclass CastVote extends Component {\n\n  state = {\n    vote:null,\n    loaded:false,\n    userVote:null,\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    voteSucceed:false,\n    showDelegateBox:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    if (this.props.account){\n      const userVote = this.props.proposal.votes.find( v => (v.voter.toLowerCase() === this.props.account.toLowerCase()) );\n      this.setState({\n        userVote,\n        loaded:true\n      });\n    }\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  toggleDelegateBox(showDelegateBox){\n    this.setState({\n      showDelegateBox\n    });\n  }\n\n  castVote(){\n\n    if (this.state.vote === null){\n      return false;\n    }\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Proposal',\n        eventAction: 'CastVote',\n        eventLabel: this.state.vote\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      let userVote = null;\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        userVote = {\n          voter:this.props.account,\n          votes:this.props.votes.toString(),\n          support:this.state.vote === 'for',\n          proposalId:this.props.proposal.id,\n        };\n\n        if (typeof this.props.callback === 'function'){\n          this.props.callback();\n        }\n      }\n\n\n      this.setState({\n        userVote,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const vote = this.state.vote === 'for';\n    const proposalId = parseInt(this.props.proposal.id);\n\n    this.governanceUtil.castVote(proposalId,vote,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  setVote = (vote) => {\n    this.setState({\n      vote\n    });\n  }\n\n  render() {\n    return this.state.userVote ? (\n        <Flex\n          p={3}\n          width={1}\n          mb={[2,3]}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Text\n            mb={2}\n            fontWeight={4}\n            fontSize={[2,3]}\n            color={'dark-gray'}\n            textAlign={'center'}\n          >\n            You have voted for the proposal #{this.props.proposal.id}:\n          </Text>\n          <DashboardCard\n            cardProps={{\n              mb:2,\n              py:[2,3],\n              px:[3,4],\n              width:'auto'\n            }}\n            isInteractive={false}\n          >\n            <Flex\n              my={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <ProposalField\n                fieldInfo={{\n                  name:'statusIcon',\n                  state: this.state.userVote.support ? 'Executed' : 'Canceled',\n                  props:{\n                    mr:2\n                  }\n                }}\n              />\n              <Text\n                fontWeight={3}\n                fontSize={[2,3]}\n              >\n                {this.state.userVote.support ? 'For' : 'Against'}\n              </Text>\n            </Flex>\n          </DashboardCard>\n          <Text\n            fontSize={1}\n            fontWeight={500}\n            color={'statValue'}\n            textAlign={'center'}\n          >\n            voted with {this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(this.state.userVote.votes,18).toFixed(0,1),0)} votes\n          </Text>\n        </Flex>\n      ) : this.props.proposal.state === 'Active' && (\n        <Box\n          p={3}\n          width={1}\n          mb={[2,3]}\n        >\n          {\n            // Data not loaded yet\n            !this.state.loaded ? (\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row',\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading data...'}\n              />\n            ) :\n            // No votes delegated\n            (!this.props.votes || this.functionsUtil.BNify(this.props.votes).lte(0) || this.state.showDelegateBox) ? (\n              <DelegateVote\n                {...this.props}\n                canClose={this.state.showDelegateBox}\n                closeFunc={ e => this.toggleDelegateBox(false) }\n              />\n            ) : (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text\n                  mb={1}\n                  fontWeight={4}\n                  fontSize={[2,3]}\n                  color={'dark-gray'}\n                  textAlign={'center'}\n                >\n                  Cast your vote for the proposal #{this.props.proposal.id}:\n                </Text>\n                <Text\n                  mb={2}\n                  fontSize={1}\n                  color={'red'}\n                  fontWeight={500}\n                  textAlign={'center'}\n                >\n                  Make sure you have been delegated before this proposal has been submitted\n                </Text>\n                {\n                  this.state.processing && this.state.processing.loading ? (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Vote estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing vote request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Flex\n                        mb={2}\n                        width={[1,0.4]}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:[2,3],\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setVote('for');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.vote === 'for' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <ProposalField\n                              fieldInfo={{\n                                name:'statusIcon',\n                                state:'Executed',\n                                props:{\n                                  mr:2\n                                }\n                              }}\n                            />\n                            <Text\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                            >\n                              For\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:[2,3],\n                            width:0.48,\n                            onMouseDown:() => {\n                              this.setVote('against');\n                            }\n                          }}\n                          isInteractive={true}\n                          isActive={ this.state.vote === 'against' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <ProposalField\n                              fieldInfo={{\n                                name:'statusIcon',\n                                state:'Canceled',\n                                props:{\n                                  mr:2\n                                }\n                              }}\n                            />\n                            <Text\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                            >\n                              Against\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Text\n                        mb={0}\n                        fontSize={1}\n                        fontWeight={500}\n                        color={'statValue'}\n                        textAlign={'center'}\n                      >\n                        You have {this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(this.props.votes,18).toFixed(0,1),0)} votes delegated\n                      </Text>\n                      {\n                        this.props.balance && this.functionsUtil.BNify(this.props.balance).gt(0) &&\n                          <Link\n                            mt={0}\n                            mainColor={'primary'}\n                            hoverColor={'primary'}\n                            onClick={ e => this.toggleDelegateBox(true) }\n                          >\n                            change delegate\n                          </Link>\n                      }\n                      <RoundButton\n                        buttonProps={{\n                          mt:2,\n                          width:[1,0.2],\n                          disabled:this.state.vote === null\n                        }}\n                        handleClick={this.castVote.bind(this)}\n                      >\n                        Vote\n                      </RoundButton>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            )\n          }\n        </Box>\n      );\n  }\n}\n\nexport default CastVote;","import Title from '../../Title/Title';\nimport React, { Component } from 'react';\nimport ExtLink from '../../ExtLink/ExtLink';\nimport CastVote from '../CastVote/CastVote';\nimport StatsCard from '../../StatsCard/StatsCard';\nimport RoundButton from '../../RoundButton/RoundButton';\nimport ProposalField from '../ProposalField/ProposalField';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport ShortHash from \"../../utilities/components/ShortHash\";\nimport TxProgressBar from '../../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../../DashboardCard/DashboardCard';\nimport { Box, Flex, Blockie, Text, Link, Icon } from \"rimble-ui\";\n\nclass ProposalDetails extends Component {\n\n  state = {\n    showActionParams:null,\n    processing:{\n      action:null,\n      txHash:null,\n      loading:false\n    },\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  toggleShowParams(showActionParams){\n    // Reset show action params\n    if (this.state.showActionParams === showActionParams){\n      showActionParams = null;\n    }\n    this.setState({\n      showActionParams\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        action:null,\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async queueProposal(){\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'queue',\n        eventCategory: 'Governance',\n        eventLabel: this.props.proposal.id\n      };\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      if (typeof this.props.loadData === 'function' && tx.status === 'success'){\n        this.props.loadData();\n      }\n\n      this.setState({\n        processing: {\n          action:null,\n          txHash:null,\n          loading:false\n        }\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.governanceUtil.queueProposal(this.props.proposal.id,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true,\n        action:'Queue'\n      }\n    }));\n  }\n\n  async executeProposal(){\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'execute',\n        eventCategory: 'Governance',\n        eventLabel: this.props.proposal.id\n      };\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      if (typeof this.props.loadData === 'function' && tx.status === 'success'){\n        this.props.loadData();\n      }\n\n      this.setState({\n        processing: {\n          action:null,\n          txHash:null,\n          loading:false\n        }\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.governanceUtil.executeProposal(this.props.proposal.id,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true,\n        action:'Execute'\n      }\n    }));\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n\n    window.loadData = this.props.loadData;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    let proposal = this.props.proposal;\n    const creationTime = proposal.states[0].start_time*1000;\n    const lastState = Object.values(proposal.states).pop();\n    const hasVotes = proposal.votes && proposal.votes.length>0;\n    const forVotes = this.functionsUtil.BNify(proposal.forVotes).div(1e18);\n    const againstVotes = this.functionsUtil.BNify(proposal.againstVotes).div(1e18);\n    const totalVotes = forVotes.plus(againstVotes);\n    const forVotesPerc = forVotes.div(totalVotes).times(100).toFixed(2);\n    const againstVotesPerc = againstVotes.div(totalVotes).times(100).toFixed(2);\n    const endTime = (proposal.states[0].start_time+parseInt(this.functionsUtil.blocksToSeconds(this.props.votingPeriod)))*1000;\n    const forVotesAddrs = proposal.votes.filter( v => (v.support) ).sort( (a,b) => (this.functionsUtil.BNify(a.votes).lt(this.functionsUtil.BNify(b.votes)) ? 1 : -1) );\n    const againstVotesAddrs = proposal.votes.filter( v => (!v.support) ).sort( (a,b) => (this.functionsUtil.BNify(a.votes).lt(this.functionsUtil.BNify(b.votes)) ? 1 : -1) );\n\n    const canQueue = proposal.state.toLowerCase() === 'succeeded'; \n    const canExecute = proposal.state.toLowerCase() === 'queued' && parseInt(new Date().getTime()/1000)-parseInt(proposal.states[proposal.states.length-1].start_time)>=parseInt(this.props.timelockDelay);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={[3,4]}\n        >\n          {proposal.title}\n        </Title>\n        <Flex\n          mb={3}\n          width={1}\n          alignItems={'center'}\n          justifyContent={'center'}\n          flexDirection={['column','row']}\n        >\n          <Flex\n            mb={[2,0]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              labelTooltip={null}\n              title={'Proposal ID'}\n              value={`#${proposal.id}`}\n              minHeight={['110px','143px']}\n              titleMinHeight={['auto','50px']}\n              label={`Created on ${this.functionsUtil.strToMoment(creationTime).utc().format('DD MMM, YYYY @ HH:mm')} UTC`}\n            />\n          </Flex>\n          <Flex\n            mb={[2,0]}\n            pl={[0,1]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              titleMinHeight={['auto','50px']}\n              minHeight={['110px','143px']}\n              labelTooltip={ null }\n              title={'Proposer'}\n              label={null}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Blockie\n                  opts={{\n                    size: 12,\n                    color: \"#dfe\",\n                    bgcolor: \"#a71\",\n                    spotcolor: \"#000\",\n                    seed: proposal.address,\n                  }}\n                />\n                <ExtLink\n                  href={this.functionsUtil.getEtherscanAddressUrl(proposal.proposer)}\n                >\n                  <Flex\n                    flexDirection={'row'}\n                    alignItems={'flex-end'}\n                    justifyContent={'flex-start'}\n                  >\n                    <ShortHash\n                      ml={2}\n                      lineHeight={1}\n                      {...this.props}\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                      color={'statValue'}\n                      hash={proposal.proposer}\n                    />\n                    <Icon\n                      ml={1}\n                      size={'1.2em'}\n                      name={'OpenInNew'}\n                      color={'statValue'}\n                    />\n                  </Flex>\n                </ExtLink>\n              </Flex>\n            </StatsCard>\n          </Flex>\n          <Flex\n            mb={[2,0]}\n            pl={[0,1]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              title={'Status'}\n              labelTooltip={ null }\n              minHeight={['110px','143px']}\n              titleMinHeight={['auto','50px']}\n              label={proposal.state==='Active' ? `Ending on ${this.functionsUtil.strToMoment(endTime).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : `Updated on ${this.functionsUtil.strToMoment(lastState.start_time*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC`}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <ProposalField\n                  {...this.props}\n                  proposal={proposal}\n                  fieldInfo={{\n                    name:'statusIcon',\n                    props:{\n                      size: this.props.isMobile ? '1.7em' : '2em'\n                    }\n                  }}\n                />\n                <Text\n                  ml={2}\n                  lineHeight={1}\n                  fontSize={[4,5]}\n                  fontWeight={[3,4]}\n                  color={'statValue'}\n                >\n                  {proposal.state}\n                </Text>\n              </Flex>\n            </StatsCard>\n          </Flex>\n          <Flex\n            pl={[0,1]}\n            mb={[2,0]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              label={null}\n              title={'Total Votes'}\n              labelTooltip={ null }\n              minHeight={['110px','143px']}\n              titleMinHeight={['auto','50px']}\n              value={this.functionsUtil.formatMoney(totalVotes.toFixed(0,1),0)}\n            />\n          </Flex>\n        </Flex>\n        {\n          this.props.account && \n            <CastVote\n              {...this.props}\n              callback={this.props.loadData}\n            />\n        }\n        <Flex\n          width={1}\n          mb={[2,3]}\n          id={'details-container'}\n          justifyContent={'space-between'}\n          flexDirection={['column','row']}\n        >\n          <DashboardCard\n            cardProps={{\n              p:3,\n              mb:[2,0],\n              mr:[0,1],\n              width:[1,1/2]\n            }}\n            title={'Actions'}\n            titleParentProps={{\n              mt:0,\n              ml:0\n            }}\n          >\n            <Flex\n              pt={2}\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                proposal.actions.signatures.map( (action,actionIndex) => {\n                  const data = proposal.actions.calldatas[actionIndex];\n                  // const targetAddr = proposal.actions.targets[actionIndex];\n\n                  let decodedParams = null;\n                  let attrs = action.match(/\\(([a-z0-9,]+(\\[\\])?)\\)/i);\n                  attrs = attrs ? attrs[1].split(',') : null;\n\n                  if (attrs){\n                    decodedParams = this.props.web3.eth.abi.decodeParameters(attrs,data);\n                    if (decodedParams){\n                      decodedParams = Object.values(decodedParams).splice(0,attrs.length);\n                    }\n                  }\n\n                  return (\n                    <Flex\n                      py={1}\n                      width={1}\n                      flexDirection={'column'}\n                      alignItems={'flex-start'}\n                      key={`action_${actionIndex}`}\n                      justifyContent={'flex-start'}\n                      borderBottom={`1px solid ${this.props.theme.colors['near-white']}`}\n                    >\n                      <Flex\n                        mb={1}\n                        width={1}\n                        flexDirection={['column','row']}\n                        alignItems={['flex-start','center']}\n                      >\n                        <Flex\n                          flexDirection={'row'}\n                        >\n                          <Text\n                            fontSize={1}\n                            fontWeight={3}\n                            color={'dark-gray'}\n                          >\n                            {parseInt(actionIndex)+1}\n                          </Text>\n                          <Text\n                            ml={2}\n                            fontSize={1}\n                            fontWeight={2}\n                            color={'dark-gray'}\n                          >\n                            {action}\n                          </Text>\n                        </Flex>\n                        {\n                          decodedParams &&\n                            <Link\n                              mt={[1,0]}\n                              ml={[0,1]}\n                              fontSize={1}\n                              fontWeight={2}\n                              textAlign={'left'}\n                              lineHeight={'initial'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.toggleShowParams(actionIndex) }\n                            >\n                              {\n                                this.state.showActionParams === actionIndex ? '(hide params)' : '(show params)'\n                              }\n                            </Link>\n                        }\n                      </Flex>\n                      {\n                        decodedParams && this.state.showActionParams === actionIndex &&\n                          <Flex\n                            pl={[0,3]}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            {\n                              decodedParams.map( (param,paramIndex) => (\n                                <Text\n                                  fontSize={0}\n                                  color={'statValue'}\n                                  key={`param_${paramIndex}`}\n                                >\n                                  {param}\n                                </Text>\n                              ))\n                            }\n                          </Flex>\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n          </DashboardCard>\n          <DashboardCard\n            cardProps={{\n              p:3,\n              ml:[0,1],\n              width:[1,1/2]\n            }}\n          >\n            <Flex\n              mb={2}\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n              >\n                Proposal History\n              </Text>\n              <Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n              >\n                Date\n              </Text>\n            </Flex>\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                proposal.states.map( (stateInfo,stateIndex) => {\n                  return (\n                    <Flex\n                      py={2}\n                      width={1}\n                      alignItems={'center'}\n                      key={`state_${stateIndex}`}\n                      justifyContent={'space-between'}\n                      borderBottom={`1px solid ${this.props.theme.colors['near-white']}`}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <ProposalField\n                          {...this.props}\n                          proposal={proposal}\n                          fieldInfo={{\n                            name:'statusIcon',\n                            state:stateInfo.state,\n                            props:{\n                              size: this.props.isMobile ? '1.3em' : '1.5em'\n                            }\n                          }}\n                        />\n                        <Link\n                          ml={2}\n                          fontSize={1}\n                          fontWeight={2}\n                          target={'_blank'}\n                          textAlign={'left'}\n                          color={'dark-gray'}\n                          lineHeight={'initial'}\n                          hoverColor={'primary'}\n                          rel={'nofollow noopener noreferrer'}\n                          href={this.functionsUtil.getEtherscanTransactionUrl(stateInfo.trx_hash)}\n                        >\n                          {stateInfo.state}\n                        </Link>\n                      </Flex>\n                      <Text\n                        fontSize={1}\n                        fontWeight={2}\n                        textAlign={'left'}\n                        color={'dark-gray'}\n                        lineHeight={'initial'}\n                      >\n                        {this.functionsUtil.strToMoment(stateInfo.start_time*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC\n                      </Text>\n                    </Flex>\n                  );\n                })\n              }\n              {\n                this.state.processing && this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.state.processing.action} estimated in`}\n                      endMessage={`Finalizing ${this.state.processing.action.toLowerCase()} request...`}\n                    />\n                  </Flex>\n                ) : canQueue ? (\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,'auto'],\n                    }}\n                    handleClick={this.queueProposal.bind(this)}\n                  >\n                    Queue Proposal\n                  </RoundButton>\n                ) : canExecute && (\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,'auto'],\n                    }}\n                    handleClick={this.executeProposal.bind(this)}\n                  >\n                    Execute Proposal\n                  </RoundButton>\n                )\n              }\n            </Flex>\n          </DashboardCard>\n        </Flex>\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mb:[2,3]\n          }}\n          title={'Details'}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n        >\n          <Text\n            mt={2}\n            fontSize={[1,2]}\n            style={{\n              wordBreak:'break-word'\n            }}\n            dangerouslySetInnerHTML={{\n              __html:proposal.description\n            }}\n          >\n          </Text>\n        </DashboardCard>\n        {\n          hasVotes && \n            <DashboardCard\n              cardProps={{\n                p:3,\n                mb:[2,3]\n              }}\n            >\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={2}\n                  width={1}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    fontWeight={4}\n                    fontSize={[2,3]}\n                    textAlign={'left'}\n                    color={'dark-gray'}\n                    lineHeight={'initial'}\n                  >\n                    For ({forVotesPerc}%)\n                  </Text>\n                  <Text\n                    fontWeight={4}\n                    fontSize={[2,3]}\n                    textAlign={'left'}\n                    color={'dark-gray'}\n                    lineHeight={'initial'}\n                  >\n                    Against ({againstVotesPerc}%)\n                  </Text>\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  height={'20px'}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  id={'votes-cursor-container'}\n                >\n                  <Flex\n                    height={'100%'}\n                    width={`${forVotesPerc}%`}\n                    style={{background:'rgba(0, 211, 149, 1)'}}\n                    borderRadius={ parseFloat(forVotesPerc)===100 ? '20px' : '20px 0 0 20px' }\n                  >\n                  </Flex>\n                  <Flex\n                    height={'100%'}\n                    width={`${againstVotesPerc}%`}\n                    style={{background:'rgba(211, 0, 0, 1)'}}\n                    borderRadius={ parseFloat(againstVotesPerc)===100 ? '20px' : '0 20px 20px 0' }\n                  >\n                  </Flex>\n                </Flex>\n                <Flex\n                  width={1}\n                  height={'20px'}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  id={'votes-number-container'}\n                >\n                  <Flex\n                    width={1/2}\n                    height={'100%'}\n                    justifyContent={'flex-end'}\n                  >\n                    <Flex\n                      width={1}\n                      height={'100%'}\n                      justifyContent={'flex-start'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        textAlign={'left'}\n                        color={'statValue'}\n                        lineHeight={'initial'}\n                      >\n                        {this.functionsUtil.formatMoney(forVotes.toFixed(0,1),0)}\n                      </Text>\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1/2}\n                    height={'100%'}\n                    justifyContent={'flex-start'}\n                  >\n                    <Flex\n                      width={1}\n                      height={'100%'}\n                      minWidth={'10%'}\n                      justifyContent={'flex-end'}\n                    >\n                      <Text\n                        fontWeight={3}\n                        fontSize={[1,2]}\n                        textAlign={'right'}\n                        color={'statValue'}\n                        lineHeight={'initial'}\n                      >\n                        {this.functionsUtil.formatMoney(againstVotes.toFixed(0,1),0)}\n                      </Text>\n                    </Flex>\n                  </Flex>\n                </Flex>\n              </Flex>\n            </DashboardCard>\n        }\n        {\n          hasVotes && \n            <Flex\n              mb={4}\n              width={1}\n              id={'votes-addresses-container'}\n              justifyContent={'space-between'}\n              flexDirection={['column','row']}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mb:[2,0],\n                  mr:[0,1],\n                  width:[1,1/2]\n                }}\n                id={'for-votes-addresses-container'}\n              >\n                <Flex\n                  width={1}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'center'}\n                >\n                  <Flex\n                    mb={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <Text\n                      fontWeight={4}\n                      fontSize={[2,3]}\n                      textAlign={'left'}\n                      color={'dark-gray'}\n                      lineHeight={'initial'}\n                    >\n                      For Addresses ({forVotesAddrs.length})\n                    </Text>\n                    <Text\n                      fontWeight={4}\n                      fontSize={[2,3]}\n                      textAlign={'left'}\n                      color={'dark-gray'}\n                      lineHeight={'initial'}\n                    >\n                      Votes\n                    </Text>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    style={{\n                      overflow:'scroll'\n                    }}\n                    maxHeight={'400px'}\n                    flexDirection={'column'}\n                  >\n                    {\n                      forVotesAddrs.map( (voteInfo,voteIndex) => {\n                        const votes = this.functionsUtil.formatMoney(this.functionsUtil.BNify(voteInfo.votes).div(1e18).toFixed(4,1),4);\n                        return (\n                          <Flex\n                            py={2}\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`vote_for_${voteIndex}`}\n                            justifyContent={'space-between'}\n                            borderBottom={`1px solid ${this.props.theme.colors['near-white']}`}\n                          >\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Blockie\n                                opts={{\n                                  size: 7,\n                                  color: \"#dfe\",\n                                  bgcolor: \"#a71\",\n                                  spotcolor: \"#000\",\n                                  seed: voteInfo.voter,\n                                }}\n                              />\n                              <Link\n                                ml={2}\n                                fontSize={1}\n                                fontWeight={2}\n                                target={'_blank'}\n                                textAlign={'left'}\n                                color={'statValue'}\n                                lineHeight={'initial'}\n                                hoverColor={'primary'}\n                                rel={'nofollow noopener noreferrer'}\n                                href={`/#/governance/leaderboard/${voteInfo.voter}`}\n                              >\n                                {\n                                  this.props.isMobile ? (\n                                    <ShortHash\n                                      fontSize={1}\n                                      fontWeight={2}\n                                      {...this.props}\n                                      textAlign={'left'}\n                                      color={'statValue'}\n                                      hash={voteInfo.voter}\n                                      lineHeight={'initial'}\n                                    />\n                                  ) : voteInfo.voter\n                                }\n                              </Link>\n                            </Flex>\n                            <Text\n                              fontSize={1}\n                              fontWeight={2}\n                              textAlign={'left'}\n                              color={'statValue'}\n                              lineHeight={'initial'}\n                            >\n                              {votes}\n                            </Text>\n                          </Flex>\n                        )\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  ml:[0,1],\n                  width:[1,1/2]\n                }}\n                id={'against-votes-addresses-container'}\n              >\n                <Flex\n                  mb={2}\n                  width={1}\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  <Text\n                    fontWeight={4}\n                    fontSize={[2,3]}\n                    textAlign={'left'}\n                    color={'dark-gray'}\n                    lineHeight={'initial'}\n                  >\n                    Against Addresses ({againstVotesAddrs.length})\n                  </Text>\n                  <Text\n                    fontWeight={4}\n                    fontSize={[2,3]}\n                    textAlign={'left'}\n                    color={'dark-gray'}\n                    lineHeight={'initial'}\n                  >\n                    Votes\n                  </Text>\n                </Flex>\n                <Flex\n                  width={1}\n                  style={{\n                    overflow:'scroll'\n                  }}\n                  maxHeight={'400px'}\n                  flexDirection={'column'}\n                >\n                  {\n                    againstVotesAddrs.map( (voteInfo,voteIndex) => {\n                      const votes = this.functionsUtil.formatMoney(this.functionsUtil.BNify(voteInfo.votes).div(1e18).toFixed(4,1),4);\n                      return (\n                        <Flex\n                          py={2}\n                          width={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          key={`vote_against_${voteIndex}`}\n                          borderBottom={`1px solid ${this.props.theme.colors['near-white']}`}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'flex-start'}\n                          >\n                            <Blockie\n                              opts={{\n                                size: 7,\n                                color: \"#dfe\",\n                                bgcolor: \"#a71\",\n                                spotcolor: \"#000\",\n                                seed: voteInfo.voter,\n                              }}\n                            />\n                            <Link\n                              ml={2}\n                              fontSize={1}\n                              fontWeight={2}\n                              target={'_blank'}\n                              textAlign={'left'}\n                              color={'statValue'}\n                              lineHeight={'initial'}\n                              hoverColor={'primary'}\n                              rel={'nofollow noopener noreferrer'}\n                              href={`/#/governance/leaderboard/${voteInfo.voter}`}\n                            >\n                              {voteInfo.voter}\n                            </Link>\n                          </Flex>\n                          <Text\n                            fontSize={1}\n                            fontWeight={2}\n                            textAlign={'left'}\n                            color={'statValue'}\n                            lineHeight={'initial'}\n                          >\n                            {votes}\n                          </Text>\n                        </Flex>\n                      )\n                    })\n                  }\n                </Flex>\n              </DashboardCard>\n            </Flex>\n        }\n      </Box>\n    );\n  }\n}\n\nexport default ProposalDetails;","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport NewProposal from './NewProposal/NewProposal';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport ProposalsList from './ProposalsList/ProposalsList';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport ProposalDetails from './ProposalDetails/ProposalDetails';\n\nclass Proposals extends Component {\n  state = {\n    proposals:null,\n    addProposal:false,\n    selectedProposal:null\n  };\n\n  // Utils\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.contractsInitialized){\n      return false;\n    }\n\n    const proposals = await this.governanceUtil.getProposals();\n\n    const { match: { params } } = this.props;\n      \n    // Look if proposalId exists\n    let addProposal = false;\n    let selectedProposal = null;\n    if (params.item_id && parseInt(params.item_id)){\n      const proposalId = parseInt(params.item_id);\n      const foundProposal = proposals.find( p => parseInt(p.id) === proposalId );\n      // Set selected proposal\n      if (foundProposal){\n        selectedProposal = foundProposal;\n      }\n    } else if (params.item_id && params.item_id.toLowerCase() === 'new'){\n      addProposal = true;\n    }\n\n    this.setState({\n      proposals,\n      addProposal,\n      selectedProposal\n    });\n  }\n\n  render() {\n    return (\n      <Box\n        width={1}\n      >\n        <Flex\n          mb={3}\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={(this.state.selectedProposal || this.state.addProposal) ? 'space-between' : 'flex-end'}\n        >\n          {\n            this.state.selectedProposal ? (\n              <Flex\n                alignItems={'center'}\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Governance'}\n                  pathLink={['proposals']}\n                  isMobile={this.props.isMobile}\n                  handleClick={ e => this.props.goToSection('/') }\n                  path={['Proposals',this.state.selectedProposal.title]}\n                />\n              </Flex>\n            ) : this.state.addProposal ? (\n              <Flex\n                alignItems={'center'}\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Governance'}\n                  pathLink={['proposals']}\n                  isMobile={this.props.isMobile}\n                  path={['Proposals','Add proposal']}\n                  handleClick={ e => this.props.goToSection('/') }\n                />\n              </Flex>\n            ) : (\n              <Flex\n                alignItems={'center'}\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Governance'}\n                  path={['Proposals']}\n                  isMobile={this.props.isMobile}\n                  handleClick={ e => this.props.goToSection('/') }\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.state.addProposal && \n              <Flex\n                width={0.5}\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <CardIconButton\n                  icon={'Add'}\n                  {...this.props}\n                  text={'New Proposal'}\n                  handleClick={ e => this.props.goToSection(`proposals/new`) }\n                />\n              </Flex>\n          }\n        </Flex>\n        {\n          this.state.selectedProposal ? (\n            <Box\n              width={1}\n            >\n              <ProposalDetails\n                {...this.props}\n                loadData={this.loadData.bind(this)}\n                proposal={this.state.selectedProposal}\n              />\n            </Box>\n          ) : this.state.addProposal ? (\n            <Box\n              width={1}\n            >\n              <NewProposal\n                {...this.props}\n              />\n            </Box>\n          ) : (\n            <Box\n              width={1}\n            >\n              <Title\n                mb={[3,4]}\n              >\n                Governance Proposals\n              </Title>\n              <Flex\n                mb={3}\n                width={1}\n                id={'proposals'}\n                flexDirection={'column'}\n              >\n                <ProposalsList\n                  {...this.props}\n                  proposals={this.state.proposals}\n                  cols={[\n                    {\n                      title: '#',\n                      props:{\n                        width:[0.1,0.05]\n                      },\n                      fields:[\n                        {\n                          name:'id',\n                          props:{\n                          }\n                        },\n                      ]\n                    },\n                    {\n                      title:'DATE',\n                      mobile:false,\n                      props:{\n                        width:[0.15,0.12],\n                      },\n                      fields:[\n                        {\n                          name:'date'\n                        }\n                      ]\n                    },\n                    {\n                      title:'TITLE',\n                      props:{\n                        width:[0.75,0.60],\n                      },\n                      fields:[\n                        {\n                          name:'title'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'VOTES',\n                      props:{\n                        width:[0.11,0.11],\n                      },\n                      fields:[\n                        {\n                          name:'votes'\n                        }\n                      ]\n                    },\n                    {\n                      title:'STATUS',\n                      props:{\n                        width:[0.15,0.12],\n                        alignItems:['center','flex-start'],\n                        justifyContent:['center','flex-start']\n                      },\n                      parentProps:{\n                        justifyContent:['center','flex-start']\n                      },\n                      fields:[\n                        {\n                          name:'statusIcon',\n                          props:{\n                            mr:[0,2],\n                          },\n                        },\n                        {\n                          mobile:false,\n                          name:'status'\n                        }\n                      ]\n                    },\n                  ]}\n                />\n              </Flex>\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Proposals;\n","import Title from '../../Title/Title';\nimport React, { Component } from 'react';\nimport ExtLink from '../../ExtLink/ExtLink';\nimport StatsCard from '../../StatsCard/StatsCard';\nimport { Box, Flex, Blockie, Icon } from \"rimble-ui\";\nimport ProposalsList from '../ProposalsList/ProposalsList';\nimport GovernanceUtil from '../../utilities/GovernanceUtil';\nimport ShortHash from \"../../utilities/components/ShortHash\";\n\nclass DelegateDetails extends Component {\n\n  state = {\n    proposals:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadProposals();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const delegateChanged = JSON.stringify(prevProps.delegate) !== JSON.stringify(this.props.delegate);\n    if (delegateChanged){\n      this.loadProposals();\n    }\n  }\n\n  async loadProposals(){\n    const delegate = this.props.delegate;\n    const proposals = await this.governanceUtil.getProposals(delegate.delegate);\n\n    this.setState({\n      proposals\n    });\n  }\n\n  render() {\n\n    const delegate = this.props.delegate;\n\n    // rank\n    // votes\n    // delegate\n    // proposals\n    // vote_weight\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={[3,4]}\n        >\n          Delegate Details\n        </Title>\n        <Flex\n          mb={3}\n          width={1}\n          alignItems={'center'}\n          justifyContent={'center'}\n          flexDirection={['column','row']}\n        >\n          <Flex\n            mb={[2,0]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              label={null}\n              title={'Rank'}\n              value={delegate.rank}\n              labelTooltip={ null }\n              minHeight={['100px','143px']}\n              titleMinHeight={['auto','50px']}\n            />\n          </Flex>\n          <Flex\n            mb={[2,0]}\n            pl={[0,1]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              titleMinHeight={['auto','50px']}\n              minHeight={['100px','143px']}\n              labelTooltip={ null }\n              title={'Address'}\n              label={null}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Blockie\n                  opts={{\n                    size: 12,\n                    color: \"#dfe\",\n                    bgcolor: \"#a71\",\n                    spotcolor: \"#000\",\n                    seed: delegate.delegate,\n                  }}\n                />\n                <ExtLink\n                  href={this.functionsUtil.getEtherscanAddressUrl(delegate.delegate)}\n                >\n                  <Flex\n                    flexDirection={'row'}\n                    alignItems={'flex-end'}\n                    justifyContent={'flex-start'}\n                  >\n                    <ShortHash\n                      ml={2}\n                      lineHeight={1}\n                      {...this.props}\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                      color={'statValue'}\n                      hash={delegate.delegate}\n                    />\n                    <Icon\n                      ml={1}\n                      size={'1.2em'}\n                      name={'OpenInNew'}\n                      color={'statValue'}\n                    />\n                  </Flex>\n                </ExtLink>\n              </Flex>\n            </StatsCard>\n          </Flex>\n          <Flex\n            mb={[2,0]}\n            pl={[0,1]}\n            pr={[0,1]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              label={null}\n              title={'Votes'}\n              labelTooltip={null}\n              minHeight={['100px','143px']}\n              titleMinHeight={['auto','50px']}\n              value={this.functionsUtil.formatMoney(this.functionsUtil.BNify(delegate.votes).toFixed(2,1),2)}\n            />\n          </Flex>\n          <Flex\n            pl={[0,1]}\n            mb={[2,0]}\n            width={[1,1/4]}\n            flexDirection={'column'}\n          >\n            <StatsCard\n              label={null}\n              labelTooltip={ null }\n              title={'Proposals Voted'}\n              value={delegate.proposals}\n              minHeight={['100px','143px']}\n              titleMinHeight={['auto','50px']}\n            />\n          </Flex>\n        </Flex>\n        <Box\n          width={1}\n          mt={[4,5]}\n        >\n          <Title\n            mb={[2,3]}\n          >\n            Voting History\n          </Title>\n          <Flex\n            mb={[3,4]}\n            width={1}\n            id={'transactions'}\n            flexDirection={'column'}\n          >\n            <ProposalsList\n              {...this.props}\n              rowsPerPage={5}\n              delegate={delegate}\n              filtersEnabled={false}\n              proposals={this.state.proposals}\n              cols={[\n                {\n                  title: '#',\n                  props:{\n                    width:[0.08,0.05]\n                  },\n                  fields:[\n                    {\n                      name:'id',\n                      props:{\n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'DATE',\n                  mobile:false,\n                  props:{\n                    width:0.12,\n                  },\n                  fields:[\n                    {\n                      name:'date'\n                    }\n                  ]\n                },\n                {\n                  title:'TITLE',\n                  props:{\n                    width:[0.66,0.57],\n                  },\n                  fields:[\n                    {\n                      name:'title'\n                    }\n                  ]\n                },\n                {\n                  title:'VOTE',\n                  props:{\n                    width:[0.14,0.14],\n                    textAlign:'center'\n                  },\n                  fields:[\n                    {\n                      name:'support',\n                      parentProps:{\n                        alignItems:'center'\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.12,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  parentProps:{\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      name:'statusIcon',\n                      props:{\n                        mr:[0,2]\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'status'\n                    }\n                  ]\n                },\n              ]}\n            />\n          </Flex>\n        </Box>\n      </Box>\n    );\n  }\n}\n\nexport default DelegateDetails;","import Title from '../Title/Title';\nimport { Box, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport GovernanceUtil from '../utilities/GovernanceUtil';\nimport DelegatesList from './DelegatesList/DelegatesList';\nimport DelegateDetails from './DelegateDetails/DelegateDetails';\n\nclass Leaderboard extends Component {\n  state = {\n    maxRows:100,\n    delegates:null,\n    selectedDelegate:null\n  };\n\n  // Utils\n  governanceUtil = null;\n\n  loadUtils(){\n    if (this.governanceUtil){\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const delegates = await this.governanceUtil.getDelegates();\n\n    const { match: { params } } = this.props;\n\n    // Select delegate\n    let selectedDelegate = null;\n    if (params.item_id){\n      const delegateId = params.item_id.toLowerCase();\n      const foundProposal = delegates.find( d => d.delegate.toLowerCase() === delegateId );\n      if (foundProposal){\n        selectedDelegate = foundProposal;\n      }\n    }\n\n    this.setState({\n      delegates,\n      selectedDelegate\n    });\n  }\n\n  render() {\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          this.state.selectedDelegate ? (\n            <Box\n              width={1}\n            >\n              <Flex\n                mb={3}\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'flex-start'}\n              >\n                <Flex\n                  width={1}\n                >\n                  <Breadcrumb\n                    {...this.props}\n                    text={'Governance'}\n                    pathLink={['leaderboard']}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => this.props.goToSection('') }\n                    path={['Leaderboard',this.state.selectedDelegate.delegate]}\n                  />\n                </Flex>\n              </Flex>\n              <DelegateDetails\n                {...this.props}\n                delegate={this.state.selectedDelegate}\n              />\n            </Box>\n          ) : (\n            <Box\n              width={1}\n            >\n              <Flex\n                mb={3}\n                width={1}\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'flex-start'}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Governance'}\n                  path={['Leaderboard']}\n                  isMobile={this.props.isMobile}\n                  handleClick={ e => this.props.goToSection('') }\n                />\n              </Flex>\n              <Title\n                mb={[3,4]}\n              >\n                Governance Leaderboard\n              </Title>\n              <Flex\n                mb={3}\n                width={1}\n                id={'leaderboard'}\n                flexDirection={'column'}\n              >\n                <DelegatesList\n                  {...this.props}\n                  delegates={this.state.delegates}\n                  cols={[\n                    {\n                      title: 'RANK',\n                      props:{\n                        width:[0.13,0.08]\n                      },\n                      fields:[\n                        {\n                          name:'rank'\n                        },\n                      ]\n                    },\n                    {\n                      title:'ADDRESS',\n                      props:{\n                        width:[0.60,0.50],\n                      },\n                      fields:[\n                        {\n                          mobile:false,\n                          name:'avatar',\n                          props:{\n                            mr:2\n                          }\n                        },\n                        {\n                          name:'delegate'\n                        }\n                      ]\n                    },\n                    {\n                      title:'VOTES',\n                      props:{\n                        width:[0.27,0.12],\n                      },\n                      fields:[\n                        {\n                          name:'votes'\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'VOTE WEIGHT',\n                      props:{\n                        width:[0.15,0.15],\n                      },\n                      fields:[\n                        {\n                          name:'vote_weight',\n                          parentProps:{\n                            alignItems:'center'\n                          }\n                        }\n                      ]\n                    },\n                    {\n                      mobile:false,\n                      title:'PROPOSALS VOTED',\n                      props:{\n                        width:[0.15,0.15],\n                      },\n                      fields:[\n                        {\n                          name:'proposals',\n                          parentProps:{\n                            alignItems:'center'\n                          }\n                        }\n                      ]\n                    },\n                  ]}\n                />\n              </Flex>\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Leaderboard;","import React, { Component } from \"react\";\nimport FlexLoader from \"../FlexLoader/FlexLoader\";\nimport { Flex, Card, Icon, Text } from \"rimble-ui\";\nimport GovernanceUtil from \"../utilities/GovernanceUtil\";\nimport DashboardMenu from \"../DashboardMenu/DashboardMenu\";\n\n// Import page components\nimport Overview from \"./Overview\";\nimport Delegate from \"./Delegate\";\nimport Proposals from \"./Proposals\";\nimport Leaderboard from \"./Leaderboard\";\nimport RoundButton from \"../RoundButton/RoundButton\";\nimport Swipeable from '../utilities/components/Swipeable';\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\nimport TooltipModal from \"../utilities/components/TooltipModal\";\nimport DashboardHeader from \"../DashboardHeader/DashboardHeader\";\n\nclass Dashboard extends Component {\n  state = {\n    menu:[],\n    votes:null,\n    balance:null,\n    baseRoute:null,\n    modalTitle:null,\n    clickEvent:null,\n    activeModal:null,\n    menuOpened:false,\n    blockNumber:null,\n    currentRoute:null,\n    votingPeriod:null,\n    modalContent:null,\n    pageComponent:null,\n    timelockDelay:null,\n    currentSection:null,\n    selectedSection:null,\n    currentDelegate:null,\n    proposalThreshold:null,\n    selectedSubsection:null,\n    proposalMaxOperations:null\n  };\n\n  timeoutId = null;\n\n  // Utils\n  functionsUtil = null;\n  governanceUtil = null;\n\n  loadUtils() {\n    if (this.governanceUtil) {\n      this.governanceUtil.setProps(this.props);\n    } else {\n      this.governanceUtil = new GovernanceUtil(this.props);\n    }\n\n    window.governanceUtil = this.governanceUtil;\n    window.functionsUtil = this.functionsUtil = this.governanceUtil.functionsUtil;\n  }\n\n  async loadMenu() {\n    const menu = [];\n    const baseRoute = this.functionsUtil.getGlobalConfig([\n      \"governance\",\n      \"baseRoute\"\n    ]);\n    const extraicons = this.functionsUtil.getGlobalConfig([\"extraicons\"]);\n\n    // Add Proposals\n    menu.push({\n      submenu: [],\n      selected: true,\n      route: baseRoute,\n\n      label: \"Overview\",\n      color: \"dark-gray\",\n      component: Overview,\n      bgColor: this.props.theme.colors.primary,\n      image: extraicons[\"overview\"].icon,\n      imageDark: extraicons[\"overview\"].iconDark,\n      imageInactive: extraicons[\"overview\"].iconInactive,\n      imageInactiveDark: extraicons[\"overview\"].iconInactiveDark\n    });\n\n    // Add Proposals\n    menu.push({\n      submenu: [],\n      selected: false,\n      label: \"Proposals\",\n      bgColor: \"#00acff\",\n      color: \"dark-gray\",\n      component: Proposals,\n      route: `${baseRoute}/proposals`,\n      image: extraicons[\"proposals\"].icon,\n      imageDark: extraicons[\"proposals\"].iconDark,\n      imageInactive: extraicons[\"proposals\"].iconInactive,\n      imageInactiveDark: extraicons[\"proposals\"].iconInactiveDark\n    });\n\n    // Add Leaderboard\n    menu.push({\n      submenu: [],\n      selected: false,\n      bgColor: \"#ff0000\",\n      color: \"dark-gray\",\n      label: \"Leaderboard\",\n      component: Leaderboard,\n\n      route: `${baseRoute}/leaderboard`,\n      image: extraicons[\"leaderboard\"].icon,\n      imageDark: extraicons[\"leaderboard\"].iconDark,\n      imageInactive: extraicons[\"leaderboard\"].iconInactive,\n      imageInactiveDark: extraicons[\"leaderboard\"].iconInactiveDark\n    });\n\n    // Add tools\n    menu.push({\n      submenu: [],\n      selected: false,\n      label: \"Delegate\",\n      color: \"dark-gray\",\n      bgColor: \"#ff0000\",\n      component: Delegate,\n\n      route: `${baseRoute}/delegate`,\n      image: extraicons[\"delegate\"].icon,\n      imageDark: extraicons[\"delegate\"].iconDark,\n      imageInactive: extraicons[\"delegate\"].iconInactive,\n      imageInactiveDark: extraicons[\"delegate\"].iconInactiveDark\n    });\n\n    // Add Forum\n    menu.push({\n      submenu: [],\n\n      mobile: false,\n      label: \"Forum\",\n      selected: false,\n      component: null,\n      color: \"dark-gray\",\n      bgColor: \"#ff0000\",\n      isExternalLink: true,\n      route: this.functionsUtil.getGlobalConfig([\"forumURL\"]),\n      image: extraicons[\"forum\"].icon,\n      imageDark: extraicons[\"forum\"].iconDark,\n      imageInactive: extraicons[\"forum\"].iconInactive,\n      imageInactiveDark: extraicons[\"forum\"].iconInactiveDark\n    });\n\n    await this.setState({\n      menu,\n      baseRoute\n    });\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  };\n\n  openTooltipModal = (modalTitle, modalContent) => {\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: \"UI\",\n      eventAction: modalTitle,\n      eventLabel: \"TooltipModal\"\n    });\n\n    this.setState(\n      {\n        modalTitle,\n        modalContent\n      },\n      () => {\n        this.setActiveModal(\"tooltip\");\n      }\n    );\n  };\n\n  setActiveModal = activeModal => {\n    this.setState({\n      activeModal\n    });\n  };\n\n  async loadParams() {\n    const {\n      match: { params }\n    } = this.props;\n\n    const baseRoute = this.state.baseRoute;\n    const currentRoute = window.location.hash.substr(1);\n\n    let pageComponent = null;\n    let currentSection = null;\n\n    const menu = this.state.menu;\n\n    let selectedSection = null;\n    let selectedSubsection = null;\n\n    menu.forEach(m => {\n      m.selected = false;\n      const sectionRoute = baseRoute + \"/\" + params.section;\n      if (\n        currentRoute.toLowerCase() === m.route.toLowerCase() ||\n        (!m.submenu.length &&\n          m.route.toLowerCase() === sectionRoute.toLowerCase())\n      ) {\n        m.selected = true;\n        if (pageComponent === null) {\n          pageComponent = m.component;\n        }\n      } else if (m.submenu.length) {\n        m.submenu.forEach(subm => {\n          subm.selected = false;\n          const submRoute = m.route + \"/\" + subm.route;\n          if (submRoute.toLowerCase() === currentRoute.toLowerCase()) {\n            m.selected = true;\n            subm.selected = true;\n\n            // Set component, if null use parent\n            if (pageComponent === null) {\n              if (subm.component) {\n                pageComponent = subm.component;\n              } else {\n                pageComponent = m.component;\n              }\n            }\n          }\n\n          // Set selected subsection\n          if (subm.selected) {\n            selectedSubsection = subm;\n          }\n        });\n      }\n\n      // Set selected section\n      if (m.selected) {\n        selectedSection = m;\n      }\n    });\n\n    // Exit if no strategy and token selected\n    if (!pageComponent) {\n      return this.goToSection(\"/\", false);\n    }\n\n    // Send GA pageview\n    this.functionsUtil.sendGoogleAnalyticsPageview(currentRoute);\n\n    await this.setState({\n      menu,\n      params,\n      baseRoute,\n      currentRoute,\n      pageComponent,\n      currentSection,\n      selectedSection,\n      selectedSubsection\n    });\n  }\n\n  componentWillUnmount() {\n    if (this.timeoutId) {\n      window.clearTimeout(this.timeoutId);\n    }\n  }\n\n  async componentWillMount() {\n    this.props.setCurrentSection(\"governance\");\n    this.loadUtils();\n\n    // const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    // if (!governanceEnabled){\n    //   this.goToSection('/',false);\n    // }\n\n    await this.loadMenu();\n    this.loadParams();\n  }\n\n  async componentDidMount() {\n    this.timeoutId = window.setTimeout(() => {\n      if (!this.props.accountInizialized || !this.props.contractsInitialized) {\n        this.setState({\n          showResetButton: true\n        });\n      }\n    }, 20000);\n\n    /*\n    if (!this.props.web3){\n      return this.props.initWeb3();\n    } else if (!this.props.accountInizialized){\n      return this.props.initAccount();\n    } else if (!this.props.contractsInitialized){\n      return this.props.initializeContracts();\n    }\n    */\n\n    this.loadUtils();\n    await this.loadMenu();\n    this.loadParams();\n    this.loadData();\n  }\n\n  checkEnabled(){\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const governanceConfig = this.functionsUtil.getGlobalConfig(['governance']);\n    const governanceEnabled = governanceConfig.enabled && governanceConfig.availableNetworks.includes(currentNetwork.id);\n    console.log('governanceEnabled',currentNetwork,governanceEnabled);\n    if (!governanceEnabled){\n      this.goToSection('/',false);\n    }\n    return governanceEnabled;\n  }\n\n  async componentDidUpdate(prevProps,prevState) {\n    this.loadUtils();\n\n    const prevParams = prevProps.match.params;\n    const params = this.props.match.params;\n\n    if (JSON.stringify(prevParams) !== JSON.stringify(params)) {\n      await this.setState(\n        {\n          pageComponent: null\n        },\n        () => {\n          this.loadParams();\n        }\n      );\n    }\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const accountInizialized =\n      this.props.accountInizialized &&\n      prevProps.accountInizialized !== this.props.accountInizialized;\n    const contractsInitialized =\n      this.props.contractsInitialized &&\n      prevProps.contractsInitialized !== this.props.contractsInitialized;\n\n    if (accountChanged || accountInizialized || contractsInitialized) {\n      this.loadData();\n    }\n  }\n\n  goToSection(section, isGovernance = true) {\n    // Remove dashboard route\n    if (isGovernance) {\n      section = section.replace(this.state.baseRoute + \"/\", \"\");\n    }\n\n    const newRoute = (isGovernance\n      ? this.state.baseRoute + (section.length > 0 ? \"/\" + section : \"\")\n      : section\n    ).replace(/[/]+$/, \"\");\n    window.location.hash = newRoute;\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: \"UI\",\n      eventLabel: newRoute,\n      eventAction: \"goToSection\"\n    });\n\n    window.scrollTo(0, 0);\n  }\n\n  async loadData() {\n    if (!this.props.web3 || !this.props.contractsInitialized) {\n      return false;\n    }\n\n    const newState = {};\n    const [\n      blockNumber,\n      votingPeriod,\n      timelockDelay,\n      { proposalThreshold, proposalMaxOperations }\n    ] = await Promise.all([\n      this.functionsUtil.getBlockNumber(),\n      this.governanceUtil.getVotingPeriod(),\n      this.governanceUtil.getTimelockDelay(),\n      this.governanceUtil.getProposalParams()\n    ]);\n\n    newState.blockNumber = blockNumber;\n    newState.votingPeriod = votingPeriod;\n    newState.timelockDelay = timelockDelay;\n    newState.proposalThreshold = proposalThreshold;\n    newState.proposalMaxOperations = proposalMaxOperations;\n\n    if (this.props.account) {\n      const [votes, balance, currentDelegate] = await Promise.all([\n        this.governanceUtil.getCurrentVotes(this.props.account),\n        this.governanceUtil.getTokensBalance(this.props.account),\n        this.governanceUtil.getCurrentDelegate(this.props.account)\n      ]);\n\n      newState.votes = votes;\n      newState.balance = balance;\n      newState.currentDelegate = currentDelegate;\n    }\n\n    this.setState(newState);\n  }\n\n  logout = async () => {\n    this.props.setConnector(\"Infura\", \"Infura\");\n    await this.props.initWeb3(\"Infura\");\n  };\n\n  setMenu(menuOpened){\n    this.setState({\n      menuOpened\n    });\n  }\n\n  toggleMenu(){\n    const menuOpened = !this.state.menuOpened;\n    this.setMenu(menuOpened);\n  }\n\n  swipeCallback(eventData){\n    // console.log('swipeCallback',eventData);\n    if (eventData.dir === 'Right'){\n      this.setMenu(true);\n    } else if (eventData.dir === 'Left'){\n      this.setMenu(false);\n    }\n  }\n\n  render() {\n    const PageComponent = this.state.pageComponent\n      ? this.state.pageComponent\n      : null;\n    return (\n      <Swipeable\n        callback={this.swipeCallback.bind(this)}\n      >\n        <Flex\n          height={'100vh'}\n          position={'fixed'}\n          flexDirection={'row'}\n          className={this.props.themeMode}\n          backgroundColor={['dashboardBg','white']}\n          width={this.props.isMobile && this.state.menuOpened ? '180vw' : '100vw'}\n          /*onClick={ e => this.propagateClickEvent(e) }*/\n        >\n          {\n            (!this.props.isMobile || this.state.menuOpened) && (\n              <Flex\n                bottom={0}\n                zIndex={99999}\n                width={['80vw',1/6]}\n                position={'relative'}\n                flexDirection={'column'}\n              >\n                <Card\n                  p={3}\n                  border={0}\n                  width={'auto'}\n                  height={'100vh'}\n                  backgroundColor={'menuBg'}\n                  borderColor={this.props.theme.colors.menuRightBorder}\n                  borderRight={`1px solid ${this.props.theme.colors.menuRightBorder}`}\n                  >\n                  <DashboardMenu\n                    {...this.props}\n                    menu={this.state.menu}\n                    closeMenu={e => this.setMenu(false)}\n                  />\n                </Card>\n              </Flex>\n            )\n          }\n          <Flex\n            py={3}\n            mb={0}\n            px={[3,5]}\n            width={['100vw',5/6]}\n            style={{\n              overflowY:'scroll',\n              overflowX:'hidden'\n            }}\n            height={['100vh','auto']}\n            flexDirection={'columns'}\n            backgroundColor={'dashboardBg'}\n          >\n          {\n            !this.props.accountInizialized || !this.props.contractsInitialized || !PageComponent ? (\n              <Flex\n                width={1}\n                minHeight={\"50vg\"}\n                alignItems={\"center\"}\n                flexDirection={\"column\"}\n                justifyContent={\"center\"}\n              >\n                {!this.props.network.isCorrectNetwork ? (\n                  <DashboardCard\n                    cardProps={{\n                      p: 3,\n                      mt: 3,\n                      width: [1, 0.35]\n                    }}\n                  >\n                    <Flex alignItems={\"center\"} flexDirection={\"column\"}>\n                      <Icon size={\"2.3em\"} name={\"Warning\"} color={\"cellText\"} />\n                      <Text\n                        mt={2}\n                        fontSize={2}\n                        color={\"cellText\"}\n                        textAlign={\"center\"}\n                      >\n                        The{\" \"}\n                        <strong>\n                          {this.functionsUtil.capitalize(\n                            this.props.network.current.name\n                          )}{\" \"}\n                          Network\n                      </strong>{\" \"}\n                        is not supported, please switch to the correct network.\n                    </Text>\n                    </Flex>\n                  </DashboardCard>\n                ) : !this.state.showResetButton ? (\n                  <FlexLoader\n                    textProps={{\n                      textSize: 4,\n                      fontWeight: 2\n                    }}\n                    loaderProps={{\n                      mb: 3,\n                      size: \"40px\"\n                    }}\n                    flexProps={{\n                      my: 3,\n                      flexDirection: \"column\"\n                    }}\n                    text={\n                      !this.props.accountInizialized\n                        ? \"Loading account...\"\n                        : !this.props.contractsInitialized\n                          ? \"Loading contracts...\"\n                          : \"Loading assets...\"\n                    }\n                  />\n                ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p: 3,\n                          mt: 3,\n                          width: [1, 0.35]\n                        }}\n                      >\n                        <Flex alignItems={\"center\"} flexDirection={\"column\"}>\n                          <Icon size={\"2.3em\"} name={\"Warning\"} color={\"cellText\"} />\n                          <Text\n                            mt={2}\n                            fontSize={2}\n                            color={\"cellText\"}\n                            textAlign={\"center\"}\n                          >\n                            Idle can't connect to your wallet!\n                      <br />\n                            Make sure that your wallet is unlocked and try again.\n                    </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt: 3,\n                              width: [1, 1 / 2]\n                            }}\n                            handleClick={this.logout.bind(this)}\n                          >\n                            Logout\n                    </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )}\n              </Flex>\n            ) : (\n              <Flex width={1} flexDirection={\"column\"}>\n                <DashboardHeader\n                  menuOpened={this.state.menuOpened}\n                  clickEvent={this.state.clickEvent}\n                  toggleMenu={this.toggleMenu.bind(this)}\n                  goToSection={this.goToSection.bind(this)}\n                  {...this.props}\n                />\n                {PageComponent && (\n                  <PageComponent\n                    {...this.props}\n                    votes={this.state.votes}\n                    balance={this.state.balance}\n                    urlParams={this.state.params}\n                    blockNumber={this.state.blockNumber}\n                    votingPeriod={this.state.votingPeriod}\n                    loadUserData={this.loadData.bind(this)}\n                    timelockDelay={this.state.timelockDelay}\n                    goToSection={this.goToSection.bind(this)}\n                    currentDelegate={this.state.currentDelegate}\n                    selectedSection={this.state.selectedSection}\n                    proposalThreshold={this.state.proposalThreshold}\n                    selectedSubsection={this.state.selectedSubsection}\n                    openTooltipModal={this.openTooltipModal.bind(this)}\n                    proposalMaxOperations={this.state.proposalMaxOperations}\n                  />\n                )}\n              </Flex>\n            )\n          }\n          </Flex>\n          <TooltipModal\n            closeModal={this.resetModal}\n            title={this.state.modalTitle}\n            content={this.state.modalContent}\n            isOpen={this.state.activeModal === 'tooltip'}\n          >\n          </TooltipModal>\n        </Flex>\n      </Swipeable>\n    );\n  }\n}\n\nexport default Dashboard;"],"sourceRoot":""}