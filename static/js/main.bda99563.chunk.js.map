{"version":3,"sources":["ChartCustomTooltipRow/ChartCustomTooltipRow.js","RoundButton/RoundButton.js","PageNotFound/PageNotFound.module.scss","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","SmartNumber/SmartNumber.js","CustomTooltip/CustomTooltip.js","AllocationChart/AllocationChart.js","CustomTooltip/CustomTooltipRow.js","PortfolioEquity/PortfolioEquity.js","ChartCustomTooltip/ChartCustomTooltip.js","TxProgressBar/TxProgressBar.js","theme.js","CustomField/CustomField.js","CustomList/CustomList.js","ActiveCoverages/ActiveCoverages.js","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","utilities/components/ModalCard.module.scss","GenericSelector/GenericSelector.js","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","AssetSelector/AssetSelector.js","CardIconButton/CardIconButton.js","utilities/components/Header.module.scss","IconBox/IconBox.js","Tos/Tos.module.scss","TransactionField/TransactionField.js","Title/Title.js","GenericChart/GenericChart.js","ExecuteTransaction/ExecuteTransaction.js","DashboardCard/DashboardCard.module.scss","FastBalanceSelector/FastBalanceSelector.js","Staking/Staking.js","TokenSwap/TokenSwap.js","SendTxWithBalance/SendTxWithBalance.js","LpStaking/LpStaking.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","TotalEarningsCounter/TotalEarningsCounter.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","TotalBalanceCounter/TotalBalanceCounter.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","configs/globalConfigs.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","TableRow/TableRow.js","TableHeader/TableHeader.js","Migrate/Migrate.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","colors.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","utilities/components/BuyModal.js","ConnectBox/ConnectBox.js","utilities/components/ModalCard.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js","FlexLoader/FlexLoader.js","ImageButton/ImageButton.js","AssetField/AssetField.js","ExtLink/ExtLink.js"],"names":["ChartCustomTooltipRow","prevProps","prevState","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","mb","width","alignItems","flexDirection","pr","style","flexBasis","flex","justifyContent","this","props","color","mr","height","borderRadius","backgroundColor","fontSize","fontWeight","textAlign","textTransform","label","whiteSpace","dangerouslySetInnerHTML","__html","value","Component","RoundButton","buttonProps","Object","assign","boxShadow","mainColor","react__WEBPACK_IMPORTED_MODULE_6___default","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","onClick","handleClick","children","module","exports","headerContainer","headerBgFiller","bgContainer","list","textContainer","ShortHash","state","text","functionsUtil","setProps","FunctionsUtil","loadUtils","loadData","resolveAddress","shortenHash","hash","getENSName","ensName","setState","loader","size","display","LoadingSpinner","react_default","index_es","className","styles","mx","ButtonLoader","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","TransactionListFilters","maxWidth","minWidth","maxHeight","isOpened","activeFilters","status","assets","actions","setFilter","filter","_this","objectSpread","defineProperty","applyFilters","toggle","arguments","length","undefined","toggleOpened","resetFilter","resetFilters","_this2","top","zIndex","position","DashboardCard","cardProps","py","px","transition","isInteractive","cursor","isMobile","name","overflow","mt","borderTop","concat","theme","colors","divider","keys","filters","map","filterCategory","filterValues","key","TableCellHeader","pb","toUpperCase","filterValue","filterLabel","isChecked","my","checked","radioBtn","onChange","e","Text","ml","values","v","filterName","hoverColor","TransactionsList","page","prevTxs","txsPerPage","loading","totalTxs","totalPages","deposit","redeem","send","receive","migrate","swap","swapout","withdraw","completed","pending","failed","renderedTxs","processedTxs","lastBlockNumber","processTxs","availableActions","action","toLowerCase","txsIndexes","tx","parseFloat","token","includes","sort","b","timeStamp","Math","ceil","forEach","i","selectedToken","tokenConfig","availableTokens","decimals","min","date","Date","getTxAction","parsedValue","tokenAmount","amount","toFixed","momentDate","strToMoment","push","preventDefault","max","loadTxs","transactionsChanged","JSON","stringify","transactions","enabledTokens","count","account","firstBlockNumber","getGlobalConfig","enabledActions","getEtherscanTxs","etherscanTxs","hashKey","lastTx","pop","blockNumber","parseInt","_this3","_this4","hasActiveFilters","m","FlexLoader","flexProps","minHeight","loaderProps","textProps","id","pt","src_TransactionListFilters_TransactionListFilters","bind","TableHeader","cols","index","txHash","txHashKey","TableRow","rowProps","transaction","window","open","getEtherscanTransactionUrl","rowId","cardId","fieldComponent","TransactionField","prevPage","nextPage","h3","fontFamily","SmartNumber","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","maxPrecision","minPrecision","p","showUnit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unit","unitProps","CustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","point","left","data","itemPos","xFormatted","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","componentUnmounted","setStateSafe","newState","callback","getTokenAllocation","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","onMouseLeave","tooltipFormat","sliceLabel","radialLabel","tooltip","container","inline","background","cardBg","labels","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","margin","right","bottom","protocols","protocolInfo","protocolName","protocolAddr","address","protocolAllocationPercParsed","times","globalConfigs","stats","hsl","join","capitalize","protocolIcon","icon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","src","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","CustomTooltipRow","react__WEBPACK_IMPORTED_MODULE_5___default","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","componentDidMount","mobileChanged","themeModeChanged","themeMode","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","BNify","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","currentDate","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","_context4","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","chartToken","conversionRate","isSameOrAfter","isSameOrBefore","formattedDate","format","frequencySeconds","_loop","aggregatedBalances","x","y","balances","itemIndex","item","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","daysCount","daysFrequency","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","legendPosition","tickValues","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","ChartCustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","TxProgressBar","txCount","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_callee","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","_context","initProgressBar","getTransaction","Promise","_ref3","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","console","log","web3","eth","err","_x","_x2","abrupt","getBlockTime","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","target","rel","href","cancelTransaction","cancelTextColor","cancelTextHoverColor","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","fontSizes","fontWeights","letterSpacings","lineHeights","solid","title","copy","serif","counter","space","radii","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","disabled","primary","blue","base","gradient-bg","primary-light","light","primary-dark","dark","bgBlue","dark-blue","skyBlue","lightBlue","copyColor","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","link","menuBg","menuHover","flashColor","menuRightBorder","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","boost","curvein","default","curveout","curvedepositin","curvedepositout","actionBg","blacks","whites","zIndices","messageStyle","shade","tint","success","green","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","CustomField","fieldInfo","fieldProps","funcProps","CustomComponent","componentHasChildren","fieldType","fieldPath","path","customValue","getArrayPath","row","Image","Icon","Button","customFieldName","customFieldProps","CustomList","rows","rowIndex","Base","loaded","activeCoverages","loadCoverages","getActiveCoverages","coverages","c","collateral","statusColors","statusIcon","statusColor","statusIconProps","portfolioCoverage","Title","titleProps","src_CustomList_CustomList","fileClaimUrl","openWindow","fields","mobile","parentProps","actionLabel","actionDisabled","actionUrl","bg","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","menuIsOpen","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","CustomIndicatorSeparator","CustomMenu","selectProps","CustomInputContainer","isSearchable","searchInput","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","button","AssetSelector","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","showCustomField","cachedData","setCachedData","showBalance","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","CardIconButton","isActive","image","align","imageProps","useIconOnly","iconColor","iconProps","iconBgColor","gradientButton","empty","select","selectDark","input","IconBox","isVisible","loadField","hashChanged","accountChanged","output","bgColor","textOverflow","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_12__","border","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","tokenSymbol","iconSrc","lineHeight","HeadingComponent","component","Heading","h1","GenericChart","addEventListener","handleWindowSizeChange","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","loaderText","ExecuteTransaction","txStatus","eventData","eventCategory","eventLabel","methodName","eventAction","contractName","getTransactionError","sendGoogleAnalyticsEvent","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","react__WEBPACK_IMPORTED_MODULE_9___default","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_11__","network","progressBarProps","execute","componentProps","defaultOpacity","hidden","interactive","rainbow","FastBalanceSelector","onMouseDown","replaceArrayProps","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","Staking","contractInfo","selectedOption","toolProps","contract","initContract","abi","reduce","enabled","SelectedComponent","AssetField","selectToken","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","baseToken","regenerator_default","selectDestToken","getGlobalConfigs","paymentProvider","providerInfo","initProps","buttonId","initParams","getInitParams","render","remoteResources","url","j","split","scriptID","script","remoteResourceParams","precall","readyState","onreadystatechange","onload","async","parentElement","appendChild","head","stylesheetId","loadTokens","asyncToGenerator","getContractByName","fromTokenChanged","destTokenChanged","loadKyberWidget","SendTxWithBalance","inputValue","txSucceeded","permitEnabled","showPermitBox","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","tokenBalance","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","lte","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","enableERC20","executeTx","_amount","signedParameters","_params","methodParams","normalizeTokenAmount","eventValue","signPermit","getPermitTransactionParams","approveCallback","actionChanged","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","approveEnabled","contractChanged","tokenConfigChanged","checkTokenApproved","viewOnly","connectorName","infoBox","steps","step","stepIndex","ExtLink","description","required","togglePermitEnabled","balanceSelectorInfo","placeholder","approveDescription","ConnectBox","LpStaking","globalStats","balanceProp","statsLoaded","stakedBalance","rewardMultiplier","accountingData","selectedAction","successMessage","poolTokenPrice","rewardTokenPrice","tokenWrapperProps","distributionSpeed","transactionSucceeded","showTokenWrapperEnabled","updateData","selectedActionChanged","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","apy","rewardToken","normalizedInputValue","genericContractCall","unstakeRewards","toBN","expiry","r","s","integerValue","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","now","programDuration","utc","initialLockedShares","durationSec","tokensPerSecond","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","txReceipt","logs","_this5","topics","t","replace","stakedTokens","unstakedTokensLog","unstakedTokens","rewardTokenConfig","receivedRewardsLog","receivedRewards","DAITokenConfig","getSushiswapPoolTokenPrice","getSushiswapConversionRate","getTokenBalance","startContract","wrapMethod","destContract","unwrapMethod","_this6","loadStats","_this7","StatsCard","titleParentProps","isStake","isUnstake","isStats","txAction","poolLink","statInfo","ImageButton","caption","imageSrc","setAction","src_SendTxWithBalance_SendTxWithBalance","flexWrap","IdleStaking","lockPeriods","lockedEnd","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributorConfig","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","add","mDate","maxDate","isAfter","currTime","endDate","endDateTime","_d","maxDateTime","stkIDLEAmount","_value","_unlock_time","getIdleStakingRewardsTxs","getTokenTotalSupply","genericContractCallCached","getContractBalance","getContractEvents","fromBlock","toBlock","provider","etherscanRewardsTxs","tokenTotalSupply","totalSupply","claimableRewards","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","tokenName","totalClaimedUser","blockInfo","claimedAmount","returnValues","recipient","getBlockInfo","totalDeposited","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalClaimed","event","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","depositTimestamp","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","apr","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","_this8","isLock","isClaim","isIncrease","canIncrease","borderBottom","reward","setIncreaseAction","changelockPeriodInput","selectLockPeriod","getIncreaseTimeParams","contractApprovedCallback","claim","NexusMutual","quote","1","2","periodOptions","30","60","90","365","coverId","claimId","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionParams","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","coveredTokenAmount","getClaimTransactionParams","incident","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","getNexusMutualCoverages","coverage","validClaimableCoverFromParam","urlParams","param3","cover","param2","paramIsValidToken","setSelectedAction","changeSelectedToken","requiredNetwork","baseEndpoint","makeRequest","response","selectedUnderlyingChanged","loadTokenData","isETH","underlying","getPoolCapacity","getETHBalance","coverData","period","coverAmount","currency","contractAddress","asset","quoteURL","encodeParameters","price","priceInNXM","expiresAt","generatedAt","COVER_TYPE","feePercentage","basePrice","priceWithFee","mul","divn","amountInWei","toWei","textDecoration","activeColor","reset","utils","toTwosComplement","placement","message","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","getQuote","selectCoverToClaim","coverAsset","claimableAmount","maxCoveredAmount","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","connectAndValidateAccount","PortfolioDonut","totalFunds","parentWidth","selectedTokenConfig","loadPortfolio","portfolio","idle","getIdleTokenPrice","convertTokenBalance","getGovTokensUserBalances","govTokensUserBalances","govToken","govTokenBalance","tokenPercentage","tokenColorHsl","round","radialLabelsLinkOffset","itemWidth","itemHeight","translateY","symbolSize","anchor","direction","itemTextColor","symbolShape","effects","on","strategyIcon","convertToken","Fragment","TotalEarningsCounter","earningsEnd","earningsStart","loadTotalEarnings","contractsInitialized","availableStrategies","counterStyle","oldState","getAccountPortfolio","totalEarnings","totalAmountLent","avgAPY","build_default","delay","decimal","separator","useEasing","duration","end","start","formattingFn","n","countUpRef","ref","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","amountDeposited","avgBuyPrice","idleTokenPrice","earningsPerc","tokenAPY","tokenAprs","earningsPercStep","possibleSteps","maxPossibleStep","getAmountDeposited","getAvgBuyPrice","slicedToArray","getTokenAprs","avgApr","avgApy","maxCountStep","orderedTokensEarnings","estimationStep","option","setEstimationStepsPerc","tokenIndex","tokenEarnings","estimationStepPerc","finalEarnings","cursorPerc","tokenIcon","tokenRGBColor","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","gte","pl","src_TotalEarningsCounter_TotalEarningsCounter","estimationLabel","DashboardIconButton","TotalBalanceCounter","counterEnd","counterStart","StrategyPage","tokensToMigrate","aggregatedValues","depositedTokens","remainingTokens","batchedDeposits","portfolioLoaded","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","portfolioEquityQuickSelection","availableTokensChanged","getTokensToMigrate","batchInfo","strategy","deposited","batchDeposits","redeemable","batchRedeems","avgScore","totalBalanceWithScore","_ref4","_ref5","tokenScore","amountLentToken","tokenWeight","getTokenScore","totalBalance","getGovTokensUserTotalBalance","govTokensTotalBalance","govTokensUserBalance","govTokensTotalBalanceTooltip","govTokens","apyLong","riskScore","yieldFarming","nexusMutualConfig","batchDepositConfig","src_TotalBalanceCounter_TotalBalanceCounter","totalEarningsPerc","src_PortfolioDonut_PortfolioDonut","aligItems","setPortfolioEquityQuickSelection","getFrequencySeconds","h4","toolName","toolIndex","toolConfig","src_DashboardIconButton_DashboardIconButton","desc","goToSection","route","ActiveCoverages","AssetsList","showTooltip","showDirection","src_EarningsEstimation_EarningsEstimation","textSize","BatchDeposit","canClaim","batchTotals","canDeposit","usePermit","lastExecution","hasDeposited","permitSigned","currBatchIndex","batchCompleted","claimSucceeded","componentLoaded","executeSucceeded","migrationEnabled","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","migrationContract","migrationContractInfo","getBatchedDepositExecutions","batchExecutions","functions","functionInfo","nonceMethod","permitContract","methods","batchIndex","batchTotal","batchRedeem","batchDeposit","batchDepositInfo","depositEnabled","availableStrategiesKeys","_ref6","strategyConfig","selectStrategy","obj","baseTokenConfig","strategyAvailableTokens","oldContract","migrateFunction","migration","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","openTooltipModal","isDisabled","Migrate","showActions","getTokenPrice","isMigrationTool","showBalanceSelector","migrationIcon","migrationParams","toMigrate","callbackPermit","migrationText","minPoolSize","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","pow","expirationTimestamp","balancerTokenConfig","tokens","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","expirationDate","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","BuyModal","showInline","availableMethods","buyToken","TokenMigration","changeFromToken","convertTool","tokenInfo","destTokenConfig","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","_ref7","DeployB2BVesting","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","inputs","validateForm","checkInputs","vesterImplementation","contracts","getContractPastEvents","proxyCreated","deployedContractsAddresses","implementation","proxy","owner","vestingPeriod","availableBalance","depositAmounts","total","claimedTokensLog","returnString","fieldPattern","RegExp","inputIndex","inputInfo","getPatternByFieldType","inputValid","match","actionValue","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","events","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","pattern","inputChange","getEtherscanAddressUrl","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","claimCallback","env","process","appName","version","baseURL","forumURL","darkModeEnabled","betaURL","countries","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","errorsEnabled","messagesEnabled","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","endpoint","messages","scoreShort","apyShort","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","curveInstructions","analytics","google","debugEnabled","addPostfixForTestnet","pageView","modals","first_deposit_referral","first_deposit_share","welcome","frequency","dashboard","baseRoute","mode","governance","test","startBlock","availableContracts","IDLE","FeeTreasury","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","proposals","7","delegates","n_coins","imageInactive","rates","poolContract","CurvePool","depositContract","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","coinIndex","idleUSDCYield","idleUSDTYield","permit","DAI","EIPVersion","USDC","SLP","showAUM","showAPR","protocol","showPrice","aprTooltipMode","distributionMode","distributionFrequency","disabledTokens","COMP","stkAAVE","aToken","addressForPrice","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","SushiswapRouter","SushiV2Router02","UniswapRouter","UniswapV2Router02","BalancerExchangeProxy","zeroExInstant","orderSource","assetData","affiliateInfo","feeRecipient","strategies","best","comingSoon","addGovTokens","titlePostfix","iconName","govTokensEnabled","chartColor","iconInactive","iconInactiveDark","descLong","descShort","risk","new","TTL","tvls","substack","scores","config","headers","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","endTimestamp","startTimestamp","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","rgb","hex","chart","labelTextColorModifiers","performanceTooltip","USD","USDT","TUSD","SUSD","WBTC","WETH","RAI","disabledCharts","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","permitType","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","availableNetworks","3","4","42","1337","isForked","blocksPerYear","secondsPerYear","requiredConfirmations","enabledNetworks","accountBalanceMinimum","providers","infura","ens","supportedNetworks","nexus","endpoints","etherscan","REACT_APP_ETHERSCAN_KEY","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","baseUrl","snapshot","whitelist","urls","biconomy","enableLogin","disabledWallets","limits","debug","apiKey","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","apiId","simpleID","getNetwork","networkId","networkName","appOrigin","location","origin","appId","renderNotifications","notifications","tools","stake","subComponent","stkIDLE","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","nexusMutual","IdleTokenV4","ERC20","directProps","yieldTokenCoverGracePeriod","NexusMutualDistributor","incidentsInfo","NexusMutualIncidents","b2bVesting","visible","B2BVester","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","permitName","batchMigration","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","oldAddresses","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","showAllTokens","tokenSwap","ETH","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","payments","bank","defaultProvider","showDefaultOnly","card","wallet","wyre","captionPos","supportedMethods","supportedCountries","supportedTokens","envParams","accountId","prod","getInfo","selectedMethod","buyParams","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","innerHTML","body","wyreStyle","ramp","badge","hostAppName","userAddress","hostApiKey","REACT_APP_RAMP_KEY","variant","hostLogoUrl","swapAsset","RampInstantSDK","t0","getAccountBalance","getTokenDecimals","payload","purchase","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fee","selectedCountry","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","onSuccess","onClose","tokenParams","RimbleWeb3_context","chainId","connector","ethereum","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","internalType","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","IdleGovToken","classCallCheck","getBalance","claimRewards","getPriorVotes","priorVotes","_args3","refreshIdleSpeed","getUnclaimedTokens","getAPR","IDLETokenConfig","cachedDataKey","APR","idleDistribution","tokenAllocation","tokenPool","idleDistributedPerYearUSD","_args6","getDistribution","getUniswapConversionRate","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","totalSpeed","_args10","_context10","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","getUserPoolShare","_x7","fixDistributionSpeed","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","profiler","idleGovToken","trimEth","BN","toEth","wei","fromWei","htmlDecode","childNodes","nodeValue","BNify_obj","BigNumber","String","_len","Array","_key","moment","customLogError","_console","_len2","_key2","normalizeSimpleIDNotification","str","arr1","arr2","stripHtml","html","tmp","textContent","innerText","scrollTo","to","scrollY","change","currentTime","easeInOutQuad","animateScroll","val","getQueryStringParameterByName","results","exec","decodeURIComponent","depositProxyContractInfo","migrationContractAddr","migrationContractOldAddrs","batchMigrationContractAddr","isMigrationTx","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","shortHash","txStart","txEnd","ensConfig","addressCheck","current","checkAddress","currentProvider","ENS","ensAddress","getEnsAddress","getName","getAddress","orderedTokensBalance","_args4","totalBalanceConverted","tokenBalanceConverted","getCurveAvgSlippage","processedHashes","curveTokensBalance","curveTxs","avgSlippage","_args5","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","received","slippage","getCurveAvgBuyPrice","prevAvgBuyPrice","_args7","idleTokensBalance","getFirstDepositTx","deposits","_args8","firstDepositTx","getDashboardSectionUrl","section","asyncTimeout","ms","getDepositTimestamp","firstDepositTxs","_args9","acc","userAvgPrice","getAmountLent","amountLents","_args11","getEtherscanBaseTxs","endBlockNumber","firstIdleBlockNumber","etherscanInfo","etherscanBaseTxs","etherscanBaseEndpoint","etherscanApiUrl","lastCachedTx","lastCachedBlockNumber","etherscanEndpointLastBlock","latestTxs","latestBlockNumbers","txs","requestCount","requestStatus","cachedRequests","getCachedRequest","result","makeCachedRequest","filterEtherscanTxs","toConsumableArray","saveEtherscanTxs","_callee13","_args13","_context13","filterCurveTxs","txsToStore","cachedRequest","saveCachedRequest","_callee14","_ref19","allAvailableTokens","_args14","_context14","processStoredTxs","_ref20","_callee15","_args15","_context15","_ref21","_callee16","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args16","_context16","tokenMigrationToolParams","curveTokenConfig","idleToken","internalTxs","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenDecimal","tokenValue","newValue","iTxs","withdrawnValue","processEtherscanTransactions","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref22","_callee21","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args21","_context21","baseTokenAddress","_ref23","_callee20","minedTxs","_context20","_ref24","_callee19","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context19","getCurveTokenPrice","t1","_ref25","_callee17","_context17","getTransactionReceipt","_x12","_x13","baseTokensConfig","t2","_ref26","_callee18","_context18","_x14","_x15","_x10","_x11","_x9","_ref27","_callee27","txsToProcess","_args27","_context27","_ref28","_callee26","_context26","_ref29","_callee25","isStoredTx","allowedMethods","pendingStatus","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context25","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","method","created","_ref30","_callee22","_context22","_x20","_x21","_ref31","_callee23","_context23","_x22","_x23","raw","_ref32","_callee24","_context24","_x24","_x25","decodeLog","_token","_x18","_x19","_x17","_x16","alias","getCustomAddress","setCustomAddress","customAddress","_ref33","_callee28","error_callback","_args28","_context28","catch","_x26","makeEtherscanApiRequest","_ref34","_callee29","apiKeyIndex","_args29","_context29","_x27","_ref35","_callee30","return_data","_args30","_context30","_x28","code","errorCode","array","prop","shift","configs","checkUrlOrigin","checkUrlBeta","sendGoogleAnalyticsPageview","_callee31","googlePageviewInfo","isOrigin","_args31","_context31","ga","_ref37","_callee33","googleEventsInfo","originOk","currentNetwork","_args33","_context33","_ref38","_callee32","_context32","hitCallback","hitCallbackFail","_x30","_x31","_x29","createContract","_ref39","_callee34","_context34","Contract","_x32","_x33","_x34","getWalletProvider","simpleIDPassUserInfo","userInfo","email","initSimpleID","passUserInfo","baseurl","decimalCount","thousands","abs","negativeSign","Number","getSnapshotProposals","_callee37","activeOnly","validProposals","_args37","_context37","getCachedData","addr","msg","_ref41","_callee36","checkedStrategies","_context36","metadata","_ref42","_callee35","_context35","symbol","_x36","_x35","_ref43","_callee38","forceStartTimestamp","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args38","_context38","_x37","getTokenExchangeRate","_ref44","_callee39","exchangeRateParams","exchangeRate","_context39","_x38","_x39","_ref45","_callee40","_context40","_x40","aprs","allocations","aprWeighted","allocation","quantity","hour","day","week","_callee41","idleTokenConfig","etherscanEndpoint","etherscanTxlist","_context41","getProtocolInfoByAddress","ROUND_FLOOR","normalizeTokenDecimals","normalizedTokenDecimals","checkContractPaused","_callee42","contractPaused","_args42","_context42","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref48","_callee44","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context44","lastAllocationsPromise","_ref49","_callee43","lastAllocations","_context43","_x42","_x43","alloc","_x41","checkMigration","_ref50","_callee45","oldContractBalance","oldContractTokenDecimals","oldContractBalanceFormatted","oldContractName","_context45","_x44","_x45","_ref51","_callee46","eventName","_args46","_context46","_x46","_x47","estimateMethodGasUsage","_ref52","_callee47","_contract$methods","functionCall","gasLimit","_ref53","_ref54","_args47","_context47","getGasPrice","estimateGas","_x48","_x49","_ref55","_callee48","callback_receipt","_contract$methods2","_context48","once","confirmationNumber","receipt","_x50","_x51","_x52","_x53","_x54","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref56","_callee49","biconomyInfo","res","_context49","x-api-key","_x55","sendTxWithPermit","_ref57","_callee50","_contract$methods3","messageToSign","_this$getSignaturePar","_context50","encodeABI","_address","personal","sign","_x56","_x57","_x58","_x59","_x60","_x61","buildBiconomyErc20ForwarderTx","_ref58","_callee51","tokenAddress","callData","buildParams","_context51","txGas","erc20ForwarderClient","buildTx","_x62","_x63","_x64","_x65","_x66","_ref59","_callee53","_context53","_ref60","_callee52","_context52","_x68","_x69","_x67","sendBiconomyTxWithErc20Forwarder","_ref61","_callee54","req","metaInfo","txResponse","fetchReceiptIntervalId","_context54","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x70","_x71","_x72","_x73","sendBiconomyTxWithPersonalSign","_ref62","_callee55","_this$getSignaturePar2","_context55","getNonce","call","_x74","_x75","_x76","_x77","signPermitEIP2612","_ref63","_callee56","erc20Name","spender","deadline","domain","domainData","_context56","getChainId","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x78","_x79","_x80","_x81","_x82","_x83","_x84","_x85","_ref64","_callee57","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","_args57","_context57","net","getId","allowed","_x86","_x87","_x88","_ref65","_callee58","permitParams","methodAbi","useNonce","_args58","_context58","_jsonInterface","f","unshift","_x89","_x90","_x91","_x92","_x93","_x94","_x95","sendSignedTx","_ref66","_callee59","MetaTransaction","dataToSign","_context59","_x96","_x97","_x98","_x99","_x100","_ref67","_callee60","contractAddr","walletAddr","_ref68","_ref69","allowance","_context60","getAllowance","_x101","_x102","_x103","_ref70","_callee61","_context61","_x104","_x105","_x106","contractMethodSendWrapperWithValue","txData","disableERC20","loadAssetField","_ref71","_callee62","field","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref72","_ref73","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref74","_ref75","amountLentCurve1","redeemableBalanceCurve","_ref76","_ref77","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref78","_ref79","amountLent1","redeemableBalance1","_idleGovToken","govTokenConfig","blocksPerDay","blocksPerWeek","blocksPerMonth","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref80","_ref81","tokenPriceFirstDeposit","_ref82","_ref83","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref84","_ref85","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref86","_ref87","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref88","_ref89","amountLentCurve2","redeemableBalanceCurve1","_ref90","_ref91","redeemableBalance2","_args62","_context62","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getUserTokenFees","t8","t9","getGovTokenUserBalance","_x107","_x108","_x109","_x110","getIdleTokenSupply","_ref92","_callee63","idleTokenSupply","_args63","_context63","_x111","getIdleTokenPriceWithFee","_ref93","_callee64","_ref94","_ref95","priceWFee","_args64","_context64","eq","_x112","_x113","_ref96","_callee65","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args65","_context65","_x114","clearCachedData","useLocalStorage","_ref97","_callee66","_ref98","_ref99","idleTokensTotalSupply","userShare","_context66","_x115","_x116","_callee68","coverProtocolConfig","_args68","_context68","_ref101","_callee67","coverageTokens","protocolImage","_context67","_x117","sumAssured","coverAssetConfig","yieldTokenConfig","collateralIcon","protocolImageDark","coverDetails","validUntil","_ref102","_callee70","_ref103","_ref104","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context70","buyer","_ref105","_callee69","claimSubmittedEvent","_ref106","_ref107","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimTxReceipt","claimedAmountLog","claimablePrice","_ref108","_ref109","_context69","productId","incidentDate","curr","priceBefore","underlyingConfig","findIndex","_x119","_x118","_ref110","_callee71","_context71","_x120","getBatchedDeposits","_callee73","filter_by_status","_args73","_context73","_ref112","_callee72","_ref113","_ref114","_context72","_x121","_ref115","_callee74","fixDecimals","_args74","_context74","_x122","_ref116","_callee75","_ref117","_ref118","_args75","_context75","_x123","_x124","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","attr","isValidJSON","_ref119","_callee76","_args76","_context76","_x125","_ref120","_callee77","_args77","_context77","_x126","_ref121","_callee78","_args78","_context78","_x127","_x128","getProtocolBalance","_ref122","_callee79","_context79","_x129","_x130","getAprs","_ref123","_callee80","_context80","addresses","_x131","genericIdleCall","_ref124","_callee81","callParams","_args81","_context81","_x132","_ref125","_callee82","_contract$methods4","_args82","_context82","_x133","_x134","getTxDecodedLogs","_ref126","_callee84","logAddr","decodeLogs","internalTransfers","_context84","_ref127","_callee83","_context83","_x139","_x140","_x135","_x136","_x137","_x138","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee85","_context85","_ref129","_callee86","_context86","getBlock","_x141","_ref130","_callee87","_args87","_context87","getPastEvents","_x142","_x143","_ref131","_callee88","_args88","_context88","_x144","_x145","_ref132","_callee89","_contract$methods5","_args89","_context89","_x146","_x147","_ref133","_callee90","_args90","_context90","_x148","_x149","apr2apy","getUnlentBalance","_ref134","_callee91","unlentBalance","_context91","_x150","_ref135","_callee92","_args92","_context92","_x151","_ref136","_callee94","protocolsAprs","exchangeRates","protocolsBalances","govTokensBalances","_ref140","_ref141","_args94","_context94","totalAllocationConverted","totalAllocationWithUnlentConverted","_ref137","_callee93","_ref138","_ref139","protocolBalance","protocolAllocation","_context93","_x153","_x154","protocolAllocationPerc","getGovTokensBalances","getTokenConversionRate","_x152","_ref142","_callee95","pairAddresses","_ref143","_ref144","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref145","_ref146","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","_context95","_x155","_x156","_ref147","_callee96","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context96","_x157","_x158","_ref148","_callee97","unires","_context97","_x159","_x160","getCurveDepositedTokens","_ref149","_callee98","idleTokensBalances","remainingCurveTokens","_args98","_context98","_x161","getCurveUnevenTokenAmounts","_ref150","_callee99","amounts","max_burn_amount","unevenAmounts","_context99","getCurveDepositContract","_x162","_x163","_callee100","curveRatesInfo","_context100","strategyTokens","getCurveAPYContract","_callee101","blocksForPrevTokenPrice","_ref153","_ref154","prevTokenPrice","blocksMultiplier","curveAPR","_context101","getCurveTokenSupply","_callee102","_context102","getCurvePoolContract","_callee103","_args103","_context103","_callee104","_args104","_context104","_ref158","_callee105","_ref159","_ref160","_context105","_x164","_callee106","depositContractInfo","_context106","getCurveZapContract","_callee107","zapContractInfo","_context107","_callee108","poolContractInfo","_context108","getCurveSwapContract","_callee109","_context109","getCurveIdleTokensAmounts","_callee111","max_slippage","curveTokenSupply","curveTokenShare","_args111","_context111","_ref166","_callee110","curveIdleTokens","_context110","_x165","getCurveTokensAmounts","_callee113","useCoinIndex","_args113","_context113","_ref168","_callee112","_ref169","_ref170","totalTokenSupply","_context112","_x166","getCurveAmounts","_ref171","_callee115","_args115","_context115","_ref172","_callee114","_context114","_x169","_x167","_x168","getCurveTokenAmount","_ref173","_callee116","_args116","_context116","_x170","getCurveSlippage","_ref174","_callee117","uneven_amounts","_ref175","_ref176","virtualPrice","Sv","_args117","_context117","_x171","_x172","_ref177","_callee118","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","aaveIncentivesController_address","IAaveIncentivesController_name","_ref178","_ref179","aTokenTotalSupply","aaveAllocationPerc","aaveSpeed","aavePoolShare","_args118","_context118","_x173","_callee120","_args120","_context120","_ref181","_callee119","_ref182","_ref183","_context119","_x174","getStkAaveApr","_ref184","_callee121","aaveConversionRate","stkAaveAPR","stkAaveValue","_args121","_context121","_x175","_x176","getCompAPR","_ref185","_callee122","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args122","_context122","_x177","_x178","getCompSpeed","_ref186","_callee123","cTokenAddress","compSpeed","_context123","_x179","_ref187","_callee124","cTokenInfo","compoundAllocationPerc","_ref188","_ref189","cTokenTotalSupply","compoundPoolShare","_args124","_context124","_x180","_callee126","_args126","_context126","_ref191","_callee125","_ref192","_ref193","_context125","_x181","_callee128","_args128","_context128","_ref195","_callee127","_ref196","_ref197","compApr","_context127","_x182","getTokensCsv","_callee131","csv","_context131","prototype","sum","pv","cv","avg","_ref199","_callee130","_context130","_ref200","_callee129","header","aprAvg","scoreAvg","lastRow","_context129","protocolsData","p1","foundProtocol","p2","rate","idleRate","score","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","_x184","_x183","_callee133","_args133","_context133","_ref202","_callee132","compTokenBalance","_context132","_x185","getTokenGovTokens","speed","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref203","_callee135","govTokensUserDistribution","_args135","_context135","_ref204","_callee134","_context134","_x187","_x186","getGovTokensDistributionSpeed","_ref205","_callee137","govTokensDistribution","tokenGovTokens","_args137","_context137","_ref206","_callee136","govSpeed","_context136","_x189","_x188","getGovTokensAprs","_ref207","_callee139","govTokensAprs","_args139","_context139","_ref208","_callee138","_ref209","_ref210","_ref211","_ref212","cTokenConfig","_context138","_x192","_x190","_x191","_callee141","_args141","_context141","_ref214","_callee140","tokenConversionRate","fromTokenConfig","_context140","_x193","getGovTokenConfigByAddress","_callee142","checkShowBalance","govTokensEarnings","_args142","_context142","govTokenAmount","getGovTokensIndexes","_ref216","_callee144","govTokensAmounts","_context144","getGovTokensUserAmounts","_ref217","_callee143","govTokenIndex","govTokenAddress","_context143","getGovTokenAddessByIndex","_x196","_x197","_x194","_x195","_ref218","_callee145","_context145","_x198","_x199","_ref219","_callee146","_context146","_x200","_x201","_callee149","govTokenConfigForced","_args149","_context149","_ref221","_callee148","_context148","_ref222","_callee147","_context147","_x203","_x204","_x202","getTokenFees","_callee150","_args150","_context150","_callee151","_ref225","_ref226","gain","fees","_args151","_context151","_ref227","_callee152","_args152","_context152","_x205","getTotalTVL","_callee153","tokensTVL","_context153","getTokensTVL","totalTVL","tokenTVL","_callee157","_context157","_ref230","_callee156","_context156","_ref231","_callee155","oldTokenTVL","idleTokenName","_ref232","_ref233","oldTokenConfig","_ref237","_ref238","oldTokenPrice","oldTotalSupply","_context155","_ref234","_callee154","_ref235","_ref236","govTokenConversionRate","govTokenBalanceConverted","_context154","_x208","oldProtocols","oldProtocol","protocolPos","_x207","_x206","getSubstackLatestFeed","_callee158","endpointInfo","idleSubstackFeed","latestFeed","_context158","items","getAggregatedStats","_callee159","totalAUM","_args159","_context159","getAggregatedStats_chain","_callee163","avgAPR","_args163","_context163","_ref242","_callee162","_context162","_ref243","_callee161","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context161","_ref244","_callee160","_ref245","_ref246","_context160","_x211","_x210","_x209","getTokenApy","_ref247","_callee164","_context164","_x212","_callee167","_args167","_context167","_ref249","_callee166","_context166","_ref250","_callee165","_ref251","_context165","_x214","_x213","getProtocolsTokensBalances","_callee169","tokenBalances","minTokenBalance","protocolsTokens","_args169","_context169","_ref253","_callee168","tokenContract","_context168","_x215","_ref254","_callee170","_args170","_context170","_x216","_x217","_x218","getAvgAPYStats","_ref255","_callee171","apiResults","_args171","_context171","_x219","_x220","_ref256","_callee172","_conversionRate","_args172","_context172","_x221","_x222","_ref257","_callee173","_ref258","_ref259","_context173","protocolScore","getTokenScoreApi","_x223","_x224","_ref260","_callee174","_context174","_x225","_x226","_ref261","_callee177","Aprs","protocolsApys","idleGovTokenShowAPR","idleAPR","_args177","_context177","_ref262","_callee176","addrIndex","protocolApr","protocolApy","govTokenAPR","_context176","_ref263","_callee175","_context175","_x230","_x228","_x229","_x227","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","mouseOver","isRainbow","active","onMouseOut","setMouseOver","onMouseOver","Tos","h2","listStyle","Footer","theme_dark","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","possibleConstructorReturn","getPrototypeOf","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","defaultNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","REACT_APP_INFURA_KEY","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","React","NetworkUtil","isCorrectNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","bold","isOpen","ModalCard","closeFunc","closeModal","Body","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","Header","subtitle","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","splice","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","componentDidUpdate","resetModal","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","contrastColor","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","INFURA_KEY","RimbleTransactionContext","createContext","web3Infura","permitClient","accountBalance","initWeb3","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","tokenChanged","availableStrategiesChanged","gnosisSafeLoaded","setNetwork","metamaskProvider","connectorNameChanged","web3Host","web3Provider","forceCallback","web3Callback","originalWeb3","biconomyWeb3Provider","detectEthereumProvider","Web3","HttpProvider","library","IFrameEthereumProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","race","$crisp","notificationId","content","Sentry","increaseAmount","_ref15","balanceOf","determineAccountLowBalance","openConnectionModal","getRequiredNetwork","getNetworkId","getNetworkName","getNetworkType","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args24","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","constant","outputs","payable","stateMutability","anonymous","indexed","govTokensDisabled","defiPrime","cToken","yToken","iToken","CHAI","skipMintForDeposit","enabledEnvs","crToken","fToken","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","then","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","innerWidth","innerHeight","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","_args","cachedKeyFound","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","warn","jQuery","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCustomAddress","loadCurrentEnvironment","strategyChanged","networkChanged","hasMetamask","store","themeDark","_this9","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","RimbleWeb3","needsPreflight","react_router","react","fallback","isDashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","ready","registration","unregister","FieldComponent","colInfo","colIndex","fieldIndex","colProps","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","useMetaTx","_skipRebalance","_migrationContract$me","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","footer","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","VariationNumber","IconDirection","iconSize","iconPos","loading-dots","loading-dots--dot","dot-keyframes","selectedProvider","availableProviders","renderPaymentMethod","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","goBack","componentWillMount","getProviderInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","providerSupportToken","defaultPaymentProvider","selectProvider","ethAvailable","tokenAvailable","selectMethod","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","countryCode","methodInfo","loadAvailableMethods","InnerComponent","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","noOptionsMessage","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","iconHeight","subtitleProps","BackButton","currYear","getFullYear","columnWidth","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle","fieldName","earningsCounter","feesStart","feesEnd","earningsCurveStart","earningsCurveEnd","tokenAPY2","tokenAPR","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","poolSize","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","random","aprChartRowElement","$aprChartRowElement","lineWidth","defs","linearGradientDef","offset","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","fieldChanged","contractInitialized","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","icon1","tooltipProps","icon2","strategyName","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","react_countup__WEBPACK_IMPORTED_MODULE_11___default","_ref11","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","governanceTokenName","tooltipMode","buttonLabel","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__","formattedValue","_isBigNumber"],"mappings":"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","file":"static/js/main.bda99563.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontSize:3,\n      fontWeight:3,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    // console.log('ShortHash',resolveAddress,this.props.hash,ensName);\n    if (ensName){\n      text = ensName;\n    }\n    this.setState({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from 'react';\nimport {\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner.js';\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n       <Button\n        onClick={this.props.handleClick}\n         {...this.props.buttonProps}\n       >\n        <Flex flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n          <Flex width={1} display={ this.props.isLoading ? 'flex' : 'none' }>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={ this.props.isLoading ? 'none' : 'flex' }>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n       </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.status = tx.status ? tx.status : 'Completed';\n      tx.action = action;\n      tx.momentDate = momentDate;\n      tx.amount = amount;\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          this.props.unit && unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          this.props.unit && unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    let prediction = null;\n    if (this.state.predictTable){\n      this.state.predictTable.forEach((p,i) => {\n        if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n          prediction = p;\n          return true;\n        }\n      });\n    }\n\n    if (this.state.blockTime && prediction){\n      const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n      const blocksWait = pdValues[0];\n      const blockInterval = this.state.blockTime.block_time;\n      let txMeanSecs = blocksWait * blockInterval;\n      txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n      this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n      return txMeanSecs; // Customized\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          window.setTimeout(() => {\n            this.initProgressBar();\n          },1000);\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in Etherscan\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #eee','1px solid #b6c2ff'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgba(0,54,255,0.3)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: blue.base,\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#3F3D4B',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    alert:'#ff9900',\n    arrowActive:'#4f4f4f',\n    arrowInactive:'#d8d8d8',\n    selectBgFocused:'#fbfbfb',\n    selectBg:'#ffffff',\n    backButtonBg:'#ffffff',\n    lineChartStroke:'#dbdbdb',\n    wrongNetworkBannerBg:'#ffffff',\n    dashboardBg: '#f9fafd',\n    statValue: '#959595',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a3a4a5',\n    cellText: '#a6a6a6',\n    divider: '#d8d8d8',\n    counter: '#5d5d5d',\n    redeem: '#00a9fe',\n    link:'#0036ff',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    menuBg:'#fff',\n    menuHover:'#f3f6ff',\n    cardBg:'#fff',\n    flashColor:'#3f4e9a',\n    menuRightBorder:'#eee',\n    cardHoverShadow:'0px 0px 0px 1px rgba(0, 54, 255, 0.3)',\n    cardBgHover:'#f7f8ff',\n    cardBorder:'#eee',\n    pageActive:'#4f4f4f',\n    pageInactive:'#d8d8d8',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, '#AAA'),\n      backgroundColor: tint(0.9, '#AAA'),\n      borderColor: '#AAA',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: '#f3f6ff',\n      borderColor: '#b6c2ff',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport { Text, Icon, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      // flexProps:{\n      //   justifyContent:'flex-start'\n      // }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.props.rows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass Base extends Component {\n\n  state = {\n    loaded:false,\n    activeCoverages:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadCoverages();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    if (accountChanged){\n      this.loadCoverages();\n    }\n  }\n\n  async loadCoverages(){\n    if (!this.props.account){\n      return false;\n    }\n\n    const coverages = await this.functionsUtil.getActiveCoverages(this.props.account);\n    const activeCoverages = [];\n    if (coverages && coverages.length>0){\n      coverages.forEach( c => {\n        if (!this.props.availableTokens || !this.props.availableTokens.length || this.props.availableTokens.includes(c.collateral)){\n          const statusColors = this.props.theme.colors.transactions.status;\n          let statusIcon = 'VerifiedUser';\n          let statusColor = statusColors.completed;\n          switch (c.status){\n            case 'Expired':\n              statusIcon = 'Error';\n              statusColor = statusColors.failed;\n            break;\n            case 'Claimed':\n              statusIcon = 'Error';\n              statusColor = statusColors.pending;\n            break;\n            default:\n            case 'Active':\n              statusIcon = 'VerifiedUser';\n              statusColor = statusColors.completed;\n            break;\n          }\n\n          const statusIconProps = {\n            color:statusColor\n          };\n\n          const portfolioCoverage = c.portfolioCoverage || 'N/A';\n\n          activeCoverages.push(Object.assign(c,{\n            statusIcon,\n            statusIconProps,\n            portfolioCoverage\n          }));\n        }\n      })\n    }\n\n    this.setState({\n      loaded:true,\n      activeCoverages\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.activeCoverages && this.state.activeCoverages.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.activeCoverages && this.state.activeCoverages.length>0 ? (\n            <CustomList\n              rows={this.state.activeCoverages}\n              handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n              cols={[\n                {\n                  title:'PROTOCOL',\n                  props:{\n                    width:[0.28,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:[this.props.themeMode === 'dark' ? 'protocolImageDark' : 'protocolImage']\n                    },\n                    {\n                      type:'text',\n                      path:['protocolName'],\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.33,0.14]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      },\n                      path:['collateralIcon']\n                    },\n                    {\n                      type:'text',\n                      path:['collateral'],\n                    }\n                  ]\n                },\n                {\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.24, 0.12],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['balance'],\n                      props:{\n                        decimals: this.props.isMobile ? 2 :  4,\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                      props:{\n                        ml:[1,2],\n                        style:{\n                          textTransform:'uppercase'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'EXPIRATION DATE',\n                  props:{\n                    width:0.19,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['expirationDate'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'COVERED FUNDS',\n                  props:{\n                    width:0.14,\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['portfolioCoverage'],\n                      props:{\n                        \n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.15,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      name:'custom',\n                      path:['statusIcon'],\n                      props:{\n                        mr:[1,2],\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      mobile:false,\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'',\n                  mobile:false,\n                  props:{\n                    width:0.17,\n                  },\n                  parentProps:{\n                    width:1\n                  },\n                  fields:[\n                    {\n                      type:'button',\n                      name:'custom',\n                      funcProps:{\n                        label:(props) => (props.row.actionLabel),\n                        disabled:(props) => (props.row.actionDisabled)\n                      },\n                      props:{\n                        width:1,\n                        fontSize:3,\n                        fontWeight:3,\n                        height:'45px',\n                        borderRadius:4,\n                        boxShadow:null,\n                        mainColor:'redeem',\n                        size: this.props.isMobile ? 'small' : 'medium',\n                        handleClick:(props) => props.row.status!=='Expired' && props.row.actionUrl && this.functionsUtil.openWindow(props.row.actionUrl)\n                      }\n                    }\n                  ]\n                }\n              ]}\n              {...this.props}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default Base;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput,this.props.themeMode==='dark' ? styles.dark : null,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? 'selectBgFocused' : 'selectBg' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import React, { Component } from 'react';\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign({\n      py:1,\n      width:'auto',\n      px:['12px',3],\n    },this.props.cardProps);\n\n    return (\n       <DashboardCard\n         cardProps={cardProps}\n         isInteractive={true}\n         isActive={this.props.isActive}\n         handleClick={this.props.handleClick}\n       >\n         <Flex\n           my={1}\n           alignItems={'center'}\n           flexDirection={'row'}\n           justifyContent={'center'}\n         >\n          {\n            this.props.image ? (\n              <Image\n                align={'center'}\n                src={this.props.image}\n                height={ this.props.isMobile ? '1.2em' : '1.4em' }\n                width={ this.props.isMobile ? '1.2em' : '1.4em' }\n                {...this.props.imageProps}\n              />\n            ) : this.props.useIconOnly ? (\n              <Icon\n                align={'center'}\n                name={this.props.icon}\n                size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                {...this.props.iconProps}\n              />\n            ) : (\n             <Flex\n               mr={2}\n               p={['4px','7px']}\n               borderRadius={'50%'}\n               alignItems={'center'}\n               justifyContent={'center'}\n               backgroundColor={ this.props.iconBgColor ? this.props.iconBgColor : this.props.theme.colors.transactions.actionBg.redeem }\n             >\n               <Icon\n                 align={'center'}\n                 name={this.props.icon}\n                 size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                 color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                 {...this.props.iconProps}\n               />\n             </Flex>\n            )\n          }\n           <Text\n             fontWeight={3}\n             fontSize={[1,3]}\n             {...this.props.textProps}\n           >\n             {this.props.text}\n           </Text>\n         </Flex>\n       </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\nimport ShortHash from \"../utilities/components/ShortHash\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        const tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol.toUpperCase()}</Text>\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n\n      console.log('callback',tx,error);\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    }\n\n    if (!params){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    // console.log('ExecuteTransaction',this.props.contractName,this.props.methodName,params);\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || tokenConfigChanged || approveEnabledChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log(this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventValue: inputValue.toFixed(),\n        eventAction: this.props.tokenConfig.token,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const contractName = this.props.contractInfo.name;\n\n    let params = null;\n\n    // Check contract approved without permit\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      params = this.props.getTransactionParams(_amount);\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n\n    const contractInfo = await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    if (contractInfo){\n      const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n      return contractApproved;\n    }\n    \n    return false;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const contractApproved = await this.checkContractApproved();\n    this.setState({\n      inputValue,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                mt={2}\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.props.approveDescription}\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          }}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },parseInt(Date.now()/1000)) : null;\n\n    const programDuration = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programDuration\n    });\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      totalRewards,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    console.log('updateData',this.state.selectedAction,newState);\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    // console.log('checkButtonDisabled',this.state.selectedAction,this.state.increaseAction,buttonDisabled);\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}%).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n        // console.log('getTransactionParams',methodName,methodParams);\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      tokenTotalSupply,\n      totalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.getTokenTotalSupply(this.props.contractInfo.name),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',{fromBlock: this.props.contractInfo.fromBlock, toBlock:'latest',filter:{provider:this.props.account}}) : []\n    ]);\n\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    const distributedRewards = etherscanRewardsTxs.map( tx => (\n      {\n        hash:tx.hash,\n        tokenName:tx.tokenSymbol,\n        amount:this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals),\n        date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n      }\n    ));\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n      if (this.props.account && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n        const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n        if (blockInfo){\n          const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n          totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n          claimedRewards.push({\n            amount:claimedAmount,\n            hash:e.transactionHash,\n            tokenName:this.props.contractInfo.rewardToken,\n            date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n          });\n        }\n      }\n    });\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0] : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1] : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2] : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n      const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n      totalClaimed = totalClaimed.plus(claimedAmount);\n      return totalClaimed;\n    },this.functionsUtil.BNify(0));\n\n    const totalRewards = claimableRewards ? totalClaimed.plus(claimableRewards) : this.functionsUtil.BNify(0);\n    const totalRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[3] : this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0));\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  changelockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // console.log('changelockPeriodInput',lockPeriodTimestamp);\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      });\n    }\n  }\n\n  selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n    let mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    // Check if after 4 years from now\n    if (mDate.isAfter(maxDate)){\n      mDate = maxDate;\n    }\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // console.log('selectLockPeriod',lockPeriodInput,lockPeriodTimestamp);\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    // const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year').format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        alignItems:'center',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Flex\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.5 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.5 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              {\n                                !this.props.isMobile && (\n                                  <Text\n                                    width={0.3}\n                                    fontSize={1}\n                                    fontWeight={3}\n                                  >\n                                    Hash\n                                  </Text>\n                                )\n                              }\n                            </Flex>\n                            {\n                              this.state.distributedRewards.map( (reward,index) => (\n                                <Flex\n                                  py={1}\n                                  width={1}\n                                  flexDirection={'row'}\n                                  key={`rewards_${index}`}\n                                  borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                >\n                                  <Text\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                    fontSize={this.props.isMobile ? 1 : 2}\n                                    width={this.props.isMobile ? 0.5 : 0.4}\n                                  >\n                                    {reward.date}\n                                  </Text>\n                                  <Text\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                    fontSize={this.props.isMobile ? 1 : 2}\n                                    width={this.props.isMobile ? 0.5 : 0.3}\n                                    textAlign={this.props.isMobile ? 'right' : 'left'}\n                                  >\n                                    {reward.amount.toFixed(4)} {reward.tokenName}\n                                  </Text>\n                                  {\n                                    !this.props.isMobile && (\n                                      <ExtLink\n                                        width={0.3}\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          <Text\n                                            fontSize={2}\n                                            fontWeight={2}\n                                            color={'link'}\n                                          >\n                                            {this.functionsUtil.shortenHash(reward.hash)}\n                                          </Text>\n                                          <Icon\n                                            ml={1}\n                                            size={'1.2em'}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    )\n                                  }\n                                </Flex>\n                              ))\n                            }\n                          </Flex>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changelockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={Button}\n                                          componentProps={{\n                                            fontSize:3,\n                                            fontWeight:3,\n                                            size:'medium',\n                                            width:[1,1/2],\n                                            borderRadius:4,\n                                            mainColor:'deposit',\n                                            value:'Increase Time',\n                                            disabled:this.state.buttonDisabled\n                                          }}\n                                          action={'Increase Time'}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/3],\n                                    value:'Claim',\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Button, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    // console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  borderRadius:4,\n                                  mainColor:'blue',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={Button}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    value:'Approve',\n                                    mainColor:'deposit'\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'deposit',\n                                  value:'Buy Coverage',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.maxCoveredAmount) ? this.state.selectedCoverToClaim.maxCoveredAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n          value:Math.round(tokenPercentage),\n          color:'hsl('+tokenColorHsl+')'\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsTextColor:'#333',\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = portfolio.totalAmountLent.times(portfolio.avgAPY.div(100));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings)));\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    depositedTokens:null,\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      // console.log('StrategyPage - availableTokensChanged',availableTokensChanged);\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n\n    if (this.state.portfolioLoaded){\n      return false;\n    }\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load data\n      const [\n        batchedDeposits,\n        tokensToMigrate,\n        portfolio\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load tokens to be migrated\n        this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n        // Load and process Etherscan Txs\n        this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          if (!tokenScore.isNaN() && tokenScore.gt(0)){\n            avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n            totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n          avgScore = avgScore.div(totalBalanceWithScore);\n        }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        newState.avgScore = avgScore;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n\n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const riskScore = this.functionsUtil.getGlobalConfig(['messages','riskScore']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])} strategy\n        </Title>\n        {\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={4}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgScore ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgScore.toFixed(2) }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg Risk Score\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.props.account && nexusMutualConfig.enabled && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              width={[1,1/3]}\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                nexusMutualConfig.enabled && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.29,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:false,\n                            props:{\n                              width:[0.12,0.09],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.10],\n                            },\n                            parentProps:{\n                              alignItems:['center','flex-start'],\n                            },\n                            fields:[\n                              {\n                                name:'score',\n                              }\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.13],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.13],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.10],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,this.state.depositedTokens.length>0 ? 0.14 : 0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.22,0.10],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(govTokens).filter( govToken => govTokens[govToken].enabled )}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() );\n    const claimContracts = this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() );\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Staking from '../Staking/Staking';\nimport IDLE from '../contracts/IDLE.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport ERC20 from '../contracts/ERC20.json';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from '../abis/curve/CurvePool.json';\nimport NexusMutual from '../NexusMutual/NexusMutual';\nimport CoverMint from '../abis/cover/CoverMint.json';\nimport LockedIDLE from '../contracts/LockedIDLE.json';\nimport LpStakingAbi from '../contracts/LpStaking.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport PriceOracle from '../contracts/PriceOracle.json';\nimport FeeTreasury from '../contracts/FeeTreasury.json';\nimport IdleTokenV2 from '../contracts/IdleTokenV2.json';\nimport StrategyPage from '../StrategyPage/StrategyPage';\nimport BuyModal from '../utilities/components/BuyModal';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport BatchDeposit from '../BatchDeposit/BatchDeposit';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport SushiV2Router02 from '../abis/sushiswap/SushiV2Router02.json';\nimport IdleBatchConverter from '../contracts/IdleBatchConverter.json';\nimport UniswapV2Router02 from '../abis/uniswap/UniswapV2Router02.json';\nimport IdleDepositForwarder from '../contracts/IdleDepositForwarder.json';\nimport SushiLiquidityPool from '../abis/sushiswap/SushiLiquidityPool.json';\nimport NexusMutualIncidents from '../abis/nexus/NexusMutualIncidents.json';\nimport StakingFeeDistributor from '../contracts/StakingFeeDistributor.json';\nimport NexusMutualDistributor from '../abis/nexus/NexusMutualDistributor.json';\nimport BalancerExchangeProxy from '../abis/balancer/BalancerExchangeProxy.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\nimport MinimalInitializableProxyFactory from '../contracts/MinimalInitializableProxyFactory.json';\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: 'Idle',\n  version: 'v5.9',\n  baseToken: 'ETH',\n  baseURL: 'https://idle.finance',\n  forumURL:'https://gov.idle.finance',\n  theme:{\n    darkModeEnabled:true\n  },\n  betaURL: 'https://beta.idle.finance',\n  countries:{\n    'USA':'United States of America',\n    'GBR':'United Kingdom',\n    'AUS':'Australia',\n    'BRA':'Brazil',\n    'CHN':'China',\n    'CAN':'Canada',\n    'EUR':'Europe',\n    'HKG':'Hong Kong',\n    'IND':'India',\n    'MEX':'Mexico',\n    'RUS':'Russia',\n    'ZAF':'South Africa',\n    'KOR':'South Korea'\n  },\n  logs:{ // Enable logs levels\n    errorsEnabled:false,\n    messagesEnabled:false,\n  },\n  connectors:{ // Connectors props\n    metamask:{\n      enabled:true,\n      subcaption:'Browser extension'\n    },\n    opera:{\n      enabled:true,\n      subcaption:'Opera injected wallet'\n    },\n    dapper:{\n      enabled:true,\n      icon:'dapper.png',\n      subcaption:'Browser extension',\n    },\n    coinbase:{\n      enabled:true,\n      icon:'coinbase.png',\n      subcaption:'Connect with Coinbase wallet'\n    },\n    trustwallet:{\n      enabled:true,\n      subcaption:'Connect with Trust Wallet'\n    },\n    walletconnect:{\n      enabled:true,\n      iconModal:'walletconnect.png',\n      subcaption:'Connect with QR code'\n    },\n    walletlink:{\n      enabled:true,\n      icon:'coinbase.png',\n      name:'Coinbase Wallet',\n      subcaption:'Connect with QR code'\n    },\n    gnosis:{\n      enabled:true,\n      // icon:'coinbase.png',\n      name:'Gnosis Safe App',\n      subcaption:'Connect with Gnosis Safe App'\n    },\n    fortmatic:{\n      enabled:true,\n      subcaption:'Login with phone-number'\n    },\n    portis:{\n      enabled:true,\n      subcaption:'Login with e-mail'\n    },\n    authereum:{\n      enabled:true,\n      subcaption:'Cross-device wallet'\n    },\n    torus:{\n      enabled:true,\n      icon:'torus.png',\n      subcaption:'One-Click login for Web 3.0'\n    },\n    trezor:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledger:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledgerlive:{\n      enabled:true,\n      subcaption:'Ledger Live Browser'\n    },\n    custom:{\n      enabled:true,\n      subcaption:'Custom address'\n    }\n  },\n  newsletterSubscription:{\n    endpoint:'https://dev.lapisgroup.it/idle/newsletter.php'\n  },\n  messages:{\n    scoreShort:'Protocol Risk Score',\n    apyShort:'Annual Percentage Yield',\n    tokenPrice:'The token price is calculated using Uniswap spot prices.',\n    cheapRedeem:'Amount of unlent funds available for low gas fees redeem',\n    curveBonusSlippage:'Slippage or bonus depending on if the coin is low or high in the Curve Pool',\n    distributionSpeed:'The distribution indicates the amount of tokens distributed for the entire pool.',\n    directMint:'Pay an additional gas fee to rebalance the pool and help all users gain an additional APR',\n    performanceFee:'This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE',\n    userDistributionSpeed:'The distribution indicates the amount of tokens distributed for your account based on your current pool share.',\n    govTokenApr:'Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.',\n    govTokenRedeemableBalance:'The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.',\n    riskScoreShort:'It\\'s a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.',\n    redeemSkipGov:'This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool',\n    batchDepositExecutionSchedule:'Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.',\n    apyLong:'APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.',\n    yieldFarming:'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\">Read more here</a>.',\n    riskScore:`It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions:`<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`\n  },\n  analytics:{\n    google:{\n      events:{\n        enabled:true, // Enable Google Analytics events\n        debugEnabled:false, // Enable sending for test environments\n        addPostfixForTestnet:true // Append testnet to eventCategory\n      },\n      pageView:{\n        enabled:true\n      }\n    }\n  },\n  modals:{ // Enable modals\n    first_deposit_referral:false, // Referral share modal\n    first_deposit_share:true, // First deposit share modal\n    migrate:{\n      enabled:true\n    },\n    welcome:{ // Welcome modal\n      enabled:true,\n      frequency:604800 // One week\n    }\n  },\n  dashboard:{\n    baseRoute:'/dashboard',\n    theme:{\n      mode:'light',\n      darkModeEnabled:true\n    },\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals:{\n      7:{\n        description:`Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>`\n      }\n    },\n    contracts:{\n      delegates:'IDLE',\n      governance:'GovernorAlpha',\n    }\n  },\n  curve:{\n    enabled:false,\n    params:{\n      n_coins:3,\n      label:'Curve',\n      route:'/dashboard/curve',\n      image:'images/protocols/curve.svg',\n      imageInactive:'images/protocols/curve-off.svg',\n    },\n    rates:{\n      path:['apy','day','idle'],\n      endpoint:'https://www.curve.fi/raw-stats/apys.json'\n    },\n    poolContract:{\n      decimals:18,\n      abi:CurvePool,\n      name:'idleDAI+idleUSDC+idleUSDT',\n      token:'idleDAI+idleUSDC+idleUSDT',\n      address:'0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05'\n    },\n    depositContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7'\n    },\n    gaugeContract:{\n      abi:LiquidityGaugeV2,\n      name:'LiquidityGaugeV2',\n      address:'0xd69ac8d9D25e99446171B5D0B3E4234dAd294890'\n    },\n    zapContract:{\n      abi:CurveZap,\n      name:'idleCurveZap',\n      address:'0x456974df1042ba7a46fd49512a8778ac3b840a21'\n    },\n    migrationContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7',\n      functions:[\n        {\n          label:'Deposit',\n          name:'add_liquidity'\n        },\n      ]\n    },\n    availableTokens:{\n      idleDAIYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'DAI',\n        token:'idleDAIYield',\n        address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:0\n        },\n      },\n      idleUSDCYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDC',\n        token:'idleUSDCYield',\n        address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:1\n        },\n      },\n      idleUSDTYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDT',\n        token:'idleUSDTYield',\n        address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:2\n        },\n      },\n    }\n  },\n  permit:{\n    DAI:{\n      version:1,\n      EIPVersion:null,\n      nonceMethod:'nonces',\n      name:'Dai Stablecoin',\n      type:[\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" },\n      ]\n    },\n    USDC:{\n      version:2,\n      name:'USD Coin',\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    },\n    SLP:{\n      version:1,\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      name:'SushiSwap LP Token',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    }\n  },\n  govTokens:{\n    IDLE:{\n      abi:IDLE,\n      decimals:18,\n      token:'IDLE',\n      enabled:true,\n      showAUM:false, // Include IDLE balance in AUM\n      showAPR:false, // Include IDLE Apr\n      protocol:'idle',\n      showPrice:false, // Show price in Yield Farming section\n      showBalance:false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode:false,\n      distributionMode:'block',\n      distributionFrequency:'day', // Multiply distribution per block\n      color:'hsl(162, 100%, 41%)',\n      icon:'images/tokens/IDLE.png',\n      disabledTokens:['idleRAIYield'], // Disable IDLE distribution for idleToken\n      address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e' // MAIN\n      // address:'0xAB6Bdb5CCF38ECDa7A92d04E86f7c53Eb72833dF', // KOVAN\n      // address:'0xa85233C63b9Ee964Add6F2cffe00Fd84eb32338f' // Fork\n    },\n    COMP:{\n      abi:COMP,\n      decimals:18,\n      token:'COMP',\n      enabled:true,\n      showAUM:true, // Include IDLE balance in AUM\n      showAPR:true, // Include COMP Apr\n      showPrice:true,\n      showBalance:true, // Include COMP balance in Portfolio Donut\n      disabledTokens:[],\n      protocol:'compound',\n      aprTooltipMode:false,\n      distributionMode:'block',\n      distributionFrequency:'day',\n      color:'hsl(162, 100%, 41%)',\n      address:'0xc00e94cb662c3520282e6f5717214004a7f26888', // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE:{\n      abi:aToken,\n      decimals:18,\n      showAUM:true, // Include stkAAVE balance in AUM\n      showAPR:true, // Include stkAAVE Apr\n      enabled:true,\n      showPrice:true,\n      token:'stkAAVE',\n      showBalance:true, // Include stkAAVE balance in Portfolio Donut\n      protocol:'aavev2',\n      aprTooltipMode:false,\n      distributionMode:'second',\n      color:'hsl(314, 41%, 51%)',\n      distributionFrequency:'day',\n      address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice:'0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n      disabledTokens:['idleTUSDYield','idleSUSDYield','idleRAIYield']\n    }\n  },\n  contracts:{\n    ProxyFactory:{\n      abi:MinimalInitializableProxyFactory,\n      address:'0x91baced76e3e327ba7850ef82a7a8251f6e43fb8'\n    },\n    LockedIDLE:{\n      abi:LockedIDLE,\n      address:'0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n    },\n    FeeTreasury:{\n      abi:FeeTreasury,\n      address:'0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n    },\n    PriceOracle:{\n      abi:PriceOracle,\n      address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n      // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n    },\n    Timelock:{\n      abi:Timelock,\n      address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n      // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n    },\n    EcosystemFund:{\n      abi:EcosystemFund,\n      address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n      // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n    },\n    VesterFactory:{\n      abi:VesterFactory,\n      address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n      // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n    },\n    IdleController:{\n      abi:IdleController,\n      address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n      // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n    },\n    EarlyRewards:{\n        abi:EarlyRewards,\n        address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n    },\n    GovernorAlpha:{\n      abi:GovernorAlpha,\n      address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n      // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n    },\n    Comptroller:{\n      abi:Comptroller,\n      address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n      // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n    },\n    SushiswapRouter:{\n      abi:SushiV2Router02,\n      address:'0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n    },\n    UniswapRouter:{\n      abi:UniswapV2Router02,\n      address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n    },\n    BalancerExchangeProxy:{\n      abi:BalancerExchangeProxy,\n      address:'0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n    }\n  },\n  tokens:{\n    DAI:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n    USDC:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n  },\n  strategies:{\n    best:{\n      token:'DAI',\n      color:'#f32121',\n      comingSoon:false,\n      addGovTokens:true,\n      titlePostfix:null,\n      title:'Best-Yield',\n      iconName:'Whatshot',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/best-on.svg',\n      iconInactive:'images/strategies/best-off.svg',\n      iconInactiveDark:'images/strategies/best-white.svg',\n      desc:'Maximize your returns across DeFi protocols',\n      descLong:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.',\n      descShort:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.'\n    },\n    risk:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:false,\n      titlePostfix:null,\n      addGovTokens:true,\n      iconName:'Security',\n      title:'Risk-Adjusted',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/risk-on.svg',\n      iconInactive:'images/strategies/risk-off.svg',\n      iconInactiveDark:'images/strategies/risk-white.svg',\n      desc:'Optimize your risk exposure across DeFi protocols',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    },\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n  },\n  stats:{\n    enabled:true, // Enable endpoint\n    rates:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/rates/'\n    },\n    tvls:{\n      TTL:120,\n      endpoint:'https://api.idle.finance/tvls/'\n    },\n    substack:{\n      TTL:1800,\n      endpoint:'https://api.idle.finance/substack/'\n    },\n    scores:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/scores/'\n    },\n    config:{\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {}\n    },\n    versions:{\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3:{\n        label:'Idle V3',\n        additionalProtocols:[],\n        endTimestamp:1597237542,\n        startTimestamp:1589801874,\n        showPerformanceTooltip:false,\n        strategiesParams:{\n          risk:{\n            endTimestamp:1597233922,\n          }\n        },\n        enabledStrategies:['best','risk'],\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n      },\n      v4:{\n        label:'Idle V4',\n        endTimestamp:null,\n        startTimestamp:1597442400, // 1598220000\n        enabledStrategies:['best','risk'],\n        showPerformanceTooltip:true,\n        strategiesParams:{\n          risk:{\n            startTimestamp:1599183170,\n          }\n        },\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH','RAI'],\n        additionalProtocols:[\n          {\n            decimals:16,\n            protocol:'compound',\n            name:'compoundWithCOMP',\n            enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH'],\n          },\n          {\n            decimals:18,\n            protocol:'aavev2',\n            name:'aavev2WithStkAAVE',\n            enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH'],\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USD:{\n        enabled:true,\n        color:{\n          hex:'#85bb65',\n          rgb:[133, 187, 101],\n          hsl:['98', '39%', '56%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        address:null,\n        startTimestamp:'2020-02-04',\n      },\n      USDC:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#2875C8',\n          rgb:[40,117,200],\n          hsl:['211', '67%', '47%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USDT:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#22a079',\n          rgb:[34, 160, 121],\n          hsl:['161', '65%', '38%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      TUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'0340a1',\n          rgb:[3, 64, 161],\n          hsl:['217', '96%', '32%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n      },\n      SUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#1e1a31',\n          rgb:[30, 26, 49],\n          hsl:['250', '31%', '15%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n      },\n      WBTC:{\n        decimals:8,\n        enabled:true,\n        color:{\n          hex:'#eb9444',\n          rgb:[235, 148, 68],\n          hsl:['29', '81%', '59%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'wbtcDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      WETH:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#ee1f79',\n          rgb:[238, 31, 121],\n          hsl:['334', '86%', '53%']\n        },\n        startTimestamp:'2021-02-16',\n        conversionRateField:'wethDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      COMP:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#00d395',\n          rgb:[0, 211, 149],\n          hsl:['162', '100%', '41%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      stkAAVE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#B6509E',\n          rgb:[182, 80, 158],\n          hsl:['314', '41%', '51%']\n        },\n        startTimestamp:'2021-04-30',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5',\n      },\n      IDLE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#0d55bb',\n          rgb:[13, 85, 187],\n          hsl:['215', '87%', '39%']\n        },\n        startTimestamp:'2020-11-10',\n        icon:'images/tokens/IDLE.png',\n        conversionRateField:'idleDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e',\n      },\n      RAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#378879',\n          rgb:[55, 136, 121],\n          hsl:['169', '42%', '37%']\n        },\n        disabledCharts:['score'],\n        startTimestamp:'2021-05-25',\n        icon:'images/tokens/RAI.png',\n        conversionRateField:'raiDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n      },\n      'idleDAI+idleUSDC+idleUSDT':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp:'2020-06-15',\n      },\n    },\n    protocols:{\n      compound:{\n        legend:true,\n        enabled:true,\n        label:'Compound',\n        color:{\n          rgb:[0, 209, 146],\n          hsl:['162', '100%', '41%']\n        }\n      },\n      aavev2WithStkAAVE:{\n        enabled:true,\n        label:'Aave V2 + stkAAVE',\n        startTimestamp:'2021-05-08 14:30:00',\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color:{\n          hex:'#B6509E',\n          rgb:[182, 80, 158],\n          hsl:['314', '41%', '51%']\n        },\n        rateField:['rate','aaveAdditionalAPR']\n      },\n      compoundWithCOMP:{\n        enabled:true,\n        label:'Compound + COMP',\n        color:{\n          rgb:[0, 153, 107],\n          hsl:['162', '100%', '30%']\n        },\n        rateField:['rate','compoundAdditionalAPR']\n      },\n      fulcrum:{\n        legend:false,\n        enabled:false,\n        label:'Fulcrum',\n        color:{\n          rgb:[2, 138, 192],\n          hsl:['197', '98%', '38%']\n        }\n      },\n      dsr:{\n        label:'DSR',\n        enabled:false,\n        icon:'CHAI.png',\n        color:{\n          rgb:[222, 52, 67],\n          hsl:['355', '72%', '54%']\n        }\n      },\n      dydx:{\n        legend:true,\n        label:'DyDx',\n        enabled:true,\n        color:{\n          rgb:[87, 87, 90],\n          hsl:['240', '2%', '35%']\n        }\n      },\n      iearn:{\n        label:'Yearn',\n        enabled:true,\n      },\n      aave:{\n        label:'Aave V1',\n        legend:true,\n        enabled:true,\n        color:{\n          rgb:[230, 131, 206],\n          hsl:['315', '66%', '71%']\n        }\n      },\n      aavev2:{\n        legend:true,\n        enabled:true,\n        icon:'aave.svg',\n        label:'Aave V2',\n        color:{\n          rgb:[151, 79, 141],\n          hsl:['308', '31%', '45%']\n        }\n      },\n      cream:{\n        legend:true,\n        enabled:true,\n        label:'Cream',\n        icon:'cream.svg',\n        color:{\n          rgb:[105, 226, 220],\n          hsl:['177', '68%', '65%']\n        }\n      },\n      fuse:{\n        legend:true,\n        enabled:true,\n        label:'Fuse',\n        icon:'fuse.png',\n        color:{\n          rgb:[0, 0, 0],\n          hsl:['0', '0%', '0%']\n        }\n      },\n      curve:{\n        label:'',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      },\n      idle:{\n        label:'Idle',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      }\n    }\n  },\n  contract:{\n    methods:{\n      redeem:{\n        skipRebalance:true,\n        metaTransactionsEnabled:false\n      },\n      deposit:{\n        skipMint:true,\n        minAmountForMint:100000,\n        erc20ForwarderEnabled:true,\n        skipMintCheckboxEnabled:true,\n        metaTransactionsEnabled:false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract:{\n          forwarder:{\n            enabled:true,\n            abi:erc20Forwarder,\n            name:'erc20Forwarder',\n            function:'emitMessage',\n            address:'0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda', // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens:{\n            DAI:{\n              enabled:true,\n              permitType:'DAI_Permit',\n              abi:IdleDepositForwarder,\n              function:'permitAndDeposit', // foo\n              name:'IdleDepositForwarderDAI',\n              address:'0xDe3c769cCD1878372864375e9f89956806B86daA', // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC:{\n              enabled:true,\n              abi:IdleDepositForwarder,\n              permitType:'EIP2612_Permit',\n              name:'IdleDepositForwarderUSDC',\n              function:'permitEIP2612AndDeposit', // 'foo'\n              address:'0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761', // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            },\n          }\n        },\n        proxyContract:{\n          enabled:false,\n          abi:IdleProxyMinter,\n          name:'IdleProxyMinter',\n          function:'mintIdleTokensProxy',\n          address:'0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a',\n        }\n      },\n      migrate:{\n        skipRebalance:true,\n        minAmountForRebalance:10000,\n        minAmountForRebalanceMetaTx:10000\n      },\n      redeemGovTokens:{\n        enabled:true\n      },\n      redeemSkipGov:{\n        enabled:true,\n        disabledTokens:['idleDAISafe','idleUSDCSafe','idleUSDTSafe']\n      },\n      rebalance:{\n        enabled:true,\n        abi:IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:'Mainnet',\n      3:'Ropsten',\n      4:'Rinkeby',\n      42:'Kovan',\n      1337:'Hardhat'\n    },\n    isForked:false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork:1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear:2371428,\n    secondsPerYear:31536000,\n    firstBlockNumber:8119247,\n    requiredConfirmations: 1,\n    enabledNetworks:[1,42,1337],\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers:{\n      infura:{\n        42: 'https://kovan.infura.io/v3/',\n        1: 'https://mainnet.infura.io/v3/',\n        1337: 'https://mainnet.infura.io/v3/'\n      },\n      ens:{\n        enabled:true,\n        supportedNetworks:[1]\n      },\n      nexus:{\n        endpoints:{\n          1:'https://api.nexusmutual.io/v1/',\n          42:'https://api.staging.nexusmutual.io/v1/',\n        }\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        keys:[\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl:{\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      snapshot:{\n        whitelist:[\n          '0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa',\n          '0xf12ce5807e3d3128B876aa1Cec0632D63547E22E'\n        ],\n        endpoints:{\n          proposals:'https://hub.snapshot.page/api/idlefinance.eth/proposals'\n        },\n        urls:{\n          proposals:'https://signal.idle.finance/#/idlefinance.eth/proposal/'\n        }\n      },\n      biconomy:{\n        enabled:true,\n        enableLogin:false,\n        supportedNetworks:[1,42],\n        disabledWallets:['authereum'],\n        endpoints:{\n          limits:'https://api.biconomy.io/api/v1/dapp/checkLimits'\n        },\n        params:{\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: '36572ec9-ae5c-4c4a-9530-f3ae7c7ac829',\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID:{\n        enabled:false,\n        supportedNetworks:[1],\n        getNetwork:(networkId,availableNetworks) => {\n          let networkName = null;\n          switch (networkId){\n            case 1:\n              networkName = 'mainnet';\n            break;\n            default:\n              networkName = availableNetworks[networkId] ? availableNetworks[networkId].toLowerCase() : 'mainnet';\n            break;\n          }\n          return networkName;\n        },\n        params:{\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: 'mainnet'\n        }\n      }\n    }\n  },\n  notifications:[\n    {\n      enabled:false,\n      end:1612282726374,\n      start:1611677841027,\n      date:'Jan 26, 2021 16:18 UTC',\n      title:'Cover Protocol Available',\n      hash:'/dashboard/tools/cover-protocol',\n      image:'/images/protocols/cover-logo.svg',\n      text:'Protect your portfolio with Cover Protocol',\n    }\n  ],\n  tools:{\n    stake:{\n      enabled:true,\n      icon:'Layers',\n      label:'Staking',\n      route:'staking',\n      subComponent:Staking,\n      desc:'Stake your IDLE / Sushi Swap LP tokens and earn $IDLE rewards',\n      props:{\n        availableTokens:{\n          IDLE:{\n            component:IdleStaking,\n            contract:{\n              abi:stkIDLE,\n              decimals:18,\n              name:'stkIDLE',\n              fromBlock:12561464,\n              rewardToken:'IDLE',\n              address:'0xaac13a116ea7016689993193fce4badc8038136f' // Mainnet\n            },\n            feeDistributor:{\n              fromBlock:12649361,\n              abi:StakingFeeDistributor,\n              name:'StakingFeeDistributor',\n              address:'0xbabb82456c013fd7e3f25857e0729de8207f80e2' // Mainnet\n            },\n            abi:IDLE,\n            name:'IDLE',\n            token:'IDLE',\n            decimals:18,\n            enabled:true,\n            label:'IDLE Token',\n            icon:'images/tokens/IDLE.png',\n            address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            poolLink:'https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e',\n          },\n          SLP:{\n            component:LpStaking,\n            contract:{\n              decimals:24,\n              name:'LpStaking',\n              maxMultiplier:3,\n              abi:LpStakingAbi,\n              maxBonusDays:120,\n              rewardToken:'IDLE',\n              address:'0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d' // Mainnet\n            },\n            name:'SLP',\n            token:'SLP',\n            decimals:18,\n            enabled:true,\n            abi:SushiLiquidityPool,\n            label:'SushiSwap IDLE/ETH LP Token',\n            icon:'images/protocols/sushiswap.png',\n            address:'0xa7f11e026a0af768d285360a855f2bded3047530', // Mainnet\n            poolLink:'https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530',\n          }\n        }\n      }\n    },\n    nexusMutual:{\n      enabled:true,\n      icon:'Security',\n      route:'coverage',\n      label:'Coverage',\n      desc:'Buy Nexus Mutual coverage without KYC for your deposits',\n      subComponent:NexusMutual,\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV4,\n            name:'idleDAIYield',\n            token:'idleDAIYield', // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address:'0x0000000000000000000000000000000000000011',\n            realAddress:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4', // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying:{\n              DAI:{\n                abi:ERC20,\n                name:'DAI', // Mainnet\n                token:'DAI',\n                decimals:18,\n                // name:'DAIMock', // Kovan\n                address:'0x6b175474e89094c44da98b954eedeac495271d0f' // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              },\n            }\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV4,\n            name:'idleUSDTYield',\n            token:'idleUSDTYield', // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address:'0x0000000000000000000000000000000000000012',\n            realAddress:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n            underlying:{\n              DAI:{\n                abi:ERC20,\n                name:'DAI', // Mainnet\n                token:'DAI',\n                decimals:18,\n                // name:'DAIMock', // Kovan\n                address:'0x6b175474e89094c44da98b954eedeac495271d0f' // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              },\n            }\n          }\n        },\n      },\n      directProps:{\n        // startBlock:25858186, // Kovan\n        startBlock:12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo:{\n          abi:NexusMutualDistributor,\n          name:'NexusMutualDistributor',\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address:'0xf2b36f823eae36e53a5408d8bd452748b24fbf76' // Mainnet\n        },\n        incidentsInfo:{\n          abi:NexusMutualIncidents,\n          name:'NexusMutualIncidents',\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address:'0x8ceba69a8e96a4ce71aa65859dbdb180b489a719' // Mainnet\n        }\n      }\n    },\n    b2bVesting:{\n      enabled:true,\n      visible:true,\n      icon:'CloudUpload',\n      label:'B2B Vesting',\n      route:'b2b-vesting-contract',\n      subComponent:DeployB2BVesting,\n      desc:'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props:{\n        contracts:{\n          vesterImplementation:{\n            abi:B2BVester,\n            address:'0x3024656ae91d7bf724f613c314bc56030ba2344c'\n          }\n        }\n      }\n    },\n    ethWrapper:{\n      enabled:true,\n      label:'ETH Wrapper',\n      route:'eth-wrapper',\n      subComponent:TokenWrapper,\n      image:'images/tokens/WETH.svg',\n      desc:'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props:{\n        startContract:{\n          name:'ETH',\n          token:'ETH',\n          decimals:18,\n          wrapMethod:'deposit',\n        },\n        destContract:{\n          abi:WETH,\n          name:'WETH',\n          decimals:18,\n          token:'WETH',\n          unwrapMethod:'withdraw',\n          address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol:{\n      enabled:false,\n      label:'Cover Protocol',\n      route:'cover-protocol',\n      subComponent:CoverProtocol,\n      image:'images/protocols/cover-logo.svg',\n      desc:'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl:'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props:{\n        contract:{\n          decimals:18,\n          abi:CoverMint,\n          name:'CoverMint',\n          address:'0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages:[\n          {\n            collateral:'DAI',\n            expirationTimestamp:1714470400,\n            tokens:{\n              Claim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                address:'0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                  address:'0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c',\n                }\n              },\n              NoClaim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                address:'0x53df0bfa014b7522299c129c5a7b318f02adb469',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                  address:'0xce0e9e7a1163badb7ee79cfe96b5148e178cab73',\n                }\n              }\n            }\n          },\n        ],\n      }\n    },\n    batchDeposit:{\n      enabled:true,\n      icon:'Storage',\n      claimEnabled:true,\n      depositEnabled:true,\n      route:'batch-deposit',\n      label:'Batch Deposit',\n      subComponent:BatchDeposit,\n      desc:'Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            strategy:'best',\n            baseToken:'DAI',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAI',\n              address:'0x633fb4d38B24dC890b11Db2AE2B248D13F996A79', // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  usePermit:true,\n                  label:'Deposit',\n                  permitName:'permitAndDeposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:6,\n            strategy:'best',\n            baseToken:'USDC',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDC',\n              address:'0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B', // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                  permitName:'permitEIP2612AndDepositUnlimited'\n                },\n              ]\n            },\n          },\n          /*\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  usePermit:true,\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n          */\n        }\n      }\n    },\n    batchMigration:{\n      enabled:true,\n      claimEnabled:true,\n      depositEnabled:false,\n      icon:'FileDownload',\n      route:'batch-migration',\n      label:'Batch Migration',\n      subComponent:BatchMigration,\n      desc:'Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'DAI',\n            name:'idleDAIYieldV3',\n            token:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAI',\n              address:'0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDC',\n            name:'idleUSDCYieldV3',\n            token:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDC',\n              address:'0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            name:'idleUSDTYieldV3',\n            token:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            name:'idleSUSDYieldV3',\n            token:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            name:'idleTUSDYieldV3',\n            token:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            name:'idleWBTCYieldV3',\n            token:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            name:'idleDAISafeV3',\n            token:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            name:'idleUSDCSafeV3',\n            token:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            name:'idleUSDTSafeV3',\n            token:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n        }\n      }\n    },\n    tokenMigration:{\n      enabled:true,\n      icon:'SwapHoriz',\n      route:'convert',\n      label:'Token Migration',\n      desc:'Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle',\n      subComponent:TokenMigration,\n      props:{\n        migrationContract:{\n          name:'IdleConverterV4',\n          abi:IdleConverterPersonalSignV4,\n          address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n          oldAddresses:[],\n          functions:[\n            {\n              label:'Migrate',\n              name:'migrateFromToIdle'\n            },\n          ]\n        },\n        availableStrategies:['best','risk'],\n        availableTokens:{\n          idleDAIv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            baseToken:'DAI',\n            abi:IdleTokenV2,\n            token:'idleDAIOld',\n            icon:'images/tokens/idleDAI.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0x10eC0D497824e342bCB0EDcE00959142aAa766dD',\n          },\n          cDAI:{\n            decimals:8,\n            enabled:true,\n            token:\"cDAI\",\n            baseToken:'DAI',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\",\n          },\n          iDAI:{\n            decimals:18,\n            enabled:false,\n            token:\"iDAI\",\n            baseToken:'DAI',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x493c57c4763932315a328269e1adad09653b9081\",\n          },\n          aDAI:{\n            decimals:18,\n            enabled:true,\n            token:\"aDAI\",\n            protocol:\"aave\",\n            baseToken:'DAI',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\",\n          },\n          yDAIv3:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv3\",\n            abi:yDAIv3.abi,\n            baseToken:'DAI',\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xC2cB1040220768554cf699b0d863A3cd4324ce32\",\n          },\n          yDAIv2:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv2\",\n            baseToken:'DAI',\n            abi:yDAIv3.abi,\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\",\n          },\n          idleUSDCv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            abi:IdleTokenV2,\n            baseToken:'USDC',\n            token:'idleUSDCOld',\n            icon:'images/tokens/idleUSDC.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0xeB66ACc3d011056B00ea521F8203580C2E5d3991',\n          },\n          cUSDC:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDC\",\n            baseToken:'USDC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x39aa39c021dfbae8fac545936693ac917d5e7563\",\n          },\n          iUSDC:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDC\",\n            baseToken:'USDC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\",\n          },\n          aUSDC:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDC\",\n            protocol:\"aave\",\n            baseToken:'USDC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\",\n          },\n          yUSDCv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv3\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x26EA744E5B887E5205727f55dFBE8685e3b21951\",\n          },\n          yUSDCv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv2\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\",\n          },\n          cUSDT:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDT\",\n            baseToken:'USDT',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\",\n          },\n          iUSDT:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDT\",\n            baseToken:'USDT',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x8326645f3aa6de6420102fdb7da9e3a91855045b\",\n          },\n          aUSDT:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDT\",\n            protocol:\"aave\",\n            baseToken:'USDT',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\",\n          },\n          yUSDTv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv3\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\",\n          },\n          yUSDTv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv2\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\",\n          },\n          idleSUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'SUSD',\n            token:'idleSUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleSUSDYield.svg',\n            address:'0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5',\n          },\n          aSUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aSUSD\",\n            protocol:\"aave\",\n            baseToken:'SUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x625aE63000f46200499120B906716420bd059240\",\n          },\n          ySUSDv3:{\n            decimals:18,\n            enabled:true,\n            token:\"ySUSDv3\",\n            abi:ySUSDv3,\n            baseToken:'SUSD',\n            protocol:\"iearn\",\n            availableStrategies:['best'],\n            icon:'images/tokens/ySUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xf61718057901f84c4eec4339ef8f0d86d2b45600\",\n          },\n          idleTUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'TUSD',\n            token:'idleTUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleTUSDYield.svg',\n            address:'0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6',\n          },\n          aTUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aTUSD\",\n            protocol:\"aave\",\n            baseToken:'TUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x4DA9b813057D04BAef4e5800E36083717b4a0341\",\n          },\n          yTUSDv3:{\n            decimals:18,\n            enabled:true,\n            abi:yTUSDv3,\n            token:\"yTUSDv3\",\n            baseToken:'TUSD',\n            protocol:\"iearn\",\n            icon:'images/tokens/yTUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x73a052500105205d34daf004eab301916da8190f\",\n          },\n          cWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"cWBTC\",\n            baseToken:'WBTC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\",\n          },\n          iWBTC:{\n            decimals:8,\n            enabled:false,\n            token:\"iWBTC\",\n            baseToken:'WBTC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\",\n          },\n          aWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"aWBTC\",\n            protocol:\"aave\",\n            baseToken:'WBTC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\",\n          },\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      icon:'AddCircleOutline',\n      route:'add-funds',\n      label:'Add Funds',\n      desc:'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    tokenSwap:{\n      enabled:true,\n      icon:'Sync',\n      route:'token-swap',\n      label:'Token Swap',\n      desc:'Easily swap your tokens using Kyber Swap widget',\n      subComponent:TokenSwap,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n          \"SUSD\":{\"token\":\"SUSD\"},\n          \"TUSD\":{\"token\":\"TUSD\"},\n          \"USDC\":{\"token\":\"USDC\"},\n          \"USDS\":{\"token\":\"USDS\"},\n          \"USDT\":{\"token\":\"USDT\"},\n          \"WBTC\":{\"token\":\"WBTC\"},\n          \"WETH\":{\"token\":\"WETH\"},\n          \"BUSD\":{\"token\":\"BUSD\"},\n          \"EURS\":{\"token\":\"EURS\"},\n          \"2KEY\":{\"token\":\"2KEY\"},\n          \"ABT\":{\"token\":\"ABT\"},\n          \"ABYSS\":{\"token\":\"ABYSS\"},\n          \"AMPL\":{\"token\":\"AMPL\"},\n          \"ANT\":{\"token\":\"ANT\"},\n          \"BAM\":{\"token\":\"BAM\"},\n          \"BAND\":{\"token\":\"BAND\"},\n          \"BAT\":{\"token\":\"BAT\"},\n          \"BLZ\":{\"token\":\"BLZ\"},\n          \"BNT\":{\"token\":\"BNT\"},\n          \"BQX\":{\"token\":\"BQX\"},\n          \"BTU\":{\"token\":\"BTU\"},\n          \"CDT\":{\"token\":\"CDT\"},\n          \"CVC\":{\"token\":\"CVC\"},\n          \"DAT\":{\"token\":\"DAT\"},\n          \"DGX\":{\"token\":\"DGX\"},\n          \"EKG\":{\"token\":\"EKG\"},\n          \"ELF\":{\"token\":\"ELF\"},\n          \"ENJ\":{\"token\":\"ENJ\"},\n          \"EQUAD\":{\"token\":\"EQUAD\"},\n          \"FXC\":{\"token\":\"FXC\"},\n          \"GDC\":{\"token\":\"GDC\"},\n          \"GEN\":{\"token\":\"GEN\"},\n          \"GHT\":{\"token\":\"GHT\"},\n          \"GNO\":{\"token\":\"GNO\"},\n          \"IOST\":{\"token\":\"IOST\"},\n          \"KEY\":{\"token\":\"KEY\"},\n          \"KNC\":{\"token\":\"KNC\"},\n          \"LEND\":{\"token\":\"LEND\"},\n          \"LINK\":{\"token\":\"LINK\"},\n          \"LOOM\":{\"token\":\"LOOM\"},\n          \"LRC\":{\"token\":\"LRC\"},\n          \"MANA\":{\"token\":\"MANA\"},\n          \"MCO\":{\"token\":\"MCO\"},\n          \"MET\":{\"token\":\"MET\"},\n          \"MFG\":{\"token\":\"MFG\"},\n          \"MKR\":{\"token\":\"MKR\"},\n          \"MLN\":{\"token\":\"MLN\"},\n          \"MTL\":{\"token\":\"MTL\"},\n          \"MYB\":{\"token\":\"MYB\"},\n          \"NEXXO\":{\"token\":\"NEXXO\"},\n          \"NPXS\":{\"token\":\"NPXS\"},\n          \"OGN\":{\"token\":\"OGN\"},\n          \"OMG\":{\"token\":\"OMG\"},\n          \"OST\":{\"token\":\"OST\"},\n          \"PAX\":{\"token\":\"PAX\"},\n          \"PBTC\":{\"token\":\"PBTC\"},\n          \"PLR\":{\"token\":\"PLR\"},\n          \"PNK\":{\"token\":\"PNK\"},\n          \"POLY\":{\"token\":\"POLY\"},\n          \"POWR\":{\"token\":\"POWR\"},\n          \"PT\":{\"token\":\"PT\"},\n          \"QKC\":{\"token\":\"QKC\"},\n          \"QNT\":{\"token\":\"QNT\"},\n          \"RAE\":{\"token\":\"RAE\"},\n          \"REN\":{\"token\":\"REN\"},\n          \"REP\":{\"token\":\"REP\"},\n          \"REQ\":{\"token\":\"REQ\"},\n          \"RLC\":{\"token\":\"RLC\"},\n          \"RSR\":{\"token\":\"RSR\"},\n          \"RSV\":{\"token\":\"RSV\"},\n          \"SAN\":{\"token\":\"SAN\"},\n          \"SNT\":{\"token\":\"SNT\"},\n          \"SNX\":{\"token\":\"SNX\"},\n          \"SPIKE\":{\"token\":\"SPIKE\"},\n          \"SPN\":{\"token\":\"SPN\"},\n          \"TKN\":{\"token\":\"TKN\"},\n          \"TKX\":{\"token\":\"TKX\"},\n          \"TRYB\":{\"token\":\"TRYB\"},\n          \"UBT\":{\"token\":\"UBT\"},\n          \"UPP\":{\"token\":\"UPP\"},\n          \"ZRX\":{\"token\":\"ZRX\"}\n        }\n      },\n      directProps:{\n      }\n    }\n  },\n  insurance:{\n    nexusMutual:{\n      label:'Nexus Mutual',\n      image:'images/protocols/nexus-mutual.png',\n      imageDark:'images/protocols/nexus-mutual-white.png'\n    },\n    coverProtocol:{\n      label:'Cover Protocol',\n      image:'images/protocols/cover-logo.svg',\n      imageDark:'images/protocols/cover-logo.svg',\n    }\n  },\n  payments: { // Payment methods & providers\n    methods:{\n      bank:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/bank.png',\n          caption:'Bank Account'\n        }\n      },\n      card:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/debit-card.png',\n          caption:'Credit Card'\n        }\n      },\n      wallet:{\n        defaultProvider:'zeroExInstant',\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/ethereum-wallet.svg',\n          caption:'Ethereum Wallet',\n          imageProps:{\n            padding:['0','5px']\n          }\n        }\n      },\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: 'images/payments/wyre.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.75% fee ~',\n        supportedMethods:['card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        remoteResources:{},\n        env:'prod',\n        envParams:{\n          test:{\n            accountId:'AC_Q2Y4AARC3TP'\n          },\n          prod:{\n            accountId:'AC_PQQBX33XVEQ'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n              break;\n              case 'card':\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = 'https://pay.sendwyre.com/purchase';\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken ),\n            referrerAccountId,\n            redirectUrl:globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const wyreWidget = document.getElementById('wyre-widget');\n          if (!wyreWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById('wyreWidget_style')){\n              const wyreStyle = document.createElement('style');\n              wyreStyle.id = 'wyreWidget_style';\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        },\n      },\n      ramp: {\n        enabled:true,\n        imageSrc: 'images/payments/ramp.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods:['bank','card'],\n        badge: {\n          text:'NO ID REQUIRED',\n          color:'#fff',\n          bgColor:'#0cade4'\n        },\n        supportedTokens:['ETH','DAI','USDC'],\n        supportedCountries:['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'],\n        getInfo: (props) => {\n          const info = {};\n            switch (props.selectedMethod){\n              case 'bank':\n                info.supportedCountries = ['GBR','EUR'];\n                info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n              case 'card':\n                info.supportedCountries = ['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'];\n                info.subcaption = `~ 2.90% fee ~`;\n              break;\n              default:\n              break;\n            }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n        \treturn {\n\t          hostAppName: 'Idle',\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? 'mobile' : 'desktop',\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset ? props.tokenConfig.ramp.swapAsset : props.selectedToken )\n        \t};\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on('*', async (event) => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type){\n                case 'PURCHASE_SUCCESSFUL':\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil.BNify(tokenAmount.toString()).div(functionsUtil.BNify(Math.pow(10,parseInt(tokenDecimals)).toString())).toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: 'light',\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\",\n                  });\n\n                break;\n                default:\n                break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled:true,\n        imageSrc: 'images/payments/transak.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods:['bank','card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR','IND'],\n        supportedTokens:['ETH','DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        remoteResources:{'https://global.transak.com/v1/widget.js':{}},\n        env:'prod',\n        badge:{\n          text:'INSTANT',\n          bgColor:'#0069ee'\n        },\n        envParams:{\n          test:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_TEST,\n            url:'https://global.transak.com'\n          },\n          prod:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_PROD,\n            url:'https://global.transak.com'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === 'bank' ? '1.5%' : '4.5%';\n\n          if (props.selectedCountry && props.selectedCountry.value){\n            switch (props.selectedCountry.value.toUpperCase()){\n              case 'GBR':\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n              break;\n              case 'IND':\n                fee = '1.0%';\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n              break;\n              case 'EUR':\n                if (selectedMethod === 'bank'){\n                  info.badge = {\n                    text:'SEPA',\n                    color:'#f7cb05 ',\n                    bgColor:'#10288a'\n                  };\n                } else {\n                  info.badge = {\n                    text:'INSTANT',\n                    bgColor:'#0069ee'\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams = globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value){\n            switch (buyParams.selectedCountry.value.toUpperCase()){\n              case 'IND':\n                fiatCurrency = 'INR';\n              break;\n              case 'GBR':\n                fiatCurrency = 'GBP';\n              break;\n              case 'EUR':\n                fiatCurrency = 'EUR';\n              break;\n              case 'USA':\n                fiatCurrency = 'USD';\n              break;\n              default:\n                fiatCurrency = 'GBP';\n              break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.transak && props.tokenConfig.transak.currencyCode ? props.tokenConfig.transak.currencyCode : props.selectedToken);\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width:'100%',\n            height:'100%'\n            // email,\n          };\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          if (window.transakGlobal){\n\n            const transakWidget = document.getElementById('transak-widget');\n            if (!transakWidget){\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById('transakWidget_style')){\n                const transakStyle = document.createElement('style');\n                transakStyle.id = 'transakWidget_style';\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, 'transak-widget-container');\n          }\n        }\n      },\n      moonpay: {\n        enabled:true,\n        imageSrc: 'images/payments/moonpay.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 4.5% fee ~',\n        supportedMethods:['card','bank'],\n        supportedCountries:['GBR','EUR','AUS','BRA','CHN','MEX','CAN','HKG','RUS','ZAF','KOR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        env:'prod',\n        envParams:{\n          test:{\n            url:'https://buy-staging.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod:{\n            url:'https://buy.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                if (props.selectedCountry && props.selectedCountry.value){\n                  switch (props.selectedCountry.value.toUpperCase()){\n                    case 'EUR':\n                      info.badge = {\n                        text:'SEPA',\n                        color:'#f7cb05 ',\n                        bgColor:'#10288a'\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                    break;\n                    case 'GBR':\n                      info.badge = {\n                        text:'GBP',\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                    break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                    break;\n                  }\n                }\n              break;\n              case 'card':\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams = globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.moonpay && props.tokenConfig.moonpay.currencyCode ? props.tokenConfig.moonpay.currencyCode : props.selectedToken.toLowerCase()),\n            walletAddress:props.account,\n            baseCurrencyCode:'USD',\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            'bank':{\n              'GBR':'gbp_bank_transfer',\n              'EUR':'sepa_bank_transfer'\n            },\n            'card':'credit_debit_card'\n          };\n\n          const selectedCountry = buyParams.selectedCountry && buyParams.selectedCountry.value ? buyParams.selectedCountry.value.toUpperCase() : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod){\n            switch (buyParams.selectedMethod){\n              case 'bank':\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod]['EUR'];\n                switch (selectedCountry){\n                  case 'GBR':\n                  case 'EUR':\n                    params.enabledPaymentMethods = methods[buyParams.selectedMethod][selectedCountry];\n                  break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(methods[buyParams.selectedMethod]).join(',');\n                  break;\n                }\n              break;\n              case 'card':\n              default:\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod];\n              break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry){\n            case 'GBR':\n              params.baseCurrencyCode = 'GBP';\n            break;\n            case 'EUR':\n              params.baseCurrencyCode = 'EUR';\n            break;\n            default:\n              params.baseCurrencyCode = 'USD';\n            break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (!document.cookie.match(/^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/)) {\n              document.cookie = \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const moonpayWidget = document.getElementById('moonpay-widget');\n          if (!moonpayWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById('moonpayWidget_style')){\n              const moonpayStyle = document.createElement('style');\n              moonpayStyle.id = 'moonpayWidget_style';\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: 'images/payments/zeroexinstant.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        remoteResources:{'https://instant.0x.org/v3/instant.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onSuccess,onClose) => {\n\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context ? window.RimbleWeb3_context.connectorName : null;\n\n          if (!tokenParams.zeroExInstant){\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider: connectorName && connectorName!=='Injected' && window.RimbleWeb3_context.connector[connectorName.toLowerCase()] ? window.RimbleWeb3_context.connector[window.RimbleWeb3_context.connectorName.toLowerCase()].provider : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount) => {\n          if (window.zeroExInstant && initParams){\n            if (amount){\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, 'body');\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: 'images/payments/kyber.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Swap with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['WETH','USDC','DAI','USDT','TUSD','SUSD','WBTC','RAI'],\n        web3Subscription:{ // Data for web3 subscription\n          enabled: true,\n          contractAddress: '0x818e6fecd516ecc3849daf6845e3ec868087b755',\n          decodeLogsData: [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_startAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_tokenAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_startAmount\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_tokenAmount\",\n              \"type\": \"uint256\"\n            },\n          ],\n        },\n        remoteResources:{\n          'https://widget.kyber.network/v0.7.5/widget.css':{},\n          'https://widget.kyber.network/v0.7.5/widget.js':{\n            parentElement:document.body,\n            precall: (props,globalConfigs,providerInfo) => {\n\n              // Remove previous elements\n              const buttons = document.querySelectorAll('.kyber-widget-button');\n              for (let i=0;i<buttons.length;i++){\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll('.script_kyberSwap');\n              for (let i=0;i<scripts.length;i++){\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId ? props.buttonId : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)){\n                const a = document.createElement('a');\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props,globalConfigs);\n                a.target = '_blank';\n                a.rel = 'nofollow noopener noreferrer';\n                a.className = 'kyber-widget-button theme-ocean theme-supported';\n                a.title = 'Swap with Kyber';\n                a.style = 'display:none;';\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props,globalConfigs,buyParams=null) => {\n          const baseToken = props.baseToken ? props.baseToken : 'ETH';\n          const params = {\n            lang:'en',\n            type:'swap',\n            mode:'iframe',\n            theme:'theme-ocean',\n            paramForwarding:true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens:`${baseToken}_${props.selectedToken}`,\n            title:`Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair:`${baseToken}_${props.selectedToken}`,\n            commissionId:'0x4215606a720477178AdFCd5A59775C63138711e8',\n            network: globalConfigs.network.requiredNetwork === 1 ? 'mainnet' : 'test',\n          };\n\n          const url  = 'https://widget.kyber.network/v0.7.5/';\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props) => {\n          const buttonId = props.buttonId ? props.buttonId :`kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a){\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: 'images/payments/airswap.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://cdn.airswap.io/airswap-instant-widget.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            env: 'production',\n            mode: 'buy',\n            token: props.tokenConfig.address,\n            baseToken: 'ETH',\n            onComplete: onComplete ? onComplete : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.AirSwapInstant){\n            if (amount){\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams,'body');\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: 'images/payments/totle.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://widget.totle.com/latest/dist.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null,\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.TotleWidget){\n            const nodeId = 'totle-widget';\n            if (!document.getElementById(nodeId)){\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(initParams,document.getElementById(nodeId));\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      if (this.tokenConfig && this.tokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\n\nconst ethereumjsABI = require('ethereumjs-abi');\nconst env = process.env;\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0,1).toUpperCase()+str.substr(1) : '';\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const ensConfig = this.getGlobalConfig(['network','providers','ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)){\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3){\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1){\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name){\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,ensName.name,TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n      totalBalanceConverted:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance,token,tokenConfig,isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens,async (token) => {\n      const tokenConfig = availableTokens[token];\n      const amountDeposited = await this.getAmountDeposited(tokenConfig,account);\n\n      // console.log(token,'amountDeposited',amountDeposited.toString(),'amountLent',amountLents[token].toString());\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n      const [\n        tokenAprs\n        // tokenEarnings\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig)\n        // this.loadAssetField('earnings',token,tokenConfig,this.props.account,false),\n      ]);\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings){\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY){\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken){\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx){\n                firstDepositTx = tx;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section) => {\n    return `${window.location.origin}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens,account);\n    if (firstDepositTxs){\n      return Object.keys(firstDepositTxs).reduce( (acc,token) => {\n        if (firstDepositTxs[token]){\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      },{});\n    }\n\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens,false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n\n    let results = [];\n    let etherscanBaseTxs = null;\n    let etherscanBaseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      etherscanBaseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      etherscanBaseTxs = this.getCachedRequest(etherscanBaseEndpoint);\n\n      if (debug){\n        console.log('DEBUG - CACHED - etherscanBaseTxs',etherscanBaseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (etherscanBaseTxs && etherscanBaseTxs.data.result && Object.values(etherscanBaseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(etherscanBaseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEtherscanTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with etherscanBaseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(etherscanBaseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  etherscanBaseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanBaseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        etherscanBaseTxs = null;\n      }\n\n      let txs = etherscanBaseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(etherscanBaseEndpoint);\n\n        // console.log('makeRequest 1',account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(etherscanBaseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          cachedRequests[etherscanBaseEndpoint] = {\n            data:txs,\n            timestamp\n          };\n          this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveEtherscanTxs = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    const {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    } = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens,debug);\n\n    // Initialize prevTxs\n    let etherscanTxs = {};\n    if (etherscanBaseTxs){\n      // Filter txs for token\n      etherscanTxs = await this.processStoredTxs(results,enabledTokens);\n    } else {\n      const allAvailableTokens = Object.keys(this.props.availableTokens);\n      // Save base endpoint with all available tokens\n      etherscanTxs = await this.filterEtherscanTxs(results,allAvailableTokens);\n\n      // Store filtered txs\n      if (etherscanTxs && Object.keys(etherscanTxs).length){\n        this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanTxs);\n      }\n    }\n\n    if (debug){\n      console.log('DEBUG - getEtherscanTxs -',etherscanTxs);\n    }\n\n    return Object\n            .values(etherscanTxs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processEtherscanTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processEtherscanTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    const networkId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    const timestamp = parseInt(Date.now()/1000);\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress',false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress',customAddress);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeEtherscanApiRequest = async (endpoint,keys=[],TTL=120,apiKeyIndex=0) => {\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp-cachedRequests[endpoint].timestamp<TTL){\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint+'&apikey='+apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,data,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && data.data.message === 'OK'){\n      cachedRequests[endpoint] = {\n        data,\n        timestamp\n      };\n      this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n      return data;\n    } else if (apiKeyIndex<keys.length-1) {\n      return await this.makeEtherscanApiRequest(endpoint,keys,TTL,apiKeyIndex+1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint,TTL=60,return_data=false,alias=false,config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint,false,config);\n\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    path = Object.assign([],path);\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page=null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics','google','pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga){\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider=null) => {\n    return this.getStoredItem('walletProvider',false,defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const baseurl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',requiredNetwork]);\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const baseurl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',requiredNetwork]);\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly=false) => {\n\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network','providers','snapshot','whitelist']).map( addr => addr.toLowerCase() );\n    const endpoint = this.getGlobalConfig(['network','providers','snapshot','endpoints','proposals']);\n    let proposals = await this.makeCachedRequest(endpoint,1440,true);\n\n    // console.log('getSnapshotProposals',proposals);\n\n    if (proposals && !proposals.error){\n      proposals = Object.values(proposals);\n\n      const currTime = parseInt(Date.now()/1000);\n      if (activeOnly){\n        proposals =  proposals.filter( p => (p.msg.payload.start<=currTime && p.msg.payload.end>currTime) );\n      }\n\n      // console.log(proposals);\n\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        // Add proposal if ended\n        if (p.msg.payload.end<=currTime || whitelist.includes(p.address.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.msg.payload.snapshot;\n\n          let checkedStrategies = false;\n          await this.asyncForEach( p.msg.payload.metadata.strategies, async (s) => {\n            if (checkedStrategies){\n              return;\n            }\n            if (s.name==='erc20-balance-of'){\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract){\n                const tokenBalance = await this.getTokenBalance(tokenName,p.address,true,blockNumber);\n                // console.log(p.relayerIpfsHash,p.address,s.name,tokenBalance ? tokenBalance.toFixed() : null);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)){\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n\n            // console.log(p.relayerIpfsHash,p.address,s.name,checkedStrategies);\n          });\n          \n          // Add proposal is passed token balances check\n          if (checkedStrategies){\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey,validProposals);\n    }\n\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    if (globalConfigs.network.requiredNetwork!==1 || !globalConfigs.stats.enabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n\n      if (filteredCachedData && filteredCachedData.length>0){\n        const filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          return filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    let endpoint = `${apiInfo.endpoint}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    let output = await this.makeRequest(endpoint,false,config);\n    if (!output){\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null){\n      filteredData = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data:filteredData,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName,exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName,exchangeRateParams.name,exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,exchangeRate,null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName){\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats','tokens',contractName]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName,'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,decimals,null);\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint,etherscanInfo.keys,3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function'){\n      return etherscanTxlist.data.result.filter( tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0) ));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate=null) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig){\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length){\n      return false;\n    }\n\n    for (let protocolIndex=0;protocolIndex<allocations.length;protocolIndex++){\n      const lastAllocationsPromise = new Promise( async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations){\n      return true;\n    }\n\n    const diff = allocations.filter( (alloc,index) => alloc !== newAllocations[index] );\n\n    return diff.length>0;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  getContractEvents = async (contractName, eventName, params = {}) => {\n    return await this.getContractPastEvents(contractName, eventName, params);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]){\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n      \n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({from: account})\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit){\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice,9).times(gasLimit),9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null,error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName,tokenAddress,permitType,callData,gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data:callData,\n      token:tokenAddress,\n      to:contract._address,\n      txGas:parseInt(gasLimit)\n    };\n\n    console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise( async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash,(err,tx)=>{\n        if (err){\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req,metaInfo,callback,callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({req,metaInfo});\n      transactionHash = txResponse.txHash;\n      console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null,true);\n      return false;\n    }\n\n    if (!transactionHash){\n      console.log('!transactionHash ERROR');\n      callback(null,true);\n      return false;\n    }\n    \n    const tx = {\n      method:'mintIdleToken',\n      transactionHash\n    };\n    console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(()=> {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt)=> {\n        console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if(!err && receipt){\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx,err);\n\n          if (typeof window.updateTransaction === 'function'){\n            window.updateTransaction(tx,transactionHash,tx.status,null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce=0, value=null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit',baseContractName]);\n\n    // console.log('permitConfig',permitConfig);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce>0){\n      nonce = parseInt(nonce)+parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion){\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n      break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n      break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit=null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters){\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find( f => f.name === methodName );\n      const useNonce = methodAbi ? methodAbi.inputs.find( i => i.name === 'nonce' ) : true;\n      if (!isNaN(parseInt(nonce)) && useNonce){\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null,'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName,walletAddr,false),\n      this.getAllowance(contractName,contractAddr,walletAddr)\n    ]);\n    this.customLog('checkTokenApproved',contractName,this.BNify(allowance).toFixed(),this.BNify(balance).toFixed(),(allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName,methodName,params,value,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  disableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(Date.now()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency,tokenConfig.distributionMode);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // console.log('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toFixed() : null,tokenApys.avgApy ? tokenApys.avgApy.toFixed() : null);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()){\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n      break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token],account),\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]){\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig,firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n      break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken,blockNumber='latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken,blockNumber);\n    if (idleTokenSupply){\n      idleTokenSupply = this.BNify(idleTokenSupply);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig,account,blockNumber='latest') => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n    \n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))){\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = () => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData();\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]){\n      cachedData = this.props.cachedData[key];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]){\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || cachedData.expirationDate>=parseInt(Date.now()/1000));\n\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url,'_blank','noopener');\n  }\n  getActiveCoverages = async (account=null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account){\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now()/1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools','coverProtocol']);\n    if (coverProtocolConfig.enabled){\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name,account);\n        if (balance && balance.gt(0)){\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp<=currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n    if (nexusMutualConfig.enabled){\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach( coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance','nexusMutual','label']);\n        const protocolImage = this.getGlobalConfig(['insurance','nexusMutual','image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance','nexusMutual','imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil)<=currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard','baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools','nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n    \n    await Promise.all([\n      this.props.initContract(incidentsInfo.name,incidentsInfo.address,incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n       this.getContractEvents(feeDistributorConfig.name,'CoverBought',{fromBlock, toBlock:'latest',filter:{buyer:account}}),\n       this.getContractEvents(feeDistributorConfig.name,'ClaimSubmitted',{fromBlock, toBlock:'latest',filter:{buyer:account}})\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents,async (cover) => {\n    // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find( claim => parseInt(claim.returnValues.coverId)===coverId );\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name,'getCover',[coverId]),\n        this.getContractEvents(incidentsInfo.name,'IncidentAdded',{fromBlock:cover.blockNumber, toBlock:'latest',filter:{productId:cover.contractAddress}})\n      ]);\n\n      if (!coverDetails){\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n        this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n        this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n        parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      });\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find( tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase() );\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured,yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find( underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase() );\n      const expiryDate = this.strToMoment(coverDetails.validUntil*1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = await this.genericContractCall(feeDistributorConfig.name,'getPayoutOutcome',[claimId]);\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent){\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find( log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase() ) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data,16),coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured,coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount,coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token,account,false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice,yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance,yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2)+'%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? {...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date)} : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint,1800,true);\n      if (transactions && typeof transactions.result === 'object'){\n        return transactions.result.filter( tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase() );\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account=null,filter_by_status=null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools','batchDeposit']);\n    if (!batchDepositConfig.enabled){\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name,migrationContract.address,migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name,'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name,'batchTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null){\n          batchTotals = this.fixTokenDecimals(batchTotal,tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchRedeem = this.fixTokenDecimals(batchRedeem,18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit,tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)){\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status){\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,batchedDeposits);\n  }\n  getETHBalance = async (walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr,blockNumber)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance,30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,totalSupply,null);\n  }\n  getTokenPrice = async (contractName,blockNumber='latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName,'tokenPrice',[],{},blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice,60);\n  }\n  getContractBalance = async (contractName,address,blockNumber='latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,balance,30);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    return await this.getContractBalance(contractName,address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs){\n      const result = {\n        aprs:aprs[1],\n        addresses:aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey,result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber) => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n    return blockInfo ? this.setCachedDataWithLocalStorage(cachedDataKey,blockInfo,null) : null;\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.getPastEvents(methodName, params);\n  }\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL=180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest'){\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,result,TTL);\n  }\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      // this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    if (async){\n      await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        await callback(array[index], index, array);\n      }\n    }\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(12))).pow(12).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken allocation between protocols\n  */\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    let totalAllocation = this.BNify(0);\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsBalances:{},\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n\n      if (!protocolInfo.enabled){\n        return;\n      }\n\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [\n        tokenDecimals,\n        protocolBalance,\n        exchangeRate\n      ] = await Promise.all([\n        this.getTokenDecimals(contractName),\n        this.getProtocolBalance(contractName,tokenConfig.idle.address),\n        ( protocolInfo.functions.exchangeRate ? this.getTokenExchangeRate(contractName,protocolInfo.functions.exchangeRate) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      let protocolAllocation = this.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      if (protocolAllocation.lt(this.BNify(0.00000001))){\n        protocolBalance = this.BNify(0);\n        protocolAllocation = this.BNify(0);\n      }\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      // console.log('getTokenAllocation',contractName,protocolAddr,protocolAllocation.toFixed(5),exchangeRate ? exchangeRate.toFixed(5) : null,totalAllocation.toFixed(5));\n    });\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = this.BNify(totalAllocation);\n\n    // Add unlent balance to the pool\n    let unlentBalance = await this.getUnlentBalance(tokenConfig);\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    // console.log('totalAllocationWithUnlent 1',addGovTokens,tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (addGovTokens){\n      const govTokensBalances = await this.getGovTokensBalances(tokenConfig.idle.address);\n\n      // Sum gov tokens balances\n      if (govTokensBalances.total){\n        const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,false);\n        if (tokenUsdConversionRate){\n          govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n        }\n\n        tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n\n        // console.log('totalAllocationWithUnlent 2',govTokensBalances.total.toFixed(5),tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n      }\n    }\n\n    [\n      tokenAllocation.totalAllocationConverted,\n      tokenAllocation.totalAllocationWithUnlentConverted\n    ] = await Promise.all([\n      this.convertTokenBalance(tokenAllocation.totalAllocation,tokenConfig.token,tokenConfig),\n      this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,tokenConfig.token,tokenConfig)\n    ]);\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getSushiswapPoolTokenPrice = async (contractName,pairAddresses) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCallCached(contractName,'token0'),\n      this.genericContractCallCached(contractName,'token1'),\n      this.genericContractCallCached(contractName,'getReserves'),\n      this.getTokenTotalSupply(contractName)\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply){\n      const token0_config = {\n        address:token0_address\n      };\n      const token1_config = {\n        address:token1_address\n      };\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig,token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig,token1_config)\n      ]);\n\n      if (token0_price && token1_price){\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0],18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1],18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply,18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      if (res){\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    if (tokenConfigDest.addressForPrice){\n      tokenConfigDest = Object.assign({},tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log('getUniswapConversionRate - CACHED',cachedDataKey,cachedData);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        // console.log('getUniswapConversionRate',path,price.toFixed());\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig,aTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find( p => p.name === stkAAVETokenConfig.protocol );\n\n    if (!aTokenConfig || stkAAVETokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCallCached(aTokenConfig.token,'getIncentivesController',[],{},'latest',null);\n\n    // console.log('getStkAaveDistribution',tokenConfig.idle.token,aTokenConfig.token,aaveIncentivesController_address);\n\n    if (!aaveIncentivesController_address){\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aTokenConfig.token}`;\n    await this.props.initContract(IAaveIncentivesController_name,aaveIncentivesController_address,stkAAVETokenConfig.abi);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig,false,false),\n      this.genericContractCallCached(IAaveIncentivesController_name,'getAssetData',[aTokenConfig.address]),\n    ]);\n\n    if (assetData && tokenAllocation){\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)){\n        if (!aTokenIdleSupply){\n          aTokenIdleSupply = await this.getContractBalance(aTokenConfig.token,tokenConfig.idle.address);\n        }\n\n        const aaveSpeed = this.BNify(assetData[1]);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network','secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize){\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        // console.log('getStkAaveDistribution',tokenConfig.idle.token,aTokenIdleSupply.toFixed(),aTokenTotalSupply.toFixed(),aavePoolShare.toFixed(),aaveSpeed.toFixed(),aaveDistribution.toFixed());\n\n        if (!this.BNify(aaveDistribution).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find( p => (p.name === stkAAVETokenConfig.protocol) );\n      if (aTokenInfo){\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getStkAaveDistribution(tokenConfig,null,false),\n        ]);\n\n        if (aaveDistribution && userPoolShare){\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getStkAaveApr = async (token,tokenConfig,aaveConversionRate=null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    if (!stkAAVETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)){\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate){\n        const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        try {\n          const destTokenConfig = {\n            address:stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig,destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()){\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token,tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = compDistribution.div(1e18).times(this.BNify(blocksPerYear));\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      if (!govTokenConfig.enabled || govTokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n      if (govTokenConfig.protocol === 'idle'){\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency='day',mode='block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network','secondsPerYear']));\n    const multipliers = {\n      'day':{\n        'block':blocksPerYear.div(365.242199),\n        'second':secondsPerYear.div(365.242199)\n      },\n      'week':{\n        'block':blocksPerYear.div(52.1429),\n        'second':secondsPerYear.div(52.1429)\n      },\n      'month':{\n        'block':blocksPerYear.div(12),\n        'second':secondsPerYear.div(12)\n      },\n      'year':{\n        'block':blocksPerYear.div(1),\n        'second':secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n    \n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken){\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n        break;\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig,null,false);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation){\n                const aTokenConfig = tokenConfig.protocols.find( p => (p.name === govTokenConfig.protocol) );\n                if (aTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]){\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const cTokenConfig = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (cTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const destTokenConfig = {\n        address:govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,govTokensBalances);\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${JSON.stringify(Object.keys(availableTokens))}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account,tokenConfig) => {\n    if (!account){\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token,account);\n    if (govTokensAmounts){\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token,govTokenIndex);\n\n        if (govTokenAddress){\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig){\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token,govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'govTokens',[govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress,null);\n  }\n  getGovTokensUserAmounts = async (token,account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token,'getGovTokensAmounts',[account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey,govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token,account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token,govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce( (totalTVL,tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()){\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    },this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens:{},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(tokenConfig)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply,18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL,token,tokenConfig,isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (govTokenBalance && govTokenConversionRate){\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance,govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()){\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply){\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply,18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL,token,oldTokenConfig,isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()){\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint,false,config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length>0){\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey,latestFeed,endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAggregatedStats = async (addGovTokens=true) => {\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','tvls']);\n    const tvls = await this.makeCachedRequest(endpointInfo.endpoint,endpointInfo.TTL,true,false,config);\n\n    if (tvls){\n      const avgAPY = this.BNify(tvls.avgAPY);\n      const totalAUM = this.BNify(tvls.totalTVL);\n      return {\n        avgAPY,\n        totalAUM\n      };\n    } else {\n      return await this.getAggregatedStats_chain();\n    }\n  }\n  getAggregatedStats_chain = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n\n  getAvgAPYStats = async (address,isRisk,startTimestamp=null,endTimestamp=null) => {\n\n    const apiResults = await this.getTokenApiData(address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    if (apiResults && apiResults.length){\n      const apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate,18);\n        return sum.plus(idleRate);\n      },this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null,count=0) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig,tokenConfig);\n    if (!this.BNify(conversionRate).isNaN()){\n      return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n    }\n\n    if (count<3){\n      return await this.getTokenConversionRate(tokenConfig,isRisk,conversionRateField,count+1); \n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenData && tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001) && tokenData.length>0){\n          const protocolInfo = tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) );\n          if (protocolInfo){\n            const protocolScore = this.BNify(protocolInfo.defiScore);\n            if (!protocolScore.isNaN()){\n              tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n            }\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = await this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.scores;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config);\n\n    if (scores && scores.length>0){\n      let tokenData = scores.find( s => s.address.toLowerCase() === tokenConfig.address.toLowerCase() );\n      if (tokenData){\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)){\n          // Set cached data\n          return this.setCachedData(cachedDataKey,tokenScore);\n        // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now()/1000);\n          const startTimestamp = parseInt(timestamp)-(60*60*24);\n          tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n          const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n          if (filteredTokenData.length){\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle){\n      // console.log('getTokenAprs - !tokenConfig.idle',tokenConfig);\n      return tokenAprs;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgApr && !this.BNify(cachedData.avgApr).isNaN()) && (cachedData.avgApy && !this.BNify(cachedData.avgApy).isNaN()) ){\n      // console.log('getTokenAprs - CACHED',tokenConfig.idle.token,cachedData);\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    const Aprs = await this.getAprs(tokenConfig.idle.token);\n\n    if (!Aprs){\n      // console.log('getTokenAprs - !Aprs',Aprs);\n      return tokenAprs;\n    }\n\n    if (!tokenAllocation){\n      tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    }\n\n    if (!tokenAllocation){\n      // console.log('getTokenAprs - !tokenAllocation',tokenAllocation);\n      return tokenAprs;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n\n    const govTokensAprs = {};\n    const protocolsAprs = {};\n    const protocolsApys = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const protocolAddr = protocolInfo.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        let protocolApr = this.BNify(+this.toEth(aprs[addrIndex]));\n        let protocolApy = this.apr2apy(protocolApr.div(100)).times(100);\n\n        if (addGovTokens){\n          let govTokenAPR = null;\n          const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n          await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n            switch (govToken){\n              case 'COMP':\n                govTokenAPR = await this.getCompAPR(tokenConfig.token,tokenConfig);\n              break;\n              case 'stkAAVE':\n                govTokenAPR = await this.getStkAaveApr(tokenConfig.token,tokenConfig);\n              break;\n              default:\n              break;\n            }\n            if (govTokenAPR){\n              govTokensAprs[govToken] = govTokenAPR;\n            }\n          });\n          \n        }\n\n        protocolsApys[protocolAddr] = protocolApy;\n        protocolsAprs[protocolAddr] = protocolApr;\n      }\n    });\n\n    if (tokenAllocation){\n      tokenAprs.avgApr = this.getAvgApr(protocolsAprs,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n      tokenAprs.avgApy = this.getAvgApr(protocolsApys,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n\n      Object.values(govTokensAprs).forEach( govTokenAPR => {\n        tokenAprs.avgApr = tokenAprs.avgApr.plus(govTokenAPR);\n        tokenAprs.avgApy = tokenAprs.avgApy.plus(govTokenAPR);\n      });\n\n      // console.log('getTokenAprs',tokenConfig.idle.token,tokenConfig,aprs,protocolsAprs,tokenAllocation,tokenAprs,govTokensAprs);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()){\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()){\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber(value,decimals=3,maxPrecision=5,minPrecision=0){\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver:false\n  }\n\n  setMouseOver(mouseOver){\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      border:1,\n      boxShadow:1,\n      borderRadius:2,\n      borderColor:null,\n      position:'relative',\n      minHeight:'initial',\n      backgroundColor:'cardBg'\n    };\n\n    if (isActive || (isInteractive && this.state.mouseOver)){\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034','1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    alert:'#ff9900',\n    arrowActive:'#d8d8d8',\n    arrowInactive:'#4f4f4f',\n    selectBgFocused:'#1e3657',\n    selectBg:'#162e4d',\n    backButtonBg:'#162e4d',\n    lineChartStroke:'#a4aec6',\n    wrongNetworkBannerBg:'#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link:'#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#162e4d',\n    menuBg:'#162e4d',\n    menuHover:'#1e3657',\n    flashColor:'#bac5ff',\n    cardBgHover:'#1e3657',\n    cardBorder:'#0d2034',\n    pageActive:'#d8d8d8',\n    pageInactive:'#4f4f4f',\n    menuRightBorder:'#0d2034',\n    cardHoverShadow:'0px 0px 0px 1px rgb(45 74 114)',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura).forEach((networkId,index) => {\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: globalConfigs.network.providers.infura[defaultNetwork]+env.REACT_APP_INFURA_KEY\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\nconst INFURA_KEY = process.env[\"REACT_APP_INFURA_KEY\"];\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        await this.props.clearCachedData(() => {\n          this.checkNetwork();\n        });\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n  }\n\n  componentDidMount = async () => {\n    this.initSimpleID();\n\n    // this.functionsUtil.customLog('RimbleWeb3 componentDidMount');\n    this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe);\n      if (isGnosisSafe){\n        this.props.setConnector('gnosis','gnosis');\n      } else if (walletProvider === 'gnosis') {\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    // console.log('gnosisSafeLoaded',this.state.gnosisSafeLoaded,this.props.connectors.gnosis.safeLoaded,gnosisSafeLoaded);\n    if (gnosisSafeLoaded){\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    if (customAddressChanged){\n      this.initAccount();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n    // console.log('networkChanged',JSON.stringify(prevState.network),JSON.stringify(this.state.network),networkChanged);\n    if (networkChanged){\n      this.setState({\n        contracts:[],\n        contractsInitialized:false\n      }, () => {\n        this.initWeb3();\n        if (typeof this.props.setNetwork === 'function'){\n          this.props.setNetwork(this.state.network);\n        }\n      });\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    const metamaskProvider = await detectEthereumProvider();\n    if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n      window.ethereum = metamaskProvider;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (!networkId){\n      return false;\n    }\n\n    // console.log('initWeb3',this.state.network.current.id,this.state.network.required.id,networkId);\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(globalConfigs.network.providers.infura[networkId]+INFURA_KEY));\n\n    let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (connectorName !== 'ledgerLive'){\n      if (!context.active || connectorNameChanged) {\n        // Select preferred web3 provider\n        if (connectorName && connectorNameChanged){\n\n          if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n            return false;\n          }\n\n          // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n          setConnectorName = connectorName;\n          await context.setConnector(connectorName);\n          // await context.setFirstValidConnector([connectorName, 'Infura']);\n          return web3;\n        }\n      }\n    }\n\n    let web3Host = null;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n      if (connectorName !== 'Infura'){\n        this.props.setConnector('Infura',null);\n      }\n    }\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // After setting the web3 provider, check network\n      try {\n        await this.checkNetwork();\n        if (this.state.network.isCorrectNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(networkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                web3Infura,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            web3Infura,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          web3Infura,\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`Init contract: ${name}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`creating contract ${name} - addr: ${address}`);\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : this.state.web3;\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      });\n\n      // After account is complete, get the balance\n      this.getAccountBalance();\n\n      return false;\n    }\n\n    try {\n      if (!account){\n        const wallets = await Promise.race([\n            this.state.web3.eth.getAccounts(),\n            new Promise((resolve) => setTimeout(resolve, 300))\n        ]);\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n      // Request account access if needed\n      if (account && walletProvider !== 'Infura'){\n\n        if (walletProvider === 'Infura'){\n          this.setState({\n            accountInizialized: true,\n            account:this.props.customAddress\n          });\n          return false;\n        }\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts']);\n    await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n      const contractInfo = contracts[contractName];\n      if (contractInfo.address !== null && contractInfo.abi !== null){\n        this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n        await this.initContract(contractName, contractInfo.address, contractInfo.abi);\n      }\n    });\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n      const govTokenConfig = govTokens[token];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      // Initialize govToken contracts\n      let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n      if (!foundGovTokenContract) {\n        this.functionsUtil.customLog('initializeContracts, init contract', token, govTokenConfig.address);\n        await this.initContract(token, govTokenConfig.address, govTokenConfig.abi);\n      }\n    });\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n\n    const networkId =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.requiredNetwork !== \"undefined\"\n        ? this.props.config.requiredNetwork\n        : globalConfigs.network.requiredNetwork;\n\n    let networkName = globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId] : 'unknown';\n\n    let requiredNetwork = {\n      name: networkName,\n      id: networkId\n    };\n\n    let network = Object.assign({},this.state.network);\n    network.required = requiredNetwork;\n\n    this.setState({ network });\n  }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network Name: \", error);\n    }\n  }\n\n  checkNetwork = async () => {\n    this.getRequiredNetwork();\n\n    await Promise.all([\n      this.getNetworkId(),\n      this.getNetworkName()\n    ]);\n\n    let network = Object.assign({},this.state.network);\n    network.isCorrectNetwork = !this.state.network.current.id || globalConfigs.network.enabledNetworks.includes(this.state.network.current.id);\n    // console.log('checkNetwork',this.state.network.current.id,network.isCorrectNetwork);\n\n    this.setState({ network });\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    CrispClient: null,\n    permitClient:null,\n    tokenDecimals:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n            <Flex\n              width={[0.5,8/12]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={\"flex-end\"}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile &&\n                  <>\n                    <Link\n                      mr={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n              }\n            </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  1337:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:[],\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  },\n  1:{ // Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:[],\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            token:'aRAI',\n            enabled:true,\n            name:'aavev2',\n            functions:{\n            },\n            address:'0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport { Web3Consumer } from 'web3-react';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import('../Dashboard/Dashboard'));\nconst Governance = React.lazy(() => import('../Governance/Governance'));\n\nclass App extends Component {\n  state = {\n    network:null,\n    cachedData:{},\n    buyToken: null,\n    currentEnv:null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode:'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme:theme,\n    currentSection:null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps:null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps:props\n    });\n  }\n\n  processCustomParam = (props,prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback=null) => {\n\n    const cachedData = {...this.state.cachedData};\n    Object.keys(cachedData).forEach( key => {\n      const data = cachedData[key];\n      if (data.expirationDate !== null){\n        delete cachedData[key];\n      }\n    });\n\n\n    let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n    Object.keys(storedCachedData).forEach( key => {\n      const storedData = storedCachedData[key];\n      if (storedData.expirationDate !== null){\n        delete storedCachedData[key];\n      }\n    });\n\n    this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n\n    await this.setState({\n      cachedData\n    },() => {\n      if (typeof callback === 'function'){\n        callback();\n      }\n    });\n    return true;\n  }\n\n  setCachedData = (key,data,TTL=null,useLocalStorage=false) => {\n\n    key = key.toLowerCase();\n    const cachedKeyFound = this.state.cachedData[key];\n    const currentTime = parseInt(Date.now()/1000);\n\n    const update_key = !cachedKeyFound || ( (cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate>=currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key){\n      const expirationDate = TTL ? currentTime+(TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage){\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData){\n          storedCachedData = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        };\n        // console.log('STORED CACHE - INSERT KEY',key,data);\n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        }\n      }),() => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)){\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress){\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw:false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({...state, selectedTab: tabIndex}));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : globalConfigs.network.requiredNetwork;\n\n    // console.log('loadAvailableTokens',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = Object.keys(availableTokens[requiredNetwork][strategy]).reduce( (enabledTokens,token) => {\n        const tokenConfig = availableTokens[requiredNetwork][strategy][token];\n        const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n        if (tokenConfig.enabled && envEnabled){\n          enabledTokens[token] = tokenConfig;\n        }\n        return enabledTokens;\n      },{});\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]){\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]){\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy,selectedToken){\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig:!selectedToken ? null : this.state.tokenConfig,\n      availableTokens:!selectedToken ? null : this.state.availableTokens,\n      selectedToken:!selectedToken ? selectedToken :this.state.selectedToken,\n      selectedStrategy:!selectedStrategy ? selectedStrategy :this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if ( this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase()) ){\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',newState);\n\n    await this.setState(newState,callback);\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      },callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      },callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())){\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState,callback);\n    } else if(!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig:null\n      },callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    window.clearCachedData = this.clearCachedData;\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction){\n      window.console.error = () => {};\n      window.console.warn = () => {};\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage){\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version',false);\n      if (version !== globalConfigs.version){\n        this.functionsUtil.clearStoredData(['walletProvider','connectorName','themeMode']);\n        this.functionsUtil.setLocalStorage('version',globalConfigs.version);\n      }\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode',false);\n    if (themeMode){\n      this.setThemeMode(themeMode);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i=0;i<iFrames.length;i++){\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w){\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCustomAddress();\n    this.loadCurrentEnvironment();\n  }\n\n  loadCurrentEnvironment(){\n    const isLive = this.functionsUtil.checkUrlOrigin();\n    const currentEnv = isLive ? 'live' : 'beta';\n    this.setState({\n      currentEnv\n    },() => {\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress(){\n    if (!this.state.customAddress){\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom'){\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress){\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged){\n      if (this.state.currentSection === 'landing'){\n        this.setThemeMode('light',false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode',false) || this.functionsUtil.getGlobalConfig(['dashboard','theme','mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged){\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage){\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive){\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName,walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width:this.state.width,\n      height:this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged){\n      if (widthChanged){\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged){\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  // Optional parameters to pass into RimbleWeb3\n  config = globalConfigs.network;\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e){\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken:null,\n      buyModalOpened:false\n    });\n  }\n\n  openBuyModal(e,buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened:true\n    });\n  }\n\n  async logout(){\n    // Reset Custom Address\n    this.setState({\n      customAddress:null\n    });\n    // Clear cached data\n    this.clearCachedData(()=>{\n      // Reset Localstorage\n      this.functionsUtil.clearStoredData(['version','themeMode','lastLogin','cachedData']);\n    });\n  }\n\n  setNetwork(network){\n    this.setState({\n      network\n    });\n  }\n\n  setConnector(connectorName,walletProvider){\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider){\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ( (connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if ( connectorName === 'Injected' ){\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider){\n        case 'Metamask':\n          if (!hasMetamask && hasDapper){\n            walletProvider = 'Dapper';\n          }\n        break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask){\n            walletProvider = 'Metamask';\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    // console.log('setConnector - AFTER',connectorName,walletProvider);\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    },() => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode,store=true){\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard','theme','darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled){\n      themeMode = 'light';\n    }\n\n    switch (themeMode){\n      default:\n      case 'light':\n        selectedTheme = theme;\n      break;\n      case 'dark':\n        selectedTheme = themeDark;\n      break;\n    }\n\n    if (store){\n      this.functionsUtil.setLocalStorage('themeMode',themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection){\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize:4,\n            fontWeight:2\n          }}\n          loaderProps={{\n            mb:3,\n            size:'80px',\n            color:'primary'\n          }}\n          flexProps={{\n            my:3,\n            flexDirection:'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer>\n              {context => {\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    config={this.config}\n                    connectors={connectors}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper\n                      }) => {\n                        return (\n                        <Box>\n                          <Switch>\n                            <Route\n                              path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                              render={\n                                (props) => \n                                  <Suspense\n                                    fallback={SuspenseLoader}\n                                  >\n                                    <Dashboard\n                                      {...props}\n                                      web3={web3}\n                                      modals={modals}\n                                      network={network}\n                                      context={context}\n                                      account={account}\n                                      isDashboard={true}\n                                      initWeb3={initWeb3}\n                                      biconomy={biconomy}\n                                      isMobile={isMobile}\n                                      simpleID={simpleID}\n                                      contracts={contracts}\n                                      initAccount={initAccount}\n                                      permitClient={permitClient}\n                                      initSimpleID={initSimpleID}\n                                      initContract={initContract}\n                                      transactions={transactions}\n                                      buyToken={this.state.buyToken}\n                                      logout={this.logout.bind(this)}\n                                      accountBalance={accountBalance}\n                                      themeMode={this.state.themeMode}\n                                      theme={this.state.selectedTheme}\n                                      validateAccount={validateAccount}\n                                      connecting={this.state.connecting}\n                                      cachedData={this.state.cachedData}\n                                      setToken={this.setToken.bind(this)}\n                                      accountValidated={accountValidated}\n                                      getTokenDecimals={getTokenDecimals}\n                                      rejectValidation={rejectValidation}\n                                      tokenConfig={this.state.tokenConfig}\n                                      getAccountBalance={getAccountBalance}\n                                      accountBalanceLow={accountBalanceLow}\n                                      accountInizialized={accountInizialized}\n                                      selectedToken={this.state.selectedToken}\n                                      connectorName={this.state.connectorName}\n                                      setStrategy={this.setStrategy.bind(this)}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountBalanceToken={accountBalanceToken}\n                                      initializeContracts={initializeContracts}\n                                      walletProvider={this.state.walletProvider}\n                                      buyModalOpened={this.state.buyModalOpened}\n                                      erc20ForwarderClient={erc20ForwarderClient}\n                                      contractsInitialized={contractsInitialized}\n                                      openBuyModal={this.openBuyModal.bind(this)}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      handleMenuClick={this.selectTab.bind(this)}\n                                      setConnector={this.setConnector.bind(this)}\n                                      setThemeMode={this.setThemeMode.bind(this)}\n                                      availableTokens={this.state.availableTokens}\n                                      closeBuyModal={this.closeBuyModal.bind(this)}\n                                      setCachedData={this.setCachedData.bind(this)}\n                                      selectedStrategy={this.state.selectedStrategy}\n                                      userRejectedValidation={userRejectedValidation}\n                                      clearCachedData={this.clearCachedData.bind(this)}\n                                      setStrategyToken={this.setStrategyToken.bind(this)}\n                                      accountValidationPending={accountValidationPending}\n                                      availableStrategies={this.state.availableStrategies}\n                                      setCurrentSection={this.setCurrentSection.bind(this)}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      contractMethodSendWrapper={contractMethodSendWrapper}\n                                      setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                    />\n                                  </Suspense>\n\n                              }\n                            >\n                            </Route>\n                            {\n                              governanceEnabled && \n                                <Route\n                                  path=\"/governance/:section?/:item_id?\"\n                                  render={\n                                    (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Governance\n                                          {...props}\n                                          web3={web3}\n                                          modals={modals}\n                                          network={network}\n                                          context={context}\n                                          account={account}\n                                          initWeb3={initWeb3}\n                                          biconomy={biconomy}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          isGovernance={true}\n                                          contracts={contracts}\n                                          initAccount={initAccount}\n                                          initSimpleID={initSimpleID}\n                                          initContract={initContract}\n                                          transactions={transactions}\n                                          buyToken={this.state.buyToken}\n                                          logout={this.logout.bind(this)}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          validateAccount={validateAccount}\n                                          connecting={this.state.connecting}\n                                          cachedData={this.state.cachedData}\n                                          setToken={this.setToken.bind(this)}\n                                          accountValidated={accountValidated}\n                                          getTokenDecimals={getTokenDecimals}\n                                          rejectValidation={rejectValidation}\n                                          tokenConfig={this.state.tokenConfig}\n                                          getAccountBalance={getAccountBalance}\n                                          accountBalanceLow={accountBalanceLow}\n                                          accountInizialized={accountInizialized}\n                                          selectedToken={this.state.selectedToken}\n                                          connectorName={this.state.connectorName}\n                                          setStrategy={this.setStrategy.bind(this)}\n                                          userRejectedConnect={userRejectedConnect}\n                                          accountBalanceToken={accountBalanceToken}\n                                          initializeContracts={initializeContracts}\n                                          walletProvider={this.state.walletProvider}\n                                          buyModalOpened={this.state.buyModalOpened}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          rejectAccountConnect={rejectAccountConnect}\n                                          handleMenuClick={this.selectTab.bind(this)}\n                                          setConnector={this.setConnector.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          availableTokens={this.state.availableTokens}\n                                          closeBuyModal={this.closeBuyModal.bind(this)}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          selectedStrategy={this.state.selectedStrategy}\n                                          userRejectedValidation={userRejectedValidation}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          setStrategyToken={this.setStrategyToken.bind(this)}\n                                          accountValidationPending={accountValidationPending}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          contractMethodSendWrapper={contractMethodSendWrapper}\n                                          setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        />\n                                      </Suspense>\n                                  }\n                                >\n                                </Route>\n                            }\n                            <Route>\n                              <Header\n                                modals={modals}\n                                network={network}\n                                context={context}\n                                account={account}\n                                initWeb3={initWeb3}\n                                isMobile={isMobile}\n                                contracts={contracts}\n                                initAccount={initAccount}\n                                initContract={initContract}\n                                buyToken={this.state.buyToken}\n                                accountBalance={accountBalance}\n                                logout={this.logout.bind(this)}\n                                validateAccount={validateAccount}\n                                connecting={this.state.connecting}\n                                accountValidated={accountValidated}\n                                getTokenDecimals={getTokenDecimals}\n                                rejectValidation={rejectValidation}\n                                tokenConfig={this.state.tokenConfig}\n                                getAccountBalance={getAccountBalance}\n                                accountBalanceLow={accountBalanceLow}\n                                selectedToken={this.state.selectedToken}\n                                connectorName={this.state.connectorName}\n                                userRejectedConnect={userRejectedConnect}\n                                accountBalanceToken={accountBalanceToken}\n                                walletProvider={this.state.walletProvider}\n                                buyModalOpened={this.state.buyModalOpened}\n                                contractsInitialized={contractsInitialized}\n                                openBuyModal={this.openBuyModal.bind(this)}\n                                rejectAccountConnect={rejectAccountConnect}\n                                handleMenuClick={this.selectTab.bind(this)}\n                                setConnector={this.setConnector.bind(this)}\n                                availableTokens={this.state.availableTokens}\n                                closeBuyModal={this.closeBuyModal.bind(this)}\n                                userRejectedValidation={userRejectedValidation}\n                                accountValidationPending={accountValidationPending}\n                                connectAndValidateAccount={connectAndValidateAccount}\n                                setToken={ e => { this.setToken(e) } }\n                              />\n\n                              {this.state.route === \"onboarding\" ? (\n                                <Web3Debugger\n                                  web3={web3}\n                                  account={account}\n                                  accountBalance={accountBalance}\n                                  accountBalanceToken={accountBalanceToken}\n                                  accountBalanceLow={accountBalanceLow}\n                                  initAccount={initAccount}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountValidated={accountValidated}\n                                  accountValidationPending={accountValidationPending}\n                                  rejectValidation={rejectValidation}\n                                  userRejectedValidation={userRejectedValidation}\n                                  validateAccount={validateAccount}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  modals={modals}\n                                  network={network}\n                                  transaction={transaction}\n                                />\n                              ) : null}\n\n                              {this.state.route === \"default\" ? (\n                                <Switch>\n                                  <Route exact path=\"/\"\n                                    render={ (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Landing\n                                          {...props}\n                                          web3={web3}\n                                          network={network}\n                                          account={account}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          contracts={contracts}\n                                          initContract={initContract}\n                                          innerWidth={this.state.width}\n                                          logout={this.logout.bind(this)}\n                                          innerHeight={this.state.height}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          cachedData={this.state.cachedData}\n                                          connecting={this.state.connecting}\n                                          selectedTab={this.state.selectedTab}\n                                          tokenConfig={this.state.tokenConfig}\n                                          accountBalanceLow={accountBalanceLow}\n                                          getAccountBalance={getAccountBalance}\n                                          customAddress={this.state.customAddress}\n                                          selectedToken={this.state.selectedToken}\n                                          accountBalanceToken={accountBalanceToken}\n                                          closeToastMessage={this.closeToastMessage}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          processCustomParam={this.processCustomParam}\n                                          availableTokens={this.state.availableTokens}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          updateSelectedTab={this.selectTab.bind(this)}\n                                          toastMessageProps={this.state.toastMessageProps}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          setToken={ e => { this.setToken(e) } }\n                                        />\n                                        <CookieConsent\n                                          expires={365}\n                                          buttonText={\"Ok\"}\n                                          location={\"bottom\"}\n                                          acceptOnScroll={true}\n                                          cookieName={\"cookieAccepted\"}\n                                          acceptOnScrollPercentage={5}\n                                          style={{background: \"rgba(255,255,255,0.95)\",zIndex:'9999999'}}\n                                          buttonStyle={{display: isMobile ? \"block\" : \"none\", backgroundColor:'#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\"}}\n                                        >\n                                          <Flex flexDirection={'row'} alignItems={['flex-start','center']} justifyContent={'flex-start'} maxHeight={['150px','initial']} style={ isMobile ? {overflowY:'scroll'} : null }>\n                                            <Image display={['none','block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                            <Text pl={[0,3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                              This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                              You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                            </Text>\n                                          </Flex>\n                                        </CookieConsent>\n                                      </Suspense>\n                                    }\n                                  ></Route>\n                                  <Route exact path=\"/terms-of-service\">\n                                    <Tos />\n                                  </Route>\n                                  <Route>\n                                    <PageNotFound />\n                                  </Route>\n                                </Switch>\n                              ) : null}\n                            </Route>\n                          </Switch>\n                          <TransactionToastUtil\n                            transactions={transactions}\n                            themeMode={this.state.themeMode}\n                          />\n                        </Box>\n                      )}}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            <FieldComponent\n                              {...this.props}\n                              fieldInfo={fieldInfo}\n                              colProps={colInfo.props}\n                              parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            />\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens[token];\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                return (\n                  <ImageButton\n                    caption={token}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    imageSrc={`images/tokens/${token}.svg`}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  maxWidth={ this.props.showInline ? '35em' : 'initial' }\n                  width={ (this.props.showInline && !this.props.isMobile) ? 0.72 : 1 }\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={`images/tokens/${token}.svg`} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.notion.so/idlelabs/Idle-Finance-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              // if (isRisk){\n              //   debugger;\n              // }\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfig = this.props.tokenConfig || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : this.functionsUtil.BNify(this.state.score).lte(0) ? '-' : loader\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            const customFieldName = Object.values(fieldInfo.path).pop();\n            if (this.props.tokenConfig[`${customFieldName}Props`]){\n              const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n              // Replace props\n              if (customFieldProps && Object.keys(customFieldProps).length){\n                Object.keys(customFieldProps).forEach(p => {\n                  fieldProps[p] = customFieldProps[p];\n                });\n              }\n            }\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n"],"sourceRoot":""}