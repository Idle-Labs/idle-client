{"version":3,"sources":["AssetField/AssetField.js","FlexLoader/FlexLoader.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","PageNotFound/PageNotFound.module.scss","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","ConnectBox/ConnectBox.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","RoundButton/RoundButton.js","SmartNumber/SmartNumber.js","ImageButton/ImageButton.js","CustomTooltip/CustomTooltip.js","AllocationChart/AllocationChart.js","CustomTooltip/CustomTooltipRow.js","ExtLink/ExtLink.js","PortfolioEquity/PortfolioEquity.js","ChartCustomTooltip/ChartCustomTooltip.js","ExecuteTransaction/ExecuteTransaction.js","TxProgressBar/TxProgressBar.js","theme.js","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","utilities/components/ModalCard.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","utilities/components/Header.module.scss","AssetSelector/AssetSelector.js","GenericSelector/GenericSelector.js","Tos/Tos.module.scss","TransactionField/TransactionField.js","Title/Title.js","GenericChart/GenericChart.js","DashboardCard/DashboardCard.module.scss","FastBalanceSelector/FastBalanceSelector.js","CardIconButton/CardIconButton.js","SendTxWithBalance/SendTxWithBalance.js","Staking/Staking.js","TokenSwap/TokenSwap.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","CustomField/CustomField.js","CustomList/CustomList.js","PortfolioDonut/PortfolioDonut.js","TotalEarningsCounter/TotalEarningsCounter.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","TotalBalanceCounter/TotalBalanceCounter.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","configs/globalConfigs.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.js","TableRow/TableRow.js","TableHeader/TableHeader.js","Migrate/Migrate.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","colors.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","utilities/components/BuyModal.js","utilities/components/ModalCard.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js","IconBox/IconBox.js"],"names":["AssetField","state","ready","functionsUtil","componentUnmounted","loadField","_callee","fieldName","isRisk","setState","fieldInfo","fieldProps","decimals","addGovTokens","output","govTokens","getGovTokensDistributionSpeed","tokenPrice","_ref2","oldContractBalanceFormatted","_ref3","redeemableBalanceCurveEnd","redeemableBalanceCurveStart","_ref4","redeemableBalanceEnd","redeemableBalanceStart","_ref5","_ref6","earningsCounter","feePercentage","feesStart","feesEnd","_ref7","_ref8","curveApy","earningsCurveStart","amountLentCurve","earningsCurveEnd","_ref9","_ref10","tokenAPY2","earningsStart","amountLent2","earningsEnd","tokenScore","tokenAPR","oldTokenConfig","tokenAPY","govTokensAprs","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","cachedDataKey","cachedData","startTimestamp","y","i","mDate","x","frequencySeconds","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","path","_args","arguments","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","length","undefined","_this","props","token","tokenConfig","abrupt","selectedStrategy","name","isMobile","t0","loadAssetField","account","sent","setStateSafe","tokenBalance","toString","getTokenGovTokens","showPrice","fee","checkMigration","amountToMigrate","amountLent","idleTokenBalance","earnings","Promise","all","getTokenFees","Object","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","times","getCurveAPY","gt","div","plus","redeemableBalance","getTokenScore","score","poolSize","earningsPercCurveDirection","parseFloat","earningsPercCurve","toFixed","earningsPerc","earningsPercDirection","showAPR","migration","oldContract","assign","idle","protocols","values","oldProtocols","forEach","oldProtocol","foundProtocol","find","p","protocolPos","indexOf","isNaN","oldAPY","tokenAPYNoGov","curveAvgSlippage","showTooltip","getGovTokensAprs","t1","allocationChartRowElement","document","getElementById","parentId","rowId","$allocationChartRowElement","window","jQuery","innerWidth","css","innerHeight","parseInt","Math","min","removeEventListener","bind","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","addEventListener","getGlobalConfig","max","strToMoment","Date","format","subtract","_d","getTime","concat","address","getCachedData","id","color","join","data","add","random","push","getFrequencySeconds","getTokenApiData","d","timestamp","fixTokenDecimals","idleRate","setCachedData","aprChartRowElement","$aprChartRowElement","Line","pointSize","lineWidth","useMesh","axisLeft","animate","axisBottom","enableArea","areaOpacity","curve","enableGridX","enableGridY","pointBorderWidth","isInteractive","colors","defs","linearGradientDef","offset","enableSlices","yFormat","value","fill","match","margin","top","right","bottom","left","sliceTooltip","slideData","slice","point","points","react__WEBPACK_IMPORTED_MODULE_12___default","createElement","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","map","protocolName","serieId","protocolEarning","yFormatted","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","key","label","chartProps","keys","PerformanceChartRowElement","$PerformanceChartRowElement","clone","idlePrice","minus","blocknumber","pointLabelYOffset","getArrayPath","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","stop","this","setProps","FunctionsUtil","loadUtils","newState","callback","prevProps","prevState","tokenChanged","accountChanged","mobileChanged","themeModeChanged","themeMode","fieldChanged","contractInitialized","contractsInitialized","transactionsChanged","transactions","filter","tx","status","_this2","oldState","_this3","loader","showLoader","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","size","fontWeight","fontSize","flexProps","justifyContent","funcProps","maxPrecision","minPrecision","icon1","icon","placement","message","tooltipProps","src","icon2","strategyIcon","strategy","strategyName","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","number","react_countup__WEBPACK_IMPORTED_MODULE_11___default","delay","decimal","separator","useEasing","duration","end","start","formattingFn","n","abbreviateNumber","_ref11","countUpRef","style","ref","_ref12","_ref13","_ref14","_ref15","width","alignItems","flexDirection","govTokenConfig","govTokenIndex","distributionFrequency","borderRadius","position","height","ml","zIndex","boxShadow","BNify","lte","showDirection","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","direction","earningsCurve","governanceTokenName","idleTokenConfig","idleDistribution","userDistributionSpeed","distributionSpeed","iconProps","govToken","tooltipMode","buttonLabel","onClick","handleClick","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","type","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__","loaderProps","loaderText","selectedToken","inline","CustomComponent","customValue","SmartNumber","Icon","customFieldName","pop","customFieldProps","Text","formattedValue","_isBigNumber","Component","FlexLoader","react__WEBPACK_IMPORTED_MODULE_5___default","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","text","textProps","ChartCustomTooltipRow","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","mb","pr","flexBasis","flex","mr","backgroundColor","textAlign","textTransform","whiteSpace","dangerouslySetInnerHTML","__html","module","exports","headerContainer","headerBgFiller","bgContainer","list","textContainer","ShortHash","loadData","resolveAddress","shortenHash","hash","getENSName","ensName","display","LoadingSpinner","react_default","index_es","className","styles","mx","ButtonLoader","buttonProps","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","ConnectBox","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_11__","cardProps","mt","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_9__","connectAndValidateAccount","TransactionListFilters","maxWidth","minWidth","maxHeight","isOpened","activeFilters","assets","actions","setFilter","objectSpread","defineProperty","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","DashboardCard","py","px","transition","cursor","overflow","borderTop","theme","divider","filters","filterCategory","filterValues","TableCellHeader","pb","toUpperCase","filterValue","filterLabel","isChecked","my","checked","radioBtn","onChange","e","mainColor","v","filterName","hoverColor","TransactionsList","page","prevTxs","txsPerPage","loading","totalTxs","totalPages","deposit","redeem","send","receive","migrate","swap","swapout","withdraw","completed","pending","failed","renderedTxs","processedTxs","lastBlockNumber","processTxs","availableActions","action","toLowerCase","txsIndexes","includes","sort","b","timeStamp","ceil","availableTokens","date","getTxAction","parsedValue","tokenAmount","amount","momentDate","preventDefault","loadTxs","JSON","stringify","enabledTokens","count","firstBlockNumber","enabledActions","getEtherscanTxs","etherscanTxs","hashKey","lastTx","blockNumber","_this4","hasActiveFilters","m","minHeight","pt","src_TransactionListFilters_TransactionListFilters","TableHeader","cols","index","txHash","txHashKey","TableRow","rowProps","transaction","open","getEtherscanTransactionUrl","cardId","fieldComponent","TransactionField","prevPage","nextPage","h3","fontFamily","RoundButton","react__WEBPACK_IMPORTED_MODULE_6___default","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","children","formattedNumber","formatMoney","precision","showUnit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unit","unitProps","ImageButton","image","imageSrc","imageProps","iconName","caption","isActive","contrastColor","buttonStyle","Fragment","badge","bgColor","captionPos","subcaption","split","lineHeight","CustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","itemPos","xFormatted","AllocationChart","chartData","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","getTokenAllocation","padAngle","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","onMouseEnter","onMouseLeave","tooltipFormat","sliceLabel","radialLabel","tooltip","container","background","cardBg","labels","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","protocolInfo","protocolAddr","protocolAllocationPercParsed","globalConfigs","stats","hsl","capitalize","protocolIcon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","CustomTooltipRow","ExtLink","target","rel","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","componentDidMount","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","mark","_callee3","filteredTxs","_context3","lt","balance","idleTokens","_x3","apply","currentDate","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","tokensData","_callee4","_context4","_x4","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","filteredTokenData","tokenDecimals","filteredBalances","lastFilteredTx","newBalance","lastTxBalance","tokenUsdConversionRate","conversionRateField","chartToken","conversionRate","isSameOrAfter","isSameOrBefore","formattedDate","_loop","aggregatedBalances","balances","itemIndex","item","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","daysCount","daysFrequency","xScale","yScale","stacked","xFormat","legend","tickSize","tickPadding","orient","legendOffset","legendPosition","tickValues","tickRotation","pointLabel","areaBaselineValue","pointColor","axis","ticks","grid","line","stroke","lineChartStroke","strokeDasharray","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","parentIdHeight","ChartCustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","ExecuteTransaction","txStatus","processing","contractMethodSendWrapper","contractName","methodName","params","error","eventData","eventCategory","eventLabel","eventAction","getTransactionError","sendGoogleAnalyticsEvent","transactionHash","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","ExecuteComponent","react__WEBPACK_IMPORTED_MODULE_9___default","parentProps","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_11__","web3","network","progressBarProps","cancelTransaction","endMessage","waitText","execute","componentProps","TxProgressBar","ended","percentage","txTimestamp","initialized","estimatedTime","remainingTime","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","initProgressBar","getTransaction","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","customLog","eth","err","_x","_x2","getBlockTime","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txProgressBarData","_context7","localStorage","getItem","parse","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","span","renderRemainingTime","loadingMessage","sendingMessage","href","cancelTextColor","cancelTextHoverColor","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","fontSizes","fontWeights","letterSpacings","lineHeights","solid","title","copy","serif","counter","space","radii","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","disabled","primary","blue","base","gradient-bg","primary-light","light","primary-dark","dark","bgBlue","dark-blue","skyBlue","lightBlue","copyColor","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","link","menuBg","menuHover","flashColor","menuRightBorder","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","boost","curvein","default","curveout","curvedepositin","curvedepositout","actionBg","blacks","whites","zIndices","messageStyle","shade","tint","success","green","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","bg","button","gradientButton","empty","select","selectDark","input","AssetSelector","options","defaultValue","CustomOptionValue","CustomValueContainer","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","showCustomField","showBalance","selectProps","innerProps","loadComponents","selectedTokenChanged","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","isSearchable","changeToken","GenericSelector","optionsChanged","defaultValueChanged","componentsChanged","ControlComponent","menuIsOpen","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","CustomIndicatorSeparator","CustomMenu","CustomInputContainer","searchInput","searchInputHidden","CustomOption","selectedValue","o","genericSelector","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","hashChanged","textOverflow","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","align","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_12__","border","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","tokenSymbol","iconSrc","Title","HeadingComponent","component","Heading","h1","GenericChart","handleWindowSizeChange","chartContainer","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","defaultOpacity","hidden","interactive","rainbow","FastBalanceSelector","onMouseDown","replaceArrayProps","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","CardIconButton","useIconOnly","iconColor","iconBgColor","SendTxWithBalance","inputValue","txSucceeded","permitEnabled","showPermitBox","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","approve","callbackApprove","callbackReceiptApprove","regenerator_default","checkContractApproved","enableERC20","contractInfo","executeTx","_amount","callbackReceipt","signedParameters","_params","methodParams","normalizeTokenAmount","eventValue","signPermit","console","log","getPermitTransactionParams","getTransactionParams","approveCallback","actionChanged","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","approveEnabled","contractChanged","tokenConfigChanged","initContract","abi","checkTokenApproved","viewOnly","connectorName","IconBox","infoBox","steps","step","stepIndex","description","required","togglePermitEnabled","balanceSelectorInfo","placeholder","approveDescription","Staking","globalStats","balanceProp","statsLoaded","stakedBalance","rewardMultiplier","accountingData","selectedAction","selectedOption","successMessage","poolTokenPrice","rewardTokenPrice","tokenWrapperProps","transactionSucceeded","toggleShowTokenWrapper","showTokenWrapperEnabled","toolProps","contract","updateData","selectedActionChanged","contractApprovedChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","apy","rewardToken","normalizedInputValue","genericContractCall","unstakeRewards","toBN","expiry","r","s","stakedTokensLog","txReceipt","logs","topics","t","replace","stakedTokens","unstakedTokensLog","unstakedTokens","rewardTokenConfig","receivedRewardsLog","receivedRewards","DAITokenConfig","getSushiswapPoolTokenPrice","getSushiswapConversionRate","getTokenBalance","startContract","wrapMethod","destContract","unwrapMethod","loadStats","reduce","_this5","enabled","integerValue","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","now","programDuration","utc","_this6","initialLockedShares","durationSec","tokensPerSecond","stakingShare","maxMultiplier","distributionSpeedMultiplier","maxBonusDays","currentRewards","_this7","StatsCard","titleProps","titleParentProps","isStake","isUnstake","isStats","txAction","selectToken","poolLink","statInfo","setAction","src_SendTxWithBalance_SendTxWithBalance","flexWrap","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","baseToken","selectDestToken","getGlobalConfigs","paymentProvider","providerInfo","initProps","buttonId","initParams","getInitParams","render","remoteResources","url","j","scriptID","script","remoteResourceParams","precall","readyState","onreadystatechange","onload","async","parentElement","appendChild","head","stylesheetId","loadTokens","asyncToGenerator","getContractByName","fromTokenChanged","destTokenChanged","loadKyberWidget","NexusMutual","1","2","3","amountValue","periodValue","quoteResponse","changeAmount","changePeriod","makeRequest","textDecoration","activeColor","changeSelectedToken","getQuote","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","getETHBalance","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","CustomField","componentHasChildren","fieldType","fieldPath","row","Image","Button","CustomList","rows","rowIndex","PortfolioDonut","totalFunds","parentWidth","selectedTokenConfig","loadPortfolio","portfolio","getIdleTokenPrice","convertTokenBalance","getGovTokensUserBalances","govTokensUserBalances","govTokenBalance","tokenPercentage","tokenColorHsl","round","radialLabelsLinkOffset","itemWidth","itemHeight","translateY","symbolSize","anchor","itemTextColor","symbolShape","effects","on","convertToken","TotalEarningsCounter","loadTotalEarnings","availableStrategies","counterStyle","getAccountPortfolio","totalEarnings","totalAmountLent","avgAPY","build_default","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","90","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earningsYear","amountDeposited","avgBuyPrice","idleTokenPrice","tokenAprs","earningsPercStep","possibleSteps","maxPossibleStep","getAmountDeposited","getAvgBuyPrice","slicedToArray","getTokenAprs","avgApr","avgApy","maxCountStep","orderedTokensEarnings","estimationStep","option","setEstimationStepsPerc","tokenIndex","tokenEarnings","estimationStepPerc","finalEarnings","cursorPerc","tokenIcon","tokenRGBColor","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","gte","pl","src_TotalEarningsCounter_TotalEarningsCounter","estimationLabel","DashboardIconButton","TotalBalanceCounter","counterEnd","counterStart","StrategyPage","tokensToMigrate","aggregatedValues","activeCoverages","depositedTokens","remainingTokens","batchedDeposits","portfolioLoaded","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","portfolioEquityQuickSelection","availableTokensChanged","getActiveCoverages","getBatchedDeposits","getTokensToMigrate","c","statusColors","statusIcon","statusColor","portfolioCoverage","totalBalance","statusIconProps","batchInfo","deposited","batchDeposits","redeemable","batchRedeems","avgScore","totalBalanceWithScore","amountLentToken","tokenWeight","getGovTokensUserTotalBalance","govTokensTotalBalance","govTokensUserBalance","govTokensTotalBalanceTooltip","apyLong","riskScore","yieldFarming","batchDepositConfig","coverProtocolConfig","src_TotalBalanceCounter_TotalBalanceCounter","totalEarningsPerc","src_PortfolioDonut_PortfolioDonut","aligItems","setPortfolioEquityQuickSelection","AssetsList","fields","mobile","goToSection","route","borderBottom","h4","desc","toolName","toolIndex","toolConfig","src_DashboardIconButton_DashboardIconButton","src_CustomList_CustomList","fileClaimUrl","openWindow","src_EarningsEstimation_EarningsEstimation","textSize","BatchDeposit","canClaim","batchTotals","canDeposit","claim","usePermit","lastExecution","hasDeposited","permitSigned","currBatchIndex","batchCompleted","claimSucceeded","componentLoaded","executeSucceeded","migrationEnabled","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","urlParams","param2","executeSucceededChanged","callbackExecute","callbackReceiptExecute","migrationContract","migrationContractInfo","getBatchedDepositExecutions","batchExecutions","functions","functionInfo","nonceMethod","permitContract","methods","batchIndex","batchTotal","batchRedeem","batchDeposit","batchDepositInfo","depositEnabled","availableStrategiesKeys","strategyConfig","selectStrategy","obj","baseTokenConfig","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","_this8","canExecuteBatch","strategyDefaultValue","openTooltipModal","isDisabled","Migrate","showActions","getTokenPrice","isMigrationTool","showBalanceSelector","migrationIcon","migrationParams","toMigrate","callbackPermit","migrationText","minPoolSize","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","collateral","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","pow","expirationTimestamp","balancerTokenConfig","tokens","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","isClaim","apyPrice","currTime","coverages","expirationDate","selectCoverage","coverage","isMint","isBuyClaim","isBuyNoClaim","BuyModal","showInline","availableMethods","buyToken","TokenMigration","changeFromToken","convertTool","tokenInfo","destTokenConfig","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","inputs","loadContracts","validateForm","checkInputs","vesterImplementation","contracts","fromBlock","getContractPastEvents","toBlock","proxyCreated","deployedContractsAddresses","returnValues","implementation","proxy","contractAddress","owner","recipient","vestingPeriod","availableBalance","depositAmounts","totalDeposited","total","claimedTokensLog","returnString","fieldPattern","RegExp","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","events","ProxyCreated","ownerAddress","recipientAddress","initData","encodeParameters","onSubmit","handleSubmit","setEditAction","pattern","inputChange","getEtherscanAddressUrl","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","claimCallback","env","process","appName","version","baseURL","forumURL","darkModeEnabled","betaURL","countries","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","errorsEnabled","messagesEnabled","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","custom","newsletterSubscription","endpoint","messages","scoreShort","apyShort","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","curveInstructions","analytics","google","debugEnabled","addPostfixForTestnet","pageView","modals","first_deposit_referral","first_deposit_share","welcome","frequency","dashboard","baseRoute","mode","governance","test","startBlock","tokenName","availableContracts","IDLE","FeeTreasury","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","proposals","7","delegates","n_coins","imageInactive","rates","poolContract","CurvePool","depositContract","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","coinIndex","idleUSDCYield","idleUSDTYield","permit","DAI","EIPVersion","USDC","SLP","showAUM","protocol","aprTooltipMode","distributionMode","disabledTokens","COMP","stkAAVE","aToken","addressForPrice","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","SushiswapRouter","SushiV2Router02","UniswapRouter","UniswapV2Router02","BalancerExchangeProxy","zeroExInstant","orderSource","assetData","affiliateInfo","feeRecipient","strategies","best","comingSoon","titlePostfix","govTokensEnabled","chartColor","iconInactive","iconInactiveDark","descLong","descShort","risk","new","TTL","tvls","substack","scores","config","headers","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","endTimestamp","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","rgb","hex","chart","labelTextColorModifiers","performanceTooltip","USD","USDT","TUSD","SUSD","WBTC","WETH","RAI","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","permitType","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","availableNetworks","4","42","1337","isForked","requiredNetwork","blocksPerYear","secondsPerYear","requiredConfirmations","enabledNetworks","accountBalanceMinimum","providers","infura","ens","supportedNetworks","etherscan","endpoints","baseUrl","snapshot","whitelist","urls","biconomy","enableLogin","disabledWallets","limits","debug","apiKey","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","apiId","terminal","REACT_APP_TERMINAL_KEY","projectId","REACT_APP_TERMINAL_PROJECT_ID","source","web3Version","Web3Versions","one","simpleID","getNetwork","networkId","networkName","appOrigin","location","origin","appId","renderNotifications","notifications","tools","stake","subComponent","LpStaking","SushiLiquidityPool","b2bVesting","visible","B2BVester","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","permitName","batchMigration","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","oldAddresses","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","directProps","showAllTokens","insurance","ETH","tokenSwap","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","payments","bank","defaultProvider","showDefaultOnly","card","wallet","wyre","supportedMethods","supportedCountries","supportedTokens","envParams","accountId","prod","getInfo","selectedMethod","buyParams","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","innerHTML","body","wyreStyle","ramp","hostAppName","userAddress","hostApiKey","REACT_APP_RAMP_KEY","variant","hostLogoUrl","swapAsset","RampInstantSDK","event","getAccountBalance","getTokenDecimals","payload","purchase","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","selectedCountry","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","onSuccess","onClose","tokenParams","RimbleWeb3_context","chainId","provider","connector","ethereum","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","internalType","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","IdleGovToken","classCallCheck","getBalance","claimRewards","getPriorVotes","priorVotes","_args3","refreshIdleSpeed","getUnclaimedTokens","getAPR","IDLETokenConfig","APR","tokenAllocation","tokenPool","idleDistributedPerYearUSD","_args6","getDistribution","getUniswapConversionRate","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","totalSpeed","_args10","_context10","_callee9","idleSpeed","userPoolShare","tokenSpeed","_context9","getUserPoolShare","_x7","fixDistributionSpeed","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","idleGovToken","trimEth","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","childNodes","nodeValue","BNify_obj","BigNumber","String","_len","Array","_key","moment","customLogError","_console","_len2","_key2","normalizeSimpleIDNotification","str","arr1","arr2","stripHtml","html","tmp","textContent","innerText","scrollTo","to","scrollY","change","currentTime","easeInOutQuad","animateScroll","val","getQueryStringParameterByName","results","exec","decodeURIComponent","depositProxyContractInfo","migrationContractAddr","migrationContractOldAddrs","batchMigrationContractAddr","isMigrationTx","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","shortHash","txStart","txEnd","ensConfig","addressCheck","current","checkAddress","currentProvider","ENS","ensAddress","getEnsAddress","getName","getAddress","orderedTokensBalance","_args4","totalBalanceConverted","tokenBalanceConverted","getCurveAvgSlippage","processedHashes","curveTokensBalance","curveTxs","avgSlippage","_args5","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","getCurveAvgBuyPrice","prevAvgBuyPrice","_args7","idleTokensBalance","getFirstDepositTx","deposits","_args8","firstDepositTx","asyncTimeout","ms","getDepositTimestamp","firstDepositTxs","_args9","acc","userAvgPrice","getAmountLent","amountLents","_args11","getEtherscanBaseTxs","endBlockNumber","firstIdleBlockNumber","etherscanInfo","etherscanBaseTxs","etherscanBaseEndpoint","etherscanApiUrl","lastCachedTx","lastCachedBlockNumber","etherscanEndpointLastBlock","latestTxs","latestBlockNumbers","txs","requestCount","requestStatus","cachedRequests","REACT_APP_ETHERSCAN_KEY","getCachedRequest","result","makeCachedRequest","filterEtherscanTxs","toConsumableArray","saveEtherscanTxs","_callee13","_args13","_context13","filterCurveTxs","txsToStore","cachedRequest","saveCachedRequest","_callee14","_ref19","allAvailableTokens","_args14","_context14","processStoredTxs","_ref20","_callee15","_args15","_context15","_ref21","_callee16","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args16","_context16","tokenMigrationToolParams","curveTokenConfig","idleToken","internalTxs","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenDecimal","tokenValue","newValue","iTxs","withdrawnValue","processEtherscanTransactions","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref22","_callee21","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args21","_context21","baseTokenAddress","_ref23","_callee20","minedTxs","_context20","_ref24","_callee19","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context19","getCurveTokenPrice","_ref25","_callee17","_context17","getTransactionReceipt","_x12","_x13","baseTokensConfig","t2","_ref26","_callee18","_context18","_x14","_x15","_x10","_x11","_x9","_ref27","_callee27","txsToProcess","_args27","_context27","_ref28","_callee26","_context26","_ref29","_callee25","isStoredTx","allowedMethods","pendingStatus","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context25","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","method","created","_ref30","_callee22","_context22","_x20","_x21","_ref31","_callee23","_context23","_x22","_x23","raw","_ref32","_callee24","_context24","_x24","_x25","decodeLog","_token","_x18","_x19","_x17","_x16","alias","getCustomAddress","setCustomAddress","customAddress","_ref33","_callee28","error_callback","_args28","_context28","catch","_x26","_ref34","_callee29","return_data","_args29","_context29","_x27","code","errorCode","array","prop","shift","configs","checkUrlOrigin","checkUrlBeta","sendGoogleAnalyticsPageview","_callee30","googlePageviewInfo","isOrigin","_args30","_context30","ga","_ref36","_callee32","googleEventsInfo","originOk","currentNetwork","_args32","_context32","_ref37","_callee31","_context31","hitCallback","hitCallbackFail","_x29","_x30","_x28","createContract","_ref38","_callee33","_context33","Contract","_x31","_x32","_x33","getWalletProvider","simpleIDPassUserInfo","userInfo","email","initSimpleID","passUserInfo","baseurl","decimalCount","thousands","abs","negativeSign","Number","getSnapshotProposals","_callee36","activeOnly","validProposals","_args36","_context36","addr","msg","_ref40","_callee35","checkedStrategies","_context35","metadata","_ref41","_callee34","_context34","symbol","_x35","_x34","_ref42","_callee37","forceStartTimestamp","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args37","_context37","_x36","_ref43","_callee38","_context38","_x37","aprs","allocations","aprWeighted","allocation","apr","quantity","hour","day","week","getProtocolInfoByAddress","ROUND_FLOOR","normalizeTokenDecimals","normalizedTokenDecimals","exchangeRate","checkContractPaused","_callee39","contractPaused","_args39","_context39","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref45","_callee41","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context41","lastAllocationsPromise","_ref46","_callee40","lastAllocations","_context40","_x39","_x40","alloc","_x38","_ref47","_callee42","oldContractBalance","oldContractTokenDecimals","oldContractName","_context42","getContractBalance","_x41","_x42","getContractEvents","_ref48","_callee43","eventName","_args43","_context43","_x43","_x44","estimateMethodGasUsage","_ref49","_callee44","_contract$methods","functionCall","gasLimit","_ref50","_ref51","_args44","_context44","getGasPrice","estimateGas","_x45","_x46","_ref52","_callee45","callback_receipt","_contract$methods2","_context45","once","confirmationNumber","receipt","_x47","_x48","_x49","_x50","_x51","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref53","_callee46","biconomyInfo","res","_context46","x-api-key","_x52","sendTxWithPermit","_ref54","_callee47","_contract$methods3","messageToSign","_this$getSignaturePar","_context47","encodeABI","_address","personal","sign","_x53","_x54","_x55","_x56","_x57","_x58","buildBiconomyErc20ForwarderTx","_ref55","_callee48","tokenAddress","callData","_context48","erc20ForwarderClient","buildTx","txGas","_x59","_x60","_x61","_x62","_x63","sendBiconomyTxWithErc20Forwarder","_ref56","_callee49","req","metaInfo","txResponse","fetchReceiptIntervalId","_context49","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x64","_x65","_x66","_x67","sendBiconomyTxWithPersonalSign","_ref57","_callee50","_this$getSignaturePar2","_context50","getNonce","call","_x68","_x69","_x70","_x71","signPermitEIP2612","_ref58","_callee51","erc20Name","spender","deadline","domain","domainData","_context51","getChainId","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x72","_x73","_x74","_x75","_x76","_x77","_x78","_x79","_ref59","_callee52","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","_args52","_context52","net","getId","allowed","response","_x80","_x81","_x82","_ref60","_callee53","permitParams","methodAbi","useNonce","_args53","_context53","_jsonInterface","f","unshift","_x83","_x84","_x85","_x86","_x87","_x88","_x89","sendSignedTx","_ref61","_callee54","MetaTransaction","dataToSign","_context54","_x90","_x91","_x92","_x93","_x94","_ref62","_callee55","contractAddr","walletAddr","_ref63","_ref64","allowance","_context55","getAllowance","_x95","_x96","_x97","_ref65","_callee56","_context56","_x98","_x99","_x100","txData","disableERC20","toTwosComplement","_ref66","_callee57","field","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref67","_ref68","curveAvgBuyPrice","curveTokenBalance","_ref69","_ref70","amountLentCurve1","redeemableBalanceCurve","_ref71","_ref72","earningPerYear","_ref73","_ref74","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref75","_ref76","tokenPriceFirstDeposit","_ref77","_ref78","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref79","_ref80","tokenAPY1","_earningPerYear","_govTokenConfig2","_ref81","_ref82","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","_ref83","_ref84","amountLentCurve2","redeemableBalanceCurve1","_ref85","_ref86","redeemableBalance2","_args57","_context57","getCurveTokenBalance","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getUserTokenFees","t8","t9","getGovTokenUserBalance","_x101","_x102","_x103","_x104","getIdleTokenSupply","_ref87","_callee58","idleTokenSupply","_args58","_context58","_x105","getIdleTokenPriceWithFee","_ref88","_callee59","_ref89","_ref90","priceWFee","_args59","_context59","eq","_x106","_x107","_ref91","_callee60","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args60","_context60","_x108","clearCachedData","useLocalStorage","_ref92","_callee61","_ref93","_ref94","idleTokensTotalSupply","userShare","_context61","_x109","_x110","_callee63","_args63","_context63","_ref96","_callee62","coverageTokens","protocolImage","_context62","_x111","_ref97","_callee64","etherscanEndpoint","_context64","_x112","_callee66","filter_by_status","_args66","_context66","_ref99","_callee65","_ref100","_ref101","_context65","_x113","_ref102","_callee67","fixDecimals","_args67","_context67","_x114","_ref103","_callee68","_ref104","_ref105","_args68","_context68","_x115","_x116","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","attr","isValidJSON","getTokenTotalSupply","_ref106","_callee69","_args69","_context69","_x117","_ref107","_callee70","_args70","_context70","_x118","_x119","getProtocolBalance","_ref108","_callee71","_context71","_x120","_x121","getAprs","_ref109","_callee72","_context72","addresses","_x122","genericIdleCall","_ref110","_callee73","callParams","_args73","_context73","_x123","_ref111","_callee74","_contract$methods4","_args74","_context74","_x124","_x125","getTxDecodedLogs","_ref112","_callee76","logAddr","decodeLogs","internalTransfers","_context76","_ref113","_callee75","_context75","_x130","_x131","_x126","_x127","_x128","_x129","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee77","_context77","_ref115","_callee78","_args78","_context78","getPastEvents","_x132","_x133","_ref116","_callee79","_contract$methods5","_args79","_context79","_x134","_x135","_ref117","_callee80","_args80","_context80","_x136","_x137","apr2apy","getUnlentBalance","_ref118","_callee81","unlentBalance","_context81","_x138","_ref119","_callee82","_args82","_context82","_x139","_ref120","_callee84","protocolsAprs","exchangeRates","protocolsBalances","govTokensBalances","_args84","_context84","totalAllocationConverted","totalAllocationWithUnlentConverted","_ref121","_callee83","_ref122","_ref123","protocolBalance","protocolAllocation","_context83","_x141","_x142","protocolAllocationPerc","getGovTokensBalances","getTokenConversionRate","_x140","getUniswapConversionRate_path","_ref124","_callee85","unires","_context85","_x143","_ref125","_callee86","pairAddresses","_ref126","_ref127","token0_address","token1_address","poolReserves","totalSupply","token0_config","token1_config","_ref128","_ref129","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","_context86","_x144","_x145","_ref130","_callee87","tokenConfigFrom","tokenConfigDest","WETHAddr","_context87","_x146","_x147","_ref131","_callee88","_context88","_x148","_x149","getCurveDepositedTokens","_ref132","_callee89","idleTokensBalances","remainingCurveTokens","_args89","_context89","_x150","getCurveUnevenTokenAmounts","_ref133","_callee90","amounts","max_burn_amount","unevenAmounts","_context90","getCurveDepositContract","_x151","_x152","_callee91","curveRatesInfo","_context91","strategyTokens","getCurveAPYContract","_callee92","blocksForPrevTokenPrice","_ref136","_ref137","prevTokenPrice","blocksMultiplier","curveAPR","_context92","getCurveTokenSupply","_callee93","_context93","getCurvePoolContract","_callee94","_args94","_context94","_callee95","_args95","_context95","_ref141","_callee96","_ref142","_ref143","_context96","_x153","_callee97","depositContractInfo","_context97","getCurveZapContract","_callee98","zapContractInfo","_context98","_callee99","poolContractInfo","_context99","getCurveSwapContract","_callee100","_context100","getCurveIdleTokensAmounts","_callee102","max_slippage","curveTokenSupply","curveTokenShare","_args102","_context102","_ref149","_callee101","curveIdleTokens","_context101","_x154","getCurveTokensAmounts","_callee104","useCoinIndex","_args104","_context104","_ref151","_callee103","_ref152","_ref153","totalTokenSupply","_context103","_x155","getCurveAmounts","_ref154","_callee106","_args106","_context106","_ref155","_callee105","_context105","_x158","_x156","_x157","getCurveTokenAmount","_ref156","_callee107","_args107","_context107","_x159","getCurveSlippage","_ref157","_callee108","uneven_amounts","_ref158","_ref159","virtualPrice","Sv","_args108","_context108","_x160","_x161","_ref160","_callee109","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","aaveIncentivesController_address","IAaveIncentivesController_name","_ref161","_ref162","aTokenTotalSupply","aaveAllocationPerc","aaveSpeed","aavePoolShare","_args109","_context109","_x162","_callee111","_args111","_context111","_ref164","_callee110","_ref165","_ref166","_context110","_x163","getStkAaveApr","_ref167","_callee112","aaveConversionRate","stkAaveAPR","stkAaveValue","_args112","_context112","_x164","_x165","getCompAPR","_ref168","_callee113","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args113","_context113","_x166","_x167","getCompSpeed","_ref169","_callee114","cTokenAddress","compSpeed","_context114","_x168","_ref170","_callee115","cTokenInfo","compoundAllocationPerc","_ref171","_ref172","cTokenTotalSupply","compoundPoolShare","_args115","_context115","_x169","_callee117","_args117","_context117","_ref174","_callee116","_ref175","_ref176","_context116","_x170","_callee119","_args119","_context119","_ref178","_callee118","_ref179","_ref180","compApr","_context118","_x171","getTokensCsv","_callee122","csv","_context122","prototype","sum","pv","cv","avg","_ref182","_callee121","_context121","_ref183","_callee120","header","aprAvg","scoreAvg","lastRow","_context120","protocolsData","p1","p2","rate","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","_x173","_x172","_callee124","_args124","_context124","_ref185","_callee123","compTokenBalance","_context123","_x174","speed","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref186","_callee126","govTokensUserDistribution","_args126","_context126","_ref187","_callee125","_context125","_x176","_x175","_ref188","_callee128","govTokensDistribution","tokenGovTokens","_args128","_context128","_ref189","_callee127","govSpeed","_context127","_x178","_x177","_ref190","_callee130","_args130","_context130","_ref191","_callee129","_ref192","_ref193","_ref194","_ref195","cTokenConfig","_context129","_x181","_x179","_x180","_callee132","_args132","_context132","_ref197","_callee131","tokenConversionRate","fromTokenConfig","_context131","_x182","getGovTokenConfigByAddress","_callee133","checkShowBalance","govTokensEarnings","_args133","_context133","govTokenAmount","getGovTokensIndexes","_ref199","_callee135","govTokensAmounts","_context135","_ref200","_callee134","govTokenAddress","_context134","_x185","_x186","_x183","_x184","_callee138","govTokenConfigForced","_args138","_context138","_ref202","_callee137","_context137","_ref203","_callee136","_context136","_x188","_x189","_x187","_callee139","_args139","_context139","_callee140","_ref206","_ref207","gain","fees","_args140","_context140","_ref208","_callee141","_args141","_context141","_x190","getTotalTVL","_callee142","tokensTVL","_context142","getTokensTVL","totalTVL","tokenTVL","_callee146","_context146","_ref211","_callee145","_context145","_ref212","_callee144","oldTokenTVL","idleTokenName","_ref213","_ref214","_ref218","_ref219","oldTokenPrice","oldTotalSupply","_context144","_ref215","_callee143","_ref216","_ref217","govTokenConversionRate","govTokenBalanceConverted","_context143","_x193","_x192","_x191","getSubstackLatestFeed","_callee147","endpointInfo","idleSubstackFeed","latestFeed","_context147","items","getAggregatedStats","_callee148","totalAUM","_args148","_context148","getAggregatedStats_chain","_callee152","avgAPR","_args152","_context152","_ref223","_callee151","_context151","_ref224","_callee150","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context150","_ref225","_callee149","_ref226","_ref227","_context149","_x196","_x195","_x194","getTokenApy","_ref228","_callee153","_context153","_x197","_callee156","_args156","_context156","_ref230","_callee155","_context155","_ref231","_callee154","_ref232","_context154","_x199","_x198","getProtocolsTokensBalances","_callee158","tokenBalances","minTokenBalance","protocolsTokens","_args158","_context158","_ref234","_callee157","tokenContract","_context157","_x200","_ref235","_callee159","_args159","_context159","_x201","_x202","_x203","getAvgAPYStats","_ref236","_callee160","apiResults","_args160","_context160","_x204","_x205","_ref237","_callee161","_conversionRate","_args161","_context161","_x206","_x207","_ref238","_callee162","_ref239","_ref240","_context162","protocolScore","getTokenScoreApi","_x208","_x209","_ref241","_callee163","_context163","_x210","_x211","_ref242","_callee166","Aprs","protocolsApys","idleGovTokenShowAPR","idleAPR","_args166","_context166","_ref243","_callee165","addrIndex","protocolApr","protocolApy","govTokenAPR","_context165","_ref244","_callee164","_context164","_x215","_x213","_x214","_x212","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","mouseOver","isVisible","isRainbow","active","onMouseOut","setMouseOver","onMouseOver","FieldComponent","colInfo","colIndex","fieldIndex","colProps","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","tokenApproved","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","useMetaTx","_skipRebalance","_migrationContract$me","skipMintForDeposit","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","Tos","h2","listStyle","Footer","theme_dark","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","possibleConstructorReturn","getPrototypeOf","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","defaultNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","REACT_APP_INFURA_KEY","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","React","NetworkUtil","isCorrectNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","bold","isOpen","ModalCard","closeFunc","closeModal","Body","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","Header","subtitle","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","connectorInfo","walletIcon","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","componentDidUpdate","resetModal","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","INFURA_KEY","RimbleTransactionContext","createContext","web3Infura","permitClient","accountBalance","initWeb3","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","availableStrategiesChanged","setNetwork","metamaskProvider","connectorNameChanged","web3Host","web3Provider","forceCallback","terminalInfo","TerminalHttpProviderParams","terminalSourceType","terminalHttpProvider","web3Callback","originalWeb3","biconomyWeb3Provider","detectEthereumProvider","Web3","HttpProvider","library","SourceType","customHttpProvider","TerminalHttpProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","$crisp","notificationId","content","Sentry","increaseAmount","balanceOf","determineAccountLowBalance","openConnectionModal","getRequiredNetwork","getNetworkId","getNetworkName","getNetworkType","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args24","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","constant","outputs","payable","stateMutability","anonymous","indexed","ERC20","govTokensDisabled","defiPrime","IdleTokenV4","cToken","yToken","iToken","CHAI","enabledEnvs","crToken","fToken","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","then","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","cachedKeyFound","storedCachedData","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","warn","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCustomAddress","loadCurrentEnvironment","strategyChanged","networkChanged","hasMetamask","store","themeDark","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","RimbleWeb3","needsPreflight","react_router","react","fallback","isDashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","registration","unregister","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","footer","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","VariationNumber","IconDirection","iconSize","iconPos","loading-dots","loading-dots--dot","dot-keyframes","selectedProvider","availableProviders","renderPaymentMethod","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","goBack","componentWillMount","getProviderInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","providerSupportToken","defaultPaymentProvider","selectProvider","ethAvailable","tokenAvailable","selectMethod","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","countryCode","methodInfo","loadAvailableMethods","InnerComponent","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","noOptionsMessage","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","iconHeight","subtitleProps","BackButton","currYear","getFullYear","columnWidth","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle"],"mappings":"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","file":"static/js/main.a1fa197b.chunk.js","sourcesContent":["import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              // if (isRisk){\n              //   debugger;\n              // }\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfig = this.props.tokenConfig || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : this.functionsUtil.BNify(this.state.score).lte(0) ? '-' : loader\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            const customFieldName = Object.values(fieldInfo.path).pop();\n            if (this.props.tokenConfig[`${customFieldName}Props`]){\n              const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n              // Replace props\n              if (customFieldProps && Object.keys(customFieldProps).length){\n                Object.keys(customFieldProps).forEach(p => {\n                  fieldProps[p] = customFieldProps[p];\n                });\n              }\n            }\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    // console.log('ShortHash',resolveAddress,this.props.hash,ensName);\n    if (ensName){\n      text = ensName;\n    }\n    this.setState({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from 'react';\nimport {\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner.js';\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n       <Button\n        onClick={this.props.handleClick}\n         {...this.props.buttonProps}\n       >\n        <Flex flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n          <Flex width={1} display={ this.props.isLoading ? 'flex' : 'none' }>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={ this.props.isLoading ? 'none' : 'flex' }>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n       </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.status = tx.status ? tx.status : 'Completed';\n      tx.action = action;\n      tx.momentDate = momentDate;\n      tx.amount = amount;\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontSize:3,\n      fontWeight:3,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          this.props.unit && unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          this.props.unit && unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  execute(){\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        txStatus:tx.status,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,this.props.params,callback,callbackReceipt);\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      this.functionsUtil.customLog('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    let prediction = null;\n    if (this.state.predictTable){\n      this.state.predictTable.forEach((p,i) => {\n        if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n          prediction = p;\n          return true;\n        }\n      });\n    }\n\n    if (this.state.blockTime && prediction){\n      const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n      const blocksWait = pdValues[0];\n      const blockInterval = this.state.blockTime.block_time;\n      let txMeanSecs = blocksWait * blockInterval;\n      txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n      this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n      return txMeanSecs; // Customized\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in Etherscan\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #eee','1px solid #b6c2ff'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgba(0,54,255,0.3)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: blue.base,\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#3F3D4B',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    alert:'#ff9900',\n    arrowActive:'#4f4f4f',\n    arrowInactive:'#d8d8d8',\n    selectBgFocused:'#fbfbfb',\n    selectBg:'#ffffff',\n    backButtonBg:'#ffffff',\n    lineChartStroke:'#dbdbdb',\n    wrongNetworkBannerBg:'#ffffff',\n    dashboardBg: '#f9fafd',\n    statValue: '#959595',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a3a4a5',\n    cellText: '#a6a6a6',\n    divider: '#d8d8d8',\n    counter: '#5d5d5d',\n    redeem: '#00a9fe',\n    link:'#0036ff',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    menuBg:'#fff',\n    menuHover:'#f3f6ff',\n    cardBg:'#fff',\n    flashColor:'#3f4e9a',\n    menuRightBorder:'#eee',\n    cardHoverShadow:'0px 0px 0px 1px rgba(0, 54, 255, 0.3)',\n    cardBgHover:'#f7f8ff',\n    cardBorder:'#eee',\n    pageActive:'#4f4f4f',\n    pageInactive:'#d8d8d8',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, '#AAA'),\n      backgroundColor: tint(0.9, '#AAA'),\n      borderColor: '#AAA',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: '#f3f6ff',\n      borderColor: '#b6c2ff',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput,this.props.themeMode==='dark' ? styles.dark : null,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? 'selectBgFocused' : 'selectBg' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\nimport ShortHash from \"../utilities/components/ShortHash\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        const tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol.toUpperCase()}</Text>\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'legend'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign({\n      py:1,\n      width:'auto',\n      px:['12px',3],\n    },this.props.cardProps);\n\n    return (\n       <DashboardCard\n         cardProps={cardProps}\n         isInteractive={true}\n         isActive={this.props.isActive}\n         handleClick={this.props.handleClick}\n       >\n         <Flex\n           my={1}\n           alignItems={'center'}\n           flexDirection={'row'}\n           justifyContent={'center'}\n         >\n          {\n            this.props.image ? (\n              <Image\n                align={'center'}\n                src={this.props.image}\n                height={ this.props.isMobile ? '1.2em' : '1.4em' }\n                width={ this.props.isMobile ? '1.2em' : '1.4em' }\n                {...this.props.imageProps}\n              />\n            ) : this.props.useIconOnly ? (\n              <Icon\n                align={'center'}\n                name={this.props.icon}\n                size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                {...this.props.iconProps}\n              />\n            ) : (\n             <Flex\n               mr={2}\n               p={['4px','7px']}\n               borderRadius={'50%'}\n               alignItems={'center'}\n               justifyContent={'center'}\n               backgroundColor={ this.props.iconBgColor ? this.props.iconBgColor : this.props.theme.colors.transactions.actionBg.redeem }\n             >\n               <Icon\n                 align={'center'}\n                 name={this.props.icon}\n                 size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                 color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                 {...this.props.iconProps}\n               />\n             </Flex>\n            )\n          }\n           <Text\n             fontWeight={3}\n             fontSize={[1,3]}\n             {...this.props.textProps}\n           >\n             {this.props.text}\n           </Text>\n         </Flex>\n       </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || tokenConfigChanged || approveEnabledChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log(this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventValue: inputValue.toFixed(),\n        eventAction: this.props.tokenConfig.token,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const contractName = this.props.contractInfo.name;\n\n    let params = null;\n\n    // Check contract approved without permit\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      params = this.props.getTransactionParams(_amount);\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n\n    const contractInfo = await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    if (contractInfo){\n      const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n      return contractApproved;\n    }\n    \n    return false;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const contractApproved = await this.checkContractApproved();\n    this.setState({\n      inputValue,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                mt={2}\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.props.approveDescription}\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled\n                          }}\n                          handleClick={this.executeTx.bind(this)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass Staking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      },() => {\n        this.updateData();\n      });\n    } else {\n      const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n      const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n      if (selectedActionChanged || contractApprovedChanged){\n        this.setState({\n          tokenWrapperProps:null,\n          showTokenWrapperEnabled:false\n        },() => {\n          this.updateData(selectedActionChanged);\n        });\n      }\n    }\n\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.state.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.state.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.state.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.state.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.state.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.state.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.state.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.state.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n    /*\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Stake':\n        break;\n        case 'Withdraw':\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      inputValue,\n      balanceSelectorInfo\n    });\n    */\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.state.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.state.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.state.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.state.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.contractInfo.rewardToken]);\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.state.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.state.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.state.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.state.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.state.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    // console.log('updateData',this.state.selectedAction,newState);\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedAction = 'Stake';\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      selectedAction,\n      availableTokens\n    });\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.state.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.state.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.state.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.state.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.state.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.state.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.state.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.state.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.state.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.state.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.state.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.state.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.state.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.state.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },parseInt(Date.now()/1000)) : null;\n\n    const programDuration = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programDuration\n    });\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.state.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.state.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.state.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.state.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.state.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.state.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.state.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.state.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.state.contractInfo.maxBonusDays} days to achieve a ${this.state.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.state.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.state.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      totalRewards,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  toggleShowTokenWrapper = showTokenWrapperEnabled => {\n    this.setState({\n      showTokenWrapperEnabled\n    });\n  }\n\n  selectToken(selectedOption){\n    const selectedToken = selectedOption.value;\n    this.setState({\n      selectedToken,\n      selectedOption\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.tokenConfig && this.state.tokenConfig.poolLink && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          <Text\n                            mb={1}\n                          >\n                            Pool link:\n                          </Text>\n                          <ExtLink\n                            mt={1}\n                            color={'link'}\n                            hoverColor={'link'}\n                            href={this.state.tokenConfig.poolLink}\n                          >\n                            <Text\n                              color={'link'}\n                              style={{\n                                maxWidth:'100%',\n                                overflow:'hidden',\n                                whiteSpace:'nowrap',\n                                textOverflow:'ellipsis'\n                              }}\n                            >\n                              {this.state.tokenConfig.poolLink}\n                            </Text>\n                          </ExtLink>\n                        </Box>\n                      )\n                    }\n                    {\n                      this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          <Text\n                            mb={1}\n                          >\n                            Your Stats:\n                          </Text>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            {\n                              this.state.globalStats.map( (statInfo,index) =>\n                                <StatsCard\n                                  key={`globalStats_${index}`}\n                                  cardProps={{\n                                    mb:[2,0],\n                                    mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                                    width:[1,'100%']\n                                  }}\n                                  textProps={{\n                                    fontSize:[1,2]\n                                  }}\n                                  {...statInfo}\n                                />\n                              )\n                            }\n                          </Flex>\n                        </Box>\n                      )\n                    }\n                    {\n                      this.state.selectedToken && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isStake ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Stake'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              // subcaption={'stake LP Tokens'}\n                              imageProps={{\n                                mb:[0,2],\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isStake}\n                              handleClick={ e => this.setAction('Stake') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isUnstake ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Withdraw'}\n                              imageSrc={'images/upload.svg'}\n                              isMobile={this.props.isMobile}\n                              // subcaption={'withdraw LP tokens'}\n                              imageProps={{\n                                mb:[0,2],\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isUnstake}\n                              handleClick={ e => this.setAction('Withdraw') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isStats ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Stats'}\n                              imageSrc={'images/stats.svg'}\n                              // subcaption={'view some stats'}\n                              isMobile={this.props.isMobile}\n                              imageProps={{\n                                mb:[0,2],\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isStats}\n                              handleClick={ e => this.setAction('Stats') }\n                            />\n                          </Flex>\n                          {\n                            /*\n                            this.state.tokenWrapperProps && (\n                              <Flex\n                                mt={1}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                mb={this.state.showTokenWrapperEnabled ? 0 : 3}\n                              >\n                                <DashboardCard\n                                  cardProps={{\n                                    py:3,\n                                    px:2,\n                                    pb:2,\n                                    display:'flex',\n                                    alignItems:'center',\n                                    flexDirection:'column',\n                                    justifyContent:'center',\n                                  }}\n                                >\n                                  <Flex\n                                    alignItems={'center'}\n                                    justifyContent={'row'}\n                                  >\n                                    <Checkbox\n                                      required={false}\n                                      checked={this.state.showTokenWrapperEnabled}\n                                      onChange={ e => this.toggleShowTokenWrapper(e.target.checked) }\n                                      label={ isStake ? `Convert your ${this.state.tokenWrapperProps.startContract.token} to ${this.state.tokenWrapperProps.destContract.token}` : `Convert your ${this.state.tokenWrapperProps.destContract.token} to ${this.state.tokenWrapperProps.startContract.token}`}\n                                    />\n                                  </Flex>\n                                </DashboardCard>\n                              </Flex>\n                            )\n                            */\n                          }\n                          {\n                            (isStake || isUnstake) ?\n                              /*\n                              this.state.showTokenWrapperEnabled && this.state.tokenWrapperProps ? (\n                                <TokenWrapper\n                                  {...this.props}\n                                  fullWidth={true}\n                                  action={ isStake ? 'wrap' : 'unwrap' }\n                                  toolProps={this.state.tokenWrapperProps}\n                                />\n                              ) :\n                              */\n                              (this.state.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.state.contractInfo ? (\n                                <Box\n                                  mt={1}\n                                  width={1}\n                                  mb={[4,3]}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={txAction}\n                                    error={this.state.error}\n                                    steps={this.state.steps}\n                                    infoBox={this.state.infoBox}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.balanceProp}\n                                    contractInfo={this.state.contractInfo}\n                                    permitEnabled={this.state.permitEnabled}\n                                    approveEnabled={this.state.approveEnabled}\n                                    callback={this.transactionSucceeded.bind(this)}\n                                    approveDescription={this.state.approveDescription}\n                                    contractApproved={this.contractApproved.bind(this)}\n                                    balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                    changeInputCallback={this.changeInputCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                          size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                        />\n                                        <Text\n                                          mt={1}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          {\n                                            isStake ? (\n                                              `You don't have any ${this.state.selectedToken} in your wallet.`\n                                            ) : isUnstake && (\n                                              `You don't have any staked ${this.state.selectedToken} to withdraw.`\n                                            )\n                                          }\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Box>\n                              ) : (\n                                <Flex\n                                  mt={3}\n                                  mb={3}\n                                  width={1}\n                                >\n                                  <FlexLoader\n                                    flexProps={{\n                                      flexDirection:'row'\n                                    }}\n                                    loaderProps={{\n                                      size:'30px'\n                                    }}\n                                    textProps={{\n                                      ml:2\n                                    }}\n                                    text={'Loading info...'}\n                                  />\n                                </Flex>\n                              )\n                            ) : isStats && (\n                              <Flex\n                                mt={1}\n                                mb={3}\n                                width={1}\n                                style={{\n                                  flexWrap:'wrap'\n                                }}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  (!this.state.stats || !this.state.stats.length) ? (\n                                    <Flex\n                                      mt={3}\n                                      mb={3}\n                                      width={1}\n                                    >\n                                      <FlexLoader\n                                        flexProps={{\n                                          flexDirection:'row'\n                                        }}\n                                        loaderProps={{\n                                          size:'30px'\n                                        }}\n                                        textProps={{\n                                          ml:2\n                                        }}\n                                        text={'Loading stats...'}\n                                      />\n                                    </Flex>\n                                  ) : this.state.stats.map( (statInfo,index) =>\n                                    <StatsCard\n                                      key={`stats_${index}`}\n                                      cardProps={{\n                                        width:[1,'49%']\n                                      }}\n                                      {...statInfo}\n                                    />\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport { Flex, Box, Text, Input, Link, Progress } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    steps:{\n      1:'Get Quote',\n      2:'Enable NXS',\n      3:'Buy Cover'\n    },\n    loading:false,\n    amountValue:'',\n    periodValue:'',\n    quoteResponse:null,\n    selectedToken:'DAI'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async changeSelectedToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      amountValue\n    });\n  }\n\n  changePeriod = (e) => {\n\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      periodValue\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    let quoteResponse = await this.functionsUtil.makeRequest(`https://api.nexusmutual.io/getQuote/${this.state.amountValue}/${this.state.selectedToken}/${this.state.periodValue}/0x78751B12Da02728F467A44eAc40F5cbc16Bd7934/M1`);\n\n    const newState = {\n      loading:false\n    };\n\n    if (quoteResponse){\n      newState.quoteResponse = quoteResponse.data;\n    }\n\n    this.setState({\n      quoteResponse\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Flex\n            mb={1}\n            width={1}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n          >\n            {\n              Object.keys(this.state.steps).map( stepIndex => (\n                <Link\n                  style={{\n                    flexBasis:'0',\n                    flex:'1 1 0px',\n                    textDecoration:'none',\n                    cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                  }}\n                  fontSize={2}\n                  textAlign={'center'}\n                  key={`step_${stepIndex}`}\n                  color={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  hoverColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  activeColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                >\n                  {this.state.steps[stepIndex]}\n                </Link>\n              ) )\n            }\n          </Flex>\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Progress\n              style={{\n                width:'100%',\n                height:'15px'\n              }}\n              value={(1/Object.keys(this.state.steps).length)*this.state.step}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}>\n              Select asset:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              selectedToken={this.state.selectedToken}\n              onChange={this.changeSelectedToken.bind(this)}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              How much do you want to cover?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.amountValue}\n              onChange={this.changeAmount.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n              placeholder={`Insert ${this.state.selectedToken.toUpperCase()} amount`}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              For how many days?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.periodValue}\n              placeholder={'Insert days of coverage'}\n              onChange={this.changePeriod.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n            />\n          </Box>\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <ButtonLoader\n              buttonProps={{\n                my:2,\n                mx:[0, 2],\n                size:'medium',\n                borderRadius:4,\n                mainColor:'blue',\n                disabled:(!this.state.amountValue || !this.state.selectedToken || !this.state.periodValue)\n              }}\n              buttonText={'GET QUOTE'}\n              isLoading={this.state.loading}\n              handleClick={ e => this.getQuote(e) }\n            />\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport { Text, Icon, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.props.rows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n          value:Math.round(tokenPercentage),\n          color:'hsl('+tokenColorHsl+')'\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsTextColor:'#333',\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = portfolio.totalAmountLent.times(portfolio.avgAPY.div(100));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings)));\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport CustomList from '../CustomList/CustomList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    activeCoverages:null,\n    depositedTokens:null,\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      // console.log('StrategyPage - availableTokensChanged',availableTokensChanged);\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n\n    if (this.state.portfolioLoaded){\n      return false;\n    }\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load data\n      const [\n        activeCoverages,\n        batchedDeposits,\n        tokensToMigrate,\n        portfolio\n      ] = await Promise.all([\n        // Load active coverages\n        this.functionsUtil.getActiveCoverages(this.props.account),\n        // Load claimable batches\n        this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load tokens to be migrated\n        this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n        // Load and process Etherscan Txs\n        this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.activeCoverages = activeCoverages && activeCoverages.length>0 ? activeCoverages.map( c => {\n        const statusColors = this.props.theme.colors.transactions.status;\n        const statusIcon = c.status === 'Expired' ? 'Error' : 'VerifiedUser';\n        const statusColor = c.status === 'Expired' ? statusColors.failed : statusColors.completed;\n        const portfolioCoverage = portfolio.totalBalance.gt(0) ? c.balance.div(portfolio.totalBalance).times(100).toFixed(2)+'%' : 'N/A';\n        const statusIconProps = {\n          color:statusColor\n        };\n        return Object.assign(c,{\n          statusIcon,\n          statusIconProps,\n          portfolioCoverage\n        });\n      }) : null;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          if (!tokenScore.isNaN() && tokenScore.gt(0)){\n            avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n            totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n          avgScore = avgScore.div(totalBalanceWithScore);\n        }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        newState.avgScore = avgScore;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n\n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const riskScore = this.functionsUtil.getGlobalConfig(['messages','riskScore']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const coverProtocolConfig = this.functionsUtil.getGlobalConfig(['tools','coverProtocol']);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])} strategy\n        </Title>\n        {\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={4}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgScore ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgScore.toFixed(2) }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg Risk Score\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                /*\n                !this.state.activeCoverages && coverProtocolConfig.enabled && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    mt={[3,4]}\n                    alignItems={'center'}\n                    id={'no-active-cover'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:[3,4],\n                        width:[1,'auto'],\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Image\n                          mb={2}\n                          height={['1.8em','2.2em']}\n                          src={coverProtocolConfig.image}\n                        />\n                        <Text\n                          mb={1}\n                          fontSize={[2,4]}\n                          fontWeight={500}\n                          textAlign={'center'}\n                        >\n                          You don't have an active coverage\n                        </Text>\n                        <Text\n                          mb={2}\n                          color={'blue'}\n                          fontSize={[1,2]}\n                          fontWeight={500}\n                          hoverColor={'blue'}\n                          textAlign={'center'}\n                        >\n                          Cover Protocol provides coverage against Smart-Contract attacks\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:1,\n                            width:'auto',\n                            minHeight:'40px',\n                            mainColor:'redeem',\n                            size:this.props.isMobile ? 'small' : 'medium'\n                          }}\n                          handleClick={ e => this.props.goToSection(`tools/${coverProtocolConfig.route}`) }\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              color={'white'}\n                              fontSize={[1,2]}\n                              fontWeight={500}\n                            >\n                              Get Covered\n                            </Text>\n                            <Icon\n                              ml={1}\n                              size={'1.3em'}\n                              name={'KeyboardArrowRight'}\n                            />\n                          </Flex>\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                )\n                */\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.29,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:false,\n                            props:{\n                              width:[0.12,0.09],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.10],\n                            },\n                            parentProps:{\n                              alignItems:['center','flex-start'],\n                            },\n                            fields:[\n                              {\n                                name:'score',\n                              }\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.13],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.13],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.10],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,this.state.depositedTokens.length>0 ? 0.14 : 0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.22,0.10],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                !viewOnly && this.props.account && coverProtocolConfig.enabled && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','coverProtocol','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              width={[1,1/3]}\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(govTokens).filter( govToken => govTokens[govToken].enabled )}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.activeCoverages && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Coverages</Title>\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <CustomList\n                        rows={this.state.activeCoverages}\n                        handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n                        cols={[\n                          {\n                            title:'PROTOCOL',\n                            props:{\n                              width:[0.42,0.17]\n                            },\n                            fields:[\n                              {\n                                type:'image',\n                                path:['protocolImage'],\n                                props:{\n                                  mr:[1,2],\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                type:'text',\n                                path:['protocolName'],\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            props:{\n                              width:[0.34, 0.15],\n                            },\n                            fields:[\n                              {\n                                type:'number',\n                                path:['balance'],\n                                props:{\n                                  decimals: 4,\n                                }\n                              },\n                              {\n                                type:'text',\n                                path:['token'],\n                                props:{\n                                  ml:[1,2],\n                                  style:{\n                                    textTransform:'uppercase'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EXPIRATION DATE',\n                            props:{\n                              width:0.23,\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['expirationDate'],\n                                props:{\n                                  \n                                }\n                              },\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'COVERAGE',\n                            props:{\n                              width:0.15,\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['portfolioCoverage'],\n                                props:{\n                                  \n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.24,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:[1,2],\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                type:'button',\n                                name:'custom',\n                                label:'File Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.row.status==='Expired')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          web3={this.props.web3}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                this.state.deployedContracts.length>0 ?\n                  this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() ).map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                this.state.deployedContracts.length>0 ?\n                  this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() ).map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        Nothing to Claim yet.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Staking from '../Staking/Staking';\nimport IDLE from '../contracts/IDLE.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport LpStaking from '../contracts/LpStaking.json';\nimport B2BVester from '../contracts/B2BVester.json';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from '../abis/curve/CurvePool.json';\nimport NexusMutual from '../NexusMutual/NexusMutual';\nimport CoverMint from '../abis/cover/CoverMint.json';\nimport LockedIDLE from '../contracts/LockedIDLE.json';\nimport { Web3Versions } from '@terminal-packages/sdk';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport PriceOracle from '../contracts/PriceOracle.json';\nimport FeeTreasury from '../contracts/FeeTreasury.json';\nimport IdleTokenV2 from '../contracts/IdleTokenV2.json';\nimport StrategyPage from '../StrategyPage/StrategyPage';\nimport BuyModal from '../utilities/components/BuyModal';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport BatchDeposit from '../BatchDeposit/BatchDeposit';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport SushiV2Router02 from '../abis/sushiswap/SushiV2Router02.json';\nimport IdleBatchConverter from '../contracts/IdleBatchConverter.json';\nimport UniswapV2Router02 from '../abis/uniswap/UniswapV2Router02.json';\nimport IdleDepositForwarder from '../contracts/IdleDepositForwarder.json';\nimport SushiLiquidityPool from '../abis/sushiswap/SushiLiquidityPool.json';\nimport BalancerExchangeProxy from '../abis/balancer/BalancerExchangeProxy.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\nimport MinimalInitializableProxyFactory from '../contracts/MinimalInitializableProxyFactory.json';\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: 'Idle',\n  version: 'v5.9',\n  baseToken: 'ETH',\n  baseURL: 'https://idle.finance',\n  forumURL:'https://gov.idle.finance',\n  theme:{\n    darkModeEnabled:true\n  },\n  betaURL: 'https://beta.idle.finance',\n  countries:{\n    'USA':'United States of America',\n    'GBR':'United Kingdom',\n    'AUS':'Australia',\n    'BRA':'Brazil',\n    'CHN':'China',\n    'CAN':'Canada',\n    'EUR':'Europe',\n    'HKG':'Hong Kong',\n    'IND':'India',\n    'MEX':'Mexico',\n    'RUS':'Russia',\n    'ZAF':'South Africa',\n    'KOR':'South Korea'\n  },\n  logs:{ // Enable logs levels\n    errorsEnabled:false,\n    messagesEnabled:false,\n  },\n  connectors:{ // Connectors props\n    metamask:{\n      enabled:true,\n      subcaption:'Browser extension'\n    },\n    opera:{\n      enabled:true,\n      subcaption:'Opera injected wallet'\n    },\n    dapper:{\n      enabled:true,\n      icon:'dapper.png',\n      subcaption:'Browser extension',\n    },\n    coinbase:{\n      enabled:true,\n      icon:'coinbase.png',\n      subcaption:'Connect with Coinbase wallet'\n    },\n    trustwallet:{\n      enabled:true,\n      subcaption:'Connect with Trust Wallet'\n    },\n    walletconnect:{\n      enabled:true,\n      iconModal:'walletconnect.png',\n      subcaption:'Connect with QR code'\n    },\n    walletlink:{\n      enabled:true,\n      icon:'coinbase.png',\n      name:'Coinbase Wallet',\n      subcaption:'Connect with QR code'\n    },\n    gnosis:{\n      enabled:true,\n      // icon:'coinbase.png',\n      name:'Gnosis Safe App',\n      subcaption:'Connect with Gnosis Safe App'\n    },\n    fortmatic:{\n      enabled:true,\n      subcaption:'Login with phone-number'\n    },\n    portis:{\n      enabled:true,\n      subcaption:'Login with e-mail'\n    },\n    authereum:{\n      enabled:true,\n      subcaption:'Cross-device wallet'\n    },\n    torus:{\n      enabled:true,\n      icon:'torus.png',\n      subcaption:'One-Click login for Web 3.0'\n    },\n    trezor:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledger:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    custom:{\n      enabled:true,\n      subcaption:'Custom address'\n    }\n  },\n  newsletterSubscription:{\n    endpoint:'https://dev.lapisgroup.it/idle/newsletter.php'\n  },\n  messages:{\n    scoreShort:'Protocol Risk Score',\n    apyShort:'Annual Percentage Yield',\n    tokenPrice:'The token price is calculated using Uniswap spot prices.',\n    cheapRedeem:'Amount of unlent funds available for low gas fees redeem',\n    curveBonusSlippage:'Slippage or bonus depending on if the coin is low or high in the Curve Pool',\n    distributionSpeed:'The distribution indicates the amount of tokens distributed for the entire pool.',\n    directMint:'Pay an additional gas fee to rebalance the pool and help all users gain an additional APR',\n    performanceFee:'This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE',\n    userDistributionSpeed:'The distribution indicates the amount of tokens distributed for your account based on your current pool share.',\n    govTokenApr:'Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.',\n    govTokenRedeemableBalance:'The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.',\n    riskScoreShort:'It\\'s a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.',\n    redeemSkipGov:'This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool',\n    batchDepositExecutionSchedule:'Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.',\n    apyLong:'APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.',\n    yieldFarming:'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\">Read more here</a>.',\n    riskScore:`It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions:`<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`\n  },\n  analytics:{\n    google:{\n      events:{\n        enabled:true, // Enable Google Analytics events\n        debugEnabled:false, // Enable sending for test environments\n        addPostfixForTestnet:true // Append testnet to eventCategory\n      },\n      pageView:{\n        enabled:true\n      }\n    }\n  },\n  modals:{ // Enable modals\n    first_deposit_referral:false, // Referral share modal\n    first_deposit_share:true, // First deposit share modal\n    migrate:{\n      enabled:true\n    },\n    welcome:{ // Welcome modal\n      enabled:true,\n      frequency:604800 // One week\n    }\n  },\n  dashboard:{\n    baseRoute:'/dashboard',\n    theme:{\n      mode:'light',\n      darkModeEnabled:true\n    },\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals:{\n      7:{\n        description:`Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>`\n      }\n    },\n    contracts:{\n      delegates:'IDLE',\n      governance:'GovernorAlpha',\n    }\n  },\n  curve:{\n    enabled:false,\n    params:{\n      n_coins:3,\n      label:'Curve',\n      route:'/dashboard/curve',\n      image:'images/protocols/curve.svg',\n      imageInactive:'images/protocols/curve-off.svg',\n    },\n    rates:{\n      path:['apy','day','idle'],\n      endpoint:'https://www.curve.fi/raw-stats/apys.json'\n    },\n    poolContract:{\n      decimals:18,\n      abi:CurvePool,\n      name:'idleDAI+idleUSDC+idleUSDT',\n      token:'idleDAI+idleUSDC+idleUSDT',\n      address:'0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05'\n    },\n    depositContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7'\n    },\n    gaugeContract:{\n      abi:LiquidityGaugeV2,\n      name:'LiquidityGaugeV2',\n      address:'0xd69ac8d9D25e99446171B5D0B3E4234dAd294890'\n    },\n    zapContract:{\n      abi:CurveZap,\n      name:'idleCurveZap',\n      address:'0x456974df1042ba7a46fd49512a8778ac3b840a21'\n    },\n    migrationContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7',\n      functions:[\n        {\n          label:'Deposit',\n          name:'add_liquidity'\n        },\n      ]\n    },\n    availableTokens:{\n      idleDAIYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'DAI',\n        token:'idleDAIYield',\n        address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:0\n        },\n      },\n      idleUSDCYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDC',\n        token:'idleUSDCYield',\n        address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:1\n        },\n      },\n      idleUSDTYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDT',\n        token:'idleUSDTYield',\n        address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:2\n        },\n      },\n    }\n  },\n  permit:{\n    DAI:{\n      version:1,\n      EIPVersion:null,\n      nonceMethod:'nonces',\n      name:'Dai Stablecoin',\n      type:[\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" },\n      ]\n    },\n    USDC:{\n      version:2,\n      name:'USD Coin',\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    },\n    SLP:{\n      version:1,\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      name:'SushiSwap LP Token',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    }\n  },\n  govTokens:{\n    IDLE:{\n      abi:IDLE,\n      decimals:18,\n      token:'IDLE',\n      enabled:true,\n      showAUM:false, // Include IDLE balance in AUM\n      showAPR:false, // Include IDLE Apr\n      protocol:'idle',\n      showPrice:false, // Show price in Yield Farming section\n      showBalance:false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode:false,\n      distributionMode:'block',\n      distributionFrequency:'day', // Multiply distribution per block\n      color:'hsl(162, 100%, 41%)',\n      icon:'images/tokens/IDLE.png',\n      disabledTokens:['idleRAIYield'], // Disable IDLE distribution for idleToken\n      address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e' // MAIN\n      // address:'0xAB6Bdb5CCF38ECDa7A92d04E86f7c53Eb72833dF', // KOVAN\n      // address:'0xa85233C63b9Ee964Add6F2cffe00Fd84eb32338f' // Fork\n    },\n    COMP:{\n      abi:COMP,\n      decimals:18,\n      token:'COMP',\n      enabled:true,\n      showAUM:true, // Include IDLE balance in AUM\n      showAPR:true, // Include COMP Apr\n      showPrice:true,\n      showBalance:true, // Include COMP balance in Portfolio Donut\n      disabledTokens:[],\n      protocol:'compound',\n      aprTooltipMode:false,\n      distributionMode:'block',\n      distributionFrequency:'day',\n      color:'hsl(162, 100%, 41%)',\n      address:'0xc00e94cb662c3520282e6f5717214004a7f26888', // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE:{\n      abi:aToken,\n      decimals:18,\n      showAUM:true, // Include stkAAVE balance in AUM\n      showAPR:true, // Include stkAAVE Apr\n      enabled:true,\n      showPrice:true,\n      token:'stkAAVE',\n      showBalance:true, // Include stkAAVE balance in Portfolio Donut\n      protocol:'aavev2',\n      aprTooltipMode:false,\n      distributionMode:'second',\n      color:'hsl(314, 41%, 51%)',\n      distributionFrequency:'day',\n      disabledTokens:['idleTUSDYield','idleSUSDYield'],\n      address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice:'0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n    }\n  },\n  contracts:{\n    ProxyFactory:{\n      abi:MinimalInitializableProxyFactory,\n      address:'0x91baced76e3e327ba7850ef82a7a8251f6e43fb8'\n    },\n    LockedIDLE:{\n      abi:LockedIDLE,\n      address:'0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n    },\n    FeeTreasury:{\n      abi:FeeTreasury,\n      address:'0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n    },\n    PriceOracle:{\n      abi:PriceOracle,\n      address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n      // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n    },\n    Timelock:{\n      abi:Timelock,\n      address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n      // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n    },\n    EcosystemFund:{\n      abi:EcosystemFund,\n      address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n      // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n    },\n    VesterFactory:{\n      abi:VesterFactory,\n      address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n      // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n    },\n    IdleController:{\n      abi:IdleController,\n      address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n      // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n    },\n    EarlyRewards:{\n        abi:EarlyRewards,\n        address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n    },\n    GovernorAlpha:{\n      abi:GovernorAlpha,\n      address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n      // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n    },\n    Comptroller:{\n      abi:Comptroller,\n      address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n      // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n    },\n    SushiswapRouter:{\n      abi:SushiV2Router02,\n      address:'0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n    },\n    UniswapRouter:{\n      abi:UniswapV2Router02,\n      address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n    },\n    BalancerExchangeProxy:{\n      abi:BalancerExchangeProxy,\n      address:'0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n    }\n  },\n  tokens:{\n    DAI:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n    USDC:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n  },\n  strategies:{\n    best:{\n      token:'DAI',\n      color:'#f32121',\n      comingSoon:false,\n      addGovTokens:true,\n      titlePostfix:null,\n      title:'Best-Yield',\n      iconName:'Whatshot',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/best-on.svg',\n      iconInactive:'images/strategies/best-off.svg',\n      iconInactiveDark:'images/strategies/best-white.svg',\n      desc:'Maximize your returns across DeFi protocols',\n      descLong:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.',\n      descShort:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.'\n    },\n    risk:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:false,\n      titlePostfix:null,\n      addGovTokens:true,\n      iconName:'Security',\n      title:'Risk-Adjusted',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/risk-on.svg',\n      iconInactive:'images/strategies/risk-off.svg',\n      iconInactiveDark:'images/strategies/risk-white.svg',\n      desc:'Optimize your risk exposure across DeFi protocols',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    },\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n  },\n  stats:{\n    enabled:true, // Enable endpoint\n    rates:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/rates/'\n    },\n    tvls:{\n      TTL:120,\n      endpoint:'https://api.idle.finance/tvls/'\n    },\n    substack:{\n      TTL:1800,\n      endpoint:'https://api.idle.finance/substack/'\n    },\n    scores:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/scores/'\n    },\n    config:{\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {}\n    },\n    versions:{\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3:{\n        label:'Idle V3',\n        additionalProtocols:[],\n        endTimestamp:1597237542,\n        startTimestamp:1589801874,\n        showPerformanceTooltip:false,\n        strategiesParams:{\n          risk:{\n            endTimestamp:1597233922,\n          }\n        },\n        enabledStrategies:['best','risk'],\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n      },\n      v4:{\n        label:'Idle V4',\n        endTimestamp:null,\n        startTimestamp:1597442400, // 1598220000\n        enabledStrategies:['best','risk'],\n        showPerformanceTooltip:true,\n        strategiesParams:{\n          risk:{\n            startTimestamp:1599183170,\n          }\n        },\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH','RAI'],\n        additionalProtocols:[\n          {\n            decimals:16,\n            protocol:'compound',\n            name:'compoundWithCOMP',\n          },\n          {\n            decimals:18,\n            protocol:'aavev2',\n            name:'aavev2WithStkAAVE',\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USD:{\n        enabled:true,\n        color:{\n          hex:'#85bb65',\n          rgb:[133, 187, 101],\n          hsl:['98', '39%', '56%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        address:null,\n        startTimestamp:'2020-02-04',\n      },\n      USDC:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#2875C8',\n          rgb:[40,117,200],\n          hsl:['211', '67%', '47%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USDT:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#22a079',\n          rgb:[34, 160, 121],\n          hsl:['161', '65%', '38%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      TUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'0340a1',\n          rgb:[3, 64, 161],\n          hsl:['217', '96%', '32%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n      },\n      SUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#1e1a31',\n          rgb:[30, 26, 49],\n          hsl:['250', '31%', '15%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n      },\n      WBTC:{\n        decimals:8,\n        enabled:true,\n        color:{\n          hex:'#eb9444',\n          rgb:[235, 148, 68],\n          hsl:['29', '81%', '59%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'wbtcDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      WETH:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#ee1f79',\n          rgb:[238, 31, 121],\n          hsl:['334', '86%', '53%']\n        },\n        startTimestamp:'2021-02-16',\n        conversionRateField:'wethDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      COMP:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#00d395',\n          rgb:[0, 211, 149],\n          hsl:['162', '100%', '41%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      stkAAVE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#B6509E',\n          rgb:[182, 80, 158],\n          hsl:['314', '41%', '51%']\n        },\n        startTimestamp:'2021-04-30',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5',\n      },\n      IDLE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#0d55bb',\n          rgb:[13, 85, 187],\n          hsl:['215', '87%', '39%']\n        },\n        startTimestamp:'2020-11-10',\n        icon:'images/tokens/IDLE.png',\n        conversionRateField:'idleDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e',\n      },\n      RAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#378879',\n          rgb:[55, 136, 121],\n          hsl:['169', '42%', '37%']\n        },\n        startTimestamp:'2021-05-25',\n        icon:'images/tokens/RAI.png',\n        conversionRateField:'raiDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n      },\n      'idleDAI+idleUSDC+idleUSDT':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp:'2020-06-15',\n      },\n    },\n    protocols:{\n      compound:{\n        legend:true,\n        enabled:true,\n        label:'Compound',\n        color:{\n          rgb:[0, 209, 146],\n          hsl:['162', '100%', '41%']\n        }\n      },\n      aavev2WithStkAAVE:{\n        enabled:true,\n        label:'Aave V2 + stkAAVE',\n        startTimestamp:'2021-05-08 14:30:00',\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color:{\n          hex:'#B6509E',\n          rgb:[182, 80, 158],\n          hsl:['314', '41%', '51%']\n        },\n        rateField:['rate','aaveAdditionalAPR']\n      },\n      compoundWithCOMP:{\n        enabled:true,\n        label:'Compound + COMP',\n        color:{\n          rgb:[0, 153, 107],\n          hsl:['162', '100%', '30%']\n        },\n        rateField:['rate','compoundAdditionalAPR']\n      },\n      fulcrum:{\n        legend:false,\n        enabled:false,\n        label:'Fulcrum',\n        color:{\n          rgb:[2, 138, 192],\n          hsl:['197', '98%', '38%']\n        }\n      },\n      dsr:{\n        label:'DSR',\n        enabled:false,\n        icon:'CHAI.png',\n        color:{\n          rgb:[222, 52, 67],\n          hsl:['355', '72%', '54%']\n        }\n      },\n      dydx:{\n        legend:true,\n        label:'DyDx',\n        enabled:true,\n        color:{\n          rgb:[87, 87, 90],\n          hsl:['240', '2%', '35%']\n        }\n      },\n      iearn:{\n        label:'Yearn',\n        enabled:true,\n      },\n      aave:{\n        label:'Aave V1',\n        legend:true,\n        enabled:true,\n        color:{\n          rgb:[230, 131, 206],\n          hsl:['315', '66%', '71%']\n        }\n      },\n      aavev2:{\n        legend:true,\n        enabled:true,\n        icon:'aave.svg',\n        label:'Aave V2',\n        color:{\n          rgb:[151, 79, 141],\n          hsl:['308', '31%', '45%']\n        }\n      },\n      cream:{\n        legend:true,\n        enabled:true,\n        label:'Cream',\n        icon:'cream.svg',\n        color:{\n          rgb:[105, 226, 220],\n          hsl:['177', '68%', '65%']\n        }\n      },\n      fuse:{\n        legend:true,\n        enabled:true,\n        label:'Fuse',\n        icon:'fuse.png',\n        color:{\n          rgb:[0, 0, 0],\n          hsl:['0', '0%', '0%']\n        }\n      },\n      curve:{\n        label:'',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      },\n      idle:{\n        label:'Idle',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      }\n    }\n  },\n  contract:{\n    methods:{\n      redeem:{\n        skipRebalance:true,\n        metaTransactionsEnabled:false\n      },\n      deposit:{\n        skipMint:true,\n        minAmountForMint:100000,\n        erc20ForwarderEnabled:true,\n        skipMintCheckboxEnabled:true,\n        metaTransactionsEnabled:false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract:{\n          forwarder:{\n            enabled:true,\n            abi:erc20Forwarder,\n            name:'erc20Forwarder',\n            function:'emitMessage',\n            address:'0x84a0856b038eaAd1cC7E297cF34A7e72685A8693', // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens:{\n            DAI:{\n              enabled:true,\n              permitType:'DAI_Permit',\n              abi:IdleDepositForwarder,\n              function:'permitAndDeposit', // foo\n              name:'IdleDepositForwarderDAI',\n              address:'0xDe3c769cCD1878372864375e9f89956806B86daA', // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC:{\n              enabled:true,\n              permitType:'USDC_Permit',\n              abi:IdleDepositForwarder,\n              name:'IdleDepositForwarderUSDC',\n              function:'permitEIP2612AndDeposit',\n              address:'0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761', // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            },\n          }\n        },\n        proxyContract:{\n          enabled:false,\n          abi:IdleProxyMinter,\n          name:'IdleProxyMinter',\n          function:'mintIdleTokensProxy',\n          address:'0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a',\n        }\n      },\n      migrate:{\n        skipRebalance:true,\n        minAmountForRebalance:10000,\n        minAmountForRebalanceMetaTx:10000\n      },\n      redeemGovTokens:{\n        enabled:true\n      },\n      redeemSkipGov:{\n        enabled:true,\n        disabledTokens:['idleDAISafe','idleUSDCSafe','idleUSDTSafe']\n      },\n      rebalance:{\n        enabled:true,\n        abi:IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:'Mainnet',\n      3:'Ropsten',\n      4:'Rinkeby',\n      42:'Kovan',\n      1337:'Hardhat'\n    },\n    isForked:false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork:1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear:2371428,\n    secondsPerYear:31536000,\n    firstBlockNumber:8119247,\n    requiredConfirmations: 1,\n    enabledNetworks:[1,42,1337],\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers:{\n      infura:{\n        42: 'https://kovan.infura.io/v3/',\n        1: 'https://mainnet.infura.io/v3/',\n        1337: 'https://mainnet.infura.io/v3/'\n      },\n      ens:{\n        enabled:true,\n        supportedNetworks:[1]\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl:{\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      snapshot:{\n        whitelist:[\n          '0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa',\n          '0xf12ce5807e3d3128B876aa1Cec0632D63547E22E'\n        ],\n        endpoints:{\n          proposals:'https://hub.snapshot.page/api/idlefinance.eth/proposals'\n        },\n        urls:{\n          proposals:'https://signal.idle.finance/#/idlefinance.eth/proposal/'\n        }\n      },\n      biconomy:{\n        enabled:false,\n        enableLogin:false,\n        supportedNetworks:[1,42],\n        disabledWallets:['authereum'],\n        endpoints:{\n          limits:'https://api.biconomy.io/api/v1/dapp/checkLimits'\n        },\n        params:{\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: '36572ec9-ae5c-4c4a-9530-f3ae7c7ac829',\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      terminal:{\n        enabled:false,\n        supportedNetworks:[1,42],\n        params:{\n          apiKey: env.REACT_APP_TERMINAL_KEY,\n          projectId: env.REACT_APP_TERMINAL_PROJECT_ID,\n          source: null,\n          web3Version: Web3Versions.one\n        }\n      },\n      simpleID:{\n        enabled:false,\n        supportedNetworks:[1],\n        getNetwork:(networkId,availableNetworks) => {\n          let networkName = null;\n          switch (networkId){\n            case 1:\n              networkName = 'mainnet';\n            break;\n            default:\n              networkName = availableNetworks[networkId] ? availableNetworks[networkId].toLowerCase() : 'mainnet';\n            break;\n          }\n          return networkName;\n        },\n        params:{\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: 'mainnet'\n        }\n      }\n    }\n  },\n  notifications:[\n    {\n      enabled:false,\n      end:1612282726374,\n      start:1611677841027,\n      date:'Jan 26, 2021 16:18 UTC',\n      title:'Cover Protocol Available',\n      hash:'/dashboard/tools/cover-protocol',\n      image:'/images/protocols/cover-logo.svg',\n      text:'Protect your portfolio with Cover Protocol',\n    }\n  ],\n  tools:{\n    stake:{\n      enabled:true,\n      icon:'Layers',\n      label:'LP Staking',\n      route:'lp-staking',\n      subComponent:Staking,\n      desc:'Stake your Sushi Swap LP tokens and earn $IDLE rewards',\n      props:{\n        availableTokens:{\n          SLP:{\n            contract:{\n              decimals:24,\n              abi:LpStaking,\n              name:'LpStaking',\n              maxMultiplier:3,\n              maxBonusDays:120,\n              rewardToken:'IDLE',\n              address:'0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d' // Mainnet\n              // address:'0x95274E30C33083F3E3fEA9454347b9BD59e85225' // Fork\n            },\n            name:'SLP',\n            token:'SLP',\n            decimals:18,\n            enabled:true,\n            abi:SushiLiquidityPool,\n            label:'SushiSwap IDLE/ETH LP Token',\n            icon:'images/protocols/sushiswap.png',\n            address:'0xa7f11e026a0af768d285360a855f2bded3047530', // Mainnet\n            poolLink:'https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530',\n          }\n        }\n      }\n    },\n    b2bVesting:{\n      enabled:false,\n      visible:false,\n      icon:'CloudUpload',\n      label:'B2B Vesting',\n      route:'b2b-vesting-contract',\n      subComponent:DeployB2BVesting,\n      desc:'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props:{\n        contracts:{\n          vesterImplementation:{\n            abi:B2BVester,\n            address:'0xE6E340D132b5f46d1e472DebcD681B2aBc16e57E'\n          }\n        }\n      }\n    },\n    ethWrapper:{\n      enabled:true,\n      label:'ETH Wrapper',\n      route:'eth-wrapper',\n      subComponent:TokenWrapper,\n      image:'images/tokens/WETH.svg',\n      desc:'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props:{\n        startContract:{\n          name:'ETH',\n          token:'ETH',\n          decimals:18,\n          wrapMethod:'deposit',\n        },\n        destContract:{\n          abi:WETH,\n          name:'WETH',\n          decimals:18,\n          token:'WETH',\n          unwrapMethod:'withdraw',\n          address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol:{\n      enabled:false,\n      label:'Cover Protocol',\n      route:'cover-protocol',\n      subComponent:CoverProtocol,\n      image:'images/protocols/cover-logo.svg',\n      desc:'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl:'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props:{\n        contract:{\n          decimals:18,\n          abi:CoverMint,\n          name:'CoverMint',\n          address:'0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages:[\n          {\n            collateral:'DAI',\n            expirationTimestamp:1614470400,\n            tokens:{\n              Claim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                address:'0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                  address:'0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c',\n                }\n              },\n              NoClaim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                address:'0x53df0bfa014b7522299c129c5a7b318f02adb469',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                  address:'0xce0e9e7a1163badb7ee79cfe96b5148e178cab73',\n                }\n              }\n            }\n          },\n        ],\n      }\n    },\n    batchDeposit:{\n      enabled:true,\n      icon:'Storage',\n      claimEnabled:true,\n      depositEnabled:true,\n      route:'batch-deposit',\n      label:'Batch Deposit',\n      subComponent:BatchDeposit,\n      desc:'Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            strategy:'best',\n            baseToken:'DAI',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAI',\n              address:'0x633fb4d38B24dC890b11Db2AE2B248D13F996A79', // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  usePermit:true,\n                  label:'Deposit',\n                  permitName:'permitAndDeposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:6,\n            strategy:'best',\n            baseToken:'USDC',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDC',\n              address:'0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B', // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                  permitName:'permitEIP2612AndDepositUnlimited'\n                },\n              ]\n            },\n          },\n          /*\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  usePermit:true,\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n          */\n        }\n      }\n    },\n    batchMigration:{\n      enabled:true,\n      claimEnabled:true,\n      depositEnabled:false,\n      icon:'FileDownload',\n      route:'batch-migration',\n      label:'Batch Migration',\n      subComponent:BatchMigration,\n      desc:'Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'DAI',\n            name:'idleDAIYieldV3',\n            token:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAI',\n              address:'0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDC',\n            name:'idleUSDCYieldV3',\n            token:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDC',\n              address:'0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            name:'idleUSDTYieldV3',\n            token:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            name:'idleSUSDYieldV3',\n            token:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            name:'idleTUSDYieldV3',\n            token:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            name:'idleWBTCYieldV3',\n            token:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            name:'idleDAISafeV3',\n            token:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            name:'idleUSDCSafeV3',\n            token:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            name:'idleUSDTSafeV3',\n            token:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n        }\n      }\n    },\n    tokenMigration:{\n      enabled:true,\n      icon:'SwapHoriz',\n      route:'convert',\n      label:'Token Migration',\n      desc:'Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle',\n      subComponent:TokenMigration,\n      props:{\n        migrationContract:{\n          name:'IdleConverterV4',\n          abi:IdleConverterPersonalSignV4,\n          address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n          oldAddresses:[],\n          functions:[\n            {\n              label:'Migrate',\n              name:'migrateFromToIdle'\n            },\n          ]\n        },\n        availableStrategies:['best','risk'],\n        availableTokens:{\n          idleDAIv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            baseToken:'DAI',\n            abi:IdleTokenV2,\n            token:'idleDAIOld',\n            icon:'images/tokens/idleDAI.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0x10eC0D497824e342bCB0EDcE00959142aAa766dD',\n          },\n          cDAI:{\n            decimals:8,\n            enabled:true,\n            token:\"cDAI\",\n            baseToken:'DAI',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\",\n          },\n          iDAI:{\n            decimals:18,\n            enabled:false,\n            token:\"iDAI\",\n            baseToken:'DAI',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x493c57c4763932315a328269e1adad09653b9081\",\n          },\n          aDAI:{\n            decimals:18,\n            enabled:true,\n            token:\"aDAI\",\n            protocol:\"aave\",\n            baseToken:'DAI',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\",\n          },\n          yDAIv3:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv3\",\n            abi:yDAIv3.abi,\n            baseToken:'DAI',\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xC2cB1040220768554cf699b0d863A3cd4324ce32\",\n          },\n          yDAIv2:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv2\",\n            baseToken:'DAI',\n            abi:yDAIv3.abi,\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\",\n          },\n          idleUSDCv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            abi:IdleTokenV2,\n            baseToken:'USDC',\n            token:'idleUSDCOld',\n            icon:'images/tokens/idleUSDC.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0xeB66ACc3d011056B00ea521F8203580C2E5d3991',\n          },\n          cUSDC:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDC\",\n            baseToken:'USDC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x39aa39c021dfbae8fac545936693ac917d5e7563\",\n          },\n          iUSDC:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDC\",\n            baseToken:'USDC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\",\n          },\n          aUSDC:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDC\",\n            protocol:\"aave\",\n            baseToken:'USDC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\",\n          },\n          yUSDCv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv3\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x26EA744E5B887E5205727f55dFBE8685e3b21951\",\n          },\n          yUSDCv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv2\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\",\n          },\n          cUSDT:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDT\",\n            baseToken:'USDT',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\",\n          },\n          iUSDT:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDT\",\n            baseToken:'USDT',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x8326645f3aa6de6420102fdb7da9e3a91855045b\",\n          },\n          aUSDT:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDT\",\n            protocol:\"aave\",\n            baseToken:'USDT',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\",\n          },\n          yUSDTv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv3\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\",\n          },\n          yUSDTv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv2\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\",\n          },\n          idleSUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'SUSD',\n            token:'idleSUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleSUSDYield.svg',\n            address:'0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5',\n          },\n          aSUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aSUSD\",\n            protocol:\"aave\",\n            baseToken:'SUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x625aE63000f46200499120B906716420bd059240\",\n          },\n          ySUSDv3:{\n            decimals:18,\n            enabled:true,\n            token:\"ySUSDv3\",\n            abi:ySUSDv3,\n            baseToken:'SUSD',\n            protocol:\"iearn\",\n            availableStrategies:['best'],\n            icon:'images/tokens/ySUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xf61718057901f84c4eec4339ef8f0d86d2b45600\",\n          },\n          idleTUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'TUSD',\n            token:'idleTUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleTUSDYield.svg',\n            address:'0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6',\n          },\n          aTUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aTUSD\",\n            protocol:\"aave\",\n            baseToken:'TUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x4DA9b813057D04BAef4e5800E36083717b4a0341\",\n          },\n          yTUSDv3:{\n            decimals:18,\n            enabled:true,\n            abi:yTUSDv3,\n            token:\"yTUSDv3\",\n            baseToken:'TUSD',\n            protocol:\"iearn\",\n            icon:'images/tokens/yTUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x73a052500105205d34daf004eab301916da8190f\",\n          },\n          cWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"cWBTC\",\n            baseToken:'WBTC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\",\n          },\n          iWBTC:{\n            decimals:8,\n            enabled:false,\n            token:\"iWBTC\",\n            baseToken:'WBTC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\",\n          },\n          aWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"aWBTC\",\n            protocol:\"aave\",\n            baseToken:'WBTC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\",\n          },\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      icon:'AddCircleOutline',\n      route:'add-funds',\n      label:'Add Funds',\n      desc:'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    insurance:{\n      enabled:false,\n      icon:'Security',\n      route:'nexus-mutual',\n      label:'Nexus Mutual',\n      desc:'Buy tokens with Bank account or Credit card',\n      subComponent:NexusMutual,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n        }\n      },\n      directProps:{\n        ens:'idlefinancev3.nexusmutual.eth',\n        address:'0x78751B12Da02728F467A44eAc40F5cbc16Bd7934'\n      }\n    },\n    tokenSwap:{\n      enabled:true,\n      icon:'Sync',\n      route:'token-swap',\n      label:'Token Swap',\n      desc:'Easily swap your tokens using Kyber Swap widget',\n      subComponent:TokenSwap,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n          \"SUSD\":{\"token\":\"SUSD\"},\n          \"TUSD\":{\"token\":\"TUSD\"},\n          \"USDC\":{\"token\":\"USDC\"},\n          \"USDS\":{\"token\":\"USDS\"},\n          \"USDT\":{\"token\":\"USDT\"},\n          \"WBTC\":{\"token\":\"WBTC\"},\n          \"WETH\":{\"token\":\"WETH\"},\n          \"BUSD\":{\"token\":\"BUSD\"},\n          \"EURS\":{\"token\":\"EURS\"},\n          \"2KEY\":{\"token\":\"2KEY\"},\n          \"ABT\":{\"token\":\"ABT\"},\n          \"ABYSS\":{\"token\":\"ABYSS\"},\n          \"AMPL\":{\"token\":\"AMPL\"},\n          \"ANT\":{\"token\":\"ANT\"},\n          \"BAM\":{\"token\":\"BAM\"},\n          \"BAND\":{\"token\":\"BAND\"},\n          \"BAT\":{\"token\":\"BAT\"},\n          \"BLZ\":{\"token\":\"BLZ\"},\n          \"BNT\":{\"token\":\"BNT\"},\n          \"BQX\":{\"token\":\"BQX\"},\n          \"BTU\":{\"token\":\"BTU\"},\n          \"CDT\":{\"token\":\"CDT\"},\n          \"CVC\":{\"token\":\"CVC\"},\n          \"DAT\":{\"token\":\"DAT\"},\n          \"DGX\":{\"token\":\"DGX\"},\n          \"EKG\":{\"token\":\"EKG\"},\n          \"ELF\":{\"token\":\"ELF\"},\n          \"ENJ\":{\"token\":\"ENJ\"},\n          \"EQUAD\":{\"token\":\"EQUAD\"},\n          \"FXC\":{\"token\":\"FXC\"},\n          \"GDC\":{\"token\":\"GDC\"},\n          \"GEN\":{\"token\":\"GEN\"},\n          \"GHT\":{\"token\":\"GHT\"},\n          \"GNO\":{\"token\":\"GNO\"},\n          \"IOST\":{\"token\":\"IOST\"},\n          \"KEY\":{\"token\":\"KEY\"},\n          \"KNC\":{\"token\":\"KNC\"},\n          \"LEND\":{\"token\":\"LEND\"},\n          \"LINK\":{\"token\":\"LINK\"},\n          \"LOOM\":{\"token\":\"LOOM\"},\n          \"LRC\":{\"token\":\"LRC\"},\n          \"MANA\":{\"token\":\"MANA\"},\n          \"MCO\":{\"token\":\"MCO\"},\n          \"MET\":{\"token\":\"MET\"},\n          \"MFG\":{\"token\":\"MFG\"},\n          \"MKR\":{\"token\":\"MKR\"},\n          \"MLN\":{\"token\":\"MLN\"},\n          \"MTL\":{\"token\":\"MTL\"},\n          \"MYB\":{\"token\":\"MYB\"},\n          \"NEXXO\":{\"token\":\"NEXXO\"},\n          \"NPXS\":{\"token\":\"NPXS\"},\n          \"OGN\":{\"token\":\"OGN\"},\n          \"OMG\":{\"token\":\"OMG\"},\n          \"OST\":{\"token\":\"OST\"},\n          \"PAX\":{\"token\":\"PAX\"},\n          \"PBTC\":{\"token\":\"PBTC\"},\n          \"PLR\":{\"token\":\"PLR\"},\n          \"PNK\":{\"token\":\"PNK\"},\n          \"POLY\":{\"token\":\"POLY\"},\n          \"POWR\":{\"token\":\"POWR\"},\n          \"PT\":{\"token\":\"PT\"},\n          \"QKC\":{\"token\":\"QKC\"},\n          \"QNT\":{\"token\":\"QNT\"},\n          \"RAE\":{\"token\":\"RAE\"},\n          \"REN\":{\"token\":\"REN\"},\n          \"REP\":{\"token\":\"REP\"},\n          \"REQ\":{\"token\":\"REQ\"},\n          \"RLC\":{\"token\":\"RLC\"},\n          \"RSR\":{\"token\":\"RSR\"},\n          \"RSV\":{\"token\":\"RSV\"},\n          \"SAN\":{\"token\":\"SAN\"},\n          \"SNT\":{\"token\":\"SNT\"},\n          \"SNX\":{\"token\":\"SNX\"},\n          \"SPIKE\":{\"token\":\"SPIKE\"},\n          \"SPN\":{\"token\":\"SPN\"},\n          \"TKN\":{\"token\":\"TKN\"},\n          \"TKX\":{\"token\":\"TKX\"},\n          \"TRYB\":{\"token\":\"TRYB\"},\n          \"UBT\":{\"token\":\"UBT\"},\n          \"UPP\":{\"token\":\"UPP\"},\n          \"ZRX\":{\"token\":\"ZRX\"}\n        }\n      },\n      directProps:{\n      }\n    }\n  },\n  payments: { // Payment methods & providers\n    methods:{\n      bank:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/bank.png',\n          caption:'Bank Account'\n        }\n      },\n      card:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/debit-card.png',\n          caption:'Credit Card'\n        }\n      },\n      wallet:{\n        defaultProvider:'zeroExInstant',\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/ethereum-wallet.svg',\n          caption:'Ethereum Wallet',\n          imageProps:{\n            padding:['0','5px']\n          }\n        }\n      },\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: 'images/payments/wyre.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.75% fee ~',\n        supportedMethods:['card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        remoteResources:{},\n        env:'prod',\n        envParams:{\n          test:{\n            accountId:'AC_Q2Y4AARC3TP'\n          },\n          prod:{\n            accountId:'AC_PQQBX33XVEQ'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n              break;\n              case 'card':\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = 'https://pay.sendwyre.com/purchase';\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken ),\n            referrerAccountId,\n            redirectUrl:globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const wyreWidget = document.getElementById('wyre-widget');\n          if (!wyreWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById('wyreWidget_style')){\n              const wyreStyle = document.createElement('style');\n              wyreStyle.id = 'wyreWidget_style';\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        },\n      },\n      ramp: {\n        enabled:true,\n        imageSrc: 'images/payments/ramp.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods:['bank','card'],\n        badge: {\n          text:'NO ID REQUIRED',\n          color:'#fff',\n          bgColor:'#0cade4'\n        },\n        supportedTokens:['ETH','DAI','USDC'],\n        supportedCountries:['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'],\n        getInfo: (props) => {\n          const info = {};\n            switch (props.selectedMethod){\n              case 'bank':\n                info.supportedCountries = ['GBR','EUR'];\n                info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n              case 'card':\n                info.supportedCountries = ['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'];\n                info.subcaption = `~ 2.90% fee ~`;\n              break;\n              default:\n              break;\n            }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n        \treturn {\n\t          hostAppName: 'Idle',\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? 'mobile' : 'desktop',\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset ? props.tokenConfig.ramp.swapAsset : props.selectedToken )\n        \t};\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on('*', async (event) => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type){\n                case 'PURCHASE_SUCCESSFUL':\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil.BNify(tokenAmount.toString()).div(functionsUtil.BNify(Math.pow(10,parseInt(tokenDecimals)).toString())).toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: 'light',\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\",\n                  });\n\n                break;\n                default:\n                break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled:true,\n        imageSrc: 'images/payments/transak.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods:['bank','card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR','IND'],\n        supportedTokens:['ETH','DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        remoteResources:{'https://global.transak.com/v1/widget.js':{}},\n        env:'prod',\n        badge:{\n          text:'INSTANT',\n          bgColor:'#0069ee'\n        },\n        envParams:{\n          test:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_TEST,\n            url:'https://global.transak.com'\n          },\n          prod:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_PROD,\n            url:'https://global.transak.com'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === 'bank' ? '1.5%' : '4.5%';\n\n          if (props.selectedCountry && props.selectedCountry.value){\n            switch (props.selectedCountry.value.toUpperCase()){\n              case 'GBR':\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n              break;\n              case 'IND':\n                fee = '1.0%';\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n              break;\n              case 'EUR':\n                if (selectedMethod === 'bank'){\n                  info.badge = {\n                    text:'SEPA',\n                    color:'#f7cb05 ',\n                    bgColor:'#10288a'\n                  };\n                } else {\n                  info.badge = {\n                    text:'INSTANT',\n                    bgColor:'#0069ee'\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams = globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value){\n            switch (buyParams.selectedCountry.value.toUpperCase()){\n              case 'IND':\n                fiatCurrency = 'INR';\n              break;\n              case 'GBR':\n                fiatCurrency = 'GBP';\n              break;\n              case 'EUR':\n                fiatCurrency = 'EUR';\n              break;\n              case 'USA':\n                fiatCurrency = 'USD';\n              break;\n              default:\n                fiatCurrency = 'GBP';\n              break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.transak && props.tokenConfig.transak.currencyCode ? props.tokenConfig.transak.currencyCode : props.selectedToken);\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width:'100%',\n            height:'100%'\n            // email,\n          };\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          if (window.transakGlobal){\n\n            const transakWidget = document.getElementById('transak-widget');\n            if (!transakWidget){\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById('transakWidget_style')){\n                const transakStyle = document.createElement('style');\n                transakStyle.id = 'transakWidget_style';\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, 'transak-widget-container');\n          }\n        }\n      },\n      moonpay: {\n        enabled:true,\n        imageSrc: 'images/payments/moonpay.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 4.5% fee ~',\n        supportedMethods:['card','bank'],\n        supportedCountries:['GBR','EUR','AUS','BRA','CHN','MEX','CAN','HKG','RUS','ZAF','KOR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        env:'prod',\n        envParams:{\n          test:{\n            url:'https://buy-staging.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod:{\n            url:'https://buy.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                if (props.selectedCountry && props.selectedCountry.value){\n                  switch (props.selectedCountry.value.toUpperCase()){\n                    case 'EUR':\n                      info.badge = {\n                        text:'SEPA',\n                        color:'#f7cb05 ',\n                        bgColor:'#10288a'\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                    break;\n                    case 'GBR':\n                      info.badge = {\n                        text:'GBP',\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                    break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                    break;\n                  }\n                }\n              break;\n              case 'card':\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams = globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.moonpay && props.tokenConfig.moonpay.currencyCode ? props.tokenConfig.moonpay.currencyCode : props.selectedToken.toLowerCase()),\n            walletAddress:props.account,\n            baseCurrencyCode:'USD',\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            'bank':{\n              'GBR':'gbp_bank_transfer',\n              'EUR':'sepa_bank_transfer'\n            },\n            'card':'credit_debit_card'\n          };\n\n          const selectedCountry = buyParams.selectedCountry && buyParams.selectedCountry.value ? buyParams.selectedCountry.value.toUpperCase() : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod){\n            switch (buyParams.selectedMethod){\n              case 'bank':\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod]['EUR'];\n                switch (selectedCountry){\n                  case 'GBR':\n                  case 'EUR':\n                    params.enabledPaymentMethods = methods[buyParams.selectedMethod][selectedCountry];\n                  break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(methods[buyParams.selectedMethod]).join(',');\n                  break;\n                }\n              break;\n              case 'card':\n              default:\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod];\n              break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry){\n            case 'GBR':\n              params.baseCurrencyCode = 'GBP';\n            break;\n            case 'EUR':\n              params.baseCurrencyCode = 'EUR';\n            break;\n            default:\n              params.baseCurrencyCode = 'USD';\n            break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (!document.cookie.match(/^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/)) {\n              document.cookie = \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const moonpayWidget = document.getElementById('moonpay-widget');\n          if (!moonpayWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById('moonpayWidget_style')){\n              const moonpayStyle = document.createElement('style');\n              moonpayStyle.id = 'moonpayWidget_style';\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: 'images/payments/zeroexinstant.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        remoteResources:{'https://instant.0x.org/v3/instant.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onSuccess,onClose) => {\n\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context ? window.RimbleWeb3_context.connectorName : null;\n\n          if (!tokenParams.zeroExInstant){\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider: connectorName && connectorName!=='Injected' && window.RimbleWeb3_context.connector[connectorName.toLowerCase()] ? window.RimbleWeb3_context.connector[window.RimbleWeb3_context.connectorName.toLowerCase()].provider : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount) => {\n          if (window.zeroExInstant && initParams){\n            if (amount){\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, 'body');\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: 'images/payments/kyber.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Swap with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['WETH','USDC','DAI','USDT','TUSD','SUSD','WBTC','RAI'],\n        web3Subscription:{ // Data for web3 subscription\n          enabled: true,\n          contractAddress: '0x818e6fecd516ecc3849daf6845e3ec868087b755',\n          decodeLogsData: [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_startAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_tokenAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_startAmount\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_tokenAmount\",\n              \"type\": \"uint256\"\n            },\n          ],\n        },\n        remoteResources:{\n          'https://widget.kyber.network/v0.7.5/widget.css':{},\n          'https://widget.kyber.network/v0.7.5/widget.js':{\n            parentElement:document.body,\n            precall: (props,globalConfigs,providerInfo) => {\n\n              // Remove previous elements\n              const buttons = document.querySelectorAll('.kyber-widget-button');\n              for (let i=0;i<buttons.length;i++){\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll('.script_kyberSwap');\n              for (let i=0;i<scripts.length;i++){\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId ? props.buttonId : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)){\n                const a = document.createElement('a');\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props,globalConfigs);\n                a.target = '_blank';\n                a.rel = 'nofollow noopener noreferrer';\n                a.className = 'kyber-widget-button theme-ocean theme-supported';\n                a.title = 'Swap with Kyber';\n                a.style = 'display:none;';\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props,globalConfigs,buyParams=null) => {\n          const baseToken = props.baseToken ? props.baseToken : 'ETH';\n          const params = {\n            lang:'en',\n            type:'swap',\n            mode:'iframe',\n            theme:'theme-ocean',\n            paramForwarding:true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens:`${baseToken}_${props.selectedToken}`,\n            title:`Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair:`${baseToken}_${props.selectedToken}`,\n            commissionId:'0x4215606a720477178AdFCd5A59775C63138711e8',\n            network: globalConfigs.network.requiredNetwork === 1 ? 'mainnet' : 'test',\n          };\n\n          const url  = 'https://widget.kyber.network/v0.7.5/';\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props) => {\n          const buttonId = props.buttonId ? props.buttonId :`kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a){\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n                      \n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: 'images/payments/airswap.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://cdn.airswap.io/airswap-instant-widget.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            env: 'production',\n            mode: 'buy',\n            token: props.tokenConfig.address,\n            baseToken: 'ETH',\n            onComplete: onComplete ? onComplete : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.AirSwapInstant){\n            if (amount){\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams,'body');\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: 'images/payments/totle.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://widget.totle.com/latest/dist.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null,\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.TotleWidget){\n            const nodeId = 'totle-widget';\n            if (!document.getElementById(nodeId)){\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(initParams,document.getElementById(nodeId));\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      if (this.tokenConfig && this.tokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\n\nconst ethereumjsABI = require('ethereumjs-abi');\nconst env = process.env;\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0,1).toUpperCase()+str.substr(1) : '';\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const ensConfig = this.getGlobalConfig(['network','providers','ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)){\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3){\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1){\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name){\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,ensName.name,TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n      totalBalanceConverted:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance,token,tokenConfig,isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens,async (token) => {\n      const tokenConfig = availableTokens[token];\n      const amountDeposited = await this.getAmountDeposited(tokenConfig,account);\n\n      // console.log(token,'amountDeposited',amountDeposited.toString(),'amountLent',amountLents[token].toString());\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n      const [\n        tokenAprs\n        // tokenEarnings\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig)\n        // this.loadAssetField('earnings',token,tokenConfig,this.props.account,false),\n      ]);\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings){\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY){\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken){\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx){\n                firstDepositTx = tx;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens,account);\n    if (firstDepositTxs){\n      return Object.keys(firstDepositTxs).reduce( (acc,token) => {\n        if (firstDepositTxs[token]){\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      },{});\n    }\n\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCall(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return amountDeposited;\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens,false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n\n    let results = [];\n    let etherscanBaseTxs = null;\n    let etherscanBaseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      etherscanBaseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      etherscanBaseTxs = this.getCachedRequest(etherscanBaseEndpoint);\n\n      if (debug){\n        console.log('DEBUG - CACHED - etherscanBaseTxs',etherscanBaseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (etherscanBaseTxs && etherscanBaseTxs.data.result && Object.values(etherscanBaseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(etherscanBaseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEtherscanTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with etherscanBaseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(etherscanBaseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  etherscanBaseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanBaseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        etherscanBaseTxs = null;\n      }\n\n      let txs = etherscanBaseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(etherscanBaseEndpoint);\n\n        // console.log('makeRequest 1',account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(etherscanBaseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          cachedRequests[etherscanBaseEndpoint] = {\n            data:txs,\n            timestamp\n          };\n          this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveEtherscanTxs = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    const {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    } = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens,debug);\n\n    // Initialize prevTxs\n    let etherscanTxs = {};\n    if (etherscanBaseTxs){\n      // Filter txs for token\n      etherscanTxs = await this.processStoredTxs(results,enabledTokens);\n    } else {\n      const allAvailableTokens = Object.keys(this.props.availableTokens);\n      // Save base endpoint with all available tokens\n      etherscanTxs = await this.filterEtherscanTxs(results,allAvailableTokens);\n\n      // Store filtered txs\n      if (etherscanTxs && Object.keys(etherscanTxs).length){\n        this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanTxs);\n      }\n    }\n\n    if (debug){\n      console.log('DEBUG - getEtherscanTxs -',etherscanTxs);\n    }\n\n    return Object\n            .values(etherscanTxs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processEtherscanTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processEtherscanTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    const networkId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    const timestamp = parseInt(Date.now()/1000);\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress',false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress',customAddress);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeCachedRequest = async (endpoint,TTL=60,return_data=false,alias=false,config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint,false,config);\n\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    path = Object.assign([],path);\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page=null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics','google','pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga){\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider=null) => {\n    return this.getStoredItem('walletProvider',false,defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const baseurl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',requiredNetwork]);\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const baseurl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',requiredNetwork]);\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly=false) => {\n\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network','providers','snapshot','whitelist']).map( addr => addr.toLowerCase() );\n    const endpoint = this.getGlobalConfig(['network','providers','snapshot','endpoints','proposals']);\n    let proposals = await this.makeCachedRequest(endpoint,1440,true);\n\n    if (proposals){\n      proposals = Object.values(proposals);\n\n      const currTime = parseInt(Date.now()/1000);\n      if (activeOnly){\n        proposals =  proposals.filter( p => (p.msg.payload.start<=currTime && p.msg.payload.end>currTime) );\n      }\n\n      // console.log(proposals);\n\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        // Add proposal if ended\n        if (p.msg.payload.end<=currTime || whitelist.includes(p.address.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.msg.payload.snapshot;\n\n          let checkedStrategies = false;\n          await this.asyncForEach( p.msg.payload.metadata.strategies, async (s) => {\n            if (checkedStrategies){\n              return;\n            }\n            if (s.name==='erc20-balance-of'){\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract){\n                const tokenBalance = await this.getTokenBalance(tokenName,p.address,true,blockNumber);\n                // console.log(p.relayerIpfsHash,p.address,s.name,tokenBalance ? tokenBalance.toFixed() : null);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)){\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n\n            // console.log(p.relayerIpfsHash,p.address,s.name,checkedStrategies);\n          });\n          \n          // Add proposal is passed token balances check\n          if (checkedStrategies){\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey,validProposals);\n    }\n\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    if (globalConfigs.network.requiredNetwork!==1 || !globalConfigs.stats.enabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n\n      if (filteredCachedData && filteredCachedData.length>0){\n        const filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          return filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    let endpoint = `${apiInfo.endpoint}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    let output = await this.makeRequest(endpoint,false,config);\n    if (!output){\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null){\n      filteredData = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data:filteredData,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName ? contractName : this.props.selectedToken;\n    return await this.genericContractCall(contractName,'decimals');\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate=null) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCall(contractName, 'paused', [], {}).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig){\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length){\n      return false;\n    }\n\n    for (let protocolIndex=0;protocolIndex<allocations.length;protocolIndex++){\n      const lastAllocationsPromise = new Promise( async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations){\n      return true;\n    }\n\n    const diff = allocations.filter( (alloc,index) => alloc !== newAllocations[index] );\n\n    return diff.length>0;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  getContractEvents = async (contractName, eventName, params = {}) => {\n    return await this.getContractPastEvents(contractName, eventName, params);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]){\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n      \n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({from: account})\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit){\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice,9).times(gasLimit),9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null,error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName,tokenAddress,permitType,callData,gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      return false;\n    }\n\n    console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx({\n      permitType,\n      data:callData,\n      token:tokenAddress,\n      to:contract._address,\n      txGas:Number(gasLimit)\n    });\n\n    return tx;\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req,metaInfo,callback,callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({req,metaInfo});\n      transactionHash = txResponse.txHash;\n      console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null,true);\n      return false;\n    }\n\n    if (!transactionHash){\n      console.log('!transactionHash ERROR');\n      callback(null,true);\n      return false;\n    }\n    \n    const tx = {\n      method:'mintIdleToken',\n      transactionHash\n    };\n    console.log('sendBiconomyTxWithErc20Forwarder',transactionHash);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(()=> {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt)=> {\n        console.log('sendBiconomyTxWithErc20Forwarder',transactionHash,err,receipt);\n        if(!err && receipt){\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx,err);\n\n          if (typeof window.updateTransaction === 'function'){\n            window.updateTransaction(tx,transactionHash,tx.status,null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce=0) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit',baseContractName]);\n\n    // console.log('permitConfig',permitConfig);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce>0){\n      nonce = parseInt(nonce)+parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion){\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        const value = this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n      break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n      break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit=null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters){\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find( f => f.name === methodName );\n      const useNonce = methodAbi ? methodAbi.inputs.find( i => i.name === 'nonce' ) : true;\n      if (!isNaN(parseInt(nonce)) && useNonce){\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null,'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName,walletAddr,false),\n      this.getAllowance(contractName,contractAddr,walletAddr)\n    ]);\n    this.customLog('checkTokenApproved',contractName,this.BNify(allowance).toFixed(),this.BNify(balance).toFixed(),(allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  disableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(Date.now()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency,tokenConfig.distributionMode);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // console.log('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toFixed() : null,tokenApys.avgApy ? tokenApys.avgApy.toFixed() : null);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()){\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n      break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token],account),\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]){\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig,firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n      break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.genericContractCall(tokenConfig.idle.token, 'tokenPrice');\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        // this.customLog('redeemableBalanceCounter',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd));\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken,blockNumber='latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.genericContractCall(idleToken,'totalSupply',[],{},blockNumber);\n    if (idleTokenSupply){\n      idleTokenSupply = this.BNify(idleTokenSupply);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig,account,blockNumber='latest') => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCall(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCall(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCall(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n    \n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))){\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCall(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = () => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData();\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]){\n      cachedData = this.props.cachedData[key];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]){\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    if (cachedData && cachedData.data && (!cachedData.expirationDate || cachedData.expirationDate>=parseInt(Date.now()/1000))){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.genericContractCall(tokenConfig.idle.token,'totalSupply')\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url,'_blank','noopener');\n  }\n  getActiveCoverages = async (account=null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account){\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now()/1000);\n    const coverProtocolConfig = this.getGlobalConfig(['tools','coverProtocol']);\n    if (coverProtocolConfig.enabled){\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name,account);\n        if (balance && balance.gt(0)){\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const fileClaimUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp<=currTimestamp ? 'Expired' : 'Active';\n          const expirationDate = moment(coverage.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            collateral,\n            protocolName,\n            fileClaimUrl,\n            protocolImage,\n            expirationDate\n          });\n        }\n      });\n    }\n\n    return activeCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint,1800,true);\n      if (transactions && typeof transactions.result === 'object'){\n        return transactions.result.filter( tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase() );\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account=null,filter_by_status=null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools','batchDeposit']);\n    if (!batchDepositConfig.enabled){\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name,migrationContract.address,migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name,'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name,'batchTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null){\n          batchTotals = this.fixTokenDecimals(batchTotal,tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchRedeem = this.fixTokenDecimals(batchRedeem,18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit,tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)){\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status){\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,batchedDeposits);\n  }\n  getETHBalance = async (walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr,blockNumber)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName,blockNumber='latest') => {\n    return await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n  }\n  getContractBalance = async (contractName,address,blockNumber='latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    return await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    return await this.genericContractCall(contractName, 'balanceOf', [address]);\n  }\n  getAprs = async (contractName) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs){\n      return {\n        aprs:aprs[1],\n        addresses:aprs[0]\n      };\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.getPastEvents(methodName, params);\n  }\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      this.customLog(`genericContractCall - ${contractName} - ${methodName} : ${value}`);\n      return value;\n    } catch (error) {\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    if (async){\n      await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        await callback(array[index], index, array);\n      }\n    }\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(12))).pow(12).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken allocation between protocols\n  */\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    let totalAllocation = this.BNify(0);\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsBalances:{},\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [\n        tokenDecimals,\n        protocolBalance,\n        exchangeRate\n      ] = await Promise.all([\n        this.getTokenDecimals(contractName),\n        this.getProtocolBalance(contractName,tokenConfig.idle.address),\n        ( protocolInfo.functions.exchangeRate ? this.genericContractCall(contractName,protocolInfo.functions.exchangeRate.name,protocolInfo.functions.exchangeRate.params) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      let protocolAllocation = this.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      if (protocolAllocation.lt(this.BNify(0.00000001))){\n        protocolBalance = this.BNify(0);\n        protocolAllocation = this.BNify(0);\n      }\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      // console.log('getTokenAllocation',contractName,protocolAddr,protocolAllocation.toFixed(5),exchangeRate ? exchangeRate.toFixed(5) : null,totalAllocation.toFixed(5));\n    });\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = this.BNify(totalAllocation);\n\n    // Add unlent balance to the pool\n    let unlentBalance = await this.getUnlentBalance(tokenConfig);\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    // console.log('totalAllocationWithUnlent 1',addGovTokens,tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (addGovTokens){\n      const govTokensBalances = await this.getGovTokensBalances(tokenConfig.idle.address);\n\n      // Sum gov tokens balances\n      if (govTokensBalances.total){\n        const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,false);\n        if (tokenUsdConversionRate){\n          govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n        }\n\n        tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n\n        // console.log('totalAllocationWithUnlent 2',govTokensBalances.total.toFixed(5),tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n      }\n    }\n\n    tokenAllocation.totalAllocationConverted = await this.convertTokenBalance(tokenAllocation.totalAllocation,tokenConfig.token,tokenConfig);\n    tokenAllocation.totalAllocationWithUnlentConverted = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,tokenConfig.token,tokenConfig);\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getUniswapConversionRate_path = async (path) => {\n    const one = this.normalizeTokenDecimals(18);\n    const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n    return unires;\n  }\n  getSushiswapPoolTokenPrice = async (contractName,pairAddresses) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCall(contractName,'token0'),\n      this.genericContractCall(contractName,'token1'),\n      this.genericContractCall(contractName,'getReserves'),\n      this.genericContractCall(contractName,'totalSupply')\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply){\n      const token0_config = {\n        address:token0_address\n      };\n      const token1_config = {\n        address:token1_address\n      };\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig,token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig,token1_config)\n      ]);\n\n      if (token0_price && token1_price){\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0],18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1],18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply,18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      if (res){\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    if (tokenConfigDest.addressForPrice){\n      tokenConfigDest = Object.assign({},tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log('getUniswapConversionRate - CACHED',cachedDataKey,cachedData);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        // console.log('getUniswapConversionRate',path,price.toFixed());\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.genericContractCall(curvePoolContract.name,'totalSupply');\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCall(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig,aTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find( p => p.name === stkAAVETokenConfig.protocol );\n\n    if (!aTokenConfig || stkAAVETokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCall(aTokenConfig.token,'getIncentivesController');\n\n    // console.log('getStkAaveDistribution',tokenConfig.idle.token,aTokenConfig.token,aaveIncentivesController_address);\n\n    if (!aaveIncentivesController_address){\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aTokenConfig.token}`;\n    await this.props.initContract(IAaveIncentivesController_name,aaveIncentivesController_address,stkAAVETokenConfig.abi);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig,false,false),\n      this.genericContractCall(IAaveIncentivesController_name,'getAssetData',[aTokenConfig.address]),\n    ]);\n\n    if (assetData && tokenAllocation){\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)){\n        if (!aTokenIdleSupply){\n          aTokenIdleSupply = await this.genericContractCall(aTokenConfig.token,'balanceOf',[tokenConfig.idle.address]);\n        }\n\n        const aaveSpeed = this.BNify(assetData[1]);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network','secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize){\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        // console.log('getStkAaveDistribution',tokenConfig.idle.token,aTokenIdleSupply.toFixed(),aTokenTotalSupply.toFixed(),aavePoolShare.toFixed(),aaveSpeed.toFixed(),aaveDistribution.toFixed());\n\n        if (!this.BNify(aaveDistribution).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find( p => (p.name === stkAAVETokenConfig.protocol) );\n      if (aTokenInfo){\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getStkAaveDistribution(tokenConfig,null,false),\n        ]);\n\n        if (aaveDistribution && userPoolShare){\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getStkAaveApr = async (token,tokenConfig,aaveConversionRate=null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    if (!stkAAVETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)){\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate){\n        const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        try {\n          const destTokenConfig = {\n            address:stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig,destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()){\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCall('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.genericContractCall(cTokenInfo.token,'totalSupply'),\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.genericContractCall(cTokenInfo.token,'balanceOf',[tokenConfig.idle.address]);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = compDistribution.div(1e18).times(this.BNify(blocksPerYear));\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      if (!govTokenConfig.enabled || govTokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n      if (govTokenConfig.protocol === 'idle'){\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency='day',mode='block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network','secondsPerYear']));\n    const multipliers = {\n      'day':{\n        'block':blocksPerYear.div(365.242199),\n        'second':secondsPerYear.div(365.242199)\n      },\n      'week':{\n        'block':blocksPerYear.div(52.1429),\n        'second':secondsPerYear.div(52.1429)\n      },\n      'month':{\n        'block':blocksPerYear.div(12),\n        'second':secondsPerYear.div(12)\n      },\n      'year':{\n        'block':blocksPerYear.div(1),\n        'second':secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n    \n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken){\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n        break;\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig,null,false);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation){\n                const aTokenConfig = tokenConfig.protocols.find( p => (p.name === govTokenConfig.protocol) );\n                if (aTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]){\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const cTokenConfig = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (cTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const destTokenConfig = {\n        address:govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,govTokensBalances);\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${JSON.stringify(availableTokens)}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account,tokenConfig) => {\n    if (!account){\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.genericContractCall(tokenConfig.idle.token,'getGovTokensAmounts',[account]);\n    if (govTokensAmounts){\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.genericContractCall(tokenConfig.idle.token,'govTokens',[govTokenIndex]);\n\n        if (govTokenAddress){\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n\n          if (govTokenConfig){\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.genericContractCall(idleTokenConfig.token,'getGovTokensAmounts',[account]);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.genericContractCall(idleTokenConfig.token,'govTokens',[govTokenIndex]);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCall(tokenConfig.idle.token, 'fee');\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce( (totalTVL,tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()){\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    },this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens:{},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(tokenConfig)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply,18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL,token,tokenConfig,isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (govTokenBalance && govTokenConversionRate){\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance,govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()){\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply){\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply,18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL,token,oldTokenConfig,isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()){\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint,false,config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length>0){\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey,latestFeed,endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAggregatedStats = async (addGovTokens=true) => {\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','tvls']);\n    const tvls = await this.makeCachedRequest(endpointInfo.endpoint,endpointInfo.TTL,true,false,config);\n\n    if (tvls){\n      const avgAPY = this.BNify(tvls.avgAPY);\n      const totalAUM = this.BNify(tvls.totalTVL);\n      return {\n        avgAPY,\n        totalAUM\n      };\n    } else {\n      return await this.getAggregatedStats_chain();\n    }\n  }\n  getAggregatedStats_chain = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n\n  getAvgAPYStats = async (address,isRisk,startTimestamp=null,endTimestamp=null) => {\n\n    const apiResults = await this.getTokenApiData(address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    if (apiResults && apiResults.length){\n      const apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate,18);\n        return sum.plus(idleRate);\n      },this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null,count=0) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig,tokenConfig);\n    if (!this.BNify(conversionRate).isNaN()){\n      return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n    }\n\n    if (count<3){\n      return await this.getTokenConversionRate(tokenConfig,isRisk,conversionRateField,count+1); \n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenData && tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001) && tokenData.length>0){\n          const protocolInfo = tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) );\n          if (protocolInfo){\n            const protocolScore = this.BNify(protocolInfo.defiScore);\n            if (!protocolScore.isNaN()){\n              tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n            }\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = await this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.scores;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config);\n\n    if (scores && scores.length>0){\n      let tokenData = scores.find( s => s.address.toLowerCase() === tokenConfig.address.toLowerCase() );\n      if (tokenData){\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)){\n          // Set cached data\n          return this.setCachedData(cachedDataKey,tokenScore);\n        // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now()/1000);\n          const startTimestamp = parseInt(timestamp)-(60*60*24);\n          tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n          const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n          if (filteredTokenData.length){\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle){\n      // console.log('getTokenAprs - !tokenConfig.idle',tokenConfig);\n      return tokenAprs;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgApr && !this.BNify(cachedData.avgApr).isNaN()) && (cachedData.avgApy && !this.BNify(cachedData.avgApy).isNaN()) ){\n      // console.log('getTokenAprs - CACHED',tokenConfig.idle.token,cachedData);\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    const Aprs = await this.getAprs(tokenConfig.idle.token);\n\n    if (!Aprs){\n      // console.log('getTokenAprs - !Aprs',Aprs);\n      return tokenAprs;\n    }\n\n    if (!tokenAllocation){\n      tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    }\n\n    if (!tokenAllocation){\n      // console.log('getTokenAprs - !tokenAllocation',tokenAllocation);\n      return tokenAprs;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n\n    const govTokensAprs = {};\n    const protocolsAprs = {};\n    const protocolsApys = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const protocolAddr = protocolInfo.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        let protocolApr = this.BNify(+this.toEth(aprs[addrIndex]));\n        let protocolApy = this.apr2apy(protocolApr.div(100)).times(100);\n\n        if (addGovTokens){\n          let govTokenAPR = null;\n          const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n          await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n            switch (govToken){\n              case 'COMP':\n                govTokenAPR = await this.getCompAPR(tokenConfig.token,tokenConfig);\n              break;\n              case 'stkAAVE':\n                govTokenAPR = await this.getStkAaveApr(tokenConfig.token,tokenConfig);\n              break;\n              default:\n              break;\n            }\n            if (govTokenAPR){\n              govTokensAprs[govToken] = govTokenAPR;\n            }\n          });\n          \n        }\n\n        protocolsApys[protocolAddr] = protocolApy;\n        protocolsAprs[protocolAddr] = protocolApr;\n      }\n    });\n\n    if (tokenAllocation){\n      tokenAprs.avgApr = this.getAvgApr(protocolsAprs,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n      tokenAprs.avgApy = this.getAvgApr(protocolsApys,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n\n      Object.values(govTokensAprs).forEach( govTokenAPR => {\n        tokenAprs.avgApr = tokenAprs.avgApr.plus(govTokenAPR);\n        tokenAprs.avgApy = tokenAprs.avgApy.plus(govTokenAPR);\n      });\n\n      // console.log('getTokenAprs',tokenConfig.idle.token,tokenConfig,aprs,protocolsAprs,tokenAllocation,tokenAprs,govTokensAprs);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()){\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()){\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber(value,decimals=3,maxPrecision=5,minPrecision=0){\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver:false\n  }\n\n  setMouseOver(mouseOver){\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      border:1,\n      boxShadow:1,\n      borderRadius:2,\n      borderColor:null,\n      position:'relative',\n      minHeight:'initial',\n      backgroundColor:'cardBg'\n    };\n\n    if (isActive || (isInteractive && this.state.mouseOver)){\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            <FieldComponent\n                              {...this.props}\n                              fieldInfo={fieldInfo}\n                              colProps={colInfo.props}\n                              parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            />\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034','1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    alert:'#ff9900',\n    arrowActive:'#d8d8d8',\n    arrowInactive:'#4f4f4f',\n    selectBgFocused:'#1e3657',\n    selectBg:'#162e4d',\n    backButtonBg:'#162e4d',\n    lineChartStroke:'#a4aec6',\n    wrongNetworkBannerBg:'#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link:'#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#162e4d',\n    menuBg:'#162e4d',\n    menuHover:'#1e3657',\n    flashColor:'#bac5ff',\n    cardBgHover:'#1e3657',\n    cardBorder:'#0d2034',\n    pageActive:'#d8d8d8',\n    pageInactive:'#4f4f4f',\n    menuRightBorder:'#0d2034',\n    cardHoverShadow:'0px 0px 0px 1px rgb(45 74 114)',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.SafeAppConnector = SafeAppConnector;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async isSafeApp() {\n    if (this.provider){\n      return await this.provider.isSafeApp();\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura).forEach((networkId,index) => {\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: globalConfigs.network.providers.infura[defaultNetwork]+env.REACT_APP_INFURA_KEY\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  const buttons = basicConnectorsName.map(connectorName => {\n\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      await this.props.context.setFirstValidConnector(['Infura']);\n      this.props.setConnector('Infura',null);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\nimport { TerminalHttpProvider, SourceType } from '@terminal-packages/sdk';\n\nrequire('dotenv').config();\nconst INFURA_KEY = process.env[\"REACT_APP_INFURA_KEY\"];\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        await this.props.clearCachedData(() => {\n          this.checkNetwork();\n        });\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n  }\n\n  componentDidMount = async () => {\n    this.initSimpleID();\n\n    // this.functionsUtil.customLog('RimbleWeb3 componentDidMount');\n    this.initWeb3();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    if (customAddressChanged){\n      this.initAccount();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n    // console.log('networkChanged',JSON.stringify(prevState.network),JSON.stringify(this.state.network),networkChanged);\n    if (networkChanged){\n      this.setState({\n        contracts:[],\n        contractsInitialized:false\n      }, () => {\n        this.initWeb3();\n        if (typeof this.props.setNetwork === 'function'){\n          this.props.setNetwork(this.state.network);\n        }\n      });\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    const metamaskProvider = await detectEthereumProvider();\n    if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n      window.ethereum = metamaskProvider;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (!networkId){\n      return false;\n    }\n\n    // console.log('initWeb3',this.state.network.current.id,this.state.network.required.id,networkId);\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(globalConfigs.network.providers.infura[networkId]+INFURA_KEY));\n\n    let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (!context.active || connectorNameChanged) {\n      // Select preferred web3 provider\n      if (connectorName && connectorNameChanged){\n        // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n        setConnectorName = connectorName;\n        await context.setConnector(connectorName);\n        // await context.setFirstValidConnector([connectorName, 'Infura']);\n        return web3;\n      }\n      /*\n      else if (setConnectorName){\n        // Catch WalletConnect unexpected disconnect and fallback to Infura\n        if (connectorName === 'WalletConnect' && connectorName === setConnectorName && last_context && last_context.active && last_context.connectorName==='WalletConnect' && !context.connectorName){\n          this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          this.functionsUtil.removeStoredItem('walletProvider');\n          this.functionsUtil.removeStoredItem('connectorName');\n          this.functionsUtil.setLocalStorage('context',JSON.stringify({active:context.active,connectorName:context.connectorName}));\n          setConnectorName = null;\n          await context.setConnector('Infura');\n          if (context.connector && typeof context.connector.disable === 'function'){\n            await context.connector.disable();\n          }\n        }\n\n        this.functionsUtil.customLog('initWeb3 skip due to setConnectorName ('+setConnectorName+') already set');\n        return web3;\n      }\n      */\n    }\n    /* else if (context.connectorName === \"WalletConnect\") {\n      if (!context.account) {\n\n        // WalletConnect already opened\n        if (document.getElementById('walletconnect-wrapper')){\n          return web3;\n        }\n\n        WalletConnectQRCodeModal.open(\n          context.connector.walletConnector.uri,\n          async () => {\n            document.getElementById('walletconnect-wrapper').remove();\n            this.props.setConnector('Infura',null);\n            await context.setConnector('Infura');\n            setConnectorName = null;\n          }\n        );\n      } else {\n        try {\n          WalletConnectQRCodeModal.close();\n        } catch {}\n      }\n    // Reset web3 if Infura\n    } */\n    /*\n    else if (context.active && (connectorName === 'Infura' || context.connectorName === \"Infura\")){\n      if (typeof web3.currentProvider.disable === 'function'){\n        await web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        await context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n    */\n\n    let web3Host = null;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n        forceCallback = true;\n      }\n    }\n\n    const terminalInfo = globalConfigs.network.providers.terminal;\n\n    if (terminalInfo && terminalInfo.enabled && terminalInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const TerminalHttpProviderParams = terminalInfo.params;\n      const terminalSourceType = localStorage && localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : SourceType.Infura;\n      TerminalHttpProviderParams.source = terminalSourceType;\n\n      if (web3Provider){\n        TerminalHttpProviderParams.customHttpProvider = web3Provider;\n      } else if (web3Host){\n        TerminalHttpProviderParams.host = web3Host;\n      }\n\n      const terminalHttpProvider = new TerminalHttpProvider(TerminalHttpProviderParams);\n      web3 = new Web3(terminalHttpProvider);\n    } else {\n      // Injected web3 provider\n      if (web3Provider){\n        web3 = new Web3(web3Provider);\n      // Infura\n      } else if (web3Host) {\n        web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n        if (connectorName !== 'Infura'){\n          this.props.setConnector('Infura',null);\n        }\n      }\n    }\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // After setting the web3 provider, check network\n      try {\n        await this.checkNetwork();\n        if (this.state.network.isCorrectNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.setState({\n              accountInizialized: true,\n              account: this.props.customAddress\n            });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(networkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                web3Infura,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            web3Infura,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          web3Infura,\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`Init contract: ${name}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`creating contract ${name} - addr: ${address}`);\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : this.state.web3;\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      });\n\n      // After account is complete, get the balance\n      this.getAccountBalance();\n\n      return false;\n    }\n\n    try {\n      if (!account){\n        const wallets = await this.state.web3.eth.getAccounts();\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account || this.state.account === account){\n        this.setState({\n          accountInizialized: true\n        });\n        return false;\n      }\n\n      // Request account access if needed\n      if (account && walletProvider !== 'Infura'){\n\n        if (walletProvider === 'Infura'){\n          this.setState({\n            accountInizialized: true,\n            account:this.props.customAddress\n          });\n          return false;\n        }\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        /*\n        // Unsubscribes to all subscriptions\n        if (this.state.web3SocketProvider && typeof this.state.web3SocketProvider.clearSubscriptions === 'function'){\n          this.functionsUtil.customLog('Clear all web3SocketProvider subscriptions');\n          this.state.web3SocketProvider.clearSubscriptions();\n        }\n\n        const networkName = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork].toLowerCase();\n        const web3SocketProvider = new Web3(new Web3.providers.WebsocketProvider(`wss://${networkName}.infura.io/ws/v3/${INFURA_KEY}`));\n\n        // Subscribe to logs\n        const addressTopic = '0x00000000000000000000000'+account.toLowerCase().replace('x','');\n\n        // Subscribe for payment methods\n        const paymentProviders = Object.keys(globalConfigs.payments.providers).filter((providerName,i) => { const providerInfo = globalConfigs.payments.providers[providerName]; return providerInfo.enabled && providerInfo.web3Subscription && providerInfo.web3Subscription.enabled  })\n        if (paymentProviders && paymentProviders.length){\n          paymentProviders.forEach((providerName,i) => {\n            const providerInfo = globalConfigs.payments.providers[providerName];\n\n            this.functionsUtil.customLog(`Subscribe to ${providerName} logs`);\n\n            // Subscribe for deposit transactions\n            web3SocketProvider.eth.subscribe('logs', {\n                address: [account,providerInfo.web3Subscription.contractAddress],\n                topics: [null,[addressTopic]]\n            }, function(error, result){\n              \n            })\n            .on(\"data\", async (log) => {\n              this.functionsUtil.customLog(providerName,'logs',log);\n\n              if (log){\n                const txHash = log.transactionHash;\n                const subscribedTransactions = this.state.subscribedTransactions;\n                const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n                this.functionsUtil.customLog(providerName,txHash,walletAddressFound);\n\n                if (!subscribedTransactions[txHash] && walletAddressFound.length){\n                  const decodedLogs = web3SocketProvider.eth.abi.decodeLog(providerInfo.web3Subscription.decodeLogsData,log.data,log.topics);\n\n                  this.functionsUtil.customLog(providerName,txHash,decodedLogs);\n\n                  if (decodedLogs && decodedLogs._tokenAmount && decodedLogs._tokenAddress && decodedLogs._tokenAddress.toLowerCase() === this.props.tokenConfig.address.toLowerCase()){\n\n                    const receiptCallback = async (tx,decodedLogs) => {\n                      const tokenDecimals = await this.getTokenDecimals();\n                      const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                      const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                      const isProviderTx = tx.from.toLowerCase() === account.toLowerCase() && tx.to.toLowerCase() === providerInfo.web3Subscription.contractAddress.toLowerCase();\n\n                      if (isProviderTx){\n\n                        // Mined\n                        if (tx.blockNumber && tx.status){\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'success',\n                            message:'Deposit completed',\n                            secondaryMessage:`${providerName} sent you ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n\n                          // Update User Balance\n                          this.getAccountBalance(tokenAmount);\n                        } else {\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'processing',\n                            message:'Deposit pending',\n                            secondaryMessage:`${providerName} is sending ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n                        }\n                      }\n                    }\n\n                    let checkTransactionReceiptTimeoutID = null;\n\n                    const checkTransactionReceipt = (txHash,decodedLogs) => {\n                      if (checkTransactionReceiptTimeoutID){\n                        window.clearTimeout(checkTransactionReceiptTimeoutID);\n                      }\n                      web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                        if (!err){\n                          if (txReceipt){\n                            receiptCallback(txReceipt,decodedLogs);\n                          } else{\n                            checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                          }\n                        }\n                      });\n                    }\n\n                    checkTransactionReceipt(txHash,decodedLogs);\n\n                    subscribedTransactions[txHash] = log;\n                    this.setState({subscribedTransactions});\n                  }\n                }\n              }\n            });\n          })\n        }\n\n        // Subscribe for deposit transactions\n        web3SocketProvider.eth.subscribe('logs', {\n            address: [account,this.props.tokenConfig.address],\n            topics: [null,null,[addressTopic]]\n        }, function(error, result){\n\n        })\n        .on(\"data\", async (log) => {\n          if (log){\n            const txHash = log.transactionHash;\n            const subscribedTransactions = this.state.subscribedTransactions;\n            const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n            if (!subscribedTransactions[txHash] && walletAddressFound.length){\n              const decodedLogs = web3SocketProvider.eth.abi.decodeLog([\n                {\n                  \"internalType\": \"uint256\",\n                  \"name\": \"_tokenAmount\",\n                  \"type\": \"uint256\"\n                },\n              ],log.data,log.topics);\n\n              if (decodedLogs && decodedLogs._tokenAmount){\n\n                const receiptCallback = async (tx,decodedLogs) => {\n                  const tokenDecimals = await this.getTokenDecimals();\n                  const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                  const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                  const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                  const isDepositTokenTx = tx.to.toLowerCase() === this.props.tokenConfig.address.toLowerCase();\n\n                  if (isDepositTokenTx){\n\n                    // Mined\n                    if (tx.blockNumber && tx.status){\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit completed',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} has been deposited`,\n                        variant: \"success\",\n                      });\n\n                      // Update User Balance\n                      this.getAccountBalance(tokenAmount);\n                    } else {\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit pending',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} are on the way`,\n                        variant: \"processing\",\n                      });\n                    }\n                  }\n                }\n\n                let checkTransactionReceiptTimeoutID = null;\n\n                const checkTransactionReceipt = (txHash,decodedLogs) => {\n                  if (checkTransactionReceiptTimeoutID){\n                    window.clearTimeout(checkTransactionReceiptTimeoutID);\n                  }\n                  web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                    if (!err){\n                      if (txReceipt){\n                        receiptCallback(txReceipt,decodedLogs);\n                      } else{\n                        checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                      }\n                    }\n                  });\n                }\n\n                checkTransactionReceipt(txHash,decodedLogs);\n\n                subscribedTransactions[txHash] = log;\n                this.setState({subscribedTransactions});\n              }\n            }\n          }\n        })\n        .on(\"changed\", log => {\n          \n        });\n        */\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts']);\n    await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n      const contractInfo = contracts[contractName];\n      if (contractInfo.address !== null && contractInfo.abi !== null){\n        this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n        await this.initContract(contractName, contractInfo.address, contractInfo.abi);\n      }\n    });\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n      const govTokenConfig = govTokens[token];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      // Initialize govToken contracts\n      let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n      if (!foundGovTokenContract) {\n        this.functionsUtil.customLog('initializeContracts, init contract', token, govTokenConfig.address);\n        await this.initContract(token, govTokenConfig.address, govTokenConfig.abi);\n      }\n    });\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n\n    const networkId =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.requiredNetwork !== \"undefined\"\n        ? this.props.config.requiredNetwork\n        : globalConfigs.network.requiredNetwork;\n\n    let networkName = globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId] : 'unknown';\n\n    let requiredNetwork = {\n      name: networkName,\n      id: networkId\n    };\n\n    let network = Object.assign({},this.state.network);\n    network.required = requiredNetwork;\n\n    this.setState({ network });\n  }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network Name: \", error);\n    }\n  }\n\n  checkNetwork = async () => {\n    this.getRequiredNetwork();\n\n    await Promise.all([\n      this.getNetworkId(),\n      this.getNetworkName()\n    ]);\n\n    let network = Object.assign({},this.state.network);\n    network.isCorrectNetwork = !this.state.network.current.id || globalConfigs.network.enabledNetworks.includes(this.state.network.current.id);\n    // console.log('checkNetwork',this.state.network.current.id,network.isCorrectNetwork);\n\n    this.setState({ network });\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    CrispClient: null,\n    permitClient:null,\n    tokenDecimals:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    accountBalanceDAI: null,\n    erc20ForwarderClient:null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    accountInizialized:false,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n            <Flex\n              width={[0.5,8/12]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={\"flex-end\"}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile &&\n                  <>\n                    <Link\n                      mr={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n              }\n            </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  1337:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xc11b1268c1a384e55c48c2391d8d480264a3a7f4',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:['beta'],\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  },\n  1:{ // Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xc11b1268c1a384e55c48c2391d8d480264a3a7f4',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:['beta'],\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport { Web3Consumer } from 'web3-react';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import('../Dashboard/Dashboard'));\nconst Governance = React.lazy(() => import('../Governance/Governance'));\n\nclass App extends Component {\n  state = {\n    network:null,\n    cachedData:{},\n    buyToken: null,\n    currentEnv:null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode:'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme:theme,\n    currentSection:null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps:null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps:props\n    });\n  }\n\n  processCustomParam = (props,prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback=null) => {\n    this.functionsUtil.setLocalStorage('cachedData',{},true);\n    await this.setState({\n      cachedData:{}\n    },() => {\n      if (typeof callback === 'function'){\n        callback();\n      }\n    });\n    return true;\n  }\n\n  setCachedData = (key,data,TTL=null,useLocalStorage=false) => {\n\n    key = key.toLowerCase();\n    const cachedKeyFound = this.state.cachedData[key];\n    const currentTime = parseInt(Date.now()/1000);\n\n    const update_key = !cachedKeyFound || ( (!cachedKeyFound.expirationDate || cachedKeyFound.expirationDate>=currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key){\n      const expirationDate = TTL ? currentTime+(TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage){\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData){\n          storedCachedData = {};\n        }\n        storedCachedData = {\n          ...storedCachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        };\n        // console.log('STORED CACHE - INSERT KEY',key,data);\n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        }\n      }));\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)){\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress){\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw:false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({...state, selectedTab: tabIndex}));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : globalConfigs.network.requiredNetwork;\n\n    // console.log('loadAvailableTokens',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = Object.keys(availableTokens[requiredNetwork][strategy]).reduce( (enabledTokens,token) => {\n        const tokenConfig = availableTokens[requiredNetwork][strategy][token];\n        const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n        if (tokenConfig.enabled && envEnabled){\n          enabledTokens[token] = tokenConfig;\n        }\n        return enabledTokens;\n      },{});\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]){\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]){\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy,selectedToken){\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig:!selectedToken ? null : this.state.tokenConfig,\n      availableTokens:!selectedToken ? null : this.state.availableTokens,\n      selectedToken:!selectedToken ? selectedToken :this.state.selectedToken,\n      selectedStrategy:!selectedStrategy ? selectedStrategy :this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if ( this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase()) ){\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',newState);\n\n    await this.setState(newState,callback);\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      },callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      },callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())){\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState,callback);\n    } else if(!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig:null\n      },callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction){\n      window.console.error = () => {};\n      window.console.warn = () => {};\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage){\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version',false);\n      if (version !== globalConfigs.version){\n        this.functionsUtil.clearStoredData(['walletProvider','connectorName','themeMode']);\n        this.functionsUtil.setLocalStorage('version',globalConfigs.version);\n      }\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode',false);\n    if (themeMode){\n      this.setThemeMode(themeMode);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i=0;i<iFrames.length;i++){\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w){\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCustomAddress();\n    this.loadCurrentEnvironment();\n  }\n\n  loadCurrentEnvironment(){\n    const isLive = this.functionsUtil.checkUrlOrigin();\n    const currentEnv = isLive ? 'live' : 'beta';\n    this.setState({\n      currentEnv\n    },() => {\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress(){\n    if (!this.state.customAddress){\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom'){\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress){\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged){\n      if (this.state.currentSection === 'landing'){\n        this.setThemeMode('light',false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode',false) || this.functionsUtil.getGlobalConfig(['dashboard','theme','mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged){\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage){\n      const connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      const walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      this.setConnector(connectorName,walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width:this.state.width,\n      height:this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged){\n      if (widthChanged){\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged){\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  // Optional parameters to pass into RimbleWeb3\n  config = globalConfigs.network;\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e){\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken:null,\n      buyModalOpened:false\n    });\n  }\n\n  openBuyModal(e,buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened:true\n    });\n  }\n\n  async logout(){\n    // Reset Custom Address\n    this.setState({\n      customAddress:null\n    });\n    // Reset Localstorage\n    this.functionsUtil.clearStoredData(['version','themeMode','lastLogin']);\n  }\n\n  setNetwork(network){\n    this.setState({\n      network\n    });\n  }\n\n  setConnector(connectorName,walletProvider){\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider){\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    if ( (connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if ( connectorName === 'Injected' ){\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider){\n        case 'Metamask':\n          if (!hasMetamask && hasDapper){\n            walletProvider = 'Dapper';\n          }\n        break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask){\n            walletProvider = 'Metamask';\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    },() => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode,store=true){\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard','theme','darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled){\n      themeMode = 'light';\n    }\n\n    switch (themeMode){\n      default:\n      case 'light':\n        selectedTheme = theme;\n      break;\n      case 'dark':\n        selectedTheme = themeDark;\n      break;\n    }\n\n    if (store){\n      this.functionsUtil.setLocalStorage('themeMode',themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection){\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize:4,\n            fontWeight:2\n          }}\n          loaderProps={{\n            mb:3,\n            size:'80px',\n            color:'primary'\n          }}\n          flexProps={{\n            my:3,\n            flexDirection:'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer>\n              {context => {\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    config={this.config}\n                    connectors={connectors}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper\n                      }) => {\n                        return (\n                        <Box>\n                          <Switch>\n                            <Route\n                              path=\"/dashboard/:section?/:param1?/:param2?\"\n                              render={\n                                (props) => \n                                  <Suspense\n                                    fallback={SuspenseLoader}\n                                  >\n                                    <Dashboard\n                                      {...props}\n                                      web3={web3}\n                                      modals={modals}\n                                      network={network}\n                                      context={context}\n                                      account={account}\n                                      isDashboard={true}\n                                      initWeb3={initWeb3}\n                                      biconomy={biconomy}\n                                      isMobile={isMobile}\n                                      simpleID={simpleID}\n                                      contracts={contracts}\n                                      initAccount={initAccount}\n                                      permitClient={permitClient}\n                                      initSimpleID={initSimpleID}\n                                      initContract={initContract}\n                                      transactions={transactions}\n                                      buyToken={this.state.buyToken}\n                                      logout={this.logout.bind(this)}\n                                      accountBalance={accountBalance}\n                                      themeMode={this.state.themeMode}\n                                      theme={this.state.selectedTheme}\n                                      validateAccount={validateAccount}\n                                      connecting={this.state.connecting}\n                                      cachedData={this.state.cachedData}\n                                      setToken={this.setToken.bind(this)}\n                                      accountValidated={accountValidated}\n                                      getTokenDecimals={getTokenDecimals}\n                                      rejectValidation={rejectValidation}\n                                      tokenConfig={this.state.tokenConfig}\n                                      getAccountBalance={getAccountBalance}\n                                      accountBalanceLow={accountBalanceLow}\n                                      accountInizialized={accountInizialized}\n                                      selectedToken={this.state.selectedToken}\n                                      connectorName={this.state.connectorName}\n                                      setStrategy={this.setStrategy.bind(this)}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountBalanceToken={accountBalanceToken}\n                                      initializeContracts={initializeContracts}\n                                      walletProvider={this.state.walletProvider}\n                                      buyModalOpened={this.state.buyModalOpened}\n                                      erc20ForwarderClient={erc20ForwarderClient}\n                                      contractsInitialized={contractsInitialized}\n                                      openBuyModal={this.openBuyModal.bind(this)}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      handleMenuClick={this.selectTab.bind(this)}\n                                      setConnector={this.setConnector.bind(this)}\n                                      setThemeMode={this.setThemeMode.bind(this)}\n                                      availableTokens={this.state.availableTokens}\n                                      closeBuyModal={this.closeBuyModal.bind(this)}\n                                      setCachedData={this.setCachedData.bind(this)}\n                                      selectedStrategy={this.state.selectedStrategy}\n                                      userRejectedValidation={userRejectedValidation}\n                                      clearCachedData={this.clearCachedData.bind(this)}\n                                      setStrategyToken={this.setStrategyToken.bind(this)}\n                                      accountValidationPending={accountValidationPending}\n                                      availableStrategies={this.state.availableStrategies}\n                                      setCurrentSection={this.setCurrentSection.bind(this)}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      contractMethodSendWrapper={contractMethodSendWrapper}\n                                      setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                    />\n                                  </Suspense>\n\n                              }\n                            >\n                            </Route>\n                            {\n                              governanceEnabled && \n                                <Route\n                                  path=\"/governance/:section?/:item_id?\"\n                                  render={\n                                    (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Governance\n                                          {...props}\n                                          web3={web3}\n                                          modals={modals}\n                                          network={network}\n                                          context={context}\n                                          account={account}\n                                          initWeb3={initWeb3}\n                                          biconomy={biconomy}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          isGovernance={true}\n                                          contracts={contracts}\n                                          initAccount={initAccount}\n                                          initSimpleID={initSimpleID}\n                                          initContract={initContract}\n                                          transactions={transactions}\n                                          buyToken={this.state.buyToken}\n                                          logout={this.logout.bind(this)}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          validateAccount={validateAccount}\n                                          connecting={this.state.connecting}\n                                          cachedData={this.state.cachedData}\n                                          setToken={this.setToken.bind(this)}\n                                          accountValidated={accountValidated}\n                                          getTokenDecimals={getTokenDecimals}\n                                          rejectValidation={rejectValidation}\n                                          tokenConfig={this.state.tokenConfig}\n                                          getAccountBalance={getAccountBalance}\n                                          accountBalanceLow={accountBalanceLow}\n                                          accountInizialized={accountInizialized}\n                                          selectedToken={this.state.selectedToken}\n                                          connectorName={this.state.connectorName}\n                                          setStrategy={this.setStrategy.bind(this)}\n                                          userRejectedConnect={userRejectedConnect}\n                                          accountBalanceToken={accountBalanceToken}\n                                          initializeContracts={initializeContracts}\n                                          walletProvider={this.state.walletProvider}\n                                          buyModalOpened={this.state.buyModalOpened}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          rejectAccountConnect={rejectAccountConnect}\n                                          handleMenuClick={this.selectTab.bind(this)}\n                                          setConnector={this.setConnector.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          availableTokens={this.state.availableTokens}\n                                          closeBuyModal={this.closeBuyModal.bind(this)}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          selectedStrategy={this.state.selectedStrategy}\n                                          userRejectedValidation={userRejectedValidation}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          setStrategyToken={this.setStrategyToken.bind(this)}\n                                          accountValidationPending={accountValidationPending}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          contractMethodSendWrapper={contractMethodSendWrapper}\n                                          setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        />\n                                      </Suspense>\n                                  }\n                                >\n                                </Route>\n                            }\n                            <Route>\n                              <Header\n                                modals={modals}\n                                network={network}\n                                context={context}\n                                account={account}\n                                initWeb3={initWeb3}\n                                isMobile={isMobile}\n                                contracts={contracts}\n                                initAccount={initAccount}\n                                initContract={initContract}\n                                buyToken={this.state.buyToken}\n                                accountBalance={accountBalance}\n                                logout={this.logout.bind(this)}\n                                validateAccount={validateAccount}\n                                connecting={this.state.connecting}\n                                accountValidated={accountValidated}\n                                getTokenDecimals={getTokenDecimals}\n                                rejectValidation={rejectValidation}\n                                tokenConfig={this.state.tokenConfig}\n                                getAccountBalance={getAccountBalance}\n                                accountBalanceLow={accountBalanceLow}\n                                selectedToken={this.state.selectedToken}\n                                connectorName={this.state.connectorName}\n                                userRejectedConnect={userRejectedConnect}\n                                accountBalanceToken={accountBalanceToken}\n                                walletProvider={this.state.walletProvider}\n                                buyModalOpened={this.state.buyModalOpened}\n                                contractsInitialized={contractsInitialized}\n                                openBuyModal={this.openBuyModal.bind(this)}\n                                rejectAccountConnect={rejectAccountConnect}\n                                handleMenuClick={this.selectTab.bind(this)}\n                                setConnector={this.setConnector.bind(this)}\n                                availableTokens={this.state.availableTokens}\n                                closeBuyModal={this.closeBuyModal.bind(this)}\n                                userRejectedValidation={userRejectedValidation}\n                                accountValidationPending={accountValidationPending}\n                                connectAndValidateAccount={connectAndValidateAccount}\n                                setToken={ e => { this.setToken(e) } }\n                              />\n\n                              {this.state.route === \"onboarding\" ? (\n                                <Web3Debugger\n                                  web3={web3}\n                                  account={account}\n                                  accountBalance={accountBalance}\n                                  accountBalanceToken={accountBalanceToken}\n                                  accountBalanceLow={accountBalanceLow}\n                                  initAccount={initAccount}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountValidated={accountValidated}\n                                  accountValidationPending={accountValidationPending}\n                                  rejectValidation={rejectValidation}\n                                  userRejectedValidation={userRejectedValidation}\n                                  validateAccount={validateAccount}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  modals={modals}\n                                  network={network}\n                                  transaction={transaction}\n                                />\n                              ) : null}\n\n                              {this.state.route === \"default\" ? (\n                                <Switch>\n                                  <Route exact path=\"/\"\n                                    render={ (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Landing\n                                          {...props}\n                                          web3={web3}\n                                          network={network}\n                                          account={account}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          contracts={contracts}\n                                          initContract={initContract}\n                                          innerWidth={this.state.width}\n                                          logout={this.logout.bind(this)}\n                                          innerHeight={this.state.height}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          cachedData={this.state.cachedData}\n                                          connecting={this.state.connecting}\n                                          selectedTab={this.state.selectedTab}\n                                          tokenConfig={this.state.tokenConfig}\n                                          accountBalanceLow={accountBalanceLow}\n                                          getAccountBalance={getAccountBalance}\n                                          customAddress={this.state.customAddress}\n                                          selectedToken={this.state.selectedToken}\n                                          accountBalanceToken={accountBalanceToken}\n                                          closeToastMessage={this.closeToastMessage}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          processCustomParam={this.processCustomParam}\n                                          availableTokens={this.state.availableTokens}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          updateSelectedTab={this.selectTab.bind(this)}\n                                          toastMessageProps={this.state.toastMessageProps}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          setToken={ e => { this.setToken(e) } }\n                                        />\n                                        <CookieConsent\n                                          expires={365}\n                                          buttonText={\"Ok\"}\n                                          location={\"bottom\"}\n                                          acceptOnScroll={true}\n                                          cookieName={\"cookieAccepted\"}\n                                          acceptOnScrollPercentage={5}\n                                          style={{background: \"rgba(255,255,255,0.95)\",zIndex:'9999999'}}\n                                          buttonStyle={{display: isMobile ? \"block\" : \"none\", backgroundColor:'#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\"}}\n                                        >\n                                          <Flex flexDirection={'row'} alignItems={['flex-start','center']} justifyContent={'flex-start'} maxHeight={['150px','initial']} style={ isMobile ? {overflowY:'scroll'} : null }>\n                                            <Image display={['none','block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                            <Text pl={[0,3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                              This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                              You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                            </Text>\n                                          </Flex>\n                                        </CookieConsent>\n                                      </Suspense>\n                                    }\n                                  ></Route>\n                                  <Route exact path=\"/terms-of-service\">\n                                    <Tos />\n                                  </Route>\n                                  <Route>\n                                    <PageNotFound />\n                                  </Route>\n                                </Switch>\n                              ) : null}\n                            </Route>\n                          </Switch>\n                          <TransactionToastUtil\n                            transactions={transactions}\n                            themeMode={this.state.themeMode}\n                          />\n                        </Box>\n                      )}}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens[token];\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                return (\n                  <ImageButton\n                    caption={token}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    imageSrc={`images/tokens/${token}.svg`}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  maxWidth={ this.props.showInline ? '35em' : 'initial' }\n                  width={ (this.props.showInline && !this.props.isMobile) ? 0.72 : 1 }\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={`images/tokens/${token}.svg`} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.notion.so/idlelabs/Idle-Finance-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n"],"sourceRoot":""}