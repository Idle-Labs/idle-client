{"version":3,"sources":["ChartCustomTooltipRow/ChartCustomTooltipRow.js","RoundButton/RoundButton.js","PageNotFound/PageNotFound.module.scss","utilities/components/ShortHash.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","ExtLink/ExtLink.js","SmartNumber/SmartNumber.js","CustomTooltip/CustomTooltip.js","AllocationChart/AllocationChart.js","CustomTooltip/CustomTooltipRow.js","PortfolioEquity/PortfolioEquity.js","ChartCustomTooltip/ChartCustomTooltip.js","TxProgressBar/TxProgressBar.js","theme.js","TableCellHeader/TableCellHeader.module.scss","TransactionListFilters/TransactionListFilters.module.scss","utilities/components/ModalCard.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","utilities/components/Header.module.scss","AssetSelector/AssetSelector.js","GenericSelector/GenericSelector.js","Tos/Tos.module.scss","TransactionField/TransactionField.js","CardIconButton/CardIconButton.js","Title/Title.js","GenericChart/GenericChart.js","DashboardCard/DashboardCard.module.scss","FastBalanceSelector/FastBalanceSelector.js","Staking/Staking.js","TokenSwap/TokenSwap.js","SendTxWithBalance/SendTxWithBalance.js","LpStaking/LpStaking.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","CustomField/CustomField.js","CustomList/CustomList.js","PortfolioDonut/PortfolioDonut.js","TotalEarningsCounter/TotalEarningsCounter.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","TotalBalanceCounter/TotalBalanceCounter.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","configs/globalConfigs.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","TableRow/TableRow.js","TableHeader/TableHeader.js","IconBox/IconBox.js","Migrate/Migrate.js","ExecuteTransaction/ExecuteTransaction.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","colors.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","utilities/components/BuyModal.js","ConnectBox/ConnectBox.js","utilities/components/ModalCard.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js","ImageButton/ImageButton.js","FlexLoader/FlexLoader.js","AssetField/AssetField.js"],"names":["ChartCustomTooltipRow","prevProps","prevState","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","mb","width","alignItems","flexDirection","pr","style","flexBasis","flex","justifyContent","this","props","color","mr","height","borderRadius","backgroundColor","fontSize","fontWeight","textAlign","textTransform","label","whiteSpace","dangerouslySetInnerHTML","__html","value","Component","RoundButton","buttonProps","Object","assign","boxShadow","mainColor","react__WEBPACK_IMPORTED_MODULE_6___default","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","onClick","handleClick","children","module","exports","headerContainer","headerBgFiller","bgContainer","list","textContainer","ShortHash","state","text","functionsUtil","setProps","FunctionsUtil","loadUtils","loadData","resolveAddress","shortenHash","hash","getENSName","ensName","setState","loader","size","display","LoadingSpinner","react_default","index_es","className","styles","mx","ButtonLoader","isLoading","src_LoadingSpinner_LoadingSpinner","buttonText","TransactionListFilters","maxWidth","minWidth","maxHeight","isOpened","activeFilters","status","assets","actions","setFilter","filter","_this","objectSpread","defineProperty","applyFilters","toggle","arguments","length","undefined","toggleOpened","resetFilter","resetFilters","_this2","top","zIndex","position","DashboardCard","cardProps","py","px","transition","isInteractive","cursor","isMobile","name","overflow","mt","borderTop","concat","theme","colors","divider","keys","filters","map","filterCategory","filterValues","key","TableCellHeader","pb","toUpperCase","filterValue","filterLabel","isChecked","my","checked","radioBtn","onChange","e","Text","ml","values","v","filterName","hoverColor","TransactionsList","page","prevTxs","txsPerPage","loading","totalTxs","totalPages","deposit","redeem","send","receive","migrate","swap","swapout","withdraw","completed","pending","failed","renderedTxs","processedTxs","lastBlockNumber","processTxs","availableActions","action","toLowerCase","txsIndexes","tx","parseFloat","token","includes","sort","b","timeStamp","Math","ceil","forEach","i","selectedToken","tokenConfig","availableTokens","decimals","min","date","Date","getTxAction","parsedValue","tokenAmount","amount","toFixed","momentDate","strToMoment","push","preventDefault","max","loadTxs","transactionsChanged","JSON","stringify","transactions","enabledTokens","count","account","firstBlockNumber","getGlobalConfig","enabledActions","getEtherscanTxs","etherscanTxs","hashKey","lastTx","pop","blockNumber","parseInt","_this3","_this4","hasActiveFilters","m","FlexLoader","flexProps","minHeight","loaderProps","textProps","id","pt","src_TransactionListFilters_TransactionListFilters","bind","TableHeader","cols","index","txHash","txHashKey","TableRow","rowProps","transaction","window","open","getEtherscanTransactionUrl","rowId","cardId","fieldComponent","TransactionField","prevPage","nextPage","h3","fontFamily","ExtLink","target","rel","SmartNumber","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","maxPrecision","minPrecision","p","showUnit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unit","unitProps","CustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","point","left","data","itemPos","xFormatted","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","componentUnmounted","setStateSafe","newState","callback","getTokenAllocation","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","onMouseLeave","tooltipFormat","sliceLabel","radialLabel","tooltip","container","inline","background","cardBg","labels","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","margin","right","bottom","protocols","protocolInfo","protocolName","protocolAddr","address","protocolAllocationPercParsed","times","globalConfigs","stats","hsl","join","capitalize","protocolIcon","icon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","src","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","CustomTooltipRow","react__WEBPACK_IMPORTED_MODULE_5___default","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","componentDidMount","mobileChanged","themeModeChanged","themeMode","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","BNify","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","currentDate","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","_context4","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","chartToken","conversionRate","isSameOrAfter","isSameOrBefore","formattedDate","format","frequencySeconds","_loop","aggregatedBalances","x","y","balances","itemIndex","item","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","daysCount","daysFrequency","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","legendPosition","tickValues","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","ChartCustomTooltip","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","TxProgressBar","error","ended","percentage","processing","txTimestamp","initialized","estimatedTime","remainingTime","_callee","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","_context","initProgressBar","getTransaction","Promise","_ref3","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","customLog","web3","eth","err","_x","_x2","abrupt","getBlockTime","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","endMessage","waitText","span","renderRemainingTime","loadingMessage","sendingMessage","href","cancelTransaction","cancelTextColor","cancelTextHoverColor","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","fontSizes","fontWeights","letterSpacings","lineHeights","solid","title","copy","serif","counter","space","radii","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","disabled","primary","blue","base","gradient-bg","primary-light","light","primary-dark","dark","bgBlue","dark-blue","skyBlue","lightBlue","copyColor","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","link","menuBg","menuHover","flashColor","menuRightBorder","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","boost","curvein","default","curveout","curvedepositin","curvedepositout","actionBg","blacks","whites","zIndices","messageStyle","shade","tint","success","green","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","bg","button","gradientButton","empty","select","selectDark","input","AssetSelector","options","defaultValue","CustomOptionValue","CustomValueContainer","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","fieldInfo","showCustomField","cachedData","setCachedData","showBalance","selectProps","indexOf","innerProps","loadComponents","selectedTokenChanged","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","isSearchable","changeToken","GenericSelector","optionsChanged","defaultValueChanged","componentsChanged","ControlComponent","menuIsOpen","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","CustomIndicatorSeparator","CustomMenu","CustomInputContainer","searchInput","searchInputHidden","CustomOption","selectedValue","o","genericSelector","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","loadField","hashChanged","accountChanged","output","bgColor","fieldProps","textOverflow","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","align","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_12__","border","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","tokenSymbol","iconSrc","CardIconButton","isActive","image","imageProps","useIconOnly","iconColor","iconProps","iconBgColor","Title","lineHeight","HeadingComponent","component","Heading","h1","GenericChart","addEventListener","handleWindowSizeChange","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","loaderText","defaultOpacity","hidden","interactive","rainbow","FastBalanceSelector","onMouseDown","replaceArrayProps","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","Staking","contractInfo","selectedOption","toolProps","contract","initContract","abi","reduce","enabled","SelectedComponent","AssetField","selectToken","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","baseToken","regenerator_default","selectDestToken","getGlobalConfigs","paymentProvider","providerInfo","initProps","buttonId","initParams","getInitParams","render","sendGoogleAnalyticsEvent","eventCategory","eventAction","eventLabel","remoteResources","url","j","split","scriptID","script","remoteResourceParams","precall","readyState","onreadystatechange","onload","async","parentElement","appendChild","head","stylesheetId","loadTokens","asyncToGenerator","getContractByName","fromTokenChanged","destTokenChanged","loadKyberWidget","SendTxWithBalance","inputValue","txSucceeded","permitEnabled","showPermitBox","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","tokenBalance","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","lte","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","eventData","getTransactionError","transactionHash","enableERC20","executeTx","_amount","callbackReceipt","contractName","params","signedParameters","_params","methodName","methodParams","normalizeTokenAmount","eventValue","signPermit","getPermitTransactionParams","getTransactionParams","contractMethodSendWrapper","approveCallback","actionChanged","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","approveEnabled","contractChanged","tokenConfigChanged","checkTokenApproved","viewOnly","connectorName","IconBox","infoBox","steps","step","stepIndex","description","required","togglePermitEnabled","balanceSelectorInfo","placeholder","approveDescription","ConnectBox","LpStaking","globalStats","balanceProp","statsLoaded","stakedBalance","rewardMultiplier","accountingData","selectedAction","successMessage","poolTokenPrice","rewardTokenPrice","tokenWrapperProps","distributionSpeed","transactionSucceeded","showTokenWrapperEnabled","updateData","selectedActionChanged","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","apy","rewardToken","normalizedInputValue","genericContractCall","unstakeRewards","toBN","expiry","r","s","integerValue","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","now","programDuration","utc","initialLockedShares","durationSec","tokensPerSecond","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","console","log","stakedTokensLog","txReceipt","logs","_this5","topics","t","replace","stakedTokens","unstakedTokensLog","unstakedTokens","rewardTokenConfig","receivedRewardsLog","receivedRewards","DAITokenConfig","getSushiswapPoolTokenPrice","getSushiswapConversionRate","getTokenBalance","startContract","wrapMethod","destContract","unwrapMethod","_this6","loadStats","_this7","StatsCard","titleProps","titleParentProps","isStake","isUnstake","isStats","txAction","poolLink","statInfo","ImageButton","caption","imageSrc","setAction","src_SendTxWithBalance_SendTxWithBalance","flexWrap","IdleStaking","lockPeriods","lockedEnd","lockExpired","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributorConfig","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minDate","add","mDate","maxDate","isAfter","currTime","endDate","endDateTime","_d","maxDateTime","stkIDLEAmount","_value","_unlock_time","getIdleStakingRewardsTxs","getTokenTotalSupply","getContractBalance","getContractEvents","fromBlock","toBlock","provider","etherscanRewardsTxs","tokenTotalSupply","totalSupply","tokenUserBalance","lockedInfo","claimable","claimableRewards","claimEvents","checkpointEvents","depositEvents","totalClaimed","event","claimedAmount","returnValues","userDeposited","stakeStartTime","stakedTime","depositTimestamp","ts","depositValue","latestCheckpoint","lastCheckpointTime","time","stakePeriod","currentProfit","apr","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","_this8","isLock","isClaim","isIncrease","canIncrease","borderBottom","reward","setIncreaseAction","changelockPeriodInput","selectLockPeriod","ExecuteTransaction","parentProps","Button","componentProps","getIncreaseTimeParams","contractApprovedCallback","NexusMutual","1","2","3","amountValue","periodValue","quoteResponse","changeAmount","changePeriod","makeRequest","textDecoration","activeColor","changeSelectedToken","getQuote","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","getETHBalance","mintLog","mintedAmount","withdrawLog","withdrawnAmount","fullWidth","connectAndValidateAccount","CustomField","funcProps","CustomComponent","componentHasChildren","fieldType","fieldPath","path","customValue","getArrayPath","row","Image","Icon","customFieldName","customFieldProps","CustomList","rows","rowIndex","PortfolioDonut","totalFunds","parentWidth","selectedTokenConfig","loadPortfolio","portfolio","idle","getIdleTokenPrice","convertTokenBalance","getGovTokensUserBalances","govTokensUserBalances","govToken","govTokenBalance","tokenPercentage","tokenColorHsl","round","radialLabelsLinkOffset","itemWidth","itemHeight","translateY","symbolSize","anchor","direction","itemTextColor","symbolShape","effects","on","strategyIcon","convertToken","Fragment","TotalEarningsCounter","earningsEnd","earningsStart","loadTotalEarnings","contractsInitialized","availableStrategies","counterStyle","oldState","getAccountPortfolio","totalEarnings","totalAmountLent","avgAPY","build_default","delay","decimal","separator","useEasing","duration","end","start","formattingFn","n","countUpRef","ref","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","90","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","amountDeposited","avgBuyPrice","idleTokenPrice","earningsPerc","tokenAPY","tokenAprs","earningsPercStep","possibleSteps","maxPossibleStep","getAmountDeposited","getAvgBuyPrice","slicedToArray","getTokenAprs","avgApr","avgApy","maxCountStep","orderedTokensEarnings","estimationStep","option","setEstimationStepsPerc","tokenIndex","tokenEarnings","estimationStepPerc","finalEarnings","cursorPerc","tokenIcon","tokenRGBColor","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","gte","pl","src_TotalEarningsCounter_TotalEarningsCounter","estimationLabel","DashboardIconButton","TotalBalanceCounter","counterEnd","counterStart","StrategyPage","tokensToMigrate","aggregatedValues","activeCoverages","depositedTokens","remainingTokens","batchedDeposits","portfolioLoaded","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","portfolioEquityQuickSelection","availableTokensChanged","getActiveCoverages","getBatchedDeposits","getTokensToMigrate","c","statusColors","statusIcon","statusColor","portfolioCoverage","totalBalance","statusIconProps","batchInfo","strategy","deposited","batchDeposits","redeemable","batchRedeems","avgScore","totalBalanceWithScore","_ref4","_ref5","tokenScore","amountLentToken","tokenWeight","getTokenScore","getGovTokensUserTotalBalance","govTokensTotalBalance","govTokensUserBalance","govTokensTotalBalanceTooltip","govTokens","apyLong","riskScore","yieldFarming","batchDepositConfig","coverProtocolConfig","placement","message","src_TotalBalanceCounter_TotalBalanceCounter","totalEarningsPerc","src_PortfolioDonut_PortfolioDonut","aligItems","setPortfolioEquityQuickSelection","getFrequencySeconds","AssetsList","fields","mobile","goToSection","route","h4","desc","showTooltip","showDirection","toolName","toolIndex","toolConfig","src_DashboardIconButton_DashboardIconButton","src_CustomList_CustomList","fileClaimUrl","openWindow","src_EarningsEstimation_EarningsEstimation","textSize","BatchDeposit","canClaim","batchTotals","canDeposit","execute","claim","usePermit","lastExecution","hasDeposited","permitSigned","currBatchIndex","batchCompleted","claimSucceeded","componentLoaded","executeSucceeded","migrationEnabled","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","urlParams","param2","executeSucceededChanged","callbackExecute","callbackReceiptExecute","migrationContract","migrationContractInfo","getBatchedDepositExecutions","batchExecutions","functions","functionInfo","nonceMethod","permitContract","methods","batchIndex","batchTotal","batchRedeem","batchDeposit","batchDepositInfo","depositEnabled","availableStrategiesKeys","_ref6","strategyConfig","selectStrategy","obj","baseTokenConfig","strategyAvailableTokens","oldContract","migrateFunction","migration","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","openTooltipModal","isDisabled","Migrate","showActions","getTokenPrice","isMigrationTool","showBalanceSelector","migrationIcon","migrationParams","toMigrate","callbackPermit","migrationText","minPoolSize","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","collateral","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","pow","expirationTimestamp","balancerTokenConfig","tokens","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","coverages","expirationDate","selectCoverage","coverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","BuyModal","showInline","availableMethods","buyToken","TokenMigration","changeFromToken","convertTool","tokenInfo","destTokenConfig","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","_ref7","DeployB2BVesting","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","inputs","loadContracts","validateForm","checkInputs","vesterImplementation","contracts","getContractPastEvents","proxyCreated","deployedContractsAddresses","implementation","proxy","contractAddress","owner","recipient","vestingPeriod","availableBalance","depositAmounts","totalDeposited","total","claimedTokensLog","returnString","fieldPattern","RegExp","inputIndex","inputInfo","getPatternByFieldType","inputValid","match","actionValue","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","events","ProxyCreated","ownerAddress","recipientAddress","initData","encodeParameters","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","pattern","inputChange","getEtherscanAddressUrl","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","claimCallback","env","process","appName","version","baseURL","forumURL","darkModeEnabled","betaURL","countries","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","errorsEnabled","messagesEnabled","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","custom","newsletterSubscription","endpoint","messages","scoreShort","apyShort","cheapRedeem","curveBonusSlippage","directMint","performanceFee","govTokenApr","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","curveInstructions","analytics","google","debugEnabled","addPostfixForTestnet","pageView","modals","first_deposit_referral","first_deposit_share","welcome","frequency","dashboard","baseRoute","mode","governance","test","startBlock","tokenName","availableContracts","IDLE","FeeTreasury","PriceOracle","GovernorAlpha","EcosystemFund","IdleController","proposals","7","delegates","n_coins","imageInactive","rates","poolContract","CurvePool","depositContract","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","coinIndex","idleUSDCYield","idleUSDTYield","permit","DAI","EIPVersion","USDC","SLP","showAUM","showAPR","protocol","showPrice","aprTooltipMode","distributionMode","distributionFrequency","disabledTokens","COMP","stkAAVE","aToken","addressForPrice","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","SushiswapRouter","SushiV2Router02","UniswapRouter","UniswapV2Router02","BalancerExchangeProxy","zeroExInstant","orderSource","assetData","affiliateInfo","feeRecipient","feePercentage","strategies","best","comingSoon","addGovTokens","titlePostfix","iconName","govTokensEnabled","chartColor","iconInactive","iconInactiveDark","descLong","descShort","risk","new","TTL","tvls","substack","scores","config","headers","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","endTimestamp","startTimestamp","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","rgb","hex","chart","labelTextColorModifiers","performanceTooltip","USD","USDT","TUSD","SUSD","WBTC","WETH","RAI","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","permitType","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","network","availableNetworks","4","42","1337","isForked","requiredNetwork","blocksPerYear","secondsPerYear","requiredConfirmations","enabledNetworks","accountBalanceMinimum","providers","infura","ens","supportedNetworks","etherscan","endpoints","baseUrl","snapshot","whitelist","urls","biconomy","enableLogin","disabledWallets","limits","debug","apiKey","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","apiId","simpleID","getNetwork","networkId","networkName","appOrigin","location","origin","appId","renderNotifications","notifications","tools","stake","subComponent","stkIDLE","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","b2bVesting","visible","B2BVester","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","permitName","batchMigration","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","oldAddresses","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","directProps","showAllTokens","insurance","ETH","tokenSwap","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","payments","bank","defaultProvider","showDefaultOnly","card","wallet","wyre","captionPos","supportedMethods","supportedCountries","supportedTokens","envParams","accountId","prod","getInfo","selectedMethod","buyParams","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","innerHTML","body","wyreStyle","ramp","badge","hostAppName","userAddress","hostApiKey","REACT_APP_RAMP_KEY","variant","hostLogoUrl","swapAsset","RampInstantSDK","t0","getAccountBalance","getTokenDecimals","payload","purchase","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fee","selectedCountry","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","onSuccess","onClose","tokenParams","RimbleWeb3_context","chainId","connector","ethereum","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","internalType","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","IdleGovToken","classCallCheck","getBalance","claimRewards","getPriorVotes","priorVotes","_args3","refreshIdleSpeed","getUnclaimedTokens","getAPR","IDLETokenConfig","cachedDataKey","APR","idleDistribution","tokenAllocation","tokenPool","idleDistributedPerYearUSD","_args6","getDistribution","getUniswapConversionRate","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","totalSpeed","_args10","_context10","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","getUserPoolShare","_x7","fixDistributionSpeed","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","idleGovToken","trimEth","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","childNodes","nodeValue","BNify_obj","BigNumber","String","_len","Array","_key","moment","customLogError","_console","_len2","_key2","normalizeSimpleIDNotification","str","arr1","arr2","stripHtml","html","tmp","textContent","innerText","scrollTo","to","scrollY","change","currentTime","easeInOutQuad","animateScroll","val","getQueryStringParameterByName","results","exec","decodeURIComponent","depositProxyContractInfo","migrationContractAddr","migrationContractOldAddrs","batchMigrationContractAddr","isMigrationTx","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","shortHash","txStart","txEnd","ensConfig","addressCheck","current","checkAddress","currentProvider","ENS","ensAddress","getEnsAddress","getName","getAddress","orderedTokensBalance","_args4","totalBalanceConverted","tokenBalanceConverted","getCurveAvgSlippage","processedHashes","curveTokensBalance","curveTxs","avgSlippage","_args5","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","getCurveAvgBuyPrice","prevAvgBuyPrice","_args7","idleTokensBalance","getFirstDepositTx","deposits","_args8","firstDepositTx","asyncTimeout","ms","getDepositTimestamp","firstDepositTxs","_args9","acc","userAvgPrice","getAmountLent","amountLents","_args11","getEtherscanBaseTxs","endBlockNumber","firstIdleBlockNumber","etherscanInfo","etherscanBaseTxs","etherscanBaseEndpoint","etherscanApiUrl","lastCachedTx","lastCachedBlockNumber","etherscanEndpointLastBlock","latestTxs","latestBlockNumbers","txs","requestCount","requestStatus","cachedRequests","REACT_APP_ETHERSCAN_KEY","getCachedRequest","result","makeCachedRequest","filterEtherscanTxs","toConsumableArray","saveEtherscanTxs","_callee13","_args13","_context13","filterCurveTxs","txsToStore","cachedRequest","saveCachedRequest","_callee14","_ref19","allAvailableTokens","_args14","_context14","processStoredTxs","_ref20","_callee15","_args15","_context15","_ref21","_callee16","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args16","_context16","tokenMigrationToolParams","curveTokenConfig","idleToken","internalTxs","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenDecimal","tokenValue","newValue","iTxs","withdrawnValue","processEtherscanTransactions","addStoredTransaction","txKey","tokenKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref22","_callee21","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args21","_context21","baseTokenAddress","_ref23","_callee20","minedTxs","_context20","_ref24","_callee19","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context19","getCurveTokenPrice","t1","_ref25","_callee17","_context17","getTransactionReceipt","_x12","_x13","baseTokensConfig","t2","_ref26","_callee18","_context18","_x14","_x15","_x10","_x11","_x9","_ref27","_callee27","txsToProcess","_args27","_context27","_ref28","_callee26","_context26","_ref29","_callee25","isStoredTx","allowedMethods","pendingStatus","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context25","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","method","created","_ref30","_callee22","_context22","_x20","_x21","_ref31","_callee23","_context23","_x22","_x23","raw","_ref32","_callee24","_context24","_x24","_x25","decodeLog","_token","_x18","_x19","_x17","_x16","alias","getCustomAddress","setCustomAddress","customAddress","_ref33","_callee28","error_callback","_args28","_context28","catch","_x26","makeEtherscanApiRequest","_ref34","_callee29","apiKeyIndex","_args29","_context29","_x27","_ref35","_callee30","return_data","_args30","_context30","_x28","code","errorCode","array","prop","shift","configs","checkUrlOrigin","checkUrlBeta","sendGoogleAnalyticsPageview","_callee31","googlePageviewInfo","isOrigin","_args31","_context31","ga","_ref37","_callee33","googleEventsInfo","originOk","currentNetwork","_args33","_context33","_ref38","_callee32","_context32","hitCallback","hitCallbackFail","_x30","_x31","_x29","createContract","_ref39","_callee34","_context34","Contract","_x32","_x33","_x34","getWalletProvider","simpleIDPassUserInfo","userInfo","email","initSimpleID","passUserInfo","baseurl","decimalCount","thousands","abs","negativeSign","Number","getSnapshotProposals","_callee37","activeOnly","validProposals","_args37","_context37","getCachedData","addr","msg","_ref41","_callee36","checkedStrategies","_context36","metadata","_ref42","_callee35","_context35","symbol","_x36","_x35","_ref43","_callee38","forceStartTimestamp","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args38","_context38","_x37","_ref44","_callee39","_context39","_x38","aprs","allocations","aprWeighted","allocation","quantity","hour","day","week","_callee40","idleTokenConfig","etherscanEndpoint","etherscanTxlist","_context40","getProtocolInfoByAddress","ROUND_FLOOR","normalizeTokenDecimals","normalizedTokenDecimals","exchangeRate","checkContractPaused","_callee41","contractPaused","_args41","_context41","parse_json","return_default","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeStoredItem","removeItem","setItem","checkRebalance","_ref47","_callee43","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context43","lastAllocationsPromise","_ref48","_callee42","lastAllocations","_context42","_x40","_x41","alloc","_x39","checkMigration","_ref49","_callee44","oldContractBalance","oldContractTokenDecimals","oldContractBalanceFormatted","oldContractName","_context44","_x42","_x43","_ref50","_callee45","eventName","_args45","_context45","_x44","_x45","estimateMethodGasUsage","_ref51","_callee46","_contract$methods","functionCall","gasLimit","_ref52","_ref53","_args46","_context46","getGasPrice","estimateGas","_x46","_x47","_ref54","_callee47","callback_receipt","_contract$methods2","_context47","once","confirmationNumber","receipt","_x48","_x49","_x50","_x51","_x52","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref55","_callee48","biconomyInfo","res","_context48","x-api-key","_x53","sendTxWithPermit","_ref56","_callee49","_contract$methods3","messageToSign","_this$getSignaturePar","_context49","encodeABI","_address","personal","sign","_x54","_x55","_x56","_x57","_x58","_x59","buildBiconomyErc20ForwarderTx","_ref57","_callee50","tokenAddress","callData","_context50","erc20ForwarderClient","buildTx","txGas","_x60","_x61","_x62","_x63","_x64","sendBiconomyTxWithErc20Forwarder","_ref58","_callee51","req","metaInfo","txResponse","fetchReceiptIntervalId","_context51","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x65","_x66","_x67","_x68","sendBiconomyTxWithPersonalSign","_ref59","_callee52","_this$getSignaturePar2","_context52","getNonce","call","_x69","_x70","_x71","_x72","signPermitEIP2612","_ref60","_callee53","erc20Name","spender","deadline","domain","domainData","_context53","getChainId","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x73","_x74","_x75","_x76","_x77","_x78","_x79","_x80","_ref61","_callee54","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","_args54","_context54","net","getId","allowed","response","_x81","_x82","_x83","_ref62","_callee55","permitParams","methodAbi","useNonce","_args55","_context55","_jsonInterface","f","unshift","_x84","_x85","_x86","_x87","_x88","_x89","_x90","sendSignedTx","_ref63","_callee56","MetaTransaction","dataToSign","_context56","_x91","_x92","_x93","_x94","_x95","_ref64","_callee57","contractAddr","walletAddr","_ref65","_ref66","allowance","_context57","getAllowance","_x96","_x97","_x98","_ref67","_callee58","_context58","_x99","_x100","_x101","txData","disableERC20","toTwosComplement","loadAssetField","_ref68","_callee59","field","addCurveApy","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref69","_ref70","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref71","_ref72","amountLentCurve1","redeemableBalanceCurve","_ref73","_ref74","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref75","_ref76","amountLent1","redeemableBalance1","_idleGovToken","govTokenConfig","blocksPerDay","blocksPerWeek","blocksPerMonth","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref77","_ref78","tokenPriceFirstDeposit","_ref79","_ref80","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref81","_ref82","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref83","_ref84","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref85","_ref86","amountLentCurve2","redeemableBalanceCurve1","_ref87","_ref88","redeemableBalance2","_args59","_context59","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getUserTokenFees","t8","t9","getGovTokenUserBalance","_x102","_x103","_x104","_x105","getIdleTokenSupply","_ref89","_callee60","idleTokenSupply","_args60","_context60","_x106","getIdleTokenPriceWithFee","_ref90","_callee61","_ref91","_ref92","priceWFee","_args61","_context61","eq","_x107","_x108","_ref93","_callee62","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args62","_context62","_x109","clearCachedData","useLocalStorage","_ref94","_callee63","_ref95","_ref96","idleTokensTotalSupply","userShare","_context63","_x110","_x111","_callee65","_args65","_context65","_ref98","_callee64","coverageTokens","protocolImage","_context64","_x112","_ref99","_callee66","_context66","_x113","_callee68","filter_by_status","_args68","_context68","_ref101","_callee67","_ref102","_ref103","_context67","_x114","_ref104","_callee69","fixDecimals","_args69","_context69","_x115","_ref105","_callee70","_ref106","_ref107","_args70","_context70","_x116","_x117","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","attr","isValidJSON","_ref108","_callee71","_args71","_context71","_x118","_ref109","_callee72","_args72","_context72","_x119","_x120","getProtocolBalance","_ref110","_callee73","_context73","_x121","_x122","getAprs","_ref111","_callee74","_context74","addresses","_x123","genericIdleCall","_ref112","_callee75","callParams","_args75","_context75","_x124","_ref113","_callee76","_contract$methods4","_args76","_context76","_x125","_x126","getTxDecodedLogs","_ref114","_callee78","logAddr","decodeLogs","internalTransfers","_context78","_ref115","_callee77","_context77","_x131","_x132","_x127","_x128","_x129","_x130","blocksToSeconds","blocks","blocksPerSeconds","getBlockNumber","_callee79","_context79","_ref117","_callee80","_args80","_context80","getPastEvents","_x133","_x134","_ref118","_callee81","_contract$methods5","_args81","_context81","_x135","_x136","_ref119","_callee82","_args82","_context82","_x137","_x138","apr2apy","getUnlentBalance","_ref120","_callee83","unlentBalance","_context83","_x139","_ref121","_callee84","_args84","_context84","_x140","_ref122","_callee86","protocolsAprs","exchangeRates","protocolsBalances","govTokensBalances","_args86","_context86","totalAllocationConverted","totalAllocationWithUnlentConverted","_ref123","_callee85","_ref124","_ref125","protocolBalance","protocolAllocation","_context85","_x142","_x143","protocolAllocationPerc","getGovTokensBalances","getTokenConversionRate","_x141","getUniswapConversionRate_path","_ref126","_callee87","one","unires","_context87","_x144","_ref127","_callee88","pairAddresses","_ref128","_ref129","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref130","_ref131","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","_context88","_x145","_x146","_ref132","_callee89","tokenConfigFrom","tokenConfigDest","WETHAddr","_context89","_x147","_x148","_ref133","_callee90","_context90","_x149","_x150","getCurveDepositedTokens","_ref134","_callee91","idleTokensBalances","remainingCurveTokens","_args91","_context91","_x151","getCurveUnevenTokenAmounts","_ref135","_callee92","amounts","max_burn_amount","unevenAmounts","_context92","getCurveDepositContract","_x152","_x153","_callee93","curveRatesInfo","_context93","strategyTokens","getCurveAPYContract","_callee94","blocksForPrevTokenPrice","_ref138","_ref139","prevTokenPrice","blocksMultiplier","curveAPR","_context94","getCurveTokenSupply","_callee95","_context95","getCurvePoolContract","_callee96","_args96","_context96","_callee97","_args97","_context97","_ref143","_callee98","_ref144","_ref145","_context98","_x154","_callee99","depositContractInfo","_context99","getCurveZapContract","_callee100","zapContractInfo","_context100","_callee101","poolContractInfo","_context101","getCurveSwapContract","_callee102","_context102","getCurveIdleTokensAmounts","_callee104","max_slippage","curveTokenSupply","curveTokenShare","_args104","_context104","_ref151","_callee103","curveIdleTokens","_context103","_x155","getCurveTokensAmounts","_callee106","useCoinIndex","_args106","_context106","_ref153","_callee105","_ref154","_ref155","totalTokenSupply","_context105","_x156","getCurveAmounts","_ref156","_callee108","_args108","_context108","_ref157","_callee107","_context107","_x159","_x157","_x158","getCurveTokenAmount","_ref158","_callee109","_args109","_context109","_x160","getCurveSlippage","_ref159","_callee110","uneven_amounts","_ref160","_ref161","virtualPrice","Sv","_args110","_context110","_x161","_x162","_ref162","_callee111","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","aaveIncentivesController_address","IAaveIncentivesController_name","_ref163","_ref164","aTokenTotalSupply","aaveAllocationPerc","aaveSpeed","aavePoolShare","_args111","_context111","_x163","_callee113","_args113","_context113","_ref166","_callee112","_ref167","_ref168","_context112","_x164","getStkAaveApr","_ref169","_callee114","aaveConversionRate","stkAaveAPR","stkAaveValue","_args114","_context114","_x165","_x166","getCompAPR","_ref170","_callee115","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args115","_context115","_x167","_x168","getCompSpeed","_ref171","_callee116","cTokenAddress","compSpeed","_context116","_x169","_ref172","_callee117","cTokenInfo","compoundAllocationPerc","_ref173","_ref174","cTokenTotalSupply","compoundPoolShare","_args117","_context117","_x170","_callee119","_args119","_context119","_ref176","_callee118","_ref177","_ref178","_context118","_x171","_callee121","_args121","_context121","_ref180","_callee120","_ref181","_ref182","compApr","_context120","_x172","getTokensCsv","_callee124","csv","_context124","prototype","sum","pv","cv","avg","_ref184","_callee123","_context123","_ref185","_callee122","header","aprAvg","scoreAvg","lastRow","_context122","protocolsData","p1","foundProtocol","p2","rate","idleRate","score","idleScore","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","_x174","_x173","_callee126","_args126","_context126","_ref187","_callee125","compTokenBalance","_context125","_x175","getTokenGovTokens","speed","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref188","_callee128","govTokensUserDistribution","_args128","_context128","_ref189","_callee127","_context127","_x177","_x176","getGovTokensDistributionSpeed","_ref190","_callee130","govTokensDistribution","tokenGovTokens","_args130","_context130","_ref191","_callee129","govSpeed","_context129","_x179","_x178","getGovTokensAprs","_ref192","_callee132","govTokensAprs","_args132","_context132","_ref193","_callee131","_ref194","_ref195","_ref196","_ref197","cTokenConfig","_context131","_x182","_x180","_x181","_callee134","_args134","_context134","_ref199","_callee133","tokenConversionRate","fromTokenConfig","_context133","_x183","getGovTokenConfigByAddress","_callee135","checkShowBalance","govTokensEarnings","_args135","_context135","govTokenAmount","getGovTokensIndexes","_ref201","_callee137","govTokensAmounts","_context137","_ref202","_callee136","govTokenIndex","govTokenAddress","_context136","_x186","_x187","_x184","_x185","_callee140","govTokenConfigForced","_args140","_context140","_ref204","_callee139","_context139","_ref205","_callee138","_context138","_x189","_x190","_x188","getTokenFees","_callee141","_args141","_context141","_callee142","_ref208","_ref209","gain","fees","_args142","_context142","_ref210","_callee143","_args143","_context143","_x191","getTotalTVL","_callee144","tokensTVL","_context144","getTokensTVL","totalTVL","tokenTVL","_callee148","_context148","_ref213","_callee147","_context147","_ref214","_callee146","oldTokenTVL","idleTokenName","_ref215","_ref216","oldTokenConfig","_ref220","_ref221","oldTokenPrice","oldTotalSupply","_context146","_ref217","_callee145","_ref218","_ref219","govTokenConversionRate","govTokenBalanceConverted","_context145","_x194","oldProtocols","oldProtocol","protocolPos","_x193","_x192","getSubstackLatestFeed","_callee149","endpointInfo","idleSubstackFeed","latestFeed","_context149","items","getAggregatedStats","_callee150","totalAUM","_args150","_context150","getAggregatedStats_chain","_callee154","avgAPR","_args154","_context154","_ref225","_callee153","_context153","_ref226","_callee152","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context152","_ref227","_callee151","_ref228","_ref229","_context151","_x197","_x196","_x195","getTokenApy","_ref230","_callee155","_context155","_x198","_callee158","_args158","_context158","_ref232","_callee157","_context157","_ref233","_callee156","_ref234","_context156","_x200","_x199","getProtocolsTokensBalances","_callee160","tokenBalances","minTokenBalance","protocolsTokens","_args160","_context160","_ref236","_callee159","tokenContract","_context159","_x201","_ref237","_callee161","_args161","_context161","_x202","_x203","_x204","getAvgAPYStats","_ref238","_callee162","apiResults","_args162","_context162","_x205","_x206","_ref239","_callee163","_conversionRate","_args163","_context163","_x207","_x208","_ref240","_callee164","_ref241","_ref242","_context164","protocolScore","getTokenScoreApi","_x209","_x210","_ref243","_callee165","_context165","_x211","_x212","_ref244","_callee168","Aprs","protocolsApys","idleGovTokenShowAPR","idleAPR","_args168","_context168","_ref245","_callee167","addrIndex","protocolApr","protocolApy","govTokenAPR","_context167","_ref246","_callee166","_context166","_x216","_x214","_x215","_x213","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","mouseOver","isVisible","isRainbow","active","onMouseOut","setMouseOver","onMouseOver","Tos","h2","listStyle","Footer","theme_dark","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","possibleConstructorReturn","getPrototypeOf","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","defaultNetwork","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","REACT_APP_INFURA_KEY","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","WrongNetworkBanner","React","NetworkUtil","isCorrectNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","bold","isOpen","ModalCard","closeFunc","closeModal","Body","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","Header","subtitle","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","walletProvider","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","splice","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","componentDidUpdate","resetModal","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","contrastColor","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","INFURA_KEY","RimbleTransactionContext","createContext","web3Infura","permitClient","accountBalance","initWeb3","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","accountInizialized","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","tokenChanged","availableStrategiesChanged","gnosisSafeLoaded","setNetwork","metamaskProvider","connectorNameChanged","web3Host","web3Provider","forceCallback","web3Callback","originalWeb3","biconomyWeb3Provider","detectEthereumProvider","Web3","HttpProvider","library","web3Injected","callbackAfterLogin","setCallbackAfterLogin","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","$crisp","notificationId","content","Sentry","increaseAmount","_ref15","balanceOf","determineAccountLowBalance","openConnectionModal","getRequiredNetwork","getNetworkId","getNetworkName","getNetworkType","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args24","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","constant","outputs","payable","stateMutability","anonymous","indexed","ERC20","govTokensDisabled","defiPrime","IdleTokenV4","cToken","yToken","iToken","CHAI","skipMintForDeposit","enabledEnvs","crToken","fToken","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","then","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","innerWidth","innerHeight","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","_args","cachedKeyFound","storedCachedData","widthChanged","heightChanged","tabIndex","envEnabled","loadAvailableTokens","warn","jQuery","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCustomAddress","loadCurrentEnvironment","strategyChanged","networkChanged","hasMetamask","store","themeDark","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","RimbleWeb3","needsPreflight","react_router","react","fallback","isDashboard","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","ready","registration","unregister","FieldComponent","colInfo","colIndex","fieldIndex","colProps","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","tokenApproved","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","useMetaTx","_skipRebalance","_migrationContract$me","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","txStatus","getTransactionParamsAsync","sendRawTransaction","ExecuteComponent","react__WEBPACK_IMPORTED_MODULE_9___default","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_11__","progressBarProps","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","footer","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","VariationNumber","IconDirection","iconSize","iconPos","loading-dots","loading-dots--dot","dot-keyframes","selectedProvider","availableProviders","renderPaymentMethod","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","goBack","componentWillMount","getProviderInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","providerSupportToken","defaultPaymentProvider","selectProvider","ethAvailable","tokenAvailable","selectMethod","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","countryCode","methodInfo","loadAvailableMethods","InnerComponent","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","noOptionsMessage","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_11__","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_9__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","iconHeight","subtitleProps","BackButton","currYear","getFullYear","columnWidth","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle","fieldName","earningsCounter","feesStart","feesEnd","earningsCurveStart","earningsCurveEnd","tokenAPY2","tokenAPR","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","aprChartData","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","poolSize","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","random","aprChartRowElement","$aprChartRowElement","lineWidth","defs","linearGradientDef","offset","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","fieldChanged","contractInitialized","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","icon1","tooltipProps","icon2","strategyName","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","react_countup__WEBPACK_IMPORTED_MODULE_11___default","_ref11","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","governanceTokenName","tooltipMode","buttonLabel","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__","formattedValue","_isBigNumber"],"mappings":"wwfAGMA,qdAMqBC,EAAUC,kMAKjC,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEC,GAAI,EACJC,MAAO,EACPC,WAAY,SACZC,cAAe,OAEfP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEK,GAAI,EACJC,MAAO,CACLC,UAAU,IACVC,KAAK,WAEPL,WAAY,SACZM,eAAgB,cAGdC,KAAKC,MAAMC,OACXf,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEa,GAAI,EACJX,MAAO,OACPY,OAAQ,OACRC,aAAc,MACdC,gBAAiBN,KAAKC,MAAMC,QAIhCf,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEiB,SAAU,EACVC,WAAY,EACZC,UAAW,OACXP,MAAO,YACPN,MAAO,CACLc,cAAc,eAGfV,KAAKC,MAAMU,QAGhBxB,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEM,MAAO,CACLC,UAAU,IACVC,KAAK,WAEPL,WAAY,SACZM,eAAgB,YAEhBZ,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEiB,SAAU,EACVC,WAAY,EACZN,MAAO,WACPO,UAAW,QACXb,MAAO,CACLgB,WAAW,UAEbC,wBAAyB,CACvBC,OAAQd,KAAKC,MAAMc,kBAnEGC,aA6ErBhC,+lulIC7ETiC,mLAEF,IAAMC,EAAcC,OAAOC,OAAO,CAChC5B,MAAM,EACNe,SAAS,EACTC,WAAW,EACXJ,OAAO,OACPiB,UAAU,KACVhB,aAAa,EACbiB,UAAU,QACVtB,KAAKC,MAAMiB,aAEb,OACGK,EAAAnC,EAAAC,cAACmC,EAAA,EAADL,OAAAC,OAAA,GACKF,EADL,CAECO,QAASzB,KAAKC,MAAMyB,cAEnB1B,KAAKC,MAAM0B,iBAjBMX,aAuBXC,miGCzBfW,EAAAC,QAAA,CAAkBC,gBAAA,sCAAAC,eAAA,qCAAAC,YAAA,kCAAAC,KAAA,2BAAAC,cAAA,i0iCCGZC,6MAEJC,MAAQ,CACNC,KAAK,QAIPC,cAAgB,gFAGVtC,KAAKsC,cACPtC,KAAKsC,cAAcC,SAASvC,KAAKC,OAEjCD,KAAKsC,cAAgB,IAAIE,IAAcxC,KAAKC,4JAK9CD,KAAKyC,YACLzC,KAAK0C,gMAGkBzD,EAAUC,mEACjCc,KAAKyC,yQAICE,GAA+C,IAA9B3C,KAAKC,MAAM0C,eAC9BN,EAAOrC,KAAKsC,cAAcM,YAAY5C,KAAKC,MAAM4C,OACrCF,kCAAuB3C,KAAKsC,cAAcQ,WAAW9C,KAAKC,MAAM4C,oDAAQ,aAAlFE,UAGJV,EAAOU,GAET/C,KAAKgD,SAAS,CACZX,6IAKF,IAAMY,EAAU9D,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQ4D,KAAK,SAC7B,OAAOlD,KAAKoC,MAAMC,KAAOlD,EAAAC,EAAAC,cAACC,EAAA,EAAD6B,OAAAC,OAAA,CAAM+B,QAAS,UAAcnD,KAAKC,OAAQD,KAAKoC,MAAMC,MAAeY,SAzCzEjC,aA6CTmB,0HC1BAiB,mLAfX,OACEC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE7D,WAAY,SACZM,eAAgB,UAEhBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAKC,UAAW,CAACC,IAAO,kBACtBH,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAKC,UAAW,CAACC,IAAO,sBAAuBC,GAAI,CAAC,EAAE,KACtDJ,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAKC,UAAW,CAACC,IAAO,sBAAuBC,GAAI,CAAC,EAAE,KACtDJ,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAKC,UAAW,CAACC,IAAO,sBAAuBC,GAAI,CAAC,EAAE,cAVnCzC,aCCvB0C,mLAEF,OACGL,EAAAjE,EAAAC,cAACiE,EAAA,EAADnC,OAAAC,OAAA,CACCK,QAASzB,KAAKC,MAAMyB,aACf1B,KAAKC,MAAMiB,aAEhBmC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM5D,cAAe,SAAUD,WAAY,SAAUM,eAAgB,UACnEsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM9D,MAAO,EAAG2D,QAAUnD,KAAKC,MAAM0D,UAAY,OAAS,QACxDN,EAAAjE,EAAAC,cAACuE,EAAD,OAEFP,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM9D,MAAO,EAAG2D,QAAUnD,KAAKC,MAAM0D,UAAY,OAAS,QACvD3D,KAAKC,MAAM4D,qBAZG7C,aAoBZ0C,uOCyPAI,6MA3Qb1B,MAAQ,CACN2B,SAAS,GACTC,SAAS,IACTC,UAAU,IACVC,UAAS,EACTC,cAAc,CACZC,OAAO,KACPC,OAAO,KACPC,QAAQ,SAIZC,UAAY,SAACC,EAAOzD,GAClB0D,EAAKzB,SAAS,SAAC9D,GAAD,MAAgB,CAC5BiF,cAAchD,OAAAuD,EAAA,EAAAvD,CAAA,GACTjC,EAAUiF,cADFhD,OAAAwD,EAAA,EAAAxD,CAAA,GAEVqD,EAAQzD,UAKf6D,aAAe,WAAiB,IAAhBC,IAAgBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GACS,oBAA5BL,EAAKxE,MAAM2E,cACpBH,EAAKxE,MAAM2E,aAAaH,EAAKrC,MAAM+B,eAEjCU,GACFJ,EAAKQ,kBAITC,YAAc,SAACV,GACbC,EAAKzB,SAAS,SAAC9D,GAAD,MAAgB,CAC5BiF,cAAchD,OAAAuD,EAAA,EAAAvD,CAAA,GACTjC,EAAUiF,cADFhD,OAAAwD,EAAA,EAAAxD,CAAA,GAEVqD,EAAQ,SAEV,WACDC,EAAKG,cAAa,QAItBO,aAAe,WAAiB,IAAhBN,IAAgBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAC9BL,EAAKzB,SAAS,CACZmB,cAAc,CACZC,OAAO,KACPC,OAAO,KACPC,QAAQ,OAEV,WACuC,oBAA5BG,EAAKxE,MAAMkF,cACpBV,EAAKxE,MAAMkF,eAETN,GACFJ,EAAKQ,oBAKXA,aAAe,WACbR,EAAKzB,SAAS,SAAC9D,GAAD,MAAgB,CAC5BgF,UAAWhF,EAAUgF,qFAIhB,IAAAkB,EAAApF,KACP,OACEqD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/D,GAAI,EACJ8F,IAAK,EACL7F,MAAO,EACP8F,OAAQ,EACR5F,cAAe,SACfD,WAAY,aACZM,eAAgB,SAChBwF,SAAU,CAAC,WAAW,aAEtBlC,EAAAjE,EAAAC,cAACmG,EAAA,EAAD,CACEC,UAAW,CACTC,GAAG,EACHC,GAAG,EACHnG,MAAM,CAAC,EAAGQ,KAAKoC,MAAM8B,SAAWlE,KAAKoC,MAAM2B,SAAW/D,KAAKoC,MAAM4B,UACjEpE,MAAM,CACJgG,WAAW,2BAGfC,eAAiB7F,KAAKoC,MAAM8B,SAC5BxC,YAAe1B,KAAKoC,MAAM8B,SAA+B,KAApBlE,KAAKiF,cAE1C5B,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPI,MAAO,CACLkG,OAAO,WAETrG,WAAY,SACZC,cAAe,MACfK,eAAgB,gBAChB0B,QAAUzB,KAAKoC,MAAM8B,SAAWlE,KAAKiF,aAAe,MAEpD5B,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/C,SAAU,EACVC,WAAY,IACZN,MAAO,aAHT,WAOAmD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEpD,MAAO,YACPgD,KAAOlD,KAAKC,MAAM8F,SAAW,QAAU,QACvCC,KAAOhG,KAAKoC,MAAM8B,SAAW,QAAU,UAG3Cb,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE5D,cAAe,SACfE,MAAO,CACLqG,SAAS,SACTL,WAAW,8BACX3B,UAAUjE,KAAKoC,MAAM8B,SAAWlE,KAAKoC,MAAM6B,UAAY,IAGzDZ,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJR,GAAI,EACJlG,MAAO,EACPE,cAAe,MACfyG,UAAS,aAAAC,OAAeC,IAAMC,OAAOC,UAGnCpF,OAAOqF,KAAKxG,KAAKC,MAAMwG,SAASC,IAAI,SAACC,GACnC,IAAMC,EAAexB,EAAKnF,MAAMwG,QAAQE,GACxC,OACEtD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE5D,cAAe,SACfmH,IAAG,UAAAT,OAAYO,GACf/G,MAAO,CACLC,UAAU,IACVC,KAAK,YAGPuD,EAAAjE,EAAAC,cAACyH,EAAA,EAAD,CACEC,GAAI,EACJvG,WAAY,EACZD,SAAU,CAAC,EAAE,GACbL,MAAO,YAENyG,EAAeK,eAGhB7F,OAAOqF,KAAKI,GAAcF,IAAI,SAACO,GAC7B,IAAMC,EAAcN,EAAaK,GAC3BE,EAAY/B,EAAKhD,MAAM+B,cAAcwC,KAAkBM,EAC7D,OACE5D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE8D,GAAI,EACJ7G,SAAU,CAAC,EAAE,GACbI,MAAOuG,EACPG,QAASF,EACT5D,UAAWC,IAAO8D,SAClBT,IAAG,UAAAT,OAAYO,EAAZ,KAAAP,OAA8Ba,GACjCM,SAAW,SAAAC,GAAC,OAAIpC,EAAKb,UAAUoC,EAAeM,YAUhE5D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE5D,cAAe,OAEf2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAOmE,KAAR,CACEjH,WAAY,EACZD,SAAU,CAAC,EAAE,GACbe,UAAW,YACXG,QAASzB,KAAK4E,cAJhB,iBAQAvB,EAAAjE,EAAAC,cAACiE,EAAA,EAAOmE,KAAR,CACEC,GAAI,EACJlH,WAAY,EACZD,SAAU,CAAC,EAAE,GACbe,UAAW,YACXG,QAASzB,KAAKmF,cALhB,aAaHnF,KAAKoC,MAAM8B,UAAYlE,KAAKC,MAAMkE,eAAiBhD,OAAOwG,OAAO3H,KAAKC,MAAMkE,eAAeK,OAAQ,SAAAoD,GAAC,OAAW,OAANA,IAAc7C,OAAO,GAC7H1B,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ1G,MAAO,EACPE,cAAe,CAAC,SAAS,OACzBD,WAAY,CAAC,aAAa,YAC1BM,eAAgB,CAAC,WAAW,eAG1BoB,OAAOqF,KAAKxG,KAAKC,MAAMkE,eAAeuC,IAAI,SAACmB,GACzC,IAAMZ,EAAc7B,EAAKnF,MAAMkE,cAAc0D,GAC7C,GAAoB,OAAhBZ,EAAqB,CACvB,IAAMC,EAAc9B,EAAKnF,MAAMwG,QAAQoB,GAAYZ,GACnD,OACE5D,EAAAjE,EAAAC,cAACmG,EAAA,EAAD,CACEC,UAAW,CACTC,GAAG,EACHC,GAAG,EACHpG,GAAG,CAAC,EAAE,GACNY,GAAG,CAAC,EAAE,GACNX,MAAM,CAAC,EAAE4F,EAAKhD,MAAM4B,WAEtB6B,eAAe,EACfgB,IAAG,UAAAT,OAAYyB,IAEfxE,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPI,MAAO,CACLkG,OAAO,WAETrG,WAAY,SACZC,cAAe,MACfK,eAAgB,gBAChB0B,QAAS,SAAA+F,GAAC,OAAIpC,EAAKF,YAAY2C,KAE/BxE,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/C,SAAU,EACVC,WAAY,IACZN,MAAO,WACPN,MAAO,CACLc,cAAc,eAGfwG,GAEH7D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE0C,KAAM,QACN9F,MAAO,WACPgD,KAAOkC,EAAKnF,MAAM8F,SAAW,QAAU,YAMjD,OAAO,OAGX1C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,CAAC,EAAE,GACP3F,SAAU,CAAC,EAAE,GACbC,WAAY,CAAC,GACbN,MAAO,YACP4H,WAAY,YACZrH,UAAW,CAAC,SAAS,QACrBgB,QAAU,SAAA+F,GAAC,OAAIpC,EAAKD,cAAa,KAPnC,8BA3PuBnE,aCG/B+G,6MAEJ3F,MAAQ,CACN4F,KAAK,EACLC,QAAQ,GACRC,WAAW,EACXC,SAAQ,EACRC,SAAS,KACTC,WAAW,KACXlE,cAAc,CACZC,OAAO,KACPC,OAAO,KACPC,QAAQ,MAEVmC,QAAQ,CACNnC,QAAQ,CACNgE,QAAQ,UACRC,OAAO,SACPC,KAAK,OACLC,QAAQ,UACRC,QAAQ,UACRC,KAAK,UACLC,QAAQ,WACRC,SAAS,YAMXzE,OAAO,CACL0E,UAAU,YACVC,QAAQ,UACRC,OAAO,UAET3E,OAAO,IAET4E,YAAY,KACZC,aAAa,KACbC,gBAAgB,QAIlB7G,cAAgB,OAmChBsC,aAAe,SAAAT,GACbM,EAAKzB,SAAS,CACZmB,iBACA,WACAM,EAAK2E,kBAITjE,aAAe,WACbV,EAAKzB,SAAS,CACZmB,cAAc,CACZC,OAAO,KACPC,OAAO,KACPC,QAAQ,OAEV,WACAG,EAAK2E,kBAiGTA,WAAa,WAAe,IAAdpB,EAAclD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAT,KAEjBkD,EAAOA,GAAcvD,EAAKrC,MAAM4F,KAEhC,IAAMqB,EAAmBlI,OAAOqF,KAAK/B,EAAKrC,MAAMqE,QAAQnC,SAASoC,IAAK,SAAA4C,GAAM,OAAKA,EAAOC,gBAGlFC,EAAarI,OAAOwG,OAAOlD,EAAKrC,MAAM6F,SACvBzD,OAAO,SAAAiF,GAAE,QAAOC,WAAWD,EAAG1I,SAC9ByD,OAAO,SAAAiF,GAAE,OAC6B,OAApChF,EAAKrC,MAAM+B,cAAcC,QAAoBqF,EAAGrF,QAAUqF,EAAGrF,OAAOmF,gBAAkB9E,EAAKrC,MAAM+B,cAAcC,OAAOmF,iBAClF,OAApC9E,EAAKrC,MAAM+B,cAAcE,QAAoBoF,EAAGE,OAASF,EAAGE,MAAMJ,gBAAkB9E,EAAKrC,MAAM+B,cAAcE,OAAOkF,gBACnHE,EAAGH,QAAUD,EAAiBO,SAASH,EAAGH,OAAOC,iBAAwD,OAArC9E,EAAKrC,MAAM+B,cAAcG,SAAqBmF,EAAGH,OAAOC,gBAAkB9E,EAAKrC,MAAM+B,cAAcG,QAAQiF,iBAElLM,KAAK,SAACzK,EAAE0K,GAAH,OAAU1K,EAAE2K,UAAYD,EAAEC,WAAc,EAAI,IAGhE3B,EAAWoB,EAAWzE,OACtBsD,EAAa2B,KAAKC,KAAK7B,EAAS3D,EAAKrC,MAAM8F,YAE3CgB,EAAe,GAIrBM,EAAWU,QAAQ,SAACT,EAAIU,GACtB,IAAMC,EAAgBX,EAAGE,MACnBU,EAAc5F,EAAKxE,MAAMqK,gBAAgBF,GACzCG,EAAWP,KAAKQ,IAAIH,EAAYE,SAAS,GAEzCE,EAAO,IAAIC,KAAkB,IAAbjB,EAAGM,WACnBT,EAASG,EAAGH,OAASG,EAAGH,OAAS7E,EAAKnC,cAAcqI,YAAYlB,EAAGY,GAEnEO,EAAclB,WAAWD,EAAGoB,aAE5BC,EAASF,EAAenG,EAAKxE,MAAM8F,SAAW6E,EAAYG,QAAQ,GAAKH,EAAYG,QAAQR,GAAa,IACxGS,EAAavG,EAAKnC,cAAc2I,YAAYR,GAGlDhB,EAAGrF,OAASqF,EAAGrF,OAASqF,EAAGrF,OAAS,YACpCqF,EAAGH,OAASA,EACZG,EAAGuB,WAAaA,EAChBvB,EAAGqB,OAASA,EAERX,IAAKnC,EAAK,GAAGvD,EAAKrC,MAAM8F,YAAeiC,GAAInC,EAAK,GAAGvD,EAAKrC,MAAM8F,WAAYzD,EAAKrC,MAAM8F,YACvFgB,EAAagC,KAAKzB,KAQtBhF,EAAKzB,SAAS,CACZmF,SAHc,EAIdC,WACAC,aACAa,6FAzMElJ,KAAKsC,cACPtC,KAAKsC,cAAcC,SAASvC,KAAKC,OAEjCD,KAAKsC,cAAgB,IAAIE,IAAcxC,KAAKC,wCAIvCuH,GACHA,GACFA,EAAE2D,iBAEJ,IAAMnD,EAAOgC,KAAKoB,IAAI,EAAEpL,KAAKoC,MAAM4F,KAAK,GACxChI,KAAKgD,SAAS,CACZgF,0CAIKR,GACHA,GACFA,EAAE2D,iBAEJ,IAAMnD,EAAOgC,KAAKQ,IAAIxK,KAAKoC,MAAMiG,WAAWrI,KAAKoC,MAAM4F,KAAK,GAAGhI,KAAKoJ,WAAWpB,GAC/EhI,KAAKgD,SAAS,CACZgF,6JAKFhI,KAAKyC,YACLzC,KAAKqL,+LAuBkBpM,EAAWC,mFAClCc,KAAKyC,YACC6I,EAAsBC,KAAKC,UAAUvM,EAAUwM,gBAAkBF,KAAKC,UAAUxL,KAAKC,MAAMwL,gBAC5EF,KAAKC,UAAUvM,EAAUyM,iBAAmBH,KAAKC,UAAUxL,KAAKC,MAAMyL,kBAEvEJ,yBAClBtL,KAAKgD,SAAS,CACZgF,KAAK,EACLC,QAAQ,IACR,WACA7C,EAAKiG,+BAEA,UAEWnM,EAAU8I,OAAShI,KAAKoC,MAAM4F,MAEhDhI,KAAKoJ,0LAIKuC,8IAAqB,SAC5B3L,KAAKC,MAAM2L,kDACP,iBAGTD,EAAQA,GAAgB,EAExB3L,KAAKgD,SAAS,CACZmF,SAAQ,IAGJ0D,EAAmB7L,KAAKsC,cAAcwJ,gBAAgB,CAAC,UAAU,qBAGnE7D,iBAAcjI,KAAKoC,MAAM6F,SACzBkB,EAAkBa,KAAKoB,IAAIS,EAAiB7L,KAAKoC,MAAM+G,kBAEvDuC,EAAgB1L,KAAKC,MAAMyL,gBACRA,EAAc3G,SACnC2G,EAAgBvK,OAAOqF,KAAKxG,KAAKC,MAAMqK,kBAGnCjG,iBAAarE,KAAKoC,MAAMqE,QAAQpC,QAEtCqH,EAAcxB,QAAQ,SAACP,GACrBtF,EAAOsF,GAASA,IAGdrF,iBAActE,KAAKoC,MAAMqE,QAAQnC,UAE/ByH,EAAsD,qBAA9B/L,KAAKC,MAAM8L,eAAiC/L,KAAKC,MAAM8L,eAAiB,IAEnFhH,SACjBT,EAAU,GACVyH,EAAe7B,QAAS,SAAAZ,GACtBhF,EAAQgF,EAAOC,eAAiBD,eAITtJ,KAAKsC,cAAc0J,gBAAgBhM,KAAKC,MAAM2L,QAAQzC,EAAgB,SAASuC,kBAApGO,WAGcA,EAAalH,QAC/BkH,EAAa/B,QAAQ,SAACT,GAChBA,EAAGyC,QACLjE,EAAQwB,EAAGyC,SAAWzC,EAEtBxB,EAAO,IAAA7B,OAAKqD,EAAGM,YAAeN,KAK9B0C,EAAShL,OAAOwG,OAAOM,GAASmE,QAGxBD,EAAOE,eAAiBrM,KAAKoC,MAAM+G,iBAAmBgD,EAAOE,YAAYrM,KAAKoC,MAAM+G,mBAChGA,EAAkBmD,SAASH,EAAOE,aAAa,qBAG1CrM,KAAKgD,SAAU,SAAA9D,GAAS,MAAK,CAClC+I,UACAE,SAAQ,EACRgB,kBACA1C,QAAQtF,OAAAuD,EAAA,EAAAvD,CAAA,GACHjC,EAAUuH,QADR,CAELpC,SACAC,cAEA,WACFiI,EAAKnD,qJAgEA,IAAAoD,EAAAxM,KAEDyM,EAAmBtL,OAAOwG,OAAO3H,KAAKoC,MAAM+B,eAAeK,OAAQ,SAAAoD,GAAC,OAAW,OAANA,IAAc7C,OAAO,EAG9FmE,EAAelJ,KAAKoC,MAAM8G,aAAe/H,OAAOwG,OAAO3H,KAAKoC,MAAM8G,cAAgB,KAExF,OACE7F,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM5D,cAAe,SAAUF,MAAO,EAAGkN,EAAG,UAExC1M,KAAKoC,MAAM+F,QACT9E,EAAAjE,EAAAC,cAACsN,EAAA,EAAD,CACEC,UAAW,CACTlN,cAAc,MACdmN,UAAU7M,KAAKC,MAAMG,QAEvB0M,YAAa,CACX5J,KAAK,QAEP6J,UAAW,CACTrF,GAAG,GAELrF,KAAM,4BAGRgB,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACP+F,SAAU,WACV7F,cAAe,SACfsN,GAAI,8BACJC,GAAI,CAAC,EAAGR,EAAmB,QAAU,IAErCpJ,EAAAjE,EAAAC,cAAC6N,EAAD/L,OAAAC,OAAA,GACMpB,KAAKC,MADX,CAEEwG,QAASzG,KAAKoC,MAAMqE,QACpBtC,cAAenE,KAAKoC,MAAM+B,cAC1BgB,aAAcnF,KAAKmF,aAAagI,KAAKnN,MACrC4E,aAAc5E,KAAK4E,aAAauI,KAAKnN,SAGrCkJ,GAAgBA,EAAanE,OAC3B1B,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPE,cAAe,UAEf2D,EAAAjE,EAAAC,cAAC+N,EAAA,EAAD,CACEC,KAAMrN,KAAKC,MAAMoN,KACjBtH,SAAU/F,KAAKC,MAAM8F,WAEvB1C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE0J,GAAI,oBACJtN,cAAe,UAGbwJ,EAAaxC,IAAK,SAAC+C,EAAG6D,GACpB,IAAMC,EAAS9D,EAAG5G,KACZ2K,EAAY/D,EAAGyC,QAKrB,OACE7I,EAAAjE,EAAAC,cAACoO,EAAA,EAADtM,OAAAC,OAAA,GACMoL,EAAKvM,MADX,CAEEyN,SAAU,CACR7H,eAAc,GAEhBhD,KAAM0K,EACNI,YAAalE,EACb5C,IAAG,MAAAT,OAAQkH,GACX5L,YAbgB,SAAC8F,GACnB,OAAQ+F,EAASK,OAAOC,KAAKrB,EAAKlK,cAAcwL,2BAA2BP,IAAW,MAapFQ,MAAK,UAAA3H,OAAYoH,GACjBQ,OAAM,WAAA5H,OAAaoH,GACnBS,eAAgBC,UAM1B7K,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACElD,OAAQ,OACRX,WAAY,SACZC,cAAe,MACfK,eAAgB,WAChBiN,GAAI,gCAEJ3J,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMnD,GAAI,GACRkD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMnD,GAAI,EAAGsB,QAAU,SAAA+F,GAAC,OAAIgF,EAAK2B,SAAS3G,KACxCnE,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE0C,KAAM,oBACN9C,KAAM,MACNhD,MAAQF,KAAKoC,MAAM4F,KAAK,EAAI,cAAgB,mBAGhD3E,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM7B,QAAU,SAAA+F,GAAC,OAAIgF,EAAK4B,SAAS5G,KACjCnE,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE0C,KAAM,qBACN9C,KAAM,MACNhD,MAAQF,KAAKoC,MAAM4F,KAAKhI,KAAKoC,MAAMiG,WAAa,cAAgB,oBAItEhF,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM7D,WAAY,UAChB4D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/C,SAAU,EACVC,WAAY,EACZN,MAAO,YAHT,QAKQF,KAAKoC,MAAM4F,KALnB,OAK6BhI,KAAKoC,MAAMiG,eAM9ChF,EAAAjE,EAAAC,cAACiE,EAAA,EAAQ+K,GAAT,CAAY5N,UAAW,SAAU6N,WAAY,YAAa9N,WAAY,EAAGD,SAAU,CAAC,GAAIL,MAAO,aAA/F,sCA5Wac,aAyXhB+G,uGChYTwG,mLAGF,OACEhN,EAAAnC,EAAAC,cAACmC,EAAA,EAADL,OAAAC,OAAA,CACEoN,OAAQ,SACRC,IAAK,gCACDzO,KAAKC,OAERD,KAAKC,MAAM0B,iBATEX,aAePuN,sICdTG,6MAGJpM,cAAgB,gFAGVtC,KAAKsC,cACPtC,KAAKsC,cAAcC,SAASvC,KAAKC,OAEjCD,KAAKsC,cAAgB,IAAIE,IAAcxC,KAAKC,4JAK9CD,KAAKyC,+IAGE,IAAA2C,EAAApF,KACH2O,EAAkB,IAChBC,EAAsC,qBAAtB5O,KAAKC,MAAM2O,QAA2BC,MAAM7O,KAAKC,MAAM2O,UAAiC,IAAtB5O,KAAKC,MAAM2O,QAA0C,OAAtB5O,KAAKC,MAAM2O,OAAsC,KAApB5O,KAAKC,MAAM2O,OAE/J,GAAIA,EACF,OAAQ5O,KAAKC,MAAM6O,MACjB,IAAK,QACHH,EAAkB3O,KAAKsC,cAAcyM,YAAYH,EAAO5O,KAAKC,MAAM+O,WACrE,MACA,QACEL,EAAkB3O,KAAKsC,cAAc2M,iBAAiBL,EAAO5O,KAAKC,MAAMsK,SAASvK,KAAKC,MAAMiP,aAAalP,KAAKC,MAAMkP,mBAIxHR,EAAkB,IAGpB,IAAM/B,EAAY,CAChBpN,MAAM,EACNC,WAAW,SACXC,cAAc,MACdK,eAAe,UAIbC,KAAKC,MAAM2M,WAAazL,OAAOqF,KAAKxG,KAAKC,MAAM2M,WAAW7H,QAC5D5D,OAAOqF,KAAKxG,KAAKC,MAAM2M,WAAW1C,QAAQ,SAAAkF,GACxCxC,EAAUwC,GAAKhK,EAAKnF,MAAM2M,UAAUwC,KAIxC,IAAMC,EAA+B,MAApBV,EACXW,EAAUtP,KAAKC,MAAMqP,QAAUtP,KAAKC,MAAMqP,QAAU,QAE1D,OACEC,EAAAnQ,EAAAC,cAACmQ,EAAA,EACK5C,EAGF5M,KAAKC,MAAMwP,MAAoB,SAAZH,GAAsBD,GACvCE,EAAAnQ,EAAAC,cAACmQ,EAAA,EAASxP,KAAKC,MAAMyP,UAAY1P,KAAKC,MAAMwP,MAEhDF,EAAAnQ,EAAAC,cAACmQ,EAAA,EAASxP,KAAKC,MAAQ0O,GAErB3O,KAAKC,MAAMwP,MAAoB,UAAZH,GAAuBD,GACxCE,EAAAnQ,EAAAC,cAACmQ,EAAA,EAASxP,KAAKC,MAAMyP,UAAY1P,KAAKC,MAAMwP,cA9D9BzO,aAqEX0N,gHCrETiB,mLAGF,OACEpO,EAAAnC,EAAAC,cAACuQ,EAAA,EAAD,CACE/I,IAAK7G,KAAKC,MAAM4P,MAAM7C,GACtBvH,UAAW,CACTC,GAAG,EACHC,GAAG,EACHnG,MAAM,EACNsQ,KAAM9P,KAAKC,MAAM4P,MAAME,KAAKC,QAAQ,GAAK,QAAU,MAGrDzO,EAAAnC,EAAAC,cAACmC,EAAA,EAAD,CACEhC,MAAO,EACPE,cAAe,UAGbM,KAAKC,MAAM4P,MAAME,KAAKE,YACpB1O,EAAAnC,EAAAC,cAACmC,EAAA,EAAD,CACEjC,GAAI,EACJgB,SAAU,EACVC,WAAY,EACZN,MAAO,WACPO,UAAW,QAEVT,KAAKC,MAAM4P,MAAME,KAAKE,YAG5BjQ,KAAKC,MAAM0B,kBA7BMX,aAoCb2O,0KChCTO,6MACJ9N,MAAQ,CACN+N,UAAU,KACVC,WAAW,KACXC,cAAc,KACdC,gBAAgB,KAChBC,qBAAqB,KACrBC,yBAAyB,QAI3BlO,cAAgB,OAChBmO,oBAAqB,6EAGfzQ,KAAKsC,cACPtC,KAAKsC,cAAcC,SAASvC,KAAKC,OAEjCD,KAAKsC,cAAgB,IAAIE,IAAcxC,KAAKC,4JAK9CD,KAAKyC,6JAILzC,KAAKyQ,oBAAqB,sJAI1BzQ,KAAK0C,gMAGkBzD,EAAUC,8EACjCc,KAAKyC,YAEgBxD,EAAUmL,gBAAkBpK,KAAKC,MAAMmK,cAE1DpK,KAAK0Q,aAAa,CAChBP,UAAU,KACVC,WAAW,KACXC,cAAc,KACdC,gBAAgB,KAChBC,qBAAqB,KACrBC,yBAAyB,MACzB,WACApL,EAAK1C,aAEEzD,EAAU8G,WAAa/F,KAAKC,MAAM8F,UAC3C/F,KAAK0C,6LAIUiO,wFAASC,iCAAS,KAC9B5Q,KAAKyQ,4DACDzQ,KAAKgD,SAAS2N,EAASC,oCAEzB,2RAQG5Q,KAAKsC,cAAcuO,mBAAmB7Q,KAAKC,MAAMoK,6BAHzDiG,oBACAC,yBACAC,6BAGIJ,EAAa,CACjBU,SAAS,EACTC,SAAQ,EACRC,YAAa,EACbC,aAAa,EACbC,cAAc,GACdC,YAAa,IACbC,gBAAgB,GAChB9K,OAAO,SAAA+K,GAAC,OAAIA,EAAEnR,OACdoR,aAAa,SAACvB,EAAMvI,GAClB+E,EAAKmE,aAAa,CAChBL,cAAcN,KAGlBwB,aAAa,SAACxB,EAAMvI,GAClB+E,EAAKmE,aAAa,CAChBL,cAAc,QAGlBmB,cAAe,SAAA5J,GAAC,OAAIA,EAAE,KACtB6J,WAAY,SAAAJ,GAAC,OAAIA,EAAEtQ,MAAM,KACzB2Q,YAAa,SAAAL,GACX,OAAO,MAEThL,MAAM,CACJsL,QAAS,CACPC,UAAW5R,KAAKC,MAAM4R,OAAS,CAC7BC,WAAY9R,KAAKC,MAAMoG,MAAMC,OAAOyL,QAClC,CACF5O,QAAS,SAGb6O,OAAO,CACL3P,KAAK,CACH7B,WAAW,IACXD,SAASP,KAAKC,MAAM8F,SAAW,GAAK,GACpCuI,WAAYtO,KAAKC,MAAMoG,MAAM4L,MAAMC,YAGvCC,QAAQ,CACN9P,KAAK,CACH9B,SAAS,GACTC,WAAW,IACX8N,WAAYtO,KAAKC,MAAMoG,MAAM4L,MAAMC,aAIzCE,sBAAsB,EACtBC,sBAAsB,GACtBC,oBAAmB,EACnBC,wBAAwB,EACxBC,sBAAsB,OACtBC,sBAAsB,OACtBC,4BAA4B,EAC5BC,+BAA+B,EAC/BC,iCAAiC,EACjCC,oBAAqB7S,KAAKC,MAAM4R,OAChCiB,sBAAsB,CAAEC,KAAM,SAC9BC,YAAY,CAAED,KAAM,QAASE,UAAW,CAAE,CAAE,SAAU,MACtDC,OAAQlT,KAAKC,MAAM4R,OAAS,CAACxM,IAAI,EAAE8N,MAAM,GAAGC,OAAO,EAAEtD,KAAK,GAAM9P,KAAKC,MAAM8F,SAAW,CAAEV,IAAK,GAAI8N,MAAO,GAAIC,OAAQ,EAAGtD,KAAM,IAAO,CAAEzK,IAAK,GAAI8N,MAAO,GAAIC,OAAQ,EAAGtD,KAAM,KAGvKK,EAAY,GAElBnQ,KAAKC,MAAMoK,YAAYgJ,UAAUnJ,QAAQ,SAACoJ,EAAanJ,GACrD,IAAMoJ,EAAeD,EAAatN,KAC5BwN,EAAeF,EAAaG,QAAQlK,cAC1C,GAAIiH,EAAyBgD,GAAc,CACzC,IAAME,EAA+BhK,WAAW8G,EAAyBgD,GAAcG,MAAM,KAAK5I,QAAQ,IAC1GoF,EAAUjF,KAAK,CACb8B,GAAGwG,EACHxN,KAAKuN,EACLxS,MAAM2S,EACNxT,MAAM,OAAO0T,IAAcC,MAAMR,UAAUE,GAAcrT,MAAM4T,IAAIC,KAAK,KAAK,IAC7EpT,MAAOiT,IAAcC,MAAMR,UAAUE,GAAc5S,MAAQiT,IAAcC,MAAMR,UAAUE,GAAc5S,MAAQ4L,EAAKjK,cAAc0R,WAAWT,QAKnJvT,KAAK0Q,aAAa,CAChBP,YACAC,aACAE,kBACAC,uBACAC,iKAMF,IAAMH,IAA6C,OAA7BrQ,KAAKoC,MAAMiO,gBAA0BrQ,KAAKoC,MAAMmO,qBAAqBvQ,KAAKoC,MAAMiO,cAAcrD,MAAMhN,KAAKoC,MAAMmO,qBAAqBvQ,KAAKoC,MAAMiO,cAAcrD,IAC7KiH,EAA4C,OAA7BjU,KAAKoC,MAAMiO,cAA0BuD,IAAcC,MAAMR,UAAUrT,KAAKoC,MAAMiO,cAAcrK,OAAS4N,IAAcC,MAAMR,UAAUrT,KAAKoC,MAAMiO,cAAcrK,MAAMkO,KAAON,IAAcC,MAAMR,UAAUrT,KAAKoC,MAAMiO,cAAcrK,MAAMkO,KAAjM,GAAA9N,OAA2MpG,KAAKoC,MAAMiO,cAAcrK,KAApO,QAAkP,KAE5S,OACEuJ,EAAAnQ,EAAAC,cAAC8U,EAAA,EAAD,CACE3U,MAAO,EACP+F,SAAU,YAGRvF,KAAKoC,MAAMkO,kBAAoBtQ,KAAKC,MAAM4R,QACxCtC,EAAAnQ,EAAAC,cAAC8U,EAAA,EAAD,CACE7O,OAAQ,EACRD,IAAK,CAAC,MAAM,OACZyK,KAAM,CAAC,MAAM,OACbrP,UAAW,SACXhB,WAAY,SACZ8F,SAAU,WACV/F,MAAO,CAAC,MAAM,OACdY,OAAQ,CAAC,MAAM,OACfV,cAAe,SACfK,eAAgB,UAGdsQ,EACEd,EAAAnQ,EAAAC,cAAC8U,EAAA,EAAD,CACE3U,MAAO,EACPC,WAAY,SACZC,cAAe,SACfK,eAAgB,UAEhBwP,EAAAnQ,EAAAC,cAAC8U,EAAA,EAAD,CACE5U,GAAI,EACJC,MAAO,CAAC,QAAQ,OAChBY,OAAQ,CAAC,QAAQ,OACjBgU,IAAG,qBAAAhO,OAAuB6N,KAE5B1E,EAAAnQ,EAAAC,cAACgV,EAAA,EAAD,CACE9T,SAAU,CAAC,EAAE,GACbgK,SAAU,EACV/J,WAAY,EACZ0O,aAAc,EACdN,OAAQyB,IAEVd,EAAAnQ,EAAAC,cAAC8U,EAAA,EAAD,CACE5T,SAAU,CAAC,EAAE,GACbC,WAAY,EACZN,MAAO,aAHT,YAKYF,KAAKoC,MAAMiO,cAAc1P,QAIvC4O,EAAAnQ,EAAAC,cAAC8U,EAAA,EAAD,CACE3U,MAAO,EACPC,WAAY,SACZC,cAAe,SACfK,eAAgB,UAEhBwP,EAAAnQ,EAAAC,cAAC8U,EAAA,EAAD,CACE5U,GAAI,EACJC,MAAO,CAAC,QAAQ,OAChBY,OAAQ,CAAC,QAAQ,OACjBgU,IAAG,0BAEL7E,EAAAnQ,EAAAC,cAACgV,EAAA,EAAD,CACE3E,UAAW,CACThI,GAAG,EACHlH,WAAW,EACXD,SAAS,CAAC,EAAE,IAEdgK,SAAU,EACV/J,WAAY,EACZD,SAAU,CAAC,EAAE,GACb2O,aAAc,EACdN,OAAQ5O,KAAKoC,MAAMkO,kBAErBf,EAAAnQ,EAAAC,cAAC8U,EAAA,EAAD,CACE3T,WAAY,EACZD,SAAU,CAAC,EAAE,GACbL,MAAO,aAHT,iBAYZqP,EAAAnQ,EAAAC,cAACiV,EAAA,EAADnT,OAAAC,OAAA,CACE0N,KAAMyF,IACNC,YAAY,GACRxU,KAAKC,MACLD,KAAKoC,MAAMgO,WAJjB,CAKEL,KAAM/P,KAAKoC,MAAM+N,qBA3PGnP,aAkQfkP,wGCvQTuE,mLAGF,OACEC,EAAAtV,EAAAC,cAACsV,EAAA,EAAD,CACEpV,GAAI,EACJC,MAAO,EACPC,WAAY,SACZC,cAAe,OAEfgV,EAAAtV,EAAAC,cAACsV,EAAA,EAAD,CACEhV,GAAI,EACJC,MAAO,CACLC,UAAU,IACVC,KAAK,WAEPL,WAAY,SACZM,eAAgB,cAGdC,KAAKC,MAAMC,OACXwU,EAAAtV,EAAAC,cAACsV,EAAA,EAAD,CACExU,GAAI,EACJX,MAAO,OACPY,OAAQ,OACRC,aAAc,MACdC,gBAAiBN,KAAKC,MAAMC,QAIhCwU,EAAAtV,EAAAC,cAACsV,EAAA,EAAD,CACEpU,SAAU,EACVC,WAAY,EACZC,UAAW,OACXP,MAAO,YACPN,MAAO,CACLgB,WAAW,SACXF,cAAc,eAGfV,KAAKC,MAAMU,QAGhB+T,EAAAtV,EAAAC,cAACsV,EAAA,EAAD,CACE/U,MAAO,CACLC,UAAU,IACVC,KAAK,WAEPL,WAAY,SACZM,eAAgB,YAEhB2U,EAAAtV,EAAAC,cAACsV,EAAA,EAAD,CACEpU,SAAU,EACVC,WAAY,EACZN,MAAO,WACPO,UAAW,QACXb,MAAO,CACLgB,WAAW,UAEbC,wBAAyB,CACvBC,OAAQd,KAAKC,MAAMc,kBA5DFC,aAsEhByT,sKCjETG,6MACJxS,MAAQ,CACNyS,UAAU,KACV1E,UAAU,KACVC,WAAW,KACX0E,WAAW,KACXC,YAAY,QAIdzS,cAAgB,gFAGVtC,KAAKsC,cACPtC,KAAKsC,cAAcC,SAASvC,KAAKC,OAEjCD,KAAKsC,cAAgB,IAAIE,IAAcxC,KAAKC,2JAK9CD,KAAKyC,YACLzC,KAAKgV,qMAGkB/V,EAAWC,oFAClCc,KAAKyC,YAECwS,EAA4BhW,EAAUiW,qBAAuBlV,KAAKC,MAAMiV,oBACzD3J,KAAKC,UAAUvM,EAAUyM,iBAAmBH,KAAKC,UAAUxL,KAAKC,MAAMyL,gBACvEuJ,IAClBjV,KAAKgD,SAAS,CACZmN,UAAU,MACV,WACA/K,EAAK+P,sBAIHC,EAAgBnW,EAAU8G,WAAa/F,KAAKC,MAAM8F,SAClDsP,EAAmBpW,EAAUqW,YAActV,KAAKC,MAAMqV,WACxDF,GAAiBC,IACnBrV,KAAKgV,uVAMHtJ,EAAgB1L,KAAKC,MAAMyL,gBACRA,EAAc3G,SACnC2G,EAAgBvK,OAAOqF,KAAKxG,KAAKC,MAAMqK,2BAGdtK,KAAKsC,cAAc0J,gBAAgBhM,KAAKC,MAAM2L,QAAQ,EAAE,SAASF,iBAAtFO,SAEAkE,EAAY,GACdoF,EAAgB,GAChBC,EAAmB,eAEjBxV,KAAKsC,cAAcmT,aAAa/J,EAAhC,eAAAgK,EAAAvU,OAAAwU,EAAA,EAAAxU,CAAAyU,EAAAxW,EAAAyW,KAA8C,SAAAC,EAAO1L,GAAP,IAAA2L,EAAAC,EAAA,OAAAJ,EAAAxW,EAAA6W,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAElDb,EAAcnL,GAAiB,IAEzB2L,EAAc5U,OAAOwG,OAAOsE,GAAczH,OAAO,SAAAiF,GAAE,OAAKA,EAAGE,QAAUS,MACxD2L,EAAYhR,SAEzBiR,EAAazJ,EAAKjK,cAAc+T,MAAM,GAE1CN,EAAY7L,QAAQ,SAACT,EAAG6D,GAGtB,IAAK7D,EAAG5G,MAAS4G,EAAGrF,QAAwB,YAAdqF,EAAGrF,OAC/B,OAAO,EAGToR,EAAmBA,EAAmBxL,KAAKQ,IAAIgL,EAAiBlJ,SAAS7C,EAAGM,YAAcuC,SAAS7C,EAAGM,WAEtG,IAAMc,EAAc0B,EAAKjK,cAAc+T,MAAM5M,EAAGoB,aAEhD,OAAQpB,EAAGH,QACT,IAAK,OACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,WACH0M,EAAaA,EAAWM,KAAKzL,GAC/B,MACA,IAAK,OACL,IAAK,SACL,IAAK,UACL,IAAK,UACL,IAAK,WACHmL,EAAaA,EAAWO,MAAM1L,GAO9BmL,EAAWQ,GAAG,KAChBR,EAAazJ,EAAKjK,cAAc+T,MAAM,IAGxC,IAAMI,EAAUT,EACV1M,EAASG,EAAGH,OACZS,EAAYuC,SAAS7C,EAAGM,WACxB2M,EAAanK,EAAKjK,cAAc+T,MAAM5M,EAAGiN,YACzCC,EAAapK,EAAKjK,cAAc+T,MAAM5M,EAAGkN,YAE1CD,EAAW7H,SAAY6H,EAAW7H,SACrC0G,EAAcnL,GAAec,KAAK,CAChC5B,SACAmN,UACA1M,YACA2M,aACAC,aACA9L,mBAzD0C,wBAAAqL,EAAAU,SAAAd,EAAA9V,SAA9C,gBAAA6W,GAAA,OAAAnB,EAAAoB,MAAA9W,KAAA8E,YAAA,YAiEF+P,EAAY,KACVkC,EAAc/W,KAAKsC,cAAc2I,YAAY,IAAIP,WAE/C1K,KAAKC,MAAMiV,0BACZ,iBAGA,kBAGA,mBAGA,2CARHL,EAAYkC,EAAYC,QAAQC,SAAS,EAAE,4CAG3CpC,EAAYkC,EAAYC,QAAQC,SAAS,EAAE,6CAG3CpC,EAAYkC,EAAYC,QAAQC,SAAS,EAAE,6CAG3CpC,EAAYkC,EAAYC,QAAQC,SAAS,EAAE,6CAG3CpC,EAAY,yCAIVqC,EAAO,GACTC,EAAe,GACfC,EAAgB,KAChBC,EAAgB,KAChBC,EAAgB,KAChBC,EAAoB,KAClBC,EAAyB,GACzBC,EAAwB,GACxBC,EAAgBpL,UAAS,IAAI5B,MAAOiN,UAAU,KAAM,MAEpDC,EAAa,GACbC,EAAyC,SAAhC7X,KAAKC,MAAM6X,2BAEpB9X,KAAKsC,cAAcmT,aAAatU,OAAOqF,KAAK+O,GAA5C,eAAAwC,EAAA5W,OAAAwU,EAAA,EAAAxU,CAAAyU,EAAAxW,EAAAyW,KAA2D,SAAAmC,EAAOrO,GAAP,OAAAiM,EAAAxW,EAAA6W,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,cAAA6B,EAAA7B,KAAA,EACrC7J,EAAKjK,cAAc4V,gBAAgB3L,EAAKtM,MAAMqK,gBAAgBX,GAAO8J,QAAQoE,EAAOrC,EAAiB,MAAK,EAAM,MAD3E,OAC/DoC,EAAWjO,GADoDsO,EAAAE,KAAA,wBAAAF,EAAArB,SAAAoB,EAAAhY,SAA3D,gBAAAoY,GAAA,OAAAL,EAAAjB,MAAA9W,KAAA8E,YAAA,YAQN,IAFMuT,EAAmB,iBAIvB,IAAMC,EAAgB,GAChBC,EAAiB,GACvBxO,EAAYC,KAAKQ,IAAIkN,EAAc3N,GACnCwN,EAAoBhL,EAAKjK,cAAc+T,MAAM,GAI7ClV,OAAOqF,KAAK+O,GAAerL,QAAQ,SAAAP,GAEjC,IAAI6O,EAAgB,KACdC,EAA0BtX,OAAOwG,OAAOiQ,EAAWjO,IAAQyC,MAC3DsM,EAAoBd,EAAWjO,GAAOnF,OAAO,SAAAiF,GAAE,OAAKA,EAAGkP,WAAWvB,GAAiB3N,EAAGkP,WAAW5O,IACnG2O,GAAqBA,EAAkB3T,SACzCyT,EAAgBE,EAAkBtM,OAG/BiM,EAAiB1O,KACpB0O,EAAiB1O,GAAS4C,EAAKjK,cAAc+T,MAAM,IAGrD,IACMuC,EADcrM,EAAKtM,MAAMqK,gBAAgBX,GACbY,SAC9BsO,EAAmBtD,EAAc5L,GAAOnF,OAAO,SAAAiF,GAAE,OAAKA,EAAGM,WAAWA,KAAeqN,GAAiB3N,EAAGM,UAAUqN,KAErH,GAAKyB,EAAiB9T,OAwBpB8T,EAAiB3O,QAAQ,SAAAT,GACvB,OAAQA,EAAGH,QACT,IAAK,OACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,WACH+O,EAAiB1O,GAAS0O,EAAiB1O,GAAO2M,KAAK7M,EAAGkN,YAC5D,MACA,QACE0B,EAAiB1O,GAAS0O,EAAiB1O,GAAO4M,MAAM9M,EAAGkN,YACvD0B,EAAiB1O,GAAO6M,GAAG,KAC7B6B,EAAiB1O,GAAS4C,EAAKjK,cAAc+T,MAAM,YAnC3D,GAAIc,GAAgBA,EAAaxN,GAAO,CACtCkP,EAAmB1B,EAAaxN,GAChC,IAAMmP,EAAiB3X,OAAOC,OAAO,GAAGyX,GAAkBzM,MAI1D,GAHuB1C,WAAWoP,EAAerC,SAG9B,GAAK1M,EAAUyL,GAAoBgD,EAAc,CAClE,IAAM7B,EAAa0B,EAAiB1O,GAC9BoP,EAAYxM,EAAKjK,cAAc0W,iBAAiBR,EAAcO,UAAUH,GAC1EK,EAAatC,EAAWhD,MAAMoF,GAGlCD,EAAerC,QAAUwC,EACzBH,EAAepC,WAAaqC,EAC5BF,EAAmB,CAACC,SAGtBD,EAAmB,CAAC,CAClBpC,QAAQlK,EAAKjK,cAAc+T,MAAM,GACjCK,WAAWnK,EAAKjK,cAAc+T,MAAM,KAuB1C,IAAMlK,EAAShL,OAAOC,OAAO,GAAGyX,GAAkBzM,MAE9C8M,EAAgBb,EAAiB1O,GAAOgK,MAAMxH,EAAOuK,YAEzD,GAAIwC,EAAcC,GAAG,GAAG,CAEtB,IAAIC,EAAyB,KACvBC,EAAsB9M,EAAKjK,cAAcwJ,gBAAgB,CAAC,QAAQ,SAASnC,EAAM,wBACvF,IAAK4C,EAAKtM,MAAMqZ,YAAcD,EAAoB,CAChD,IAAME,EAAiBf,GAAiBA,EAAca,GAAuBb,EAAca,GAAwBZ,GAA2BA,EAAwBY,GAAuBZ,EAAwBY,GAAuB,KACxOE,IACFH,EAAyB7M,EAAKjK,cAAc0W,iBAAiBO,EAAe,KACjDJ,GAAG,KAC5BD,EAAgBA,EAAcvF,MAAMyF,IAK1Cb,EAAe5O,GAASuP,EAExB3B,EAAoBA,EAAkBjB,KAAK4C,GAG7CZ,EAAc3O,GAASkP,IAGzB,IAAI7N,EAAauB,EAAKjK,cAAc2I,YAAsB,IAAVlB,GAEhD,GAAkB,OAAd8K,GAAuB7J,EAAWwO,cAAc3E,IAAc7J,EAAWyO,eAAe,IAAI/O,KAAO,OAAQ,CAO7G,IAAMgP,EAAgB1O,EAAW2O,OAAO,oBAGxCzC,EAAKlM,EAAW2O,OAAO,eAAiB,EAExCpC,EAAoB7N,WAAWA,WAAW6N,EAAkBxM,QAAQ,KAEpE0M,EAAsBiC,GAAiBnB,EACvCf,EAAuBkC,GAAiBnC,EAIxCF,EAAkC,OAAlBA,EAAyBE,EAAoBvN,KAAKQ,IAAI6M,EAAcE,GACpFD,EAAkC,OAAlBA,EAAyBC,EAAoBvN,KAAKoB,IAAIkM,EAAcC,GAGtFH,EAAgBrN,EAChBoN,EAAemB,OAzHRvO,EAAUyL,EAAiBzL,GAAW2N,EAAc3N,GAAW/J,KAAKC,MAAM2Z,iBAAiBC,EAA3F9P,GAmLT,IAvDM+P,EAAqB3Y,OAAOqF,KAAKgR,GAAwB9Q,IAAI,SAAA+D,GAAI,MAAK,CAC1EsP,EAAEtP,EACFuP,EAAExC,EAAuB/M,GACzBwP,SAASxC,EAAsBhN,MAG7ByP,EAAY,EAChBJ,EAAmB5P,QAAS,SAACiQ,EAAK7M,GAChC,IAAM0C,EAAUhG,KAAKoQ,MAAMF,EAAUJ,EAAmB/U,OAAO,KAC/D+U,EAAmBxM,GAAO0C,QAAUA,EACpCkK,MAwBIZ,EAAatZ,KAAKC,MAAMqZ,WAAatZ,KAAKC,MAAMqZ,WAAWtS,cAAgB,MAGjFmJ,EAAUjF,KAAK,CACb8B,GAAGsM,EACHpZ,MAAO,OAAQF,KAAKsC,cAAcwJ,gBAAgB,CAAC,QAAQ,SAASwN,EAAW,QAAQ,QAAQvF,KAAK,KAAK,IACzGhE,KAAK+J,IAGHO,EAAkB,EAClB/C,EAAcD,EAAc,IAC9BgD,EAAkB,GAGhB/C,IAAkBD,IACpBA,EAAgBrN,KAAKoB,IAAI,EAAEkM,EAAc,IAGtB,EACfgD,GAAahD,EAAcD,GADZ,EAEfkD,EAAc,GACXpQ,EAAE,EAAEA,GAHQ,EAGQA,IACrBqQ,EAAa9Q,WAAWA,WAAW2N,EAAelN,EAAEmQ,GAAYvP,QAAQ,IAC9EwP,EAAYrP,KAAKsP,GAGS,GACtBC,EAAYtZ,OAAOwG,OAAOuP,GAAMnS,OAChC2V,EAAgB1Q,KAAKoB,IAAI,EAAEpB,KAAKC,KAAKwQ,EAFf,KAItBrK,EAAa,CACjBuK,OAAO,CACL7L,KAAM,OACN6K,OAAQ,kBAEViB,OAAO,CACL9L,KAAM,SACN+L,SAAS,EACTrQ,IAAK6M,EACLjM,IAAKkM,GAEPwD,QAAQ,gBACRC,QAAQ,SAAAha,GAAK,OAAIwL,EAAKjK,cAAcyM,YAAYhO,EAAMsZ,IACtDW,WAAYhb,KAAKC,MAAM8F,SAAW,KAAO,CACvCkV,OAAQ,GACRC,SAAS,EACTvB,OAAQ,QACRwB,YAAa,GACbC,OAAQ,SACRC,aAAc,GACdC,eAAgB,SAChBC,WAAW,SAASb,EAAc,SAEpCH,cACAiB,UAAU,EACVC,SAAQ,EACRC,SAAU1b,KAAKC,MAAM8F,SAAW,KAAO,CACrCkV,OAAQ,GACRC,SAAU,EACVE,OAAQ,OACRD,YAAa,GACbQ,aAAc,EACdN,cAAe,GACfE,WAAWhB,EACXe,eAAgB,SAChB3B,OAAQ,SAAA/R,GAAC,OAAI2E,EAAKjK,cAAc2M,iBAAiBrH,EAAE,KAErDmJ,SAAQ,EACR6K,WAAW,IACXC,YAAW,EACXC,aAAa,IACbC,aAAY,EACZC,MAAM,YACNC,aAAY,EACZC,iBAAiB,EACjB5V,OAAO,SAAA+K,GAAC,OAAIA,EAAEnR,OACdic,mBAAmB,GACnBC,kBAAkB/E,EAClBgF,WAAW,CAAEtJ,KAAM,QAASE,UAAW,IACvCqJ,YAAqC,UAAzBtc,KAAKC,MAAMqV,UAAwB,GAAM,GACrDjP,MAAM,CACJkW,KAAM,CACJC,MAAO,CACLna,KAAM,CACJ9B,SAAS,GACTC,WAAW,IACXic,KAAKzc,KAAKC,MAAMoG,MAAMC,OAAO2U,OAC7B3M,WAAWtO,KAAKC,MAAMoG,MAAM4L,MAAMC,aAIxCwK,KAAM,CACJC,KAAM,CACJC,OAAQ5c,KAAKC,MAAMoG,MAAMC,OAAOuW,gBAAiBC,gBAAiB,SAaxE5J,OAAQlT,KAAKC,MAAM8F,SAAW,CAAEV,IAAK,GAAI8N,MAAO,GAAIC,OAAQ,GAAItD,KAAM,IAAO,CAAEzK,IAAK,GAAI8N,MAAO,GAAIC,OAAQ,GAAItD,KAAM,IACrHiN,aAAa,SAACC,GAAc,IAEpBnN,EADYmN,EAAVC,MACYC,OAAO,GAC3B,OACE3N,EAAAnQ,EAAAC,cAAC8d,EAAA,EAAD,CACEtN,MAAOA,GAEPN,EAAAnQ,EAAAC,cAAC+d,EAAA,EAAD,CACEld,MAAO2P,EAAM3P,MACbS,MAAOkP,EAAMwN,QACbtc,MAAK,KAAAqF,OAAOyJ,EAAME,KAAKuN,cAGO,kBAAxBzN,EAAME,KAAKkK,UAAyB9Y,OAAOqF,KAAKqJ,EAAME,KAAKkK,UAAUlV,OAAO,GAClF5D,OAAOqF,KAAKqJ,EAAME,KAAKkK,UAAUvT,IAAI,SAAAiD,GACnC,GAAIA,IAAUkG,EAAMwN,QAClB,OAAO,KAET,IAAMnd,EAAQqM,EAAKjK,cAAcwJ,gBAAgB,CAAC,QAAQ,SAASnC,EAAM,QAAQ,QAC3E8M,EAAU5G,EAAME,KAAKkK,SAAStQ,GAChC4T,EAAmBhR,EAAKjK,cAAcyM,YAAY0H,EAAQ,GAC9D,OAAI/M,WAAW+M,IAAU,IAErBlH,EAAAnQ,EAAAC,cAAC+d,EAAA,EAAD,CACEzc,MAAOgJ,EACPzJ,MAAOA,EACP2G,IAAG,OAAAT,OAASuD,GACZ5I,MAAK,KAAAqF,OAAOmX,KAIX,UAQnBvd,KAAKgD,SAAS,CACZmN,YACAC,mJAKF,OACEb,EAAAnQ,EAAAC,cAACme,EAAA,EAADrc,OAAAC,OAAA,CACE0N,KAAM2O,IACNjJ,YAAY,GACRxU,KAAKoC,MAAMgO,WAHjB,CAIEL,KAAM/P,KAAKoC,MAAM+N,UACjBuN,SAAU1d,KAAKC,MAAMyd,SACrBtd,OAAQJ,KAAKC,MAAM8U,YACnB4I,eAAgB3d,KAAKC,MAAM0d,yBApeL3c,aA0ef4T,uIC9eTgJ,qdAMqB3e,EAAUC,kMAKjC,OACEqQ,EAAAnQ,EAAAC,cAACwe,EAAA,EAAD,CACEhX,IAAK7G,KAAKC,MAAM4P,MAAM7C,GACtBvH,UAAW,CACTC,GAAG,EACHC,GAAG,EACHnG,MAAM,EACNsQ,KAAM9P,KAAKC,MAAM4P,MAAME,KAAKC,SAAWhQ,KAAKC,MAAM4P,MAAME,KAAKC,QAAQ,GAAK,QAAU,MAGtFT,EAAAnQ,EAAAC,cAACmQ,EAAA,EAAD,CACEhQ,MAAO,EACPE,cAAe,UAGbM,KAAKC,MAAM4P,MAAME,KAAKE,YACpBV,EAAAnQ,EAAAC,cAACmQ,EAAA,EAAD,CACEjQ,GAAI,EACJgB,SAAU,EACVC,WAAY,EACZN,MAAO,WACPO,UAAW,QAEVT,KAAKC,MAAM4P,MAAME,KAAKE,YAG5BjQ,KAAKC,MAAM0B,kBArCWX,aA4ClB4c,q+TC1CTE,6MACJ1b,MAAQ,CACN2b,MAAM,KACNC,OAAM,EACNC,WAAW,EACXC,YAAW,EACXC,YAAY,KACZC,aAAY,EACZC,cAAc,KACdC,cAAc,QAGhB7N,oBAAqB,IAGrBnO,cAAgB,OAiChB6S,uCAAoB,SAAAoJ,IAAA,OAAAC,EAAApf,EAAA6W,KAAA,SAAAwI,GAAA,cAAAA,EAAAtI,KAAAsI,EAAArI,MAAA,OAClB3R,EAAKia,kBADa,wBAAAD,EAAA7H,SAAA2H,EAAAve,WAIpB2e,oCAAiB,SAAA7I,IAAA,IAAAnI,EAAAgD,EAAA,OAAA6N,EAAApf,EAAA6W,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACY,IAAIwI,QAAJ,eAAAC,EAAA1d,OAAA2d,EAAA,EAAA3d,CAAAqd,EAAApf,EAAAyW,KAAa,SAAAkJ,EAAOC,EAASC,GAAhB,OAAAT,EAAApf,EAAA6W,KAAA,SAAAiJ,GAAA,cAAAA,EAAA/I,KAAA+I,EAAA9I,MAAA,OACtC3R,EAAKnC,cAAc6c,UAAU,iBAAiB1a,EAAKxE,MAAM4C,MACzD4B,EAAKxE,MAAMmf,KAAKC,IAAIV,eAAela,EAAKxE,MAAM4C,KAAK,SAACyc,EAAI3R,GACtDqR,EAAQrR,KAH4B,wBAAAuR,EAAAtI,SAAAmI,EAAA/e,SAAb,gBAAAuf,EAAAC,GAAA,OAAAX,EAAA/H,MAAA9W,KAAA8E,YAAA,IADZ,cACT6I,EADSuI,EAAAiC,KAQTxH,EAAW,GACbhD,EACFgD,EAAShD,YAAcA,GAEvBgD,EAASuN,YAAa,EACtBvN,EAASoN,MAAQ,kCAGnBtZ,EAAKzB,SAAS2N,GAhBCuF,EAAAuJ,OAAA,SAiBR9R,GAjBQ,wBAAAuI,EAAAU,SAAAd,EAAA9V,WAmEjB0f,kCAAe,SAAA1H,IAAA,IAAA/K,EAAA0S,EAAA,OAAAnB,EAAApf,EAAA6W,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,cAAA6B,EAAA7B,KAAA,EACIwJ,IAAMC,IAAI,kDADd,YACP5S,EADOgL,EAAAE,MAAA,CAAAF,EAAA7B,KAAA,eAGLuJ,EAAY1S,EAAG8C,KACrBtL,EAAKzB,SAAS,CACZ2c,cALS1H,EAAAwH,OAAA,SAOJE,GAPI,cAAA1H,EAAAwH,OAAA,SASN,MATM,wBAAAxH,EAAArB,SAAAoB,EAAAhY,WAYf8f,wCAAqB,SAAAC,IAAA,IAAA9S,EAAA+S,EAAA,OAAAxB,EAAApf,EAAA6W,KAAA,SAAAgK,GAAA,cAAAA,EAAA9J,KAAA8J,EAAA7J,MAAA,cAAA6J,EAAA7J,KAAA,EACFwJ,IAAMC,IAAI,qDADR,YACb5S,EADagT,EAAA9H,MAAA,CAAA8H,EAAA7J,KAAA,eAGX4J,EAAe/S,EAAG8C,KACxBtL,EAAKzB,SAAS,CACZgd,iBALeC,EAAAR,OAAA,SAOVO,GAPU,cAAAC,EAAAR,OAAA,SASZ,MATY,wBAAAQ,EAAArJ,SAAAmJ,EAAA/f,WAYrBkgB,mBAAqB,SAACC,GACpB,IAAIC,EAAa,KAUjB,GATI3b,EAAKrC,MAAM4d,cACbvb,EAAKrC,MAAM4d,aAAa9V,QAAQ,SAACkF,EAAEjF,GACjC,IAAKiW,GAAc1W,WAAW0F,EAAEiR,WAAW3W,WAAWyW,GAEpD,OADAC,EAAahR,GACN,IAKT3K,EAAKrC,MAAMud,WAAaS,EAAW,CACrC,IAAME,EAAW7b,EAAK8b,cAAcH,EAAW3b,EAAKrC,MAAMuL,YAAY6S,KAGlEC,EAFeH,EAAS,GACN7b,EAAKrC,MAAMud,UAAUe,WAI3C,OAFAD,EAAanU,SAASmU,EAAW1V,QAAQ,IACzCtG,EAAKnC,cAAc6c,UAAU,qBAAqBiB,EAAW3b,EAAKrC,MAAMuL,YAAY6S,IAAIF,EAASG,GAC1FA,EAGT,OAAO,QAGTE,4CAAyB,SAAAC,IAAA,IAAAtC,EAAAD,EAAA8B,EAAAzI,EAAAmJ,EAAAC,EAAA7C,EAAA,OAAAO,EAAApf,EAAA6W,KAAA,SAAA8K,GAAA,cAAAA,EAAA5K,KAAA4K,EAAA3K,MAAA,UACnBkI,EAAgB,EAChBD,EAAgB,EAEf5Z,EAAKrC,MAAMuL,cAAelJ,EAAKgM,mBAJb,CAAAsQ,EAAA3K,KAAA,eAAA2K,EAAAtB,OAAA,UAKd,GALc,OAQlBhb,EAAKrC,MAAMuL,YAAYtB,cACpB8T,EAAWzW,WAAWjF,EAAKnC,cAAc+T,MAAM5R,EAAKrC,MAAMuL,YAAYwS,UAAUa,IAAI,KAAKC,YAC/F3C,EAAgB7Z,EAAKyb,mBAAmBC,IAG1C9B,EAAgBC,GAAgC,EAE5C7Z,EAAKrC,MAAM+b,cACPzG,GAAgB,IAAIhN,MAAOiN,UAC3BkJ,EAAgBvU,UAAUoL,EAAcpL,SAAS7H,EAAKrC,MAAM+b,cAAc,KAGhFG,GAAiBuC,EACjBvC,EAAgBtU,KAAKoB,IAAIkT,EAAc,GAEvC7Z,EAAKnC,cAAc6c,UAAU,iBAAiBd,EAAc,gBAAgBwC,EAAc,qBAAqBvC,IAG3GwC,EAAazC,EAAcC,EAC3BL,EAAaI,EAAc,EAAI3U,WAAWoX,EAAWzC,GAAiB,EAE5E5Z,EAAKzB,SAAS,CACZqb,gBACAC,gBACAL,eAGFiD,WAAW,WAAKzc,EAAK0c,qBAAqB,KAnCnB,yBAAAJ,EAAAnK,SAAAgK,EAAA5gB,WAsCzBmhB,kBAAoB,WAElB,GAAI1c,EAAKgM,mBACP,OAAO,EAGT,IAAI6N,EAAgB7Z,EAAKrC,MAAMkc,cAC/B,GAAIA,EAEF,KADAA,EAMO,CACL,IAAMwC,EAAarc,EAAKrC,MAAMic,cAAcC,EACtCL,EAAavU,WAAWoX,EAAWrc,EAAKrC,MAAMic,eACpD5Z,EAAKzB,SAAS,CACZib,aACAK,kBAEF4C,WAAW,WAAKzc,EAAK0c,qBAAqB,UAX1C1c,EAAKzB,SAAS,CACZib,WAAW,EACXD,OAAM,SAYVvZ,EAAKzB,SAAS,CACZib,WAAW,EACXD,OAAM,OAKZoD,+BAAY,SAAAC,IAAA,IAAAC,EAAA/T,EAAAgU,EAAApD,EAAAxN,EAAA6Q,EAAAC,EAAAzB,EAAAL,EAAA,OAAAnB,EAAApf,EAAA6W,KAAA,SAAAyL,GAAA,cAAAA,EAAAvL,KAAAuL,EAAAtL,MAAA,UAGJkL,EAHI,oBAIJ/T,EAAS9I,EAAKxE,MAAM4C,KAAK0G,cAE3BgY,EAAoB,KACpBpD,EAAc,KACdxN,EAAW,GAEXgR,eACFJ,EAAoBI,aAAaC,QAAQN,MAEvCC,EAAoBhW,KAAKsW,MAAMN,IAI9BA,GAAsBA,EAAkBhU,GAjBnC,CAAAmU,EAAAtL,KAAA,gBAkBR+H,GAAc,IAAIzT,MAAOiN,UAlBjB+J,EAAAtL,KAAA,GAoB+BwI,QAAQkD,IAAI,CACjDrd,EAAKqb,qBACLrb,EAAKib,iBAtBC,QAAA8B,EAAAE,EAAAvJ,KAAAsJ,EAAAtgB,OAAA4gB,EAAA,EAAA5gB,CAAAqgB,EAAA,GAoBDxB,EApBCyB,EAAA,GAoBY9B,EApBZ8B,EAAA,IAyBRF,EAAoB,IACFhU,GAAU,CAC1B4Q,cACAwB,YACAK,gBAIFvb,EAAKnC,cAAc0f,gBAAgBV,EAAiB/V,KAAKC,UAAU+V,IAEnE5Q,EAAW4Q,EAAkBhU,GAExByS,GAAiBL,IACpBhP,EAASoN,MAAQ,0BAtCX,QA0CVtZ,EAAKzB,SAAS2N,GA1CJ,yBAAA+Q,EAAA9K,SAAAyK,EAAArhB,WA6CZ0e,qCAAkB,SAAAuD,IAAA,IAAAtR,EAAA,OAAA6N,EAAApf,EAAA6W,KAAA,SAAAiM,GAAA,cAAAA,EAAA/L,KAAA+L,EAAA9L,MAAA,UAEX3R,EAAKxE,MAAM4C,MAAS4B,EAAKxE,MAAMmf,KAFpB,CAAA8C,EAAA9L,KAAA,eAAA8L,EAAAzC,OAAA,UAGP,GAHO,cAMV9O,EAAW,CACfyN,aAAY,GAEd3Z,EAAKzB,SAAS2N,GATEuR,EAAA9L,KAAA,EAWU3R,EAAKka,iBAXf,WAAAuD,EAAA/J,KAAA,CAAA+J,EAAA9L,KAAA,gBAAA8L,EAAA9L,KAAA,GAcR3R,EAAK2c,YAdG,QAed,IACE3c,EAAKkc,yBACL,MAAOrB,GACP3O,EAASoN,MAAQ,yBAKnBtZ,EAAKzB,SAAS2N,GAvBA,yBAAAuR,EAAAtL,SAAAqL,EAAAjiB,oFAvQZA,KAAKsC,cACPtC,KAAKsC,cAAcC,SAASvC,KAAKC,OAEjCD,KAAKsC,cAAgB,IAAIE,IAAcxC,KAAKC,oKAU9C,IAJAD,KAAKyQ,oBAAqB,EAEtBzD,EAAKY,OAAOsT,WAAW,aAAe,GAEnClU,KACHY,OAAOuU,aAAanV,kJAKxBhN,KAAKyC,+FAGkBxD,mEACvBe,KAAKyC,aAEAzC,KAAKoC,MAAMgc,aAAepe,KAAKC,MAAMmf,MACxCpf,KAAK0e,2JA+BM0B,EAAYgC,GACzB,IAAIC,EACAC,EACAC,EAAMC,EAUNJ,EAAa,KACfG,EAVc,OACN,MASYnC,EAAU,oBARrB,QACF,KAOgEA,EAAU,WACjFoC,EAPe,QACF,MAMQpC,EAAU,oBALb,KAKoDA,EAAU,WAJ9D,QAMlBmC,EAbc,OACN,MAYYnC,EAAU,qBAVvB,KAUyDA,EAAU,WAC1EoC,EAVe,OAEG,KAQGpC,EAAU,YATlB,MASsDA,EAAU,qBAG/E,IACMqC,EAAO,GAAK,EADLzY,KAAK0Y,KAAM,EAAIH,IAoB5B,OAhBEF,EADEI,EAAO,IACG,YACHA,EAAO,IAAMA,GAAQ,IAClB,SAEA,OAGdH,EAAetY,KAAK0Y,IAAIF,IACL,IACjBF,EAAe,GAGbF,EAAa,MACfE,GAAgB,KAGX,CAACA,EAAclC,EAAU,oBAAyBA,EAAU,WAAgBiC,iDAkMnF,GAAIriB,KAAKoC,MAAMkc,cAAc,GAAG,CAC9B,IAAMqE,EAAU3Y,KAAKoQ,MAAMpa,KAAKoC,MAAMkc,cAAc,IAC9CsE,EAAU5iB,KAAKoC,MAAMkc,cAAuB,GAARqE,EAC1C,OAAQ,IAAIA,GAASE,QAAQ,GAAG,KAAK,IAAID,GAASC,QAAQ,GAAG,OAE7D,OAAO7iB,KAAKoC,MAAMkc,cAAc,qCAI3B,IAAAlZ,EAAApF,KACP,OACE8iB,EAAA1jB,EAAAC,cAAC0jB,EAAA,EAAD,CAAMrjB,cAAe,SAAUD,WAAY,UAEV,OAA7BO,KAAKoC,MAAMkc,cACTte,KAAKoC,MAAM4b,MACT8E,EAAA1jB,EAAAC,cAAC2jB,EAAA,EAAD,CACEjW,UAAW,CACTrF,GAAG,EACHxH,MAAMF,KAAKC,MAAMgjB,UAAYjjB,KAAKC,MAAMgjB,UAAY,aAEtDnW,YAAW3L,OAAA+hB,EAAA,EAAA/hB,CAAA,CACT+B,KAAK,QACFlD,KAAKC,MAAM6M,aAEhBF,UAAW,CACTnM,UAAU,SACVhB,WAAW,SACXM,eAAe,UAEjBsC,KAAMrC,KAAKC,MAAMkjB,WAAanjB,KAAKC,MAAMkjB,WAAa,8BAGxDL,EAAA1jB,EAAAC,cAAC0jB,EAAA,EAAD,CACExjB,GAAI,EACJE,WAAY,SACZC,cAAe,SACfK,eAAgB,UAEhB+iB,EAAA1jB,EAAAC,cAAC0jB,EAAA,EAAD,CAAMxjB,GAAI,EAAGW,MAAQF,KAAKC,MAAMgjB,UAAYjjB,KAAKC,MAAMgjB,UAAY,aAAejjB,KAAKC,MAAMmjB,SAAWpjB,KAAKC,MAAMmjB,SAAW,kBAA9H,IAAkJN,EAAA1jB,EAAAC,cAAC0jB,EAAA,EAAKM,KAAN,CAAWnjB,MAAQF,KAAKC,MAAMgjB,UAAYjjB,KAAKC,MAAMgjB,UAAY,YAAaziB,WAAY,GAAKR,KAAKsjB,wBACtPR,EAAA1jB,EAAAC,cAAC0jB,EAAA,EAAD,CAAUhiB,MAAQf,KAAKoC,MAAM6b,cAIZ,OAArBje,KAAKoC,MAAM2b,OAAmB/d,KAAKoC,MAAM8b,WAoBvC4E,EAAA1jB,EAAAC,cAAC2jB,EAAA,EAAD,CACEjW,UAAW,CACTrF,GAAG,EACHxH,MAAMF,KAAKC,MAAMgjB,UAAYjjB,KAAKC,MAAMgjB,UAAY,aAEtDnW,YAAW3L,OAAA+hB,EAAA,EAAA/hB,CAAA,CACT+B,KAAK,QACFlD,KAAKC,MAAM6M,aAEhBF,UAAW,CACTnM,UAAU,SACVhB,WAAW,SACXM,eAAe,UAEjBsC,KAAOrC,KAAKoC,MAAM2b,MAAQ/d,KAAKoC,MAAM2b,MAAS/d,KAAKC,MAAM4C,KAAQ7C,KAAKC,MAAMsjB,eAAiBvjB,KAAKC,MAAMsjB,eAAiB,gCAAoCvjB,KAAKC,MAAMujB,eAAiBxjB,KAAKC,MAAMujB,eAAiB,2BAjCvNV,EAAA1jB,EAAAC,cAAC0jB,EAAA,EAAD,CACEtjB,WAAY,SACZC,cAAe,UAEfojB,EAAA1jB,EAAAC,cAAC0jB,EAAA,EAAD,CACE7f,KAAM,MACN8C,KAAM,UACN9F,MAAO,aAET4iB,EAAA1jB,EAAAC,cAAC0jB,EAAA,EAAD,CACE7c,GAAI,EACJ3F,SAAU,EACVE,UAAW,SACXP,MAAOF,KAAKC,MAAMgjB,UAAYjjB,KAAKC,MAAMgjB,UAAY,YAEpDjjB,KAAKoC,MAAM2b,QAwBpB/d,KAAKC,MAAM4C,KACTigB,EAAA1jB,EAAAC,cAAC0jB,EAAA,EAAD,CACE7c,GAAI,EACJsI,OAAQ,SACR1G,WAAY,YACZ2G,IAAK,+BACLvO,MAAOF,KAAKC,MAAMgjB,UAAYjjB,KAAKC,MAAMgjB,UAAY,WACrDQ,KAAMzjB,KAAKsC,cAAcwL,2BAA2B9N,KAAKC,MAAM4C,OAE/DigB,EAAA1jB,EAAAC,cAAC0jB,EAAA,EAAD,CACEtjB,WAAY,SACZC,cAAe,MACfK,eAAgB,UAEhB+iB,EAAA1jB,EAAAC,cAAC0jB,EAAA,EAAD,CACExiB,SAAU,EACVE,UAAW,SACXP,MAAOF,KAAKC,MAAMgjB,UAAYjjB,KAAKC,MAAMgjB,UAAY,YAHvD,qBAOAH,EAAA1jB,EAAAC,cAAC0jB,EAAA,EAAD,CACErb,GAAI,EACJxE,KAAM,SACN8C,KAAM,YACN9F,MAAOF,KAAKC,MAAMgjB,UAAYjjB,KAAKC,MAAMgjB,UAAY,eAIjB,oBAAjCjjB,KAAKC,MAAMyjB,kBAClBZ,EAAA1jB,EAAAC,cAAC0jB,EAAA,EAAD,CACE7c,GAAI,EACJud,KAAI,qBACJhiB,QAAU,SAAA+F,GAAC,OAAIpC,EAAKnF,MAAMyjB,qBAC1BxjB,MAAOF,KAAKC,MAAM0jB,gBAAkB3jB,KAAKC,MAAM0jB,gBAAkB,WACjE7b,WAAY9H,KAAKC,MAAM2jB,qBAAuB5jB,KAAKC,MAAM2jB,qBAAuB,aAEhFd,EAAA1jB,EAAAC,cAAC0jB,EAAA,EAAD,CACEtjB,WAAY,SACZC,cAAe,MACfK,eAAgB,UAEhB+iB,EAAA1jB,EAAAC,cAAC0jB,EAAA,EAAD,CACExiB,SAAU,EACVE,UAAW,SACXP,MAAOF,KAAKC,MAAM0jB,gBAAkB3jB,KAAKC,MAAM0jB,gBAAkB,YAHnE,sBAOAb,EAAA1jB,EAAAC,cAAC0jB,EAAA,EAAD,CACErb,GAAI,EACJxE,KAAM,SACN8C,KAAM,SACN9F,MAAOF,KAAKC,MAAM0jB,gBAAkB3jB,KAAKC,MAAM0jB,gBAAkB,eAIvE,aAlcc3iB,aAycb8c,wCC/cf,IAAA+F,EAAAC,EAAA,IAAAC,EAAAD,EAAA,IAIeE,EAAA,GACbC,YAAa,CAAC,OAAQ,QAEtBC,UAAW,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACxDC,YAAa,CAAC,EAAG,IAAK,IAAK,IAAK,IAAK,KACrCC,eAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,GAC7BC,YAAa,CACXC,MAAO,EACPC,MAAO,KACPC,KAAM,KAERvS,MAAO,CACLwS,MAAO,2CACPvS,UAAW,qCACXwS,QAAS,mDAEXC,MAAO,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,IAAK,KAClCC,MAAO,CAAC,IAAK,MAAO,MAAO,OAAQ,QACnCplB,MAAO,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KAC5BqlB,UAAW,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KAChCC,UAAW,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,KAAM,MACrDC,QAAS,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KAC9BC,WAAY,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KACjCC,WAAY,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KACjCC,QAAS,CAAC,EAAG,iBAAiB,qBAC9BC,aAAc,CAAC,IAAK,MAAO,MAAO,OAClCC,QAAS,CACP,IACA,iCACA,+BACA,8BACA,uCAEFC,QAAS,CACPC,SAAU,IAEZhf,OAAQ,CACNif,QAASC,IAAKC,KACdC,cAAe,oDACfC,gBAAiBH,IAAKI,MAAM,GAC5BC,eAAgBL,IAAKM,KAAK,GAC1BC,OAAQ,UACRP,KAAM,UACNQ,YAAa,UACbC,QAAS,UACTC,UAAW,UACXC,UAAW,UACXC,SAAU,UACVC,MAAOC,IAAWD,MAClBE,aAAc,OACdC,YAAa,UACbC,WAAY,OACZC,KAAM,WACNC,KAAM,OACNC,OAAQ,OACRC,eAAgB,OAChBC,YAAa,OACbC,aAAc,OACdC,aAAc,UACdC,MAAO,OACPC,YAAa,cAIbC,MAAM,UACNC,YAAY,UACZC,cAAc,UACdC,gBAAgB,UAChBC,SAAS,UACTC,aAAa,UACb3K,gBAAgB,UAChB4K,qBAAqB,UACrBC,YAAa,UACbC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,SAAU,UACVvhB,QAAS,UACTme,QAAS,UACTnc,OAAQ,UACRwf,KAAK,UACLzf,QAAS,UACTI,QAAS,UACTuS,OAAQ,UACR+M,OAAO,OACPC,UAAU,UACVlW,OAAO,OACPmW,WAAW,UACXC,gBAAgB,OAChBC,gBAAgB,wCAChBC,YAAY,UACZC,WAAW,OACXC,WAAW,UACXC,aAAa,UACb/c,aAAa,CACXnC,OAAO,CACLd,KAAK,UACLG,KAAK,UACL8f,MAAM,UACNlgB,OAAO,UACPK,QAAQ,UACRN,QAAQ,UACRogB,QAAQ,UACRjgB,QAAQ,UACRC,QAAQ,UACRigB,QAAQ,UACRC,SAAS,UACT/f,SAAS,UACTggB,eAAe,UACfC,gBAAgB,WAElBC,SAAS,CACPvgB,KAAK,UACLG,KAAK,UACL8f,MAAM,UACNlgB,OAAO,UACPK,QAAQ,UACRN,QAAQ,UACRogB,QAAQ,UACRC,QAAQ,UACRlgB,QAAQ,UACRC,QAAQ,UACRG,SAAS,UACT+f,SAAS,UACTC,eAAe,UACfC,gBAAgB,WAElB1kB,OAAO,CACL0E,UAAU,UACVC,QAAQ,UACRC,OAAO,YAGXggB,OAAQ,CACN,oBACA,mBACA,kBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,kBAEFC,OAAQ,CACN,0BACA,yBACA,wBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,yBAGJC,SAAU,CAAC,EAAG,EAAG,GAAI,IAAK,MAC1BC,aAAc,CACZ1D,KAAM,CACJvlB,MAAOkpB,YAAM,GAAK,QAClB9oB,gBAAiB+oB,YAAK,GAAK,QAC3BrW,YAAa,QAEfsW,QAAS,CACPppB,MAAOkpB,YAAM,GAAKG,IAAM9D,MACxBnlB,gBAAiB+oB,YAAK,GAAKE,IAAM9D,MACjCzS,YAAauW,IAAM9D,MAErB+D,QAAS,CACPtpB,MAAOkpB,YAAM,GAAKK,IAAOhE,MACzBnlB,gBAAiB+oB,YAAK,GAAKI,IAAOhE,MAClCzS,YAAayW,IAAOhE,MAEtBiE,OAAQ,CACNxpB,MAAOkpB,YAAM,GAAKO,IAAIlE,MACtBnlB,gBAAiB+oB,YAAK,GAAKM,IAAIlE,MAC/BzS,YAAa2W,IAAIlE,MAEnBmE,KAAM,CACJ1pB,MAAOkpB,YAAM,GAAK5D,IAAKC,MACvBnlB,gBAAiB,UACjB0S,YAAa,YAGjB6W,QAAS,CACPtE,QAAS,CACPrlB,MAAOslB,IAAKnjB,KACZ/B,gBAAiBklB,IAAKC,KAEtBqE,eAAgBtE,IAAKC,KACrBsE,mBAAoBvE,IAAKnjB,MAE3B2nB,OAAQ,CACN9pB,MAAOomB,IAAWD,MAClB0D,mBAAoBzD,IAAWD,OAEjCiD,QAAS,CACPQ,eAAgBP,IAAM9D,KACtBsE,mBAAoBR,IAAMlnB,MAE5BqnB,OAAQ,CACNI,eAAgBH,IAAIlE,KACpBsE,mBAAoBJ,IAAItnB,OAG5B4nB,YAAa,CACXC,MAAO,CACL3pB,SAAU,UACVH,OAAQ,OACR4D,SAAU,OACVmmB,QAAS,UAEXC,OAAQ,CACN7pB,SAAU,OACVH,OAAQ,OACR4D,SAAU,QAEZqmB,MAAO,CACL9pB,SAAU,SACVH,OAAQ,OACR4D,SAAU,OACV3D,aAAc,kstECtOpBuB,EAAAC,QAAA,CAAkB8P,QAAA,wDCAlB/P,EAAAC,QAAA,CAAkByF,SAAA,gECAlB1F,EAAAC,QAAA,CAAkByoB,GAAA,q2nFCAlB1oB,EAAAC,QAAA,CAAkB0oB,OAAA,0LCAlB3oB,EAAAC,QAAA,CAAkB2oB,eAAA,+BAAAC,MAAA,sBAAAC,OAAA,uBAAAC,WAAA,2BAAAC,MAAA,6LCKZC,6MAEJzoB,MAAQ,CACN0oB,QAAQ,KACRC,aAAa,KACbC,kBAAkB,KAClBC,qBAAqB,QAIvB3oB,cAAgB,gFAGVtC,KAAKsC,cACPtC,KAAKsC,cAAcC,SAASvC,KAAKC,OAEjCD,KAAKsC,cAAgB,IAAIE,IAAcxC,KAAKC,gDAIhC,IAAAmF,EAAApF,KACR8qB,EAAU3pB,OAAOqF,KAAKxG,KAAKC,MAAMqK,iBAAiB5D,IAAI,SAAAiD,GAE1D,MAAO,CACL5I,MAAM4I,EACNhJ,MAAMgJ,EACNU,YAJkBjF,EAAKnF,MAAMqK,gBAAgBX,MAQ3CohB,EAAe/qB,KAAKC,MAAMmK,cAAgB0gB,EAAQI,KAAK,SAAAtjB,GAAC,OAAKA,EAAE7G,MAAMiG,gBAAkB5B,EAAKnF,MAAMmK,cAAcpD,gBAAkB,KAyKxIhH,KAAKgD,SAAS,CACZ8nB,UACAC,eACAC,kBA1KwB,SAAA/qB,GACxB,IAAM0J,EAAQ1J,EAAMc,MACdsJ,EAAcpK,EAAM8P,KAAK1F,YAE/B,OACEkF,EAAAnQ,EAAAC,cAACmQ,EAAA,EAAD,CACEhQ,MAAO,EACPC,WAAY,SACZC,cAAe,MACfK,eAAgB,iBAEhBwP,EAAAnQ,EAAAC,cAACmQ,EAAA,EAAD,CACE/P,WAAY,UAEZ8P,EAAAnQ,EAAAC,cAAC8rB,EAAA,EAAD,CACExhB,MAAOA,EACPU,YAAaA,EACb+gB,UAAW,CACTplB,KAAK,OACL/F,MAAM,CACJE,GAAG,EACHX,MAAM,MACNY,OAAO,UAIbmP,EAAAnQ,EAAAC,cAAC8rB,EAAA,EAAD,CACExhB,MAAOA,EACPyhB,UAAW,CACTplB,KAAK,YACL/F,MAAM,CACJM,SAAS,CAAC,EAAE,GACZC,WAAW,IACXN,MAAM,iBAMZkF,EAAKhD,MAAMnC,MAAMorB,gBACf9b,EAAAnQ,EAAAC,cAACmQ,EAAA,EAAD,CACE/P,WAAY,SACZM,eAAgB,YAEhBwP,EAAAnQ,EAAAC,cAAC8rB,EAAA,EAADhqB,OAAAC,OAAA,CACEuI,MAAOA,GACHvE,EAAKhD,MAAMnC,MAFjB,CAGEmrB,UAAW,CACTplB,KAAKZ,EAAKhD,MAAMnC,MAAMorB,gBACtBprB,MAAM,CACJM,SAAS,CAAC,EAAE,GACZC,WAAW,IACXN,MAAM,aAGVmK,YAAaA,EACbuB,QAASxG,EAAKhD,MAAMnC,MAAM2L,QAC1B0f,WAAYlmB,EAAKnF,MAAMqrB,WACvBC,cAAenmB,EAAKnF,MAAMsrB,kBAG5BnmB,EAAKnF,MAAMurB,aACbjc,EAAAnQ,EAAAC,cAACmQ,EAAA,EAAD,CACE/P,WAAY,SACZM,eAAgB,YAEhBwP,EAAAnQ,EAAAC,cAAC8rB,EAAA,EAADhqB,OAAAC,OAAA,CACEuI,MAAOA,GACHvE,EAAKhD,MAAMnC,MAFjB,CAGEmrB,UAAW,CACTplB,KAAK,eACL/F,MAAM,CACJM,SAAS,CAAC,EAAE,GACZC,WAAW,IACXN,MAAM,aAGVmK,YAAaA,EACbuB,QAASxG,EAAKhD,MAAMnC,MAAM2L,QAC1B0f,WAAYlmB,EAAKnF,MAAMqrB,WACvBC,cAAenmB,EAAKnF,MAAMsrB,oBA2FtCN,qBAnF2B,SAAAhrB,GAC3B,IACMwrB,GAA4D,IADlDxrB,EAAMwrB,YAAYX,QACNY,QAAQzrB,EAAMwrB,YAAY1qB,OAAgBd,EAAMwrB,YAAY1qB,MAAQgqB,EAEhG,IAAKU,EACH,OAAO,KAGT,IAAM9hB,EAAQ8hB,EAAY1qB,MACpBsJ,EAAcohB,EAAYphB,YAChC,OACEkF,EAAAnQ,EAAAC,cAACmQ,EAAA,EAADrO,OAAAC,OAAA,CACExB,MAAO,CACLE,KAAK,KAEPC,eAAgB,iBACZE,EAAM0rB,YAEVpc,EAAAnQ,EAAAC,cAACmQ,EAAA,EAADrO,OAAAC,OAAA,CACEgO,EAAG,EACH5P,MAAO,GACHS,EAAM0rB,WAHZ,CAIElsB,WAAY,SACZC,cAAe,MACfE,MAAO,CAACkG,OAAO,WACf/F,eAAgB,eAEhBwP,EAAAnQ,EAAAC,cAAC8rB,EAAA,EAAD,CACExhB,MAAOA,EACPU,YAAaA,EACb+gB,UAAW,CACTplB,KAAK,OACL/F,MAAM,CACJE,GAAG,EACHC,OAAO,UAIbmP,EAAAnQ,EAAAC,cAAC8rB,EAAA,EAAD,CACExhB,MAAOA,EACPyhB,UAAW,CACTplB,KAAK,YACL/F,MAAM,CACJM,SAAS,CAAC,EAAE,GACZC,WAAW,IACXN,MAAM,iBAOZkF,EAAKnF,MAAMurB,aACTjc,EAAAnQ,EAAAC,cAACmQ,EAAA,EAAD,CACE/P,WAAY,SACZM,eAAgB,YAEhBwP,EAAAnQ,EAAAC,cAAC8rB,EAAA,EAADhqB,OAAAC,OAAA,CACEuI,MAAOA,GACHvE,EAAKhD,MAAMnC,MAFjB,CAGEmrB,UAAW,CACTplB,KAAK,eACL/F,MAAM,CACJM,SAAS,CAAC,EAAE,GACZC,WAAW,IACXN,MAAM,aAGVmK,YAAaA,EACbuB,QAASxG,EAAKhD,MAAMnC,MAAM2L,QAC1B0f,WAAYlmB,EAAKnF,MAAMqrB,WACvBC,cAAenmB,EAAKnF,MAAMsrB,2KAiBxCvrB,KAAKyC,YACLzC,KAAK4rB,iBAEL5rB,KAAKgD,SAAS,CACZ/C,MAAMD,KAAKC,6LAIUhB,EAAUC,yEACjCc,KAAKyC,YAECopB,EAAuB5sB,EAAUmL,gBAAkBpK,KAAKC,MAAMmK,eACrCmB,KAAKC,UAAUrK,OAAOqF,KAAKvH,EAAUqL,oBAAsBiB,KAAKC,UAAUrK,OAAOqF,KAAKxG,KAAKC,MAAMqK,mBAClGuhB,IAC5B7rB,KAAK4rB,uJAKP,OAAK5rB,KAAKoC,MAAM0oB,SAAY9qB,KAAKoC,MAAM2oB,cAAiB/qB,KAAKoC,MAAM4oB,mBAAsBhrB,KAAKoC,MAAM6oB,sBAAyBjrB,KAAKC,MAAMqK,iBAAoBnJ,OAAOqF,KAAKxG,KAAKC,MAAMqK,iBAAiBvF,OAKlMwK,EAAAnQ,EAAAC,cAACysB,EAAA,EAAD3qB,OAAAC,OAAA,GACMpB,KAAKC,MADX,CAEE+F,KAAM,SACN8kB,QAAS9qB,KAAKoC,MAAM0oB,QACpBa,WAAY3rB,KAAKC,MAAM0rB,WACvBI,aAAc/rB,KAAKC,MAAM8rB,aACzBhB,aAAc/qB,KAAKoC,MAAM2oB,aACzB3gB,cAAepK,KAAKC,MAAMmK,cAC1B4gB,kBAAmBhrB,KAAKoC,MAAM4oB,kBAC9BC,qBAAsBjrB,KAAKoC,MAAM6oB,qBACjC1jB,SAAWvH,KAAKC,MAAMsH,SAAWvH,KAAKC,MAAMsH,SAAWvH,KAAKC,MAAM+rB,eAd7D,YApOehrB,aAwPb6pB,yKCvPToB,6MAEJ7pB,MAAQ,KAGRE,cAAgB,gFAGVtC,KAAKsC,cACPtC,KAAKsC,cAAcC,SAASvC,KAAKC,OAEjCD,KAAKsC,cAAgB,IAAIE,IAAcxC,KAAKC,mKAK9CD,KAAKyC,qBACCzC,KAAK4rB,sMAGY3sB,EAAUC,+EACjCc,KAAKyC,YAECopB,EAAuB5sB,EAAUmL,gBAAkBpK,KAAKC,MAAMmK,cAC9D8hB,EAAiB3gB,KAAKC,UAAUvM,EAAU6rB,WAAavf,KAAKC,UAAUxL,KAAKC,MAAM6qB,SACjFqB,EAAsB5gB,KAAKC,UAAUvM,EAAU8rB,gBAAkBxf,KAAKC,UAAUxL,KAAKC,MAAM8qB,cAC3FqB,EAAoBntB,EAAU+rB,oBAAsBhrB,KAAKC,MAAM+qB,mBAAqB/rB,EAAUgsB,uBAAyBjrB,KAAKC,MAAMgrB,sBAEpIiB,GAAkBL,GAAwBM,GAAuBC,IACnEpsB,KAAK4rB,uSAMDS,EAAmB,SAAApsB,GACvB,IAAMwF,EAAYtE,OAAOC,OACvBnB,EAAM0rB,WACN,CACEvc,EAAE,EACF5P,MAAM,EACNI,MAAM,CAACkG,OAAO,YAEfV,EAAKnF,MAAM0rB,WAAavmB,EAAKnF,MAAM0rB,WAAa,IAMnD,OAHI1rB,EAAMqsB,aACR7mB,EAAUpE,UAAY,GAGtBkO,EAAAnQ,EAAAC,cAACktB,EAAA,EAAD,CACE1mB,eAAe,EACfJ,UAAWA,GAEX8J,EAAAnQ,EAAAC,cAAC8U,EAAA,EAAD,CACE3U,MAAO,EACPE,cAAe,OAEdO,EAAM0B,YAMT6qB,EAA2B,SAAAvsB,GAAK,OAAI,MAEpCwsB,EAAa,SAAAxsB,GACjB,IAAMwF,EAAYtE,OAAOC,OAAOnB,EAAM0rB,WAAW,CAC/CzlB,GAAG,EACHZ,OAAO,EACPjE,UAAU,KACVkE,SAAS,aAEX,OACEgK,EAAAnQ,EAAAC,cAACktB,EAAA,EAAD,CACE9mB,UAAWA,GAEVxF,EAAM0B,WAKPspB,EAAuBjrB,KAAKC,MAAMgrB,qBAAuBjrB,KAAKC,MAAMgrB,qBAAuB,SAAAhrB,GAC/F,OACEsP,EAAAnQ,EAAAC,cAAC8U,EAAA,EACKlU,EAAM0rB,WAEVpc,EAAAnQ,EAAAC,cAAC8U,EAAA,EAAD,CACE3U,MAAO,EACPC,WAAY,SACZC,cAAe,OAEf6P,EAAAnQ,EAAAC,cAAC8U,EAAA,EAAD,CACE3T,WAAY,GAEXP,EAAMwrB,YAAY1qB,MAAMJ,UAO7BqqB,EAAoBhrB,KAAKC,MAAM+qB,kBAAoBhrB,KAAKC,MAAM+qB,kBAAoB,SAAC/qB,GACvF,OACEsP,EAAAnQ,EAAAC,cAAC8U,EAAA,EAAD,CACE3U,MAAO,EACPC,WAAY,SACZC,cAAe,OAEf6P,EAAAnQ,EAAAC,cAAC8U,EAAA,EAAD,KACGlU,EAAMU,SAMT+rB,EAAuB1sB,KAAKC,MAAMysB,qBAAuB1sB,KAAKC,MAAMysB,qBAAuB,SAACzsB,GAEhG,OAAKA,EAAMwrB,YAAYM,aAKrBxc,EAAAnQ,EAAAC,cAAC8U,EAAA,EAADhT,OAAAC,OAAA,GACMnB,EADN,CAEEM,SAAU6E,EAAKnF,MAAMoG,MAAM6d,UAAU,GACrChkB,MAAOkF,EAAKnF,MAAMoG,MAAMC,OAAO6f,UAC/B3lB,WAAY4E,EAAKnF,MAAMoG,MAAM8d,YAAY,GACzC7V,WAAYlJ,EAAKnF,MAAMoG,MAAM4L,MAAMC,UACnC5R,gBAAiB8E,EAAKnF,MAAMoG,MAAMC,OAAOyL,OACzCxO,UAAW,CAACC,IAAOmpB,YAAmC,SAAvBvnB,EAAKnF,MAAMqV,UAAqB9R,IAAOsiB,KAAO,KAAM7lB,EAAMwrB,YAAYa,WAAwC,KAA3B9oB,IAAOopB,sBAXpH,MAgBLC,EAAe,SAAC5sB,GAEpB,IAAM6qB,EAAU7qB,EAAMwrB,YAAYX,QAC9BgC,EAAgB7sB,EAAMwrB,aAAexrB,EAAMwrB,YAAY1qB,OAASd,EAAMwrB,YAAY1qB,MAAMA,MAQ5F,OALI+rB,IAAyE,IAAxDhC,EAAQpkB,IAAK,SAAAqmB,GAAC,OAAIA,EAAEhsB,QAAQ2qB,QAAQoB,IAAyB1nB,EAAKnF,MAAM8qB,eAC3F+B,EAAgB1nB,EAAKnF,MAAM8qB,aAAahqB,OAItC+rB,GAAiBA,IAAkB7sB,EAAMc,MACpC,KAIPwO,EAAAnQ,EAAAC,cAAC8U,EAAA,EAADhT,OAAAC,OAAA,CACEuE,GAAI,EACJD,GAAI,EACJlG,MAAO,GACHS,EAAM0rB,WAJZ,CAKElsB,WAAY,SACZC,cAAe,MACfE,MAAO,CAACkG,OAAO,WACf/F,eAAgB,aAChBwD,UAAWC,IAAOwpB,gBAClB1sB,gBAAkBL,EAAMgtB,UAAY,kBAAoB,aAExD1d,EAAAnQ,EAAAC,cAAC2rB,EACK/qB,cAMND,KAAKgD,SAAS,CAClBypB,aACAI,eACAR,mBACApB,uBACAyB,uBACAF,gKAIK,IAAAjgB,EAAAvM,KACD+rB,EAAkD,qBAA5B/rB,KAAKC,MAAM8rB,cAA+B/rB,KAAKC,MAAM8rB,aACjF,OACExc,EAAAnQ,EAAAC,cAAC6tB,EAAA,EAAD,CACElnB,KAAMhG,KAAKC,MAAM+F,KACjB+lB,aAAcA,EACdjB,QAAS9qB,KAAKC,MAAM6qB,QACpBC,aAAc/qB,KAAKC,MAAM8qB,aACzBxjB,SAAW,SAAAK,GAAC,OAAI2E,EAAKtM,MAAMsH,SAASK,EAAE7G,QACtCosB,WAAY,CACRC,KAAMptB,KAAKoC,MAAMqqB,WACjBY,OAAQrtB,KAAKoC,MAAMyqB,aACnBS,QAASttB,KAAKoC,MAAMiqB,iBACpBkB,MAAOvtB,KAAKoC,MAAMsqB,qBAClBc,YAAaxtB,KAAKoC,MAAM6oB,qBACxBwC,mBAAoBztB,KAAKoC,MAAMoqB,mCAnMbxrB,aA0MfirB,qEChNfrqB,EAAAC,QAAA,CAAkBC,gBAAA,6BAAAC,eAAA,4BAAAC,YAAA,yBAAAC,KAAA,kBAAAC,cAAA,wLCMZgM,6MAEJ9L,MAAQ,KAGRE,cAAgB,gFAGVtC,KAAKsC,cACPtC,KAAKsC,cAAcC,SAASvC,KAAKC,OAEjCD,KAAKsC,cAAgB,IAAIE,IAAcxC,KAAKC,4JAK9CD,KAAKyC,kQAILzC,KAAK0tB,iMAGkBzuB,EAAWC,2EAClCc,KAAKyC,YAECkrB,EAAc1uB,EAAU4D,OAAS7C,KAAKC,MAAM4C,KAC5C+qB,EAAiB3uB,EAAU2M,UAAY5L,KAAKC,MAAM2L,SACnC3M,EAAUmsB,UAAUplB,OAAShG,KAAKC,MAAMmrB,UAAUplB,MACnD2nB,GAAeC,IACjC5tB,KAAK0tB,sQAKDtC,EAAYprB,KAAKC,MAAMmrB,WACzBprB,KAAKC,MAAM4C,OAAQ7C,KAAKC,MAAM2L,8BACxBwf,EAAUplB,YACX,gBAEA,gBAGA,kBAGA,gBAEA,kBAEA,mBAEA,sPAST,IAAIkO,EAAO,KACPhU,EAAQ,KACR2tB,EAAS,KACPzC,EAAYprB,KAAKC,MAAMmrB,UACvBzd,EAAc3N,KAAKC,MAAM0N,YAC3BmgB,EAAUznB,IAAMC,OAAOmF,aAAasd,SAASJ,QAE3CoF,EAAa,CACjBvtB,WAAW,EACXD,SAAS,CAAC,EAAE,GACZL,MAAM,WACNN,MAAM,CACJmE,SAAS,OACTkC,SAAU,SACV+nB,aAAc,YAEhBphB,UAAU,CACR7M,eAAe,eAWnB,OANIqrB,EAAUnrB,OAASkB,OAAOqF,KAAK4kB,EAAUnrB,OAAO8E,QAClD5D,OAAOqF,KAAK4kB,EAAUnrB,OAAOiK,QAAQ,SAAAkF,GACnC2e,EAAW3e,GAAKgc,EAAUnrB,MAAMmP,KAI5Bgc,EAAUplB,MAChB,IAAK,OAKH,OAJI2H,EAAYrE,SACdpJ,EAAQmG,IAAMC,OAAOmF,aAAanC,OAAOqE,EAAYrE,OAAOC,eAAiBlD,IAAMC,OAAOmF,aAAanC,OAAOqE,EAAYrE,OAAOC,eAAiBrJ,EAClJ4tB,EAAUznB,IAAMC,OAAOmF,aAAasd,SAASpb,EAAYrE,OAAOC,eAAiBlD,IAAMC,OAAOmF,aAAasd,SAASpb,EAAYrE,OAAOC,eAAiBukB,GAElJngB,EAAYrE,OAAOC,eACzB,IAAK,UACL,IAAK,WACL,IAAK,cACL,IAAK,kBACH2K,EAAO,gBACT,MACA,IAAK,QACHA,EAAO,aACT,MACA,IAAK,SACL,IAAK,UACL,IAAK,aACL,IAAK,iBACHA,EAAO,cACT,MACA,IAAK,OACHA,EAAO,OACT,MACA,IAAK,UACHA,EAAO,OACT,MACA,IAAK,UAEHA,EAAO,SACT,MACA,IAAK,OAGL,IAAK,UACHA,EAAO,YACT,MACA,IAAK,WACHA,EAAO,cACT,MACA,QACEA,EAAO,UAGX2Z,EACEte,EAAAnQ,EAAAC,cAAC4uB,EAAA,EAAD9sB,OAAAC,OAAA,CACEgO,EAAG,MACH/O,aAAc,OACV0tB,EAHN,CAIEtuB,WAAY,SACZa,gBAAiBwtB,EACjB/tB,eAAgB,WAEhBwP,EAAAnQ,EAAAC,cAAC4uB,EAAA,EAAD,CACEjoB,KAAMkO,EACNhU,MAAOA,EACPguB,MAAO,SACPhrB,KAAMlD,KAAKC,MAAM8F,SAAW,MAAQ,WAI5C,MACA,IAAK,OACC4H,EAAY9K,OACdgrB,EACEte,EAAAnQ,EAAAC,cAAC4uB,EAAA,EAAD,CACEzf,OAAQ,SACRC,IAAK,+BACLgV,KAAI,2BAAArd,OAA6BuH,EAAY9K,OAE7C0M,EAAAnQ,EAAAC,cAAC8uB,EAAA,EAADhtB,OAAAC,OAAA,CACEb,SAAU,EACVL,MAAO,SACH6tB,EAHN,CAIEprB,gBAAgB,EAChBE,KAAM8K,EAAY9K,UAK5B,MACA,IAAK,SACH,IAAIyG,EAASqE,EAAYrE,OACzB,OAAQqE,EAAYrE,QAClB,IAAK,OACHA,EAAS,UACX,MACA,IAAK,UACHA,EAAS,WAKbukB,EACEte,EAAAnQ,EAAAC,cAAC4uB,EAAA,EAASF,EAAazkB,EAAOtC,eAElC,MACA,IAAK,OACH,IAAM0S,EAAgB/L,EAAY3C,WAAW2O,OAAO,gBACpDkU,EACEte,EAAAnQ,EAAAC,cAAC4uB,EAAA,EAASF,EAAarU,GAE3B,MACA,IAAK,aAEH,OADAxZ,EAAQmG,IAAMC,OAAOmF,aAAarH,OAAOuJ,EAAYvJ,OAAOmF,eACpDoE,EAAYvJ,QAClB,IAAK,YACH8P,EAAO,OACT,MACA,IAAK,UACHA,EAAO,YACT,MACA,IAAK,SACHA,EAAO,eAKX2Z,EACEte,EAAAnQ,EAAAC,cAAC4uB,EAAA,EAAD9sB,OAAAC,OAAA,CACEgO,EAAG,CAAC,EAAE,OACN/O,aAAc,OACV0tB,EAHN,CAIEtuB,WAAY,SACZD,MAAO,CAAC,OAAO,QACfY,OAAQ,CAAC,OAAO,QAChBL,eAAgB,SAChBquB,OAASpuB,KAAKC,MAAM8F,SAAX,aAAAK,OAAmClG,GAAnC,aAAAkG,OAA0DlG,KAEnEqP,EAAAnQ,EAAAC,cAAC4uB,EAAA,EAAD,CACEjoB,KAAMkO,EACNhU,MAAOA,EACPguB,MAAO,SACPhrB,KAAOlD,KAAKC,MAAM8F,SAAW,MAAQ,WAI7C,MACA,IAAK,SACH8nB,EACEte,EAAAnQ,EAAAC,cAAC4uB,EAAA,EAASF,EAAapgB,EAAYvJ,QAEvC,MACA,IAAK,SACHypB,EACEte,EAAAnQ,EAAAC,cAACgvB,EAAA,EAADltB,OAAAC,OAAA,GAAiB2sB,EAAjB,CAA6Bnf,OAAQjB,EAAY7C,UAErD,MACA,IAAK,YACH,IAAMwjB,EAAc3gB,EAAY2gB,YAAYtnB,cACtCqD,EAAcrK,KAAKsC,cAAcwJ,gBAAgB,CAAC,QAAQ,SAASwiB,IACnEC,EAAUlkB,GAAeA,EAAY6J,KAAO7J,EAAY6J,KAA9C,iBAAA9N,OAAsEkoB,EAAtE,QAChBT,EACEte,EAAAnQ,EAAAC,cAAC4uB,EAAA,EAAD9sB,OAAAC,OAAA,CAAOgT,IAAKma,GAAaR,IAE7B,MACA,IAAK,YACHF,EACEte,EAAAnQ,EAAAC,cAAC4uB,EAAA,EAASF,EAAapgB,EAAY2gB,YAAYtnB,eAMrD,OAAO6mB,SA9PoB7sB,aAkQhBkN,yJCrQTsgB,mLAEF,IAAM/oB,EAAYtE,OAAOC,OAAO,CAC9BsE,GAAG,EACHlG,MAAM,OACNmG,GAAG,CAAC,OAAO,IACX3F,KAAKC,MAAMwF,WAEb,OACGiP,EAAAtV,EAAAC,cAACuQ,EAAA,EAAD,CACEnK,UAAWA,EACXI,eAAe,EACf4oB,SAAUzuB,KAAKC,MAAMwuB,SACrB/sB,YAAa1B,KAAKC,MAAMyB,aAExBgT,EAAAtV,EAAAC,cAACsV,EAAA,EAAD,CACEvN,GAAI,EACJ3H,WAAY,SACZC,cAAe,MACfK,eAAgB,UAGfC,KAAKC,MAAMyuB,MACTha,EAAAtV,EAAAC,cAACsV,EAAA,EAADxT,OAAAC,OAAA,CACE8sB,MAAO,SACP9Z,IAAKpU,KAAKC,MAAMyuB,MAChBtuB,OAASJ,KAAKC,MAAM8F,SAAW,QAAU,QACzCvG,MAAQQ,KAAKC,MAAM8F,SAAW,QAAU,SACpC/F,KAAKC,MAAM0uB,aAEf3uB,KAAKC,MAAM2uB,YACbla,EAAAtV,EAAAC,cAACsV,EAAA,EAADxT,OAAAC,OAAA,CACE8sB,MAAO,SACPloB,KAAMhG,KAAKC,MAAMiU,KACjBhR,KAAOlD,KAAKC,MAAM8F,SAAW,QAAU,QACvC7F,MAAQF,KAAKC,MAAM4uB,UAAY7uB,KAAKC,MAAM4uB,UAAY,UAClD7uB,KAAKC,MAAM6uB,YAGlBpa,EAAAtV,EAAAC,cAACsV,EAAA,EAAD,CACExU,GAAI,EACJiP,EAAG,CAAC,MAAM,OACV/O,aAAc,MACdZ,WAAY,SACZM,eAAgB,SAChBO,gBAAkBN,KAAKC,MAAM8uB,YAAc/uB,KAAKC,MAAM8uB,YAAc/uB,KAAKC,MAAMoG,MAAMC,OAAOmF,aAAasd,SAASxgB,QAElHmM,EAAAtV,EAAAC,cAACsV,EAAA,EAADxT,OAAAC,OAAA,CACE8sB,MAAO,SACPloB,KAAMhG,KAAKC,MAAMiU,KACjBhR,KAAOlD,KAAKC,MAAM8F,SAAW,QAAU,QACvC7F,MAAQF,KAAKC,MAAM4uB,UAAY7uB,KAAKC,MAAM4uB,UAAY,UAClD7uB,KAAKC,MAAM6uB,aAKrBpa,EAAAtV,EAAAC,cAACsV,EAAA,EAADxT,OAAAC,OAAA,CACEZ,WAAY,EACZD,SAAU,CAAC,EAAE,IACTP,KAAKC,MAAM8M,WAEd/M,KAAKC,MAAMoC,eA9DIrB,aAsEdwtB,ilJCvETQ,mLACK,IAAAvqB,EAAAzE,KACDC,EAAQ,CACZO,WAAW,EACXD,SAAS,CAAC,EAAE,GACZL,MAAM,YACNO,UAAU,SACVwuB,WAAW,WAITjvB,KAAKC,OAASkB,OAAOqF,KAAKxG,KAAKC,OAAO8E,QACxC5D,OAAOqF,KAAKxG,KAAKC,OAAOiK,QAAQ,SAAAkF,GAC9BnP,EAAMmP,GAAK3K,EAAKxE,MAAMmP,KAI1B,IAAM8f,EAAmBlvB,KAAKC,MAAMkvB,UAAYnvB,KAAKC,MAAMkvB,UAAYC,IAAQC,GAE/E,OACE9tB,EAAAnC,EAAAC,cAAC6vB,EACKjvB,EAEHD,KAAKC,MAAM0B,iBAvBAX,aA6BLguB,gHC1BTM,6MACJltB,MAAQ,CACN5C,MAAM,KACNY,OAAO,QAGTqQ,oBAAqB,sFAGnB7C,OAAO2hB,iBAAiB,SAAUvvB,KAAKwvB,uBAAuBriB,KAAKnN,sDAInEA,KAAKyQ,oBAAqB,EAC1B7C,OAAO6hB,oBAAoB,SAAUzvB,KAAKwvB,oEAI1CxvB,KAAKwvB,oEAGYvwB,GACbA,EAAU8G,WAAa/F,KAAKC,MAAM8F,UACpC/F,KAAKwvB,0EAKP,GAAIxvB,KAAKyQ,mBACP,OAAO,EAGT,IAAME,EAAQxP,OAAA+hB,EAAA,EAAA/hB,CAAA,GAAOnB,KAAKoC,OAE1B,GAAIpC,KAAKC,MAAMyd,SAAS,CACtB,IAAMgS,EAAiBC,SAASC,eAAe5vB,KAAKC,MAAMyd,UAC1D,GAAIgS,EAAe,CACjB,IAAMG,EAAanmB,WAAWgmB,EAAeI,aAAa,EAAIJ,EAAeI,YAAc,EAEvFD,GAAcA,IAAelf,EAASnR,QACxCmR,EAASnR,MAAQqwB,IASvB,IAJKlf,EAASnR,OAASQ,KAAKC,MAAMT,OAASQ,KAAKC,MAAMT,QAAUmR,EAASnR,QACvEmR,EAASnR,MAAQQ,KAAKC,MAAMT,OAG1BQ,KAAKC,MAAM0d,eAAe,CAC5B,IAAMoS,EAAkBJ,SAASC,eAAe5vB,KAAKC,MAAM0d,gBAC3D,GAAIoS,EAAgB,CAClB,IAAMhb,EAAcrL,WAAWqmB,EAAgBD,aAAa,EAAIC,EAAgBD,YAAc,EAC1F/a,GAAeA,IAAgBpE,EAASvQ,SAC1CuQ,EAASvQ,OAAS2U,KAKnBpE,EAASvQ,QAAUJ,KAAKC,MAAMG,QAAUJ,KAAKC,MAAMG,SAAWuQ,EAASvQ,SAC1EuQ,EAASvQ,OAASJ,KAAKC,MAAMG,QAG3Be,OAAOqF,KAAKmK,GAAU5L,OAAO,GAC/B/E,KAAKgD,SAAS2N,oCAKhB,IAAMqf,EAAYhwB,KAAKC,MAAM6O,KAEvB1O,EAASJ,KAAKoC,MAAMhC,SAAWyO,MAAM7O,KAAKoC,MAAMhC,QAAUkM,SAAStM,KAAKoC,MAAMhC,QAAU,IACxFZ,EAAQQ,KAAKoC,MAAM5C,QAAUqP,MAAM7O,KAAKoC,MAAM5C,OAAS8M,SAAStM,KAAKoC,MAAM5C,OAAS,EAEtF4Q,EAAajP,OAAOC,OAAO,GAAGpB,KAAKC,OAOvC,QANAmQ,EAAUjP,OAAA+hB,EAAA,EAAA/hB,CAAA,GACLiP,EADK,CAERhQ,SACAZ,WAGgBgV,YAAgBpE,EAAWL,MAASvQ,GAAUY,EAc5DJ,KAAKC,MAAM8P,MACbxO,EAAAnC,EAAAC,cAAC2wB,EACK5f,GAfN7O,EAAAnC,EAAAC,cAAC4wB,EAAA,EAAD,CACErjB,UAAW,CACTlN,cAAc,MACdmN,UAAUzM,GAEZ0M,YAAc9M,KAAKC,MAAM6M,YAAc9M,KAAKC,MAAM6M,YAAc,CAC9D5J,KAAK,QAEP6J,UAAW,CACTrF,GAAG,GAELrF,UAAiC2C,IAA1BhF,KAAKC,MAAMiwB,WAA2BlwB,KAAKC,MAAMiwB,WAAa,iCA7FlDlvB,aAuGZsuB,gDC5Gf1tB,EAAAC,QAAA,CAAkBsuB,eAAA,sCAAAC,OAAA,8BAAAC,YAAA,mCAAAC,QAAA,+BAAAhL,SAAA,2XCIZiL,6MAGJjuB,cAAgB,gFAGVtC,KAAKsC,cACPtC,KAAKsC,cAAcC,SAASvC,KAAKC,OAEjCD,KAAKsC,cAAgB,IAAIE,IAAcxC,KAAKC,4JAK9CD,KAAKyC,iMAGkBxD,EAAUC,mEACjCc,KAAKyC,kJAKL,IAAIgD,EAAY,CACd2J,EAAE,EACF5P,MAAM,IACNgxB,YAAYxwB,KAAKC,MAAMuwB,aAGrBzjB,EAAY,CACdxM,SAAS,EACTC,WAAW,EACXC,UAAU,SACVP,MAAMF,KAAKC,MAAMwuB,SAAW,YAAc,YAM5C,OAHAhpB,EAAYzF,KAAKsC,cAAcmuB,kBAAkBhrB,EAAUzF,KAAKC,MAAMwF,WACtEsH,EAAY/M,KAAKsC,cAAcmuB,kBAAkB1jB,EAAU/M,KAAKC,MAAM8M,WAGpEwC,EAAAnQ,EAAAC,cAACqxB,EAAA,EAAD,CACE7qB,eAAe,EACfJ,UAAWA,EACXgpB,SAAUzuB,KAAKC,MAAMwuB,UAErBlf,EAAAnQ,EAAAC,cAACmQ,EAAA,EACKzC,EAEH/M,KAAKC,MAAMge,WAHd,aA7C0Bjd,aAuDnBuvB,0PC0NAI,6MA5QbvuB,MAAQ,CACNiI,YAAY,KACZumB,aAAa,KACbxmB,cAAc,KACdymB,eAAe,KACfvmB,gBAAgB,QAIlBhI,cAAgB,gFAGVtC,KAAKsC,cACPtC,KAAKsC,cAAcC,SAASvC,KAAKC,OAEjCD,KAAKsC,cAAgB,IAAIE,IAAcxC,KAAKC,2JAK9CD,KAAKyC,YACLzC,KAAK0C,gMAGkBzD,EAAUC,8EACjCc,KAAKyC,cAEwBvD,EAAUkL,gBAAkBpK,KAAKoC,MAAMgI,sCAE5DC,EAAcrK,KAAKC,MAAM6wB,UAAUxmB,gBAAgBtK,KAAKoC,MAAMgI,eAC9DwmB,EAAevmB,EAAY0mB,kBAG3BnS,QAAQkD,IAAI,CAChB9hB,KAAKC,MAAM+wB,aAAaJ,EAAa5qB,KAAK4qB,EAAand,QAAQmd,EAAaK,KAC5EjxB,KAAKC,MAAM+wB,aAAahxB,KAAKoC,MAAMgI,cAAcC,EAAYoJ,QAAQpJ,EAAY4mB,cAGnFjxB,KAAKgD,SAAS,CACZqH,cACAumB,kRAMEtmB,EAAkBnJ,OAAOqF,KAAKxG,KAAKC,MAAM6wB,UAAUxmB,iBAAiB4mB,OAAQ,SAACrD,EAAOlkB,GACxF,IAAMU,EAAcjF,EAAKnF,MAAM6wB,UAAUxmB,gBAAgBX,GAOzD,OANIU,EAAY8mB,SACdtD,EAAO3iB,KAAP/J,OAAAuD,EAAA,EAAAvD,CAAA,CACEJ,MAAM4I,GACHU,IAGAwjB,GACP,IAEIgD,EAAiBvmB,EAAgB,GACjCF,EAAgBymB,EAAe9vB,MAErCf,KAAKgD,SAAS,CACZoH,gBACAymB,iBACAvmB,0JAIQF,GACVpK,KAAKgD,SAAS,CACZoH,mDAMF,IAsGMgnB,EAAoBpxB,KAAKoC,MAAMiI,YAAcrK,KAAKoC,MAAMiI,YAAY8kB,UAAY,KAEtF,OACE9rB,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPC,WAAY,SACZC,cAAe,SACfK,eAAgB,UAGbC,KAAKoC,MAAMkI,gBAmBVjH,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPC,WAAY,SACZM,eAAgB,UAGbC,KAAKoC,MAAMkI,gBAAgBvF,OAU1B1B,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,CAAC,EAAE,KACVC,WAAY,UACZC,cAAe,SACfK,eAAgB,UAEhBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,GAEP6D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/D,GAAI,GADN,iBAKA8D,EAAAjE,EAAAC,cAAC4sB,EAAA,EAAD9qB,OAAAC,OAAA,GACMpB,KAAKC,MADX,CAEE+F,KAAM,SACN+lB,cAAc,EACdjB,QAAS9qB,KAAKoC,MAAMkI,gBACpB0gB,kBAtKM,SAAA/qB,GACxB,IAAMU,EAAQV,EAAMU,MACd0J,EAAc,CAClB6J,KAAKjU,EAAM8P,KAAKmE,MAGlB,OACE7Q,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPC,WAAY,SACZC,cAAe,MACfK,eAAgB,iBAEhBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE7D,WAAY,UAEZ4D,EAAAjE,EAAAC,cAACgyB,EAAA,EAAD,CACE1nB,MAAOhJ,EACP0J,YAAaA,EACb+gB,UAAW,CACTplB,KAAK,OACL/F,MAAM,CACJE,GAAG,EACHX,MAAM,MACNY,OAAO,UAIbiD,EAAAjE,EAAAC,cAACgyB,EAAA,EAAD,CACE1nB,MAAOhJ,EACPyqB,UAAW,CACTplB,KAAK,YACL/F,MAAM,CACJM,SAAS,CAAC,EAAE,GACZC,WAAW,IACXN,MAAM,mBAoIAqH,SAAUvH,KAAKsxB,YAAYnkB,KAAKnN,MAChC+qB,aAAc/qB,KAAKoC,MAAMyuB,eACzB5F,qBA7HS,SAAAhrB,GAE3B,IACMwrB,GAA4D,IADlDxrB,EAAMwrB,YAAYX,QACNY,QAAQzrB,EAAMwrB,YAAY1qB,OAAgBd,EAAMwrB,YAAY1qB,MAAQ,KAEhG,IAAK0qB,EACH,OAAO,KAGT,IAAM9qB,EAAQ8qB,EAAY9qB,MACpB0J,EAAc,CAClB6J,KAAKuX,EAAYvX,MAGnB,OACE7Q,EAAAjE,EAAAC,cAACiE,EAAA,EAADnC,OAAAC,OAAA,CACExB,MAAO,CACLE,KAAK,KAEPC,eAAgB,iBACZE,EAAM0rB,YAEVtoB,EAAAjE,EAAAC,cAACiE,EAAA,EAADnC,OAAAC,OAAA,CACEgO,EAAG,EACH5P,MAAO,GACHS,EAAM0rB,WAHZ,CAIElsB,WAAY,SACZC,cAAe,MACfE,MAAO,CAACkG,OAAO,WACf/F,eAAgB,eAEhBsD,EAAAjE,EAAAC,cAACgyB,EAAA,EAAD,CACE1nB,MAAOhJ,EACP0J,YAAaA,EACb+gB,UAAW,CACTplB,KAAK,OACL/F,MAAM,CACJE,GAAG,EACHC,OAAO,UAIbiD,EAAAjE,EAAAC,cAACgyB,EAAA,EAAD,CACE1nB,MAAOhJ,EACPyqB,UAAW,CACTplB,KAAK,YACL/F,MAAM,CACJM,SAAS,CAAC,EAAE,GACZC,WAAW,IACXN,MAAM,uBAgFFkxB,GACE/tB,EAAAjE,EAAAC,cAAC+xB,EAADjwB,OAAAC,OAAA,GACMpB,KAAKC,MADX,CAEEoK,YAAarK,KAAKoC,MAAMiI,YACxBumB,aAAc5wB,KAAKoC,MAAMwuB,aACzBxmB,cAAepK,KAAKoC,MAAMgI,kBAxClC/G,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9C,WAAY,EACZD,SAAU,CAAC,EAAE,GACbL,MAAO,YACPO,UAAW,UAJb,gCAzBN4C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJxG,cAAe,UAEf2D,EAAAjE,EAAAC,cAACsN,EAAA,EAAD,CACEC,UAAW,CACTlN,cAAc,OAEhBoN,YAAa,CACX5J,KAAK,QAEP6J,UAAW,CACTrF,GAAG,GAELrF,KAAM,+BA5MArB,0DC4QPuwB,6MA7QbnvB,MAAQ,CACNiI,YAAY,KACZmnB,kBAAkB,KAClBC,kBAAkB,KAClBC,2BAA2B,QAI7BpvB,cAAgB,OA4HhBqvB,sDAAkB,SAAApT,EAAOiT,GAAP,IAAAC,EAAAC,EAAAE,EAAA,OAAAC,EAAAzyB,EAAA6W,KAAA,SAAAwI,GAAA,cAAAA,EAAAtI,KAAAsI,EAAArI,MAAA,OACZqb,EAAoB,KAClBC,EAA6B,GACXjtB,EAAKnC,cAAcwJ,gBAAgB,CAAC,WAAW,YAAY,YAAY,oBAE/E5B,QAAS,SAAAP,GACnBA,IAAU6nB,IACPC,IACHA,EAAoB9nB,GAEtB+nB,EAA2B/nB,GAAS,CAClCA,aAKAioB,EAAYntB,EAAKnC,cAAcwJ,gBAAgB,CAAC,iBACpC0lB,IAChBE,EAA2BE,GAAa,CACtCjoB,MAAMioB,IAIVntB,EAAKzB,SAAS,CACZwuB,oBACAE,8BACA,WACAjtB,EAAKqtB,gBAAgBL,KA3BP,wBAAAhT,EAAA7H,SAAA2H,EAAAve,iEA+BlB8xB,sDAAkB,SAAA/S,EAAO0S,GAAP,OAAAI,EAAAzyB,EAAA6W,KAAA,SAAAiJ,GAAA,cAAAA,EAAA/I,KAAA+I,EAAA9I,MAAA,OAChB3R,EAAKzB,SAAS,CACZyuB,sBAFc,wBAAAvS,EAAAtI,SAAAmI,EAAA/e,iEAMlB2I,KAAO,WACL,IAAMiL,EAAgBnP,EAAKnC,cAAcyvB,mBACnCC,EAAkBvtB,EAAKrC,MAAM6vB,aAC7BC,EAAY,CAChBN,UAAUntB,EAAKrC,MAAMovB,kBACrBpnB,cAAc3F,EAAKrC,MAAMqvB,kBACzBU,SAAQ,iBAAA/rB,OAAkB3B,EAAKrC,MAAMovB,kBAA7B,KAAAprB,OAAkD3B,EAAKrC,MAAMqvB,oBAEjEW,EAAaJ,GAAmBA,EAAgBK,cAAgBL,EAAgBK,cAAcH,EAAUte,GAAiB,KAGzF,oBAA3Boe,EAAgBM,QACzBN,EAAgBM,OAAOF,EAAW,KAAKF,GAIzCztB,EAAKnC,cAAciwB,yBAAyB,CAC1CC,cAAe,QACfC,YAAa,YACbC,WAAU,GAAAtsB,OAAK3B,EAAKrC,MAAMovB,kBAAhB,KAAAprB,OAAqC3B,EAAKrC,MAAMqvB,iGAjLxDzxB,KAAKsC,cACPtC,KAAKsC,cAAcC,SAASvC,KAAKC,OAEjCD,KAAKsC,cAAgB,IAAIE,IAAcxC,KAAKC,6KAMzCD,KAAKoC,MAAMovB,mBAAsBxxB,KAAKoC,MAAMqvB,4DACxC,UAGQ,aACXQ,EAAejyB,KAAKsC,cAAcwJ,gBAAgB,CAAC,WAAW,YADnD,eAEAqlB,SAAWc,EAAaU,kBAEjC/e,EAAgB5T,KAAKsC,cAAcyvB,mBACnCY,EAAkBV,EAAaU,gBAErCxxB,OAAOqF,KAAKmsB,GAAiBzoB,QAAQ,SAAC0oB,EAAIC,GAIxC,OAFqBD,EAAIE,MAAM,KAAK1mB,MAAM7C,eAGxC,IAAK,KACH,IAAMwpB,EAAQ,UAAA3sB,OAbL,YAaK,KAAAA,OAAyBysB,EAAzB,KAAAzsB,OAA8BhB,EAAKhD,MAAMovB,kBAAzC,KAAAprB,OAA8DhB,EAAKhD,MAAMqvB,mBAEvF,IAAK9B,SAASC,eAAemD,GAAU,CACrC,IAAMC,EAASrD,SAAStwB,cAAc,UAChC4zB,EAAuBN,EAAgBC,GACvChiB,EAAWqiB,GAAwBA,EAAqBriB,SAAWqiB,EAAqBriB,SAAW,KACnGsiB,EAAUD,GAAwBA,EAAqBC,QAAUD,EAAqBC,QAAU,KAEtG,GAAIA,GAA8B,oBAAZA,EAMpBA,EALqB,CACnBtB,UAAUxsB,EAAKhD,MAAMovB,kBACrBpnB,cAAchF,EAAKhD,MAAMqvB,kBACzBU,SAAQ,iBAAA/rB,OAAkBhB,EAAKhD,MAAMovB,kBAA7B,KAAAprB,OAAkDhB,EAAKhD,MAAMqvB,oBAElD7d,EAAcqe,GAGjCrhB,GAAgC,oBAAbA,IACjBoiB,EAAOG,WACTH,EAAOI,mBAAqB,WACC,WAAtBJ,EAAOG,YAAiD,aAAtBH,EAAOG,aAC5CH,EAAOI,mBAAqB,KAC5BxiB,MAIJoiB,EAAOK,OAASziB,GAIpBoiB,EAAOhmB,GAAK+lB,EACZC,EAAOzvB,UAAP,UAAA6C,OA5CO,aA6CP4sB,EAAO5e,IAAMwe,EACbI,EAAOM,OAAQ,EAEXL,GAAwBA,EAAqBM,cAC/CN,EAAqBM,cAAcC,YAAYR,GAE/CrD,SAAS8D,KAAKD,YAAYR,GAGhC,MACA,IAAK,MACH,IAAMU,EAAY,cAAAttB,OAxDT,YAwDS,KAAAA,OAA6BysB,GAE/C,IAAKlD,SAASC,eAAe8D,GAAc,CACzC,IAAM9zB,EAAQ+vB,SAAStwB,cAAc,QAErCO,EAAMoN,GAAK0mB,EACX9zB,EAAM6O,IAAM,aACZ7O,EAAM6jB,KAAOmP,EAEbjD,SAAS8D,KAAKD,YAAY5zB,QASpCI,KAAKgD,SAAS,CACZivB,+QAKFjyB,KAAKyC,qBACCzC,KAAK2zB,gRAILnC,EAAoBrwB,OAAOqF,KAAKxG,KAAKC,MAAM6wB,UAAUxmB,iBAAiB,YAEtEtK,KAAKsC,cAAcmT,aAAatU,OAAOqF,KAAKxG,KAAKC,MAAM6wB,UAAUxmB,iBAAjE,eAAAuU,EAAA1d,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAAkF,SAAAkK,EAAOpW,GAAP,IAAAU,EAAA,OAAAwnB,EAAAzyB,EAAA6W,KAAA,SAAAgK,GAAA,cAAAA,EAAA9J,KAAA8J,EAAA7J,MAAA,UAChF/L,EAAckC,EAAKtM,MAAM6wB,UAAUxmB,gBAAgBX,GACnC4C,EAAKjK,cAAcuxB,kBAAkBxpB,EAAYV,SACjDU,EAAY4mB,IAHoD,CAAAhR,EAAA7J,KAAA,eAAA6J,EAAA7J,KAAA,EAI9E7J,EAAKtM,MAAM+wB,aAAa3mB,EAAYV,MAAMU,EAAYoJ,QAAQpJ,EAAY4mB,KAJI,wBAAAhR,EAAArJ,SAAAmJ,EAAA/f,SAAlF,gBAAA6W,GAAA,OAAAgI,EAAA/H,MAAA9W,KAAA8E,YAAA,WAQN9E,KAAK2xB,gBAAgBH,wLAGEvyB,EAAUC,2EACjCc,KAAKyC,YAECqxB,EAAmB50B,EAAUsyB,oBAAsBxxB,KAAKoC,MAAMovB,kBAC9DuC,EAAmB70B,EAAUuyB,oBAAsBzxB,KAAKoC,MAAMqvB,mBAC/DqC,GAAqBC,IAAqB/zB,KAAKoC,MAAMovB,mBAAqBxxB,KAAKoC,MAAMqvB,mBACxFzxB,KAAKg0B,wJAgEA,IAAAxnB,EAAAxM,KAEP,OAAKA,KAAKoC,MAAMovB,kBAKdnuB,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACP0G,GAAI,CAAC,EAAE,GACPzG,WAAY,SACZC,cAAe,SACfK,eAAgB,UAEhBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,CAAC,EAAE,KACVC,WAAY,UACZC,cAAe,SACfK,eAAgB,UAEhBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,GAEP6D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM/D,GAAI,GAAV,yBAGA8D,EAAAjE,EAAAC,cAACwrB,EAAA,EAAD1pB,OAAAC,OAAA,GACMpB,KAAKC,MADX,CAEEurB,aAAa,EACbO,cAAc,EACdxkB,SAAUvH,KAAK2xB,gBACfvnB,cAAepK,KAAKoC,MAAMovB,kBAC1BlnB,gBAAiBtK,KAAKC,MAAM6wB,UAAUxmB,oBAIxCtK,KAAKoC,MAAMsvB,4BAA8B1xB,KAAKoC,MAAMqvB,mBAClDpuB,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ1G,MAAO,GAEP6D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM/D,GAAI,GAAV,6BAGA8D,EAAAjE,EAAAC,cAACwrB,EAAA,EAAD1pB,OAAAC,OAAA,GACMpB,KAAKC,MADX,CAEEurB,aAAa,EACbO,cAAc,EACdxkB,SAAUvH,KAAK8xB,gBACf1nB,cAAepK,KAAKoC,MAAMqvB,kBAC1BnnB,gBAAiBtK,KAAKoC,MAAMsvB,+BAIpCruB,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ1G,MAAO,EACPO,eAAgB,UAEhBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE8D,GAAI,EACJ3D,GAAI,CAAC,EAAG,GACRP,KAAM,SACN7C,aAAc,EACdiB,UAAW,OACXG,QAAU,SAAA+F,GAAC,OAAIgF,EAAK7D,KAAKnB,IACzB8d,UAAYtlB,KAAKoC,MAAMovB,oBAAsBxxB,KAAKoC,MAAMqvB,mBAP1D,kBAxDC,YArMWzwB,qGCutBTizB,6MA/sBb7xB,MAAQ,CACN8b,WAAW,CACT3Q,OAAO,KACPpF,SAAQ,GAEV+rB,WAAW,KACXC,aAAY,EACZC,eAAc,EACdC,eAAc,EACdC,gBAAe,EACfC,kBAAiB,EACjBC,oBAAoB,QAItBlyB,cAAgB,OAkDhBmyB,iBAAmB,SAACjtB,GAAyB,IAAvBktB,IAAuB5vB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAErCovB,EAAa1sB,EAAEgH,OAAOzN,MAAMgE,SAAW8J,MAAMrH,EAAEgH,OAAOzN,OAAS0D,EAAKnC,cAAc+T,MAAM7O,EAAEgH,OAAOzN,OAAS0D,EAAKnC,cAAc+T,MAAM,GACrI5R,EAAKrC,MAAM8xB,aAAeA,GAC5BzvB,EAAKzB,SAAS,SAAC9D,GAAD,MAAgB,CAC5Bg1B,aACAM,oBALwB,OAMvB,WACGE,GAA2D,oBAAnCjwB,EAAKxE,MAAM00B,qBACrClwB,EAAKxE,MAAM00B,oBAAoBlwB,EAAKrC,MAAM8xB,iBAMlDU,cAAgB,WACd,GAAuC,OAAnCnwB,EAAKrC,MAAMoyB,oBACb,OAAO,EAET,IAAMK,EAAqBpwB,EAAKnC,cAAc+T,MAAM5R,EAAKrC,MAAMoyB,qBAAqBxT,IAAI,KAClFkT,EAAazvB,EAAKxE,MAAM60B,eAAiBrwB,EAAKnC,cAAc+T,MAAM5R,EAAKxE,MAAM60B,cAAcjmB,QAAUpK,EAAKnC,cAAc+T,MAAM5R,EAAKxE,MAAM60B,cAAcnhB,MAAMkhB,GAAsB,KAEzLpwB,EAAKzB,SAAS,SAAC9D,GAAD,MAAgB,CAC5Bg1B,eACC,WAC6C,oBAAnCzvB,EAAKxE,MAAM00B,qBACpBlwB,EAAKxE,MAAM00B,oBAAoBlwB,EAAKrC,MAAM8xB,iBAKhDa,uBAAyB,WACvB,OAAuC,OAAnCtwB,EAAKrC,MAAMoyB,qBAGR/vB,EAAKnC,cAAc+T,MAAM5R,EAAKrC,MAAMoyB,qBAAqBxT,IAAI,QAetEgU,uBAAyB,SAACR,GACxB/vB,EAAKzB,SAAS,CACZwxB,2BAIJS,oBAAsB,WAAiB,IAAhBnqB,EAAgBhG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAT,KACvBgG,IACHA,EAASrG,EAAKrC,MAAM8xB,YAGtB,IAAMI,GADNxpB,EAASrG,EAAKnC,cAAc+T,MAAMvL,IACJ+D,SAAW/D,EAAOoqB,IAAI,IAAMpqB,EAAOqO,GAAG1U,EAAKxE,MAAM60B,cAC/ErwB,EAAKzB,SAAS,CACZsxB,sBAIJa,6BAAU,SAAA5W,IAAA,IAAA6W,EAAAC,EAAA,OAAAxD,EAAAzyB,EAAA6W,KAAA,SAAAwI,GAAA,cAAAA,EAAAtI,KAAAsI,EAAArI,MAAA,cAAAqI,EAAArI,KAAA,EAEuB3R,EAAK6wB,wBAF5B,OAAA7W,EAAAtG,KA8DN1T,EAAKzB,SAAS,CACZuxB,kBAAiB,KAzDba,EAAkB,SAAC3rB,EAAGsU,GAE1B,IAAMwX,EAAY,CAChB9C,YAAa,UACbD,cAAe,eACfE,WAAYjpB,EAAKA,EAAGrF,OAAS,MAGzB+vB,EAAc1qB,GAAoB,YAAdA,EAAGrF,OAEzB2Z,IACFwX,EAAU7C,WAAajuB,EAAKnC,cAAckzB,oBAAoBzX,KAI5DA,GAA8B,UAArBwX,EAAUnxB,SACrBK,EAAKnC,cAAciwB,yBAAyBgD,GAG9C9wB,EAAKzB,SAAS,SAAC9D,GAAD,MAAgB,CAC5Bq1B,iBAAkBJ,EAClBjW,WAAW/c,OAAAuD,EAAA,EAAAvD,CAAA,GACNjC,EAAUgf,WADL,CAER3Q,OAAO,KACPpF,SAAQ,OAI8B,oBAA/B1D,EAAKxE,MAAMm1B,iBAAkCjB,GACtD1vB,EAAKxE,MAAMm1B,gBAAgB3rB,IAIzB4rB,EAAyB,SAAC5rB,GAC9B,IAAM8D,EAAS9D,EAAGgsB,gBAClBhxB,EAAKzB,SAAS,SAAC9D,GAAD,MAAgB,CAC5Bgf,WAAW/c,OAAAuD,EAAA,EAAAvD,CAAA,GACNjC,EAAUgf,WADL,CAER3Q,eAON9I,EAAKnC,cAAcozB,YAAYjxB,EAAKxE,MAAMoK,YAAYV,MAAMlF,EAAKxE,MAAM2wB,aAAand,QAAQ2hB,EAAgBC,GAE5G5wB,EAAKzB,SAAS,SAAC9D,GAAD,MAAgB,CAC5Bgf,WAAW/c,OAAAuD,EAAA,EAAAvD,CAAA,GACNjC,EAAUgf,WADL,CAER3Q,OAAO,KACPpF,SAAQ,IAEVosB,kBAAiB,MA3Db,wBAAA9V,EAAA7H,SAAA2H,EAAAve,WAoEV21B,+BAAY,SAAA5W,IAAA,IAAAmV,EAAA0B,EAAAhlB,EAAAilB,EAAAC,EAAAC,EAAAxB,EAAAyB,EAAAC,EAAAC,EAAAC,EAAAp1B,EAAA,OAAA8wB,EAAAzyB,EAAA6W,KAAA,SAAAiJ,GAAA,cAAAA,EAAA/I,KAAA+I,EAAA9I,MAAA,UAEJ8d,EAAazvB,EAAKrC,MAAM8xB,WAAazvB,EAAKnC,cAAc+T,MAAM5R,EAAKrC,MAAM8xB,YAAc,KAFnF,CAAAhV,EAAA9I,KAAA,eAAA8I,EAAAO,OAAA,UAID,GAJC,cAOJmW,EAAUnxB,EAAKnC,cAAc8zB,qBAAqBlC,EAAWzvB,EAAKxE,MAAMoK,YAAYE,UAIpFqG,EAAW,SAACnH,EAAGsU,GACnB,IAAMoW,EAA4B,YAAd1qB,EAAGrF,OAGjBmxB,EAAY,CAChB7C,WAAYjpB,EAAGrF,OACfouB,cAAa,eACb6D,WAAYnC,EAAWnpB,UACvB0nB,YAAahuB,EAAKxE,MAAMoK,YAAYV,OAGlCoU,IACFwX,EAAU7C,WAAajuB,EAAKnC,cAAckzB,oBAAoBzX,KAI5DA,GAA8B,UAArBwX,EAAUnxB,SACrBK,EAAKnC,cAAciwB,yBAAyBgD,GAG9C9wB,EAAKzB,SAAS,CACZmxB,cACAjW,WAAY,CACV3Q,OAAO,KACPpF,SAAQ,KAIRgsB,IAEF1vB,EAAKgwB,iBAAiB,CACpBjmB,OAAO,CACLzN,MAAM,KAER,GACF0D,EAAKzB,SAAS,CACZqxB,eAAc,IAGmB,oBAAxB5vB,EAAKxE,MAAM2Q,UACpBnM,EAAKxE,MAAM2Q,SAASnH,EAAGmsB,EAAQG,KAK/BF,EAAkB,SAACpsB,GACvB,IAAM8D,EAAS9D,EAAGgsB,gBAClBhxB,EAAKzB,SAAS,SAAC9D,GAAD,MAAgB,CAC5Bgf,WAAW/c,OAAAuD,EAAA,EAAAvD,CAAA,GACNjC,EAAUgf,WADL,CAER3Q,eAKAuoB,EAAerxB,EAAKxE,MAAM2wB,aAAa5qB,KAEzC+vB,EAAS,KApEH7W,EAAA9I,KAAA,GAuEqB3R,EAAK6wB,uBAAsB,GAvEhD,WAuEJf,EAvEIrV,EAAA/G,OAyEY1T,EAAKxE,MAAMm0B,eAAiB3vB,EAAKrC,MAAMgyB,gBAAkBG,GAzErE,CAAArV,EAAA9I,KAAA,gBAAA8I,EAAA9I,KAAA,GA2EuB3R,EAAKnC,cAAcg0B,WAAW7xB,EAAKxE,MAAMoK,YAAYV,MAAOlF,EAAKxE,MAAM2L,QAASkqB,GA3EvG,SA2EFE,EA3EE9W,EAAA/G,QA8EN4d,EAAStxB,EAAKxE,MAAMs2B,2BAA2BX,EAAQI,IA9EjD9W,EAAA9I,KAAA,iBAiFR2f,EAAStxB,EAAKxE,MAAMu2B,qBAAqBZ,GAjFjC,QAoFNG,GAEAG,GAFOD,EAILF,GAFFG,WACAC,EAHOF,EAGPE,aAGIp1B,EAAQg1B,EAAOh1B,OAAS,KAE9B0D,EAAKxE,MAAMw2B,0BAA0BX,EAAcI,EAAYC,EAAcp1B,EAAO6P,EAAUilB,GAE9FpxB,EAAKzB,SAAS,SAAC9D,GAAD,MAAgB,CAC5Bgf,WAAW/c,OAAAuD,EAAA,EAAAvD,CAAA,GACNjC,EAAUgf,WADL,CAER/V,SAAQ,QAIZ1D,EAAKzB,SAAS,SAAC9D,GAAD,MAAgB,CAC5Bgf,WAAW/c,OAAAuD,EAAA,EAAAvD,CAAA,GACNjC,EAAUgf,WADL,CAER/V,SAAQ,OAxGJ,yBAAA+W,EAAAtI,SAAAmI,EAAA/e,WA8GZ0jB,uCAAoB,SAAA5N,IAAA,OAAA+b,EAAAzyB,EAAA6W,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAClB3R,EAAKzB,SAAS,CACZkb,WAAY,CACV3Q,OAAO,KACPpF,SAAQ,KAJM,wBAAA+N,EAAAU,SAAAd,EAAA9V,WAuCpB02B,gBAAkB,WAChBjyB,EAAK/B,uFA5UD1C,KAAKsC,cACPtC,KAAKsC,cAAcC,SAASvC,KAAKC,OAEjCD,KAAKsC,cAAgB,IAAIE,IAAcxC,KAAKC,4JAK9CD,KAAKyC,kRAICzC,KAAK0C,gMAGYzD,EAAUC,wFACjCc,KAAKyC,YAECk0B,EAAgB13B,EAAUqK,SAAWtJ,KAAKC,MAAMqJ,OAChDskB,EAAiB3uB,EAAU2M,UAAY5L,KAAKC,MAAM2L,QAClDgrB,EAAsB33B,EAAU61B,eAAiB90B,KAAKC,MAAM60B,aAC5D+B,EAAuB33B,EAAUk1B,gBAAkBp0B,KAAKoC,MAAMgyB,cAC9D0C,EAAwB73B,EAAU83B,iBAAmB/2B,KAAKC,MAAM82B,eAChEC,EAAkBzrB,KAAKC,UAAUvM,EAAU2xB,gBAAkBrlB,KAAKC,UAAUxL,KAAKC,MAAM2wB,cACvFqG,EAAqB1rB,KAAKC,UAAUvM,EAAUoL,eAAiBkB,KAAKC,UAAUxL,KAAKC,MAAMoK,eAC3FssB,GAAiB/I,GAAkBgJ,GAAuBI,GAAmBC,GAAsBH,GAAyBD,qCACxH72B,KAAK0C,mBAGmBxD,EAAUq1B,mBAAqBv0B,KAAKoC,MAAMmyB,kBAE7B,oBAAhCv0B,KAAKC,MAAMs0B,kBACpBv0B,KAAKC,MAAMs0B,iBAAiBv0B,KAAKoC,MAAMmyB,mBAIRv0B,KAAKoC,MAAMoyB,sBAAwBt1B,EAAUs1B,qBAC9CmC,IAChC32B,KAAK40B,gBAGmB11B,EAAUg1B,aAAel0B,KAAKoC,MAAM8xB,YAE5Dl0B,KAAKi1B,oKA2CPj1B,KAAKgD,SAAS,CACZqxB,eAAc,gDAIED,GAClBp0B,KAAKgD,SAAS,CACZoxB,uOAkNiBp0B,KAAKC,MAAMm0B,eAAiBp0B,KAAKoC,MAAMgyB,yDACjD,kBAGyBpvB,IAA9BhF,KAAKC,MAAM82B,gBAAiC/2B,KAAKC,MAAM82B,yDAClD,0BAGkB/2B,KAAKC,MAAM+wB,aAAahxB,KAAKC,MAAM2wB,aAAa5qB,KAAKhG,KAAKC,MAAM2wB,aAAand,QAAQzT,KAAKC,MAAM2wB,aAAaK,yDAEvGjxB,KAAKsC,cAAc40B,mBAAmBl3B,KAAKC,MAAMoK,YAAYV,MAAM3J,KAAKC,MAAM2wB,aAAand,QAAQzT,KAAKC,MAAM2L,wBAAvI2oB,2BACCA,qCAGF,kQAIDL,EAAa,KACbM,EAAsB,cACGx0B,KAAKs1B,+BAA9Bf,SACNv0B,KAAKgD,SAAS,CACZkxB,aACAK,mBACAC,2JAQK,IAAApvB,EAAApF,KAEDm3B,EAAwC,WAA7Bn3B,KAAKC,MAAMm3B,cACtB9tB,EAAStJ,KAAKC,MAAMqJ,OAAStJ,KAAKC,MAAMqJ,OAAS,UAEvD,OACEjG,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPC,WAAY,UACZC,cAAe,SACfK,eAAgB,UAGdo3B,EACE9zB,EAAAjE,EAAAC,cAACg4B,EAAA,EAAD,CACE5xB,UAAW,CACTS,GAAG,GAELgO,KAAM,aACN7R,KAAM,kGAELrC,KAAKC,MAAM2L,QAIZ5L,KAAKC,MAAMoK,cAAgBrK,KAAKsC,cAAc+T,MAAMrW,KAAKC,MAAM60B,cAAcjmB,SAAW7O,KAAKsC,cAAc+T,MAAMrW,KAAKC,MAAM60B,cAAc3b,GAAG,GAC/I9V,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,GAGLQ,KAAKC,MAAMq3B,SACTj0B,EAAAjE,EAAAC,cAACg4B,EAAA,EAADl2B,OAAAC,OAAA,CACEqE,UAAW,CACTlG,GAAG,IAEDS,KAAKC,MAAMq3B,UAKnBt3B,KAAKC,MAAMs3B,OAASv3B,KAAKC,MAAMs3B,MAAMxyB,OAAO,GAC1C1B,EAAAjE,EAAAC,cAACmG,EAAA,EAAD,CACEC,UAAW,CACT2J,EAAE,EACFzJ,GAAG,CAAC,EAAE,KAGRtC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE7D,WAAY,SACZC,cAAe,UAGbM,KAAKC,MAAMs3B,MAAM7wB,IAAK,SAAC8wB,EAAKC,GAAN,OACpBp0B,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPC,WAAY,SACZC,cAAe,MACfmH,IAAG,QAAAT,OAAUqxB,IAEbp0B,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEJ,KAAM,QACN8C,KAAOwxB,EAAK1uB,UAAY,WAAa0uB,EAAKtjB,KAC1ChU,MAAQs3B,EAAK1uB,UAAY1D,EAAKnF,MAAMoG,MAAMC,OAAOmF,aAAarH,OAAO0E,UAAY,aAGjF0uB,EAAKzP,KACH1kB,EAAAjE,EAAAC,cAACkP,EAAA,EAAD,CACE7G,GAAI,EACJnH,SAAU,EACVL,MAAO,OACPM,WAAY,EACZijB,KAAM+T,EAAKzP,KACXtnB,UAAW,OACXqH,WAAY,QAEX0vB,EAAKE,aAGRr0B,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEoE,GAAI,EACJnH,SAAU,EACVC,WAAY,EACZN,MAAO,WACPO,UAAW,QAEV+2B,EAAKE,kBAW1Br0B,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ1G,MAAO,GAGLQ,KAAKoC,MAAMiyB,eAAiBr0B,KAAKC,MAAMm0B,cACrC/wB,EAAAjE,EAAAC,cAACmG,EAAA,EAAD,CACEC,UAAW,CACTC,GAAG,EACHC,GAAG,EACHO,GAAG,EACH/C,QAAQ,OACR1D,WAAW,SACXC,cAAc,SACdK,eAAe,WAGjBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPC,WAAY,SACZC,cAAe,SACfK,eAAgB,UAEhBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEJ,KAAM,QACN8C,KAAM,UACN9F,MAAO,aAETmD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ3F,SAAU,EACVL,MAAO,WACPO,UAAW,UAJb,4IASF4C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJyxB,UAAU,EACVtwB,QAASrH,KAAKoC,MAAMgyB,cACpBzzB,MAAK,8CACL4G,SAAW,SAAAC,GAAC,OAAIpC,EAAKwyB,oBAAoBpwB,EAAEgH,OAAOnH,cAGnDrH,KAAKoC,MAAMiyB,eAAiBr0B,KAAKC,MAAMm0B,eAC1C/wB,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE8L,EAAG,EACHlJ,GAAI,EACJ1G,MAAO,EACPa,aAAc,EACdZ,WAAY,SACZC,cAAe,MACfK,eAAgB,SAChBO,gBAAiB,gBACjB8tB,OAAM,aAAAhoB,OAAepG,KAAKC,MAAMoG,MAAMC,OAAOif,UAE7CliB,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE7C,UAAW,SACXqH,WAAY,UACZrG,QAASzB,KAAKq0B,cAAclnB,KAAKnN,OAHnC,6CAOAqD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEoE,GAAI,EACJxE,KAAM,MACN8C,KAAM,UACN9F,MAAO,cAOdF,KAAKoC,MAAMmyB,iBAiDVv0B,KAAKoC,MAAM8b,WAAW/V,QACtB9E,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJxG,cAAe,UAEf2D,EAAAjE,EAAAC,cAACye,EAAA,EAAD3c,OAAAC,OAAA,GACMpB,KAAKC,MADX,CAEE4C,KAAM7C,KAAKoC,MAAM8b,WAAW3Q,OAC5B4V,WAAU,cAAA/c,OAAgBkD,EAAhB,eACVoa,kBAAmB1jB,KAAK0jB,kBAAkBvW,KAAKnN,MAC/CojB,SAAQ,GAAAhd,OAAKpG,KAAKsC,cAAc0R,WAAW1K,GAAnC,qBAIZjG,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ1G,MAAO,GAEP6D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ3G,GAAI,EACJC,MAAO,EACPE,cAAe,UAEf2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/D,GAAI,EACJE,WAAY,SACZC,cAAe,MACfK,eAAgBC,KAAKC,MAAM43B,oBAAsB,gBAAkB,YAGjE73B,KAAKC,MAAM43B,qBACTx0B,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPuE,SAAU,MACVtE,WAAY,SACZC,cAAe,OAEf2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/C,SAAU,EACVC,WAAY,EACZC,UAAW,OACXb,MAAO,CACLmE,SAAS,OACTkC,SAAS,SACTrF,WAAW,SACXotB,aAAa,YAEf9tB,MAAOF,KAAKC,MAAM43B,oBAAoB33B,MAAQF,KAAKC,MAAM43B,oBAAoB33B,MAAQ,aAEpFF,KAAKC,MAAM43B,oBAAoBx1B,QAMrCrC,KAAKsC,cAAc+T,MAAMrW,KAAKC,MAAM60B,cAAcjmB,SACjDxL,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPuE,SAAU,MACVtE,WAAY,SACZC,cAAe,MACfK,eAAgB,YAEhBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/C,SAAU,EACVC,WAAY,EACZN,MAAO,YACPO,UAAW,QACXqH,WAAY,YACZrG,QAAU,SAAC+F,GAAD,OAAOpC,EAAK4vB,uBAAuB,MAC7Cp1B,MAAO,CACLmE,SAAS,OACTkC,SAAS,SACTrF,WAAW,SACXotB,aAAa,aAXjB,YAcYhuB,KAAKsC,cAAc+T,MAAMrW,KAAKC,MAAM60B,cAAc/pB,QAAQ/K,KAAKC,MAAM8F,SAAW,EAAI,GAdhG,IAcqG/F,KAAKC,MAAMoK,YAAYV,SAMpItG,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEkH,IAAK,EACLsE,KAAM,SACN6oB,UAAU,EACVv3B,OAAQ,QACRC,aAAc,EACdG,WAAY,IACZwS,YAAa,aACb1S,gBAAiB,SACjBe,UAAW,kBACXy2B,YAAW,gBACXvwB,SAAUvH,KAAKy0B,iBAAiBtnB,KAAKnN,MACrCouB,OAAM,aAAAhoB,OAAepG,KAAKC,MAAMoG,MAAMC,OAAOC,SAC7CxF,MAAiC,OAA1Bf,KAAKoC,MAAM8xB,WAAsBl0B,KAAKsC,cAAc+T,MAAMrW,KAAKoC,MAAM8xB,YAAYnpB,UAAY,KAEtG1H,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJzG,WAAY,SACZC,cAAe,MACfK,eAAgB,iBAGd,CAAC,GAAG,GAAG,GAAG,KAAK2G,IAAK,SAAAuX,GAAU,OAC5B5a,EAAAjE,EAAAC,cAACkxB,EAAA,EAAD,CACEtS,WAAYA,EACZpX,IAAG,YAAAT,OAAc6X,GACjBuS,YAAa,kBAAIprB,EAAK4vB,uBAAuB/W,IAC7CwQ,SAAUrpB,EAAKhD,MAAMoyB,sBAAwBloB,SAAS2R,QAK9D5a,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJnG,eAAgB,UAEhBsD,EAAAjE,EAAAC,cAAC4B,EAAA,EAAD,CACES,YAAa1B,KAAK21B,UAAUxoB,KAAKnN,MACjCkB,YAAa,CACXgF,GAAG,EACH1G,MAAM,CAAC,EAAE,IACTI,MAAM,CACJc,cAAc,cAEhB4kB,SAAStlB,KAAKoC,MAAMkyB,gBAAgBt0B,KAAKC,MAAMq0B,iBAGhDt0B,KAAKC,MAAMqJ,WAnLpBtJ,KAAKoC,MAAM8b,WAAW/V,QACpB9E,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJxG,cAAe,UAEf2D,EAAAjE,EAAAC,cAACye,EAAA,EAAD3c,OAAAC,OAAA,GACMpB,KAAKC,MADX,CAEEmjB,SAAQ,uBACRvgB,KAAM7C,KAAKoC,MAAM8b,WAAW3Q,OAC5B4V,WAAU,gCACVO,kBAAmB1jB,KAAK0jB,kBAAkBvW,KAAKnN,UAInDqD,EAAAjE,EAAAC,cAACmG,EAAA,EAAD,CACEC,UAAW,CACT2J,EAAE,IAGJ/L,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE7D,WAAY,SACZC,cAAe,UAEf2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEJ,KAAM,QACN8C,KAAM,WACN9F,MAAO,aAETmD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ3F,SAAU,EACVL,MAAO,WACPO,UAAW,UAEVT,KAAKC,MAAM83B,oBAEd10B,EAAAjE,EAAAC,cAAC4B,EAAA,EAAD,CACEC,YAAa,CACXgF,GAAG,EACH1G,MAAM,CAAC,EAAE,KAEXkC,YAAa1B,KAAKm1B,QAAQhoB,KAAKnN,OALjC,cAuJVA,KAAKC,MAAM0B,SAjVb0B,EAAAjE,EAAAC,cAAC24B,EAAA,EACKh4B,KAAKC,eA1XSe,aCwvBjBi3B,6MAxvBb71B,MAAQ,CACNyR,MAAM,GACN0jB,MAAM,KACND,QAAQ,KACRY,YAAY,GACZhE,WAAW,KACXwD,YAAY,KACZrtB,YAAY,KACZ8tB,YAAY,KACZC,aAAY,EACZtD,aAAa,KACblE,aAAa,KACbyH,cAAc,KACdjuB,cAAc,KACdkuB,iBAAiB,EACjBC,eAAe,KACfC,eAAe,KACf3H,eAAe,KACf4H,eAAe,KACfrE,eAAc,EACdsE,eAAe,KACfpuB,gBAAgB,KAChBysB,gBAAe,EACf4B,iBAAiB,KACjBpE,kBAAiB,EACjBqE,kBAAkB,KAClBC,kBAAkB,KAClBd,mBAAmB,KACnBF,oBAAoB,KACpBiB,sBAAqB,EACrBC,yBAAwB,KAI1Bz2B,cAAgB,gFAGVtC,KAAKsC,cACPtC,KAAKsC,cAAcC,SAASvC,KAAKC,OAEjCD,KAAKsC,cAAgB,IAAIE,IAAcxC,KAAKC,uKAK9CD,KAAKyC,YACLzC,KAAKgD,SAAS,CACZw1B,eAAe,SACf,WACApzB,EAAK4zB,mbAOgB/5B,EAAUC,sFACjCc,KAAKyC,YAECw2B,EAAwB/5B,EAAUs5B,iBAAmBx4B,KAAKoC,MAAMo2B,eAChEU,EAA0Bh6B,EAAUq1B,mBAAqBv0B,KAAKoC,MAAMmyB,iBACpE0C,EAAqB1rB,KAAKC,UAAUvM,EAAUoL,eAAiBkB,KAAKC,UAAUxL,KAAKC,MAAMoK,aACzF8uB,EAAsB5tB,KAAKC,UAAUvM,EAAU2xB,gBAAkBrlB,KAAKC,UAAUxL,KAAKC,MAAM2wB,eAC7FqI,GAAyBC,GAA2BjC,IACtDj3B,KAAKgD,SAAS,CACZ41B,kBAAkB,KAClBG,yBAAwB,GACxB,WACAxsB,EAAKysB,WAAWC,KAIhBE,GACFn5B,KAAK20B,0TAIiBT,iCAAW,KAE/BoD,EAAU,MAEVpD,IAAcl0B,KAAKsC,cAAc+T,MAAM6d,GAAY/a,GAAG,oBACxD+a,EAAal0B,KAAKsC,cAAc+T,MAAM6d,QAC9Bl0B,KAAKoC,MAAMo2B,sBACZ,iBAmBA,4CAlBGY,EAAoBp5B,KAAKsC,cAAc0W,iBAAiBhZ,KAAKoC,MAAMi2B,cAAcr4B,KAAKC,MAAMoK,YAAYE,UAAU+L,KAAK4d,GACvHmF,EAAqBr5B,KAAKsC,cAAc0W,iBAAiBhZ,KAAKoC,MAAMk3B,mBAAmBt5B,KAAKC,MAAM2wB,aAAarmB,UAAU+L,KAAK4d,GAC9HqF,EAAwBH,EAAkBpY,IAAIqY,GAC9CG,EAAgBx5B,KAAKoC,MAAMy2B,kBAAkBllB,MAAM,OAAOA,MAAM4lB,GAEhEE,EAAmBL,EAAkBzlB,MAAM3T,KAAKoC,MAAMs2B,gBACtDgB,EAAoBF,EAAc7lB,MAAM,KAAKA,MAAM3T,KAAKoC,MAAMu2B,kBAC9DgB,EAAMF,EAAiBtgB,GAAG,GAAKugB,EAAkB1Y,IAAIyY,GAAkB9lB,MAAM,KAAO3T,KAAKsC,cAAc+T,MAAM,GAGnHihB,EAAU,CACRpjB,KAAK,eACL4a,UAAU,CACR5uB,MAAMF,KAAKC,MAAMoG,MAAMC,OAAOmF,aAAarH,OAAO0E,WAEpDzG,KAAI,sBAAA+D,OAAuB8tB,EAAWnpB,QAAQ,GAA1C,KAAA3E,OAAgDpG,KAAKC,MAAMoK,YAAYV,MAAvE,mCAAAvD,OAA8GozB,EAAczuB,QAAQ,GAApI,KAAA3E,OAA0IpG,KAAKC,MAAM2wB,aAAagJ,YAAlK,mDAAAxzB,OAA+NuzB,EAAI5uB,QAAQ,GAA3O,sJAIA8uB,EAAuB75B,KAAKsC,cAAc8zB,qBAAqBlC,EAAWl0B,KAAKC,MAAMoK,YAAYE,oBAC5EvK,KAAKsC,cAAcw3B,oBAAoB95B,KAAKC,MAAM2wB,aAAa5qB,KAAK,eAAe,CAAC6zB,GAAsB,CAAC9mB,KAAK/S,KAAKC,MAAM2L,yBAAlJmuB,SACJA,EAAiB/5B,KAAKsC,cAAcyM,YAAY/O,KAAKsC,cAAc0W,iBAAiB+gB,EAAe/5B,KAAKC,MAAMoK,YAAYE,WAC1H+sB,EAAU,CACRpjB,KAAK,aACL4a,UAAU,CACR5uB,MAAMF,KAAKC,MAAMoG,MAAMC,OAAOmF,aAAarH,OAAO0E,WAEpDzG,KAAI,wBAAA+D,OAAyB8tB,EAAWnpB,QAAQ,GAA5C,KAAA3E,OAAkDpG,KAAKC,MAAMoK,YAAYV,MAAzE,mCAAAvD,OAAgH2zB,EAAhH,KAAA3zB,OAAkIpG,KAAKC,MAAM2wB,aAAagJ,YAA1J,+EAQZ55B,KAAKgD,SAAS,CACZs0B,4JAIiBxsB,GACnB,IAAIorB,EAAa,KACbC,EAAe,GAEnB,OADArrB,EAAS9K,KAAKsC,cAAc03B,KAAKlvB,GACzB9K,KAAKoC,MAAMo2B,gBACjB,IAAK,QACHtC,EAAa,eACbC,EAAe,CAACrrB,GAClB,MACA,IAAK,WACHorB,EAAa,mBACbC,EAAe,CAACrrB,GAKpB,MAAO,CACLorB,aACAC,mEAIuBrrB,EAAOkrB,GAChC,IAAIE,EAAa,KACbC,EAAe,GACX8D,EAAoBjE,EAApBiE,OAAQC,EAAYlE,EAAZkE,EAAGC,EAASnE,EAATmE,EAAGvyB,EAAMouB,EAANpuB,EAEtB,OADAkD,EAAS9K,KAAKsC,cAAc03B,KAAKlvB,GACzB9K,KAAKoC,MAAMo2B,gBACjB,IAAK,QACHtC,EAAa,8BACbC,EAAe,CAACrrB,EAAQmvB,EAAQryB,EAAGsyB,EAAGC,GACxC,MACA,IAAK,WACHjE,EAAa,mBACbC,EAAe,CAACrrB,GAKpB,MAAO,CACLorB,aACAC,0OAKItiB,EAAQ,YASJ+K,QAAQkD,IAAI,CACpB9hB,KAAKsC,cAAcw3B,oBAAoB95B,KAAKC,MAAM2wB,aAAa5qB,KAAK,eACpEhG,KAAKsC,cAAcw3B,oBAAoB95B,KAAKC,MAAM2wB,aAAa5qB,KAAK,iBACpEhG,KAAKsC,cAAcw3B,oBAAoB95B,KAAKC,MAAM2wB,aAAa5qB,KAAK,sBACpEhG,KAAKsC,cAAcw3B,oBAAoB95B,KAAKC,MAAM2wB,aAAa5qB,KAAK,uBACpEhG,KAAKsC,cAAcw3B,oBAAoB95B,KAAKC,MAAM2wB,aAAa5qB,KAAK,mBAAmB,GAAG,CAAC+M,KAAK/S,KAAKC,MAAM2L,UAC3G5L,KAAKoC,MAAMi2B,cAAclf,GAAG,GAAKnZ,KAAKsC,cAAcw3B,oBAAoB95B,KAAKC,MAAM2wB,aAAa5qB,KAAK,eAAe,CAAChG,KAAKsC,cAAc83B,aAAap6B,KAAKoC,MAAMi2B,gBAAgB,CAACtlB,KAAK/S,KAAKC,MAAM2L,UAAY5L,KAAKsC,cAAc+T,MAAM,YAIxO,gCAhBEgkB,OACAC,OACAhB,OACAiB,OACAhC,OACAiC,OAUIC,EAA0B,GACvBtwB,EAAI,EAAGA,EAAIowB,EAAsBpwB,IACxCswB,EAAwBvvB,KAAKlL,KAAKsC,cAAcw3B,oBAAoB95B,KAAKC,MAAM2wB,aAAa5qB,KAAK,kBAAkB,CAACmE,sBAGxFyU,QAAQkD,IAAI2Y,WAApCC,SAEAC,EAAe36B,KAAKsC,cAAc0W,iBAAiBhZ,KAAKsC,cAAc+T,MAAMgkB,GAAa/jB,KAAKtW,KAAKsC,cAAc+T,MAAMikB,IAAgBt6B,KAAKC,MAAMoK,YAAYE,UACpKsJ,EAAM3I,KAAK,CACTqZ,MAAM,gBACNxjB,MAAMf,KAAKsC,cAAcyM,YAAYrF,WAAWixB,IAAe,IAAI36B,KAAKC,MAAM2wB,aAAagJ,cAGvFgB,EAAgB56B,KAAKsC,cAAc0W,iBAAiBsgB,EAAmBt5B,KAAKC,MAAM2wB,aAAarmB,UACrGsJ,EAAM3I,KAAK,CACTqZ,MAAM,iBACNxjB,MAAMf,KAAKsC,cAAcyM,YAAYrF,WAAWkxB,IAAgB,IAAI56B,KAAKC,MAAMoK,YAAYV,QAGvFkxB,EAAgB76B,KAAKsC,cAAc0W,iBAAiBqhB,EAAYr6B,KAAKC,MAAMoK,YAAYE,UAC7FsJ,EAAM3I,KAAK,CACTqZ,MAAM,iBACNxjB,MAAMf,KAAKsC,cAAcyM,YAAYrF,WAAWmxB,IAAgB,IAAI76B,KAAKC,MAAM2wB,aAAagJ,cAGxFkB,EAAkB96B,KAAKsC,cAAc0W,iBAAiBshB,EAAct6B,KAAKC,MAAMoK,YAAYE,UACjGsJ,EAAM3I,KAAK,CACTqZ,MAAM,mBACNxjB,MAAMf,KAAKsC,cAAcyM,YAAYrF,WAAWoxB,IAAkB,IAAI96B,KAAKC,MAAM2wB,aAAagJ,cAG1FmB,EAAiBL,EAAgB31B,OAAO,EAAI21B,EAAgBxJ,OAAQ,SAAC8J,EAAQb,GAEjF,OADAa,EAAUhxB,KAAKoB,IAAI+uB,EAAEc,SAASD,IAE9B1uB,SAAS5B,KAAKwwB,MAAM,MAAS,KAEzBC,EAAkBJ,EAAc,GAAA30B,OAAMpG,KAAKsC,cAAc2I,YAA2B,IAAf8vB,GAAqBK,MAAMzhB,OAAO,wBAAvE,QAAuG,OAC7I9F,EAAM3I,KAAK,CACTqZ,MAAM,mBACNxjB,MAAMo6B,IAGFtC,EAAoB6B,EAAgBxJ,OAAQ,SAAC2H,EAAkBsB,GACnE,GAAI3tB,EAAKlK,cAAc+T,MAAM8jB,EAAEkB,qBAAqBliB,GAAG,IAAM3M,EAAKlK,cAAc+T,MAAM8jB,EAAEmB,aAAaniB,GAAG,GAAG,CACzG,IAAMoiB,EAAkB/uB,EAAKlK,cAAc0W,iBAAiBmhB,EAAEkB,oBAAoB7uB,EAAKvM,MAAM2wB,aAAarmB,UAAUyW,IAAImZ,EAAEmB,aACrHC,EAAgB1sB,UACnBgqB,EAAoBA,EAAkBviB,KAAKilB,IAG/C,OAAO1C,GACP74B,KAAKsC,cAAc+T,MAAM,IAE3BxC,EAAM3I,KAAK,CACTqZ,MAAM,qBACNxjB,MAAMf,KAAKsC,cAAcyM,YAAY8pB,EAAkBllB,MAAM,QAAQ,IAAI3T,KAAKC,MAAM2wB,aAAagJ,YAAY,WAGzG1B,EAAc,GAEdG,EAAgBr4B,KAAKsC,cAAc0W,iBAAiBhZ,KAAKoC,MAAMi2B,cAAcr4B,KAAKC,MAAMoK,YAAYE,UACpGixB,EAAenD,EAAcrX,IAAI4Z,GAEjCtC,EAAmBC,GAAkBv4B,KAAKsC,cAAc+T,MAAMkiB,EAAe,IAAIpf,GAAG,GAAKnZ,KAAKsC,cAAc+T,MAAMrM,KAAKoB,IAAI,EAAE1B,WAAW1J,KAAKsC,cAAc+T,MAAMmkB,GAAkBxZ,IAAIhhB,KAAKsC,cAAc+T,MAAMkiB,EAAe,KAAK5kB,MAAM3T,KAAKC,MAAM2wB,aAAa6K,kBAAoBz7B,KAAKsC,cAAc+T,MAAM,GAE/SqlB,EAA8B17B,KAAKsC,cAAc+T,MAAM,GAAG2K,IAAIhhB,KAAKC,MAAM2wB,aAAa6K,eAAe9nB,MAAM2kB,GAC3GqD,EAAwB9C,EAAkBllB,MAAM6nB,GAAc7nB,MAAM+nB,GACpElC,EAAgBmC,EAAsBhoB,MAAM,OAU5C8lB,EAAmBpB,EAAc1kB,MAAM3T,KAAKoC,MAAMs2B,gBAClDgB,EAAoBF,EAAc7lB,MAAM,KAAKA,MAAM3T,KAAKoC,MAAMu2B,kBAC9DgB,EAAMF,EAAiBtgB,GAAG,GAAKugB,EAAkB1Y,IAAIyY,GAAkB9lB,MAAM,KAAO3T,KAAKsC,cAAc+T,MAAM,GAInH6hB,EAAYhtB,KAAK,CACfqZ,MAAM,MACNxjB,MAAK,GAAAqF,OAAIuzB,EAAI5uB,QAAQ,GAAhB,KACL2sB,YAAY,wDAGdQ,EAAYhtB,KAAK,CACfqZ,MAAM,QACNxjB,MAAK,GAAAqF,OAAIo1B,EAAa7nB,MAAM,KAAK5I,QAAQ,GAApC,KACL2sB,YAAY,qCAGdQ,EAAYhtB,KAAK,CACfqZ,MAAM,aACNxjB,MAAK,GAAAqF,OAAIkyB,EAAiBvtB,QAAQ,GAA7B,KACL2sB,YAAW,gCAAAtxB,OAAiCpG,KAAKC,MAAM2wB,aAAagL,aAAzD,uBAAAx1B,OAA2FpG,KAAKC,MAAM2wB,aAAa6K,cAAnH,yBAGPI,EAAiB77B,KAAKsC,cAAcyM,YAAY/O,KAAKsC,cAAc0W,iBAAiBwhB,EAAiBx6B,KAAKC,MAAMoK,YAAYE,WAClI2tB,EAAYhtB,KAAK,CACfqZ,MAAM,UACNxjB,MAAM86B,EAAe,IAAI77B,KAAKC,MAAM2wB,aAAagJ,YACjDlC,YAAY,wGAGdoE,QAAQC,IAAI,YAAYloB,EAAMqkB,IAEV,EAEpBl4B,KAAKgD,SAAS,CACZ6Q,QACAukB,aAJkB,EAKlBF,cACAsD,eACAb,eACApC,iBACAD,mBACAO,oBACAS,qBACAqC,wBACAD,oNAImBnH,mEACrBv0B,KAAKgD,SAAS,CACZuxB,0JAIMiE,GACRx4B,KAAKgD,SAAS,CACZw1B,wGAIuB/uB,EAAGqB,EAAOirB,8FAE/BuB,EAAU,UACNt3B,KAAKoC,MAAMo2B,sBACZ,iBAWA,2CAVGwD,EAAkBvyB,EAAGwyB,WAAaxyB,EAAGwyB,UAAUC,KAAOzyB,EAAGwyB,UAAUC,KAAKhR,KAAM,SAAA6Q,GAAG,OAAIA,EAAItoB,QAAQlK,gBAAkB4yB,EAAKl8B,MAAMoK,YAAYoJ,QAAQlK,eAAiBwyB,EAAIK,OAAOlR,KAAM,SAAAmR,GAAC,OAAIA,EAAE9yB,cAAcK,SAASuyB,EAAKl8B,MAAM2wB,aAAand,QAAQ6oB,QAAQ,KAAK,IAAI/yB,kBAAoBwyB,EAAIK,OAAOlR,KAAM,SAAAmR,GAAC,OAAIA,EAAE9yB,cAAcK,SAASuyB,EAAKl8B,MAAM2L,QAAQ0wB,QAAQ,KAAK,IAAI/yB,kBAAoBwyB,EAAIhsB,KAAKxG,gBAAgB,qEAAqEA,gBAAkB,KAC9egzB,EAAeP,EAAkBh8B,KAAKsC,cAAc0W,iBAAiB1M,SAAS0vB,EAAgBjsB,KAAK,IAAI/P,KAAKC,MAAMoK,YAAYE,UAAYvK,KAAKsC,cAAc+T,MAAM,GACzKihB,EAAU,CACRpjB,KAAK,UACL4a,UAAU,CACR5uB,MAAMF,KAAKC,MAAMoG,MAAMC,OAAOmF,aAAarH,OAAO0E,WAEpDzG,KAAI,wCAAA+D,OAAyCm2B,EAAaxxB,QAAQ,GAA9D,KAAA3E,OAAoEpG,KAAKC,MAAMmK,cAA/E,iDAIAoyB,EAAoB/yB,EAAGwyB,WAAaxyB,EAAGwyB,UAAUC,KAAOzyB,EAAGwyB,UAAUC,KAAKhR,KAAM,SAAA6Q,GAAG,OAAIA,EAAItoB,QAAQlK,gBAAkB4yB,EAAKl8B,MAAMoK,YAAYoJ,QAAQlK,gBAAkB,KACtKkzB,EAAiBD,EAAoBx8B,KAAKsC,cAAc0W,iBAAiB1M,SAASkwB,EAAkBzsB,KAAK,IAAI/P,KAAKC,MAAMoK,YAAYE,UAAYvK,KAAKsC,cAAc+T,MAAM,GACzKqmB,EAAoB18B,KAAKsC,cAAcwJ,gBAAgB,CAAC,YAAY9L,KAAKC,MAAM2wB,aAAagJ,cAC5F+C,EAAqBlzB,EAAGwyB,WAAaxyB,EAAGwyB,UAAUC,KAAOzyB,EAAGwyB,UAAUC,KAAKhR,KAAM,SAAA6Q,GAAG,OAAKA,EAAItoB,QAAQlK,gBAAkBmzB,EAAkBjpB,QAAQlK,eAAiBwyB,EAAIK,OAAOlR,KAAM,SAAAmR,GAAC,OAAIA,EAAE9yB,cAAcK,SAASuyB,EAAKl8B,MAAM2L,QAAQ0wB,QAAQ,KAAK,IAAI/yB,mBAAsB,KAC3QqzB,EAAkBD,EAAqB38B,KAAKsC,cAAc0W,iBAAiB1M,SAASqwB,EAAmB5sB,KAAK,IAAI/P,KAAKC,MAAMoK,YAAYE,UAAYvK,KAAKsC,cAAc+T,MAAM,GAClLihB,EAAU,CACRpjB,KAAK,UACL4a,UAAU,CACR5uB,MAAMF,KAAKC,MAAMoG,MAAMC,OAAOmF,aAAarH,OAAO0E,WAEpDzG,KAAI,2CAAA+D,OAA4Cq2B,EAAe1xB,QAAQ,GAAnE,KAAA3E,OAAyEpG,KAAKC,MAAMmK,cAApF,mCAAAhE,OAAmIw2B,EAAgB7xB,QAAQ,GAA3J,KAAA3E,OAAiKpG,KAAKC,MAAM2wB,aAAagJ,YAAzL,gFAOmB,EAE7B55B,KAAKgD,SAAS,CACZs0B,UACAwB,sBAJ2B,GAK3B,WACAqD,EAAKnD,sTAIQC,kCACTtoB,EAAW,GAEXksB,EAAiB78B,KAAKsC,cAAcwJ,gBAAgB,CAAC,QAAQ,SAAS,QACtE4wB,EAAoB18B,KAAKsC,cAAcwJ,gBAAgB,CAAC,QAAQ,SAAS9L,KAAKC,MAAM2wB,aAAagJ,uBAO7Fhb,QAAQkD,IAAI,CACpB9hB,KAAKsC,cAAcw6B,2BAA2B98B,KAAKC,MAAMmK,eACzDpK,KAAKsC,cAAcy6B,2BAA2BF,EAAeH,GAC7D18B,KAAKsC,cAAc06B,gBAAgBh9B,KAAKC,MAAMmK,cAAcpK,KAAKC,MAAM2L,SACvE5L,KAAKsC,cAAcw3B,oBAAoB95B,KAAKC,MAAM2wB,aAAa5qB,KAAK,iBAAiB,CAAChG,KAAKC,MAAM2L,+CARjG8sB,OACAC,OACA7D,OACAuD,OAQF1nB,EAASwnB,YAAcn4B,KAAKsC,cAAc+T,MAAM,GAChD1F,EAASmkB,aAAgB90B,KAAKsC,cAAc+T,MAAMye,GAAcjmB,QAAmD7O,KAAKsC,cAAc+T,MAAM,GAAlErW,KAAKsC,cAAc+T,MAAMye,GACnGnkB,EAAS0nB,cAAiBr4B,KAAKsC,cAAc+T,MAAMgiB,GAAexpB,QAAoD7O,KAAKsC,cAAc+T,MAAM,GAAnErW,KAAKsC,cAAc+T,MAAMgiB,GACrG1nB,EAAS+nB,eAAkB14B,KAAKsC,cAAc+T,MAAMqiB,GAAgB7pB,QAAqD7O,KAAKsC,cAAc+T,MAAM,GAApErW,KAAKsC,cAAc+T,MAAMqiB,GACvG/nB,EAASgoB,iBAAoB34B,KAAKsC,cAAc+T,MAAMsiB,GAAkB9pB,QAAuD7O,KAAKsC,cAAc+T,MAAM,GAAtErW,KAAKsC,cAAc+T,MAAMsiB,QAEnG34B,KAAKoC,MAAMo2B,sBACZ,kBAkBA,6CAjBH7nB,EAASyjB,eAAgB,EACzBzjB,EAASomB,gBAAiB,EAC1BpmB,EAASwnB,YAAcxnB,EAASmkB,aAChCnkB,EAASonB,mBAAqB,uDAC9BpnB,EAASioB,kBAAoB,CAC3BqE,cAAc,CACZj3B,KAAK,MACL2D,MAAM,MACNY,SAAS,GACT2yB,WAAW,WAEbC,aAAah8B,OAAAuD,EAAA,EAAAvD,CAAA,CACXi8B,aAAa,YACVp9B,KAAKC,MAAMoK,kDAKlBsG,EAASyjB,eAAgB,EACzBzjB,EAASomB,gBAAiB,EAC1BpmB,EAASonB,mBAAqB,GAC9BpnB,EAASwnB,YAAcn4B,KAAKsC,cAAc0W,iBAAiBrI,EAAS0nB,cAAcr4B,KAAKC,MAAMoK,YAAYE,UACzGoG,EAASioB,kBAAoB,CAC3BqE,cAAc,CACZj3B,KAAK,MACL2D,MAAM,MACNY,SAAS,GACT2yB,WAAW,WAEbC,aAAah8B,OAAAuD,EAAA,EAAAvD,CAAA,CACXi8B,aAAa,YACVp9B,KAAKC,MAAMoK,+EAQlBsG,EAASwnB,YAAYjD,IAAI,KAC3BvkB,EAASooB,yBAA0B,GAGjCE,IACFtoB,EAAS2mB,QAAU,KACnB3mB,EAASmoB,sBAAuB,GAGlCgD,QAAQC,IAAI,aAAa/7B,KAAKoC,MAAMo2B,eAAe7nB,GAEnD3Q,KAAKgD,SAAS2N,EAAS,WACrB0sB,EAAKC,kJAIA,IAAAC,EAAAv9B,KAEDw9B,EAAY,SAAAv9B,GAChB,IAAMwF,EAAStE,OAAAuD,EAAA,EAAAvD,CAAA,CACbiO,EAAE,EACF7P,GAAG,EACHC,MAAM,OACHS,EAAMwF,WAEX,OACEpC,EAAAjE,EAAAC,cAACmG,EAAA,EAAD,CACE+e,MAAOtkB,EAAMskB,MACb9e,UAAWA,EACXg4B,WAAY,CACVl9B,SAAS,EACTC,WAAW,GAEbk9B,iBAAkB,CAChBx3B,GAAG,EACHwB,GAAG,GAELgwB,YAAaz3B,EAAMy3B,aAEnBr0B,EAAAjE,EAAAC,cAACiE,EAAA,EAADnC,OAAAC,OAAA,CACE8E,GAAI,EACJ3F,SAAU,CAAC,EAAE,GACbL,MAAO,aACHD,EAAM8M,WAET9M,EAAMc,SAMT48B,EAAwC,UAA9B39B,KAAKoC,MAAMo2B,eACrBoF,EAA0C,aAA9B59B,KAAKoC,MAAMo2B,eACvBqF,EAAwC,UAA9B79B,KAAKoC,MAAMo2B,eACrBsF,EAAW99B,KAAKoC,MAAMo2B,eAE5B,OACEn1B,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,GAGPQ,KAAKC,MAAMoK,aAAerK,KAAKC,MAAMoK,YAAY0zB,UAC/C16B,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ1G,MAAO,GAEP6D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/D,GAAI,GADN,cAKA8D,EAAAjE,EAAAC,cAACkP,EAAA,EAAD,CACErI,GAAI,EACJhG,MAAO,OACP4H,WAAY,OACZ2b,KAAMzjB,KAAKC,MAAMoK,YAAY0zB,UAE7B16B,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEpD,MAAO,OACPN,MAAO,CACLmE,SAAS,OACTkC,SAAS,SACTrF,WAAW,SACXotB,aAAa,aAGdhuB,KAAKC,MAAMoK,YAAY0zB,YAOhC/9B,KAAKoC,MAAMi2B,eAAiBr4B,KAAKsC,cAAc+T,MAAMrW,KAAKoC,MAAMi2B,eAAelf,GAAG,IAAMnZ,KAAKoC,MAAM81B,YAAYnzB,OAAO,GACpH1B,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ1G,MAAO,GAEP6D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/D,GAAI,GADN,eAKA8D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ1G,MAAO,EACPE,cAAe,CAAC,SAAS,OACzBK,eAAgB,iBAGdC,KAAKoC,MAAM81B,YAAYxxB,IAAK,SAACs3B,EAAS1wB,GAAV,OAC1BjK,EAAAjE,EAAAC,cAACm+B,EAADr8B,OAAAC,OAAA,CACEyF,IAAG,eAAAT,OAAiBkH,GACpB7H,UAAW,CACTlG,GAAG,CAAC,EAAE,GACNY,GAAG,CAAC,EAAEmN,EAAMiwB,EAAKn7B,MAAM81B,YAAYnzB,OAAO,EAAI,EAAI,GAClDvF,MAAM,CAAC,EAAE,SAEXuN,UAAW,CACTxM,SAAS,CAAC,EAAE,KAEVy9B,QAShBh+B,KAAKC,MAAMmK,eACT/G,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ1G,MAAO,GAEP6D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM/D,GAAI,GAAV,kBAGA8D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE7D,WAAY,SACZC,cAAe,CAAC,SAAS,OACzBK,eAAgB,iBAEhBsD,EAAAjE,EAAAC,cAAC4+B,EAAA,EAAD,CACE/8B,YAAa,CACXuC,GAAG,EACH2qB,OAAOuP,EAAU,EAAI,GAEvBn+B,MAAO,CAAC,EAAE,OACV0+B,QAAS,QACTC,SAAU,kBACVp4B,SAAU/F,KAAKC,MAAM8F,SAErB4oB,WAAY,CACVpvB,GAAG,CAAC,EAAE,GACNa,OAAOJ,KAAKC,MAAM8F,SAAW,OAAS,QAExC0oB,SAAUkP,EACVj8B,YAAc,SAAA8F,GAAC,OAAI+1B,EAAKa,UAAU,YAEpC/6B,EAAAjE,EAAAC,cAAC4+B,EAAA,EAAD,CACE/8B,YAAa,CACXuC,GAAG,EACH2qB,OAAOwP,EAAY,EAAI,GAEzBp+B,MAAO,CAAC,EAAE,OACV0+B,QAAS,WACTC,SAAU,oBACVp4B,SAAU/F,KAAKC,MAAM8F,SAErB4oB,WAAY,CACVpvB,GAAG,CAAC,EAAE,GACNa,OAAOJ,KAAKC,MAAM8F,SAAW,OAAS,QAExC0oB,SAAUmP,EACVl8B,YAAc,SAAA8F,GAAC,OAAI+1B,EAAKa,UAAU,eAEpC/6B,EAAAjE,EAAAC,cAAC4+B,EAAA,EAAD,CACE/8B,YAAa,CACXuC,GAAG,EACH2qB,OAAOyP,EAAU,EAAI,GAEvBr+B,MAAO,CAAC,EAAE,OACV0+B,QAAS,QACTC,SAAU,mBAEVp4B,SAAU/F,KAAKC,MAAM8F,SACrB4oB,WAAY,CACVpvB,GAAG,CAAC,EAAE,GACNa,OAAOJ,KAAKC,MAAM8F,SAAW,OAAS,QAExC0oB,SAAUoP,EACVn8B,YAAc,SAAA8F,GAAC,OAAI+1B,EAAKa,UAAU,aAInCT,GAAWC,EACT59B,KAAKC,MAAMoK,aAAerK,KAAKoC,MAAM+1B,aAAen4B,KAAKoC,MAAMg2B,aAAep4B,KAAKC,MAAM2wB,aACxFvtB,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ1G,MAAO,EACPD,GAAI,CAAC,EAAE,IAEP8D,EAAAjE,EAAAC,cAACg/B,EAADl9B,OAAAC,OAAA,CACE2c,MAAO,MACH/d,KAAKC,MAFX,CAGEqJ,OAAQw0B,EACRvG,MAAOv3B,KAAKoC,MAAMm1B,MAClBD,QAASt3B,KAAKoC,MAAMk1B,QACpBjtB,YAAarK,KAAKC,MAAMoK,YACxByqB,aAAc90B,KAAKoC,MAAM+1B,YACzBvH,aAAc5wB,KAAKC,MAAM2wB,aACzBwD,cAAep0B,KAAKoC,MAAMgyB,cAC1B2C,eAAgB/2B,KAAKoC,MAAM20B,eAC3BnmB,SAAU5Q,KAAK84B,qBAAqB3rB,KAAKnN,MACzC+3B,mBAAoB/3B,KAAKoC,MAAM21B,mBAC/BxD,iBAAkBv0B,KAAKu0B,iBAAiBpnB,KAAKnN,MAC7C63B,oBAAqB73B,KAAKoC,MAAMy1B,oBAChClD,oBAAqB30B,KAAK20B,oBAAoBxnB,KAAKnN,MACnDw2B,qBAAsBx2B,KAAKw2B,qBAAqBrpB,KAAKnN,MACrDu2B,2BAA4Bv2B,KAAKu2B,2BAA2BppB,KAAKnN,QAEjEqD,EAAAjE,EAAAC,cAACmG,EAAA,EAAD,CACEC,UAAW,CACT2J,EAAE,IAGJ/L,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE7D,WAAY,SACZC,cAAe,UAEf2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE0C,KAAM,WACN9F,MAAO,WACPgD,KAAMlD,KAAKC,MAAM8F,SAAW,QAAU,UAExC1C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ3F,SAAU,EACVL,MAAO,WACPO,UAAW,UAGTk9B,EAAO,sBAAAv3B,OACiBpG,KAAKC,MAAMmK,cAD5B,oBAEHwzB,GAAS,6BAAAx3B,OACkBpG,KAAKC,MAAMmK,cAD7B,sBAUzB/G,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ3G,GAAI,EACJC,MAAO,GAEP6D,EAAAjE,EAAAC,cAACsN,EAAA,EAAD,CACEC,UAAW,CACTlN,cAAc,OAEhBoN,YAAa,CACX5J,KAAK,QAEP6J,UAAW,CACTrF,GAAG,GAELrF,KAAM,qBAIVw7B,GACFx6B,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ3G,GAAI,EACJC,MAAO,EACPI,MAAO,CACL0+B,SAAS,QAEXv+B,eAAgB,iBAGZC,KAAKoC,MAAMyR,OAAU7T,KAAKoC,MAAMyR,MAAM9O,OAmBpC/E,KAAKoC,MAAMyR,MAAMnN,IAAK,SAACs3B,EAAS1wB,GAAV,OACxBjK,EAAAjE,EAAAC,cAACm+B,EAADr8B,OAAAC,OAAA,CACEyF,IAAG,SAAAT,OAAWkH,GACd7H,UAAW,CACTjG,MAAM,CAAC,EAAE,SAEPw+B,MAxBN36B,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ3G,GAAI,EACJC,MAAO,GAEP6D,EAAAjE,EAAAC,cAACsN,EAAA,EAAD,CACEC,UAAW,CACTlN,cAAc,OAEhBoN,YAAa,CACX5J,KAAK,QAEP6J,UAAW,CACTrF,GAAG,GAELrF,KAAM,gCAluBRrB,yHCk5CTu9B,6MA54Cbn8B,MAAQ,CACNyR,MAAM,GACN0jB,MAAM,KACND,QAAQ,KACRY,YAAY,GACZsG,YAAY,CACV,CACEz9B,MAAM,EACN+N,KAAK,MACLnO,MAAM,UAER,CACEI,MAAM,EACN+N,KAAK,QACLnO,MAAM,WAER,CACEI,MAAM,EACN+N,KAAK,OACLnO,MAAM,UAER,CACEI,MAAM,EACN+N,KAAK,OACLnO,MAAM,YAGV89B,UAAU,KACVvK,WAAW,KACXwD,YAAY,KACZrtB,YAAY,KACZ8tB,YAAY,KACZuG,aAAY,EACZtG,aAAY,EACZtD,aAAa,KACblE,aAAa,KACbyH,cAAc,KACdjuB,cAAc,KACdkuB,iBAAiB,EACjBC,eAAe,KACfoG,eAAe,KACfnG,eAAe,KACf3H,eAAe,KACf4H,eAAe,KACfrE,eAAc,EACdsE,eAAe,KACfkG,gBAAgB,KAChBtK,gBAAe,EACfuK,gBAAgB,KAChBv0B,gBAAgB,KAChBysB,gBAAe,EACf4B,iBAAiB,KACjBpE,kBAAiB,EACjBqE,kBAAkB,KAClBC,kBAAkB,KAClBiG,mBAAmB,KACnBC,mBAAmB,KACnBhH,mBAAmB,KACnBF,oBAAoB,KACpBmH,oBAAoB,KACpBlG,sBAAqB,EACrBC,yBAAwB,EACxBkG,yBAAwB,KAI1B38B,cAAgB,gFAGVtC,KAAKsC,cACPtC,KAAKsC,cAAcC,SAASvC,KAAKC,OAEjCD,KAAKsC,cAAgB,IAAIE,IAAcxC,KAAKC,uKAK9CD,KAAKyC,YACLzC,KAAKgD,SAAS,CACZw1B,eAAe,QACf,WACApzB,EAAK4zB,kRAKDkG,EAAuBl/B,KAAKC,MAAMoK,YAAY80B,wBAC9Cn/B,KAAKC,MAAM+wB,aAAakO,EAAqBl5B,KAAKk5B,EAAqBzrB,QAAQyrB,EAAqBjO,0LAGnFhyB,EAAUC,8FACjCc,KAAKyC,YAECmrB,EAAiB3uB,EAAU2M,UAAY5L,KAAKC,MAAM2L,QAClDqtB,EAAwB/5B,EAAUs5B,iBAAmBx4B,KAAKoC,MAAMo2B,eAChEU,EAA0Bh6B,EAAUq1B,mBAAqBv0B,KAAKoC,MAAMmyB,iBACpE0C,EAAqB1rB,KAAKC,UAAUvM,EAAUoL,eAAiBkB,KAAKC,UAAUxL,KAAKC,MAAMoK,aACzF8uB,EAAsB5tB,KAAKC,UAAUvM,EAAU2xB,gBAAkBrlB,KAAKC,UAAUxL,KAAKC,MAAM2wB,eAC7FqI,GAAyBrL,GAAkBsL,GAA2BjC,KAClE0H,EAAiB1F,EAAwB,KAAOj5B,KAAKoC,MAAMu8B,eACjE3+B,KAAKgD,SAAS,CACZ27B,iBACA/F,kBAAkB,KAClBG,yBAAwB,GACxB,WACAxsB,EAAKysB,WAAWC,MAIhBE,GACFn5B,KAAK20B,sBAGDyK,EAAoBlgC,EAAU8/B,sBAAwBh/B,KAAKoC,MAAM48B,oBACjEK,EAAwBngC,EAAUy/B,iBAAmB3+B,KAAKoC,MAAMu8B,gBAClES,GAAqBC,GAAyBpG,KAC5CoG,EACFr/B,KAAKgD,SAAS,CACZ67B,gBAAgB,OAETO,GACTp/B,KAAKs/B,yBAEPt/B,KAAKi1B,2KAKP,IAAIX,GAAiB,EACfiL,EAAUv/B,KAAKoC,MAAMq8B,UAAYz+B,KAAKsC,cAAc2I,YAAiC,IAArBjL,KAAKoC,MAAMq8B,WAAgBe,IAAI,EAAE,OAASx/B,KAAKsC,cAAc2I,cAAcu0B,IAAI,EAAE,OACjJC,EAAQz/B,KAAKsC,cAAc2I,YAA2C,IAA/BjL,KAAKoC,MAAM48B,qBAClDU,EAAU1/B,KAAKsC,cAAc2I,cAAcu0B,IAAI,EAAE,QACvD,OAAQx/B,KAAKoC,MAAMo2B,gBACjB,QACA,IAAK,OACHlE,EAAiBmL,EAAME,QAAQD,IAAYD,EAAMhmB,eAAe8lB,GAClE,MACA,IAAK,gBAC+B,SAA9Bv/B,KAAKoC,MAAMu8B,iBACbrK,EAAiBmL,EAAME,QAAQD,IAAYD,EAAMhmB,eAAe8lB,IAOtEv/B,KAAKgD,SAAS,CACZsxB,kMAIsBJ,iCAAW,KACnCA,EAAal0B,KAAKsC,cAAc+T,MAAM6d,GACtCl0B,KAAKgD,SAAS,CACZkxB,cACA,WACA1nB,EAAK8yB,8KAKP,IAAIT,EAAkB,KACtB,GAAI7+B,KAAKoC,MAAM8xB,YAAcl0B,KAAKsC,cAAc+T,MAAMrW,KAAKoC,MAAM8xB,YAAY/a,GAAG,IAAyC,OAAnCnZ,KAAKoC,MAAM48B,oBAC/F,OAAQh/B,KAAKoC,MAAMo2B,gBACjB,IAAK,OACH,IAAMoH,EAAWtzB,SAAS5B,KAAKwwB,MAAM,KAC/BwE,EAAU1/B,KAAKsC,cAAc2I,cAAcu0B,IAAI,EAAE,QACnDK,EAAU7/B,KAAKsC,cAAc2I,YAA2C,IAA/BjL,KAAKoC,MAAM48B,qBACpDa,EAAQF,QAAQD,KAClBG,EAAUH,GAEZ,IAAMI,EAAcxzB,SAASuzB,EAAQE,GAAGpoB,UAAU,KAAMioB,EAClDI,EAAc1zB,SAASozB,EAAQK,GAAGpoB,UAAU,KAAMioB,EAClDK,EAAgBjgC,KAAKoC,MAAM8xB,WAAWvgB,MAAMmsB,GAAa9e,IAAIgf,GAE7D/hB,EAAagiB,EAAcjf,IAAIhhB,KAAKoC,MAAM8xB,YAAYvgB,MAAM,KAI9DtR,EAAI,sBAAA+D,OAAyBpG,KAAKoC,MAAM8xB,WAAWnpB,QAAQ,GAAvD,KAAA3E,OAA6DpG,KAAKC,MAAMmK,cAAxE,4BAAAhE,OAAgHy5B,EAAQzE,MAAMzhB,OAAO,oBAArI,4CAAAvT,OAAmM65B,EAAcl1B,QAAQ,GAAzN,KAAA3E,OAA+NpG,KAAKC,MAAMoK,YAAY0mB,SAAS/qB,KAA/P,eAAAI,OAAiR4D,KAAKC,KAAKgU,GAA3R,OACJjU,KAAKC,KAAKgU,GAAY,MACxB5b,GAAI,4FAGNw8B,EAAkB,CAChBx8B,KAFFA,GAAI,4BAAA+D,OAAgCpG,KAAKC,MAAMoG,MAAMC,OAAO6gB,MAAxD,qDAAA/gB,OAAiHpG,KAAKC,MAAMmK,cAA5H,sFAGF8J,KAAK,cACL4a,UAAU,CACR5uB,MAAM,aAQhBF,KAAKgD,SAAS,CACZ67B,oEAOF,MAAO,CAFcvyB,SAAStM,KAAKoC,MAAM48B,mEAKtBl0B,GACnB,IAAIorB,EAAa,KACbC,EAAe,GACb+J,EAASlgC,KAAKsC,cAAc03B,KAAKlvB,GACjCq1B,EAAe7zB,SAAStM,KAAKoC,MAAM48B,qBACzC,OAAQh/B,KAAKoC,MAAMo2B,gBACjB,IAAK,OACHtC,EAAa,cACbC,EAAe,CAAC+J,EAAOC,GAEzB,MACA,IAAK,gBACHjK,EAAa,kBACbC,EAAe,CAAC+J,GAKpB,MAAO,CACLhK,aACAC,wOAQGn2B,KAAKC,MAAM2L,kDAIP,iBAGHiI,EAAQ,GACRqkB,EAAc,GACdE,GAAc,WAaVxZ,QAAQkD,IAAI,CACpB9hB,KAAKsC,cAAc89B,2BACnBpgC,KAAKsC,cAAc+9B,oBAAoBrgC,KAAKC,MAAM2wB,aAAa5qB,MAC/DhG,KAAKsC,cAAcw3B,oBAAoB95B,KAAKC,MAAM2wB,aAAa5qB,KAAK,UACpEhG,KAAKsC,cAAcg+B,mBAAmBtgC,KAAKC,MAAM2wB,aAAa5qB,KAAKhG,KAAKC,MAAM2L,SAC9E5L,KAAKsC,cAAcw3B,oBAAoB95B,KAAKC,MAAM2wB,aAAa5qB,KAAK,SAAS,CAAChG,KAAKC,MAAM2L,UACzF5L,KAAKsC,cAAcw3B,oBAAoB95B,KAAKC,MAAMoK,YAAY80B,eAAen5B,KAAK,QAAQ,CAAChG,KAAKC,MAAM2L,UACtG5L,KAAKsC,cAAc06B,gBAAgBh9B,KAAKC,MAAM2wB,aAAagJ,YAAY55B,KAAKC,MAAMoK,YAAY80B,eAAe1rB,SAC7GzT,KAAKsC,cAAci+B,kBAAkBvgC,KAAKC,MAAMoK,YAAY80B,eAAen5B,KAAK,UAAU,CAACw6B,UAAWxgC,KAAKC,MAAMoK,YAAY80B,eAAeqB,UAAWC,QAAQ,WAC/JzgC,KAAKsC,cAAci+B,kBAAkBvgC,KAAKC,MAAMoK,YAAY80B,eAAen5B,KAAK,kBAAkB,CAACw6B,UAAWxgC,KAAKC,MAAMoK,YAAY80B,eAAeqB,UAAWC,QAAQ,WACvKzgC,KAAKsC,cAAci+B,kBAAkBvgC,KAAKC,MAAM2wB,aAAa5qB,KAAK,UAAU,CAACw6B,UAAWxgC,KAAKC,MAAM2wB,aAAa4P,UAAWC,QAAQ,SAASj8B,OAAO,CAACk8B,SAAS1gC,KAAKC,MAAM2L,iDApBxK+0B,OACAC,OACAC,OACAC,OACAC,OACAC,OACAC,OACAC,OACAC,OACAC,OAcI1E,EAAoB18B,KAAKsC,cAAcwJ,gBAAgB,CAAC,YAAY9L,KAAKC,MAAM2wB,aAAagJ,cAE5FkF,EAAqB6B,EAAoBj6B,IAAK,SAAA+C,GAAE,MACpD,CACE5G,KAAK4G,EAAG5G,KACRiI,OAAOqxB,EAAK75B,cAAc0W,iBAAiBvP,EAAG1I,MAAM27B,EAAkBnyB,UACtEE,KAAK0xB,EAAK75B,cAAc2I,YAAmC,IAAvBqB,SAAS7C,EAAGM,YAAiB4P,OAAO,uBAI5EmnB,EAAmB9gC,KAAKsC,cAAc0W,iBAAiB8nB,EAAiB9gC,KAAKC,MAAM2wB,aAAarmB,UAE1FqwB,EAAgB56B,KAAKsC,cAAc0W,iBAAiB6nB,EAAY7gC,KAAKC,MAAMoK,YAAYE,UAC7FsJ,EAAM3I,KAAK,CACTqZ,MAAM,qBACNxjB,MAAMf,KAAKsC,cAAcyM,YAAY6rB,EAAc,GAAG,IAAI56B,KAAKC,MAAMmK,gBAGvEw2B,EAAmB5gC,KAAKsC,cAAc0W,iBAAiB4nB,EAAiB5gC,KAAKC,MAAM2wB,aAAarmB,UAChGsJ,EAAM3I,KAAK,CACTqZ,MAAK,GAAAne,OAAIpG,KAAKC,MAAM2wB,aAAa5qB,KAA5B,iBACLjF,MAAMf,KAAKsC,cAAcyM,YAAY6xB,EAAiB,GAAG,IAAI5gC,KAAKC,MAAMmK,gBAG1EyJ,EAAM3I,KAAK,CACTqZ,MAAM,oBACNxjB,MAAMf,KAAKsC,cAAcyM,YAAYkyB,EAAiB,GAAG,IAAIjhC,KAAKC,MAAM2wB,aAAagJ,cAGjFyH,EAAeH,EAAYhQ,OAAQ,SAACmQ,EAAaC,GACrD,IAAMC,EAAgBpF,EAAK75B,cAAc0W,iBAAiBsoB,EAAME,aAAa12B,OAAO4xB,EAAkBnyB,UAEtG,OADA82B,EAAeA,EAAa/qB,KAAKirB,IAEjCvhC,KAAKsC,cAAc+T,MAAM,IACrBskB,EAAe0G,EAAa/qB,KAAK2qB,GACvCptB,EAAM3I,KAAK,CACTqZ,MAAM,gBACNxjB,MAAMf,KAAKsC,cAAcyM,YAAY4rB,EAAa,GAAG,IAAI36B,KAAKC,MAAM2wB,aAAagJ,cAG7EvB,EAAgB0I,GAAcA,EAAWj2B,OAAS9K,KAAKsC,cAAc0W,iBAAiB+nB,EAAWj2B,OAAO9K,KAAKC,MAAMoK,YAAYE,UAAYvK,KAAKsC,cAAc+T,MAAM,GACpKorB,EAAgBzhC,KAAKsC,cAAcyM,YAAYspB,EAAc,GACnEH,EAAYhtB,KAAK,CACfqZ,MAAM,kBACNmT,YAAY,8BACZ32B,MAAM0gC,EAAc,IAAIzhC,KAAKC,MAAM2wB,aAAagJ,cAG5C4B,EAAesF,EAAiB9f,IAAI4f,GAC1C1I,EAAYhtB,KAAK,CACfqZ,MAAM,QACNxjB,MAAK,GAAAqF,OAAIo1B,EAAa7nB,MAAM,KAAK5I,QAAQ,GAApC,KACL2sB,YAAY,qCAGdQ,EAAYhtB,KAAK,CACfqZ,MAAK,GAAAne,OAAIpG,KAAKC,MAAM2wB,aAAa5qB,KAA5B,YACLjF,MAAK,GAAAqF,OAAIpG,KAAKsC,cAAcyM,YAAY+xB,EAAiB,GAApD,KAAA16B,OAA0DpG,KAAKC,MAAM2wB,aAAagJ,eAGzFoH,EAAYhhC,KAAKsC,cAAc0W,iBAAiBgoB,EAAUhhC,KAAKC,MAAMoK,YAAYE,UAC3EsxB,EAAiB77B,KAAKsC,cAAcyM,YAAYiyB,EAAU,GAChE9I,EAAYhtB,KAAK,CACfqZ,MAAM,oBACNxjB,MAAK,GAAAqF,OAAIy1B,EAAJ,KAAAz1B,OAAsBpG,KAAKC,MAAM2wB,aAAagJ,eAIjD8H,EAAiBN,EAAclQ,OAAQ,SAACyQ,EAAWL,GACrD,IAAMM,EAAmBzF,EAAK75B,cAAc+T,MAAMirB,EAAME,aAAaK,IAC/DC,EAAe3F,EAAK75B,cAAc0W,iBAAiBsoB,EAAME,aAAazgC,MAAMo7B,EAAKl8B,MAAMoK,YAAYE,UAKzG,OAJIu3B,EAAa3oB,GAAG,KAClBwoB,EAAaA,EAAWrrB,KAAKwrB,EAAanuB,MAAMiuB,KAG3CD,GACP3hC,KAAKsC,cAAc+T,MAAM,IAE3BqrB,EAAiBrJ,EAAclf,GAAG,GAAKnP,KAAKC,KAAKy3B,EAAe1gB,IAAIqX,IAAkB,EAChF0J,EAAmBZ,EAAiBp8B,OAASo8B,EAAiBA,EAAiBp8B,OAAO,GAAK,KAC3Fi9B,EAAqBD,EAAmB/hC,KAAKsC,cAAc+T,MAAM0rB,EAAiBP,aAAaS,MAAQjiC,KAAKsC,cAAc+T,MAAM/J,SAAS5B,KAAKwwB,MAAM,MACpJgH,EAAcF,EAAmBzrB,MAAMmrB,GAEvCS,EAAgB9J,EAAclf,GAAG,GAAK6nB,EAAUhgB,IAAIqX,GAAiBr4B,KAAKsC,cAAc+T,MAAM,GAC9F+rB,EAAMF,EAAY/oB,GAAG,GAAKgpB,EAAcxuB,MAAM3T,KAAKsC,cAAcwJ,gBAAgB,CAAC,UAAU,oBAAoBkV,IAAIkhB,GAAavuB,MAAM,KAAO3T,KAAKsC,cAAc+T,MAAM,GAE7K6hB,EAAYhtB,KAAK,CACfqZ,MAAM,MACNxjB,MAAK,GAAAqF,OAAIg8B,EAAIr3B,QAAQ,GAAhB,KACL2sB,YAAY,+DAGR2K,EAAcriC,KAAKoC,MAAMq8B,UAAYz+B,KAAKsC,cAAc2I,YAAiC,IAArBjL,KAAKoC,MAAMq8B,WAAgBrD,MAAMzhB,OAAO,oBAAsB,GACxIue,EAAYhtB,KAAK,CACfnK,MAAMshC,EACN9d,MAAM,sBACNmT,YAAY,6BAOd13B,KAAKgD,SAAS,CACZ6Q,QACAmtB,YACA9I,cACAE,cACAC,gBACAyG,mNAI2BvK,mEAC7Bv0B,KAAKgD,SAAS,CACZuxB,0JAIMiE,GACRx4B,KAAKgD,SAAS,CACZw1B,6DAIcmG,GAChB3+B,KAAKgD,SAAS,CACZ27B,iEAIkBn3B,GACpB,IACMo3B,EAAkBp3B,EAAEgH,OAAOzN,MAC3BuhC,EAAWtiC,KAAKsC,cAAc2I,cAC9Bw0B,EAAQz/B,KAAKsC,cAAc2I,YAAY2zB,EAAgB,IAAI0D,EAAS3oB,OAAO,YAAY,uBAAuB6lB,IAAI,EAAE,UAC1H,GAAIC,EAAM8C,UAAU,CAClB,IAAMvD,EAAsB1yB,SAASmzB,EAAMM,GAAGpoB,UAAU,KAExD3X,KAAKgD,SAAS,CACZ47B,kBACAG,mBATuB,KAUvBC,kEAKWD,GACf,IAAMQ,EAAUv/B,KAAKoC,MAAMq8B,UAAYz+B,KAAKsC,cAAc2I,YAAiC,IAArBjL,KAAKoC,MAAMq8B,WAAkBz+B,KAAKsC,cAAc2I,cAChHy0B,EAAU1/B,KAAKsC,cAAc2I,cAAcu0B,IAAI,EAAE,QACnDC,EAAQF,EAAQC,IAAIT,EAAmBh+B,MAAMg+B,EAAmBjwB,MAAM0wB,IAAI,EAAE,UAG5EC,EAAME,QAAQD,KAChBD,EAAQC,GAGV,IAAMd,EAAkBa,EAAM9lB,OAAO,cAC/BqlB,EAAsB1yB,SAASmzB,EAAMM,GAAGpoB,UAAU,KAIxD3X,KAAKgD,SAAS,CACZ47B,kBACAG,qBACAC,6GAIuBv1B,EAAGqB,EAAOirB,oGAE/BuB,EAAU,KACVuH,EAAkB,UACd7+B,KAAKoC,MAAMo2B,sBACZ,gBAWA,yBA0BA,qBAWA,yCA/CGgK,EAAkB/4B,EAAGwyB,WAAaxyB,EAAGwyB,UAAUC,KAAOzyB,EAAGwyB,UAAUC,KAAKhR,KAAM,SAAA6Q,GAAG,OAAIA,EAAItoB,QAAQlK,gBAAkB8zB,EAAKp9B,MAAMoK,YAAYoJ,QAAQlK,eAAiBwyB,EAAIK,OAAOlR,KAAM,SAAAmR,GAAC,OAAIA,EAAE9yB,cAAcK,SAASyzB,EAAKp9B,MAAM2wB,aAAand,QAAQ6oB,QAAQ,KAAK,IAAI/yB,kBAAoBwyB,EAAIK,OAAOlR,KAAM,SAAAmR,GAAC,OAAIA,EAAE9yB,cAAcK,SAASyzB,EAAKp9B,MAAM2L,QAAQ0wB,QAAQ,KAAK,IAAI/yB,kBAAoBwyB,EAAIhsB,KAAKxG,gBAAgB,qEAAqEA,gBAAkB,KAC9ek5B,EAAeD,EAAkBxiC,KAAKsC,cAAc0W,iBAAiB1M,SAASk2B,EAAgBzyB,KAAK,IAAI/P,KAAKC,MAAMoK,YAAYE,UAAYvK,KAAKsC,cAAc+T,MAAM,GACzKwoB,EAAkB,CAChB3qB,KAAK,UACL4a,UAAU,CACR5uB,MAAMF,KAAKC,MAAMoG,MAAMC,OAAOmF,aAAarH,OAAO0E,WAEpDzG,KAAI,wCAAA+D,OAAyCq8B,EAAa13B,QAAQ,GAA9D,KAAA3E,OAAoEpG,KAAKC,MAAMmK,cAA/E,+CAIEpK,KAAKoC,MAAMu8B,sBACZ,iBASA,2CARHE,EAAkB,CAChB3qB,KAAK,UACL4a,UAAU,CACR5uB,MAAMF,KAAKC,MAAMoG,MAAMC,OAAOmF,aAAarH,OAAO0E,WAEpDzG,KAAI,0DAAA+D,OAA2DpG,KAAKsC,cAAc2I,YAA2C,IAA/BjL,KAAKoC,MAAM48B,qBAA0B5D,MAAMzhB,OAAO,oBAA5I,sDAIA+oB,EAA0Bj5B,EAAGwyB,WAAaxyB,EAAGwyB,UAAUC,KAAOzyB,EAAGwyB,UAAUC,KAAKhR,KAAM,SAAA6Q,GAAG,OAAIA,EAAItoB,QAAQlK,gBAAkB8zB,EAAKp9B,MAAMoK,YAAYoJ,QAAQlK,eAAiBwyB,EAAIK,OAAOlR,KAAM,SAAAmR,GAAC,OAAIA,EAAE9yB,cAAcK,SAASyzB,EAAKp9B,MAAM2wB,aAAand,QAAQ6oB,QAAQ,KAAK,IAAI/yB,kBAAoBwyB,EAAIK,OAAOlR,KAAM,SAAAmR,GAAC,OAAIA,EAAE9yB,cAAcK,SAASyzB,EAAKp9B,MAAM2L,QAAQ0wB,QAAQ,KAAK,IAAI/yB,kBAAoBwyB,EAAIhsB,KAAKxG,gBAAgB,qEAAqEA,gBAAkB,KACtfo5B,EAAiBD,EAA0B1iC,KAAKsC,cAAc0W,iBAAiB1M,SAASo2B,EAAwB3yB,KAAK,IAAI/P,KAAKC,MAAMoK,YAAYE,UAAYvK,KAAKsC,cAAc+T,MAAM,GAC3LwoB,EAAkB,CAChB3qB,KAAK,UACL4a,UAAU,CACR5uB,MAAMF,KAAKC,MAAMoG,MAAMC,OAAOmF,aAAarH,OAAO0E,WAEpDzG,KAAI,uDAAA+D,OAAwDu8B,EAAe53B,QAAQ,GAA/E,KAAA3E,OAAqFpG,KAAKC,MAAMmK,cAAhG,0HAQJoyB,EAAoB/yB,EAAGwyB,WAAaxyB,EAAGwyB,UAAUC,KAAOzyB,EAAGwyB,UAAUC,KAAKhR,KAAM,SAAA6Q,GAAG,OAAIA,EAAItoB,QAAQlK,gBAAkB8zB,EAAKp9B,MAAMoK,YAAYoJ,QAAQlK,gBAAkB,KACtKkzB,EAAiBD,EAAoBx8B,KAAKsC,cAAc0W,iBAAiB1M,SAASkwB,EAAkBzsB,KAAK,IAAI/P,KAAKC,MAAMoK,YAAYE,UAAYvK,KAAKsC,cAAc+T,MAAM,GAC/KwoB,EAAkB,CAChB3qB,KAAK,UACL4a,UAAU,CACR5uB,MAAMF,KAAKC,MAAMoG,MAAMC,OAAOmF,aAAarH,OAAO0E,WAEpDzG,KAAI,2CAAA+D,OAA4Cq2B,EAAe1xB,QAAQ,GAAnE,KAAA3E,OAAyEpG,KAAKC,MAAMmK,cAApF,kDAIAsyB,EAAoB18B,KAAKsC,cAAcwJ,gBAAgB,CAAC,YAAY9L,KAAKC,MAAM2wB,aAAagJ,cAC5F+C,EAAqBlzB,EAAGwyB,WAAaxyB,EAAGwyB,UAAUC,KAAOzyB,EAAGwyB,UAAUC,KAAKhR,KAAM,SAAA6Q,GAAG,OAAKA,EAAItoB,QAAQlK,gBAAkBmzB,EAAkBjpB,QAAQlK,eAAiBwyB,EAAIK,OAAOlR,KAAM,SAAAmR,GAAC,OAAIA,EAAE9yB,cAAcK,SAASyzB,EAAKp9B,MAAM2L,QAAQ0wB,QAAQ,KAAK,IAAI/yB,mBAAsB,KAC3QqzB,EAAkBD,EAAqB38B,KAAKsC,cAAc0W,iBAAiB1M,SAASqwB,EAAmB5sB,KAAK,IAAI2sB,EAAkBnyB,UAAYvK,KAAKsC,cAAc+T,MAAM,GAC7KwoB,EAAkB,CAChB3qB,KAAK,UACL4a,UAAU,CACR5uB,MAAMF,KAAKC,MAAMoG,MAAMC,OAAOmF,aAAarH,OAAO0E,WAEpDzG,KAAI,yCAAA+D,OAA0Cw2B,EAAgB7xB,QAAQ,GAAlE,KAAA3E,OAAwEpG,KAAKC,MAAM2wB,aAAagJ,YAAhG,gFAOmB,EAE7B55B,KAAKgD,SAAS,CACZs0B,UACAuH,kBACA/F,sBAL2B,GAM3B,WACAuE,EAAKrE,kTAIQC,kCACTtoB,EAAW,YAOPiO,QAAQkD,IAAI,CACpB9hB,KAAKsC,cAAc06B,gBAAgBh9B,KAAKC,MAAMmK,cAAcpK,KAAKC,MAAM2L,SACvE5L,KAAKsC,cAAcw3B,oBAAoB95B,KAAKC,MAAM2wB,aAAa5qB,KAAK,cAAc,CAAChG,KAAKC,MAAM2L,+CAJ9FkpB,OACA2J,OAMF9tB,EAAS8tB,UAAYA,GAAanyB,SAASmyB,GAAW,EAAInyB,SAASmyB,GAAa,KAChF9tB,EAAS+tB,YAAc/tB,EAAS8tB,WAAa9tB,EAAS8tB,WAAWnyB,SAAS5B,KAAKwwB,MAAM,KACrFvqB,EAASmkB,aAAgB90B,KAAKsC,cAAc+T,MAAMye,GAAcjmB,QAAmD7O,KAAKsC,cAAc+T,MAAM,GAAlErW,KAAKsC,cAAc+T,MAAMye,GAI9E,cAFjB0D,EAAiBx4B,KAAKoC,MAAMo2B,iBAEI7nB,EAAS+tB,cAC3ClG,EAAiB,OACjB7nB,EAAS6nB,eAAiBA,GAIxB7nB,EAAS8tB,WAA8B,SAAjBjG,GACxBA,EAAiB,gBACjB7nB,EAASguB,eAAiB,OAC1BhuB,EAAS6nB,eAAiBA,GACA,kBAAjBA,GAAqC7nB,EAASguB,gBAAmB3+B,KAAKoC,MAAMu8B,iBACrFhuB,EAASguB,eAAiB,QAIP,kBAAjBnG,GAAoC7nB,EAAS+tB,cAC/ClG,EAAiB,WACjB7nB,EAAS6nB,eAAiBA,QAGpBA,SACD,iBAMA,0BAOA,6CAZH7nB,EAASyjB,eAAgB,EACzBzjB,EAASomB,gBAAiB,EAC1BpmB,EAASwnB,YAAcxnB,EAASmkB,aAChCnkB,EAASonB,mBAAT,8CAAA3xB,OAA4EpG,KAAKC,MAAMmK,cAAvF,+CAGAuG,EAASyjB,eAAgB,EACzBzjB,EAASomB,gBAAiB,EAC1BpmB,EAASonB,mBAAqB,GAC9BpnB,EAASwnB,YAAcxnB,EAASmkB,aAChCnkB,EAASiuB,gBAAkB5+B,KAAKsC,cAAc2I,YAA+B,IAAnB0F,EAAS8tB,WAAgB9kB,OAAO,kDAG1FhJ,EAASyjB,eAAgB,EACzBzjB,EAASomB,gBAAiB,EAC1BpmB,EAASonB,mBAAqB,GAC9BpnB,EAASwnB,YAAcn4B,KAAKsC,cAAc0W,iBAAiBrI,EAAS0nB,cAAcr4B,KAAKC,MAAMoK,YAAYE,2EAMzG0uB,IACFtoB,EAAS2mB,QAAU,KACnB3mB,EAASkuB,gBAAkB,KAC3BluB,EAASmoB,sBAAuB,GAG5B4G,EAAU1/B,KAAKsC,cAAc2I,cAAcu0B,IAAI,EAAE,QAAQ7lB,OAAO,cACtEhJ,EAASsuB,0BAA0BtuB,EAAS8tB,WAAYz+B,KAAKsC,cAAc2I,YAA+B,IAAnB0F,EAAS8tB,WAAgB9kB,OAAO,gBAAgB+lB,EAUvI1/B,KAAKgD,SAAS2N,EAAS,WACrB4sB,EAAKD,kJAIA,IAAAsF,EAAA5iC,KAEDw9B,EAAY,SAAAv9B,GAChB,IAAMwF,EAAStE,OAAAuD,EAAA,EAAAvD,CAAA,CACbiO,EAAE,EACF7P,GAAG,EACHC,MAAM,OACHS,EAAMwF,WAEX,OACEpC,EAAAjE,EAAAC,cAACmG,EAAA,EAAD,CACE+e,MAAOtkB,EAAMskB,MACb9e,UAAWA,EACXg4B,WAAY,CACVl9B,SAAS,EACTC,WAAW,GAEbk9B,iBAAkB,CAChBx3B,GAAG,EACHwB,GAAG,GAELgwB,YAAaz3B,EAAMy3B,aAEnBr0B,EAAAjE,EAAAC,cAACiE,EAAA,EAADnC,OAAAC,OAAA,CACE8E,GAAI,EACJ3F,SAAU,CAAC,EAAE,GACbL,MAAO,aACHD,EAAM8M,WAET9M,EAAMc,SAMT8hC,EAAuC,SAA9B7iC,KAAKoC,MAAMo2B,eACpBqF,EAAwC,UAA9B79B,KAAKoC,MAAMo2B,eACrBsK,EAAwC,UAA9B9iC,KAAKoC,MAAMo2B,eACrBoF,EAA0C,aAA9B59B,KAAKoC,MAAMo2B,eACvBuK,EAA2C,kBAA9B/iC,KAAKoC,MAAMo2B,eACxBsF,EAAW99B,KAAKoC,MAAMo2B,eACtBwK,GAAehjC,KAAKoC,MAAMs8B,YAEhC,OACEr7B,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,GAGPQ,KAAKC,MAAMoK,aAAerK,KAAKC,MAAMoK,YAAY0zB,UAC/C16B,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ1G,MAAO,GAEP6D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/D,GAAI,GADN,eAKA8D,EAAAjE,EAAAC,cAACkP,EAAA,EAAD,CACErI,GAAI,EACJhG,MAAO,OACP4H,WAAY,OACZ2b,KAAMzjB,KAAKC,MAAMoK,YAAY0zB,UAE7B16B,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEpD,MAAO,OACPN,MAAO,CACLmE,SAAS,OACTkC,SAAS,SACTrF,WAAW,SACXotB,aAAa,aAGdhuB,KAAKC,MAAMoK,YAAY0zB,YAOhC/9B,KAAKoC,MAAMi2B,eAAiBr4B,KAAKsC,cAAc+T,MAAMrW,KAAKoC,MAAMi2B,eAAelf,GAAG,IAAMnZ,KAAKoC,MAAM81B,YAAYnzB,OAAO,GACpH1B,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ1G,MAAO,GAEP6D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/D,GAAI,GADN,eAKA8D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ3G,GAAI,EACJC,MAAO,EACPI,MAAO,CACLC,UAAU,IACVC,KAAK,UACLw+B,SAAS,QAEXv+B,eAAgB,iBAGdC,KAAKoC,MAAM81B,YAAYxxB,IAAK,SAACs3B,EAAS1wB,GAAV,OAC1BjK,EAAAjE,EAAAC,cAACm+B,EAADr8B,OAAAC,OAAA,CACEyF,IAAG,eAAAT,OAAiBkH,GACpB7H,UAAW,CACTlG,GAAG,EACHC,MAAM,CAAC,MAAM,QAGfuN,UAAW,CACTxM,SAAS,CAAC,EAAE,KAEVy9B,QAShBh+B,KAAKC,MAAMmK,eACT/G,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ1G,MAAO,GAEP6D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM/D,GAAI,GAAV,kBAGA8D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE7D,WAAY,SACZC,cAAe,CAAC,SAAS,OACzBK,eAAgB,iBAGW,OAAzBC,KAAKoC,MAAMq8B,UACTp7B,EAAAjE,EAAAC,cAAC4+B,EAAA,EAAD,CACE/8B,YAAa,CACXuC,GAAG,EACH2qB,OAAOyU,EAAS,EAAI,GAEtB3E,QAAS,OACT1+B,MAAO,CAAC,EAAE,OACV2+B,SAAU,kBACVp4B,SAAU/F,KAAKC,MAAM8F,SAErB4oB,WAAY,CACVpvB,GAAG,CAAC,EAAE,GACNa,OAAOJ,KAAKC,MAAM8F,SAAW,OAAS,QAExC0oB,SAAUoU,EACVnhC,YAAc,SAAA8F,GAAC,OAAIo7B,EAAKxE,UAAU,WAEjCp+B,KAAKoC,MAAMs8B,YAkBdr7B,EAAAjE,EAAAC,cAAC4+B,EAAA,EAAD,CACE/8B,YAAa,CACXuC,GAAG,EACH2qB,OAAOwP,EAAY,EAAI,GAEzBp+B,MAAO,CAAC,EAAE,OACV0+B,QAAS,WACTC,SAAU,oBACVp4B,SAAU/F,KAAKC,MAAM8F,SAErB4oB,WAAY,CACVpvB,GAAG,CAAC,EAAE,GACNa,OAAOJ,KAAKC,MAAM8F,SAAW,OAAS,QAExC0oB,SAAUmP,EACVl8B,YAAc,SAAA8F,GAAC,OAAIo7B,EAAKxE,UAAU,eAhCpC/6B,EAAAjE,EAAAC,cAAC4+B,EAAA,EAAD,CACE/8B,YAAa,CACXuC,GAAG,EACH2qB,OAAO2U,EAAa,EAAI,GAE1BvjC,MAAO,CAAC,EAAE,OACVivB,SAAUsU,EACV7E,QAAS,gBACTC,SAAU,kBACVp4B,SAAU/F,KAAKC,MAAM8F,SACrB4oB,WAAY,CACVpvB,GAAG,CAAC,EAAE,GACNa,OAAOJ,KAAKC,MAAM8F,SAAW,OAAS,QAExCrE,YAAc,SAAA8F,GAAC,OAAIo7B,EAAKxE,UAAU,oBAsBxC/6B,EAAAjE,EAAAC,cAAC4+B,EAAA,EAAD,CACE/8B,YAAa,CACXuC,GAAG,EACH2qB,OAAO0U,EAAU,EAAI,GAEvBtjC,MAAO,CAAC,EAAE,OACV0+B,QAAS,QACTC,SAAU,oBACVp4B,SAAU/F,KAAKC,MAAM8F,SAErB4oB,WAAY,CACVpvB,GAAG,CAAC,EAAE,GACNa,OAAOJ,KAAKC,MAAM8F,SAAW,OAAS,QAExC0oB,SAAUqU,EACVphC,YAAc,SAAA8F,GAAC,OAAIo7B,EAAKxE,UAAU,YAEpC/6B,EAAAjE,EAAAC,cAAC4+B,EAAA,EAAD,CACE/8B,YAAa,CACXuC,GAAG,EACH2qB,OAAOyP,EAAU,EAAI,GAEvBr+B,MAAO,CAAC,EAAE,OACV0+B,QAAS,QACTC,SAAU,mBACVp4B,SAAU/F,KAAKC,MAAM8F,SACrB4oB,WAAY,CACVpvB,GAAG,CAAC,EAAE,GACNa,OAAOJ,KAAKC,MAAM8F,SAAW,OAAS,QAExC0oB,SAAUoP,EACVn8B,YAAc,SAAA8F,GAAC,OAAIo7B,EAAKxE,UAAU,aAIpCp+B,KAAKoC,MAAMy8B,iBACTx7B,EAAAjE,EAAAC,cAACg4B,EAAA,EAADl2B,OAAAC,OAAA,CACEqE,UAAW,CACTS,GAAG,EACH3G,GAAG,IAEDS,KAAKoC,MAAMy8B,kBAKnBhB,EACEx6B,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ3G,GAAI,EACJC,MAAO,EACPI,MAAO,CACL0+B,SAAS,QAEXv+B,eAAgB,iBAGZC,KAAKoC,MAAMyR,OAAU7T,KAAKoC,MAAMyR,MAAM9O,OAmBpC/E,KAAKoC,MAAMyR,MAAMnN,IAAK,SAACs3B,EAAS1wB,GAAV,OACxBjK,EAAAjE,EAAAC,cAACm+B,EAADr8B,OAAAC,OAAA,CACEyF,IAAG,SAAAT,OAAWkH,GACd7H,UAAW,CACTjG,MAAM,CAAC,EAAE,SAEPw+B,MAxBN36B,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ3G,GAAI,EACJC,MAAO,GAEP6D,EAAAjE,EAAAC,cAACsN,EAAA,EAAD,CACEC,UAAW,CACTlN,cAAc,OAEhBoN,YAAa,CACX5J,KAAK,QAEP6J,UAAW,CACTrF,GAAG,GAELrF,KAAM,sBAadgB,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/D,GAAI,GADN,wBAKA8D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/D,GAAI,EACJC,MAAO,EACPC,WAAY,SACZM,eAAgB,UAEhBsD,EAAAjE,EAAAC,cAACmG,EAAA,EAAD,CACEC,UAAW,CACT2J,EAAE,EACF5P,MAAM,EACN2D,QAAQ,OACR1D,WAAW,SACXM,eAAe,UAEjB0uB,UAAU,EACV5oB,eAAe,GAGb7F,KAAKoC,MAAM08B,oBAAsB9+B,KAAKoC,MAAM08B,mBAAmB/5B,OAC7D1B,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPE,cAAe,UAEf2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEoC,GAAI,EACJlG,MAAO,EACPE,cAAe,MACfujC,aAAY,aAAA78B,OAAepG,KAAKC,MAAMoG,MAAMC,OAAOC,UAEnDlD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/C,SAAU,EACVf,MAAO,KACPgB,WAAY,GAHd,QAOA6C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/C,SAAU,EACVf,MAAO,KACPgB,WAAY,GAHd,UAOA6C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/C,SAAU,EACVf,MAAO,KACPgB,WAAY,GAHd,SASAR,KAAKoC,MAAM08B,mBAAmBp4B,IAAK,SAAAw8B,GAAM,OACvC7/B,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEoC,GAAI,EACJlG,MAAO,EACPE,cAAe,MACfujC,aAAY,aAAA78B,OAAew8B,EAAK3iC,MAAMoG,MAAMC,OAAOC,UAEnDlD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/C,SAAU,EACVf,MAAO,KACPgB,WAAY,EACZN,MAAO,aAENgjC,EAAOz4B,MAEVpH,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/C,SAAU,EACVf,MAAO,KACPgB,WAAY,EACZN,MAAO,aAENgjC,EAAOp4B,QAEVzH,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/C,SAAU,EACVf,MAAO,KACPgB,WAAY,EACZN,MAAO,aAEN0iC,EAAKtgC,cAAcM,YAAYsgC,EAAOrgC,WAOjDQ,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/C,SAAU,EACVL,MAAO,aAFT,iCAWPF,KAAKC,MAAMoK,aAAerK,KAAKoC,MAAM+1B,aAAen4B,KAAKoC,MAAMg2B,aAAep4B,KAAKC,MAAM2wB,aAC1FvtB,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ1G,MAAO,EACPD,GAAI,CAAC,EAAE,IAGJwjC,GAAcC,GACb3/B,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/D,GAAI,EACJC,MAAO,GAEP6D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM/D,GAAI,GAAV,0BAGA8D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE7D,WAAY,SACZC,cAAe,MACfK,eAAgB,iBAEhBsD,EAAAjE,EAAAC,cAACmvB,EAAA,EAADrtB,OAAAC,OAAA,GACMpB,KAAKC,MADX,CAEE8M,UAAW,CACTxM,SAAS,CAAC,EAAE,IAEdkF,UAAW,CACTE,GAAG,EACHD,GAAG,EACHlG,MAAM,KAER0U,KAAM,aACN2a,UAAW,UACXE,YAAa,UACbN,SAAyC,SAA9BzuB,KAAKoC,MAAMu8B,eACtBj9B,YAAc,SAAA8F,GAAC,OAAIo7B,EAAKO,kBAAkB,SAC1C9gC,KAAMrC,KAAKC,MAAM8F,SAAW,OAAS,mBAEvC1C,EAAAjE,EAAAC,cAACmvB,EAAA,EAADrtB,OAAAC,OAAA,GACMpB,KAAKC,MADX,CAEE8M,UAAW,CACTxM,SAAS,CAAC,EAAE,IAEdkF,UAAW,CACTE,GAAG,EACHD,GAAG,EACHlG,MAAM,KAER0U,KAAM,cACN2a,UAAW,SACXE,YAAa,UACbN,SAAyC,WAA9BzuB,KAAKoC,MAAMu8B,eACtBj9B,YAAc,SAAA8F,GAAC,OAAIo7B,EAAKO,kBAAkB,WAC1C9gC,KAAMrC,KAAKC,MAAM8F,SAAW,SAAW,wBAO7C88B,GAAU7iC,KAAKoC,MAAM+1B,aAAen4B,KAAKoC,MAAMmyB,kBAAoBv0B,KAAKoC,MAAM+1B,YAAYhf,GAAG,IAAQ4pB,GAAcC,IACnH3/B,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,IAGJqjC,GAAwC,SAA9B7iC,KAAKoC,MAAMu8B,iBACpBt7B,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,GAEP6D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM/D,GAAI,GAAV,uBAIGS,KAAKoC,MAAM68B,wBAuFV57B,EAAAjE,EAAAC,cAACg4B,EAAA,EAAD,CACE5xB,UAAW,CACTS,GAAG,EACH3G,GAAG,GAEL2U,KAAM,UACN4a,UAAW,CACT5uB,MAAM,YAERmC,KAAI,2DA/FNgB,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPC,WAAY,SACZM,eAAgB,SAChBL,cAAe,UAEf2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/D,GAAI,EACJC,MAAO,EACPsP,KAAM,OACN6oB,UAAU,EACVv3B,OAAQ,QACRC,aAAc,EACdG,WAAY,IACZwS,YAAa,aACb1S,gBAAiB,SACjBe,UAAW,kBACXN,MAAOf,KAAKoC,MAAMw8B,iBAAmB,GACrCr3B,SAAUvH,KAAKojC,sBAAsBj2B,KAAKnN,MAC1CouB,OAAM,aAAAhoB,OAAepG,KAAKC,MAAMoG,MAAMC,OAAOC,WAE/ClD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/D,GAAI,EACJC,MAAO,EACPC,WAAY,SACZC,cAAe,MACfK,eAAgB,iBAGdC,KAAKoC,MAAMo8B,YAAY93B,IAAK,SAAC0I,EAAE9B,GAC7B,IAAMmhB,IAAWmU,EAAKxgC,MAAM28B,qBAAqB6D,EAAKxgC,MAAM28B,mBAAmBh+B,QAAQqO,EAAErO,OAAS6hC,EAAKxgC,MAAM28B,mBAAmBjwB,OAASM,EAAEN,MAC3I,OACEzL,EAAAjE,EAAAC,cAACmG,EAAA,EAAD,CACEC,UAAW,CACT2J,EAAE,EACF5P,MAAM,KAERivB,SAAUA,EACV5oB,eAAe,EACfgB,IAAG,cAAAT,OAAgBkH,GACnB5L,YAAa,SAAA8F,GAAC,OAAIo7B,EAAKS,iBAAiBj0B,KAExC/L,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9C,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,UAAW,SACXP,MAAOuuB,EAAW,YAAc,YAE/Brf,EAAEzO,WAQboiC,GACE1/B,EAAAjE,EAAAC,cAACikC,EAAA,EAADniC,OAAAC,OAAA,CACE20B,OAAQ,IACJ/1B,KAAKC,MAFX,CAGEsjC,YAAa,CACX/jC,MAAM,EACNC,WAAW,SACXM,eAAe,UAEjBiB,UAAWwiC,IACXC,eAAgB,CACdljC,SAAS,EACTC,WAAW,EACX0C,KAAK,SACL1D,MAAM,CAAC,EAAE,IACTa,aAAa,EACbiB,UAAU,UACVP,MAAM,gBACNukB,SAAStlB,KAAKoC,MAAMkyB,gBAEtBhrB,OAAQ,gBACR4sB,WAAY,uBACZJ,aAAc91B,KAAKC,MAAM2wB,aAAa5qB,KACtC4K,SAAU5Q,KAAK84B,qBAAqB3rB,KAAKnN,MACzCw2B,qBAAsBx2B,KAAK0jC,sBAAsBv2B,KAAKnN,YA0B3E6iC,GAAsC,WAA5B7iC,KAAKoC,MAAMu8B,eACpBt7B,EAAAjE,EAAAC,cAACg/B,EAADl9B,OAAAC,OAAA,CACE2c,MAAO,MACH/d,KAAKC,MAFX,CAGEqJ,OAAQw0B,EACRvG,MAAOv3B,KAAKoC,MAAMm1B,MAClBD,QAASt3B,KAAKoC,MAAMk1B,QACpBjtB,YAAarK,KAAKC,MAAMoK,YACxByqB,aAAc90B,KAAKoC,MAAM+1B,YACzBvH,aAAc5wB,KAAKC,MAAM2wB,aACzBwD,cAAep0B,KAAKoC,MAAMgyB,cAC1BE,eAAgBt0B,KAAKoC,MAAMkyB,eAC3ByC,eAAgB/2B,KAAKoC,MAAM20B,eAC3BnmB,SAAU5Q,KAAK84B,qBAAqB3rB,KAAKnN,MACzC+3B,mBAAoB/3B,KAAKoC,MAAM21B,mBAC/BF,oBAAqB73B,KAAKoC,MAAMy1B,oBAChClD,oBAAqB30B,KAAK20B,oBAAoBxnB,KAAKnN,MACnDu0B,iBAAkBv0B,KAAK2jC,yBAAyBx2B,KAAKnN,MACrDw2B,qBAAsBx2B,KAAKw2B,qBAAqBrpB,KAAKnN,QAErDqD,EAAAjE,EAAAC,cAACmG,EAAA,EAAD,CACEC,UAAW,CACT2J,EAAE,IAGJ/L,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE7D,WAAY,SACZC,cAAe,UAEf2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE0C,KAAM,WACN9F,MAAO,WACPgD,KAAMlD,KAAKC,MAAM8F,SAAW,QAAU,UAExC1C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ3F,SAAU,EACVL,MAAO,WACPO,UAAW,UAGRoiC,GAAUE,EAAX,sBAAA38B,OACwBpG,KAAKC,MAAMmK,cADnC,oBAEIwzB,GAAS,6BAAAx3B,OACkBpG,KAAKC,MAAMmK,cAD7B,qBAQpB24B,IAAeC,EAClB3/B,EAAAjE,EAAAC,cAACmG,EAAA,EAAD,CACEC,UAAW,CACT2J,EAAE,IAGJ/L,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE7D,WAAY,SACZC,cAAe,UAEf2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE0C,KAAM,WACN9F,MAAO,WACPgD,KAAMlD,KAAKC,MAAM8F,SAAW,QAAU,UAExC1C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ3F,SAAU,EACVL,MAAO,WACPO,UAAW,UAJb,2DAUFm9B,EACFv6B,EAAAjE,EAAAC,cAACmG,EAAA,EAAD,CACEC,UAAW,CACT2J,EAAE,IAIFpP,KAAKoC,MAAMs8B,YACTr7B,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE7D,WAAY,SACZC,cAAe,UAEf2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE0C,KAAM,WACN9F,MAAO,WACPgD,KAAMlD,KAAKC,MAAM8F,SAAW,QAAU,UAExC1C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ3G,GAAI,EACJgB,SAAU,EACVL,MAAO,WACPO,UAAW,UALb,+CAO+CT,KAAKC,MAAMmK,cAP1D,KASA/G,EAAAjE,EAAAC,cAACikC,EAAA,EAADniC,OAAAC,OAAA,CACE20B,OAAQ,IACJ/1B,KAAKC,MAFX,CAGEe,UAAWwiC,IACXD,YAAa,CACX/jC,MAAM,EACNC,WAAW,SACXM,eAAe,UAEjB0jC,eAAgB,CACdljC,SAAS,EACTC,WAAW,EACX0C,KAAK,SACL1D,MAAM,CAAC,EAAE,IACTa,aAAa,EACbiB,UAAU,SACVP,MAAM,YAERuI,OAAQ,WACR4sB,WAAY,WACZJ,aAAc91B,KAAKC,MAAM2wB,aAAa5qB,KACtC4K,SAAU5Q,KAAK84B,qBAAqB3rB,KAAKnN,UAI7CqD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE7D,WAAY,SACZC,cAAe,UAEf2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE0C,KAAM,WACN9F,MAAO,WACPgD,KAAMlD,KAAKC,MAAM8F,SAAW,QAAU,UAExC1C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ3F,SAAU,EACVL,MAAO,WACPO,UAAW,UAJb,kDAMkDT,KAAKsC,cAAc2I,YAAiC,IAArBjL,KAAKoC,MAAMq8B,WAAgBrD,MAAMzhB,OAAO,oBANzH,yBAMoK3Z,KAAKC,MAAMmK,cAN/K,OAYN04B,GACFz/B,EAAAjE,EAAAC,cAACmG,EAAA,EAAD,CACEC,UAAW,CACT2J,EAAE,IAIDpP,KAAKoC,MAAM4+B,WAAahhC,KAAKoC,MAAM4+B,UAAU7nB,GAAG,GAC/C9V,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE7D,WAAY,SACZC,cAAe,UAEf2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEpD,MAAO,WACP8F,KAAM,iBACN9C,KAAMlD,KAAKC,MAAM8F,SAAW,QAAU,UAExC1C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ3G,GAAI,EACJgB,SAAU,EACVL,MAAO,WACPO,UAAW,UALb,iBAOiBT,KAAKoC,MAAM4+B,UAAUj2B,QAAQ,GAP9C,IAOmD/K,KAAKC,MAAM2wB,aAAagJ,YAP3E,KASAv2B,EAAAjE,EAAAC,cAACikC,EAAA,EAADniC,OAAAC,OAAA,CACE20B,OAAQ,IACJ/1B,KAAKC,MAFX,CAGEe,UAAWwiC,IACXD,YAAa,CACX/jC,MAAM,EACNC,WAAW,SACXM,eAAe,UAEjB0jC,eAAgB,CACdljC,SAAS,EACTC,WAAW,EACX0C,KAAK,SACL1D,MAAM,CAAC,EAAE,EAAE,GACXuB,MAAM,QACNV,aAAa,EACbiB,UAAU,UAEZgI,OAAQ,QACR4sB,WAAY,QACZtlB,SAAU5Q,KAAK84B,qBAAqB3rB,KAAKnN,MACzC81B,aAAc91B,KAAKC,MAAMoK,YAAY80B,eAAen5B,SAIxD3C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE7D,WAAY,SACZC,cAAe,UAEf2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE0C,KAAM,WACN9F,MAAO,WACPgD,KAAMlD,KAAKC,MAAM8F,SAAW,QAAU,UAExC1C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ3F,SAAU,EACVL,MAAO,WACPO,UAAW,UAJb,2CAeXT,KAAKC,MAAM2L,QAKdvI,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ3G,GAAI,EACJC,MAAO,GAEP6D,EAAAjE,EAAAC,cAACsN,EAAA,EAAD,CACEC,UAAW,CACTlN,cAAc,OAEhBoN,YAAa,CACX5J,KAAK,QAEP6J,UAAW,CACTrF,GAAG,GAELrF,KAAM,qBAnBVgB,EAAAjE,EAAAC,cAAC24B,EAAA,EACKh4B,KAAKC,gBA/2CHe,iCC2NX4iC,6MAhObxhC,MAAQ,CACNo1B,KAAK,EACLD,MAAM,CACJsM,EAAE,YACFC,EAAE,aACFC,EAAE,aAEJ57B,SAAQ,EACR67B,YAAY,GACZC,YAAY,GACZC,cAAc,KACd95B,cAAc,SAIhB9H,cAAgB,OAwBhB6hC,aAAe,SAAC38B,GACd,IAAMw8B,EAAcx8B,EAAEgH,OAAOzN,MAAMgE,SAAW8J,MAAMrH,EAAEgH,OAAOzN,OAASyG,EAAEgH,OAAOzN,MAAQ,GACvF0D,EAAKzB,SAAS,CACZghC,mBAIJI,aAAe,SAAC58B,GAEd,IAAMy8B,EAAcz8B,EAAEgH,OAAOzN,MAAMgE,SAAW8J,MAAMrH,EAAEgH,OAAOzN,OAASyG,EAAEgH,OAAOzN,MAAQ,GACvF0D,EAAKzB,SAAS,CACZihC,4FAhCEjkC,KAAKsC,cACPtC,KAAKsC,cAAcC,SAASvC,KAAKC,OAEjCD,KAAKsC,cAAgB,IAAIE,IAAcxC,KAAKC,4JAK9CD,KAAKyC,iMAGkBxD,EAAUC,mEACjCc,KAAKyC,qMAGmB2H,mEACxBpK,KAAKgD,SAAS,CACZoH,+QAqBFpK,KAAKgD,SAAS,CACZmF,SAAQ,aAGgBnI,KAAKsC,cAAc+hC,YAAnB,uCAAAj+B,OAAsEpG,KAAKoC,MAAM4hC,YAAjF,KAAA59B,OAAgGpG,KAAKoC,MAAMgI,cAA3G,KAAAhE,OAA4HpG,KAAKoC,MAAM6hC,YAAvI,0DAAtBC,SAEEvzB,EAAW,CACfxI,SAAQ,GAGN+7B,IACFvzB,EAASuzB,cAAgBA,EAAcn0B,MAGzC/P,KAAKgD,SAAS,CACZkhC,qJAIK,IAAA9+B,EAAApF,KAEP,OACEqD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACP0G,GAAI,CAAC,EAAE,GACPzG,WAAY,SACZC,cAAe,SACfK,eAAgB,UAEhBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/D,GAAI,EACJC,MAAO,CAAC,EAAE,KACVE,cAAe,UAEf2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/D,GAAI,EACJC,MAAO,EACPE,cAAe,MACfK,eAAgB,iBAGdoB,OAAOqF,KAAKxG,KAAKoC,MAAMm1B,OAAO7wB,IAAK,SAAA+wB,GAAS,OAC1Cp0B,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE1D,MAAO,CACLC,UAAU,IACVC,KAAK,UACLwkC,eAAe,OACfx+B,OAAOV,EAAKhD,MAAMo1B,MAAMC,EAAY,UAAY,WAElDl3B,SAAU,EACVE,UAAW,SACXoG,IAAG,QAAAT,OAAUqxB,GACbv3B,MAAQkF,EAAKhD,MAAMo1B,MAAMC,EAAY,OAAS,WAC9C3vB,WAAa1C,EAAKhD,MAAMo1B,MAAMC,EAAY,OAAS,WACnD8M,YAAcn/B,EAAKhD,MAAMo1B,MAAMC,EAAY,OAAS,YAEnDryB,EAAKhD,MAAMm1B,MAAME,OAK1Bp0B,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPE,cAAe,UAEf2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE1D,MAAO,CACLJ,MAAM,OACNY,OAAO,QAETW,MAAQ,EAAEI,OAAOqF,KAAKxG,KAAKoC,MAAMm1B,OAAOxyB,OAAQ/E,KAAKoC,MAAMo1B,SAIjEn0B,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,CAAC,EAAE,KACVC,WAAY,UACZC,cAAe,SACfK,eAAgB,UAEhBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,GAEP6D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/D,GAAI,GADN,iBAIA8D,EAAAjE,EAAAC,cAACwrB,EAAA,EAAD1pB,OAAAC,OAAA,GACMpB,KAAKC,MADX,CAEEurB,aAAa,EACbphB,cAAepK,KAAKoC,MAAMgI,cAC1B7C,SAAUvH,KAAKwkC,oBAAoBr3B,KAAKnN,MACxCsK,gBAAiBtK,KAAKC,MAAM6wB,UAAUxmB,oBAG1CjH,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ1G,MAAO,GAEP6D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/D,GAAI,GADN,kCAKA8D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEkH,IAAK,EACLhL,MAAO,OACPsP,KAAM,SACN6oB,UAAU,EACVv3B,OAAQ,QACRC,aAAc,EACdG,WAAY,IACZa,UAAW,kBACXN,MAAOf,KAAKoC,MAAM4hC,YAClBz8B,SAAUvH,KAAKmkC,aAAah3B,KAAKnN,MACjCouB,OAAM,aAAAhoB,OAAepG,KAAKC,MAAMoG,MAAMC,OAAOC,SAC7CuxB,YAAW,UAAA1xB,OAAYpG,KAAKoC,MAAMgI,cAAcpD,cAArC,cAGf3D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ1G,MAAO,GAEP6D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/D,GAAI,GADN,sBAKA8D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEkH,IAAK,EACLhL,MAAO,OACPsP,KAAM,SACN6oB,UAAU,EACVv3B,OAAQ,QACRC,aAAc,EACdG,WAAY,IACZa,UAAW,kBACXN,MAAOf,KAAKoC,MAAM6hC,YAClBnM,YAAa,0BACbvwB,SAAUvH,KAAKokC,aAAaj3B,KAAKnN,MACjCouB,OAAM,aAAAhoB,OAAepG,KAAKC,MAAMoG,MAAMC,OAAOC,YAGjDlD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ1G,MAAO,EACPO,eAAgB,UAEhBsD,EAAAjE,EAAAC,cAACqE,EAAA,EAAD,CACExC,YAAa,CACXkG,GAAG,EACH3D,GAAG,CAAC,EAAG,GACPP,KAAK,SACL7C,aAAa,EACbiB,UAAU,OACVgkB,UAAWtlB,KAAKoC,MAAM4hC,cAAgBhkC,KAAKoC,MAAMgI,gBAAkBpK,KAAKoC,MAAM6hC,aAEhFpgC,WAAY,YACZF,UAAW3D,KAAKoC,MAAM+F,QACtBzG,YAAc,SAAA8F,GAAC,OAAIpC,EAAKq/B,SAASj9B,gBAzNrBxG,6CCkZX0jC,8MA7YbtiC,MAAQ,CACNkH,OAAO,KACPguB,QAAQ,KACRqN,YAAY,KACZt6B,YAAY,KACZu6B,aAAa,KACb9P,aAAa,KACblE,aAAa,KACbxmB,cAAc,KACd2sB,gBAAe,EACfgB,mBAAmB,KACnBgB,yBAAwB,KAI1Bz2B,cAAgB,gFAGVtC,KAAKsC,cACPtC,KAAKsC,cAAcC,SAASvC,KAAKC,OAEjCD,KAAKsC,cAAgB,IAAIE,IAAcxC,KAAKC,4JAK9CD,KAAKyC,YACLzC,KAAK0C,gMAGkBzD,EAAUC,6EACjCc,KAAKyC,YAECk0B,EAAiBz3B,EAAUoK,SAAWtJ,KAAKoC,MAAMkH,QAAYtJ,KAAKC,MAAMqJ,SAAWrK,EAAUqK,OAC7Fu7B,EAAuBt5B,KAAKC,UAAUxL,KAAKC,MAAMg9B,iBAAmB1xB,KAAKC,UAAUvM,EAAUg+B,eAC7F6H,EAAsBv5B,KAAKC,UAAUxL,KAAKC,MAAMk9B,gBAAkB5xB,KAAKC,UAAUvM,EAAUk+B,eAC7FxG,GAAiBkO,GAAwBC,IAC3C9kC,KAAK0C,wQAKD4G,EAAStJ,KAAKC,MAAMqJ,QAAUtJ,KAAKoC,MAAMkH,QAAU,OACzDtJ,KAAKgD,SAAS,CACZsG,UACA,WACAlE,EAAK2/B,cACL3/B,EAAK4/B,uMAIapU,4EAEfA,4CACI,UAGLkE,EAAe,UACXlE,EAAa5qB,YACd,+CACkBhG,KAAKsC,cAAc2iC,cAAcjlC,KAAKC,MAAM2L,uBAAjEkpB,uDAIM90B,KAAKC,MAAM+wB,aAAaJ,EAAa5qB,KAAK4qB,EAAand,QAAQmd,EAAaK,8BAC7DjxB,KAAKsC,cAAc06B,gBAAgBpM,EAAa5qB,KAAKhG,KAAKC,MAAM2L,wBAArFkpB,6CAIJA,EAAeA,GAAgB90B,KAAKsC,cAAc+T,MAAM,qBAEjDye,sQAKF90B,KAAKC,MAAM6wB,UAAUmM,eAAkBj9B,KAAKC,MAAM6wB,UAAUqM,uDACxD,0BAOCve,QAAQkD,IAAI,CACpB9hB,KAAKg9B,gBAAgBh9B,KAAKC,MAAM6wB,UAAUqM,cAC1Cn9B,KAAKg9B,gBAAgBh9B,KAAKC,MAAM6wB,UAAUmM,oDAJ1C0H,OACAC,OAMI9P,EAAqC,SAAtB90B,KAAKoC,MAAMkH,OAAoBs7B,EAAeD,EAGnE3kC,KAAKgD,SAAS,CACZ2hC,cACAC,eACA9P,+JAIc,IAAAvoB,EAAAvM,KACZs3B,EAAU,KACVjtB,EAAc,KACdyqB,EAAe,KACf1qB,EAAgB,KAChB2sB,GAAiB,EACjBgB,EAAqB,KAEzB,OAAQ/3B,KAAKoC,MAAMkH,QACjB,IAAK,OACHytB,GAAiB,EACjBjC,EAAe90B,KAAKoC,MAAMwiC,aAC1Bv6B,EAAcrK,KAAKC,MAAM6wB,UAAUmM,cACnC7yB,EAAgBpK,KAAKC,MAAM6wB,UAAUmM,cAAcj3B,KACnD+xB,EAAkB,eAAA3xB,OAAkBpG,KAAKC,MAAM6wB,UAAUqM,aAAan3B,KAApD,iDAClBsxB,EAAU,CACRpjB,KAAK,eAIL7R,KAAI,aAAA+D,OAAcpG,KAAKC,MAAM6wB,UAAUmM,cAAcj3B,KAAjD,aAAAI,OAAiEpG,KAAKC,MAAM6wB,UAAUqM,aAAan3B,OAE3G,MACA,IAAK,SACHoE,EAAgBpK,KAAKC,MAAM6wB,UAAUqM,aAAan3B,KAClD+wB,GAAiB,EACjBjC,EAAe90B,KAAKoC,MAAMuiC,YAC1Bt6B,EAAcrK,KAAKC,MAAM6wB,UAAUqM,aACnCpF,EAAkB,oBAAA3xB,OAAuBpG,KAAKC,MAAM6wB,UAAUmM,cAAcj3B,KAA1D,iDAClBsxB,EAAU,CACRpjB,KAAK,aAIL7R,KAAI,eAAA+D,OAAgBpG,KAAKC,MAAM6wB,UAAUqM,aAAan3B,KAAlD,kBAAAI,OAAuEpG,KAAKC,MAAM6wB,UAAUmM,cAAcj3B,OAOpHhG,KAAKgD,SAAS,CACZs0B,UACAjtB,cACAyqB,eACA1qB,gBACA2sB,iBACAgB,sBACA,WACAxrB,EAAKw4B,kDAICz7B,GACRtJ,KAAKgD,SAAS,CACZsG,wDAIiBG,EAAGqB,EAAOirB,GAAO,IAAAvpB,EAAAxM,KAChCs3B,EAAU,KAEd,OAAQt3B,KAAKoC,MAAMkH,QACjB,IAAK,OACH,IAAM47B,EAAUz7B,EAAGwyB,WAAaxyB,EAAGwyB,UAAUC,KAAOzyB,EAAGwyB,UAAUC,KAAKhR,KAAM,SAAA6Q,GAAG,OAAIA,EAAItoB,QAAQlK,gBAAkBiD,EAAKvM,MAAM6wB,UAAUqM,aAAa1pB,QAAQlK,gBAAkB,KACzK47B,EAAeD,EAAU54B,SAAS44B,EAAQn1B,KAAK,IAAMjF,EACzDq6B,EAAenlC,KAAKsC,cAAc0W,iBAAiBmsB,EAAanlC,KAAKoC,MAAMiI,YAAYE,UACvF+sB,EAAU,CACRpjB,KAAK,UACL4a,UAAU,CACR5uB,MAAMF,KAAKC,MAAMoG,MAAMC,OAAOmF,aAAarH,OAAO0E,WAEpDzG,KAAI,6BAAA+D,OAA8B++B,EAAap6B,QAAQ,GAAnD,KAAA3E,OAAyDpG,KAAKC,MAAM6wB,UAAUqM,aAAan3B,KAA3F,cAER,MACA,IAAK,SACH,IAAMo/B,EAAc37B,EAAGwyB,WAAaxyB,EAAGwyB,UAAUC,KAAOzyB,EAAGwyB,UAAUC,KAAKhR,KAAM,SAAA6Q,GAAG,OAAIA,EAAItoB,QAAQlK,gBAAkBiD,EAAKvM,MAAM6wB,UAAUqM,aAAa1pB,QAAQlK,gBAAkB,KAC7K87B,EAAkBD,EAAc94B,SAAS84B,EAAYr1B,KAAK,IAAMjF,EACpEu6B,EAAkBrlC,KAAKsC,cAAc0W,iBAAiBqsB,EAAgBrlC,KAAKoC,MAAMiI,YAAYE,UAC7F+sB,EAAU,CACRpjB,KAAK,UACL4a,UAAU,CACR5uB,MAAMF,KAAKC,MAAMoG,MAAMC,OAAOmF,aAAarH,OAAO0E,WAEpDzG,KAAI,6BAAA+D,OAA8Bi/B,EAAgBt6B,QAAQ,GAAtD,KAAA3E,OAA4DpG,KAAKC,MAAM6wB,UAAUmM,cAAcj3B,KAA/F,cAQVhG,KAAK+kC,cAEL/kC,KAAKgD,SAAS,CACZs0B,yDAIiBxsB,GACnB,IAAMirB,EAAS,GACf,OAAQ/1B,KAAKoC,MAAMkH,QACjB,IAAK,OACHysB,EAAOh1B,MAAQ+J,EACfirB,EAAOI,aAAe,GACtBJ,EAAOG,WAAal2B,KAAKC,MAAM6wB,UAAUmM,cAAcC,WACzD,MACA,IAAK,SACHnH,EAAOh1B,MAAQ,KACfg1B,EAAOI,aAAe,CAACrrB,GACvBirB,EAAOG,WAAal2B,KAAKC,MAAM6wB,UAAUqM,aAAaC,aAK1D,OAAOrH,mCAGA,IAAAoG,EAAAn8B,KAEDslC,IAActlC,KAAKC,MAAMqlC,UAE/B,OACEjiC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPC,WAAY,SACZC,cAAe,SACfK,eAAgB,SAChBmG,GAAI,CAAC,EAAEo/B,EAAY,EAAI,IAEvBjiC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE7D,WAAY,UACZC,cAAe,SACfK,eAAgB,SAChBP,MAAO,CAAC,EAAE8lC,EAAY,EAAI,MAGvBtlC,KAAKC,MAAM2L,QAoCVvI,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,IAGJQ,KAAKC,MAAMqJ,QACVjG,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPE,cAAe,UAEf2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/D,GAAI,GADN,sBAKA8D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE7D,WAAY,SACZC,cAAe,MACfK,eAAgB,iBAEhBsD,EAAAjE,EAAAC,cAACmvB,EAAA,EAADrtB,OAAAC,OAAA,GACMpB,KAAKC,MADX,CAEEwF,UAAW,CACTE,GAAG,EACHD,GAAG,EACHlG,MAAM,KAER6C,KAAM,OACNwsB,UAAW,UACX3a,KAAM,gBACN6a,YAAa,UACbN,SAAiC,SAAtBzuB,KAAKoC,MAAMkH,OACtB5H,YAAc,SAAA8F,GAAC,OAAI20B,EAAKiC,UAAU,YAEpC/6B,EAAAjE,EAAAC,cAACmvB,EAAA,EAADrtB,OAAAC,OAAA,GACMpB,KAAKC,MADX,CAEEwF,UAAW,CACTE,GAAG,EACHD,GAAG,EACHlG,MAAM,KAER6C,KAAM,SACNwsB,UAAW,SACX3a,KAAM,cACN6a,YAAa,UACbN,SAAiC,WAAtBzuB,KAAKoC,MAAMkH,OACtB5H,YAAc,SAAA8F,GAAC,OAAI20B,EAAKiC,UAAU,gBAO5C/6B,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACP4H,GAAIk+B,EAAY,EAAI,GAGQ,OAA1BtlC,KAAKoC,MAAM0yB,aACTzxB,EAAAjE,EAAAC,cAACg/B,EAADl9B,OAAAC,OAAA,GACMpB,KAAKC,MADX,CAEE82B,gBAAgB,EAChBztB,OAAQtJ,KAAKoC,MAAMkH,OACnBguB,QAASt3B,KAAKoC,MAAMk1B,QACpBjtB,YAAarK,KAAKoC,MAAMiI,YACxByqB,aAAc90B,KAAKoC,MAAM0yB,aACzBlE,aAAc5wB,KAAKC,MAAM6wB,UAAUqM,aACnCvsB,SAAU5Q,KAAK84B,qBAAqB3rB,KAAKnN,MACzC+3B,mBAAoB/3B,KAAKoC,MAAM21B,mBAE/BvB,qBAAsBx2B,KAAKw2B,qBAAqBrpB,KAAKnN,QAErDqD,EAAAjE,EAAAC,cAACmG,EAAA,EAAD,CACEC,UAAW,CACT2J,EAAE,IAGJ/L,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE7D,WAAY,SACZC,cAAe,UAEf2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEJ,KAAM,QACN8C,KAAM,WACN9F,MAAO,aAETmD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ3F,SAAU,EACVL,MAAO,WACPO,UAAW,UAJb,sBAMsBT,KAAKoC,MAAMgI,cANjC,OAMoDpK,KAAKoC,MAAMkH,OAN/D,uBAYNjG,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,GAEP6D,EAAAjE,EAAAC,cAACsN,EAAA,EAAD,CACEC,UAAW,CACTlN,cAAc,OAEhBoN,YAAa,CACX5J,KAAK,QAEP6J,UAAW,CACTrF,GAAG,GAELrF,KAAM,0BAjJlBgB,EAAAjE,EAAAC,cAACmG,EAAA,EAAD,CACEC,UAAW,CACT2J,EAAE,EACFlJ,GAAG,IAGL7C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE7D,WAAY,SACZC,cAAe,UAEf2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEJ,KAAMlD,KAAKC,MAAM8F,SAAW,QAAU,QACtCC,KAAM,QACN9F,MAAO,aAETmD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,CAAC,EAAE,GACP3F,SAAU,EACVL,MAAO,WACPO,UAAW,UAJb,uDAQA4C,EAAAjE,EAAAC,cAAC4B,EAAA,EAAD,CACEC,YAAa,CACXgF,GAAG,EACH1G,MAAM,CAAC,EAAE,KAEXkC,YAAa1B,KAAKC,MAAMslC,2BAL1B,sBAtQSvkC,qFC8GZwkC,8MAhHbpjC,MAAQ,KAGRE,cAAgB,OAChBmO,oBAAqB,6EAGfzQ,KAAKsC,cACPtC,KAAKsC,cAAcC,SAASvC,KAAKC,OAEjCD,KAAKsC,cAAgB,IAAIE,IAAcxC,KAAKC,8JAK9CD,KAAKyQ,oBAAqB,yPAI1BzQ,KAAKyC,gbAOkBxD,EAAWC,mEAClCc,KAAKyC,kJAGC,IAAA2C,EAAApF,KACAorB,EAAYprB,KAAKC,MAAMmrB,UAEvB2C,EAAa,CACjBvtB,WAAW,EACXD,SAAS,CAAC,EAAE,GACZL,MAAM,WACN0M,UAAU,CACR7M,eAAe,eAKfqrB,EAAUnrB,OAASkB,OAAOqF,KAAK4kB,EAAUnrB,OAAO8E,QAClD5D,OAAOqF,KAAK4kB,EAAUnrB,OAAOiK,QAAQ,SAAAkF,GACnC2e,EAAW3e,GAAKgc,EAAUnrB,MAAMmP,KAKhCgc,EAAUqa,WAAatkC,OAAOqF,KAAK4kB,EAAUqa,WAAW1gC,QAC1D5D,OAAOqF,KAAK4kB,EAAUqa,WAAWv7B,QAAQ,SAAAkF,GACH,oBAAzBgc,EAAUqa,UAAUr2B,KAC7B2e,EAAW3e,GAAKgc,EAAUqa,UAAUr2B,GAAGhK,EAAKnF,UAKlD,IAAIylC,EAAkB,KAClBC,GAAuB,EACrBC,EAAYxa,EAAUtc,KACtB+2B,EAAYza,EAAU0a,KACxBC,EAAcF,EAAY7lC,KAAKsC,cAAc0jC,aAAaH,EAAU7lC,KAAKC,MAAMgmC,KAAO,KAE1F,OAAQL,GACN,IAAK,QACHF,EAAkBQ,IAClBnY,EAAW3Z,IAAM2xB,EACnB,MACA,IAAK,SACHA,EAAc/lC,KAAKsC,cAAc+T,MAAM0vB,GAAa9kB,WACpDykB,EAAkBh3B,KAClBqf,EAAWnf,OAASm3B,EACtB,MACA,IAAK,OACHL,EAAkBS,IAClBpY,EAAW/nB,KAAO+/B,EACpB,MACA,IAAK,SACHL,EAAkBlC,IAClBmC,GAAuB,EACvBI,EAAc3a,EAAUzqB,MACxBotB,EAAWtsB,QAAQ,kBAAMssB,EAAWrsB,YAAY0D,EAAKnF,QACvD,MACA,QACEylC,EAAkBj+B,IAClBk+B,GAAuB,EAI3B,IAAKI,EACH,OAAO,KAIT,GAAIF,EAAU,CACZ,IAAMO,EAAkBjlC,OAAOwG,OAAOk+B,GAAWz5B,MACjD,GAAIpM,KAAKC,MAAMgmC,IAAX,GAAA7/B,OAAkBggC,EAAlB,UAA0C,CAC5C,IAAMC,EAAmBrmC,KAAKC,MAAMgmC,IAAX,GAAA7/B,OAAkBggC,EAAlB,UAErBC,GAAoBllC,OAAOqF,KAAK6/B,GAAkBthC,QACpD5D,OAAOqF,KAAK6/B,GAAkBn8B,QAAQ,SAAAkF,GACpC2e,EAAW3e,GAAKi3B,EAAiBj3B,MAMzC,OAAOs2B,EAAmBC,EAAwBtiC,EAAAjE,EAAAC,cAACqmC,EAAoB3X,EAAagY,GAAmC1iC,EAAAjE,EAAAC,cAACqmC,EAAoB3X,GAAoB,YA9G1I/sB,uBCuDXslC,8MAnDblkC,MAAQ,KAGRE,cAAgB,gFAGVtC,KAAKsC,cACPtC,KAAKsC,cAAcC,SAASvC,KAAKC,OAEjCD,KAAKsC,cAAgB,IAAIE,IAAcxC,KAAKC,2JAK9CD,KAAKyC,iMAGkBxD,EAAWC,mEAClCc,KAAKyC,kJAGE,IAAA2C,EAAApF,KAEP,OACEqD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM0J,GAAG,wBAAwBxN,MAAO,EAAGE,cAAe,UACxD2D,EAAAjE,EAAAC,cAAC+N,GAAA,EAADjM,OAAAC,OAAA,GACMpB,KAAKC,MADX,CAEEoN,KAAMrN,KAAKC,MAAMoN,KACjBtH,SAAU/F,KAAKC,MAAM8F,YAEvB1C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM0J,GAAG,cAActN,cAAe,UAElCM,KAAKC,MAAMsmC,KAAK7/B,IAAK,SAACu/B,EAAIO,GACxB,OACEnjC,EAAAjE,EAAAC,cAACoO,GAAA,EAADtM,OAAAC,OAAA,CACE6kC,IAAKA,GACD7gC,EAAKnF,MAFX,CAGE4G,IAAG,SAAAT,OAAWogC,GACdv4B,eAAgBu3B,GAChBz3B,MAAK,aAAA3H,OAAeogC,GACpBx4B,OAAM,cAAA5H,OAAgBogC,iBA1CfxlC,2CC+RVylC,8MA5RbrkC,MAAQ,CACN+N,UAAU,KACVu2B,WAAW,KACXC,YAAY,KACZv8B,cAAc,KACdw8B,oBAAoB,QAItBtkC,cAAgB,gFAGVtC,KAAKsC,cACPtC,KAAKsC,cAAcC,SAASvC,KAAKC,OAEjCD,KAAKsC,cAAgB,IAAIE,IAAcxC,KAAKC,oDAK9CD,KAAKyC,gNAQLzC,KAAK6mC,qMAGkB5nC,EAAWC,mEAClCc,KAAKyC,6RAKCqkC,EAAY,GACdJ,EAAa1mC,KAAKsC,cAAc+T,MAAM,GACpCwB,EAAyC,SAAhC7X,KAAKC,MAAM6X,0BAEpB9X,KAAKsC,cAAcmT,aAAatU,OAAOqF,KAAKxG,KAAKC,MAAMqK,iBAAvD,eAAAoL,EAAAvU,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAAwE,SAAAC,EAAOnM,GAAP,IAAAU,EAAAgO,EAAA3B,EAAAoe,EAAA,OAAAjD,EAAAzyB,EAAA6W,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACtE/L,EAAcjF,EAAKnF,MAAMqK,gBAAgBX,GAD6BuM,EAAAE,KAAA,EAE7ChR,EAAK9C,cAAc06B,gBAAgB3yB,EAAY08B,KAAKp9B,MAAMvE,EAAKnF,MAAM2L,SAFxB,YAEtEyM,EAFsEnC,EAAAiC,MAAA,CAAAjC,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,EAKjDhR,EAAK9C,cAAc0kC,kBAAkB38B,GALY,cAKpEqM,EALoER,EAAAiC,KAAAjC,EAAAE,KAAA,GAM/ChR,EAAK9C,cAAc2kC,oBAAoB5uB,EAAiB1E,MAAM+C,GAAY/M,EAAMU,EAAYwN,GAN7C,SAMpEid,EANoE5e,EAAAiC,MAQzDgB,GAAG,KAClB2tB,EAAUn9B,GAASmrB,EAGnB4R,EAAaA,EAAWpwB,KAAKwe,IAZ2C,yBAAA5e,EAAAU,SAAAd,EAAA9V,SAAxE,gBAAA6W,GAAA,OAAAnB,EAAAoB,MAAA9W,KAAA8E,YAAA,2BAkB8B9E,KAAKsC,cAAc4kC,yBAAyBlnC,KAAKC,MAAM2L,QAAQ5L,KAAKC,MAAMqK,gBAAgB,MAAM,MAAK,WAAnI68B,WAEJhmC,OAAOqF,KAAK2gC,GAAuBj9B,QAAS,SAAAk9B,GAC1C,IAAMC,EAAkBjiC,EAAK9C,cAAc+T,MAAM8wB,EAAsBC,IACvEN,EAAUM,GAAYC,EACtBX,EAAaA,EAAWpwB,KAAK+wB,KAI3Bl3B,EAAY,GAElBhP,OAAOqF,KAAKsgC,GAAW58B,QAAQ,SAAAP,GAC7B,IAAMmrB,EAAegS,EAAUn9B,GAC/B,GAAImrB,EAAa3b,GAAG,GAAG,CACrB,IAAMmuB,EAAkBxS,EAAa9T,IAAI0lB,GAAY/yB,MAAM,KACvD4zB,EAAgBniC,EAAK9C,cAAcwJ,gBAAgB,CAAC,QAAQ,SAASnC,EAAM3C,cAAc,QAAQ,QACrGugC,EAAgBA,EAAgBA,EAAcxzB,KAAK,KAAO,UAC1D5D,EAAUjF,KAAK,CACb8B,GAAGrD,EACHhJ,MAAMgJ,EAAMkZ,OAAO,EAAE,GAAG7b,cAAc2C,EAAMkZ,OAAO,GACnD9hB,MAAMiJ,KAAKw9B,MAAMF,GACjBpnC,MAAM,OAAOqnC,EAAc,SAKjCvnC,KAAKgD,SAAS,CACZ8jC,YACA32B,YACAu2B,mJAIK,IAAAn6B,EAAAvM,KAEDoQ,EAAa,CACjBU,SAAS,EACTC,SAAQ,EACRC,YAAY,EACZC,aAAa,EACbE,YAAY,IACZD,cAAc,GACdE,gBAAgB,GAChB9K,OAAO,SAAA+K,GAAC,OAAIA,EAAEnR,OACdsR,cAAe,SAAA5J,GAAC,OAAIA,EAAE,KACtB6J,WAAY,SAAAJ,GACV,OAAI3H,WAAW2H,EAAEtQ,QAAQ,EAChBsQ,EAAEtQ,MAAM,IAER,MAGX2Q,YAAa,SAAAL,GACX,OAAO,MAEThL,MAAM,CACJsL,QAAS,CACPC,UAAW,CACTzO,QAAS,SAGb6O,OAAO,CACL3P,KAAK,CACH9B,SAAS,GACTC,WAAW,IACX8N,WAAYjI,KAAM4L,MAAMC,YAG5BC,QAAQ,CACN9P,KAAK,CACH9B,SAAS,GACTC,WAAW,IACX8N,WAAYjI,KAAM4L,MAAMC,aAI9BE,sBAAsB,EACtBI,sBAAsB,OACtBE,4BAA4B,EAC5BD,sBAAsB,OACtBJ,sBAAsB,GACtBE,wBAAwB,EACxBk1B,wBAAwBn7B,SAAgC,GAAvBtM,KAAKoC,MAAMukC,aAC5Ch0B,+BAA+B,EAC/BC,iCAAiC,EACjCE,sBAAsB,CAAEC,KAAM,SAC9BG,OAAQlT,KAAKC,MAAM8F,SAAW,CAAEV,IAAK,GAAI8N,MAAO,GAAIC,OAAQ,GAAItD,KAAM,IAAO,CAAEzK,IAAK,GAAI8N,MAAO,GAAIC,OAAQ,GAAItD,KAAM,IACrHwB,aAAa,SAACvB,EAAMvI,GAClB,IAAM4C,EAAgB2F,EAAK/C,GACrB45B,EAAsBx8B,EAAgBmC,EAAKtM,MAAMqK,gBAAgBF,IAAkBmC,EAAKjK,cAAcwJ,gBAAgB,CAAC,QAAQ,SAAS1B,IAAkB,KAChKmC,EAAKvJ,SAAS,CACZoH,gBACAw8B,yBAGJr1B,aAAa,SAACxB,EAAMvI,GAClB+E,EAAKvJ,SAAS,CACZoH,cAAc,KACdw8B,oBAAoB,QAGxBz0B,QAAQ,CACN,CACEu1B,UAAW,GACXC,WAAY,GACZC,WAAY5nC,KAAKC,MAAM8F,SAAW,GAAK,GACvC8hC,WAAY,GACZC,OAAQ,SACRC,UAAW,MACXC,cAAe3hC,KAAMC,OAAO2U,OAC5BgtB,YAAa,SACbC,QAAS,CACP,CACEC,GAAI,QACJvoC,MAAO,CACLooC,cAAe,aAQrB59B,IAA6C,OAA7BpK,KAAKoC,MAAMgI,gBAA0BpK,KAAKoC,MAAM0kC,UAAU9mC,KAAKoC,MAAMgI,iBAAiBpK,KAAKoC,MAAM0kC,UAAU9mC,KAAKoC,MAAMgI,eACtIg+B,EAAepoC,KAAKsC,cAAcwJ,gBAAgB,CAAC,aAAa9L,KAAKC,MAAM6X,iBAAiB,SAC5FuwB,IAAeroC,KAAKoC,MAAMgI,eAAgBpK,KAAKsC,cAAcwJ,gBAAgB,CAAC,QAAQ,SAAS9L,KAAKoC,MAAMgI,cAAc,wBAE9H,OACE/G,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,IAGJQ,KAAKoC,MAAMskC,YAAct8B,IACxB/G,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEgC,OAAQ,EACRD,IAAK,CAAC,MAAM,OACZyK,KAAM,CAAC,MAAM,OACbrP,UAAW,SACXhB,WAAY,SACZD,MAAO,CAAC,MAAM,OACd+F,SAAU,WACVnF,OAAQ,CAAC,MAAM,OACfV,cAAe,SACfK,eAAgB,UAGdqK,EACE/G,EAAAjE,EAAAC,cAAAgE,EAAAjE,EAAAkpC,SAAA,KACEjlC,EAAAjE,EAAAC,cAACgyB,EAAA,EAAD,CACEjG,UAAW,CACTplB,KAAK,OACL/F,MAAM,CACJV,GAAG,EACHa,OAAO,UAGXuJ,MAAO3J,KAAKoC,MAAMgI,cAClBC,YAAarK,KAAKoC,MAAMwkC,sBAE1BvjC,EAAAjE,EAAAC,cAACqP,GAAA,EAAD,CACEgB,UAAW,CACThI,GAAG,EACHnH,SAAS,EACTC,WAAW,GAEb+J,SAAU,EACVhK,SAAU,CAAC,EAAE,GACb2O,aAAc,EACd1O,WAAY,CAAC,EAAE,GACfiP,KAAO44B,EAAe,IAAM,KAC5Bz5B,OAAQ5O,KAAKoC,MAAM0kC,UAAU9mC,KAAKoC,MAAMgI,iBAE1C/G,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9C,WAAY,EACZD,SAAU,CAAC,EAAE,GACbL,MAAO,aAENF,KAAKoC,MAAMgI,gBAIhB/G,EAAAjE,EAAAC,cAAAgE,EAAAjE,EAAAkpC,SAAA,KACEjlC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/D,GAAI,EACJa,OAAQ,QACRgU,IAAKg0B,IAEP/kC,EAAAjE,EAAAC,cAACqP,GAAA,EAAD,CACEe,KAAM,IACNC,UAAW,CACThI,GAAG,EACHnH,SAAS,EACTC,WAAW,GAEb+J,SAAU,EACVhK,SAAU,CAAC,EAAE,GACb2O,aAAc,EACd1O,WAAY,CAAC,EAAE,GACfoO,OAAQ5O,KAAKoC,MAAMskC,aAErBrjC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9C,WAAY,EACZD,SAAU,CAAC,EAAE,GACbL,MAAO,aAHT,iBAYZmD,EAAAjE,EAAAC,cAACiwB,GAAA,EAADnuB,OAAAC,OAAA,CACE0N,KAAMyF,MACFnE,EAFN,CAGEoE,YAAY,EACZzE,KAAM/P,KAAKoC,MAAM+N,UACjBuN,SAAU1d,KAAKC,MAAMyd,SACrBC,eAAgB3d,KAAKC,MAAMyd,oBAtRR1c,wDC2GdunC,8MA7GbnmC,MAAQ,CACNomC,YAAY,KACZC,cAAc,QAIhBnmC,cAAgB,gFAGVtC,KAAKsC,cACPtC,KAAKsC,cAAcC,SAASvC,KAAKC,OAEjCD,KAAKsC,cAAgB,IAAIE,IAAcxC,KAAKC,4JAK9CD,KAAKyC,YACLzC,KAAK0oC,yMAGkBzpC,EAAUC,sFACjCc,KAAKyC,YACCkmC,EAAuB1pC,EAAU0pC,uBAAyB3oC,KAAKC,MAAM0oC,uBACvC1pC,EAAU2pC,qBAAuBr9B,KAAKC,UAAUvM,EAAU2pC,uBAAyBr9B,KAAKC,UAAUxL,KAAKC,MAAM2oC,sBAC/GD,IAChC3oC,KAAK0oC,oBAGDtzB,EAAgBnW,EAAU8G,WAAa/F,KAAKC,MAAM8F,SAClDsP,EAAmBpW,EAAUqW,YAActV,KAAKC,MAAMqV,WACvC/J,KAAKC,UAAUvM,EAAU4pC,gBAAkBt9B,KAAKC,UAAUxL,KAAKC,MAAM4oC,eACtExzB,GAAoBD,KAChC0zB,EAAW3nC,OAAOC,OAAO,GAAGpB,KAAKoC,OACvCpC,KAAKgD,SAAS,CACZwlC,YAAY,KACZC,cAAc,MACd,WACArjC,EAAKpC,SAAS8lC,8QAOb9oC,KAAKC,MAAM2oC,qBAAwB5oC,KAAKC,MAAM0oC,+DAC1C,aAGHr+B,EAAkBtK,KAAKC,MAAMqK,iBAAmB,QACpCtK,KAAKC,MAAM6mC,+CAAmB9mC,KAAKsC,cAAcymC,oBAAoBz+B,EAAgBtK,KAAKC,MAAM2L,mCAA5Gk7B,OAEA2B,EAAgB3B,EAAUkC,cAC1BR,EAAc1B,EAAUmC,gBAAgBt1B,MAAMmzB,EAAUoC,OAAOloB,IAAI,MAEzEhhB,KAAKgD,SAAS,CACZwlC,cACAC,sJAIK,IAAAl8B,EAAAvM,KAED6oC,EAAe,CACnB5Z,WAAW,EACX/uB,MAAMF,KAAKC,MAAMoG,MAAMC,OAAO6f,UAC9B7X,WAAWtO,KAAKC,MAAMoG,MAAM4L,MAAMyS,QAClClkB,WAAYR,KAAKC,MAAM8F,SAAW,IAAM,IACxCxF,SAASP,KAAKC,MAAM8F,SAAW,OAAS,SAItC/F,KAAKC,MAAM4oC,cAAgB1nC,OAAOqF,KAAKxG,KAAKC,MAAM4oC,cAAc9jC,QAClE5D,OAAOqF,KAAKxG,KAAKC,MAAM4oC,cAAc3+B,QAAQ,SAAAkF,GAC3Cy5B,EAAaz5B,GAAK7C,EAAKtM,MAAM4oC,aAAaz5B,KAI9C,IAAMK,EAAOzP,KAAKC,MAAMwP,MAAQ,KAC1BlF,EAAWvK,KAAKC,MAAMsK,UAAY,EAExC,OAAOvK,KAAKoC,MAAMqmC,eAAiBzoC,KAAKoC,MAAMomC,YAC5CnlC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,KAEED,EAAAjE,EAAAC,cAAC8pC,GAAA/pC,EAAD,CACEgqC,MAAO,EACPC,QAAS,IACTC,UAAW,GACXC,WAAW,EACXh/B,SAAUA,EACVi/B,SAAU,QACVC,IAAK//B,WAAW1J,KAAKoC,MAAMomC,aAC3BkB,MAAOhgC,WAAW1J,KAAKoC,MAAMqmC,eAC7BkB,aAAe,SAAAC,GAAC,OAAIn6B,EAAKlD,EAAKjK,cAAcyM,YAAY66B,EAAEr/B,KAEzD,SAAAmL,GAAA,IAAGm0B,EAAHn0B,EAAGm0B,WAAHn0B,EAAeg0B,MAAf,OACCrmC,EAAAjE,EAAAC,cAAA,QACEyqC,IAAKD,EACLjqC,MAAOipC,OAMfxlC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAQJ,KAAM,gBA1GelC,aCiepB+oC,8MA7db3nC,MAAQ,CACN4nC,eAAe,KACfC,oBAAoB,KACpBC,uBAAuB,KACvBC,6BAA6B,KAC7BC,gBAAgB,CACdC,EAAE,CACAC,MAAQ,CACNC,KAAK,EAAE,GACP/qC,MAAM,EAAE,GAEVgrC,WAAW,CACTD,KAAK,EAAE,EACP/qC,MAAM,EAAE,GAEVirC,WAAW,CACTF,KAAK,IACL/qC,MAAM,EAAE,EACRkrC,WAAW,OAGfC,GAAG,CACDF,WAAW,CACTF,KAAK,IACL/qC,MAAM,KAERorC,WAAW,CACTL,KAAK,EAAE,GACP/qC,MAAM,EAAE,IAEVqrC,KAAO,CACLN,KAAK,EACL/qC,MAAM,EAAE,GACRkrC,WAAW,OAGfI,GAAG,CACDD,KAAO,CACLN,KAAK,EACL/qC,MAAM,EAAE,GAEVurC,UAAU,CACRR,KAAK,EACL/qC,MAAM,EAAE,GAEVwrC,UAAU,CACRT,KAAK,EACL/qC,MAAM,GACNkrC,WAAW,WAOnBpoC,cAAgB,gFAGVtC,KAAKsC,cACPtC,KAAKsC,cAAcC,SAASvC,KAAKC,OAEjCD,KAAKsC,cAAgB,IAAIE,IAAcxC,KAAKC,4JAK9CD,KAAKyC,YACLzC,KAAKirC,oMAGkBhsC,EAAUC,mEACjCc,KAAKyC,gKAGgBwnC,GACrBjqC,KAAKgD,SAAS,CACZinC,2MAKEiB,EAAa,GACblB,EAAiB,GAGfnyB,EAAyC,SAAhC7X,KAAKC,MAAM6X,iBAEpBqzB,EAAqB,CACzBC,SAASprC,KAAKsC,cAAc+T,MAAM,GAClCL,WAAWhW,KAAKsC,cAAc+T,MAAM,GACpCg1B,aAAarrC,KAAKsC,cAAc+T,MAAM,aAGlCrW,KAAKsC,cAAcmT,aAAazV,KAAKC,MAAMyL,cAA3C,eAAAgK,EAAAvU,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAAyD,SAAAC,EAAOnM,GAAP,IAAAU,EAAAihC,EAAAvzB,EAAA8G,EAAA7I,EAAAu1B,EAAAC,EAAAC,EAAAL,EAAAC,EAAAK,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAja,EAAAzyB,EAAA6W,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACvD/L,EAAcjF,EAAKnF,MAAMqK,gBAAgBX,GADcuM,EAAAE,KAAA,EAE/BhR,EAAK9C,cAAcypC,mBAAmB1hC,EAAYjF,EAAKnF,MAAM2L,SAF9B,cAEvD0/B,EAFuDp1B,EAAAiC,KAAAjC,EAAAE,KAAA,EAIPwI,QAAQkD,IAAI,CAChE1c,EAAK9C,cAAc2kC,oBAAoBqE,EAAgB3hC,EAAMU,EAAYwN,GACzEzS,EAAK9C,cAAc0pC,eAAe,CAACriC,GAAOvE,EAAKnF,MAAM2L,SACrDxG,EAAK9C,cAAc0kC,kBAAkB38B,KAPsB,cAAA0N,EAAA7B,EAAAiC,KAAA0G,EAAA1d,OAAA8qC,EAAA,EAAA9qC,CAAA4W,EAAA,GAItD/B,EAJsD6I,EAAA,GAI3C0sB,EAJ2C1sB,EAAA,GAI/B2sB,EAJ+B3sB,EAAA,GAUvD4sB,EAAeD,EAAexqB,IAAIuqB,EAAY5hC,IAAQ4M,MAAM,GAC5D60B,EAAWp1B,EAAWrC,MAAM83B,GAE9BJ,EAAe,EACfK,EAAW,EAd8Cx1B,EAAAE,KAAA,GAerChR,EAAK9C,cAAc4pC,aAAa7hC,GAfK,SAevDshC,EAfuDz1B,EAAAiC,OAgBvB,OAArBwzB,EAAUQ,SACzBT,EAAWC,EAAUS,OACrBf,EAAer1B,EAAWrC,MAAM+3B,EAAS1qB,IAAI,OAGzC4qB,EAAmB5hC,KAAKoQ,MAAMgxB,EAASpqB,IAAIqqB,GAAc13B,MAAM,MAE/Dk4B,EAAgB1qC,OAAOqF,KAAKpB,EAAKhD,MAAMgoC,iBAAiB5lC,OAAO,SAAA+lC,GAAI,OAAIA,GAAMqB,IAC7EE,EAAkBx/B,SAASu/B,EAAcz/B,OAE/C8+B,EAAWY,GAAmBZ,EAAWY,GAAmBZ,EAAWY,GAAiB,EAAI,EAEvF1mC,EAAK9C,cAAc+T,MAAML,GAAYnH,SAAYzJ,EAAK9C,cAAc+T,MAAMm1B,GAAgB38B,SAAYzJ,EAAK9C,cAAc+T,MAAM+0B,GAAUv8B,SAAYzJ,EAAK9C,cAAc+T,MAAMg1B,GAAcx8B,UAC/Lm7B,EAAergC,GAAS,CACtByhC,WACAp1B,aACAq1B,eACAG,kBAOFL,EAAmBC,SAAWD,EAAmBC,SAAS90B,KAAK80B,GAC/DD,EAAmBn1B,WAAam1B,EAAmBn1B,WAAWM,KAAKN,GACnEm1B,EAAmBE,aAAeF,EAAmBE,aAAa/0B,KAAK+0B,IA1CZ,yBAAAn1B,EAAAU,SAAAd,EAAA9V,SAAzD,gBAAA6W,GAAA,OAAAnB,EAAAoB,MAAA9W,KAAA8E,YAAA,WA8CAunC,EAAelrC,OAAOqF,KAAK0kC,GAAYha,OAAQ,SAACmb,EAAa7U,GACjE,IAAM7rB,EAAQu/B,EAAW1T,GAKzB,OAJI7rB,EAAM0gC,EAAa1gC,QACrB0gC,EAAa7U,KAAOlrB,SAASkrB,GAC7B6U,EAAa1gC,MAAQW,SAASX,IAEzB0gC,GACP,CACA7U,KAAK,EACL7rB,MAAM,IAGFs+B,EAAsBoC,EAAa7U,MAAQlrB,SAASnL,OAAOqF,KAAKxG,KAAKoC,MAAMgoC,iBAAiB,IAE5FkC,EAAwB,GAC9BtsC,KAAKC,MAAMyL,cAAcxB,QAAS,SAAAP,GAC5BqgC,EAAergC,KACjB2iC,EAAsB3iC,GAASqgC,EAAergC,MAIlDqgC,EAAiBsC,EAGbnrC,OAAOqF,KAAKwjC,GAAgBjlC,OAAO,IACrCilC,EAAc,IAAUmB,GAGtBhB,EAA+B,KAC7BD,EAAyB/oC,OAAOqF,KAAKxG,KAAKoC,MAAMgoC,iBAAiB1jC,IAAK,SAAA8wB,GAC1E,IAAM+U,EAAiBprC,OAAOwG,OAAOvC,EAAKhD,MAAMgoC,gBAAgB5S,IAAOprB,MACjEzL,EAAQ4rC,EAAe7B,WAAa6B,EAAe7B,WAAavpC,OAAOqF,KAAKpB,EAAKhD,MAAMgoC,gBAAgB5S,IAAOprB,MAC9GrL,EAAQuL,SAASkrB,GACjBgV,EAAS,CAAEzrC,QAAOJ,SAKxB,OAHII,IAAUkpC,IACZE,EAA+BqC,GAE1BA,IAGTxsC,KAAKgD,SAAS,CACZgnC,iBACAC,sBACAC,yBACAC,qKAIK,IAAA59B,EAAAvM,KAEP,IAAKA,KAAKoC,MAAM4nC,eACd,OACE3mC,EAAAjE,EAAAC,cAACsN,EAAA,EAAD,CACEC,UAAW,CACTlN,cAAc,MACdmN,UAAU7M,KAAKC,MAAMG,QAEvB0M,YAAa,CACX5J,KAAK,QAEP6J,UAAW,CACTrF,GAAG,GAELrF,KAAM,2BAKZ,IAAM+nC,EAAkBpqC,KAAKoC,MAAMgoC,gBAAgBpqC,KAAKoC,MAAM6nC,qBAAuBjqC,KAAKoC,MAAMgoC,gBAAgBpqC,KAAKoC,MAAM6nC,qBAAuBjqC,KAAKoC,MAAMgoC,gBAAgB,GAE7K,OACE/mC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE3D,GAAI,EACJyH,GAAI,EACJ5H,MAAO,EACPmG,GAAI,CAAC,EAAE,GACPD,GAAI,CAAC,EAAE,GACPrE,UAAW,EACXhB,aAAc,EACd2S,YAAa,aACb1S,gBAAiB,UAEjB+C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ3G,GAAI,EACJ+F,OAAQ,KACRvF,eAAgB,YAEhBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEgC,OAAQ,KACR9F,MAAO,CAAC,EAAE,IACVE,cAAe,UAEf2D,EAAAjE,EAAAC,cAAC4sB,EAAA,EAAD,CACEN,WAAY,CACVvc,EAAE,EACFzJ,GAAG,GAELK,KAAM,kBACN8kB,QAAS9qB,KAAKoC,MAAM8nC,uBACpB3iC,SAAW,SAAAK,GAAC,OAAI2E,EAAKkgC,uBAAuB7kC,IAC5CmjB,aAAc/qB,KAAKoC,MAAM+nC,iCAK7BhpC,OAAOqF,KAAKxG,KAAKoC,MAAM4nC,gBAAgBtjC,IAAI,SAACiD,EAAM+iC,GAChD,IAAMriC,EAAckC,EAAKtM,MAAMqK,gBAAgBX,GACzCgjC,EAAgBpgC,EAAKnK,MAAM4nC,eAAergC,GAC1CijC,EAAqBrgC,EAAKjK,cAAc+T,MAAMlV,OAAOwG,OAAOyiC,GAAiBh+B,MAAMm+B,MACnFsC,EAAgBF,EAActB,aAAa13B,MAAMi5B,GACjDE,EAAa9iC,KAAKQ,IAAI,EAAEd,WAAWijC,EAAcvB,SAASpqB,IAAI6rB,KAC9DE,EAAY1iC,GAAeA,EAAY6J,KAAO7J,EAAY6J,KAA9C,iBAAA9N,OAAqEuD,EAArE,QACZqjC,EAAgBzgC,EAAKjK,cAAcwJ,gBAAgB,CAAC,QAAQ,SAASnC,EAAM,QAAQ,QAAQoK,KAAK,KAEtG,OACE1Q,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE0J,GAAE,SAAA5G,OAAWuD,GACbjK,cAAe,MACfmH,IAAG,SAAAT,OAAWuD,GACdxD,UAAsB,QAAVwD,EAAA,aAAAvD,OAA+BmG,EAAKtM,MAAMoG,MAAMC,OAAOC,SAAY,MAE/ElD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,CAAC,EAAE,KACV+F,SAAU,YAEVlC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPY,OAAQ,OACRmF,SAAU,WACV9F,WAAY,SACZC,cAAe,MACfK,eAAgB,UAEhBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,CAAC,IAAK,MAGf6D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,CAAC,IAAK,IACbY,OAAQ,OACRV,cAAe,OAGbyB,OAAOqF,KAAK4jC,GAAiB1jC,IAAI,SAAC/F,EAAMssC,GACtC,IAAMV,EAAiBnC,EAAgBzpC,GACjCusC,EAAyBP,EAActB,aAAa13B,MAAMpH,EAAKjK,cAAc+T,MAAMk2B,EAAehC,OACpG4C,EAAkC5gC,EAAKjK,cAAcyM,YAAYm+B,EAAuB3gC,EAAKtM,MAAM8F,SAAW,EAAImnC,EAAuB12B,GAAG,GAAK,EAAI,GAKzJ,OAJ4BjK,EAAKjK,cAAcwJ,gBAAgB,CAAC,QAAQ,SAASnC,EAAM,0BAErFwjC,EAAkC,KAAKA,GAGvC9pC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE3D,GAAI,EACJI,eAAgB,WAChBP,MAAO+sC,EAAe/sC,MACtByN,GAAe,QAAVtD,EAAkB,EAAI,KAC3B9C,IAAG,kBAAAT,OAAoBuD,EAApB,KAAAvD,OAA6B6mC,GAChCG,YAAW,aAAAhnC,OAAemG,EAAKtM,MAAMoG,MAAMC,OAAOC,WAGrC,QAAVoD,GAAoBsjC,IAAkB9rC,OAAOqF,KAAK4jC,GAAiBrlC,OAAO,IACzE1B,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9C,WAAY,EACZD,SAAU,CAAC,EAAE,OACbX,MAAO,CACLytC,UAAU,aAEZntC,MAAOysC,EAAcvB,SAASkC,IAAIJ,GAA0B,YAAc,UAEzEC,QASnB9pC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACP8F,OAAQ,EACR7F,WAAY,SACZC,cAAe,MACfK,eAAgB,SAChBkN,GAAe,QAAVtD,EAAkB,CAAC,MAAM,SAAW,QACzC5C,GAAK2lC,EAAWvrC,OAAOqF,KAAK+F,EAAKnK,MAAM4nC,gBAAgBjlC,OAAO,EAAI,MAAQ,GAE1E1B,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,CAAC,IAAK,IACbO,eAAgB,CAAC,aAAa,aAE9BsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE3D,GAAI,CAAC,EAAE,GACPY,SAAU,CAAC,EAAE,GACbC,WAAY,CAAC,EAAE,IAEdmJ,IAGLtG,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,CAAC,IAAK,IACbC,WAAY,SACZC,cAAe,MACfU,OAAQ,CAAC,OAAO,QAChBL,eAAgB,cAEhBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACElD,OAAQ,OACRZ,MAAOstC,EACPxsC,gBAAiB,UAEjB+C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACElD,OAAQ,OACRZ,MAAO,OACPa,aAAc,CAAC,gBAAgB,iBAC/BT,MAAO,CAACkS,WAAU,+BAAA1L,OAAgC4mC,EAAhC,iBAAA5mC,OAA6D4mC,EAA7D,oBAAA5mC,OAA6F4mC,EAA7F,iBAGtB3pC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEiqC,GAAI,EACJ/tC,MAAO,OACPY,OAAQ,OACRX,WAAY,SACZM,eAAgB,cAEhBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAO8Q,IAAK24B,EAAW3sC,OAAQ,CAAC,QAAQ,YAGxCiD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEiqC,GAAI,EACJ9tC,WAAY,UAGA,QAAVkK,EACEtG,EAAAjE,EAAAC,cAACgyB,EAAA,EAADlwB,OAAAC,OAAA,GACMmL,EAAKtM,MADX,CAEE0J,MAAOA,EACPU,YAAaA,EACb+gB,UAAW,CACTplB,KAAK,kBACL/F,MAAM,CACJsK,SAASgC,EAAKtM,MAAM8F,SAAW,EAAI,EACnCmJ,aAAa3C,EAAKtM,MAAM8F,SAAW,EAAI,GACvCnG,MAAM,CACJM,MAAMqM,EAAKtM,MAAMoG,MAAMC,OAAO6f,UAC9B3lB,WAAW+L,EAAKtM,MAAM8F,SAAW,IAAM,IACvCxF,SAASgM,EAAKtM,MAAM8F,SAAW,OAAS,aAMhD1C,EAAAjE,EAAAC,cAACmuC,GAADrsC,OAAAC,OAAA,GACMmL,EAAKtM,MADX,CAEEsK,SAAUgC,EAAKtM,MAAM8F,SAAW,EAAI,EACpCmJ,aAAc3C,EAAKtM,MAAM8F,SAAW,EAAI,GACxC8iC,aAAc,CACZ3oC,MAAMqM,EAAKtM,MAAMoG,MAAMC,OAAO6f,UAC9B3lB,WAAW+L,EAAKtM,MAAM8F,SAAW,IAAM,IACvCuI,WAAW/B,EAAKtM,MAAMoG,MAAM4L,MAAMC,UAClC3R,SAASgM,EAAKtM,MAAM8F,SAAW,OAAS,gBAWvDwG,EAAKtM,MAAM8F,UACV1C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM9D,MAAO,IAAMC,WAAY,aAAcM,eAAgB,gBAOzEsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE5D,cAAe,OAEf2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,CAAC,EAAE,KACV+F,SAAU,YAEVlC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPC,WAAY,SACZC,cAAe,MACfK,eAAgB,UAEhBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM9D,MAAO,CAAC,IAAK,MACnB6D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,CAAC,IAAK,IACbE,cAAe,OAGbyB,OAAOqF,KAAK4jC,GAAiB1jC,IAAI,SAAC+mC,EAAgBR,GAChD,IAAMV,EAAiBnC,EAAgBqD,GACvC,OACEpqC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE2J,GAAI,EACJtN,GAAI,CAAC,EAAE,GACPI,eAAgB,WAChBP,MAAO+sC,EAAe/sC,MACtBqH,IAAG,kBAAAT,OAAoB6mC,GACvBG,YAAW,aAAAhnC,OAAemG,EAAKtM,MAAMoG,MAAMC,OAAOC,UAElDlD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9C,WAAY,EACZD,SAAU,CAAC,EAAE,GACbL,MAAO,UAENutC,UAUdztC,KAAKC,MAAM8F,UACV1C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM9D,MAAO,IAAMC,WAAY,aAAcM,eAAgB,UAC3DsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM9C,WAAY,EAAGD,SAAU,cArddS,aCuFlB0sC,8MAvFbprC,cAAgB,gFAGVtC,KAAKsC,cACPtC,KAAKsC,cAAcC,SAASvC,KAAKC,OAEjCD,KAAKsC,cAAgB,IAAIE,IAAcxC,KAAKC,4JAK9CD,KAAKyC,iMAGkBxD,EAAUC,mEACjCc,KAAKyC,kJAIL,OACEY,EAAAjE,EAAAC,cAACmG,EAAA,EAAD,CACEC,UAAW,CACT9F,GAAG,EACH+F,GAAG,CAAC,EAAE,GACN6nC,GAAG,CAAC,EAAE,IAER9e,UAAU,EACV5oB,eAAe,EACfnE,YAAa1B,KAAKC,MAAMyB,aAExB2B,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACElD,OAAQ,OACRX,WAAY,SACZC,cAAe,MACfK,eAAgB,UAEhBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEqC,GAAI,CAAC,EAAE,IAGL3F,KAAKC,MAAMiU,KACT7Q,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE0C,KAAMhG,KAAKC,MAAMiU,KACjBhR,KAAMlD,KAAKC,MAAM8F,SAAW,QAAU,MACtC7F,MAAOF,KAAKC,MAAM4uB,UAAY7uB,KAAKC,MAAM4uB,UAAY,WAErD7uB,KAAKC,MAAMyuB,OACbrrB,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE8Q,IAAKpU,KAAKC,MAAMyuB,MAChBlvB,MAAOQ,KAAKC,MAAM8F,SAAW,QAAU,QACvC3F,OAAQJ,KAAKC,MAAM8F,SAAW,QAAU,WAKhD1C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEoE,GAAI,CAAC,EAAE,GACPhI,cAAe,SACfD,WAAY,aACZM,eAAgB,UAEhBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9C,WAAY,EACZD,SAAU,CAAC,EAAE,IAEZP,KAAKC,MAAMskB,OAEdlhB,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9C,WAAY,EACZD,SAAU,CAAC,EAAE,GACbL,MAAO,YAENF,KAAKC,MAAMoC,OAGhBgB,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4qB,MAAO,SACPhuB,MAAO,WACP8F,KAAM,qBACN9C,KAAMlD,KAAKC,MAAM8F,SAAW,QAAU,mBAlFhB/E,aC+GnB2sC,8MA7GbvrC,MAAQ,CACNwrC,WAAW,KACXC,aAAa,QAIfvrC,cAAgB,gFAGVtC,KAAKsC,cACPtC,KAAKsC,cAAcC,SAASvC,KAAKC,OAEjCD,KAAKsC,cAAgB,IAAIE,IAAcxC,KAAKC,4JAK9CD,KAAKyC,YACLzC,KAAK0oC,yMAGkBzpC,EAAUC,sFACjCc,KAAKyC,YACCkmC,EAAuB1pC,EAAU0pC,uBAAyB3oC,KAAKC,MAAM0oC,uBACvC1pC,EAAU2pC,qBAAuBr9B,KAAKC,UAAUvM,EAAU2pC,uBAAyBr9B,KAAKC,UAAUxL,KAAKC,MAAM2oC,sBAC/GD,IAChC3oC,KAAK0oC,oBAGDtzB,EAAgBnW,EAAU8G,WAAa/F,KAAKC,MAAM8F,SAClDsP,EAAmBpW,EAAUqW,YAActV,KAAKC,MAAMqV,WACvC/J,KAAKC,UAAUvM,EAAU4pC,gBAAkBt9B,KAAKC,UAAUxL,KAAKC,MAAM4oC,eACtExzB,GAAoBD,KAChC0zB,EAAW3nC,OAAOC,OAAO,GAAGpB,KAAKoC,OACvCpC,KAAKgD,SAAS,CACZ4qC,WAAW,KACXC,aAAa,MACb,WACAzoC,EAAKpC,SAAS8lC,8QAOb9oC,KAAKC,MAAM2oC,qBAAwB5oC,KAAKC,MAAM0oC,+DAC1C,aAGHr+B,EAAkBtK,KAAKC,MAAMqK,iBAAmB,QACpCtK,KAAKC,MAAM6mC,+CAAmB9mC,KAAKsC,cAAcymC,oBAAoBz+B,EAAgBtK,KAAKC,MAAM2L,mCAA5Gk7B,OAEA+G,EAAe/G,EAAUmC,gBAAgB3yB,KAAKwwB,EAAUkC,eACxD4E,EAAaC,EAAav3B,KAAKu3B,EAAal6B,MAAMmzB,EAAUoC,OAAOloB,IAAI,OAE7EhhB,KAAKgD,SAAS,CACZ4qC,aACAC,qJAIK,IAAAthC,EAAAvM,KAED6oC,EAAe,CACnB5Z,WAAW,EACX/uB,MAAMF,KAAKC,MAAMoG,MAAMC,OAAO6f,UAC9B7X,WAAWtO,KAAKC,MAAMoG,MAAM4L,MAAMyS,QAClClkB,WAAYR,KAAKC,MAAM8F,SAAW,IAAM,IACxCxF,SAASP,KAAKC,MAAM8F,SAAW,OAAS,SAItC/F,KAAKC,MAAM4oC,cAAgB1nC,OAAOqF,KAAKxG,KAAKC,MAAM4oC,cAAc9jC,QAClE5D,OAAOqF,KAAKxG,KAAKC,MAAM4oC,cAAc3+B,QAAQ,SAAAkF,GAC3Cy5B,EAAaz5B,GAAK7C,EAAKtM,MAAM4oC,aAAaz5B,KAI9C,IAAM7E,EAAWvK,KAAKC,MAAMsK,UAAY,EAExC,OAAOvK,KAAKoC,MAAMyrC,cAAgB7tC,KAAKoC,MAAMwrC,WAC3CvqC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,GAEP6D,EAAAjE,EAAAC,cAAC8pC,GAAA/pC,EAAD,CACEgqC,MAAO,EACPC,QAAS,IACTC,UAAW,GACXC,WAAW,EACXh/B,SAAUA,EACVi/B,SAAU,QACVC,IAAK//B,WAAW1J,KAAKoC,MAAMwrC,YAC3BlE,MAAOhgC,WAAW1J,KAAKoC,MAAMyrC,cAC7BlE,aAAe,SAAAC,GAAC,MAAI,KAAKr9B,EAAKjK,cAAcyM,YAAY66B,EAAEr/B,KAEzD,SAAAmL,GAAA,IAAGm0B,EAAHn0B,EAAGm0B,WAAHn0B,EAAeg0B,MAAf,OACCrmC,EAAAjE,EAAAC,cAAA,QACEyqC,IAAKD,EACLjqC,MAAOipC,OAMfxlC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAQJ,KAAM,gBA1GclC,aCg3DnB8sC,8MA/1Db1rC,MAAQ,CACN0kC,UAAU,KACViH,gBAAgB,GAChBC,iBAAiB,GACjBC,gBAAgB,KAChBC,gBAAgB,KAChBC,gBAAgB,KAChBC,gBAAgB,KAChBC,iBAAgB,EAChBC,mBAAmB,KACnBC,yBAAyB,KACzBC,+BAA+B,KAC/BC,8BAA8B,UAIhCnsC,cAAgB,OAChBmO,oBAAqB,6EAGfzQ,KAAKsC,cACPtC,KAAKsC,cAAcC,SAASvC,KAAKC,OAEjCD,KAAKsC,cAAgB,IAAIE,IAAcxC,KAAKC,oDAK9CD,KAAKyC,2DAILzC,KAAKyQ,oBAAqB,sKAIpBzQ,KAAK6mC,qMAGY5nC,EAAWC,kFAClCc,KAAKyC,YAECmrB,EAAiB3uB,EAAU2M,UAAY5L,KAAKC,MAAM2L,QAClD8iC,EAAyBnjC,KAAKC,UAAUvM,EAAUqL,mBAAqBiB,KAAKC,UAAUxL,KAAKC,MAAMqK,kBACnGsjB,GAAkB8gB,IAEpB1uC,KAAKgD,SAAS,CACZqrC,iBAAgB,GAChB,WACAjpC,EAAKyhC,oMAKQl2B,wFAASC,iCAAS,KAC9B5Q,KAAKyQ,4DACDzQ,KAAKgD,SAAS2N,EAASC,oCAEzB,kKAGwB69B,GAC/BzuC,KAAK0Q,aAAa,CAChB+9B,sOAKInkC,EAAkBtK,KAAKC,MAAMqK,iBAAmB,IAElDtK,KAAKoC,MAAMisC,0DACN,cAILruC,KAAKC,MAAM2L,gCACP+E,EAAW,GACX9E,EAAmB7L,KAAKsC,cAAcwJ,gBAAgB,CAAC,UAAU,8BAQ7D8S,QAAQkD,IAAI,CAEpB9hB,KAAKsC,cAAcqsC,mBAAmB3uC,KAAKC,MAAM2L,SAEjD5L,KAAKsC,cAAcssC,mBAAmB5uC,KAAKC,MAAM2L,SAEjD5L,KAAKsC,cAAcusC,mBAAmB7uC,KAAKC,MAAM6X,kBAEjD9X,KAAKsC,cAAcymC,oBAAoBz+B,EAAgBtK,KAAKC,MAAM2L,SAElE5L,KAAKsC,cAAc0J,gBAAgBhM,KAAKC,MAAM2L,QAAQC,EAAiB,SAAS1K,OAAOqF,KAAK8D,4CAd5F2jC,OACAG,OACAL,OACAjH,OAcFn2B,EAASm2B,UAAYA,EAErBn2B,EAASs9B,gBAAkBA,GAAmBA,EAAgBlpC,OAAO,EAAIkpC,EAAgBvnC,IAAK,SAAAooC,GAC5F,IAAMC,EAAexiC,EAAKtM,MAAMoG,MAAMC,OAAOmF,aAAarH,OACpD4qC,EAA0B,YAAbF,EAAE1qC,OAAuB,QAAU,eAChD6qC,EAA2B,YAAbH,EAAE1qC,OAAuB2qC,EAAa/lC,OAAS+lC,EAAajmC,UAC1EomC,EAAoBpI,EAAUqI,aAAah2B,GAAG,GAAK21B,EAAEr4B,QAAQuK,IAAI8lB,EAAUqI,cAAcx7B,MAAM,KAAK5I,QAAQ,GAAG,IAAM,MACrHqkC,EAAkB,CACtBlvC,MAAM+uC,GAER,OAAO9tC,OAAOC,OAAO0tC,EAAE,CACrBE,aACAI,kBACAF,wBAEC,KAELv+B,EAASy9B,gBAAkBA,GAAmBjtC,OAAOqF,KAAK4nC,GAAiBrpC,OAAO,EAAIqpC,EAAkB,KAEpGz9B,EAASy9B,kBACXz9B,EAAS69B,+BAAiCrtC,OAAOqF,KAAKmK,EAASy9B,iBAAiBld,OAAQ,SAACsd,EAA+B7kC,GACtH,IAAM0lC,EAAY1+B,EAASy9B,gBAAgBzkC,GACrCU,EAAckC,EAAKjK,cAAcwJ,gBAAgB,CAAC,QAAQ,eAAe,QAAQ,kBAAkBnC,IACzG,GAAIU,EAAYilC,WAAa/iC,EAAKtM,MAAM6X,iBAAiB,CACvD,OAAQu3B,EAAUjrC,QAChB,IAAK,UACHiG,EAAY2kC,WAAa,YACzB3kC,EAAY+kC,gBAAkB,CAC5BlvC,MAAMqM,EAAKtM,MAAMoG,MAAMC,OAAOmF,aAAarH,OAAO2E,SAEtD,MACA,IAAK,WACHsB,EAAY2kC,WAAa,OACzB3kC,EAAY+kC,gBAAkB,CAC5BlvC,MAAMqM,EAAKtM,MAAMoG,MAAMC,OAAOmF,aAAarH,OAAO0E,WAMxDuB,EAAYV,MAAQA,EACpBU,EAAYjG,OAASirC,EAAUjrC,OAC/BiG,EAAYklC,UAAYF,EAAUG,cAClCnlC,EAAYolC,WAAaJ,EAAUK,aACnClB,EAA+BnkC,EAAYunB,WAAavnB,EAE1D,OAAOmkC,GACP,MAIA1H,0BACIoH,EAAkB/sC,OAAOqF,KAAKsgC,EAAUvxB,eAAe/Q,OAAO,SAAAmF,GAAK,OAAM4C,EAAKjK,cAAc+T,MAAMywB,EAAUvxB,cAAc5L,GAAO0O,kBAAkBc,GAAG,KAE5JxI,EAASu9B,gBAAkBA,EAErBr2B,EAAyC,SAAhC7X,KAAKC,MAAM6X,iBAEtBoxB,EAASlpC,KAAKsC,cAAc+T,MAAM,GAClCs5B,EAAW3vC,KAAKsC,cAAc+T,MAAM,GACpC4yB,EAAkBjpC,KAAKsC,cAAc+T,MAAM,GAC3Cu5B,EAAwB5vC,KAAKsC,cAAc+T,MAAM,aAE/CrW,KAAKsC,cAAcmT,aAAay4B,EAAhC,eAAArvB,EAAA1d,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAAgD,SAAAmC,EAAOrO,GAAP,IAAAU,EAAAwlC,EAAAC,EAAAnE,EAAAoE,EAAA/5B,EAAAg6B,EAAAlb,EAAAmb,EAAAvE,EAAA,OAAA7Z,EAAAzyB,EAAA6W,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,cAC9C/L,EAAcC,EAAgBX,GADgBsO,EAAA7B,KAAA,EAO1CwI,QAAQkD,IAAI,CACpBvV,EAAKjK,cAAc4pC,aAAa7hC,GAChCkC,EAAKjK,cAAc4tC,cAAc7lC,EAAYwN,GAC7CtL,EAAKjK,cAAcypC,mBAAmB1hC,EAAYkC,EAAKtM,MAAM2L,WAVX,cAAAikC,EAAA53B,EAAAE,KAAA23B,EAAA3uC,OAAA8qC,EAAA,EAAA9qC,CAAA0uC,EAAA,GAIlDlE,EAJkDmE,EAAA,GAKlDC,EALkDD,EAAA,GAMlD95B,EANkD85B,EAAA,GAAA73B,EAAA7B,KAAA,GAatB7J,EAAKjK,cAAc2kC,oBAAoBjxB,EAAWrM,EAAMU,EAAYwN,GAb9C,QAa9Cm4B,EAb8C/3B,EAAAE,KAe9C2c,EAAegS,EAAUvxB,cAAc5L,GAAOmrB,aAC9Cmb,EAAcnb,EAAa9T,IAAI8lB,EAAUqI,eACzCzD,EAAWC,EAAUS,SAAW7/B,EAAKjK,cAAc+T,MAAMs1B,EAAUS,QAAQv9B,QAAUtC,EAAKjK,cAAc+T,MAAMs1B,EAAUS,QAAU7/B,EAAKjK,cAAc+T,MAAM,IAEnJxH,UACZq6B,EAASA,EAAO5yB,KAAKo1B,EAAS/3B,MAAMs8B,MAGjCF,EAAWlhC,SAAWkhC,EAAW52B,GAAG,KACvCw2B,EAAWA,EAASr5B,KAAKy5B,EAAWp8B,MAAMmhB,IAC1C8a,EAAwBA,EAAsBt5B,KAAKwe,IAGjDkb,IACF/G,EAAkBA,EAAgB3yB,KAAK05B,IA7BW,yBAAA/3B,EAAArB,SAAAoB,EAAAhY,SAAhD,gBAAAoY,GAAA,OAAAyG,EAAA/H,MAAA9W,KAAA8E,YAAA,mBAiCD8qC,EAAsB/gC,SAAW+gC,EAAsBz2B,GAAG,KAC7Dw2B,EAAWA,EAAS3uB,IAAI4uB,cAMU5vC,KAAKsC,cAAc6tC,6BAA6BnwC,KAAKC,MAAM2L,QAAQtB,EAAgB,sBAAjH8lC,mBAC6BpwC,KAAKsC,cAAc4kC,yBAAyBlnC,KAAKC,MAAM2L,QAAQtB,EAAgB,cAA5G+lC,SACAC,EAA+BD,EAAuBlvC,OAAOqF,KAAK6pC,GAAsB3pC,IAAK,SAAA0gC,GACjG,IAAM3wB,EAAU45B,EAAqBjJ,GACrC,OAAI3wB,EAAQ0C,GAAG,GACb,IAAA/S,OAAWqQ,EAAQ1L,QAAQ,GAA3B,KAAA3E,OAAiCghC,GAE1B,OAER5iC,OAAO,SAAAoD,GAAC,OAAW,OAANA,IAAe,KAE/B+I,EAASu4B,OAASA,EAClBv4B,EAASg/B,SAAWA,EACpBh/B,EAASy/B,sBAAwBA,EACjCz/B,EAAS2/B,6BAA+BA,UAG1C3/B,EAASo9B,gBAAkBA,EAC3Bp9B,EAAS09B,iBAAkB,EAErBF,EAAkBhtC,OAAOqF,KAAK8D,GAAiB9F,OAAO,SAAAmF,GAAK,OAAMgH,EAASu9B,gBAAgBtkC,SAASD,KAAWxI,OAAOqF,KAAKmK,EAASo9B,iBAAiBnkC,SAASD,KACnKgH,EAASw9B,gBAAkBA,EAG3BnuC,KAAK0Q,aAAaC,2BAGlB3Q,KAAK0Q,aAAa,CAChBq9B,gBAAgB,GAChBG,gBAAgB,GAChBG,iBAAgB,EAChBF,gBAAgBhtC,OAAOqF,KAAK8D,yIAK1B,IAAAkC,EAAAxM,KACAm3B,EAAwC,WAA7Bn3B,KAAKC,MAAMm3B,cACtBmZ,EAAYvwC,KAAKsC,cAAcwJ,gBAAgB,CAAC,cAChD0kC,EAAUxwC,KAAKsC,cAAcwJ,gBAAgB,CAAC,WAAW,YACzD2kC,EAAYzwC,KAAKsC,cAAcwJ,gBAAgB,CAAC,WAAW,cAC3D4kC,EAAe1wC,KAAKsC,cAAcwJ,gBAAgB,CAAC,WAAW,iBAC9D6kC,EAAqB3wC,KAAKsC,cAAcwJ,gBAAgB,CAAC,QAAQ,iBACjE8kC,EAAsB5wC,KAAKsC,cAAcwJ,gBAAgB,CAAC,QAAQ,kBAExE,OACEzI,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,GAEP6D,EAAAjE,EAAAC,cAAC2vB,GAAA,EAAD,CACEzvB,GAAI,GAEHS,KAAKsC,cAAcwJ,gBAAgB,CAAC,aAAa9L,KAAKC,MAAM6X,iBAAiB,UAHhF,aAMG9X,KAAKoC,MAAMisC,gBAiBVhrC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,GAGLQ,KAAKC,MAAM2L,SAAW5L,KAAKoC,MAAM8rC,gBAAgBnpC,OAAO,EACtD1B,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPE,cAAe,UAEf2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/D,GAAI,EACJC,MAAO,EACP0G,GAAI,CAAC,EAAE,GACPzG,WAAY,SACZM,eAAgB,SAChBL,cAAe,CAAC,SAAS,QAEzB2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE3D,GAAI,CAAC,EAAE,GACPH,MAAO,CAAC,EAAE,EAAE,GACZE,cAAe,UAEf2D,EAAAjE,EAAAC,cAACmG,EAAA,EAAD,CACEC,UAAW,CACTC,GAAG,CAAC,EAAE,GACNnG,GAAG,CAAC,EAAE,GACN4D,QAAQ,OACR1D,WAAW,SACXW,OAAO,CAAC,OAAO,SACfL,eAAe,WAGjBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPC,WAAY,SACZC,cAAe,SACfK,eAAgB,UAGdC,KAAKoC,MAAM8mC,OACT7lC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE2rB,WAAY,EACZzuB,WAAY,CAAC,EAAE,GACfN,MAAO,YACPoO,WAAY,UACZ/N,SAAU,CAAC,EAAE,SACbM,wBAAyB,CAAEC,OAAQd,KAAKoC,MAAM8mC,OAAOn+B,QAAQ,GAAG,sBAIlE1H,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAQJ,KAAK,SAGjBG,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ1G,MAAO,EACPC,WAAY,SACZC,cAAe,MACfK,eAAgB,UAEhBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9C,WAAY,EACZD,SAAU,CAAC,EAAE,GACbL,MAAO,YAHT,WAOAmD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEutC,UAAW,SACXC,QAAS9wC,KAAKsC,cAAcwJ,gBAAgB,CAAC,WAAW,aAExDzI,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEoE,GAAI,EACJ1B,KAAM,OACN9C,KAAM,MACNhD,MAAO,mBAOnBmD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE3D,GAAI,CAAC,EAAE,GACPH,MAAO,CAAC,EAAE,EAAE,GACZE,cAAe,UAEf2D,EAAAjE,EAAAC,cAACmG,EAAA,EAAD,CACEC,UAAW,CACTC,GAAG,CAAC,EAAE,GACNnG,GAAG,CAAC,EAAE,GACN4D,QAAQ,OACR1D,WAAW,SACXW,OAAO,CAAC,OAAO,SACfL,eAAe,WAGjBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPC,WAAY,SACZC,cAAe,SACfK,eAAgB,UAGdC,KAAKoC,MAAM0kC,UACTzjC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE7D,WAAY,SACZC,cAAe,SACfK,eAAgB,UAEhBsD,EAAAjE,EAAAC,cAAC0xC,GAAD5vC,OAAAC,OAAA,CACEmJ,SAAU,GACNvK,KAAKC,MAFX,CAGE6mC,UAAW9mC,KAAKoC,MAAM0kC,aAExBzjC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPC,WAAY,SACZC,cAAe,MACfK,eAAgB,UAEhBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,IACPC,WAAY,SACZM,eAAgB,YAEhBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/C,SAAU,EACVC,WAAY,EACZ8N,WAAYtO,KAAKC,MAAMoG,MAAM4L,MAAMyS,QACnCxkB,MAAOF,KAAKC,MAAMoG,MAAMC,OAAOmF,aAAarH,OAAO0E,WAJrD,IAMI9I,KAAKoC,MAAM0kC,UAAUkK,kBAAkBjmC,QAAQ,GANnD,MASF1H,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEG,GAAI,EACJlD,SAAU,EACVC,WAAY,EACZ8N,WAAYtO,KAAKC,MAAMoG,MAAM4L,MAAMyS,QACnCxkB,MAAOF,KAAKC,MAAMoG,MAAMC,OAAOmF,aAAarH,OAAO0E,WALrD,KAOAzF,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,IACPC,WAAY,SACZM,eAAgB,cAEhBsD,EAAAjE,EAAAC,cAACmuC,GAADrsC,OAAAC,OAAA,GACMpB,KAAKC,MADX,CAEEwP,KAAM,KACNlF,SAAU,EACVs+B,aAAc,CACZtoC,SAAS,GACTC,WAAW,IACXN,MAAMF,KAAKC,MAAMoG,MAAMC,OAAOmF,aAAarH,OAAO0E,WAEpDg+B,UAAW9mC,KAAKoC,MAAM0kC,gBAM9BzjC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAQJ,KAAK,SAGjBG,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPC,WAAY,SACZC,cAAe,MACfK,eAAgB,UAEhBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9C,WAAY,EACZD,SAAU,CAAC,EAAE,GACbL,MAAO,YAHT,iBAQEF,KAAKoC,MAAMguC,uBACT/sC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEutC,UAAW,SACXC,QAAS,8DAA8D9wC,KAAKoC,MAAMguC,uBAAyBpwC,KAAKoC,MAAMguC,sBAAsBj3B,GAAG,GAAxE,KAAA/S,OAAkFpG,KAAKoC,MAAMkuC,6BAA6Bv8B,KAAK,OAA/H,KAA2I,KAElN1Q,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEoE,GAAI,EACJ1B,KAAM,OACN9C,KAAM,MACNhD,MAAO,mBASvBmD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,CAAC,EAAE,EAAE,GACZE,cAAe,UAEf2D,EAAAjE,EAAAC,cAACmG,EAAA,EAAD,CACEC,UAAW,CACTC,GAAG,CAAC,EAAE,GACNnG,GAAG,CAAC,EAAE,GACN4D,QAAQ,OACR1D,WAAW,SACXW,OAAO,CAAC,OAAO,SACfL,eAAe,WAGjBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPC,WAAY,SACZC,cAAe,SACfK,eAAgB,UAGdC,KAAKoC,MAAMutC,SACTtsC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE2rB,WAAY,EACZzuB,WAAY,CAAC,EAAE,GACfN,MAAO,YACPoO,WAAY,UACZ/N,SAAU,CAAC,EAAE,SACbM,wBAAyB,CAAEC,OAAQd,KAAKoC,MAAMutC,SAAS5kC,QAAQ,MAIjE1H,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAQJ,KAAK,SAGjBG,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ1G,MAAO,EACPC,WAAY,SACZC,cAAe,MACfK,eAAgB,UAEhBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9C,WAAY,EACZD,SAAU,CAAC,EAAE,GACbL,MAAO,YAHT,kBAOAmD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEutC,UAAW,SACXC,QAAS9wC,KAAKsC,cAAcwJ,gBAAgB,CAAC,WAAW,oBAExDzI,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEoE,GAAI,EACJ1B,KAAM,OACN9C,KAAM,MACNhD,MAAO,oBAQrBmD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPwN,GAAI,mBACJjN,eAAgB,gBAChBL,cAAe,CAAC,SAAS,QAEzB2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/D,GAAI,CAAC,EAAE,GACPC,MAAO,CAAC,EAAE,MACVE,cAAe,SACfsN,GAAI,yBAEJ3J,EAAAjE,EAAAC,cAACmG,EAAA,EAAD,CACE+e,MAAO,cACPkZ,WAAcz9B,KAAKC,MAAM8F,SAIrB,KAJgC,CAClCnG,MAAM,CACJiN,UAAU,UAIdxJ,EAAAjE,EAAAC,cAAC4xC,GAAD9vC,OAAAC,OAAA,GACMpB,KAAKC,MADX,CAEEyd,SAAU,6BAIhBra,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,CAAC,EAAE,MACVE,cAAe,UAEf2D,EAAAjE,EAAAC,cAACmG,EAAA,EAAD,KACEnC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE2J,GAAI,CAAC,EAAE,GACPtH,GAAI,CAAC,EAAE,GACPurC,UAAW,SACXxxC,cAAe,CAAC,SAAS,QAEzB2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,CAAC,EAAE,IACVE,cAAe,SACfK,eAAgB,cAEhBsD,EAAAjE,EAAAC,cAAC2vB,GAAA,EAAD,CACExuB,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,UAAW,QAHb,gBAQF4C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,CAAC,EAAE,GACP1G,MAAO,CAAC,EAAE,IACVE,cAAe,SACfK,eAAgB,YAEhBsD,EAAAjE,EAAAC,cAAC4sB,EAAA,EAAD,CACEN,WAAY,CACVvc,EAAE,EACFzJ,GAAG,GAELolB,aACE,CAAChqB,MAAM,OAAOJ,MAAM,MAEtBqF,KAAM,mBACN8kB,QAAS,CACP,CAAC/pB,MAAM,OAAOJ,MAAM,MACpB,CAACI,MAAM,QAAQJ,MAAM,MACrB,CAACI,MAAM,SAASJ,MAAM,MACtB,CAACI,MAAM,SAASJ,MAAM,MACtB,CAACI,MAAM,MAAMJ,MAAM,QAErB4G,SAAW,SAAAK,GAAC,OAAI4E,EAAK2kC,iCAAiCvpC,QAI5DvE,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEoE,GAAI,CAAC,EAAE,GACPwpC,UAAW,SACXnxC,eAAgB,SAChBiN,GAAI,yBAEJ3J,EAAAjE,EAAAC,cAACuV,GAAA,EAADzT,OAAAC,OAAA,GACMpB,KAAKC,MADX,CAEEyL,cAAe,GACfgS,SAAU,wBACVC,eAAgB,wBAChBzI,mBAAoBlV,KAAKoC,MAAMqsC,8BAC/B70B,iBAAkB5Z,KAAKsC,cAAc8uC,oBAAoB,MAAM,WAQ3E/tC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/D,GAAI,EACJkE,GAAI,OACJjE,MAAO,CAAC,EAAE,IACV0xC,UAAW,SACXnxC,eAAgB,UAEhBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9C,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,UAAW,UAGTT,KAAKC,MAAM8F,SACT/F,KAAKsC,cAAcwJ,gBAAgB,CAAC,aAAa9L,KAAKC,MAAM6X,iBAAiB,cAE7E9X,KAAKsC,cAAcwJ,gBAAgB,CAAC,aAAa9L,KAAKC,MAAM6X,iBAAiB,eAwFvF9X,KAAKoC,MAAMgsC,iBACT/qC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPD,GAAI,CAAC,EAAE,GACPyN,GAAI,mBACJtN,cAAe,UAEf2D,EAAAjE,EAAAC,cAAC2vB,GAAA,EAAD,CAAO5nB,GAAI,CAAC,EAAE,IAAd,oBACA/D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPE,cAAe,UAEf2D,EAAAjE,EAAAC,cAACgyC,GAAA,EAADlwC,OAAAC,OAAA,CACEsK,cAAevK,OAAOqF,KAAKxG,KAAKoC,MAAMosC,gCACtCnhC,KAAM,CACJ,CACEkX,MAAM,QACNtkB,MAAM,CACJT,MAAM,CAAC,GAAI,KAEb8xC,OAAO,CACL,CACEtrC,KAAK,OACL/F,MAAM,CACJE,GAAG,EACHC,OAAO,CAAC,QAAQ,WAGpB,CACE4F,KAAK,eAIX,CACEurC,QAAO,EACPhtB,MAAM,YACNtkB,MAAM,CACJT,MAAM,CAAC,IAAM,MAEf8xC,OAAO,CACL,CACEtrC,KAAK,SACL8I,KAAK,SACLg3B,KAAK,CAAC,aACN7lC,MAAM,CACJsK,SAAU,IAGd,CACEvE,KAAK,YACL/F,MAAM,CACJyH,GAAG,MAKX,CACE6c,MAAM,aACNtkB,MAAM,CACJT,MAAM,CAAC,IAAK,KACZO,eAAe,CAAC,SAAS,eAE3BuxC,OAAO,CACL,CACEtrC,KAAK,SACL8I,KAAK,SACLg3B,KAAK,CAAC,cACN7lC,MAAM,CACJsK,SAAU,IAGd,CACEuE,KAAK,OACL9I,KAAK,SACL8/B,KAAK,CAAC,SACN7lC,MAAM,CACJyH,GAAG,MAKX,CACE6c,MAAM,SACNtkB,MAAM,CACJT,MAAM,CAAC,IAAK,KACZO,eAAe,CAAC,SAAS,eAE3BuxC,OAAO,CACL,CACExiC,KAAK,OACLyiC,QAAO,EACPvrC,KAAK,SACL8/B,KAAK,CAAC,cACN7lC,MAAM,CACJE,GAAG,EACH+C,KAAKlD,KAAKC,MAAM8F,SAAW,QAAU,UAGzC,CACEC,KAAK,SACL8/B,KAAK,CAAC,UACN7lC,MAAM,CACJL,MAAM,CACJc,cAAc,kBAMxB,CACE6jB,MAAM,GACNgtB,OAA8B,OAAvBvxC,KAAKC,MAAM2L,QAClB3L,MAAM,CACJT,MAAM,CAAC,IAAK,MAEd+jC,YAAY,CACV/jC,MAAM,GAER8xC,OAAO,CACL,CACEtrC,KAAK,SACLrF,MAAM,QACN8kC,UAAU,CACRngB,SAAS,SAACrlB,GAAD,MAAyC,YAA7BA,EAAMoK,YAAYjG,SAEzCnE,MAAM,CACJT,MAAM,EACNe,SAAS,EACTC,WAAW,EACXJ,OAAO,OACPC,aAAa,EACbgB,UAAU,KACVC,UAAU,UACV4B,KAAMlD,KAAKC,MAAM8F,SAAW,QAAU,SACtCrE,YAAY,SAACzB,GAAD,OAAWuM,EAAKvM,MAAMuxC,YAAX,SAAAprC,OAAgCuqC,EAAmBc,MAAnD,KAAArrC,OAA4DnG,EAAMoK,YAAYV,eAM3G3J,KAAKC,MAhIX,CAiIEqK,gBAAiBtK,KAAKoC,MAAMosC,oCAMtCnrC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPwN,GAAI,mBACJtN,cAAe,SACfH,GAAKS,KAAKoC,MAAM8rC,gBAAgBnpC,OAAa,EAAJ,IAGtC/E,KAAKoC,MAAM8rC,gBAAgBnpC,OAAO,GAAK5D,OAAOqF,KAAKxG,KAAKoC,MAAM2rC,iBAAiBhpC,OAAO,GAAK/E,KAAKoC,MAAM+rC,gBAAgBppC,OAAO,IAC5H1B,EAAAjE,EAAAC,cAAC2vB,GAAA,EAAD,CAAO5nB,GAAI,CAAC,EAAE,IAAd,oBAEJ/D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM9D,MAAO,EAAGE,cAAe,UAE3ByB,OAAOqF,KAAKxG,KAAKoC,MAAM2rC,iBAAiBhpC,OAAO,GAC/C1B,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPD,GAAI,CAAC,EAAE,GACPyN,GAAI,iBACJtN,cAAe,UAEf2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEyD,GAAI,EACJvH,MAAO,EACPD,GAAI,CAAC,EAAE,GACPyT,YAAa,UACbiwB,aAAc,yBAEd5/B,EAAAjE,EAAAC,cAACiE,EAAA,EAAQouC,GAAT,CACEnxC,SAAU,CAAC,EAAE,GACbC,WAAY,CAAC,EAAE,IAFjB,sBAOF6C,EAAAjE,EAAAC,cAACgyC,GAAA,EAADlwC,OAAAC,OAAA,CACEsK,cAAevK,OAAOqF,KAAKxG,KAAKoC,MAAM2rC,iBACtCrsC,YAAa,SAACzB,GAAD,OAAWuM,EAAKvM,MAAM+rB,YAAY/rB,EAAM0J,QACrD0D,KAAM,CACJ,CACEkX,MAAM,WACNtkB,MAAM,CACJT,MAAM,CAAC,IAAK,MAEd8xC,OAAO,CACL,CACEtrC,KAAK,OACL/F,MAAM,CACJE,GAAG,EACHC,OAAO,CAAC,QAAQ,WAGpB,CACE4F,KAAK,eAIX,CACEue,MAAM,OACNgtB,OAA8B,OAAvBvxC,KAAKC,MAAM2L,QAClB3L,MAAM,CACJT,MAAM,CAAC,IAAM,MAEf8xC,OAAO,CACL,CACEtrC,KAAK,OACL/F,MAAM,CACJsK,SAAS,MAKjB,CACEga,MAAM,MACNotB,KAAKnB,EACLvwC,MAAM,CACJT,MAAM,CAAC,IAAK,MAEd+jC,YAAY,CACV7jC,cAAc,SACdD,WAAW,cAEb6xC,OAAO,CACL,CACEtrC,KAAK,MACL4rC,aAAY,GAEd,CACE5rC,KAAK,mBACLwO,YAAW,EACXvU,MAAM,CACJsK,SAASvK,KAAKC,MAAM8F,SAAW,EAAI,EACnCxF,SAASP,KAAKC,MAAM8F,SAAW,MAAQ,MAK/C,CACEwe,MAAM,QACNotB,KAAKlB,EACLxwC,MAAM,CACJT,MAAM,CAAC,IAAK,MAEd8xC,OAAO,CACL,CACEtrC,KAAK,WAIX,CACEue,MAAM,UACNgtB,QAAO,EACPtxC,MAAM,CACJT,MAAM,CAAC,IAAK,MAEd+jC,YAAY,CACV/jC,MAAM,EACNG,GAAG,CAAC,EAAE,IAER2xC,OAAO,CACL,CACEtrC,KAAK,qBAIX,CACEurC,QAAO,EACPhtB,MAAM,UACNotB,KAAKjB,EACLzwC,MAAM,CACJT,MAAM,CAAC,IAAK,KACZiB,UAAU,UAEZ6wC,OAAO,CACL,CACEtrC,KAAK,eAIX,CACEue,MAAM,GACNgtB,OAA8B,OAAvBvxC,KAAKC,MAAM2L,QAClB3L,MAAM,CACJT,MAAM,CAAyB,OAAvBQ,KAAKC,MAAM2L,QAAmB,IAAO,EAAG,MAElD23B,YAAY,CACV/jC,MAAM,GAER8xC,OAAO,CACL,CACEtrC,KAAK,SACLrF,MAAO,UACPV,MAAM,CACJT,MAAM,EACNe,SAAS,EACTC,WAAW,EACXJ,OAAO,OACPC,aAAa,EACbgB,UAAU,KACVC,UAAU,UACV4B,KAAMlD,KAAKC,MAAM8F,SAAW,QAAU,SACtCrE,YAAY,SAACzB,GAAD,OAAWuM,EAAKvM,MAAM+rB,YAAY/rB,EAAM0J,cAM1D3J,KAAKC,SAKfD,KAAKoC,MAAM8rC,gBAAgBnpC,OAAO,GAChC1B,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/D,GAAKS,KAAKoC,MAAM+rC,gBAAgBppC,OAAO,EAAI,CAAC,EAAE,GAAK,EACnDvF,MAAO,EACPwN,GAAI,mBACJtN,cAAe,UAEf2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEyD,GAAI,EACJvH,MAAO,EACPD,GAAI,CAAC,EAAE,GACPyT,YAAa,UACbiwB,aAAc,yBAEd5/B,EAAAjE,EAAAC,cAACiE,EAAA,EAAQouC,GAAT,CACEnxC,SAAU,CAAC,EAAE,GACbC,WAAY,CAAC,EAAE,IAFjB,qBAOF6C,EAAAjE,EAAAC,cAACgyC,GAAA,EAADlwC,OAAAC,OAAA,CACEsK,cAAe1L,KAAKoC,MAAM8rC,gBAC1BxsC,YAAa,SAACzB,GAAD,OAAWuM,EAAKvM,MAAM+rB,YAAY/rB,EAAM0J,QACrD0D,KAAM,CACJ,CACEkX,MAAM,WACNtkB,MAAM,CACJT,MAAM,CAAC,IAAK,MAEd8xC,OAAO,CACL,CACEtrC,KAAK,OACL/F,MAAM,CACJE,GAAG,EACHC,OAAO,CAAC,QAAQ,WAGpB,CACE4F,KAAK,eAIX,CACEue,MAAM,OACNgtB,QAAO,EACPtxC,MAAM,CACJT,MAAM,CAAC,IAAK,MAEd8xC,OAAO,CACL,CACEtrC,KAAK,OACL/F,MAAM,CACJsK,SAAS,MAKjB,CACEga,MAAM,MACNotB,KAAKnB,EACLvwC,MAAM,CACJT,MAAM,CAAC,GAAK,MAEd+jC,YAAY,CACV7jC,cAAc,SACdD,WAAW,cAEb6xC,OAAO,CACL,CACEtrC,KAAK,MACL4rC,aAAY,GAEd,CACE5rC,KAAK,mBACLwO,YAAW,EACXvU,MAAM,CACJsK,SAASvK,KAAKC,MAAM8F,SAAW,EAAI,EACnCxF,SAASP,KAAKC,MAAM8F,SAAW,MAAQ,MAK/C,CACEwe,MAAM,QACNotB,KAAKlB,EACLxwC,MAAM,CACJT,MAAM,CAAC,IAAK,KAEd+jC,YAAY,CACV9jC,WAAW,CAAC,SAAS,eAEvB6xC,OAAO,CACL,CACEtrC,KAAK,WAIX,CACEue,MAAM,YACNtkB,MAAM,CACJT,MAAM,CAAC,IAAK,KACZO,eAAe,CAAC,SAAS,eAE3BuxC,OAAO,CACL,CACEtrC,KAAK,gBAIX,CACEurC,QAAO,EACPhtB,MAAM,UACNotB,KAAKjB,EACLzwC,MAAM,CACJT,MAAM,CAAC,IAAK,KACZiB,UAAU,UAEZ6wC,OAAO,CACL,CACEtrC,KAAK,YACL/F,MAAM,CACJsK,SAAS,MAKjB,CACEgnC,QAAO,EACPhtB,MAAM,WACNtkB,MAAM,CACJT,MAAM,CAAC,IAAK,KACZiB,UAAU,UAEZ8iC,YAAY,CACV9jC,WAAW,SACXC,cAAc,UAEhB4xC,OAAO,CACL,CACEtrC,KAAK,WACL/F,MAAM,CACJsK,SAAS,IAGb,CACEvE,KAAK,eACLwO,YAAW,EACXq9B,eAAc,EACd5xC,MAAM,CACJM,SAAS,EACTgK,SAAS,MAkBjB,CACEga,MAAM,GACNgtB,QAAO,EACPtxC,MAAM,CACJT,MAAM,KAER+jC,YAAY,CACV/jC,MAAM,GAER8xC,OAAO,CACL,CACEtrC,KAAK,SACLrF,MAAM,SACNV,MAAM,CACJT,MAAM,EACNe,SAAS,EACTC,WAAW,EACXJ,OAAO,OACPC,aAAa,EACbgB,UAAU,KACVC,UAAU,SACV4B,KAAMlD,KAAKC,MAAM8F,SAAW,QAAU,SACtCrE,YAAY,SAACzB,GAAD,OAAWuM,EAAKvM,MAAM+rB,YAAY/rB,EAAM0J,cAM1D3J,KAAKC,SAKbD,KAAKoC,MAAM+rC,gBAAgBppC,OAAO,GAClC1B,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM0J,GAAG,mBAAmBxN,MAAO,EAAGE,cAAe,UACnD2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEyD,GAAI,EACJvH,MAAO,EACPD,GAAI,CAAC,EAAE,GACPyT,YAAa,UACbiwB,aAAc,yBAEd5/B,EAAAjE,EAAAC,cAACiE,EAAA,EAAQouC,GAAT,CACEnxC,SAAU,CAAC,EAAE,GACbC,WAAY,CAAC,EAAE,IAFjB,qBAOF6C,EAAAjE,EAAAC,cAACgyC,GAAA,EAADlwC,OAAAC,OAAA,CACEsK,cAAe1L,KAAKoC,MAAM+rC,gBAC1BzsC,YAAa,SAACzB,GAAD,OAAWuM,EAAKvM,MAAM+rB,YAAY/rB,EAAM0J,QACrD0D,KAAM,CACJ,CACEkX,MAAM,WACNtkB,MAAM,CACJT,MAAM,CAAC,IAAK,MAEd8xC,OAAO,CACL,CACEtrC,KAAK,OACL/F,MAAM,CACJE,GAAG,EACHC,OAAO,CAAC,QAAQ,WAGpB,CACE4F,KAAK,eAIX,CACEue,MAAM,OACNgtB,OAA8B,OAAvBvxC,KAAKC,MAAM2L,QAClB3L,MAAM,CACJT,MAAM,CAAC,IAAM,KAEf8xC,OAAO,CACL,CACEtrC,KAAK,OACL/F,MAAM,CACJsK,SAAS,MAKjB,CACEga,MAAM,MACNotB,KAAKnB,EACLvwC,MAAM,CACJT,MAAM,CAAC,KAAKQ,KAAKoC,MAAM8rC,gBAAgBnpC,OAAW,OAEpDw+B,YAAY,CACV7jC,cAAc,SACdD,WAAW,cAEb6xC,OAAO,CACL,CACEtrC,KAAK,MACL4rC,aAAY,GAEd,CACE5rC,KAAK,mBACLwO,YAAW,EACXvU,MAAM,CACJsK,SAASvK,KAAKC,MAAM8F,SAAW,EAAI,EACnCxF,SAASP,KAAKC,MAAM8F,SAAW,MAAQ,MAK/C,CACEwe,MAAM,QACNotB,KAAKlB,EACLxwC,MAAM,CACJT,MAAM,CAAC,IAAK,KAEd8xC,OAAO,CACL,CACEtrC,KAAK,WAIX,CACEurC,QAAO,EACPhtB,MAAM,UACNotB,KAAKjB,EACLzwC,MAAM,CACJT,MAAM,CAAC,IAAK,KACZiB,UAAU,UAEZ6wC,OAAO,CACL,CACEtrC,KAAK,YACL/F,MAAM,CACJsK,SAAS,MAKjB,CACEga,MAAM,gBACNgtB,QAAO,EACPtxC,MAAM,CACJT,MAAM,KAER+jC,YAAY,CACV/jC,MAAM,EACNG,GAAG,CAAC,EAAE,IAER2xC,OAAO,CACL,CACEtrC,KAAK,WACLpG,MAAM,CACJqG,SAAS,cAKjB,CACEse,MAAM,GACNgtB,OAA8B,OAAvBvxC,KAAKC,MAAM2L,QAClB3L,MAAM,CACJT,MAAM,CAAyB,OAAvBQ,KAAKC,MAAM2L,QAAmB,IAAO,EAAI,MAEnD23B,YAAY,CACV/jC,MAAM,GAER8xC,OAAO,CACL,CACEtrC,KAAK,SACLrF,MAAO,SAACV,GACN,OAAOkB,OAAOqF,KAAKgG,EAAKpK,MAAM2rC,iBAAiBnkC,SAAS3J,EAAM0J,OAAS,UAAY,WAErF1J,MAAM,CACJT,MAAM,EACNe,SAAS,EACTC,WAAW,EACXJ,OAAO,OACPC,aAAa,EACbgB,UAAU,KACV6B,KAAMlD,KAAKC,MAAM8F,SAAW,QAAU,SACtCrE,YAAY,SAACzB,GAAD,OAAWuM,EAAKvM,MAAM+rB,YAAY/rB,EAAM0J,SAEtD87B,UAAU,CACRnkC,UAAW,SAACrB,GACV,OAAOkB,OAAOqF,KAAKgG,EAAKpK,MAAM2rC,iBAAiBnkC,SAAS3J,EAAM0J,OAAS,UAAY,iBAO3F3J,KAAKC,YAOhBk3B,GAAYn3B,KAAKC,MAAM2L,SAAWglC,EAAoBzf,SACrD9tB,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ1G,MAAO,EACPwN,GAAI,QACJtN,cAAe,UAEf2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEyD,GAAI,EACJvH,MAAO,EACPD,GAAI,CAAC,EAAE,GACPyT,YAAa,UACbiwB,aAAc,yBAEd5/B,EAAAjE,EAAAC,cAACiE,EAAA,EAAQouC,GAAT,CACEnxC,SAAU,CAAC,EAAE,GACbC,WAAY,CAAC,EAAE,IAFjB,UAOF6C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE5D,cAAe,CAAC,SAAS,QAGvB,CAAC,WAAW,gBAAgB,aAAagH,IAAK,SAACorC,EAASC,GACtD,IAAMC,EAAaxlC,EAAKlK,cAAcwJ,gBAAgB,CAAC,QAAQgmC,IAC/D,OACEzuC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,CAAC,EAAE,EAAE,GACZqH,IAAG,QAAAT,OAAU2rC,GACbxyC,GAAIwyC,EAAU,EAAI,CAAC,EAAE,GAAK,EAC1BpyC,GAAIoyC,EAAU,EAAI,CAAC,EAAE,GAAK,GAE1B1uC,EAAAjE,EAAAC,cAAC4yC,GAAD9wC,OAAAC,OAAA,GACMoL,EAAKvM,MADX,CAEEiU,KAAM89B,EAAW99B,KACjB7R,KAAM2vC,EAAWL,KACjBjjB,MAAOsjB,EAAWtjB,MAClBnK,MAAOytB,EAAWrxC,MAClBe,YAAc,SAAA8F,GAAC,OAAIgF,EAAKvM,MAAMuxC,YAAX,SAAAprC,OAAgC4rC,EAAWP,iBAW9EzxC,KAAKoC,MAAM8rC,gBAAgBnpC,OAAO,GAChC1B,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPwN,GAAI,gBACJtN,cAAe,UAEf2D,EAAAjE,EAAAC,cAAC2vB,GAAA,EAAD,CAAO5nB,GAAI,CAAC,EAAE,IAAd,iBACA/D,EAAAjE,EAAAC,cAACgyC,GAAA,EAADlwC,OAAAC,OAAA,CACEsK,cAAevK,OAAOqF,KAAK+pC,GAAW/rC,OAAQ,SAAA4iC,GAAQ,OAAImJ,EAAUnJ,GAAUjW,UAC9E9jB,KAAM,CACJ,CACEkX,MAAM,QACNtkB,MAAM,CACJT,MAAM,CAAC,GAAI,MAEb8xC,OAAO,CACL,CACEtrC,KAAK,OACL/F,MAAM,CACJE,GAAG,EACHC,OAAO,CAAC,QAAQ,WAGpB,CACE4F,KAAK,eAIX,CACEurC,QAAO,EACPhtB,MAAM,UACNtkB,MAAM,CACJT,MAAM,CAAC,IAAM,MAEf8xC,OAAO,CACL,CACEtrC,KAAK,eACL/F,MAAM,CACJsK,SAAUvK,KAAKC,MAAM8F,SAAW,EAAI,MAK5C,CACEwe,MAAM,aACNotB,KAAK3xC,KAAKsC,cAAcwJ,gBAAgB,CAAC,WAAW,8BACpD7L,MAAM,CACJT,MAAM,CAAC,IAAK,IACZO,eAAe,CAAC,SAAS,eAE3BuxC,OAAO,CACL,CACEtrC,KAAK,oBACL/F,MAAM,CACJsK,SAAUvK,KAAKC,MAAM8F,SAAW,EAAI,MAK5C,CACEwe,MAAM,eACNotB,KAAK3xC,KAAKsC,cAAcwJ,gBAAgB,CAAC,WAAW,0BACpD7L,MAAM,CACJT,MAAM,CAAC,IAAK,KAEd8xC,OAAO,CACL,CACEtrC,KAAK,wBACL/F,MAAM,CACJsK,SAAS,QAgDfvK,KAAKC,MA9GX,CA+GEqK,gBAAiBimC,MAKvBvwC,KAAKoC,MAAM6rC,iBACT5qC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPD,GAAI,CAAC,EAAE,GACPyN,GAAI,mBACJtN,cAAe,UAEf2D,EAAAjE,EAAAC,cAAC2vB,GAAA,EAAD,CAAO5nB,GAAI,CAAC,EAAE,IAAd,aACA/D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPC,WAAY,SACZC,cAAe,SACfK,eAAgB,UAEhBsD,EAAAjE,EAAAC,cAAC6yC,GAAD/wC,OAAAC,OAAA,CACEmlC,KAAMvmC,KAAKoC,MAAM6rC,gBACjBvsC,YAAc1B,KAAKC,MAAM8F,SAAW,SAAC9F,GAAD,MAA8B,YAAnBA,EAAMgmC,IAAI7hC,QAAsBnE,EAAMgmC,IAAIkM,cAAgB3lC,EAAKlK,cAAc8vC,WAAWnyC,EAAMgmC,IAAIkM,eAAgB,KACjK9kC,KAAM,CACJ,CACEkX,MAAM,WACNtkB,MAAM,CACJT,MAAM,CAAC,IAAK,MAEd8xC,OAAO,CACL,CACExiC,KAAK,QACLg3B,KAAK,CAAC,iBACN7lC,MAAM,CACJE,GAAG,CAAC,EAAE,GACN+C,KAAKlD,KAAKC,MAAM8F,SAAW,QAAU,UAGzC,CACE+I,KAAK,OACLg3B,KAAK,CAAC,mBAIZ,CACEvhB,MAAM,UACNtkB,MAAM,CACJT,MAAM,CAAC,IAAM,MAEf8xC,OAAO,CACL,CACExiC,KAAK,SACLg3B,KAAK,CAAC,WACN7lC,MAAM,CACJsK,SAAU,IAGd,CACEuE,KAAK,OACLg3B,KAAK,CAAC,SACN7lC,MAAM,CACJyH,GAAG,CAAC,EAAE,GACN9H,MAAM,CACJc,cAAc,iBAMxB,CACE6wC,QAAO,EACPhtB,MAAM,kBACNtkB,MAAM,CACJT,MAAM,IACNO,eAAe,CAAC,SAAS,eAE3BuxC,OAAO,CACL,CACExiC,KAAK,OACLg3B,KAAK,CAAC,kBACN7lC,MAAM,MAMZ,CACEsxC,QAAO,EACPhtB,MAAM,WACNtkB,MAAM,CACJT,MAAM,IACNO,eAAe,CAAC,SAAS,eAE3BuxC,OAAO,CACL,CACExiC,KAAK,OACLg3B,KAAK,CAAC,qBACN7lC,MAAM,MAMZ,CACEskB,MAAM,SACNtkB,MAAM,CACJT,MAAM,CAAC,IAAK,KACZO,eAAe,CAAC,SAAS,eAE3BuxC,OAAO,CACL,CACExiC,KAAK,OACL9I,KAAK,SACL8/B,KAAK,CAAC,cACN7lC,MAAM,CACJE,GAAG,CAAC,EAAE,GACN+C,KAAKlD,KAAKC,MAAM8F,SAAW,QAAU,UAGzC,CACEC,KAAK,SACL8/B,KAAK,CAAC,UACN7lC,MAAM,CACJL,MAAM,CACJc,cAAc,kBAMxB,CACE6jB,MAAM,GACNgtB,QAAO,EACPtxC,MAAM,CACJT,MAAM,KAER+jC,YAAY,CACV/jC,MAAM,GAER8xC,OAAO,CACL,CACExiC,KAAK,SACL9I,KAAK,SACLrF,MAAM,aACN8kC,UAAU,CACRngB,SAAS,SAACrlB,GAAD,MAA+B,YAAnBA,EAAMgmC,IAAI7hC,SAEjCnE,MAAM,CACJT,MAAM,EACNe,SAAS,EACTC,WAAW,EACXJ,OAAO,OACPC,aAAa,EACbgB,UAAU,KACVC,UAAU,SACV4B,KAAMlD,KAAKC,MAAM8F,SAAW,QAAU,SACtCrE,YAAY,SAACzB,GAAD,MAA8B,YAAnBA,EAAMgmC,IAAI7hC,QAAsBnE,EAAMgmC,IAAIkM,cAAgB3lC,EAAKlK,cAAc8vC,WAAWnyC,EAAMgmC,IAAIkM,qBAM/HnyC,KAAKC,UAOjBD,KAAKoC,MAAM8rC,gBAAgBnpC,OAAO,GAChC1B,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPwN,GAAG,sBACHtN,cAAe,UAEf2D,EAAAjE,EAAAC,cAAC2vB,GAAA,EAAD,CAAO5nB,GAAI,CAAC,EAAE,IAAd,sBACA/D,EAAAjE,EAAAC,cAACgzC,GAADlxC,OAAAC,OAAA,GACMpB,KAAKC,MADX,CAEEyL,cAAe1L,KAAKoC,MAAM8rC,oBAKhCluC,KAAKC,MAAM2L,SAAW5L,KAAKoC,MAAM8rC,gBAAgBnpC,OAAO,GACtD1B,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/D,GAAI,CAAC,EAAE,GACPC,MAAO,EACPwN,GAAI,eACJtN,cAAe,UAEf2D,EAAAjE,EAAAC,cAAC2vB,GAAA,EAAD,CAAO5nB,GAAI,CAAC,EAAE,IAAd,gBACA/D,EAAAjE,EAAAC,cAAC0I,GAAA,EAAD5G,OAAAC,OAAA,GACMpB,KAAKC,MADX,CAEEyL,cAAe,GACf2B,KAAM,CACJ,CACEkX,MAAOvkB,KAAKC,MAAM8F,SAAW,GAAK,OAClC9F,MAAM,CACJT,MAAM,CAAC,IAAK,MAEd8xC,OAAO,CACL,CACEtrC,KAAK,OACL/F,MAAM,CACJE,GAAG,CAAC,EAAE,KAGV,CACE6F,KAAK,OACLurC,QAAO,KAIb,CACEhtB,MAAM,SACNgtB,QAAO,EACPtxC,MAAM,CACJT,MAAM,KAER8xC,OAAO,CACL,CACEtrC,KAAK,YAIX,CACEue,MAAM,OACNtkB,MAAM,CACJT,MAAM,CAAC,IAAK,MAEd8xC,OAAO,CACL,CACEtrC,KAAK,UAIX,CACEue,MAAM,SACNtkB,MAAM,CACJT,MAAM,CAAC,IAAK,KACZO,eAAe,CAAC,SAAS,eAE3BuxC,OAAO,CACL,CACEtrC,KAAK,aACL/F,MAAM,CACJE,GAAG,CAAC,EAAE,KAGV,CACEoxC,QAAO,EACPvrC,KAAK,YAIX,CACEue,MAAM,SACNtkB,MAAM,CACJT,MAAM,KAER8xC,OAAO,CACL,CACEtrC,KAAK,YAIX,CACEue,MAAM,QACNtkB,MAAM,CACJT,MAAM,CAAC,IAAK,IACZO,eAAe,CAAC,SAAS,eAE3BuxC,OAAO,CACL,CACEtrC,KAAK,YACL/F,MAAM,CACJE,GAAG,CAAC,EAAE,GACNC,OAAO,CAAC,QAAQ,WAGpB,CACEmxC,QAAO,EACPvrC,KAAK,qBA9kDvB3C,EAAAjE,EAAAC,cAACsN,EAAA,EAAD,CACEI,UAAW,CACTulC,SAAS,EACT9xC,WAAW,GAEbsM,YAAa,CACXvN,GAAG,EACH2D,KAAK,QAEP0J,UAAW,CACTC,UAAU,OACVnN,cAAc,UAEhB2C,KAAM,iCAhROrB,oDCwwCZuxC,8MA9vCbnwC,MAAQ,CACNowC,UAAS,EACTC,YAAY,GACZC,YAAW,EACXppC,OAAO,UACPkmC,cAAc,GACdnlC,YAAY,KACZ6T,WAAW,CACTy0B,QAAQ,CACNplC,OAAO,KACPpF,SAAQ,GAEVyqC,MAAM,CACJrlC,OAAO,KACPpF,SAAQ,IAGZ0qC,WAAU,EACVnD,aAAa,GACboD,cAAc,KACd1e,eAAc,EACd2e,cAAa,EACbC,cAAa,EACb5oC,cAAc,KACdiqB,eAAc,EACd4e,eAAe,KACfC,gBAAe,EACfC,gBAAe,EACf7oC,gBAAgB,KAChBwN,iBAAiB,KACjBs7B,iBAAgB,EAChBC,kBAAiB,EACjBC,kBAAiB,EACjBC,oBAAmB,EACnB3M,oBAAoB,KACpBgC,oBAAoB,KACpB4K,qBAAoB,EACpBC,2BAA0B,EAC1B/hB,2BAA2B,QAI7BpvB,cAAgB,OA+ZhB87B,UAAY,SAAC90B,GACX,GAAe,OAAXA,GAAmB,CAAC,UAAU,UAAUM,SAASN,EAAOC,eAAe,CAEzE9E,EAAKzB,SAAS,CACZsG,SACAiqC,oBAHyB,QAc/BG,yBAA2B,SAACJ,GAC1B7uC,EAAKzB,SAAS,CACZswC,wBAIJK,kBAAoB,SAAClqC,GACnBhF,EAAKmvC,aAAY,+EAnbb5zC,KAAKsC,cACPtC,KAAKsC,cAAcC,SAASvC,KAAKC,OAEjCD,KAAKsC,cAAgB,IAAIE,IAAcxC,KAAKC,4JAK9CD,KAAKyC,YACLzC,KAAK6zC,sMAGkB50C,EAAUC,sFACjCc,KAAKyC,YAEoBxD,EAAU60C,UAAUC,SAAW/zC,KAAKC,MAAM6zC,UAAUC,QAE3E/zC,KAAKgD,SAAS,CACZowC,iBAAgB,GADlBjyC,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAEE,SAAAkJ,IAAA,OAAA8S,EAAAzyB,EAAA6W,KAAA,SAAAiJ,GAAA,cAAAA,EAAA/I,KAAA+I,EAAA9I,MAAA,cAAA8I,EAAA9I,KAAA,EACMhR,EAAKuuB,aADX,wBAAAzU,EAAAtI,SAAAmI,EAAA/e,UAK4Bd,EAAU4Y,mBAAqB9X,KAAKoC,MAAM0V,mBAElE1N,EAAgBjJ,OAAOqF,KAAKxG,KAAKoC,MAAMkI,iBAAiB,GAC9DtK,KAAKsxB,YAAYlnB,IAGbyhB,EAAuB3sB,EAAUkL,gBAAkBpK,KAAKoC,MAAMgI,cAC9D4pC,EAA0B90C,EAAUm0C,mBAAqBrzC,KAAKoC,MAAMixC,iBACpEna,EAA0Bh6B,EAAUu0C,4BAA8BzzC,KAAKoC,MAAMqxC,2BAC/E5nB,GAAwBqN,GAA2B8a,IACrDh0C,KAAK4zC,6QAOS,EAEVK,EAAkB,SAACxqC,EAAGsU,GAC1B,IAAMoW,EAA4B,YAAd1qB,EAAGrF,OAGjBmxB,EAAY,CAChB9C,YAAa,UACbD,cAAe,gBAGbzU,IACFwX,EAAU7C,WAAanmB,EAAKjK,cAAckzB,oBAAoBzX,KAI5DA,GAA8B,UAArBwX,EAAUnxB,SACrBmI,EAAKjK,cAAciwB,yBAAyBgD,GAG9ChpB,EAAKvJ,SAAS,SAAC9D,GAAD,MAAgB,CAC5Bm0C,iBAAiBlf,EACjBjW,WAAW/c,OAAAuD,EAAA,EAAAvD,CAAA,GACNjC,EAAUgf,WADL,CAERy0B,QAAQ,CACNplC,OAAO,KACPpF,SAAQ,SAMV+rC,EAAyB,SAACzqC,GAC9B,IAAM8D,EAAS9D,EAAGgsB,gBAClBlpB,EAAKvJ,SAAS,SAAC9D,GAAD,MAAgB,CAC5Bgf,WAAW/c,OAAAuD,EAAA,EAAAvD,CAAA,GACNjC,EAAUgf,WADL,CAERy0B,QAAQxxC,OAAAuD,EAAA,EAAAvD,CAAA,GACHjC,EAAUgf,WAAWy0B,QADnB,CAELplC,iBAMRvN,KAAKC,MAAMw2B,0BAA0Bz2B,KAAKoC,MAAMwkC,oBAAoBuN,kBAAkBnuC,KAAM,eAAgB,EAAC,GAAO,KAAMiuC,EAAiBC,GAE3Il0C,KAAKgD,SAAS,SAAC9D,GAAD,MAAgB,CAC5Bgf,WAAW/c,OAAAuD,EAAA,EAAAvD,CAAA,GACNjC,EAAUgf,WADL,CAERy0B,QAAQxxC,OAAAuD,EAAA,EAAAvD,CAAA,GACHjC,EAAUgf,WAAWy0B,QADnB,CAELxqC,SApDU,oUA0DAorC,kCAEVa,EAAwBp0C,KAAKoC,MAAMwkC,oBAAoBuN,2BAEvDv1B,QAAQkD,IAAI,CAChB9hB,KAAKC,MAAM+wB,aAAaojB,EAAsBpuC,KAAKouC,EAAsB3gC,QAAQ2gC,EAAsBnjB,KACvGjxB,KAAKC,MAAM+wB,aAAahxB,KAAKoC,MAAMiI,YAAYrE,KAAKhG,KAAKoC,MAAMiI,YAAYoJ,QAAQzT,KAAKoC,MAAMiI,YAAY4mB,8BAOlGrS,QAAQkD,IAAI,CACpB9hB,KAAKsC,cAAc+xC,4BAA4BD,EAAsB3gC,SACrEzT,KAAKsC,cAAcw3B,oBAAoB95B,KAAKoC,MAAMwkC,oBAAoBuN,kBAAkBnuC,KAAK,aAC7FhG,KAAKsC,cAAc40B,mBAAmBl3B,KAAKoC,MAAMiI,YAAYrE,KAAKouC,EAAsB3gC,QAAQzT,KAAKC,MAAM2L,8CAN3G0oC,OACArB,OACAQ,OAQEZ,GAAY,GACXY,GAA6BW,EAAsBG,WAAwD,IAA3CH,EAAsBG,UAAUxvC,SAC7FyvC,EAAeJ,EAAsBG,UAAU,GACrD1B,EAA8C,qBAA3B2B,EAAa3B,WAA4B2B,EAAa3B,UACnE4B,EAAcz0C,KAAKsC,cAAcwJ,gBAAgB,CAAC,SAAS9L,KAAKoC,MAAMiI,YAAYrE,KAAK,gBACvF0uC,EAAiB10C,KAAKsC,cAAcuxB,kBAAkB7zB,KAAKoC,MAAMiI,YAAYrE,MACnF6sC,EAAYA,GAAa6B,KAAoBD,QAAuDzvC,IAAxC0vC,EAAeC,QAAQF,KAG/E9jC,EAAW,GACX8hC,EAAc,GACd/C,EAAe,GACfF,EAAgB,GAClB0D,GAAiB,EAErBD,EAAiBA,GAAkB,EAC1B2B,EAAa,eAAGA,GAActoC,SAAS2mC,sCAKpCr0B,QAAQkD,IAAI,CACpB9hB,KAAKsC,cAAcw3B,oBAAoB95B,KAAKoC,MAAMwkC,oBAAoBuN,kBAAkBnuC,KAAK,cAAc,CAAC4uC,IAC5G50C,KAAKsC,cAAcw3B,oBAAoB95B,KAAKoC,MAAMwkC,oBAAoBuN,kBAAkBnuC,KAAK,sBAAsB,CAAC4uC,IACpH50C,KAAKsC,cAAcw3B,oBAAoB95B,KAAKoC,MAAMwkC,oBAAoBuN,kBAAkBnuC,KAAK,gBAAgB,CAAChG,KAAKC,MAAM2L,QAAQgpC,0CANjIC,OACAC,OACAC,OAMEF,GAA6B,OAAfA,IAChBpC,EAAYmC,GAAc50C,KAAKsC,cAAc0W,iBAAiB67B,EAAW70C,KAAKoC,MAAMiI,YAAYE,WAE7E,OAAjBwqC,IACFD,EAAc90C,KAAKsC,cAAc0W,iBAAiB87B,EAAY,KAC9DC,EAAe/0C,KAAKsC,cAAc0W,iBAAiB+7B,EAAa/0C,KAAKoC,MAAMiI,YAAYE,WACtE4O,GAAG,KAClBq2B,EAAcoF,GAAcG,EAE5BrF,EAAakF,GAAcG,EAAaphC,MAAMmhC,GAAa9zB,IAAIyxB,EAAYmC,IACvElF,EAAakF,GAAYz7B,GAAG27B,KAC9BpF,EAAakF,GAAcE,GAGzBF,EAAa3B,IACfC,GAAiB,aAzByC0B,4BA+BlEjkC,EAAS6+B,cAAgBA,EAEnBuD,EAAgBvD,GAAiBruC,OAAOqF,KAAKgpC,GAAezqC,OAAO,EAEnE+tC,EAAgBwB,GAAmBA,EAAgBvvC,OAASuvC,EAAgB,GAAK,KACjFU,EAAmBh1C,KAAKsC,cAAcwJ,gBAAgB,CAAC,QAAQ,iBAC/D0nC,EAAsBwB,EAAiBC,eAE7CtkC,EAASkiC,UAAYA,EACrBliC,EAAS0jB,eAAgB,EACzB1jB,EAASwiC,gBAAiB,EAC1BxiC,EAASyiC,iBAAkB,EAC3BziC,EAAS0iC,kBAAmB,EAC5B1iC,EAAS8hC,YAAcA,EACvB9hC,EAASoiC,aAAeA,EACxBpiC,EAAS++B,aAAeA,EACxB/+B,EAASmiC,cAAgBA,EACzBniC,EAASsiC,eAAiBA,EAC1BtiC,EAASuiC,eAAiBA,EAC1BviC,EAAS4iC,mBAAqBA,EAC9B5iC,EAAS6iC,oBAAsBA,EAC/B7iC,EAAS6hC,SAAWU,GAAkBH,EAEtCpiC,EAAS+hC,WAAac,IAAwBN,EAC9CviC,EAAS8iC,0BAA4BA,EACrC9iC,EAASrH,OAASypC,GAAgBpiC,EAAS6hC,SAAW,SAAW,UAEjExyC,KAAKgD,SAAS2N,mRAMRukC,EAA0B,YAC1Bl1C,KAAKsC,cAAcmT,aAAatU,OAAOqF,KAAKxG,KAAKC,MAAM6wB,UAAUxmB,iBAAjE,eAAA6qC,EAAAh0C,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAAkF,SAAA+K,EAAOjX,GAAP,IAAAU,EAAA,OAAAwnB,EAAAzyB,EAAA6W,KAAA,SAAA8K,GAAA,cAAAA,EAAA5K,KAAA4K,EAAA3K,MAAA,UAChF/L,EAAcmC,EAAKvM,MAAM6wB,UAAUxmB,gBAAgBX,GACnC6C,EAAKlK,cAAcuxB,kBAAkBxpB,EAAYV,SACjDU,EAAY4mB,IAHoD,CAAAlQ,EAAA3K,KAAA,eAAA2K,EAAA3K,KAAA,EAI9E5J,EAAKvM,MAAM+wB,aAAa3mB,EAAYV,MAAMU,EAAYoJ,QAAQpJ,EAAY4mB,KAJI,OAMtFikB,EAAwB7qC,EAAYilC,WAAY,EANsC,wBAAAvuB,EAAAnK,SAAAgK,EAAA5gB,SAAlF,gBAAA6W,GAAA,OAAAs+B,EAAAr+B,MAAA9W,KAAA8E,YAAA,YASA8jC,EAAsBznC,OAAOqF,KAAK0uC,GAAyBxuC,IAAK,SAAA4oC,GACpE,IAAM8F,EAAiB5oC,EAAKlK,cAAcwJ,gBAAgB,CAAC,aAAawjC,IACxE,MAAO,CACLvuC,MAAMuuC,EACNp7B,KAAKkhC,EAAelhC,KACpBvT,MAAMy0C,EAAe7wB,WAMEqkB,EAAoB7jC,OAAO,IAChD+S,EAAmB8wB,EAAoB,GAAG7nC,OAC1CqJ,EAAgBpK,KAAKC,MAAM6zC,UAAUC,QAAU/zC,KAAKC,MAAM6wB,UAAUxmB,gBAAgBtK,KAAKC,MAAM6zC,UAAUC,QAAU/zC,KAAKC,MAAM6zC,UAAUC,OAAS,QAE7InN,EAAsB5mC,KAAKC,MAAM6wB,UAAUxmB,gBAAgBF,GACjEA,EAAgBw8B,EAAoBhV,UACpC9Z,EAAmB8uB,EAAoB0I,UAGzCtvC,KAAKgD,SAAS,CACZ4lC,uBACA,WACAp8B,EAAK6oC,eAAev9B,EAAiB1N,uLAcrB0N,8FAAiB1N,iCAAc,KAC7CE,EAAkBnJ,OAAOqF,KAAKxG,KAAKC,MAAM6wB,UAAUxmB,iBACtD9F,OAAO,SAAAqC,GAAG,OAAIs1B,EAAKl8B,MAAM6wB,UAAUxmB,gBAAgBzD,GAAKyoC,WAAax3B,IACrEoZ,OAAO,SAACokB,EAAKzuC,GACZ,IAAMwD,EAAc8xB,EAAKl8B,MAAM6wB,UAAUxmB,gBAAgBzD,GACnD0uC,EAAkBpZ,EAAKl8B,MAAM2oC,oBAAoB9wB,GAAkBzN,EAAYunB,WAOrF,OALAvnB,EAAY4mB,IAAMskB,EAAgBtkB,IAClC5mB,EAAYV,MAAQ4rC,EAAgB5rC,MACpCU,EAAYoJ,QAAU8hC,EAAgB9hC,QACtCpJ,EAAYE,SAAWgrC,EAAgBhrC,SACvC+qC,EAAIjrC,EAAYunB,WAAavnB,EACtBirC,GACN,IAELt1C,KAAKgD,SAAS,CACZsH,kBACAwN,oBACA,WACI1N,GACF+xB,EAAK7K,YAAYlnB,oLAKJA,iGACXw8B,EAAsB5mC,KAAKoC,MAAMkI,gBAAgBF,GACjDorC,EAA0Bx1C,KAAKC,MAAM2oC,oBAAoBhC,EAAoB0I,UAE7EiG,EAAkBC,EAAwB5O,EAAoBj9B,QAE9DU,EAAc,CAClBrE,KAAKuvC,EAAgB5rC,MACrBA,MAAM4rC,EAAgB5rC,MACtB8J,QAAQ8hC,EAAgB9hC,QACxBlJ,SAASgrC,EAAgBhrC,WAIfw8B,KAAOwO,EAAgBxO,KAG7B0O,EAAc,CAClBxkB,IAAIskB,EAAgBtkB,IACpBjrB,KAAKuvC,EAAgB5rC,MACrBA,MAAM4rC,EAAgB5rC,MACtB8J,QAAQ8hC,EAAgB9hC,SAGpB0gC,EAAoBvN,EAAoBuN,kBAG1CoB,EAAgBG,kBAClBvB,EAAkBI,UAAU,GAAGvuC,KAAOuvC,EAAgBG,iBAGxDrrC,EAAYsrC,UAAY,CACtBxkB,SAAQ,EACRskB,cACAtB,oBACAZ,oBAAmB,aAGfvzC,KAAKC,MAAM21C,iBAAiBhP,EAAoB0I,SAASiG,EAAgB5rC,eAE/E3J,KAAKgD,SAAS,CACZqH,cACAD,gBACAw8B,uBACA,WAEA,GAAIA,EAAoB0I,WAAajS,EAAKj7B,MAAM0V,iBAAiB,CAC/D,IAAMA,EAAmB8uB,EAAoB0I,SAC7CjS,EAAKgY,eAAev9B,sQAMnB9X,KAAKoC,MAAM8wC,wDACP,cAGO,EACO,EACjB2C,EAAU10C,OAAOqF,KAAKxG,KAAKoC,MAAMotC,eAAe,GAEhDsG,EAAgB,SAACrsC,EAAGsU,GACxB,IAAMoW,EAA4B,YAAd1qB,EAAGrF,OAGjBmxB,EAAY,CAChB9C,YAAa,QACbD,cAAa,eACb6D,WAAY/pB,SAVO,GAWnBomB,WAAY6K,EAAKt9B,MAAMmK,eAGrB2T,IACFwX,EAAU7C,WAAa6K,EAAKj7B,cAAckzB,oBAAoBzX,KAI5DA,GAA8B,UAArBwX,EAAUnxB,SACrBm5B,EAAKj7B,cAAciwB,yBAAyBgD,GAG9CgI,EAAKv6B,SAAS,SAAC9D,GAAD,MAAgB,CAC5Bi0C,eAAehf,EACfjW,WAAW/c,OAAAuD,EAAA,EAAAvD,CAAA,GACNjC,EAAUgf,WADL,CAER00B,MAAM,CACJrlC,OAAO,KACPpF,SAAQ,SAMV4tC,EAAuB,SAACtsC,GAC5B,IAAM8D,EAAS9D,EAAGgsB,gBAClB8H,EAAKv6B,SAAS,SAAC9D,GAAD,MAAgB,CAC5Bgf,WAAW/c,OAAAuD,EAAA,EAAAvD,CAAA,GACNjC,EAAUgf,WADL,CAER00B,MAAMzxC,OAAAuD,EAAA,EAAAvD,CAAA,GACDjC,EAAUgf,WAAW00B,MADrB,CAEHrlC,iBAMRvN,KAAKC,MAAMw2B,0BAA0Bz2B,KAAKoC,MAAMwkC,oBAAoBuN,kBAAkBnuC,KAAM,WAAY,CAAC6vC,GAAU,KAAMC,EAAeC,GAExI/1C,KAAKgD,SAAS,SAAC9D,GAAD,MAAgB,CAC5Bgf,WAAW/c,OAAAuD,EAAA,EAAAvD,CAAA,GACNjC,EAAUgf,WADL,CAER00B,MAAMzxC,OAAAuD,EAAA,EAAAvD,CAAA,GACDjC,EAAUgf,WAAW00B,MADrB,CAEHzqC,SAxDU,4PA+DhBnI,KAAKgD,SAAS,CACZgwC,cAAa,8IAKfhzC,KAAKgD,SAAS,CACZqxB,eAAc,oFAIIof,mEAEhBA,IAA8BzzC,KAAKoC,MAAMqxC,2BAC3CzzC,KAAKgD,SAAS,CACZywC,6KAecrf,GAClBp0B,KAAKgD,SAAS,CACZoxB,mDAcK,IAAAwO,EAAA5iC,KAEP,IAAKA,KAAKoC,MAAM0V,iBACd,OAAO,KAGT,IAAM+6B,EAAY7yC,KAAKoC,MAAMgyB,eAAiBp0B,KAAKoC,MAAMywC,UAEnDiC,EAAc90C,KAAKoC,MAAMstC,cAAgBvuC,OAAOwG,OAAO3H,KAAKoC,MAAMstC,cAAc3qC,OAAO,EAAI5D,OAAOwG,OAAO3H,KAAKoC,MAAMstC,cAAc,GAAK,KACvIqF,EAAe/0C,KAAKoC,MAAMotC,eAAiBruC,OAAOwG,OAAO3H,KAAKoC,MAAMotC,eAAezqC,OAAO,EAAI5D,OAAOwG,OAAO3H,KAAKoC,MAAMotC,eAAe,GAAK,KAC3Ijb,EAAoBse,GAAa7yC,KAAKoC,MAAM4wC,eAAmBH,GAAa7yC,KAAKoC,MAAMqxC,0BACvFuC,EAAkBh2C,KAAKoC,MAAMqwC,aAAezyC,KAAKoC,MAAMqwC,YAAYzyC,KAAKoC,MAAM6wC,iBAAmBjzC,KAAKoC,MAAMqwC,YAAYzyC,KAAKoC,MAAM6wC,gBAAgB95B,GAAG,GACtJ88B,EAAuBj2C,KAAKoC,MAAM0V,iBAAmB9X,KAAKoC,MAAMwmC,oBAAoB1d,KAAM,SAAAiP,GAAC,OAAIA,EAAEp5B,QAAU6hC,EAAKxgC,MAAM0V,mBAAqB9X,KAAKoC,MAAMwmC,oBAAoB,GAwGhL,OACEvlC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACP0G,GAAI,CAAC,EAAE,GACPzG,WAAY,SACZC,cAAe,SACfK,eAAgB,UAEhBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,CAAC,EAAE,KACVC,WAAY,UACZC,cAAe,SACfK,eAAgB,UAEhBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,GAEP6D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/D,GAAI,GADN,wBAKA8D,EAAAjE,EAAAC,cAAC4sB,EAAA,EAAD9qB,OAAAC,OAAA,GACMpB,KAAKC,MADX,CAEE+F,KAAM,WACN+lB,cAAc,EACdhB,aAAckrB,EACdjrB,kBAjIgB,SAAA/qB,GACxB,IAAMU,EAAQV,EAAMU,MACd0J,EAAc,CAClB6J,KAAKjU,EAAM8P,KAAKmE,MAGlB,OACE7Q,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPC,WAAY,SACZC,cAAe,MACfK,eAAgB,iBAEhBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE7D,WAAY,UAEZ4D,EAAAjE,EAAAC,cAACgyB,EAAA,EAAD,CACE1nB,MAAOhJ,EACP0J,YAAaA,EACb+gB,UAAW,CACTplB,KAAK,OACL/F,MAAM,CACJE,GAAG,EACHX,MAAM,MACNY,OAAO,UAIbiD,EAAAjE,EAAAC,cAACgyB,EAAA,EAAD,CACE1nB,MAAOhJ,EACPyqB,UAAW,CACTplB,KAAK,YACL/F,MAAM,CACJM,SAAS,CAAC,EAAE,GACZC,WAAW,IACXN,MAAM,mBA+FV4qB,QAAS9qB,KAAKoC,MAAMwmC,oBACpBrhC,SAAUvH,KAAKq1C,eAAeloC,KAAKnN,MACnCirB,qBAxFmB,SAAAhrB,GAE3B,IACMwrB,GAA4D,IADlDxrB,EAAMwrB,YAAYX,QACNY,QAAQzrB,EAAMwrB,YAAY1qB,OAAgBd,EAAMwrB,YAAY1qB,MAAQ,KAEhG,IAAK0qB,EACH,OAAO,KAGT,IAAM9qB,EAAQ8qB,EAAY9qB,MACpB0J,EAAc,CAClB6J,KAAKuX,EAAYvX,MAGnB,OACE7Q,EAAAjE,EAAAC,cAACiE,EAAA,EAADnC,OAAAC,OAAA,CACExB,MAAO,CACLE,KAAK,KAEPC,eAAgB,iBACZE,EAAM0rB,YAEVtoB,EAAAjE,EAAAC,cAACiE,EAAA,EAADnC,OAAAC,OAAA,CACEgO,EAAG,EACH5P,MAAO,GACHS,EAAM0rB,WAHZ,CAIElsB,WAAY,SACZC,cAAe,MACfE,MAAO,CAACkG,OAAO,WACf/F,eAAgB,eAEhBsD,EAAAjE,EAAAC,cAACgyB,EAAA,EAAD,CACE1nB,MAAOhJ,EACP0J,YAAaA,EACb+gB,UAAW,CACTplB,KAAK,OACL/F,MAAM,CACJE,GAAG,EACHC,OAAO,UAIbiD,EAAAjE,EAAAC,cAACgyB,EAAA,EAAD,CACE1nB,MAAOhJ,EACPyqB,UAAW,CACTplB,KAAK,YACL/F,MAAM,CACJM,SAAS,CAAC,EAAE,GACZC,WAAW,IACXN,MAAM,uBA2CZF,KAAKoC,MAAMkI,iBACTjH,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ1G,MAAO,GAEP6D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/D,GAAI,GADN,4BAKA8D,EAAAjE,EAAAC,cAACwrB,EAAA,EAAD1pB,OAAAC,OAAA,GACMpB,KAAKC,MADX,CAEE+M,GAAI,aACJwe,aAAa,EACbO,cAAc,EACdxkB,SAAUvH,KAAKsxB,YAAYnkB,KAAKnN,MAChCoK,cAAepK,KAAKoC,MAAMgI,cAC1BE,gBAAiBtK,KAAKoC,MAAMkI,qBAKjCtK,KAAKoC,MAAMgxC,iBACV/vC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJxG,cAAe,UAEf2D,EAAAjE,EAAAC,cAACsN,EAAA,EAAD,CACEC,UAAW,CACTlN,cAAc,OAEhBoN,YAAa,CACX5J,KAAK,QAEP6J,UAAW,CACTrF,GAAG,GAELrF,KAAM,2BAMXrC,KAAKC,MAAM2L,QAmCR5L,KAAKoC,MAAMgxC,iBAAoBpzC,KAAKoC,MAAMwkC,sBAAwB5mC,KAAKoC,MAAMswC,YAAc1yC,KAAKoC,MAAMowC,WACxGnvC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,GAEP6D,EAAAjE,EAAAC,cAACmG,EAAA,EAAD,CACEC,UAAW,CACT2J,EAAE,EACFzJ,GAAG,EACHO,GAAG,IAGL7C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE7D,WAAY,SACZC,cAAe,UAEf2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPC,WAAY,SACZC,cAAe,OAEf2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEJ,KAAM,QACN8C,KAAOuuB,EAAmB,WAAa,WACvCr0B,MAAQq0B,EAAmBv0B,KAAKC,MAAMoG,MAAMC,OAAOmF,aAAarH,OAAO0E,UAAY,aAErFzF,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEoE,GAAI,EACJnH,SAAU,EACVL,MAAO,WACPO,UAAW,QAGToyC,EAAY,uBAAyB,uCAI3CxvC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ1G,MAAO,EACPC,WAAY,SACZC,cAAe,OAEf2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEJ,KAAM,QACN8C,KAAQhG,KAAKoC,MAAM2wC,cAAgB/yC,KAAKoC,MAAM8wC,eAAkB,WAAa,WAC7EhzC,MAASF,KAAKoC,MAAM2wC,cAAgB/yC,KAAKoC,MAAM8wC,eAAkBlzC,KAAKC,MAAMoG,MAAMC,OAAOmF,aAAarH,OAAO0E,UAAY,aAE3HzF,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEoE,GAAI,EACJnH,SAAU,EACVL,MAAO,WACPO,UAAW,QAJb,gBAMgBT,KAAKoC,MAAMgI,gBAG7B/G,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ1G,MAAO,EACPC,WAAY,SACZC,cAAe,OAEf2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEJ,KAAM,QACN8C,KAAOhG,KAAKoC,MAAM8wC,eAAiB,WAAa,SAChDhzC,MAAQF,KAAKoC,MAAM8wC,eAAiBlzC,KAAKC,MAAMoG,MAAMC,OAAOmF,aAAarH,OAAO0E,UAAY,aAE9FzF,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEoE,GAAI,EACJnH,SAAU,EACVL,MAAO,WACPO,UAAW,QAJb,2BAOE4C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEoE,GAAI,EACJlH,WAAY,EACZN,MAAO,UACPiD,QAAS,SACT2E,WAAY,UACZrG,QAAU,SAAA+F,GAAC,OAAIo7B,EAAK3iC,MAAMi2C,iBAAiB,2BAA2BtT,EAAKtgC,cAAcwJ,gBAAgB,CAAC,WAAW,qCANvH,iBAYJzI,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ1G,MAAO,EACPC,WAAY,SACZC,cAAe,OAEf2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEJ,KAAM,QACN8C,KAAOhG,KAAKoC,MAAM+wC,eAAiB,WAAa,SAChDjzC,MAAQF,KAAKoC,MAAM+wC,eAAiBnzC,KAAKC,MAAMoG,MAAMC,OAAOmF,aAAarH,OAAO0E,UAAY,aAE9FzF,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPC,WAAY,SACZC,cAAe,MACfK,eAAgB,cAEhBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEoE,GAAI,EACJnH,SAAU,EACVL,MAAO,WACPO,UAAW,QAJb,cAMcT,KAAKoC,MAAMiI,YAAY08B,KAAKp9B,OAE1CtG,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEutC,UAAW,MACXC,QAAO,oFAAA1qC,OAAsFpG,KAAKoC,MAAMiI,YAAY08B,KAAKp9B,QAEzHtG,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEoE,GAAI,EACJxE,KAAM,QACN8C,KAAM,UACN9F,MAAO,UACPN,MAAO,CACLkG,OAAO,mBA3JvBzC,EAAAjE,EAAAC,cAACmG,EAAA,EAAD,CACEC,UAAW,CACT2J,EAAE,EACFlJ,GAAG,IAGL7C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE7D,WAAY,SACZC,cAAe,UAEf2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEJ,KAAMlD,KAAKC,MAAM8F,SAAW,QAAU,QACtCC,KAAM,QACN9F,MAAO,aAETmD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,CAAC,EAAE,GACP3F,SAAU,EACVL,MAAO,WACPO,UAAW,UAJb,uDAQA4C,EAAAjE,EAAAC,cAAC4B,EAAA,EAAD,CACEC,YAAa,CACXgF,GAAG,EACH1G,MAAM,CAAC,EAAE,KAEXkC,YAAa1B,KAAKC,MAAMslC,2BAL1B,aAgJNvlC,KAAKoC,MAAMgxC,iBAAmBpzC,KAAKC,MAAM2L,SAAW5L,KAAKoC,MAAMkI,iBAAmBtK,KAAKoC,MAAMgI,eAC3F/G,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAK9D,MAAO,IAEP+0B,GAAoBv0B,KAAKoC,MAAMowC,WAC9BnvC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJxG,cAAe,UAEf2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM/D,GAAI,GAAV,sBAGA8D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE7D,WAAY,SACZC,cAAe,MACfK,eAAgB,iBAEhBsD,EAAAjE,EAAAC,cAACmG,EAAA,EAAD,CACEC,UAAW,CACT2J,EAAE,EACF5P,MAAM,IACNgxB,YAAY,WACV,OAAOoS,EAAKxgC,MAAMswC,WAAa9P,EAAKxE,UAAU,WAAa,OAG/Dv4B,eAAe,EACfswC,YAAcn2C,KAAKoC,MAAMswC,WACzBjkB,SAAiC,YAAtBzuB,KAAKoC,MAAMkH,QAEtBjG,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE8D,GAAI,EACJ3H,WAAY,SACZC,cAAe,MACfK,eAAgB,UAEhBsD,EAAAjE,EAAAC,cAAC6O,GAAA,EAAD,CACEP,YAAa,CACXrE,OAAO,WAET8hB,UAAW,CACTplB,KAAK,OACL/F,MAAM,CACJE,GAAG,MAITkD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/C,SAAU,EACVC,WAAY,GAFd,aAQJ6C,EAAAjE,EAAAC,cAACmG,EAAA,EAAD,CACEC,UAAW,CACT2J,EAAE,EACF5P,MAAM,IACNgxB,YAAY,WACV,OAAOoS,EAAKxgC,MAAMowC,SAAW5P,EAAKxE,UAAU,UAAY,OAG5Dv4B,eAAe,EACfswC,YAAcn2C,KAAKoC,MAAMowC,SACzB/jB,SAAiC,WAAtBzuB,KAAKoC,MAAMkH,QAEtBjG,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE8D,GAAI,EACJ3H,WAAY,SACZC,cAAe,MACfK,eAAgB,UAEhBsD,EAAAjE,EAAAC,cAAC6O,GAAA,EAAD,CACEP,YAAa,CACXrE,OAAO,UAET8hB,UAAW,CACTplB,KAAK,OACL/F,MAAM,CACJE,GAAG,MAITkD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/C,SAAU,EACVC,WAAY,GAFd,aAYVR,KAAKoC,MAAMiyB,eAAuC,YAAtBr0B,KAAKoC,MAAMkH,QAAwBtJ,KAAKoC,MAAMywC,WAAa7yC,KAAKoC,MAAMkxC,mBAAqBtzC,KAAKoC,MAAMmxC,mBAChIlwC,EAAAjE,EAAAC,cAACmG,EAAA,EAAD,CACEC,UAAW,CACTC,GAAG,EACHC,GAAG,EACHO,GAAG,EACH/C,QAAQ,OACR1D,WAAW,SACXC,cAAc,SACdK,eAAe,WAGjBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPC,WAAY,SACZC,cAAe,SACfK,eAAgB,UAEhBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEJ,KAAM,QACNhD,MAAO,WACP8F,KAAM,qBAER3C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ3F,SAAU,EACVL,MAAO,WACPO,UAAW,UAEVT,KAAKoC,MAAMgI,cANd,iIASF/G,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJyxB,UAAU,EACVtwB,QAASrH,KAAKoC,MAAMgyB,cACpBzzB,MAAK,8CACL4G,SAAW,SAAAC,GAAC,OAAIo7B,EAAKhL,oBAAoBpwB,EAAEgH,OAAOnH,cAGnDrH,KAAKoC,MAAMiyB,eAAuC,YAAtBr0B,KAAKoC,MAAMkH,QAAwBtJ,KAAKoC,MAAMywC,WAAa7yC,KAAKoC,MAAMkxC,mBAAqBtzC,KAAKoC,MAAMmxC,oBACrIlwC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE8L,EAAG,EACHlJ,GAAI,EACJ1G,MAAO,EACPa,aAAc,EACdZ,WAAY,SACZC,cAAe,MACfK,eAAgB,UAEhBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE7C,UAAW,SACXqH,WAAY,UACZrG,QAASzB,KAAKq0B,cAAclnB,KAAKnN,OAHnC,2CAWkB,YAAtBA,KAAKoC,MAAMkH,OACTtJ,KAAKoC,MAAMoxC,oBACTnwC,EAAAjE,EAAAC,cAAC+2C,GAAA,EAADj1C,OAAAC,OAAA,GACMpB,KAAKC,MADX,CAEEo2C,aAAa,EACbxD,UAAWA,EACXyD,eAAe,EACfC,iBAAiB,EACjBC,qBAAqB,EACrBC,cAAe,eACfrzB,SAAU,uBACV/Y,YAAarK,KAAKoC,MAAMiI,YACxBD,cAAepK,KAAKoC,MAAMgI,cAC1BssC,gBAAiB,SAAAC,GAAS,MAAI,CAACA,IAC/B7+B,iBAAkB9X,KAAKC,MAAM6X,iBAC7B8+B,eAAgB52C,KAAK42C,eAAezpC,KAAKnN,MACzCo1B,gBAAiBp1B,KAAKo1B,gBAAgBjoB,KAAKnN,MAC3C2zC,kBAAmB3zC,KAAK2zC,kBAAkBxmC,KAAKnN,MAC/C0zC,yBAA0B1zC,KAAK0zC,yBAAyBvmC,KAAKnN,MAC7D62C,cAAa,gBAAAzwC,OAAkBpG,KAAKoC,MAAMgI,cAA7B,+CAAAhE,OAAwFpG,KAAKoC,MAAMiI,YAAY08B,KAAKp9B,MAApH,OAEbtG,EAAAjE,EAAAC,cAACmG,EAAA,EAAD,CACEC,UAAW,CACT2J,EAAE,EACFlJ,GAAG,IAGL7C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE7D,WAAY,SACZC,cAAe,UAEf2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE0C,KAAM,WACN9F,MAAO,WACPgD,KAAMlD,KAAKC,MAAM8F,SAAW,QAAU,UAExC1C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ3F,SAAU,EACVL,MAAO,WACPO,UAAW,UAJb,sBAMsBT,KAAKoC,MAAMgI,cANjC,uBAYN/G,EAAAjE,EAAAC,cAACmG,EAAA,EAAD,CACEC,UAAW,CACT2J,EAAE,EACFhI,GAAG,IAGL/D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE7D,WAAY,SACZC,cAAe,UAEf2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/C,SAAU,EACVL,MAAO,WACPO,UAAW,UAHb,+CAWN4C,EAAAjE,EAAAC,cAACmG,EAAA,EAAD,CACEC,UAAW,CACT2J,EAAE,EACFlJ,GAAG,IAIHlG,KAAKoC,MAAM8b,WAAW00B,MAAMzqC,QAC1B9E,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE5D,cAAe,UAEf2D,EAAAjE,EAAAC,cAACye,EAAA,EAAD3c,OAAAC,OAAA,GAAmBpB,KAAKC,MAAxB,CAA+Bmf,KAAMpf,KAAKC,MAAMmf,KAAMgE,SAAQ,qBAAwBD,WAAU,gCAAmCtgB,KAAM7C,KAAKoC,MAAM8b,WAAW00B,MAAMrlC,WAErKvN,KAAKoC,MAAM+wC,eACb9vC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE7D,WAAY,SACZC,cAAe,UAEf2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE0C,KAAM,UACN9C,KAAMlD,KAAKC,MAAM8F,SAAW,QAAU,QACtC7F,MAAOF,KAAKC,MAAMoG,MAAMC,OAAOmF,aAAarH,OAAO0E,YAErDzF,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,CAAC,EAAE,GACP3F,SAAU,EACVL,MAAO,WACPO,UAAW,UAJb,wCAMwCT,KAAKoC,MAAMiI,YAAY08B,KAAKp9B,MANpE,KAQAtG,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJzF,UAAW,SACXqH,WAAY,UACZrG,QAAU,SAAA+F,GAAC,OAAIo7B,EAAK3iC,MAAMuxC,YAAY5O,EAAKxgC,MAAMwkC,oBAAoB0I,SAAS,IAAI1M,EAAKxgC,MAAMwkC,oBAAoBhV,aAJnH,wBASA5xB,KAAKoC,MAAM8wC,eACb7vC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE7D,WAAY,SACZC,cAAe,UAEf2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEJ,KAAMlD,KAAKC,MAAM8F,SAAW,QAAU,QACtC7F,MAAO,WACP8F,KAAM,eAER3C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/C,SAAU,EACVL,MAAO,WACPO,UAAW,UAHb,+BAK8B4C,EAAAjE,EAAAC,cAAA,WAL9B,0BAK4Dy1C,EAAY/pC,QAAQ,GALhF,IAKqF/K,KAAKoC,MAAMiI,YAAY08B,KAAKp9B,OAEjHtG,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/C,SAAU,EACVL,MAAO,UACPO,UAAW,UAHb,2BAK2BT,KAAKoC,MAAMiI,YAAY08B,KAAKp9B,MALvD,iCAOAtG,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPC,WAAY,SACZC,cAAe,SACfK,eAAgB,iBAEhBsD,EAAAjE,EAAAC,cAAC4B,EAAA,EAAD,CACEC,YAAa,CACXgF,GAAG,EACH1G,MAAM,CAAC,EAAE,IACT8B,UAAUtB,KAAKC,MAAMoG,MAAMC,OAAOiC,QAEpC7G,YAAc,SAAA8F,GAAC,OAAIo7B,EAAKgQ,UAN1B,WAaJvvC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE7D,WAAY,SACZC,cAAe,UAEf2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEJ,KAAM,QACNhD,MAAO,WACP8F,KAAM,mBAER3C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,CAAC,EAAE,GACP3F,SAAU,EACVL,MAAO,WACPO,UAAW,UAEX4C,EAAAjE,EAAAC,cAACiE,EAAA,EAAK+f,KAAN,CACEnjB,MAAO,YADT,mCAGkCmD,EAAAjE,EAAAC,cAAA,cAAS01C,EAAahqC,QAAQ,GAA9B,IAAmC/K,KAAKoC,MAAMgI,eAHhF,2DAGgKpK,KAAKoC,MAAMiI,YAAY08B,KAAKp9B,MAH5L,QAaZ3J,KAAKoC,MAAMqwC,YAAYzyC,KAAKoC,MAAM6wC,iBAChC5vC,EAAAjE,EAAAC,cAACmG,EAAA,EAAD,CACEC,UAAW,CACT2J,EAAE,EACFhI,GAAG,IAIHpH,KAAKoC,MAAM8b,WAAWy0B,QAAQxqC,QAC5B9E,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPC,WAAY,SACZC,cAAe,SACfK,eAAgB,UAEhBsD,EAAAjE,EAAAC,cAACye,EAAA,EAAD3c,OAAAC,OAAA,GAAmBpB,KAAKC,MAAxB,CAA+BmjB,SAAQ,+BAAkCD,WAAU,wCAA2CtgB,KAAM7C,KAAKoC,MAAM8b,WAAWy0B,QAAQplC,WAElKvN,KAAKoC,MAAMixC,iBACbhwC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPC,WAAY,SACZC,cAAe,SACfK,eAAgB,UAEhBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEJ,KAAMlD,KAAKC,MAAM8F,SAAW,QAAU,QACtCC,KAAM,UACN9F,MAAOF,KAAKC,MAAMoG,MAAMC,OAAOmF,aAAarH,OAAO0E,YAErDzF,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,CAAC,EAAE,GACP3F,SAAU,EACVL,MAAO,WACPO,UAAW,UAJb,iCAUF4C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPC,WAAY,SACZC,cAAe,SACfK,eAAgB,UAEhBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9C,WAAY,IACZN,MAAO,YACPO,UAAW,UAHb,eAKeT,KAAKoC,MAAMqwC,YAAYzyC,KAAKoC,MAAM6wC,gBAAgBloC,QAAQ,GALzE,IAK8E/K,KAAKoC,MAAMgI,eAGvF4rC,GACE3yC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE7C,UAAW,SACXqH,WAAY,UACZrG,QAASzB,KAAK2yC,QAAQxlC,KAAKnN,OAH7B,iBASFA,KAAKoC,MAAMqwC,YAAYzyC,KAAKoC,MAAM6wC,gBAAgBz8B,GAAGxW,KAAKoC,MAAMwkC,oBAAoBkQ,cAClFzzC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/D,GAAI,EACJgB,SAAU,EACVL,MAAO,QACPO,UAAW,UAJb,wCAMwCT,KAAKsC,cAAcyM,YAAY/O,KAAKoC,MAAMwkC,oBAAoBkQ,YAAY,GANlH,IAMuH92C,KAAKoC,MAAMgI,cANlI,oBAWFpK,KAAKoC,MAAM0wC,eACTzvC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/C,SAAU,EACVL,MAAO,WACPO,UAAW,UAHb,yBAKyBT,KAAKsC,cAAc2I,YAA+C,IAAnCjL,KAAKoC,MAAM0wC,cAAc/oC,WAAgBqxB,MAAMzhB,OAAO,qCA9uCnH3Y,wBCqvBZ+1C,8MArwBb30C,MAAQ,CACNm1B,MAAM,KACND,QAAQ,KACR0f,SAAS,KACTlQ,UAAU,KACV5S,WAAW,KACXwD,YAAY,KACZrtB,YAAY,KACZyqB,aAAa,KACblE,aAAa,KACbxmB,cAAc,KACdouB,eAAe,KACfC,eAAe,KACfwV,gBAAgB,KAChBgJ,gBAAgB,KAChBC,iBAAiB,KACjB3iB,kBAAiB,EACjBwD,mBAAmB,KACnBF,oBAAoB,KACpBiB,sBAAqB,KAIvBx2B,cAAgB,gFAGVtC,KAAKsC,cACPtC,KAAKsC,cAAcC,SAASvC,KAAKC,OAEjCD,KAAKsC,cAAgB,IAAIE,IAAcxC,KAAKC,4JAK9CD,KAAKyC,YACLzC,KAAK0C,gMAIkBzD,EAAUC,0FACjCc,KAAKyC,cAE2BvD,EAAUg4C,mBAAqBl3C,KAAKoC,MAAM80C,0CAElE9sC,EAAgBpK,KAAKoC,MAAM80C,iBAAiBC,WAC5C9sC,EAAclJ,OAAOwG,OAAO3H,KAAKC,MAAM2oC,qBAAqB,GAAGx+B,YAC1CpK,KAAKsC,cAAc06B,gBAAgB5yB,EAAcpK,KAAKC,MAAM2L,gBAAjFkpB,SACA0D,EAAkBx4B,KAAKoC,MAAMo2B,eAA4Dx4B,KAAKoC,MAAMo2B,eAArDx4B,KAAKC,MAAM6zC,UAAUC,QAAU,QACpF/zC,KAAKgD,SAAS,CACZqH,cACAyqB,eACA1qB,gBACAouB,2BAIEU,EAA0Bh6B,EAAUq1B,mBAAqBv0B,KAAKoC,MAAMmyB,iBACpE0E,EAAwB/5B,EAAUs5B,iBAAmBx4B,KAAKoC,MAAMo2B,eAChE4e,EAAoBl4C,EAAUg1B,aAAel0B,KAAKoC,MAAM8xB,YAAcl0B,KAAKoC,MAAM8xB,WAAW/a,GAAG,GAC/Fk+B,EAAkB9rC,KAAKC,UAAUtM,EAAU83C,YAAczrC,KAAKC,UAAUxL,KAAKoC,MAAM40C,WAAah3C,KAAKoC,MAAM8xB,YAAcl0B,KAAKoC,MAAM8xB,WAAW/a,GAAG,IACpJ8f,GAAyBme,GAAqBC,GAAmBne,IACnEl5B,KAAKg5B,aAGqBztB,KAAKC,UAAUtM,EAAU0xB,gBAAkBrlB,KAAKC,UAAUxL,KAAKoC,MAAMwuB,eAE/F5wB,KAAK20B,wMAIS7pB,iFAChBA,EAAS9K,KAAKsC,cAAc+T,MAAMvL,IACtB+D,UAAW/D,EAAOqO,GAAG,wBAG3BnZ,KAAKoC,MAAMsU,YAAc1W,KAAKoC,MAAMk1C,SAAWt3C,KAAKoC,MAAMm1C,kCAEtDD,EAAUt3C,KAAKoC,MAAMk1C,QACrB5gC,EAAa1W,KAAKoC,MAAMsU,WAE9B8gC,GADIA,EAAiB1sC,EAAOkW,IAAItK,IACAH,MAAMihC,EAAe7jC,MAAM2jC,sBAEpD,CACLxsC,SACA0sC,mDAKC,0RAGiBtjB,iCAAW,KAC/B8iB,EAAW,KACXnf,EAAsB,OAC1B3D,EAAaA,GAAcl0B,KAAKoC,MAAM8xB,cAEpBl0B,KAAKsC,cAAc+T,MAAM6d,GAAY/a,GAAG,yBAChDnZ,KAAKoC,MAAMo2B,sBACZ,gBAMA,kBACA,2CANHX,EAAsB,CACpB33B,MAAMF,KAAKC,MAAMoG,MAAMC,OAAOmF,aAAarH,OAAO0E,UAClDzG,KAAI,kBAAA+D,OAAmB8tB,EAAWnpB,QAAQ,GAAtC,2DAKAD,EAAS9K,KAAKsC,cAAc8zB,qBAAqBlC,EAAWl0B,KAAKoC,MAAMiI,YAAYE,oBACxEvK,KAAKy3C,YAAY3sC,kBAAlCksC,YAGInf,EADEmf,EAASQ,eAAetiB,IAAIl1B,KAAKoC,MAAMm1C,WACnB,CACpBr3C,MAAMF,KAAKC,MAAMoG,MAAMC,OAAOmF,aAAarH,OAAO0E,UAClDzG,KAAI,kBAAA+D,OAAmBpG,KAAKsC,cAAc0W,iBAAiBg+B,EAASQ,eAAe,IAAIzsC,QAAQ,GAA3F,KAAA3E,OAAiGpG,KAAKoC,MAAMo2B,iBAG5F,CACpBn2B,KAAI,uBACJnC,MAAMF,KAAKC,MAAMoG,MAAMC,OAAOmF,aAAarH,OAAO4E,0EAU9DhJ,KAAKgD,SAAS,CACZg0C,WACA9iB,aACA2D,gNAIuB/sB,iFACrBorB,EAAa,KACbC,EAAe,KACnBrrB,EAAS9K,KAAKsC,cAAc+T,MAAMvL,GAC5B4sC,EAAc13C,KAAKsC,cAAc+T,MAAM,GAAGshC,IAAI,KAAKphC,MAAM,GAAGxL,QAAQ,QAClE/K,KAAKoC,MAAMo2B,sBACZ,gBAIA,kBACA,2CAJHtC,EAAa,WACbC,EAAe,CAACn2B,KAAKoC,MAAMiI,YAAYoJ,QAAQnH,SAAStM,KAAKoC,MAAM80C,iBAAiBU,qBAAqB53C,KAAKsC,cAAc83B,aAAatvB,wCAIzIorB,EAAa,qBACP2hB,EAAsB73C,KAAKoC,MAAM80C,iBAAiBY,OAAO93C,KAAKoC,MAAMo2B,0BACnDx4B,KAAKy3C,YAAY3sC,gBAAlCksC,+BAEAA,EAASQ,eAAetiB,IAAIl1B,KAAKoC,MAAMm1C,4BACzCphB,EAAe,CAACn2B,KAAKoC,MAAMiI,YAAYoJ,QAAQzT,KAAKsC,cAAc83B,aAAatvB,GAAQ+sC,EAAoBpkC,QAASzT,KAAKsC,cAAc83B,aAAa4c,EAASQ,gBAAiBE,oDAEvK,mFAOR,CACLxhB,aACAC,sMAImB5B,mEACrBv0B,KAAKgD,SAAS,CACZuxB,6MAIuB9qB,EAAGqB,EAAOirB,8GAC/BuB,EAAU,KACRygB,aAAmB/3C,KAAKsC,cAAcwJ,gBAAgB,CAAC,YAAY,uBACnEksC,EAAch4C,KAAKsC,cAAc0W,iBAAiBlO,EAAO9K,KAAKoC,MAAMiI,YAAYE,eAC9EvK,KAAKoC,MAAMo2B,sBACZ,gBAaA,kBAYA,2CAxBGyf,EAAiBxuC,EAAGwyB,WAAaxyB,EAAGwyB,UAAUC,KAAOzyB,EAAGwyB,UAAUC,KAAKhR,KAAM,SAAA6Q,GAAG,OAAIA,EAAItoB,QAAQlK,gBAAkBnE,EAAKhD,MAAM80C,iBAAiBY,OAA5B,MAA4CrkC,UAAY,KAC1KykC,EAAmBzuC,EAAGwyB,WAAaxyB,EAAGwyB,UAAUC,KAAOzyB,EAAGwyB,UAAUC,KAAKhR,KAAM,SAAA6Q,GAAG,OAAIA,EAAItoB,QAAQlK,gBAAkBnE,EAAKhD,MAAM80C,iBAAiBY,OAA5B,QAA8CrkC,UAAY,KAC9K0kC,EAAoBF,EAAiBj4C,KAAKsC,cAAc0W,iBAAiB1M,SAAS2rC,EAAeloC,KAAK,IAAI/P,KAAKoC,MAAMwuB,aAAarmB,UAAYytC,EAC9II,EAAsBF,EAAmBl4C,KAAKsC,cAAc0W,iBAAiB1M,SAAS4rC,EAAiBnoC,KAAK,IAAI/P,KAAKoC,MAAMwuB,aAAarmB,UAAYytC,EAC1J1gB,EAAU,CACRpjB,KAAK,UACL4a,UAAU,CACR5uB,MAAMF,KAAKC,MAAMoG,MAAMC,OAAOmF,aAAarH,OAAO0E,WAEpDzG,KAAI,wCAAA+D,OAAyC+xC,EAAkBptC,QAAQ,GAAnE,gCAAA3E,OAAoGgyC,EAAoBrtC,QAAQ,GAAhI,2CAAA3E,OAA4K2xC,EAA5K,qDAAA3xC,OAA4OpG,KAAKC,MAAMoG,MAAMC,OAAOif,QAApQ,8DAIA8yB,EAAmBr4C,KAAKoC,MAAM80C,iBAAiBY,OAAO93C,KAAKoC,MAAMo2B,gBACjE8f,EAAiB7uC,EAAGwyB,WAAaxyB,EAAGwyB,UAAUC,KAAOzyB,EAAGwyB,UAAUC,KAAKhR,KAAM,SAAA6Q,GAAG,OAAIA,EAAItoB,QAAQlK,gBAAkB8uC,EAAiB5kC,UAAY,KAC/I8kC,EAAsBD,EAAiBt4C,KAAKsC,cAAc0W,iBAAiB1M,SAASgsC,EAAevoC,KAAK,IAAIsoC,EAAiBG,aAAajuC,UAAYvK,KAAKsC,cAAc0W,iBAAiB+c,EAAO,GAAGsiB,EAAiBG,aAAajuC,UACxO+sB,EAAU,CACRpjB,KAAK,UACL4a,UAAU,CACR5uB,MAAMF,KAAKC,MAAMoG,MAAMC,OAAOmF,aAAarH,OAAO0E,WAEpDzG,KAAI,wCAAA+D,OAAyCmyC,EAAoBxtC,QAAQ,GAArE,KAAA3E,OAA2EpG,KAAKoC,MAAMo2B,eAAtF,uHAAApyB,OAA0N2xC,EAA1N,qDAAA3xC,OAA0RpG,KAAKC,MAAMoG,MAAMC,OAAOif,QAAlT,8DAKAkzB,EAAqBz4C,KAAKoC,MAAM80C,iBAAiBY,OAAO93C,KAAKoC,MAAMo2B,gBACnEkgB,EAAmBjvC,EAAGwyB,WAAaxyB,EAAGwyB,UAAUC,KAAOzyB,EAAGwyB,UAAUC,KAAKhR,KAAM,SAAA6Q,GAAG,OAAIA,EAAItoB,QAAQlK,gBAAkBkvC,EAAmBhlC,UAAY,KACnJklC,EAAwBD,EAAmB14C,KAAKsC,cAAc0W,iBAAiB1M,SAASosC,EAAiB3oC,KAAK,IAAI0oC,EAAmBD,aAAajuC,UAAYvK,KAAKsC,cAAc0W,iBAAiB+c,EAAO,GAAG0iB,EAAmBD,aAAajuC,UAClP+sB,EAAU,CACRpjB,KAAK,UACL4a,UAAU,CACR5uB,MAAMF,KAAKC,MAAMoG,MAAMC,OAAOmF,aAAarH,OAAO0E,WAEpDzG,KAAI,wCAAA+D,OAAyCuyC,EAAsB5tC,QAAQ,GAAvE,KAAA3E,OAA6EpG,KAAKoC,MAAMo2B,eAAxF,6HAAApyB,OAAkO2xC,EAAlO,qDAAA3xC,OAAkSpG,KAAKC,MAAMoG,MAAMC,OAAOif,QAA1T,kGAQNgS,EAAQv3B,KAAKoC,MAAMm1B,OACjB,GAAGzuB,WAAY,EAEfgwB,GAAuB,YACF94B,KAAKsC,cAAc06B,gBAAgBh9B,KAAKoC,MAAMgI,cAAcpK,KAAKC,MAAM2L,iBAA5FkpB,SAIN90B,KAAKgD,SAAS,CACZu0B,QACAD,UACAxC,eACAgE,iVAKEa,EAAM,KACJpC,EAAQ,GACVD,EAAU,KACVggB,EAAU,KACVC,EAAY,KACZ7gC,EAAa,KACb7L,EAAc,KACd+lB,EAAe,KACfgoB,EAAmB,KACnB7gB,EAAqB,KAEnBsgB,EAAmBr4C,KAAKoC,MAAM80C,iBAAiBY,OAA5B,MACnBW,EAAqBz4C,KAAKoC,MAAM80C,iBAAiBY,OAA5B,QACrBe,EAAsBR,EAAiBG,aACvCM,EAAwBL,EAAmBD,uBAE3C55B,QAAQkD,IAAI,CAChB9hB,KAAKC,MAAM+wB,aAAaqnB,EAAiBryC,KAAKqyC,EAAiB5kC,QAAQ4kC,EAAiBpnB,KACxFjxB,KAAKC,MAAM+wB,aAAaynB,EAAmBzyC,KAAKyyC,EAAmBhlC,QAAQglC,EAAmBxnB,KAC9FjxB,KAAKC,MAAM+wB,aAAa6nB,EAAoB7yC,KAAK6yC,EAAoBplC,QAAQolC,EAAoB5nB,KACjGjxB,KAAKC,MAAM+wB,aAAa8nB,EAAsB9yC,KAAK8yC,EAAsBrlC,QAAQqlC,EAAsB7nB,gCAQ/FrS,QAAQkD,IAAI,CAEpB9hB,KAAKsC,cAAc06B,gBAAgBqb,EAAiBryC,KAAKhG,KAAKC,MAAM2L,SAEpE5L,KAAKsC,cAAc06B,gBAAgByb,EAAmBzyC,KAAKhG,KAAKC,MAAM2L,SAEtE5L,KAAKsC,cAAc06B,gBAAgB6b,EAAoB7yC,KAAKhG,KAAKC,MAAM2L,SAEvE5L,KAAKsC,cAAc06B,gBAAgB8b,EAAsB9yC,KAAKhG,KAAKC,MAAM2L,+CAZzEmtC,OACAC,OACAC,OACAC,OAaIC,EAAkBJ,GAAqBC,GAAuBD,EAAkB5/B,GAAG,IAAM6/B,EAAoB7/B,GAAG,QAG9GnZ,KAAKoC,MAAMo2B,sBACZ,iBAGA,oBAGA,0CALH5H,EAAe5wB,KAAKC,MAAM6wB,UAAUC,6CAGpCH,EAAe6nB,EAAmBD,iDAGlC5nB,EAAeynB,EAAiBG,iFAM9BX,EAAsB73C,KAAKoC,MAAM80C,iBAAiBY,OAAO93C,KAAKoC,MAAMo2B,iBAEtE5H,uBACEinB,oCAKQj5B,QAAQkD,IAAI,CACpB9hB,KAAKsC,cAAcw3B,oBAAoBlJ,EAAa5qB,KAAK,cACzDhG,KAAKsC,cAAcw3B,oBAAoBlJ,EAAa5qB,KAAK,aAAa,CAAC6xC,EAAoBpkC,UAC3FzT,KAAKsC,cAAcw3B,oBAAoBlJ,EAAa5qB,KAAK,eAAe,CAAChG,KAAKoC,MAAMiI,YAAYoJ,QAAQokC,EAAoBpkC,gDAN5H6jC,OACAC,QACA7gC,UASMosB,EAAwC,UAA9B9iC,KAAKoC,MAAMo2B,eACrBof,EAAsB53C,KAAKoC,MAAM80C,iBAAiBU,oBAClD1gC,GAA6B,IAApB0gC,EAA2BltC,KAAKwwB,OAAjC,MACdxkB,EAAa1W,KAAKsC,cAAc0W,iBAAiBtC,EAAW1W,KAAKoC,MAAMiI,YAAYE,UAC7E6uC,EAAWtW,EAAUpsB,EAAa1W,KAAKsC,cAAc+T,MAAM,GAAGE,MAAMG,GAAYsK,IAAItK,GAC1FijB,EAAM35B,KAAKsC,cAAc+T,MAAM,KAAK1C,MAAMylC,GAAUzlC,MAAM,KAAKqN,IAAI9J,IAIjEogC,IACFA,EAAUt3C,KAAKsC,cAAc0W,iBAAiBs+B,EAAQ,kBAIlDt3C,KAAKoC,MAAMo2B,sBACZ,iBAiCA,oBAgCA,0CAhEHT,EAAkB,sCAClBT,EAAU,CACRpjB,KAAK,iBACL7R,KAAI,SAAA+D,OAAUpG,KAAKoC,MAAMgI,cAArB,gYAAAhE,OAAiapG,KAAKC,MAAMoG,MAAMC,OAAOif,QAAzb,4BAGNgS,EAAMrsB,KAAK,CACTgJ,KAAK,WACLwjB,YAAYK,EACZjvB,UAAU9I,KAAKoC,MAAMmyB,mBAGvBgD,EAAMrsB,KAAK,CACTgJ,KAAK,WACLpL,UAAUqwC,EACVzhB,YAAW,kCAGbH,EAAMrsB,KAAK,CACTgJ,KAAK,SACLwjB,YAAW,6CACX5uB,UAAUmwC,GAA4BA,EAAyB9/B,GAAG,GAClE4O,KAAI,0CAAA3hB,OAA2CpG,KAAKoC,MAAM80C,iBAAiBY,OAA5B,MAA4CU,aAAa/kC,QAApG,OAGN8jB,EAAMrsB,KAAK,CACTgJ,KAAK,SACLwjB,YAAW,+CACX5uB,UAAUowC,GAA8BA,EAA2B//B,GAAG,GACtE4O,KAAI,0CAAA3hB,OAA2CpG,KAAKoC,MAAM80C,iBAAiBY,OAA5B,QAA8CU,aAAa/kC,QAAtG,2CAIFzT,KAAKoC,MAAM40C,UACb4B,EAAmB54C,KAAKsC,cAAc0W,iBAAiBhZ,KAAKoC,MAAM40C,SAASlsC,OAAO9K,KAAKoC,MAAMiI,YAAYE,UACzGM,EAAc7K,KAAKsC,cAAc0W,iBAAiBhZ,KAAKoC,MAAM40C,SAASQ,eAAe5mB,EAAarmB,UAClG+sB,EAAU,CACRpjB,KAAK,eACL7R,KAAI,wBAAA+D,OAAyBwyC,EAAiB7tC,QAAQ,GAAlD,KAAA3E,OAAwDpG,KAAKoC,MAAMgI,cAAnE,wDAAAhE,OAAuIyE,EAAYE,QAAQ,GAA3J,KAAA3E,OAAiKpG,KAAKoC,MAAMgI,cAA5K,oFAGNktB,EAAU,CACRpjB,KAAK,eACL7R,KAAI,iCAAA+D,OAAkCpG,KAAKoC,MAAMgI,cAA7C,kGAKRktB,EAAQj1B,MAAR,GAAA+D,OAAiBuzB,EAAG,4BAAAvzB,OAA+BpG,KAAKC,MAAMoG,MAAMC,OAAOif,QAAvD,kFAAAnf,OAA+IuzB,EAAI5uB,QAAQ,GAA3J,cAA4K,KAAhM,2JAAA3E,OAA8VpG,KAAKC,MAAMoG,MAAMC,OAAOif,QAAtX,iGAGAwS,EAAkB,6CAClBR,EAAMrsB,KAAK,CACTgJ,KAAK,WACLwjB,YAAYK,EACZjvB,UAAU9I,KAAKoC,MAAMmyB,mBAGvBgD,EAAMrsB,KAAK,CACTgJ,KAAK,WACLpL,UAAUkwC,GAAuBA,EAAoB7/B,GAAG,GACxDue,YAAW,gCAAAtxB,OAAiCpG,KAAKoC,MAAMgI,qDAIrDpK,KAAKoC,MAAM40C,UACb4B,EAAmB54C,KAAKsC,cAAc0W,iBAAiBhZ,KAAKoC,MAAM40C,SAASlsC,OAAO9K,KAAKoC,MAAMiI,YAAYE,UACzGM,EAAc7K,KAAKsC,cAAc0W,iBAAiBhZ,KAAKoC,MAAM40C,SAASQ,eAAe5mB,EAAarmB,UACrE,GAC7B+sB,EAAU,CACRpjB,KAAK,cACL7R,KAAI,wBAAA+D,OAAyBwyC,EAAiB7tC,QAAQ,GAAlD,KAAA3E,OAAwDpG,KAAKoC,MAAMgI,cAAnE,sDAAAhE,OAAqIyE,EAAYE,QAAQ,GAAzJ,KAAA3E,OAA+JpG,KAAKoC,MAAMgI,cAA1K,aAAAhE,OAAwN,aAAAA,OAHjM,GAGiM,iCAAxN,6FAGNkxB,EAAU,CACRpjB,KAAK,cACL7R,KAAI,+BAAA+D,OAAgCpG,KAAKoC,MAAMgI,cAA3C,oHAIRktB,EAAQj1B,MAAR,GAAA+D,OAAiBuzB,EAAG,4BAAAvzB,OAA+BpG,KAAKC,MAAMoG,MAAMC,OAAOif,QAAvD,8EAAAnf,OAA2IuzB,EAAI5uB,QAAQ,GAAvJ,KAA+J,KAAnL,oKAAA3E,OAA0VpG,KAAKC,MAAMoG,MAAMC,OAAOif,QAAlX,iGAGAwS,EAAkB,2CAClBR,EAAMrsB,KAAK,CACTgJ,KAAK,WACLwjB,YAAYK,EACZjvB,UAAU9I,KAAKoC,MAAMmyB,mBAGvBgD,EAAMrsB,KAAK,CACTgJ,KAAK,WACLpL,UAAUiwC,GAAqBA,EAAkB5/B,GAAG,GACpDue,YAAW,8BAAAtxB,OAA+BpG,KAAKoC,MAAMgI,mFAO9B,EAC7BpK,KAAKgD,SAAS,CACZ22B,MACApC,QACAD,UACAggB,UACAC,YACA7gC,aACAka,eACAmH,qBACAe,sBAV2B,4QAgBzB8G,EAAWtzB,SAAS5B,KAAKwwB,MAAM,KAC/B+S,EAAkBjuC,KAAKC,MAAM6wB,UAAUuoB,UAAUnoB,OAAQ,SAACrD,EAAOihB,EAAExhC,GACvE,GAAIwhC,EAAE8I,oBAAoBhY,EAAS,CACjC,IAAM0Z,EAAiB/sC,EAAKjK,cAAc2I,YAAkC,IAAtB6jC,EAAE8I,qBAA0Bxc,MAAMzhB,OAAO,uBAAuB,OAChHzF,EAAI,iBAAA9N,OAAoB0oC,EAAEqI,WAAtB,QACJx2C,EAAK,eAAAyF,OAAkB0oC,EAAEqI,WAApB,mBAAA/wC,OAAgDkzC,GAC3DzrB,EAAO3iB,KAAK,CACVgJ,OACAvT,QACAoP,KAAK++B,EACL/tC,MAAMu4C,IAGV,OAAOzrB,GACP,aAEsB7tB,KAAKsC,cAAcymC,6BAArCjC,SACAmQ,EAAkBhJ,EAAgBlpC,OAASkpC,EAAgB,GAAK,KAEtEjuC,KAAKgD,SAAS,CACZ8jC,YACAmQ,kBACAhJ,mBACA,WACIgJ,GACF1qC,EAAKgtC,eAAetC,sLAKLuC,yEACbtC,EAAmBsC,EAASzpC,KAClC/P,KAAKgD,SAAS,CACZk0C,0JAIM1e,GACRx4B,KAAKgD,SAAS,CACZw1B,oDAIK,IAAAhsB,EAAAxM,KAEDy5C,EAAuC,SAA9Bz5C,KAAKoC,MAAMo2B,eACpBkhB,EAA2C,UAA9B15C,KAAKoC,MAAMo2B,eACxBmhB,EAA6C,YAA9B35C,KAAKoC,MAAMo2B,eAC1BsF,EAAW2b,EAASz5C,KAAKoC,MAAMo2B,eAAd,OAAApyB,OAAsCpG,KAAKoC,MAAMo2B,gBAwGxE,OACEn1B,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPC,WAAY,SACZC,cAAe,SACfK,eAAgB,UAGbC,KAAKoC,MAAM6rC,gBAmBV5qC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPC,WAAY,SACZM,eAAgB,UAGbC,KAAKoC,MAAM6rC,gBAAgBlpC,OAU1B1B,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,CAAC,EAAE,KACVC,WAAY,UACZC,cAAe,SACfK,eAAgB,UAEhBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,GAEP6D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM/D,GAAI,GAAV,oBAGA8D,EAAAjE,EAAAC,cAAC4sB,EAAA,EAAD9qB,OAAAC,OAAA,GACMpB,KAAKC,MADX,CAEE+F,KAAM,WACN+lB,cAAc,EACdjB,QAAS9qB,KAAKoC,MAAM6rC,gBACpBjjB,kBAlKM,SAAA/qB,GACxB,IAAMU,EAAQV,EAAMU,MACd0J,EAAc,CAClB6J,KAAKjU,EAAM8P,KAAKmE,MAGlB,OACE7Q,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPC,WAAY,SACZC,cAAe,MACfK,eAAgB,iBAEhBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE7D,WAAY,UAEZ4D,EAAAjE,EAAAC,cAACgyB,EAAA,EAAD,CACE1nB,MAAOhJ,EACP0J,YAAaA,EACb+gB,UAAW,CACTplB,KAAK,OACL/F,MAAM,CACJE,GAAG,EACHX,MAAM,MACNY,OAAO,UAIbiD,EAAAjE,EAAAC,cAACgyB,EAAA,EAAD,CACE1nB,MAAOhJ,EACPyqB,UAAW,CACTplB,KAAK,YACL/F,MAAM,CACJM,SAAS,CAAC,EAAE,GACZC,WAAW,IACXN,MAAM,mBAgIA6qB,aAAc/qB,KAAKoC,MAAM60C,gBACzB1vC,SAAUvH,KAAKu5C,eAAepsC,KAAKnN,MACnCirB,qBAzHS,SAAAhrB,GAE3B,IACMwrB,GAA4D,IADlDxrB,EAAMwrB,YAAYX,QACNY,QAAQzrB,EAAMwrB,YAAY1qB,OAAgBd,EAAMwrB,YAAY1qB,MAAQ,KAEhG,IAAK0qB,EACH,OAAO,KAGT,IAAM9qB,EAAQ8qB,EAAY9qB,MACpB0J,EAAc,CAClB6J,KAAKuX,EAAYvX,MAGnB,OACE7Q,EAAAjE,EAAAC,cAACiE,EAAA,EAADnC,OAAAC,OAAA,CACExB,MAAO,CACLE,KAAK,KAEPC,eAAgB,iBACZE,EAAM0rB,YAEVtoB,EAAAjE,EAAAC,cAACiE,EAAA,EAADnC,OAAAC,OAAA,CACEgO,EAAG,EACH5P,MAAO,GACHS,EAAM0rB,WAHZ,CAIElsB,WAAY,SACZC,cAAe,MACfE,MAAO,CAACkG,OAAO,WACf/F,eAAgB,eAEhBsD,EAAAjE,EAAAC,cAACgyB,EAAA,EAAD,CACE1nB,MAAOhJ,EACP0J,YAAaA,EACb+gB,UAAW,CACTplB,KAAK,OACL/F,MAAM,CACJE,GAAG,EACHC,OAAO,UAIbiD,EAAAjE,EAAAC,cAACgyB,EAAA,EAAD,CACE1nB,MAAOhJ,EACPyqB,UAAW,CACTplB,KAAK,YACL/F,MAAM,CACJM,SAAS,CAAC,EAAE,GACZC,WAAW,IACXN,MAAM,uBA4EFF,KAAKoC,MAAM80C,kBACT7zC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ1G,MAAO,GAEP6D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM/D,GAAI,GAAV,kBAGA8D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE7D,WAAY,SACZC,cAAe,CAAC,SAAS,OACzBK,eAAgB,iBAEhBsD,EAAAjE,EAAAC,cAAC4+B,EAAA,EAAD,CACE/8B,YAAa,CACXuC,GAAG,EACH2qB,OAAOqrB,EAAS,EAAI,GAEtBj6C,MAAO,CAAC,EAAE,OACV0+B,QAAS,gBACTC,SAAU,kBACVp4B,SAAU/F,KAAKC,MAAM8F,SACrB6zC,WAAY,qDACZjrB,WAAY,CACVpvB,GAAG,EACHa,OAAOJ,KAAKC,MAAM8F,SAAW,OAAS,QAExC0oB,SAAUgrB,EACV/3C,YAAc,SAAA8F,GAAC,OAAIgF,EAAK4xB,UAAU,WAEpC/6B,EAAAjE,EAAAC,cAAC4+B,EAAA,EAAD,CACE/8B,YAAa,CACXuC,GAAG,EACH2qB,OAAOsrB,EAAa,EAAI,GAE1Bl6C,MAAO,CAAC,EAAE,OACV0+B,QAAS,YACTC,SAAU,mBACVp4B,SAAU/F,KAAKC,MAAM8F,SACrB6zC,WAAY,wDACZjrB,WAAY,CACVpvB,GAAG,EACHa,OAAOJ,KAAKC,MAAM8F,SAAW,OAAS,QAExC0oB,SAAUirB,EACVh4C,YAAc,SAAA8F,GAAC,OAAIgF,EAAK4xB,UAAU,YAEpC/6B,EAAAjE,EAAAC,cAAC4+B,EAAA,EAAD,CACE/8B,YAAa,CACXuC,GAAG,EACH2qB,OAAOurB,EAAe,EAAI,GAE5Bn6C,MAAO,CAAC,EAAE,OACV0+B,QAAS,cACTn4B,SAAU/F,KAAKC,MAAM8F,SACrBo4B,SAAU,qBACVyb,WAAY,yDACZjrB,WAAY,CACVpvB,GAAG,EACHa,OAAOJ,KAAKC,MAAM8F,SAAW,OAAS,QAExC0oB,SAAUkrB,EACVj4C,YAAc,SAAA8F,GAAC,OAAIgF,EAAK4xB,UAAU,eAIpCp+B,KAAKoC,MAAMiI,aAAerK,KAAKoC,MAAM0yB,cAAgB90B,KAAKoC,MAAMwuB,cAC9DvtB,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ3G,GAAI,EACJC,MAAO,GAEP6D,EAAAjE,EAAAC,cAACg/B,EAADl9B,OAAAC,OAAA,GACMpB,KAAKC,MADX,CAEEqJ,OAAQw0B,EACR/f,MAAO/d,KAAKoC,MAAM2b,MAClBwZ,MAAOv3B,KAAKoC,MAAMm1B,MAClBD,QAASt3B,KAAKoC,MAAMk1B,QACpBjtB,YAAarK,KAAKoC,MAAMiI,YACxByqB,aAAc90B,KAAKoC,MAAM0yB,aACzBlE,aAAc5wB,KAAKoC,MAAMwuB,aACzBhgB,SAAU5Q,KAAK84B,qBAAqB3rB,KAAKnN,MACzCu0B,iBAAkBv0B,KAAKu0B,iBAAiBpnB,KAAKnN,MAC7C+3B,mBAAoB/3B,KAAKoC,MAAM21B,mBAC/BF,oBAAqB73B,KAAKoC,MAAMy1B,oBAChClD,oBAAqB30B,KAAK20B,oBAAoBxnB,KAAKnN,MACnDw2B,qBAAsBx2B,KAAKw2B,qBAAqBrpB,KAAKnN,QAErDqD,EAAAjE,EAAAC,cAACw6C,GAAA,EAAD14C,OAAAC,OAAA,GACMpB,KAAKC,MADX,CAEE65C,YAAY,EACZC,iBAAkB,GAClBC,SAAUh6C,KAAKoC,MAAMgI,qBA7HvC/G,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9C,WAAY,EACZD,SAAU,CAAC,EAAE,GACbL,MAAO,YACPO,UAAW,UAJb,mCAzBN4C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJxG,cAAe,UAEf2D,EAAAjE,EAAAC,cAACsN,EAAA,EAAD,CACEC,UAAW,CACTlN,cAAc,OAEhBoN,YAAa,CACX5J,KAAK,QAEP6J,UAAW,CACTrF,GAAG,GAELrF,KAAM,yCA5mBMrB,qGCgTbi5C,8MAhTb73C,MAAQ,CACNiI,YAAY,KACZmnB,kBAAkB,KAClBC,kBAAkB,KAClB8hB,oBAAmB,EACnB7hB,2BAA2B,QAI7BpvB,cAAgB,OA0ChB43C,gBAAkB,SAAC9vC,GACjB,IAAM+vC,EAAc11C,EAAKnC,cAAcwJ,gBAAgB,CAAC,QAAQ,mBAChErH,EAAKxE,MAAMuxC,YAAX,SAAAprC,OAAgC+zC,EAAY1I,MAA5C,KAAArrC,OAAqDgE,OAGvDunB,sDAAkB,SAAApT,EAAOiT,GAAP,IAAA4oB,EAAA3oB,EAAAC,EAAA,OAAAG,EAAAzyB,EAAA6W,KAAA,SAAAwI,GAAA,cAAAA,EAAAtI,KAAAsI,EAAArI,MAAA,OACVgkC,EAAY31C,EAAKxE,MAAM6wB,UAAUxmB,gBAAgBknB,GAEnDC,EAAoB,KAClBC,EAA6B,IAE6C,qBAA7CjtB,EAAKxE,MAAM6wB,UAAU8X,oBAAsCnkC,EAAKxE,MAAM6wB,UAAU8X,oBAAsBznC,OAAOqF,KAAK/B,EAAKxE,MAAM2oC,sBAE5I1+B,QAAS,SAAAolC,GAC3B,IACMiG,EAD2B9wC,EAAKxE,MAAM2oC,oBAAoB0G,GAChB8K,EAAUxoB,WAC1D,IAAK2jB,EACH,OAAO,SAIFA,EAAgBrhC,KAElBud,IACHA,EAAoB8jB,EAAgBxO,KAAKp9B,OAE3C4rC,EAAgBjG,SAAWA,EAC3BiG,EAAgB3jB,UAAYwoB,EAAUxoB,UACtCF,EAA2B6jB,EAAgBxO,KAAKp9B,OAAS4rC,IAG3D9wC,EAAKzB,SAAS,CACZqH,YAAY,KACZmnB,oBACAE,8BACA,WACAjtB,EAAKqtB,gBAAgBL,KA/BP,wBAAAhT,EAAA7H,SAAA2H,EAAAve,iEAmClB8xB,sDAAkB,SAAA/S,EAAO0S,GAAP,IAAA4oB,EAAAD,EAAA/vC,EAAAorC,EAAAtB,EAAA,OAAAtiB,EAAAzyB,EAAA6W,KAAA,SAAAiJ,GAAA,cAAAA,EAAA/I,KAAA+I,EAAA9I,MAAA,cAEVikC,EAAkB51C,EAAKrC,MAAMsvB,2BAA2BD,GACxD2oB,EAAY31C,EAAKxE,MAAM6wB,UAAUxmB,gBAAgB7F,EAAKrC,MAAMovB,oBAE5DnnB,EAAc,CAClBV,MAAM0wC,EAAgBzoB,UACtBne,QAAQ4mC,EAAgB5mC,QACxBlJ,SAAS8vC,EAAgB9vC,WAIfw8B,KAAOsT,EAAgBtT,KAG7B0O,EAAc,CAClBxkB,IAAImpB,EAAUnpB,IACdjrB,KAAKo0C,EAAUzwC,MACfA,MAAMywC,EAAUzwC,MAChB8J,QAAQ2mC,EAAU3mC,SAGd0gC,EAAoB1vC,EAAKxE,MAAM6wB,UAAUqjB,kBAG3CiG,EAAU1E,kBACZvB,EAAkBI,UAAU,GAAGvuC,KAAOo0C,EAAU1E,iBAGlDrrC,EAAYsrC,UAAY,CACtBxkB,SAAQ,EACRskB,cACAtB,oBACAZ,oBAAmB,GAjCLr0B,EAAA9I,KAAA,GAoCV3R,EAAKxE,MAAM21C,iBAAiByE,EAAgB/K,SAAS8K,EAAUxoB,WApCrD,QAsChBntB,EAAKzB,SAAS,CACZqH,cACAonB,sBAxCc,yBAAAvS,EAAAtI,SAAAmI,EAAA/e,iEA4ClB2zC,kBAAoB,WAClBlvC,EAAKzB,SAAS,CACZuwC,oBAAmB,gFA7HjBvzC,KAAKsC,cACPtC,KAAKsC,cAAcC,SAASvC,KAAKC,OAEjCD,KAAKsC,cAAgB,IAAIE,IAAcxC,KAAKC,mKAK9CD,KAAKyC,qBACCzC,KAAK2zB,gRAILnC,EAAoBxxB,KAAKC,MAAM6zC,UAAUC,QAAU/zC,KAAKC,MAAM6wB,UAAUxmB,gBAAgBtK,KAAKC,MAAM6zC,UAAUC,QAAU/zC,KAAKC,MAAM6zC,UAAUC,OAAS5yC,OAAOqF,KAAKxG,KAAKC,MAAM6wB,UAAUxmB,iBAAiB,YAEvMtK,KAAKsC,cAAcmT,aAAatU,OAAOqF,KAAKxG,KAAKC,MAAM6wB,UAAUxmB,iBAAjE,eAAAuU,EAAA1d,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAAkF,SAAAmC,EAAOrO,GAAP,IAAAU,EAAA,OAAAwnB,EAAAzyB,EAAA6W,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,UAChF/L,EAAcjF,EAAKnF,MAAM6wB,UAAUxmB,gBAAgBX,GACnCvE,EAAK9C,cAAcuxB,kBAAkBxpB,EAAYV,SACjDU,EAAY4mB,IAHoD,CAAAhZ,EAAA7B,KAAA,eAAA6B,EAAA7B,KAAA,EAI9EhR,EAAKnF,MAAM+wB,aAAa3mB,EAAYV,MAAMU,EAAYoJ,QAAQpJ,EAAY4mB,KAJI,wBAAAhZ,EAAArB,SAAAoB,EAAAhY,SAAlF,gBAAA6W,GAAA,OAAAgI,EAAA/H,MAAA9W,KAAA8E,YAAA,WAQF0sB,GAAqBA,IAAsBxxB,KAAKC,MAAM6zC,UAAUC,QAClE/zC,KAAKk6C,gBAAgB1oB,GAGvBxxB,KAAK2xB,gBAAgBH,wLAGEvyB,EAAUC,sEACjCc,KAAKyC,cAEoBxD,EAAU60C,UAAUC,SAAW/zC,KAAKC,MAAM6zC,UAAUC,wCAErE/zC,KAAK2zB,mJAgGb,OAAK3zB,KAAKoC,MAAMovB,kBAKdnuB,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACP0G,GAAI,CAAC,EAAE,GACPzG,WAAY,SACZC,cAAe,SACfK,eAAgB,UAEhBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,CAAC,EAAE,KACVC,WAAY,UACZC,cAAe,SACfK,eAAgB,UAEhBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,GAEP6D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM/D,GAAI,GAAV,4BAGA8D,EAAAjE,EAAAC,cAACwrB,EAAA,EAAD1pB,OAAAC,OAAA,GACMpB,KAAKC,MADX,CAEE+M,GAAI,aACJwe,aAAa,EACbO,cAAc,EACdxkB,SAAUvH,KAAKk6C,gBACf9vC,cAAepK,KAAKoC,MAAMovB,kBAC1BlnB,gBAAiBtK,KAAKC,MAAM6wB,UAAUxmB,oBAIxCtK,KAAKoC,MAAMsvB,4BAA8B1xB,KAAKoC,MAAMqvB,mBAClDpuB,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ1G,MAAO,GAEP6D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM/D,GAAI,GAAV,6BAGA8D,EAAAjE,EAAAC,cAACwrB,EAAA,EAAD1pB,OAAAC,OAAA,GACMpB,KAAKC,MADX,CAEE+M,GAAI,aACJwe,aAAa,EACbjkB,SAAUvH,KAAK8xB,gBACf1nB,cAAepK,KAAKoC,MAAMqvB,kBAC1BnnB,gBAAiBtK,KAAKoC,MAAMsvB,+BAKlC1xB,KAAKoC,MAAMovB,mBAAqBxxB,KAAKoC,MAAMqvB,kBACzCpuB,EAAAjE,EAAAC,cAAC+2C,GAAA,EAADj1C,OAAAC,OAAA,GACMpB,KAAKC,MADX,CAEEo2C,aAAa,EACbC,eAAe,EACfC,iBAAiB,EACjBlsC,YAAarK,KAAKoC,MAAMiI,YACxBspC,kBAAmB3zC,KAAK2zC,kBACxBvpC,cAAepK,KAAKoC,MAAMovB,kBAC1B1Z,iBAAkB9X,KAAKC,MAAM6X,mBAG1B9X,KAAKC,MAAM2L,QAoCVvI,EAAAjE,EAAAC,cAACmG,EAAA,EAAD,CACEC,UAAW,CACT2J,EAAE,EACFlJ,GAAG,IAIHlG,KAAKoC,MAAMmxC,mBACTlwC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE7D,WAAY,SACZC,cAAe,UAEf2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEJ,KAAM,QACN8C,KAAM,UACN9F,MAAOF,KAAKC,MAAMoG,MAAMC,OAAOmF,aAAarH,OAAO0E,YAErDzF,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ3F,SAAU,EACVL,MAAO,WACPO,UAAW,UAJb,QAMQT,KAAKoC,MAAMovB,kBANnB,sCAUFnuB,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE7D,WAAY,SACZC,cAAe,UAEf2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEJ,KAAM,QACN8C,KAAM,WACN9F,MAAO,aAETmD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ3F,SAAU,EACVL,MAAO,WACPO,UAAW,UAJb,sBAMsBT,KAAKoC,MAAMovB,kBANjC,sBAvERnuB,EAAAjE,EAAAC,cAACmG,EAAA,EAAD,CACEC,UAAW,CACT2J,EAAE,EACFlJ,GAAG,IAGL7C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE7D,WAAY,SACZC,cAAe,UAEf2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEJ,KAAM,QACN8C,KAAM,QACN9F,MAAO,aAETmD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ3F,SAAU,EACVL,MAAO,WACPO,UAAW,UAJb,uDAQA4C,EAAAjE,EAAAC,cAAC4B,EAAA,EAAD,CACEC,YAAa,CACXgF,GAAG,EACH1G,MAAM,CAAC,EAAE,KAEXkC,YAAa1B,KAAKC,MAAMslC,2BAL1B,cA+DR,OAxJH,YAlJgBvkC,aC2xBds5C,8MAxwBbl4C,MAAQ,CACNowC,UAAS,EACTC,YAAY,GACZC,YAAW,EACXppC,OAAO,UACPkmC,cAAc,GACdnlC,YAAY,KACZ6T,WAAW,CACT00B,MAAM,CACJrlC,OAAO,KACPpF,SAAQ,IAGZ4qC,cAAa,EACb3oC,cAAc,KACd8oC,gBAAe,EACfC,gBAAe,EACfI,oBAAmB,EACnB3M,oBAAoB,KACpB6M,2BAA0B,EAC1B/hB,2BAA2B,QAI7BpvB,cAAgB,OAwGhBqvB,sDAAkB,SAAApT,EAAOnU,GAAP,IAAAw8B,EAAA4O,EAAAD,EAAAlrC,EAAAorC,EAAAtB,EAAA,OAAAtiB,EAAAzyB,EAAA6W,KAAA,SAAAwI,GAAA,cAAAA,EAAAtI,KAAAsI,EAAArI,MAAA,cAEVwwB,EAAsBniC,EAAKxE,MAAM6wB,UAAUxmB,gBAAgBF,GAC3DorC,EAA2B/wC,EAAKxE,MAAM2oC,oBAAoBhC,EAAoB0I,UAE9EiG,EAAkBC,EAAwB5O,EAAoBhV,YAE9DvnB,EAAc,CAClBV,MAAMi9B,EAAoBhV,UAC1Bne,QAAQmzB,EAAoBnzB,QAC5BlJ,SAASq8B,EAAoBr8B,WAInBw8B,KAAOwO,EAAgBxO,KAG7B0O,EAAc,CAClBxkB,IAAI2V,EAAoB3V,IACxBjrB,KAAK4gC,EAAoB5gC,KACzB2D,MAAMi9B,EAAoBj9B,MAC1B8J,QAAQmzB,EAAoBnzB,SAGxB0gC,EAAoBvN,EAAoBuN,kBAG1CoB,EAAgBG,kBAClBvB,EAAkBI,UAAU,GAAGvuC,KAAOuvC,EAAgBG,iBAGxDrrC,EAAYsrC,UAAY,CACtBxkB,SAAQ,EACRskB,cACAtB,oBACAZ,oBAAmB,GAnCL90B,EAAArI,KAAA,GAsCV3R,EAAKxE,MAAM21C,iBAAiBhP,EAAoB0I,SAASiG,EAAgB3jB,WAtC/D,QAwChBntB,EAAKzB,SAAS,CACZqH,cACAD,gBACAw8B,wBA3Cc,yBAAAnoB,EAAA7H,SAAA2H,EAAAve,iEA+ClB4yC,2BAAQ,SAAA7zB,IAAA,IAAA82B,EAAAC,EAAAC,EAAA,OAAAlkB,EAAAzyB,EAAA6W,KAAA,SAAAiJ,GAAA,cAAAA,EAAA/I,KAAA+I,EAAA9I,MAAA,UACD3R,EAAKrC,MAAM8wC,eADV,CAAAh0B,EAAA9I,KAAA,eAAA8I,EAAAO,OAAA,SAEG,MAFH,QAKU,EACO,EACjBo2B,EAAU10C,OAAOqF,KAAK/B,EAAKrC,MAAMotC,eAAe,GAEhDsG,EAAgB,SAACrsC,EAAGsU,GACxB,IAAMoW,EAA4B,YAAd1qB,EAAGrF,OAGjBmxB,EAAY,CAChB/C,cAAa,iBACbC,YAAa,QACbC,WAAYjuB,EAAKxE,MAAMmK,cACvBisB,WAAY/pB,SAXO,IAcjByR,IACFwX,EAAU7C,WAAajuB,EAAKnC,cAAckzB,oBAAoBzX,KAI5DA,GAA8B,UAArBwX,EAAUnxB,SACrBK,EAAKnC,cAAciwB,yBAAyBgD,GAG9C9wB,EAAKzB,SAAS,SAAC9D,GAAD,MAAgB,CAC5Bi0C,eAAehf,EACfjW,WAAW/c,OAAAuD,EAAA,EAAAvD,CAAA,GACNjC,EAAUgf,WADL,CAER00B,MAAM,CACJrlC,OAAO,KACPpF,SAAQ,SAMV4tC,EAAuB,SAACtsC,GAC5B,IAAM8D,EAAS9D,EAAGgsB,gBAClBhxB,EAAKzB,SAAS,SAAC9D,GAAD,MAAgB,CAC5Bgf,WAAW/c,OAAAuD,EAAA,EAAAvD,CAAA,GACNjC,EAAUgf,WADL,CAER00B,MAAMzxC,OAAAuD,EAAA,EAAAvD,CAAA,GACDjC,EAAUgf,WAAW00B,MADrB,CAEHrlC,iBAMR9I,EAAKxE,MAAMw2B,0BAA0BhyB,EAAKrC,MAAMwkC,oBAAoBuN,kBAAkBnuC,KAAM,WAAY,CAAC6vC,GAAU,KAAMC,EAAeC,GAExItxC,EAAKzB,SAAS,SAAC9D,GAAD,MAAgB,CAC5Bgf,WAAW/c,OAAAuD,EAAA,EAAAvD,CAAA,GACNjC,EAAUgf,WADL,CAER00B,MAAMzxC,OAAAuD,EAAA,EAAAvD,CAAA,GACDjC,EAAUgf,WAAW00B,MADrB,CAEHzqC,SAxDU,SALV,wBAAA+W,EAAAtI,SAAAmI,EAAA/e,WAmERo+B,UAAY,SAAC90B,GACI,OAAXA,GAAmB,CAAC,UAAU,UAAUM,SAASN,EAAOC,gBAC1D9E,EAAKzB,SAAS,CACZsG,cAKNqqC,kBAAoB,WAClBlvC,EAAKmvC,cACLnvC,EAAKzB,SAAS,CACZuwC,oBAAmB,gFAlOjBvzC,KAAKsC,cACPtC,KAAKsC,cAAcC,SAASvC,KAAKC,OAEjCD,KAAKsC,cAAgB,IAAIE,IAAcxC,KAAKC,mKAK9CD,KAAKyC,qBACCzC,KAAK2zB,0SAKLygB,EAAwBp0C,KAAKoC,MAAMwkC,oBAAoBuN,2BAEvDv1B,QAAQkD,IAAI,CAChB9hB,KAAKC,MAAM+wB,aAAaojB,EAAsBpuC,KAAKouC,EAAsB3gC,QAAQ2gC,EAAsBnjB,KACvGjxB,KAAKC,MAAM+wB,aAAahxB,KAAKoC,MAAMwkC,oBAAoB5gC,KAAKhG,KAAKoC,MAAMwkC,oBAAoBnzB,QAAQzT,KAAKoC,MAAMwkC,oBAAoB3V,8BAG3ErS,QAAQkD,IAAI,CACnE9hB,KAAKsC,cAAcw3B,oBAAoB95B,KAAKoC,MAAMwkC,oBAAoBuN,kBAAkBnuC,KAAK,aAC7FhG,KAAKsC,cAAc40B,mBAAmBl3B,KAAKoC,MAAMwkC,oBAAoB5gC,KAAKouC,EAAsB3gC,QAAQzT,KAAKC,MAAM2L,iDAF9GqnC,OAAeQ,OAKhB9iC,EAAW,GACX6+B,EAAgB,GAChBiD,EAAc,GAChBS,GAAiB,EAEE,OAAnBD,mBACO2B,EAAa,eAAGA,GAAc3B,qCACCr0B,QAAQkD,IAAI,CAChD9hB,KAAKsC,cAAcw3B,oBAAoB95B,KAAKoC,MAAMwkC,oBAAoBuN,kBAAkBnuC,KAAK,cAAc,CAAC4uC,IAC5G50C,KAAKsC,cAAcw3B,oBAAoB95B,KAAKoC,MAAMwkC,oBAAoBuN,kBAAkBnuC,KAAK,gBAAgB,CAAChG,KAAKC,MAAM2L,QAAQgpC,0CAF9HC,OAAWE,OAIZF,GAA6B,OAAfA,IAChBpC,EAAYmC,GAAc50C,KAAKsC,cAAc0W,iBAAiB67B,EAAW70C,KAAKoC,MAAMwkC,oBAAoBr8B,WAErF,OAAjBwqC,IACFA,EAAe/0C,KAAKsC,cAAc0W,iBAAiB+7B,EAAa/0C,KAAKoC,MAAMwkC,oBAAoBr8B,WAC9E4O,GAAG,KAElBq2B,EAAcoF,GAAcG,EAExBH,EAAa3B,IACfC,GAAiB,YAf+B0B,4BAqBxDjkC,EAAS6+B,cAAgBA,UAGrBuD,EAAgBvD,GAAiBruC,OAAOqF,KAAKgpC,GAAezqC,OAAO,EAEnEw1C,EAAqBv6C,KAAKsC,cAAcwJ,gBAAgB,CAAC,QAAQ,mBACjE0uC,EAA+BD,EAAmBtF,eAExDtkC,EAASwiC,gBAAiB,EAC1BxiC,EAAS8hC,YAAcA,EACvB9hC,EAASuiC,eAAiBA,EAC1BviC,EAASoiC,aAAeA,EACxBpiC,EAAS+hC,YAAcK,GAAgByH,EACvC7pC,EAAS6hC,SAAWU,GAAkBH,EACtCpiC,EAASrH,OAASypC,EAAe,SAAW,UAC5CpiC,EAAS8iC,0BAA4BA,EAErCzzC,KAAKgD,SAAS2N,uQAIRvG,EAAgBpK,KAAKC,MAAM6zC,UAAUC,QAAU/zC,KAAKC,MAAM6wB,UAAUxmB,gBAAgBtK,KAAKC,MAAM6zC,UAAUC,QAAU/zC,KAAKC,MAAM6zC,UAAUC,OAAS5yC,OAAOqF,KAAKxG,KAAKC,MAAM6wB,UAAUxmB,iBAAiB,YAEnMtK,KAAKsC,cAAcmT,aAAatU,OAAOqF,KAAKxG,KAAKC,MAAM6wB,UAAUxmB,iBAAjE,eAAAmwC,EAAAt5C,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAAkF,SAAAkK,EAAOpW,GAAP,IAAAU,EAAA,OAAAwnB,EAAAzyB,EAAA6W,KAAA,SAAAgK,GAAA,cAAAA,EAAA9J,KAAA8J,EAAA7J,MAAA,UAChF/L,EAAcjF,EAAKnF,MAAM6wB,UAAUxmB,gBAAgBX,GACnCvE,EAAK9C,cAAcuxB,kBAAkBxpB,EAAYV,SACjDU,EAAY4mB,IAHoD,CAAAhR,EAAA7J,KAAA,eAAA6J,EAAA7J,KAAA,EAI9EhR,EAAKnF,MAAM+wB,aAAa3mB,EAAYV,MAAMU,EAAYoJ,QAAQpJ,EAAY4mB,KAJI,wBAAAhR,EAAArJ,SAAAmJ,EAAA/f,SAAlF,gBAAAwf,GAAA,OAAAi7B,EAAA3jC,MAAA9W,KAAA8E,YAAA,WAQN9E,KAAK2xB,gBAAgBvnB,wLAGEnL,EAAUC,sEACjCc,KAAKyC,cAEoBxD,EAAU60C,UAAUC,SAAW/zC,KAAKC,MAAM6zC,UAAUC,wCAErE/zC,KAAK2zB,oBAGgBz0B,EAAUkL,gBAAkBpK,KAAKoC,MAAMgI,eAElEpK,KAAK4zC,oJAqIA,IAAArnC,EAAAvM,KAEP,IAAKA,KAAKoC,MAAMgI,cACd,OAAO,KAGT,IACMowC,EADqBx6C,KAAKsC,cAAcwJ,gBAAgB,CAAC,QAAQ,mBACfmpC,eAElDY,EAAU71C,KAAKoC,MAAMotC,eAAiBruC,OAAOqF,KAAKxG,KAAKoC,MAAMotC,eAAezqC,OAAO,EAAI5D,OAAOqF,KAAKxG,KAAKoC,MAAMotC,eAAe,GAAK,KAClIuF,EAAe/0C,KAAKoC,MAAMotC,eAAiBruC,OAAOwG,OAAO3H,KAAKoC,MAAMotC,eAAezqC,OAAO,EAAI5D,OAAOwG,OAAO3H,KAAKoC,MAAMotC,eAAe,GAAK,KAEjJ,OACEnsC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACP0G,GAAI,CAAC,EAAE,GACPzG,WAAY,SACZC,cAAe,SACfK,eAAgB,UAEhBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,CAAC,EAAE,KACVC,WAAY,UACZC,cAAe,SACfK,eAAgB,UAEhBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,GAEP6D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM/D,GAAI,GAAV,4BAGA8D,EAAAjE,EAAAC,cAACwrB,EAAA,EAAD1pB,OAAAC,OAAA,GACMpB,KAAKC,MADX,CAEE+M,GAAI,aACJwe,aAAa,EACbO,cAAc,EACdxkB,SAAUvH,KAAK2xB,gBACfvnB,cAAepK,KAAKoC,MAAMgI,cAC1BE,gBAAiBtK,KAAKC,MAAM6wB,UAAUxmB,qBAIvCtK,KAAKoC,MAAMswC,YAAc1yC,KAAKoC,MAAMowC,WACnCnvC,EAAAjE,EAAAC,cAACmG,EAAA,EAAD,CACEC,UAAW,CACT2J,EAAE,EACFzJ,GAAG,EACHO,GAAG,IAGL7C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE7D,WAAY,SACZC,cAAe,UAEf2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPC,WAAY,SACZC,cAAe,OAEf2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEJ,KAAM,QACN8C,KAAOhG,KAAKoC,MAAMqxC,0BAA4B,WAAa,WAC3DvzC,MAAQF,KAAKoC,MAAMqxC,0BAA4BzzC,KAAKC,MAAMoG,MAAMC,OAAOmF,aAAarH,OAAO0E,UAAY,aAEzGzF,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEoE,GAAI,EACJnH,SAAU,EACVL,MAAO,WACPO,UAAW,QAJb,yCASF4C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ1G,MAAO,EACPC,WAAY,SACZC,cAAe,OAEf2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEJ,KAAM,QACN8C,KAAOhG,KAAKoC,MAAM2wC,aAAe,WAAa,WAC9C7yC,MAAQF,KAAKoC,MAAM2wC,aAAe/yC,KAAKC,MAAMoG,MAAMC,OAAOmF,aAAarH,OAAO0E,UAAY,aAE5FzF,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEoE,GAAI,EACJnH,SAAU,EACVL,MAAO,WACPO,UAAW,QAJb,gBAMgBT,KAAKoC,MAAMwkC,oBAAoBj9B,QAGjDtG,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ1G,MAAO,EACPC,WAAY,SACZC,cAAe,OAEf2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEJ,KAAM,QACN8C,KAAOhG,KAAKoC,MAAM8wC,eAAiB,WAAa,SAChDhzC,MAAQF,KAAKoC,MAAM8wC,eAAiBlzC,KAAKC,MAAMoG,MAAMC,OAAOmF,aAAarH,OAAO0E,UAAY,aAE9FzF,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEoE,GAAI,EACJnH,SAAU,EACVL,MAAO,WACPO,UAAW,QAJb,sCASF4C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ1G,MAAO,EACPC,WAAY,SACZC,cAAe,OAEf2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEJ,KAAM,QACN8C,KAAOhG,KAAKoC,MAAM+wC,eAAiB,WAAa,SAChDjzC,MAAQF,KAAKoC,MAAM+wC,eAAiBnzC,KAAKC,MAAMoG,MAAMC,OAAOmF,aAAarH,OAAO0E,UAAY,aAE9FzF,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEoE,GAAI,EACJnH,SAAU,EACVL,MAAO,WACPO,UAAW,QAJb,cAMcT,KAAKoC,MAAMgI,cANzB,SAaRpK,KAAKoC,MAAMgI,cACT/G,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAK9D,MAAO,GAERQ,KAAKoC,MAAMqxC,4BAA8BzzC,KAAKoC,MAAMswC,YAAc1yC,KAAKoC,MAAMowC,WAC3EnvC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJxG,cAAe,UAEf2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM/D,GAAI,GAAV,sBAGA8D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE7D,WAAY,SACZC,cAAe,MACfK,eAAgB,iBAEhBsD,EAAAjE,EAAAC,cAACmG,EAAA,EAAD,CACEC,UAAW,CACT2J,EAAE,EACF5P,MAAM,IACNgxB,YAAY,WACV,OAAOjkB,EAAKnK,MAAMswC,WAAanmC,EAAK6xB,UAAU,WAAa,OAG/Dv4B,eAAe,EACfswC,YAAcn2C,KAAKoC,MAAMswC,WACzBjkB,SAAiC,YAAtBzuB,KAAKoC,MAAMkH,QAEtBjG,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE8D,GAAI,EACJ3H,WAAY,SACZC,cAAe,MACfK,eAAgB,UAEhBsD,EAAAjE,EAAAC,cAAC6O,GAAA,EAAD,CACEP,YAAa,CACXrE,OAAO,WAET8hB,UAAW,CACTplB,KAAK,OACL/F,MAAM,CACJE,GAAG,MAITkD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/C,SAAU,EACVC,WAAY,GAFd,aAQJ6C,EAAAjE,EAAAC,cAACmG,EAAA,EAAD,CACEC,UAAW,CACT2J,EAAE,EACF5P,MAAM,IACNgxB,YAAY,WACV,OAAOjkB,EAAKnK,MAAMowC,SAAWjmC,EAAK6xB,UAAU,UAAY,OAG5Dv4B,eAAe,EACfswC,YAAcn2C,KAAKoC,MAAMowC,SACzB/jB,SAAiC,WAAtBzuB,KAAKoC,MAAMkH,QAEtBjG,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE8D,GAAI,EACJ3H,WAAY,SACZC,cAAe,MACfK,eAAgB,UAEhBsD,EAAAjE,EAAAC,cAAC6O,GAAA,EAAD,CACEP,YAAa,CACXrE,OAAO,UAET8hB,UAAW,CACTplB,KAAK,OACL/F,MAAM,CACJE,GAAG,MAITkD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/C,SAAU,EACVC,WAAY,GAFd,aAYY,YAAtBR,KAAKoC,MAAMkH,OACTkxC,EACEn3C,EAAAjE,EAAAC,cAAC+2C,GAAA,EAADj1C,OAAAC,OAAA,GACMpB,KAAKC,MADX,CAEEo2C,aAAa,EACbK,gBAAiB,GACjBJ,eAAe,EACfC,iBAAiB,EACjBE,cAAe,eACfrzB,SAAU,uBACV/Y,YAAarK,KAAKoC,MAAMiI,YACxBD,cAAepK,KAAKoC,MAAMgI,cAC1BgrB,gBAAiBp1B,KAAK4zC,YAAYzmC,KAAKnN,MACvC8X,iBAAkB9X,KAAKC,MAAM6X,iBAC7B67B,kBAAmB3zC,KAAK2zC,kBAAkBxmC,KAAKnN,MAC/C62C,cAAa,gBAAAzwC,OAAkBpG,KAAKoC,MAAMwkC,oBAAoBj9B,MAAjD,+CAAAvD,OAAoGpG,KAAKoC,MAAMiI,YAAY08B,KAAKp9B,MAAhI,OAGV3J,KAAKC,MAAM2L,QAoCVvI,EAAAjE,EAAAC,cAACmG,EAAA,EAAD,CACEC,UAAW,CACT2J,EAAE,EACFhI,GAAG,IAIHyuC,EACExyC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE7D,WAAY,SACZC,cAAe,UAEf2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEJ,KAAM,QACNhD,MAAO,WACP8F,KAAM,mBAER3C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ3F,SAAU,EACVL,MAAO,WACPO,UAAW,UAGTT,KAAKoC,MAAM8wC,eACT7vC,EAAAjE,EAAAC,cAACiE,EAAA,EAAK+f,KAAN,CACEnjB,MAAO,YADT,qFAIAmD,EAAAjE,EAAAC,cAACiE,EAAA,EAAK+f,KAAN,CACEnjB,MAAO,YADT,mCAGmC60C,EAAahqC,QAAQ,GAHxD,IAG6D/K,KAAKoC,MAAMwkC,oBAAoBj9B,MAH5F,kEAK+C,qBAApC3J,KAAKoC,MAAMqwC,YAAYoD,IAC9BxyC,EAAAjE,EAAAC,cAACiE,EAAA,EAAK+f,KAAN,CACEnjB,MAAO,YAEPmD,EAAAjE,EAAAC,cAAA,WAHF,eAGqBW,KAAKoC,MAAMqwC,YAAYoD,GAAS9qC,QAAQ,GAH7D,IAGkE/K,KAAKoC,MAAMwkC,oBAAoBj9B,UAQ3G3J,KAAKoC,MAAMmxC,mBACblwC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE7D,WAAY,SACZC,cAAe,UAEf2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEJ,KAAM,QACN8C,KAAM,UACN9F,MAAOF,KAAKC,MAAMoG,MAAMC,OAAOmF,aAAarH,OAAO0E,YAErDzF,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ3F,SAAU,EACVL,MAAO,WACPO,UAAW,UAJb,wCAMwCT,KAAKoC,MAAMwkC,oBAAoBj9B,MANvE,qBAUFtG,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE7D,WAAY,SACZC,cAAe,UAEf2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEJ,KAAM,QACN8C,KAAM,WACN9F,MAAO,aAETmD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ3F,SAAU,EACVL,MAAO,WACPO,UAAW,UAJb,sBAMsBT,KAAKoC,MAAMwkC,oBAAoBj9B,MANrD,sBA9GRtG,EAAAjE,EAAAC,cAACmG,EAAA,EAAD,CACEC,UAAW,CACT2J,EAAE,EACFlJ,GAAG,IAGL7C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE7D,WAAY,SACZC,cAAe,UAEf2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEJ,KAAM,QACN8C,KAAM,QACN9F,MAAO,aAETmD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ3F,SAAU,EACVL,MAAO,WACPO,UAAW,UAJb,uDAQA4C,EAAAjE,EAAAC,cAAC4B,EAAA,EAAD,CACEC,YAAa,CACXgF,GAAG,EACH1G,MAAM,CAAC,EAAE,KAEXkC,YAAa1B,KAAKC,MAAMslC,2BAL1B,cAuGVliC,EAAAjE,EAAAC,cAACmG,EAAA,EAAD,CACEC,UAAW,CACT2J,EAAE,EACFhI,GAAG,IAGL/D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE7D,WAAY,SACZC,cAAe,UAEf2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/C,SAAU,EACVL,MAAO,WACPO,UAAW,UAHb,iDAWN4C,EAAAjE,EAAAC,cAACmG,EAAA,EAAD,CACEC,UAAW,CACT2J,EAAE,EACFhI,GAAG,IAIHpH,KAAKoC,MAAM8b,WAAW00B,MAAMzqC,QAC1B9E,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE5D,cAAe,UAEf2D,EAAAjE,EAAAC,cAACye,EAAA,EAAD3c,OAAAC,OAAA,GAAmBpB,KAAKC,MAAxB,CAA+BmjB,SAAQ,qBAAwBD,WAAU,gCAAmCtgB,KAAM7C,KAAKoC,MAAM8b,WAAW00B,MAAMrlC,WAE9IvN,KAAKoC,MAAM+wC,eACb9vC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE7D,WAAY,SACZC,cAAe,UAEf2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEJ,KAAM,QACN8C,KAAM,UACN9F,MAAOF,KAAKC,MAAMoG,MAAMC,OAAOmF,aAAarH,OAAO0E,YAErDzF,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ3F,SAAU,EACVL,MAAO,WACPO,UAAW,UAJb,wCAMwCT,KAAKoC,MAAMgI,cANnD,QAQA/G,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJzF,UAAW,SACXqH,WAAY,UACZrG,QAAU,SAAA+F,GAAC,OAAI+E,EAAKtM,MAAMuxC,YAAYjlC,EAAKnK,MAAMwkC,oBAAoB0I,SAAS,IAAI/iC,EAAKnK,MAAMwkC,oBAAoBhV,aAJnH,wBASA5xB,KAAKoC,MAAM8wC,eACb7vC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE7D,WAAY,SACZC,cAAe,UAEf2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEJ,KAAM,QACNhD,MAAO,WACP8F,KAAM,eAER3C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ3F,SAAU,EACVL,MAAO,WACPO,UAAW,UAJb,+BAM8B4C,EAAAjE,EAAAC,cAAA,WAN9B,0BAM4DW,KAAKoC,MAAMiI,YAAY08B,KAAKp9B,MANxF,QAQAtG,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPC,WAAY,SACZC,cAAe,SACfK,eAAgB,iBAEhBsD,EAAAjE,EAAAC,cAAC4B,EAAA,EAAD,CACEC,YAAa,CACXgF,GAAG,EACH1G,MAAM,CAAC,EAAE,IACT8B,UAAUtB,KAAKC,MAAMoG,MAAMC,OAAOiC,QAEpC7G,YAAc,SAAA8F,GAAC,OAAI+E,EAAKqmC,UAN1B,WAaJvvC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE7D,WAAY,SACZC,cAAe,UAEf2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEJ,KAAM,QACNhD,MAAO,WACP8F,KAAM,mBAER3C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ3F,SAAU,EACVL,MAAO,WACPO,UAAW,UAEX4C,EAAAjE,EAAAC,cAACiE,EAAA,EAAK+f,KAAN,CACEnjB,MAAO,YADT,mCAGmC60C,EAAahqC,QAAQ,GAHxD,IAG6D/K,KAAKoC,MAAMwkC,oBAAoBj9B,MAH5F,qEAK+C,qBAApC3J,KAAKoC,MAAMqwC,YAAYoD,IAC9BxyC,EAAAjE,EAAAC,cAACiE,EAAA,EAAK+f,KAAN,CACEnjB,MAAO,YAEPmD,EAAAjE,EAAAC,cAAA,WAHF,eAGqBW,KAAKoC,MAAMqwC,YAAYoD,GAAS9qC,QAAQ,GAH7D,IAGkE/K,KAAKoC,MAAMwkC,oBAAoBj9B,YAYnH,cAlwBa3I,6EC6xCd05C,8MAzyCbt4C,MAAQ,CACNkC,QAAQ,GACR4Z,WAAY,CACV3Q,OAAO,KACPpF,SAAQ,EACRwyC,YAAY,IAEdrxC,OAAO,SACPsxC,WAAU,EACVC,WAAW,KACXC,WAAW,KACXC,WAAU,EACVC,aAAa,GACb3wC,YAAY,KACZyqB,aAAa,KACblE,aAAa,KACbqqB,aAAY,EACZC,aAAa,KACbC,cAAc,KACdC,kBAAkB,GAClBC,kBAAiB,EACjBC,OAAO,CACL,CACEt1C,KAAK,QACL8I,KAAK,WAEP,CACE9I,KAAK,YACL8I,KAAK,WAEP,CACE9I,KAAK,gBACL8I,KAAK,eAMXxM,cAAgB,gFAGVtC,KAAKsC,cACPtC,KAAKsC,cAAcC,SAASvC,KAAKC,OAEjCD,KAAKsC,cAAgB,IAAIE,IAAcxC,KAAKC,yCAItCqJ,GACRtJ,KAAKgD,SAAS,CACZsG,SACAwxC,WAAW,KACXD,WAAW,KACXM,cAAc,KACdE,iBAAiB,2JAKnBr7C,KAAKgD,SAAS,CACZkb,WAAY,CACV3Q,OAAO,KACPpF,SAAQ,EACRwyC,YAAY,6PAMhB36C,KAAKyC,YACLzC,KAAKu7C,qMAGkBt8C,EAAUC,mEACjCc,KAAKyC,YACLzC,KAAKw7C,eACLx7C,KAAKy7C,cAEoBv8C,EAAUm8C,mBAAqBr7C,KAAKoC,MAAMi5C,kBAAoBr7C,KAAKoC,MAAMi5C,kBAEhGr7C,KAAKu7C,qSAKDlxC,EAAcrK,KAAKsC,cAAcwJ,gBAAgB,CAAC,YAAY,SAC9D4vC,EAAuB17C,KAAKC,MAAM6wB,UAAU6qB,UAAUD,qBACtDlb,EAAYxgC,KAAKsC,cAAcwJ,gBAAgB,CAAC,UAAU,8BACrC9L,KAAKsC,cAAcs5C,sBAAsB,eAAgB,eAAgB,CAACpb,YAAWC,QAAS,yBAAnHob,SACAC,EAA6BD,EAAar3C,OAAQ,SAAA4K,GAAC,OAAIA,EAAEoyB,aAAaua,eAAexyC,gBAAkBmyC,EAAqBjoC,QAAQlK,gBAAgB7C,IAAK,SAAA0I,GAAC,OAAIA,EAAEoyB,aAAawa,QAG7KZ,EAAoB,aACpBp7C,KAAKsC,cAAcmT,aAAaqmC,EAAhC,eAAApmC,EAAAvU,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAA4D,SAAAmC,EAAOikC,GAAP,IAAAnmB,EAAA/d,EAAA8G,EAAAq9B,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA1qB,EAAAzyB,EAAA6W,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,cAC1D0f,EAD0D,cAAA1vB,OAC7B61C,GAD6BhkC,EAAA7B,KAAA,EAE1DhR,EAAKnF,MAAM+wB,aAAa8E,EAAammB,EAAgBP,EAAqBzqB,KAFhB,cAAAhZ,EAAA7B,KAAA,EAUtDwI,QAAQkD,IAAI,CAElB1c,EAAK9C,cAAcw3B,oBAAoBhE,EAAa,SACpD1wB,EAAK9C,cAAcw3B,oBAAoBhE,EAAa,aACpD1wB,EAAK9C,cAAcw3B,oBAAoBhE,EAAa,iBACpD1wB,EAAK9C,cAAc06B,gBAAgB3yB,EAAYV,MAAMsyC,GACrD72C,EAAK9C,cAAcw3B,oBAAoBhE,EAAa,uBAhBQ,OAAA/d,EAAAE,EAAAE,KAAA0G,EAAA1d,OAAA8qC,EAAA,EAAA9qC,CAAA4W,EAAA,GAK9DmkC,EAL8Dr9B,EAAA,GAM9Ds9B,EAN8Dt9B,EAAA,GAO9Du9B,EAP8Dv9B,EAAA,GAQ9Dw9B,EAR8Dx9B,EAAA,GAS9Dy9B,EAT8Dz9B,EAAA,GAmB5D09B,EAAiBn3C,EAAK9C,cAAc+T,MAAM,GAC1CimC,IACFC,EAAiBD,EAAeprB,OAAQ,SAACsrB,EAAM1xC,GAE7C,OADA0xC,EAAQA,EAAMlmC,KAAKxL,IAEnB1F,EAAK9C,cAAc+T,MAAM,IAE3BkmC,EAAiBn3C,EAAK9C,cAAc0W,iBAAiBujC,EAAelyC,EAAYE,WAKlF6wC,EAAkBlwC,KAAK,CACrBgxC,QACAC,YACArmB,eACAsmB,gBACAG,iBACAN,kBACAI,qBAtC8D,yBAAApkC,EAAArB,SAAAoB,EAAAhY,SAA5D,gBAAA6W,GAAA,OAAAnB,EAAAoB,MAAA9W,KAAA8E,YAAA,6BAyCqB9E,KAAKsC,cAAc06B,gBAAgB,OAAOh9B,KAAKC,MAAM2L,iBAA1EkpB,SAIN90B,KAAKgD,SAAS,CACZqH,cACAyqB,eACAsmB,gKAKF,IAAMR,EAAYz5C,OAAOwG,OAAO3H,KAAKoC,MAAMkC,SAASS,OAAO,EACvD61C,IAAc56C,KAAKoC,MAAMw4C,WAC3B56C,KAAKgD,SAAS,CACZ43C,2DAKe9vC,GAMnB,MALe,CACb/J,MAAM,KACNm1B,WAAW,UACXC,aAAa,CAACrrB,0CAKJrB,GAAG,IAAA8C,EAAAvM,KAEf,GAAkB,YAAdyJ,EAAGrF,OAAqB,CAC1BpE,KAAKu7C,gBAEL,IAAMkB,EAAmBhzC,EAAGwyB,WAAaxyB,EAAGwyB,UAAUC,KAAOzyB,EAAGwyB,UAAUC,KAAKhR,KAAM,SAAA6Q,GAAG,OAAIA,EAAItoB,QAAQlK,gBAAkBgD,EAAKnK,MAAMiI,YAAYoJ,QAAQlK,gBAAkB,KAC3K,GAAIkzC,EAAiB,CACnB,IAAMtB,EAAgBn7C,KAAKsC,cAAc0W,iBAAiB1M,SAASmwC,EAAiB1sC,KAAK,IAAI/P,KAAKoC,MAAMiI,YAAYE,UACpHvK,KAAKgD,SAAS,CACZm4C,4DAMQ1xC,EAAGqB,EAAOirB,GAEN,YAAdtsB,EAAGrF,QACLpE,KAAKu7C,8DAIazsC,GAAwB,IAAnB4tC,EAAmB53C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACxC63C,EAAe,KACnB,OAAQ7tC,GACN,IAAK,UACH6tC,EAAe,sBACjB,MACA,IAAK,YACHA,EAAe,+BACjB,MACA,IAAK,SACHA,EAAe,SACjB,MACA,IAAK,OACHA,EAAe,QACjB,MACA,IAAK,UACL,IAAK,QACHA,EAAe,SACjB,MACA,QACEA,EAAe,KAQnB,OAJKD,GAAgBC,IACnBA,EAAe,IAAIC,OAAOD,IAGrBA,wCAGI,IAAAnwC,EAAAxM,KAEX,IAAKA,KAAKoC,MAAM84C,aACd,OAAO,EAGT,IAAMI,EAASt7C,KAAKoC,MAAMk5C,OACtBL,EAAc95C,OAAOwG,OAAO3H,KAAKoC,MAAM84C,cAAcn2C,SAAWu2C,EAAOv2C,OAEvEk2C,GACF95C,OAAOwG,OAAO3H,KAAKoC,MAAM84C,cAAchxC,QAAS,SAACgqB,EAAW2oB,GAC1D,IAAMC,EAAYxB,EAAOuB,GACnBF,EAAenwC,EAAKuwC,sBAAsBD,EAAUhuC,MACpDkuC,GAAaL,GAAkD,OAAnCzoB,EAAW+oB,MAAMN,GACnD1B,EAAcA,GAAe+B,IAK7B/B,IAAgBj7C,KAAKoC,MAAM64C,aAC7Bj7C,KAAKgD,SAAS,CACZi4C,oDAKMzzC,EAAEq1C,GACZ,IAAIK,EAAc11C,EAAEgH,OAAOzN,MAC3Bf,KAAKgD,SAAS,CACZk6C,oDAIQ11C,EAAEq1C,GACZ,IAAI3oB,EAAa1sB,EAAEgH,OAAOzN,MAE1Bf,KAAKgD,SAAS,SAAC9D,GAAD,MAAgB,CAC5Bg8C,aAAa/5C,OAAAuD,EAAA,EAAAvD,CAAA,GACRjC,EAAUg8C,aADH/5C,OAAAwD,GAAA,EAAAxD,CAAA,GAET07C,EAAY3oB,8CAMjB,GAA8B,OAA1Bl0B,KAAKoC,MAAM04C,WAAoB,CACjC,IAAIx2C,EAAUtE,KAAKoC,MAAMkC,QACzB,GAAIA,EAAQtE,KAAKoC,MAAM04C,YAAY,QAC1Bx2C,EAAQtE,KAAKoC,MAAM04C,YAC1Bx2C,EAAUnD,OAAOwG,OAAOrD,GAIxBtE,KAAKgD,SAAS,CACZsB,UACAw2C,WALiB,KAMjBI,aALmB,6CAWhB,IAAA/e,EAAAn8B,KA2BT,GAxBemB,OACEwG,OAAO3H,KAAKoC,MAAM84C,cAAc12C,OAAQ,SAAAoD,GAAC,OAAIA,EAAE7C,OAAO,IACtD2B,IAAK,SAACwtB,EAAW2oB,GAChB,IAAMC,EAAY3gB,EAAK/5B,MAAMk5C,OAAOuB,GACpC,OAAQC,EAAUhuC,MAChB,IAAK,YACHolB,EAAaA,EAAWpB,MAAM,KAChC,MACA,IAAK,YACHoB,EAAaA,EAAWpB,MAAM,KAAKpsB,IAAK,SAAAkjC,GAAC,OAAIzN,EAAK75B,cAAc03B,KAAK4P,KACvE,MACA,IAAK,UACH1V,EAAaiI,EAAK75B,cAAc03B,KAAK9F,GACvC,MACA,QACoC,OAA9B4oB,EAAUhuC,KAAK+T,QAAQ,KACzBqR,EAAaA,EAAWpB,MAAM,MAKpC,OAAOoB,IAGdnvB,OAAO/E,KAAKoC,MAAMk5C,OAAOv2C,OAClC,OAAO,EAGT,IAAMuE,EAAS,CACb6zC,QAAQ,KACRlB,gBAAgB,KAChBX,OAAOt7C,KAAKoC,MAAM84C,cAId52C,EAAUnD,OAAOwG,OAAO3H,KAAKoC,MAAMkC,SAEX,OAA1BtE,KAAKoC,MAAM04C,WACbx2C,EAAQ4G,KAAK5B,GAEbhF,EAAQtE,KAAKoC,MAAM04C,YAAcxxC,EAMnCtJ,KAAKgD,SAAS,CACZsB,UACAy2C,WAdgB,EAehBD,WANiB,KAOjBI,aANmB,6CAUTJ,GAEZ,IAAK96C,KAAKoC,MAAMkC,QAAQw2C,GACtB,OAAO,EAGT,GAAIA,IAAe96C,KAAKoC,MAAM04C,WAC5B,OAAO,EAGT,IAGMI,EAHSl7C,KAAKoC,MAAMkC,QAAQw2C,GAGNQ,OAE5Bt7C,KAAKgD,SAAS,CACZ+3C,WAJgB,EAKhBD,aACAI,uDAIUL,GAEZ,GAAIA,IAAe76C,KAAKoC,MAAMy4C,WAAW,CACvC,IAAMa,EAAuB17C,KAAKC,MAAM6wB,UAAU6qB,UAAUD,qBACtD0B,EAAmBp9C,KAAKoC,MAAMg5C,kBAAkBP,GAChDjqB,EAAe,CACnBK,IAAIyqB,EAAqBzqB,IACzBjrB,KAAKo3C,EAAiBtnB,aACtBriB,QAAQ2pC,EAAiBnB,iBAE3Bj8C,KAAKgD,SAAS,CACZ63C,aACAjqB,eACAuqB,cAAc,6CAKPJ,GACX,GAAIA,IAAc/6C,KAAKoC,MAAM24C,UAC3B,OAAO,EAKT/6C,KAAKgD,SAAS,CACZ+3C,YACAD,WAJiB,oFAQFtzC,6FACjBA,EAAE2D,iBAEIuwC,EAAuB17C,KAAKC,MAAM6wB,UAAU6qB,UAAUD,qBACtD2B,EAAcr9C,KAAKsC,cAAcwJ,gBAAgB,CAAC,YAAY,OAAO,YAErE8E,EAAW,SAACnH,EAAGsU,EAAM48B,GACzB,IAAMxmB,EAA4B,YAAd1qB,EAAGrF,OACjBE,EAAUnD,OAAOwG,OAAO01B,EAAKj7B,MAAMkC,SACnCg5C,EAAehxC,SAASquC,KAAeruC,SAAS+wB,EAAKj7B,MAAMkC,QAAQS,QAAQ,EAC3Es2C,EAAmBlnB,GAAempB,EAExC,GAAInpB,EAAY,CACd,IAAMopB,EAAsB9zC,EAAGwyB,UAAUuhB,QAAU/zC,EAAGwyB,UAAUuhB,OAAOC,aAAeh0C,EAAGwyB,UAAUuhB,OAAOC,aAAajc,aAAa,GAAxG,KAAAp7B,OAAkHqD,EAAGwyB,UAAUC,KAAK,GAAGnsB,KAAK8S,QAAQ,KAChLve,EAAQq2C,GAAasB,gBAAkBsB,OAGvCj5C,EAAQq2C,GAAawC,SAAU,EAKjC9f,EAAKr6B,SAAS,CACZsB,UACA+2C,oBACA,WACIiC,GACFjgB,EAAK3Z,uBAKLmS,EAAkB,SAACpsB,EAAGkxC,GAC1B,IAAMptC,EAAS9D,EAAGgsB,gBAEZvX,EAAa/c,OAAOC,OAAO,GAAGi8B,EAAKj7B,MAAM8b,YAC/CA,EAAW3Q,OAASA,EACpB2Q,EAAWy8B,YAAYzvC,KAAKyvC,GAC5Btd,EAAKr6B,SAAS,CACZkb,gBAIJle,KAAKoC,MAAMkC,QAAQ4F,QAAQ,SAACZ,EAAOqxC,GACjC,IAAM+C,EAAep0C,EAAOgyC,OAAO,GAC7BqC,EAAmBr0C,EAAOgyC,OAAO,GACjCc,EAAgB9yC,EAAOgyC,OAAO,GAE9BsC,EAAWvgB,EAAKp9B,MAAMmf,KAAKC,IAAI4R,IAAI4sB,iBACvC,CAAC,UAAU,UAAU,UAAU,WAC/B,CAACH,EAAaL,EAAYM,EAAiBvB,IAEvCjmB,EAAe,CAACulB,EAAqBjoC,QAL3B,8CAK2CmqC,GAC3DvgB,EAAK/6B,cAAcm0B,0BAA0B,eAAgB,gBAAiBN,EAAc,SAAC1sB,EAAGsU,GAAJ,OAAcnN,EAASnH,EAAGsU,EAAM48B,IAAc,SAAClxC,GAAD,OAAQosB,EAAgBpsB,EAAGkxC,OAGvK36C,KAAKgD,SAAS,SAAC9D,GAAD,MAAgB,CAC5Bgf,WAAW/c,OAAAuD,EAAA,EAAAvD,CAAA,GACNjC,EAAUgf,WADL,CAER/V,SAAQ,0BAIL,uIAGA,IAAAo1B,EAAAv9B,KAED89C,EAAmB99C,KAAKoC,MAAMg5C,kBAAkB52C,OAAQ,SAAAsqC,GAAC,OAAIA,EAAEoN,MAAM3yC,gBAAkBg0B,EAAKt9B,MAAM2L,QAAQrC,gBAC1Gw0C,EAAiB/9C,KAAKoC,MAAMg5C,kBAAkB52C,OAAQ,SAAAsqC,GAAC,OAAIA,EAAEqN,UAAU5yC,gBAAkBg0B,EAAKt9B,MAAM2L,QAAQrC,gBAElH,OACElG,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPC,WAAY,SACZC,cAAe,SACfK,eAAgB,UAEhBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,CAAC,EAAE,KACVC,WAAY,UACZC,cAAe,SACfK,eAAgB,UAEhBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPE,cAAe,UAEf2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/D,GAAI,GADN,sBAKA8D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE7D,WAAY,SACZC,cAAe,MACfK,eAAgB,iBAEhBsD,EAAAjE,EAAAC,cAACmvB,EAAA,EAADrtB,OAAAC,OAAA,GACMpB,KAAKC,MADX,CAEEwF,UAAW,CACTE,GAAG,EACHD,GAAG,EACHlG,MAAM,KAER6C,KAAM,SACN6R,KAAM,cACN2a,UAAW,UACXE,YAAa,UACbN,SAAiC,WAAtBzuB,KAAKoC,MAAMkH,OACtB5H,YAAc,SAAA8F,GAAC,OAAI+1B,EAAKa,UAAU,cAEpC/6B,EAAAjE,EAAAC,cAACmvB,EAAA,EAADrtB,OAAAC,OAAA,GACMpB,KAAKC,MADX,CAEEwF,UAAW,CACTE,GAAG,EACHD,GAAG,EACHlG,MAAM,KAER6C,KAAM,UACNwsB,UAAW,UACX3a,KAAM,gBACN6a,YAAa,UACbN,SAAiC,YAAtBzuB,KAAKoC,MAAMkH,OACtB5H,YAAc,SAAA8F,GAAC,OAAI+1B,EAAKa,UAAU,eAEpC/6B,EAAAjE,EAAAC,cAACmvB,EAAA,EAADrtB,OAAAC,OAAA,GACMpB,KAAKC,MADX,CAEEwF,UAAW,CACTE,GAAG,EACHD,GAAG,EACHlG,MAAM,KAER6C,KAAM,QACNwsB,UAAW,SACX3a,KAAM,cACN6a,YAAa,UACbN,SAAiC,UAAtBzuB,KAAKoC,MAAMkH,OACtB5H,YAAc,SAAA8F,GAAC,OAAI+1B,EAAKa,UAAU,eAIxC/6B,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEyD,GAAI,EACJvH,MAAO,EACP4H,GAAI,CAAC,EAAE,GACP4L,YAAa,UACbiwB,aAAc,yBAEd5/B,EAAAjE,EAAAC,cAACiE,EAAA,EAAQouC,GAAT,CACEnxC,SAAU,CAAC,EAAE,GACbC,WAAY,CAAC,EAAE,GACfZ,MAAO,CACLc,cAAc,eAGfV,KAAKoC,MAAMkH,SAGhBjG,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE5D,cAAe,UAGS,WAAtBM,KAAKoC,MAAMkH,OACTjG,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPo7C,UAAW56C,KAAKoC,MAAMw4C,UACtBoD,SAAUh+C,KAAKi+C,aAAa9wC,KAAKnN,OAG/BmB,OAAOwG,OAAO3H,KAAKoC,MAAMkC,SAASoC,IAAK,SAAC4C,EAAOqxC,GAC7C,OACEt3C,EAAAjE,EAAAC,cAACmG,EAAA,EAAD,CACEC,UAAW,CACTC,GAAG,EACHC,GAAG,EACHpG,GAAG,EACHC,MAAM,GAERk+B,iBAAkB,CAChBh2B,GAAG,EACHN,GAAG,EACHrH,eAAe,UAEjB09B,WAAY,CACVl9B,SAAS,EACTC,WAAW,GAEbqF,eAAe,EACfgB,IAAG,UAAAT,OAAYu0C,GACfp2B,MAAQgZ,EAAKn7B,MAAM04C,aAAeH,EAAc,gBAAkB,KAClEj5C,YAAc,SAAA8F,GAAC,OAAoI+1B,EAAK2gB,cAAcvD,KAGpKpd,EAAKn7B,MAAM04C,aAAeH,EACxBt3C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPC,WAAY,SACZC,cAAe,SACfK,eAAgB,UAGdw9B,EAAKn7B,MAAMk5C,OAAO50C,IAAK,SAACkkB,EAAMiyB,GAC5B,IAAMjX,EAAY,CAAC,UAAU,QAAQh8B,SAASghB,EAAM9b,MAAQ,SAAW,OACjE6tC,EAAepf,EAAKwf,sBAAsBnyB,EAAM9b,MAAK,GAC3D,OACEzL,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE1D,MAAO,CACLJ,MAAM,OACN2D,QAAQ,OACR1D,WAAW,UACXC,cAAc,UAEhBmH,IAAG,SAAAT,OAAWy2C,GACdl8C,MAAK,GAAAyF,OAAKwkB,EAAM5kB,KAAX,MAAAI,OAAoBwkB,EAAM9b,KAA1B,MAELzL,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEq0B,UAAQ,EACRn4B,MAAO,EACPsP,KAAM82B,EACNuY,QAASxB,EACT3pC,YAAa,aACb1S,gBAAiB,SACjBw3B,YAAW,GAAA1xB,OAAKwkB,EAAM5kB,KAAX,MAAAI,OAAoBwkB,EAAM9b,KAA1B,KACXvH,SAAW,SAAAC,GAAC,OAAI+1B,EAAK6gB,YAAY52C,EAAEq1C,IACnC97C,MAAOw8B,EAAKn7B,MAAM84C,cAAgB3d,EAAKn7B,MAAM84C,aAAa2B,GAActf,EAAKn7B,MAAM84C,aAAa2B,GAAc,QAMxHx5C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/D,GAAI,EACJC,MAAO,EACPC,WAAY,SACZC,cAAe,SACfK,eAAgB,UAGduJ,EAAO2yC,gBACL54C,EAAAjE,EAAAC,cAACkP,EAAA,EAAD,CACEhO,SAAU,EACVL,MAAOq9B,EAAKt9B,MAAMoG,MAAMC,OAAOmF,aAAarH,OAAO0E,UACnDhB,WAAYy1B,EAAKt9B,MAAMoG,MAAMC,OAAOmF,aAAarH,OAAO0E,UACxD2a,KAAM8Z,EAAKj7B,cAAc+7C,uBAAuB/0C,EAAO2yC,kBAJzD,eAMe3yC,EAAO2yC,kBAEnB1e,EAAKn7B,MAAM8b,WAAW/V,SACzB9E,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPC,WAAY,SACZC,cAAe,SACfK,eAAgB,UAEhBsD,EAAAjE,EAAAC,cAAC4B,EAAA,EAAD,CACEC,YAAa,CACXyE,GAAG,CAAC,EAAE,GACNmJ,KAAK,SACLtP,MAAM,CAAC,EAAE,QACT8lB,UAAUiY,EAAKn7B,MAAM64C,aAEvBv5C,YAAa67B,EAAK+gB,UAAUnxC,KAAKowB,IAPnC,iBAWAl6B,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJhG,MAAO,MACP4H,WAAY,MACZrG,QAAS87B,EAAKghB,aAAapxC,KAAKowB,IAJlC,sBAcVl6B,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPC,WAAY,SACZC,cAAe,MACfK,eAAgB,iBAEhBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,KACGi6B,EAAKj7B,cAAcM,YAAY0G,EAAOgyC,OAAO,IADhD,MACwD/d,EAAKj7B,cAAcM,YAAY0G,EAAOgyC,OAAO,IADrG,MAC6GhyC,EAAOgyC,OAAO,GAD3H,IACiIhyC,EAAO2yC,gBAAkB,aAAe,IAGvK3yC,EAAO2yC,gBACL54C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE8L,EAAG,MACH3P,WAAY,SACZM,eAAgB,UAEhBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE0C,KAAM,OACNkoB,MAAO,SACPhrB,KAAMq6B,EAAKt9B,MAAM8F,SAAW,QAAU,QACtC7F,MAAOq9B,EAAKt9B,MAAMoG,MAAMC,OAAOmF,aAAarH,OAAO0E,aAGrDy0B,EAAKn7B,MAAM8b,WAAW/V,SAAWo1B,EAAKn7B,MAAM8b,WAAWy8B,aAAepd,EAAKn7B,MAAM8b,WAAWy8B,YAAY/wC,SAAS0C,SAASquC,IAC5Ht3C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAQJ,KAAK,SACXoG,EAAO6zC,QACT95C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE8L,EAAG,MACH3P,WAAY,SACZM,eAAgB,UAEhBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEpD,MAAO,MACP8F,KAAM,QACNkoB,MAAO,SACPhrB,KAAOq6B,EAAKt9B,MAAM8F,SAAW,QAAU,WAI3C1C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE8L,EAAG,CAAC,MAAM,OACV/O,aAAc,MACdZ,WAAY,SACZM,eAAgB,SAChBO,gBAAkBi9B,EAAKt9B,MAAMoG,MAAMC,OAAOmF,aAAasd,SAASxgB,QAEhElF,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE0C,KAAM,OACNkoB,MAAO,SACPhuB,MAAO,SACPgD,KAAOq6B,EAAKt9B,MAAM8F,SAAW,QAAU,gBAazD/F,KAAKoC,MAAMi5C,mBAAqBr7C,KAAKoC,MAAM8b,WAAW/V,WAAanI,KAAKoC,MAAMkC,SAAWnD,OAAOwG,OAAO3H,KAAKoC,MAAMkC,SAASS,OAAO/E,KAAKoC,MAAM44C,eAC7I33C,EAAAjE,EAAAC,cAACmG,EAAA,EAAD,CACEC,UAAW,CACTC,GAAG,EACHC,GAAG,EACHpG,GAAG,EACHC,MAAM,GAERk+B,iBAAkB,CAChBh2B,GAAG,EACHN,GAAG,EACHrH,eAAe,UAEjB09B,WAAY,CACVl9B,SAAS,EACTC,WAAW,GAEbqF,eAAe,EACfnE,YAAc,SAAA8F,GAAC,OAAI+1B,EAAKihB,cAAa,IACrCj6B,MAAQvkB,KAAKoC,MAAM24C,UAAY,eAAiB,MAG9C/6C,KAAKoC,MAAM24C,UACT13C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPC,WAAY,SACZC,cAAe,SACfK,eAAgB,UAGdC,KAAKoC,MAAMk5C,OAAO50C,IAAK,SAACkkB,EAAMiyB,GAC5B,IAAMjX,EAAY,CAAC,UAAU,QAAQh8B,SAASghB,EAAM9b,MAAQ,SAAW,OACjE6tC,EAAepf,EAAKwf,sBAAsBnyB,EAAM9b,MAAK,GAC3D,OACEzL,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE1D,MAAO,CACLJ,MAAM,OACN2D,QAAQ,OACR1D,WAAW,UACXC,cAAc,UAEhBmH,IAAG,SAAAT,OAAWy2C,GACdl8C,MAAK,GAAAyF,OAAKwkB,EAAM5kB,KAAX,MAAAI,OAAoBwkB,EAAM9b,KAA1B,MAELzL,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEq0B,UAAQ,EACRn4B,MAAO,EACPsP,KAAM82B,EACNuY,QAASxB,EACT3pC,YAAa,aACb1S,gBAAiB,SACjBw3B,YAAW,GAAA1xB,OAAKwkB,EAAM5kB,KAAX,MAAAI,OAAoBwkB,EAAM9b,KAA1B,KACXvH,SAAW,SAAAC,GAAC,OAAI+1B,EAAK6gB,YAAY52C,EAAEq1C,IACnC97C,MAAOw8B,EAAKn7B,MAAM84C,cAAgB3d,EAAKn7B,MAAM84C,aAAa2B,GAActf,EAAKn7B,MAAM84C,aAAa2B,GAAc,QAMxHx5C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPC,WAAY,SACZM,eAAgB,UAEhBsD,EAAAjE,EAAAC,cAAC4B,EAAA,EAAD,CACEC,YAAa,CACXyE,GAAG,CAAC,EAAE,GACNmJ,KAAK,SACLtP,MAAM,CAAC,EAAE,QACT8lB,UAAUtlB,KAAKoC,MAAM64C,aAEvBv5C,YAAa1B,KAAKs+C,UAAUnxC,KAAKnN,OAPnC,kBAcJqD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPC,WAAY,SACZC,cAAe,MACfK,eAAgB,iBAEhBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,qBAGAD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE8L,EAAG,CAAC,MAAM,OACV/O,aAAc,MACdZ,WAAY,SACZM,eAAgB,SAChBO,gBAAkBN,KAAKC,MAAMoG,MAAMC,OAAOmF,aAAasd,SAASxgB,QAEhElF,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE0C,KAAM,MACNkoB,MAAO,SACPhuB,MAAO,SACPgD,KAAOlD,KAAKC,MAAM8F,SAAW,QAAU,aASvD1C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/D,GAAI,EACJC,MAAO,EACPC,WAAY,SACZM,eAAgB,UAGdC,KAAKoC,MAAMi5C,iBACTh4C,EAAAjE,EAAAC,cAACmG,EAAA,EAAD,CACEC,UAAW,CACTC,GAAG,EACHC,GAAG,EACHnG,MAAM,CAAC,EAAE,UAGX6D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE7D,WAAY,SACZC,cAAe,SACfK,eAAgB,UAEhBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE0C,KAAM,UACNkoB,MAAO,SACPhrB,KAAOlD,KAAKC,MAAM8F,SAAW,QAAU,QACvC7F,MAAOF,KAAKC,MAAMoG,MAAMC,OAAOmF,aAAarH,OAAO0E,YAErDzF,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ1F,WAAY,EACZD,SAAU,CAAC,EAAE,GACbL,MAAO,YACPO,UAAW,UALb,8CAWFT,KAAKoC,MAAM8b,YAAcle,KAAKoC,MAAM8b,WAAW/V,QACjD9E,EAAAjE,EAAAC,cAACye,EAAA,EAAD3c,OAAAC,OAAA,GACMpB,KAAKC,MADX,CAEE4C,KAAM7C,KAAKoC,MAAM8b,WAAW3Q,OAC5B6V,SAAQ,0BACRD,WAAU,mCACVO,kBAAmB1jB,KAAK0jB,kBAAkBvW,KAAKnN,SAGjDqD,EAAAjE,EAAAC,cAAC4B,EAAA,EAAD,CACEC,YAAa,CACX4N,KAAK,SACLtP,MAAM,CAAC,EAAE,QACT8lB,UAAUtlB,KAAKoC,MAAMw4C,YAJzB,sBAagB,YAAtB56C,KAAKoC,MAAMkH,OACbw0C,EAAiB/4C,OAAO,EACtB+4C,EAAiBp3C,IAAK,SAACkqB,EAAa+pB,GAClC,OACEt3C,EAAAjE,EAAAC,cAACmG,EAAA,EAAD,CACEC,UAAW,CACTC,GAAG,EACHC,GAAG,EACHpG,GAAG,EACHC,MAAM,GAERk+B,iBAAkB,CAChBh2B,GAAG,EACHN,GAAG,EACHrH,eAAe,UAEjB09B,WAAY,CACVl9B,SAAS,EACTC,WAAW,GAEbqF,eAAe,EACfgB,IAAG,UAAAT,OAAYu0C,GACfj5C,YAAc,SAAA8F,GAAC,OAAI+1B,EAAKkhB,cAAc9D,IACtCp2B,MAAQgZ,EAAKn7B,MAAMy4C,aAAeF,EAAc,gBAAkB,MAGhEpd,EAAKn7B,MAAMy4C,aAAeF,EACxBt3C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPC,WAAY,SACZC,cAAe,SACfK,eAAgB,UAEhBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE1D,MAAO,CACLJ,MAAM,OACN2D,QAAQ,OACR1D,WAAW,UACXC,cAAc,UAEhBiB,MAAK,oBAEL0C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEq0B,UAAQ,EACR+mB,UAAQ,EACRl/C,MAAO,EACPsP,KAAM,UACNkE,YAAa,aACb1S,gBAAiB,SACjBS,MAAO6vB,EAAaqrB,mBAItB1e,EAAKn7B,MAAMk5C,OAAO50C,IAAK,SAACkkB,EAAMiyB,GAC5B,IAAMjX,EAAY,CAAC,UAAU,QAAQh8B,SAASghB,EAAM9b,MAAQ,SAAW,OACvE,OACEzL,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE1D,MAAO,CACLJ,MAAM,OACN2D,QAAQ,OACR1D,WAAW,UACXC,cAAc,UAEhBmH,IAAG,SAAAT,OAAWy2C,GACdl8C,MAAK,GAAAyF,OAAKwkB,EAAM5kB,KAAX,MAAAI,OAAoBwkB,EAAM9b,KAA1B,MAELzL,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEq0B,UAAQ,EACR+mB,UAAQ,EACRl/C,MAAO,EACPsP,KAAM82B,EACN5yB,YAAa,aACb1S,gBAAiB,SACjBS,MAAO6vB,EAAahG,EAAM5kB,WAMpC3C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE1D,MAAO,CACLJ,MAAM,OACN2D,QAAQ,OACR1D,WAAW,UACXC,cAAc,UAEhBiB,MAAK,mBAEL0C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEq0B,UAAQ,EACR+mB,UAAQ,EACRl/C,MAAO,EACPsP,KAAM,UACNkE,YAAa,aACb1S,gBAAiB,SACjBS,MAAO6vB,EAAa2rB,eAAexxC,QAAQ,MAG/C1H,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE1D,MAAO,CACLJ,MAAM,OACN2D,QAAQ,OACR1D,WAAW,UACXC,cAAc,UAEhBiB,MAAK,qBAEL0C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEq0B,UAAQ,EACR+mB,UAAQ,EACRl/C,MAAO,EACPsP,KAAM,UACNkE,YAAa,aACb1S,gBAAiB,SACjBS,MAAO6vB,EAAayrB,iBAAiBtxC,QAAQ,MAGjD1H,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/D,GAAI,EACJC,MAAO,EACPC,WAAY,SACZC,cAAe,SACfK,eAAgB,SAChBoG,UAAW,yBAEX9C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPC,WAAY,SACZC,cAAe,SACfK,eAAgB,UAEhBsD,EAAAjE,EAAAC,cAACg/B,EAADl9B,OAAAC,OAAA,GACMm8B,EAAKt9B,MADX,CAEEqJ,OAAQi0B,EAAKn7B,MAAMkH,OACnBe,YAAakzB,EAAKn7B,MAAMiI,YACxByqB,aAAcyI,EAAKn7B,MAAM0yB,aACzBlE,aAAc2M,EAAKn7B,MAAMwuB,aACzBhgB,SAAU2sB,EAAKohB,gBAAgBxxC,KAAKowB,GACpC/G,qBAAsB+G,EAAK/G,qBAAqBrpB,KAAKowB,GACrDxF,mBAAoB,iDAEpB10B,EAAAjE,EAAAC,cAACmG,EAAA,EAAD,CACEC,UAAW,CACT2J,EAAE,IAGJ/L,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE7D,WAAY,SACZC,cAAe,UAEf2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEJ,KAAM,QACN8C,KAAM,WACN9F,MAAO,aAETmD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJ3F,SAAU,EACVL,MAAO,WACPO,UAAW,UAJb,kDAeZ4C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPC,WAAY,SACZC,cAAe,MACfK,eAAgB,iBAEhBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,KACGi6B,EAAKj7B,cAAcM,YAAYguB,EAAasrB,OAD/C,MAC0D3e,EAAKj7B,cAAcM,YAAYguB,EAAaurB,WADtG,MACqHvrB,EAAawrB,eAElI/4C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE8L,EAAG,CAAC,MAAM,OACV/O,aAAc,MACdZ,WAAY,SACZM,eAAgB,SAChBO,gBAAkBi9B,EAAKt9B,MAAMoG,MAAMC,OAAOmF,aAAasd,SAASxgB,QAEhElF,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE0C,KAAM,SACNkoB,MAAO,SACPhuB,MAAO,SACPgD,KAAOq6B,EAAKt9B,MAAM8F,SAAW,QAAU,eAUvD1C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE7C,UAAW,UADb,0CAMoB,UAAtBT,KAAKoC,MAAMkH,QACXy0C,EAAeh5C,OAAO,EACpBg5C,EAAer3C,IAAK,SAACkqB,EAAa+pB,GAChC,OACEt3C,EAAAjE,EAAAC,cAACmG,EAAA,EAAD,CACEC,UAAW,CACTC,GAAG,EACHC,GAAG,EACHpG,GAAG,EACHC,MAAM,GAERk+B,iBAAkB,CAChBh2B,GAAG,EACHN,GAAG,EACHrH,eAAe,UAEjB09B,WAAY,CACVl9B,SAAS,EACTC,WAAW,GAEbqF,eAAe,EACfgB,IAAG,UAAAT,OAAYu0C,GACfj5C,YAAc,SAAA8F,GAAC,OAAI+1B,EAAKkhB,cAAc9D,IACtCp2B,MAAQgZ,EAAKn7B,MAAMy4C,aAAeF,EAAc,gBAAkB,MAGhEpd,EAAKn7B,MAAMy4C,aAAeF,EACxBt3C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPC,WAAY,SACZC,cAAe,SACfK,eAAgB,UAEhBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE1D,MAAO,CACLJ,MAAM,OACN2D,QAAQ,OACR1D,WAAW,UACXC,cAAc,UAEhBiB,MAAK,oBAEL0C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEq0B,UAAQ,EACR+mB,UAAQ,EACRl/C,MAAO,EACPsP,KAAM,UACNkE,YAAa,aACb1S,gBAAiB,SACjBS,MAAO6vB,EAAaqrB,mBAItB1e,EAAKn7B,MAAMk5C,OAAO50C,IAAK,SAACkkB,EAAMiyB,GAC5B,IAAMjX,EAAY,CAAC,UAAU,QAAQh8B,SAASghB,EAAM9b,MAAQ,SAAW,OACvE,OACEzL,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE1D,MAAO,CACLJ,MAAM,OACN2D,QAAQ,OACR1D,WAAW,UACXC,cAAc,UAEhBmH,IAAG,SAAAT,OAAWy2C,GACdl8C,MAAK,GAAAyF,OAAKwkB,EAAM5kB,KAAX,MAAAI,OAAoBwkB,EAAM9b,KAA1B,MAELzL,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEq0B,UAAQ,EACR+mB,UAAQ,EACRl/C,MAAO,EACPsP,KAAM82B,EACN5yB,YAAa,aACb1S,gBAAiB,SACjBS,MAAO6vB,EAAahG,EAAM5kB,WAMpC3C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE1D,MAAO,CACLJ,MAAM,OACN2D,QAAQ,OACR1D,WAAW,UACXC,cAAc,UAEhBiB,MAAK,mBAEL0C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEq0B,UAAQ,EACR+mB,UAAQ,EACRl/C,MAAO,EACPsP,KAAM,UACNkE,YAAa,aACb1S,gBAAiB,SACjBS,MAAO6vB,EAAa2rB,eAAexxC,QAAQ,MAG/C1H,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE1D,MAAO,CACLJ,MAAM,OACN2D,QAAQ,OACR1D,WAAW,UACXC,cAAc,UAEhBiB,MAAK,qBAEL0C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEq0B,UAAQ,EACR+mB,UAAQ,EACRl/C,MAAO,EACPsP,KAAM,UACNkE,YAAa,aACb1S,gBAAiB,SACjBS,MAAO6vB,EAAayrB,iBAAiBtxC,QAAQ,MAGjD1H,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/D,GAAI,EACJC,MAAO,EACPC,WAAY,SACZC,cAAe,SACfK,eAAgB,SAChBoG,UAAW,yBAEX9C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPC,WAAY,SACZC,cAAe,SACfK,eAAgB,UAGdw9B,EAAKn7B,MAAM+4C,eACT93C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/D,GAAI,EACJgB,SAAU,EACVC,WAAY,EACZN,MAAOq9B,EAAKt9B,MAAMoG,MAAMC,OAAOmF,aAAarH,OAAO0E,WAJrD,iCAMiCy0B,EAAKn7B,MAAM+4C,cAAcpwC,QAAQ,GANlE,IAMuEwyB,EAAKn7B,MAAMiI,YAAYV,OAKhGinB,EAAayrB,kBAAoBzrB,EAAayrB,iBAAiBljC,GAAG,MAChE9V,EAAAjE,EAAAC,cAACikC,EAAA,EAADniC,OAAAC,OAAA,CACE20B,OAAQ,IACJwH,EAAKt9B,MAFX,CAGEe,UAAWwiC,IACXC,eAAgB,CACdvgC,KAAK,SACLnC,MAAM,QACNO,UAAU,UAEZ40B,WAAY,QACZ5sB,OAAQi0B,EAAKn7B,MAAMkH,OACnBsH,SAAU2sB,EAAKqhB,cAAczxC,KAAKowB,GAClCzH,aAAclF,EAAakF,gBAG7BzyB,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/D,GAAI,EACJgB,SAAU,EACVC,WAAY,EACZN,MAAO,YAJT,4BAcVmD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPC,WAAY,SACZC,cAAe,MACfK,eAAgB,iBAEhBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,KACGi6B,EAAKj7B,cAAcM,YAAYguB,EAAasrB,OAD/C,MAC0D3e,EAAKj7B,cAAcM,YAAYguB,EAAaurB,WADtG,MACqHvrB,EAAawrB,eAElI/4C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE8L,EAAG,CAAC,MAAM,OACV/O,aAAc,MACdZ,WAAY,SACZM,eAAgB,SAChBO,gBAAkBi9B,EAAKt9B,MAAMoG,MAAMC,OAAOmF,aAAasd,SAASxgB,QAEhElF,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE0C,KAAM,SACNkoB,MAAO,SACPhuB,MAAO,SACPgD,KAAOq6B,EAAKt9B,MAAM8F,SAAW,QAAU,eAUvD1C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE7C,UAAW,UADb,oDA7xCaO,8GCkDzB69C,GAAMC,8/CAENlrC,GAAgB,CACpBmrC,QAAS,OACTC,QAAS,OACTptB,UAAW,MACXqtB,QAAS,uBACTC,SAAS,2BACT74C,MAAM,CACJ84C,iBAAgB,GAElBC,QAAS,4BACTC,UAAU,CACRC,IAAM,2BACNC,IAAM,iBACNC,IAAM,YACNC,IAAM,SACNC,IAAM,QACNC,IAAM,SACNC,IAAM,SACNC,IAAM,YACNC,IAAM,QACNC,IAAM,SACNC,IAAM,SACNC,IAAM,eACNC,IAAM,eAERhkB,KAAK,CACHikB,eAAc,EACdC,iBAAgB,GAElBC,WAAW,CACTC,SAAS,CACPnvB,SAAQ,EACRyoB,WAAW,qBAEb2G,MAAM,CACJpvB,SAAQ,EACRyoB,WAAW,yBAEb4G,OAAO,CACLrvB,SAAQ,EACRjd,KAAK,aACL0lC,WAAW,qBAEb6G,SAAS,CACPtvB,SAAQ,EACRjd,KAAK,eACL0lC,WAAW,gCAEb8G,YAAY,CACVvvB,SAAQ,EACRyoB,WAAW,6BAEb+G,cAAc,CACZxvB,SAAQ,EACRyvB,UAAU,oBACVhH,WAAW,wBAEbiH,WAAW,CACT1vB,SAAQ,EACRjd,KAAK,eACLlO,KAAK,kBACL4zC,WAAW,wBAEbkH,OAAO,CACL3vB,SAAQ,EAERnrB,KAAK,kBACL4zC,WAAW,gCAEbmH,UAAU,CACR5vB,SAAQ,EACRyoB,WAAW,2BAEboH,OAAO,CACL7vB,SAAQ,EACRyoB,WAAW,qBAEbqH,UAAU,CACR9vB,SAAQ,EACRyoB,WAAW,uBAEbsH,MAAM,CACJ/vB,SAAQ,EACRjd,KAAK,YACL0lC,WAAW,+BAEbuH,OAAO,CACLhwB,SAAQ,EACRyoB,WAAW,mBAEbwH,OAAO,CACLjwB,SAAQ,EACRyoB,WAAW,mBAEbyH,OAAO,CACLlwB,SAAQ,EACRyoB,WAAW,mBAGf0H,uBAAuB,CACrBC,SAAS,iDAEXC,SAAS,CACPC,WAAW,sBACXC,SAAS,0BACThrC,WAAW,2DACXirC,YAAY,2DACZC,mBAAmB,8EACnB/oB,kBAAkB,mFAClBgpB,WAAW,4FACXC,eAAe,qGACfnmB,sBAAsB,iHACtBomB,YAAY,iIACZC,0BAA0B,6IAC1BC,eAAe,8JACfC,cAAc,wLACdC,8BAA8B,qNAC9B3R,QAAQ,8TACRE,aAAa,0bACbD,UAAS,0aACT2R,kBAAiB,4bAEnBC,UAAU,CACRC,OAAO,CACL9E,OAAO,CACLrsB,SAAQ,EACRoxB,cAAa,EACbC,sBAAqB,GAEvBC,SAAS,CACPtxB,SAAQ,KAIduxB,OAAO,CACLC,wBAAuB,EACvBC,qBAAoB,EACpBl6C,QAAQ,CACNyoB,SAAQ,GAEV0xB,QAAQ,CACN1xB,SAAQ,EACR2xB,UAAU,SAGdC,UAAU,CACRC,UAAU,aACV38C,MAAM,CACJ48C,KAAK,QACL9D,iBAAgB,IAGpB+D,WAAW,CACTC,MAAK,EACLhyB,SAAQ,EACRiyB,WAAW,SACXJ,UAAU,cACV/iD,MAAM,CACJojD,UAAU,OACVC,mBAAmB,CACjBC,OACAC,eACAC,eACAC,iBACAC,iBACAC,oBAGJC,UAAU,CACRC,EAAE,CACApsB,YAAW,8mBAUfikB,UAAU,CACRoI,UAAU,OACVb,WAAW,kBAGflnC,MAAM,CACJmV,SAAQ,EACR4E,OAAO,CACLiuB,QAAQ,EACRrjD,MAAM,QACN8wC,MAAM,mBACN/iB,MAAM,6BACNu1B,cAAc,kCAEhBC,MAAM,CACJpe,KAAK,CAAC,MAAM,MAAM,QAClByb,SAAS,4CAEX4C,aAAa,CACX55C,SAAS,GACT0mB,IAAImzB,EACJp+C,KAAK,4BACL2D,MAAM,4BACN8J,QAAQ,8CAEV4wC,gBAAgB,CACdpzB,IAAIqzB,GACJt+C,KAAK,mBACLyN,QAAQ,8CAEV8wC,cAAc,CACZtzB,IAAIuzB,GACJx+C,KAAK,mBACLyN,QAAQ,8CAEVgxC,YAAY,CACVxzB,IAAIyzB,EACJ1+C,KAAK,eACLyN,QAAQ,8CAEV0gC,kBAAkB,CAChBljB,IAAIqzB,GACJt+C,KAAK,mBACLyN,QAAQ,6CACR8gC,UAAU,CACR,CACE5zC,MAAM,UACNqF,KAAK,mBAIXsE,gBAAgB,CACdq6C,aAAa,CACXp6C,SAAS,GACT4mB,SAAQ,EACRS,UAAU,MACVjoB,MAAM,eACN8J,QAAQ,6CACRijC,gBAAgB,CACdsN,QAAQ,EACRY,UAAU,IAGdC,cAAc,CACZt6C,SAAS,GACT4mB,SAAQ,EACRS,UAAU,OACVjoB,MAAM,gBACN8J,QAAQ,6CACRijC,gBAAgB,CACdsN,QAAQ,EACRY,UAAU,IAGdE,cAAc,CACZv6C,SAAS,GACT4mB,SAAQ,EACRS,UAAU,OACVjoB,MAAM,gBACN8J,QAAQ,6CACRijC,gBAAgB,CACdsN,QAAQ,EACRY,UAAU,MAKlBG,OAAO,CACLC,IAAI,CACFhG,QAAQ,EACRiG,WAAW,KACXxQ,YAAY,SACZzuC,KAAK,iBACL8I,KAAK,CACH,CAAE9I,KAAM,SAAU8I,KAAM,WACxB,CAAE9I,KAAM,UAAW8I,KAAM,WACzB,CAAE9I,KAAM,QAAS8I,KAAM,WACvB,CAAE9I,KAAM,SAAU8I,KAAM,WACxB,CAAE9I,KAAM,UAAW8I,KAAM,UAG7Bo2C,KAAK,CACHlG,QAAQ,EACRh5C,KAAK,WACLi/C,WAAW,KACXxQ,YAAY,SACZ3lC,KAAK,CACH,CAAE9I,KAAM,QAAS8I,KAAM,WACvB,CAAE9I,KAAM,UAAW8I,KAAM,WACzB,CAAE9I,KAAM,QAAS8I,KAAM,WACvB,CAAE9I,KAAM,QAAS8I,KAAM,WACvB,CAAE9I,KAAM,WAAY8I,KAAM,aAG9Bq2C,IAAI,CACFnG,QAAQ,EACRiG,WAAW,KACXxQ,YAAY,SACZzuC,KAAK,qBACL8I,KAAK,CACH,CAAE9I,KAAM,QAAS8I,KAAM,WACvB,CAAE9I,KAAM,UAAW8I,KAAM,WACzB,CAAE9I,KAAM,QAAS8I,KAAM,WACvB,CAAE9I,KAAM,QAAS8I,KAAM,WACvB,CAAE9I,KAAM,WAAY8I,KAAM,cAIhCyhC,UAAU,CACRgT,KAAK,CACHtyB,IAAIsyB,EACJh5C,SAAS,GACTZ,MAAM,OACNwnB,SAAQ,EACRi0B,SAAQ,EACRC,SAAQ,EACRC,SAAS,OACTC,WAAU,EACV/5B,aAAY,EACZg6B,gBAAe,EACfC,iBAAiB,QACjBC,sBAAsB,MACtBxlD,MAAM,sBACNgU,KAAK,yBACLyxC,eAAe,CAAC,gBAChBlyC,QAAQ,8CAIVmyC,KAAK,CACH30B,IAAI20B,EACJr7C,SAAS,GACTZ,MAAM,OACNwnB,SAAQ,EACRi0B,SAAQ,EACRC,SAAQ,EACRE,WAAU,EACV/5B,aAAY,EACZm6B,eAAe,GACfL,SAAS,WACTE,gBAAe,EACfC,iBAAiB,QACjBC,sBAAsB,MACtBxlD,MAAM,sBACNuT,QAAQ,8CAGVoyC,QAAQ,CACN50B,IAAI60B,EACJv7C,SAAS,GACT66C,SAAQ,EACRC,SAAQ,EACRl0B,SAAQ,EACRo0B,WAAU,EACV57C,MAAM,UACN6hB,aAAY,EACZ85B,SAAS,SACTE,gBAAe,EACfC,iBAAiB,SACjBvlD,MAAM,qBACNwlD,sBAAsB,MACtBjyC,QAAQ,6CACRsyC,gBAAgB,6CAChBJ,eAAe,CAAC,gBAAgB,gBAAgB,kBAGpDhK,UAAU,CACRqK,aAAa,CACX/0B,IAAIg1B,GACJxyC,QAAQ,8CAEVyyC,WAAW,CACTj1B,IAAIi1B,GACJzyC,QAAQ,8CAEV+vC,YAAY,CACVvyB,IAAIuyB,GACJ/vC,QAAQ,8CAEVgwC,YAAY,CACVxyB,IAAIwyB,GACJhwC,QAAQ,8CAGV0yC,SAAS,CACPl1B,IAAIk1B,EACJ1yC,QAAQ,8CAGVkwC,cAAc,CACZ1yB,IAAI0yB,GACJlwC,QAAQ,8CAGV2yC,cAAc,CACZn1B,IAAIm1B,GACJ3yC,QAAQ,8CAGVmwC,eAAe,CACb3yB,IAAI2yB,GACJnwC,QAAQ,8CAGV4yC,aAAa,CACTp1B,IAAIo1B,GACJ5yC,QAAQ,8CAGZiwC,cAAc,CACZzyB,IAAIyyB,GACJjwC,QAAQ,8CAGV6yC,YAAY,CACVr1B,IAAIq1B,GACJ7yC,QAAQ,8CAGV8yC,gBAAgB,CACdt1B,IAAIu1B,GACJ/yC,QAAQ,8CAEVgzC,cAAc,CACZx1B,IAAIy1B,GACJjzC,QAAQ,8CAEVkzC,sBAAsB,CACpB11B,IAAI01B,GACJlzC,QAAQ,+CAGZqkC,OAAO,CACLkN,IAAI,CACF4B,cAAc,CACZC,YAAa,0BACbC,UAAU,6EACVC,cAAe,CACXC,aAAc,6CACdC,cAAe,SAIvB/B,KAAK,CACH0B,cAAc,CACZC,YAAa,0BACbC,UAAU,6EACVC,cAAe,CACXC,aAAc,6CACdC,cAAe,UAKzBC,WAAW,CACTC,KAAK,CACHx9C,MAAM,MACNzJ,MAAM,UACNknD,YAAW,EACXC,cAAa,EACbC,aAAa,KACb/iC,MAAM,aACNgjC,SAAS,WACTC,kBAAiB,EACjBr4B,UAAW2e,GACX2Z,WAAW,kBACXvzC,KAAK,gCACLwzC,aAAa,iCACbC,iBAAiB,mCACjBhW,KAAK,8CACLiW,SAAS,4lBACTC,UAAU,0JAEZC,KAAK,CACHn+C,MAAM,MACNzJ,MAAM,UACNknD,YAAW,EACXE,aAAa,KACbD,cAAa,EACbE,SAAS,WACThjC,MAAM,gBACNijC,kBAAiB,EACjBr4B,UAAW2e,GACX2Z,WAAW,mBACXvzC,KAAK,gCACLwzC,aAAa,iCACbC,iBAAiB,mCACjBhW,KAAK,oDACLiW,SAAS,6aACTC,UAAU,wGAEZE,IAAI,CACFp+C,MAAM,MACNzJ,MAAM,UACNknD,YAAW,EACXC,cAAa,EACbE,SAAS,SACThjC,MAAM,cACNkjC,WAAW,mBACXvzC,KAAK,gCACLy9B,KAAK,mCACL+V,aAAa,iCACbE,SAAS,6aACTC,UAAU,yGAGdh0C,MAAM,CACJsd,SAAQ,EACR+yB,MAAM,CACJ8D,IAAI,IACJzG,SAAS,mCAEX0G,KAAK,CACHD,IAAI,IACJzG,SAAS,kCAEX2G,SAAS,CACPF,IAAI,KACJzG,SAAS,sCAEX4G,OAAO,CACLH,IAAI,IACJzG,SAAS,oCAEX6G,OAAO,CACLC,QAASxJ,GAAIyJ,mBAAqB,CAAEC,cAAa,UAAAniD,OAAYy4C,GAAIyJ,qBAAyB,IAE5FE,SAAS,CAYPC,GAAG,CACD9nD,MAAM,UACN+nD,oBAAoB,GACpBC,aAAa,WACbC,eAAe,WACfC,wBAAuB,EACvBC,iBAAiB,CACfhB,KAAK,CACHa,aAAa,aAGjBI,kBAAkB,CAAC,OAAO,QAC1Br9C,cAAc,CAAC,MAAM,OAAO,OAAO,OAAO,OAAO,SAEnDs9C,GAAG,CACDroD,MAAM,UACNgoD,aAAa,KACbC,eAAe,WACfG,kBAAkB,CAAC,OAAO,QAC1BF,wBAAuB,EACvBC,iBAAiB,CACfhB,KAAK,CACHc,eAAe,aAGnBl9C,cAAc,CAAC,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAC/Dg9C,oBAAoB,CAClB,CACEn+C,SAAS,GACT+6C,SAAS,WACTt/C,KAAK,mBACL0F,cAAc,CAAC,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,SAE1D,CACEnB,SAAS,GACT+6C,SAAS,SACTt/C,KAAK,oBACL0F,cAAc,CAAC,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,YAKhEosC,OAAO,CACLkN,IAAI,CACFz6C,SAAS,GACT4mB,SAAQ,EACRjxB,MAAM,CACJ+oD,IAAI,CAAC,IAAI,IAAI,IACbC,IAAI,UACJp1C,IAAI,CAAC,KAAM,MAAO,QAEpBq1C,MAAM,CACJC,wBAAwB,CAAC,SAAU,IAErCR,eAAe,aACfn1C,QAAQ,6CACR41C,mBAAmB,8KAErBC,IAAI,CACFn4B,SAAQ,EACRjxB,MAAM,CACJgpD,IAAI,UACJD,IAAI,CAAC,IAAK,IAAK,KACfn1C,IAAI,CAAC,KAAM,MAAO,QAEpBq1C,MAAM,CACJC,wBAAwB,CAAC,WAAY,IAEvC31C,QAAQ,KACRm1C,eAAe,cAEjB1D,KAAK,CACH36C,SAAS,EACT4mB,SAAQ,EACRjxB,MAAM,CACJgpD,IAAI,UACJD,IAAI,CAAC,GAAG,IAAI,KACZn1C,IAAI,CAAC,MAAO,MAAO,QAErBq1C,MAAM,CACJC,wBAAwB,CAAC,WAAY,IAEvCR,eAAe,aACfn1C,QAAQ,6CACR41C,mBAAmB,8KAErBE,KAAK,CACHh/C,SAAS,EACT4mB,SAAQ,EACRjxB,MAAM,CACJgpD,IAAI,UACJD,IAAI,CAAC,GAAI,IAAK,KACdn1C,IAAI,CAAC,MAAO,MAAO,QAErBq1C,MAAM,CACJC,wBAAwB,CAAC,SAAU,IAErCR,eAAe,aACfn1C,QAAQ,6CACR41C,mBAAmB,8KAErBG,KAAK,CACHj/C,SAAS,GACT4mB,SAAQ,EACRjxB,MAAM,CACJgpD,IAAI,SACJD,IAAI,CAAC,EAAG,GAAI,KACZn1C,IAAI,CAAC,MAAO,MAAO,QAErBq1C,MAAM,CACJC,wBAAwB,CAAC,WAAY,IAEvCR,eAAe,aACfn1C,QAAQ,8CAEVg2C,KAAK,CACHl/C,SAAS,GACT4mB,SAAQ,EACRjxB,MAAM,CACJgpD,IAAI,UACJD,IAAI,CAAC,GAAI,GAAI,IACbn1C,IAAI,CAAC,MAAO,MAAO,QAErBq1C,MAAM,CACJC,wBAAwB,CAAC,WAAY,IAEvCR,eAAe,aACfn1C,QAAQ,8CAEVi2C,KAAK,CACHn/C,SAAS,EACT4mB,SAAQ,EACRjxB,MAAM,CACJgpD,IAAI,UACJD,IAAI,CAAC,IAAK,IAAK,IACfn1C,IAAI,CAAC,KAAM,MAAO,QAEpB80C,eAAe,aACfvvC,oBAAoB,eACpB8vC,MAAM,CACJC,wBAAwB,CAAC,SAAU,IAErC31C,QAAQ,6CACR41C,mBAAmB,8KAErBM,KAAK,CACHp/C,SAAS,GACT4mB,SAAQ,EACRjxB,MAAM,CACJgpD,IAAI,UACJD,IAAI,CAAC,IAAK,GAAI,KACdn1C,IAAI,CAAC,MAAO,MAAO,QAErB80C,eAAe,aACfvvC,oBAAoB,eACpB8vC,MAAM,CACJC,wBAAwB,CAAC,SAAU,IAErC31C,QAAQ,6CACR41C,mBAAmB,8KAErBzD,KAAK,CACHr7C,SAAS,GACT4mB,SAAQ,EACRjxB,MAAM,CACJgpD,IAAI,UACJD,IAAI,CAAC,EAAG,IAAK,KACbn1C,IAAI,CAAC,MAAO,OAAQ,QAEtB80C,eAAe,aACfvvC,oBAAoB,eACpB8vC,MAAM,CACJC,wBAAwB,CAAC,SAAU,IAErC31C,QAAQ,8CAEVoyC,QAAQ,CACNt7C,SAAS,GACT4mB,SAAQ,EACRjxB,MAAM,CACJgpD,IAAI,UACJD,IAAI,CAAC,IAAK,GAAI,KACdn1C,IAAI,CAAC,MAAO,MAAO,QAErB80C,eAAe,aACfvvC,oBAAoB,eACpB8vC,MAAM,CACJC,wBAAwB,CAAC,SAAU,IAErC31C,QAAQ,8CAEV8vC,KAAK,CACHh5C,SAAS,GACT4mB,SAAQ,EACRjxB,MAAM,CACJgpD,IAAI,UACJD,IAAI,CAAC,GAAI,GAAI,KACbn1C,IAAI,CAAC,MAAO,MAAO,QAErB80C,eAAe,aACf10C,KAAK,yBACLmF,oBAAoB,eACpB8vC,MAAM,CACJC,wBAAwB,CAAC,SAAU,IAErC31C,QAAQ,8CAEVm2C,IAAI,CACFr/C,SAAS,GACT4mB,SAAQ,EACRjxB,MAAM,CACJgpD,IAAI,UACJD,IAAI,CAAC,GAAI,IAAK,KACdn1C,IAAI,CAAC,MAAO,MAAO,QAErB80C,eAAe,aACf10C,KAAK,wBACLmF,oBAAoB,cACpB8vC,MAAM,CACJC,wBAAwB,CAAC,SAAU,IAErC31C,QAAQ,8CAEVo2C,4BAA4B,CAC1Bt/C,SAAS,GACT4mB,SAAQ,EACRnrB,KAAK,WACL9F,MAAM,CACJgpD,IAAI,UACJD,IAAI,CAAC,IAAK,EAAG,GACbn1C,IAAI,CAAC,IAAK,OAAQ,QAEpB80C,eAAe,eAGnBv1C,UAAU,CACRy2C,SAAS,CACP7uC,QAAO,EACPkW,SAAQ,EACRxwB,MAAM,WACNT,MAAM,CACJ+oD,IAAI,CAAC,EAAG,IAAK,KACbn1C,IAAI,CAAC,MAAO,OAAQ,SAGxBi2C,kBAAkB,CAChB54B,SAAQ,EACRxwB,MAAM,oBACNioD,eAAe,sBAMf1oD,MAAM,CACJgpD,IAAI,UACJD,IAAI,CAAC,IAAK,GAAI,KACdn1C,IAAI,CAAC,MAAO,MAAO,QAErBk2C,UAAU,CAAC,OAAO,sBAEpBC,iBAAiB,CACf94B,SAAQ,EACRxwB,MAAM,kBACNT,MAAM,CACJ+oD,IAAI,CAAC,EAAG,IAAK,KACbn1C,IAAI,CAAC,MAAO,OAAQ,QAEtBk2C,UAAU,CAAC,OAAO,0BAEpBE,QAAQ,CACNjvC,QAAO,EACPkW,SAAQ,EACRxwB,MAAM,UACNT,MAAM,CACJ+oD,IAAI,CAAC,EAAG,IAAK,KACbn1C,IAAI,CAAC,MAAO,MAAO,SAGvBq2C,IAAI,CACFxpD,MAAM,MACNwwB,SAAQ,EACRjd,KAAK,WACLhU,MAAM,CACJ+oD,IAAI,CAAC,IAAK,GAAI,IACdn1C,IAAI,CAAC,MAAO,MAAO,SAGvBs2C,KAAK,CACHnvC,QAAO,EACPta,MAAM,OACNwwB,SAAQ,EACRjxB,MAAM,CACJ+oD,IAAI,CAAC,GAAI,GAAI,IACbn1C,IAAI,CAAC,MAAO,KAAM,SAGtBu2C,MAAM,CACJ1pD,MAAM,QACNwwB,SAAQ,GAEVm5B,KAAK,CACH3pD,MAAM,UACNsa,QAAO,EACPkW,SAAQ,EACRjxB,MAAM,CACJ+oD,IAAI,CAAC,IAAK,IAAK,KACfn1C,IAAI,CAAC,MAAO,MAAO,SAGvBy2C,OAAO,CACLtvC,QAAO,EACPkW,SAAQ,EACRjd,KAAK,WACLvT,MAAM,UACNT,MAAM,CACJ+oD,IAAI,CAAC,IAAK,GAAI,KACdn1C,IAAI,CAAC,MAAO,MAAO,SAGvB02C,MAAM,CACJvvC,QAAO,EACPkW,SAAQ,EACRxwB,MAAM,QACNuT,KAAK,YACLhU,MAAM,CACJ+oD,IAAI,CAAC,IAAK,IAAK,KACfn1C,IAAI,CAAC,MAAO,MAAO,SAGvB22C,KAAK,CACHxvC,QAAO,EACPkW,SAAQ,EACRxwB,MAAM,OACNuT,KAAK,WACLhU,MAAM,CACJ+oD,IAAI,CAAC,EAAG,EAAG,GACXn1C,IAAI,CAAC,IAAK,KAAM,QAGpBkI,MAAM,CACJrb,MAAM,GACNwwB,SAAQ,EACRjxB,MAAM,CACJ+oD,IAAI,CAAC,EAAG,GAAI,KACZn1C,IAAI,CAAC,MAAO,OAAQ,SAGxBizB,KAAK,CACHpmC,MAAM,OACNwwB,SAAQ,EACRjxB,MAAM,CACJ+oD,IAAI,CAAC,EAAG,GAAI,KACZn1C,IAAI,CAAC,MAAO,OAAQ,WAK5Bid,SAAS,CACP4jB,QAAQ,CACNpsC,OAAO,CACLmiD,eAAc,EACdC,yBAAwB,GAE1BriD,QAAQ,CACNsiD,UAAS,EACTC,iBAAiB,IACjBC,uBAAsB,EACtBC,yBAAwB,EACxBJ,yBAAwB,EAExBK,4BAA4B,CAC1BC,UAAU,CACR95B,SAAQ,EACRF,IAAIi6B,GACJllD,KAAK,iBACLmlD,SAAS,cACT13C,QAAQ,8CAGVqkC,OAAO,CACLkN,IAAI,CACF7zB,SAAQ,EACRi6B,WAAW,aACXn6B,IAAIo6B,GACJF,SAAS,mBACTnlD,KAAK,0BACLyN,QAAQ,8CAGVyxC,KAAK,CACH/zB,SAAQ,EACRi6B,WAAW,cACXn6B,IAAIo6B,GACJrlD,KAAK,2BACLmlD,SAAS,0BACT13C,QAAQ,gDAKd63C,cAAc,CACZn6B,SAAQ,EACRF,IAAIs6B,GACJvlD,KAAK,kBACLmlD,SAAS,sBACT13C,QAAQ,+CAGZ/K,QAAQ,CACNgiD,eAAc,EACdc,sBAAsB,IACtBC,4BAA4B,KAE9BC,gBAAgB,CACdv6B,SAAQ,GAEV+wB,cAAc,CACZ/wB,SAAQ,EACRw0B,eAAe,CAAC,cAAc,eAAe,iBAE/CgG,UAAU,CACRx6B,SAAQ,EACRF,IAAI26B,MAIVC,QAAQ,CACNC,kBAAkB,CAChBjoB,EAAE,UACFE,EAAE,UACFgoB,EAAE,UACFC,GAAG,QACHC,KAAK,WAEPC,UAAS,EACTC,gBAAgB,EAChBC,cAAc,QACdC,eAAe,QACfxgD,iBAAiB,QACjBygD,sBAAuB,EACvBC,gBAAgB,CAAC,EAAE,GAAG,MACtBC,sBAAuB,EACvBC,UAAU,CACRC,OAAO,CACLV,GAAI,8BACJnoB,EAAG,gCACHooB,KAAM,iCAERU,IAAI,CACFx7B,SAAQ,EACRy7B,kBAAkB,CAAC,IAErBC,UAAU,CACR17B,SAAQ,EACR27B,UAAU,CACRjpB,EAAG,+BACHooB,KAAM,+BACND,GAAI,sCAENe,QAAQ,CACNlpB,EAAG,uBACHooB,KAAM,uBACND,GAAI,+BAGRgB,SAAS,CACPC,UAAU,CACR,6CACA,8CAEFH,UAAU,CACRjJ,UAAU,2DAEZqJ,KAAK,CACHrJ,UAAU,4DAGdsJ,SAAS,CACPh8B,SAAQ,EACRi8B,aAAY,EACZR,kBAAkB,CAAC,EAAE,IACrBS,gBAAgB,CAAC,aACjBP,UAAU,CACRQ,OAAO,mDAETv3B,OAAO,CACLw3B,OAAO,EACPC,OAAQ3O,GAAI4O,uBACZC,OAAQ7O,GAAI8O,yBACZC,MAAO,yCAIXC,SAAS,CACP18B,SAAQ,EACRy7B,kBAAkB,CAAC,GACnBkB,WAAW,SAACC,EAAUjC,GACpB,IAAIkC,EAAc,KAClB,OAAQD,GACN,KAAK,EACHC,EAAc,UAChB,MACA,QACEA,EAAclC,EAAkBiC,GAAajC,EAAkBiC,GAAWxkD,cAAgB,UAG9F,OAAOykD,GAETj4B,OAAO,CACLk4B,UAAWrgD,OAAOsgD,SAASC,OAC3BpP,QAAS,OACTqP,MAAO,uCACPC,qBAAqB,EACrBxC,QAAS,cAKjByC,cAAc,CACZ,CACEn9B,SAAQ,EACRsY,IAAI,cACJC,MAAM,cACNj/B,KAAK,yBACL8Z,MAAM,2BACN1hB,KAAK,kCACL6rB,MAAM,mCACNrsB,KAAK,+CAGTksD,MAAM,CACJC,MAAM,CACJr9B,SAAQ,EACRjd,KAAK,SACLvT,MAAM,UACN8wC,MAAM,UACNgd,aAAa99B,EACbghB,KAAK,gEACL1xC,MAAM,CACJqK,gBAAgB,CACdi5C,KAAK,CACHp0B,UAAUoP,EACVxN,SAAS,CACPE,IAAIy9B,EACJnkD,SAAS,GACTvE,KAAK,UACLw6B,UAAU,SACV5G,YAAY,OACZnmB,QAAQ,8CAEV0rB,eAAe,CACbqB,UAAU,SACVvP,IAAI09B,GACJ3oD,KAAK,wBACLyN,QAAQ,8CAEVwd,IAAIsyB,EACJv9C,KAAK,OACL2D,MAAM,OACNY,SAAS,GACT4mB,SAAQ,EACRxwB,MAAM,aACNuT,KAAK,yBACLT,QAAQ,6CACRsqB,SAAS,4EAEXonB,IAAI,CACFh2B,UAAU8I,EACVlH,SAAS,CACPxmB,SAAS,GACTvE,KAAK,YACLy1B,cAAc,EACdxK,IAAI29B,GACJhzB,aAAa,IACbhC,YAAY,OACZnmB,QAAQ,8CAEVzN,KAAK,MACL2D,MAAM,MACNY,SAAS,GACT4mB,SAAQ,EACRF,IAAI49B,GACJluD,MAAM,8BACNuT,KAAK,iCACLT,QAAQ,6CACRsqB,SAAS,mFAKjB+wB,WAAW,CACT39B,SAAQ,EACR49B,SAAQ,EACR76C,KAAK,cACLvT,MAAM,cACN8wC,MAAM,uBACNgd,aAAa/T,GACb/I,KAAK,qJACL1xC,MAAM,CACJ07C,UAAU,CACRD,qBAAqB,CACnBzqB,IAAI+9B,EACJv7C,QAAQ,iDAKhBw7C,WAAW,CACT99B,SAAQ,EACRxwB,MAAM,cACN8wC,MAAM,cACNgd,aAAa/pB,GACbhW,MAAM,yBACNijB,KAAK,iEACL1xC,MAAM,CACJg9B,cAAc,CACZj3B,KAAK,MACL2D,MAAM,MACNY,SAAS,GACT2yB,WAAW,WAEbC,aAAa,CACXlM,IAAI04B,EACJ3jD,KAAK,OACLuE,SAAS,GACTZ,MAAM,OACNyzB,aAAa,WACb3pB,QAAQ,gDAIdy7C,cAAc,CACZ/9B,SAAQ,EACRxwB,MAAM,iBACN8wC,MAAM,iBACNgd,aAAa1X,GACbroB,MAAM,kCACNijB,KAAK,8DACLQ,aAAa,6DACblyC,MAAM,CACJ8wB,SAAS,CACPxmB,SAAS,GACT0mB,IAAIk+B,EACJnpD,KAAK,YACLyN,QAAQ,8CAEV4lC,UAAU,CACR,CACElC,WAAW,MACXS,oBAAoB,WACpBE,OAAO,CACLsX,MAAM,CACJn+B,IAAIo+B,EACJrpD,KAAK,oCACLyN,QAAQ,6CACR+kC,aAAa,CACXjuC,SAAS,GACT0mB,IAAIq+B,GACJtpD,KAAK,wCACLyN,QAAQ,+CAGZ87C,QAAQ,CACNt+B,IAAIo+B,EACJrpD,KAAK,sCACLyN,QAAQ,6CACR+kC,aAAa,CACXjuC,SAAS,GACT0mB,IAAIq+B,GACJtpD,KAAK,0CACLyN,QAAQ,oDAQtBshC,aAAa,CACX5jB,SAAQ,EACRjd,KAAK,UACLs7C,cAAa,EACbva,gBAAe,EACfxD,MAAM,gBACN9wC,MAAM,gBACN8tD,aAAalc,GACbZ,KAAK,6FACL1xC,MAAM,CACJqK,gBAAgB,CACdq6C,aAAa,CACXp6C,SAAS,GACT+kC,SAAS,OACT1d,UAAU,MACVklB,YAAY,IACZ3C,kBAAkB,CAChBljB,IAAIw+B,GACJzpD,KAAK,qBACLyN,QAAQ,6CAER8gC,UAAU,CACR,CACEvuC,KAAK,UACL6sC,WAAU,EACVlyC,MAAM,UACN+uD,WAAW,uBAKnB7K,cAAc,CACZt6C,SAAS,EACT+kC,SAAS,OACT1d,UAAU,OACVklB,YAAY,IACZ3C,kBAAkB,CAChBljB,IAAIw+B,GACJzpD,KAAK,sBACLyN,QAAQ,6CAER8gC,UAAU,CACR,CACEvuC,KAAK,UACLrF,MAAM,UACNkyC,WAAU,EACV6c,WAAW,0CAoIzBC,eAAe,CACbx+B,SAAQ,EACRq+B,cAAa,EACbva,gBAAe,EACf/gC,KAAK,eACLu9B,MAAM,kBACN9wC,MAAM,kBACN8tD,aAAanU,GACb3I,KAAK,8FACL1xC,MAAM,CACJqK,gBAAgB,CACdq6C,aAAa,CACXp6C,SAAS,GACT0mB,IAAI2+B,GACJtgB,SAAS,OACT1d,UAAU,MACV5rB,KAAK,iBACL2D,MAAM,iBACN8J,QAAQ,6CACR0gC,kBAAkB,CAChBljB,IAAI4+B,GACJ7pD,KAAK,wBACLyN,QAAQ,6CACR8gC,UAAU,CACR,CACE5zC,MAAM,UACNqF,KAAK,cAKb6+C,cAAc,CACZt6C,SAAS,GACT0mB,IAAI2+B,GACJtgB,SAAS,OACT1d,UAAU,OACV5rB,KAAK,kBACL2D,MAAM,kBACN8J,QAAQ,6CACR0gC,kBAAkB,CAChBljB,IAAI4+B,GACJ7pD,KAAK,yBACLyN,QAAQ,6CACR8gC,UAAU,CACR,CACE5zC,MAAM,UACNqF,KAAK,cAKb8+C,cAAc,CACZv6C,SAAS,GACT0mB,IAAI2+B,GACJtgB,SAAS,OACT1d,UAAU,OACV5rB,KAAK,kBACL2D,MAAM,kBACN8J,QAAQ,6CACR0gC,kBAAkB,CAChBljB,IAAI4+B,GACJ7pD,KAAK,yBACLyN,QAAQ,6CACR8gC,UAAU,CACR,CACE5zC,MAAM,UACNqF,KAAK,cAKb8pD,cAAc,CACZvlD,SAAS,GACT0mB,IAAI2+B,GACJtgB,SAAS,OACT1d,UAAU,OACV5rB,KAAK,kBACL2D,MAAM,kBACN8J,QAAQ,6CACR0gC,kBAAkB,CAChBljB,IAAI4+B,GACJ7pD,KAAK,yBACLyN,QAAQ,6CACR8gC,UAAU,CACR,CACE5zC,MAAM,UACNqF,KAAK,cAKb+pD,cAAc,CACZxlD,SAAS,GACT0mB,IAAI2+B,GACJtgB,SAAS,OACT1d,UAAU,OACV5rB,KAAK,kBACL2D,MAAM,kBACN8J,QAAQ,6CACR0gC,kBAAkB,CAChBljB,IAAI4+B,GACJ7pD,KAAK,yBACLyN,QAAQ,6CACR8gC,UAAU,CACR,CACE5zC,MAAM,UACNqF,KAAK,cAKbgqD,cAAc,CACZzlD,SAAS,GACT0mB,IAAI2+B,GACJtgB,SAAS,OACT1d,UAAU,OACV5rB,KAAK,kBACL2D,MAAM,kBACN8J,QAAQ,6CACR0gC,kBAAkB,CAChBljB,IAAI4+B,GACJ7pD,KAAK,yBACLyN,QAAQ,6CACR8gC,UAAU,CACR,CACE5zC,MAAM,UACNqF,KAAK,cAKbiqD,YAAY,CACV1lD,SAAS,GACT0mB,IAAI2+B,GACJtgB,SAAS,OACT1d,UAAU,MACV5rB,KAAK,gBACL2D,MAAM,gBACN8J,QAAQ,6CACR0gC,kBAAkB,CAChBljB,IAAI4+B,GACJ7pD,KAAK,4BACLyN,QAAQ,6CACR8gC,UAAU,CACR,CACE5zC,MAAM,UACNqF,KAAK,cAKbkqD,aAAa,CACX3lD,SAAS,GACT0mB,IAAI2+B,GACJtgB,SAAS,OACT1d,UAAU,OACV5rB,KAAK,iBACL2D,MAAM,iBACN8J,QAAQ,6CACR0gC,kBAAkB,CAChBljB,IAAI4+B,GACJ7pD,KAAK,6BACLyN,QAAQ,6CACR8gC,UAAU,CACR,CACE5zC,MAAM,UACNqF,KAAK,cAKbmqD,aAAa,CACX5lD,SAAS,GACT0mB,IAAI2+B,GACJtgB,SAAS,OACT1d,UAAU,OACV5rB,KAAK,iBACL2D,MAAM,iBACN8J,QAAQ,6CACR0gC,kBAAkB,CAChBljB,IAAI4+B,GACJ7pD,KAAK,6BACLyN,QAAQ,6CACR8gC,UAAU,CACR,CACE5zC,MAAM,UACNqF,KAAK,iBAQnBoqD,eAAe,CACbj/B,SAAQ,EACRjd,KAAK,YACLu9B,MAAM,UACN9wC,MAAM,kBACNgxC,KAAK,yEACL8c,aAAaxU,GACbh6C,MAAM,CACJk0C,kBAAkB,CAChBnuC,KAAK,kBACLirB,IAAIo/B,GACJ58C,QAAQ,6CACR68C,aAAa,GACb/b,UAAU,CACR,CACE5zC,MAAM,UACNqF,KAAK,uBAIX4iC,oBAAoB,CAAC,OAAO,QAC5Bt+B,gBAAgB,CACdimD,UAAU,CACRhmD,SAAS,GACT4mB,SAAQ,EACRm0B,SAAS,OACT1zB,UAAU,MACVX,IAAIu/B,GACJ7mD,MAAM,aACNuK,KAAK,4BACLwhC,gBAAgB,oBAChBjiC,QAAQ,8CAEVg9C,KAAK,CACHlmD,SAAS,EACT4mB,SAAQ,EACRxnB,MAAM,OACNioB,UAAU,MACV0zB,SAAS,WACT5P,gBAAgB,4BAChBjiC,QAAQ,8CAEVi9C,KAAK,CACHnmD,SAAS,GACT4mB,SAAQ,EACRxnB,MAAM,OACNioB,UAAU,MACV0zB,SAAS,UACT5P,gBAAgB,2BAChBjiC,QAAQ,8CAEVk9C,KAAK,CACHpmD,SAAS,GACT4mB,SAAQ,EACRxnB,MAAM,OACN27C,SAAS,OACT1zB,UAAU,MACV8jB,gBAAgB,wBAChBjiC,QAAQ,8CAEVm9C,OAAO,CACLrmD,SAAS,GACT4mB,SAAQ,EACRxnB,MAAM,SACNsnB,IAAI2/B,EAAO3/B,IACXW,UAAU,MACV0zB,SAAS,QACTpxC,KAAK,yBACLwhC,gBAAgB,yBAChBjiC,QAAQ,8CAEVo9C,OAAO,CACLtmD,SAAS,GACT4mB,SAAQ,EACRxnB,MAAM,SACNioB,UAAU,MACVX,IAAI2/B,EAAO3/B,IACXq0B,SAAS,QACTpxC,KAAK,yBACLwhC,gBAAgB,yBAChBjiC,QAAQ,8CAEVq9C,WAAW,CACTvmD,SAAS,GACT4mB,SAAQ,EACRm0B,SAAS,OACTr0B,IAAIu/B,GACJ5+B,UAAU,OACVjoB,MAAM,cACNuK,KAAK,6BACLwhC,gBAAgB,oBAChBjiC,QAAQ,8CAEVs9C,MAAM,CACJxmD,SAAS,EACT4mB,SAAQ,EACRxnB,MAAM,QACNioB,UAAU,OACV0zB,SAAS,WACT5P,gBAAgB,4BAChBjiC,QAAQ,8CAEVu9C,MAAM,CACJzmD,SAAS,EACT4mB,SAAQ,EACRxnB,MAAM,QACNioB,UAAU,OACV0zB,SAAS,UACT5P,gBAAgB,2BAChBjiC,QAAQ,8CAEVw9C,MAAM,CACJ1mD,SAAS,EACT4mB,SAAQ,EACRxnB,MAAM,QACN27C,SAAS,OACT1zB,UAAU,OACV8jB,gBAAgB,wBAChBjiC,QAAQ,8CAEVy9C,QAAQ,CACN3mD,SAAS,EACT4mB,SAAQ,EACRxnB,MAAM,UACN27C,SAAS,QACTr0B,IAAIigC,EAAQjgC,IACZW,UAAU,OACV1d,KAAK,0BACLwhC,gBAAgB,yBAChBjiC,QAAQ,8CAEV09C,QAAQ,CACN5mD,SAAS,EACT4mB,SAAQ,EACRxnB,MAAM,UACN27C,SAAS,QACTr0B,IAAIigC,EAAQjgC,IACZW,UAAU,OACV1d,KAAK,0BACLwhC,gBAAgB,yBAChBjiC,QAAQ,8CAEV29C,MAAM,CACJ7mD,SAAS,EACT4mB,SAAQ,EACRxnB,MAAM,QACNioB,UAAU,OACV0zB,SAAS,WACT5P,gBAAgB,4BAChBjiC,QAAQ,8CAEV49C,MAAM,CACJ9mD,SAAS,EACT4mB,SAAQ,EACRxnB,MAAM,QACNioB,UAAU,OACV0zB,SAAS,UACT5P,gBAAgB,2BAChBjiC,QAAQ,8CAEV69C,MAAM,CACJ/mD,SAAS,EACT4mB,SAAQ,EACRxnB,MAAM,QACN27C,SAAS,OACT1zB,UAAU,OACV8jB,gBAAgB,wBAChBjiC,QAAQ,8CAEV89C,QAAQ,CACNhnD,SAAS,EACT4mB,SAAQ,EACRxnB,MAAM,UACNsnB,IAAIsgC,EAAQtgC,IACZq0B,SAAS,QACT1zB,UAAU,OACV1d,KAAK,0BACLwhC,gBAAgB,yBAChBjiC,QAAQ,8CAEV+9C,QAAQ,CACNjnD,SAAS,EACT4mB,SAAQ,EACRxnB,MAAM,UACNsnB,IAAIsgC,EAAQtgC,IACZq0B,SAAS,QACT1zB,UAAU,OACV1d,KAAK,0BACLwhC,gBAAgB,yBAChBjiC,QAAQ,8CAEVg+C,WAAW,CACTlnD,SAAS,GACT4mB,SAAQ,EACRF,IAAIu/B,GACJlL,SAAS,OACT1zB,UAAU,OACVjoB,MAAM,mBACNi/B,oBAAoB,CAAC,QACrB8M,gBAAgB,oBAChBxhC,KAAK,kCACLT,QAAQ,8CAEVi+C,MAAM,CACJnnD,SAAS,EACT4mB,SAAQ,EACRxnB,MAAM,QACN27C,SAAS,OACT1zB,UAAU,OACV8jB,gBAAgB,wBAChBjiC,QAAQ,8CAEVk+C,QAAQ,CACNpnD,SAAS,GACT4mB,SAAQ,EACRxnB,MAAM,UACNsnB,IAAI0gC,EACJ//B,UAAU,OACV0zB,SAAS,QACT1c,oBAAoB,CAAC,QACrB10B,KAAK,4BACLwhC,gBAAgB,yBAChBjiC,QAAQ,8CAEVm+C,WAAW,CACTrnD,SAAS,GACT4mB,SAAQ,EACRF,IAAIu/B,GACJlL,SAAS,OACT1zB,UAAU,OACVjoB,MAAM,mBACNi/B,oBAAoB,CAAC,QACrB8M,gBAAgB,oBAChBxhC,KAAK,kCACLT,QAAQ,8CAEVo+C,MAAM,CACJtnD,SAAS,EACT4mB,SAAQ,EACRxnB,MAAM,QACN27C,SAAS,OACT1zB,UAAU,OACV8jB,gBAAgB,wBAChBjiC,QAAQ,8CAEVq+C,QAAQ,CACNvnD,SAAS,GACT4mB,SAAQ,EACRF,IAAI6gC,EACJnoD,MAAM,UACNioB,UAAU,OACV0zB,SAAS,QACTpxC,KAAK,4BACLwhC,gBAAgB,yBAChBjiC,QAAQ,8CAEVs+C,MAAM,CACJxnD,SAAS,EACT4mB,SAAQ,EACRxnB,MAAM,QACNioB,UAAU,OACV0zB,SAAS,WACT5P,gBAAgB,4BAChBjiC,QAAQ,8CAEVu+C,MAAM,CACJznD,SAAS,EACT4mB,SAAQ,EACRxnB,MAAM,QACNioB,UAAU,OACV0zB,SAAS,UACT5P,gBAAgB,2BAChBjiC,QAAQ,8CAEVw+C,MAAM,CACJ1nD,SAAS,EACT4mB,SAAQ,EACRxnB,MAAM,QACN27C,SAAS,OACT1zB,UAAU,OACV8jB,gBAAgB,wBAChBjiC,QAAQ,iDAKhBy+C,SAAS,CACP/gC,SAAQ,EACRjd,KAAK,mBACLu9B,MAAM,YACN9wC,MAAM,YACNgxC,KAAK,oEACL8c,aAAa5U,KACbsY,YAAY,CACVrY,YAAW,EACXsY,eAAc,IAGlBC,UAAU,CACRlhC,SAAQ,EACRjd,KAAK,WACLu9B,MAAM,eACN9wC,MAAM,eACNgxC,KAAK,8CACL8c,aAAa7qB,EACb3jC,MAAM,CACJqK,gBAAgB,CACdgoD,IAAM,CAAC3oD,MAAQ,OACfq7C,IAAM,CAACr7C,MAAQ,SAGnBwoD,YAAY,CACVxF,IAAI,gCACJl5C,QAAQ,+CAGZ8+C,UAAU,CACRphC,SAAQ,EACRjd,KAAK,OACLu9B,MAAM,aACN9wC,MAAM,aACNgxC,KAAK,kDACL8c,aAAal9B,EACbtxB,MAAM,CACJqK,gBAAgB,CACdgoD,IAAM,CAAC3oD,MAAQ,OACfq7C,IAAM,CAACr7C,MAAQ,OACf8/C,KAAO,CAAC9/C,MAAQ,QAChB6/C,KAAO,CAAC7/C,MAAQ,QAChBu7C,KAAO,CAACv7C,MAAQ,QAChB6oD,KAAO,CAAC7oD,MAAQ,QAChB4/C,KAAO,CAAC5/C,MAAQ,QAChB+/C,KAAO,CAAC//C,MAAQ,QAChBggD,KAAO,CAAChgD,MAAQ,QAChB8oD,KAAO,CAAC9oD,MAAQ,QAChB+oD,KAAO,CAAC/oD,MAAQ,QAChBgpD,OAAO,CAAChpD,MAAQ,QAChBipD,IAAM,CAACjpD,MAAQ,OACfkpD,MAAQ,CAAClpD,MAAQ,SACjBmpD,KAAO,CAACnpD,MAAQ,QAChBopD,IAAM,CAACppD,MAAQ,OACfqpD,IAAM,CAACrpD,MAAQ,OACfspD,KAAO,CAACtpD,MAAQ,QAChBupD,IAAM,CAACvpD,MAAQ,OACfwpD,IAAM,CAACxpD,MAAQ,OACfypD,IAAM,CAACzpD,MAAQ,OACf0pD,IAAM,CAAC1pD,MAAQ,OACf2pD,IAAM,CAAC3pD,MAAQ,OACf4pD,IAAM,CAAC5pD,MAAQ,OACf6pD,IAAM,CAAC7pD,MAAQ,OACf8pD,IAAM,CAAC9pD,MAAQ,OACf+pD,IAAM,CAAC/pD,MAAQ,OACfgqD,IAAM,CAAChqD,MAAQ,OACfiqD,IAAM,CAACjqD,MAAQ,OACfkqD,IAAM,CAAClqD,MAAQ,OACfmqD,MAAQ,CAACnqD,MAAQ,SACjBoqD,IAAM,CAACpqD,MAAQ,OACfqqD,IAAM,CAACrqD,MAAQ,OACfsqD,IAAM,CAACtqD,MAAQ,OACfuqD,IAAM,CAACvqD,MAAQ,OACfwqD,IAAM,CAACxqD,MAAQ,OACfyqD,KAAO,CAACzqD,MAAQ,QAChB0qD,IAAM,CAAC1qD,MAAQ,OACf2qD,IAAM,CAAC3qD,MAAQ,OACf4qD,KAAO,CAAC5qD,MAAQ,QAChB6qD,KAAO,CAAC7qD,MAAQ,QAChB8qD,KAAO,CAAC9qD,MAAQ,QAChB+qD,IAAM,CAAC/qD,MAAQ,OACfgrD,KAAO,CAAChrD,MAAQ,QAChBirD,IAAM,CAACjrD,MAAQ,OACfkrD,IAAM,CAAClrD,MAAQ,OACfmrD,IAAM,CAACnrD,MAAQ,OACforD,IAAM,CAACprD,MAAQ,OACfqrD,IAAM,CAACrrD,MAAQ,OACfsrD,IAAM,CAACtrD,MAAQ,OACfurD,IAAM,CAACvrD,MAAQ,OACfwrD,MAAQ,CAACxrD,MAAQ,SACjByrD,KAAO,CAACzrD,MAAQ,QAChB0rD,IAAM,CAAC1rD,MAAQ,OACf2rD,IAAM,CAAC3rD,MAAQ,OACf4rD,IAAM,CAAC5rD,MAAQ,OACf6rD,IAAM,CAAC7rD,MAAQ,OACf8rD,KAAO,CAAC9rD,MAAQ,QAChB+rD,IAAM,CAAC/rD,MAAQ,OACfgsD,IAAM,CAAChsD,MAAQ,OACfisD,KAAO,CAACjsD,MAAQ,QAChBksD,KAAO,CAAClsD,MAAQ,QAChBmsD,GAAK,CAACnsD,MAAQ,MACdosD,IAAM,CAACpsD,MAAQ,OACfqsD,IAAM,CAACrsD,MAAQ,OACfssD,IAAM,CAACtsD,MAAQ,OACfusD,IAAM,CAACvsD,MAAQ,OACfwsD,IAAM,CAACxsD,MAAQ,OACfysD,IAAM,CAACzsD,MAAQ,OACf0sD,IAAM,CAAC1sD,MAAQ,OACf2sD,IAAM,CAAC3sD,MAAQ,OACf4sD,IAAM,CAAC5sD,MAAQ,OACf6sD,IAAM,CAAC7sD,MAAQ,OACf8sD,IAAM,CAAC9sD,MAAQ,OACf+sD,IAAM,CAAC/sD,MAAQ,OACfgtD,MAAQ,CAAChtD,MAAQ,SACjBitD,IAAM,CAACjtD,MAAQ,OACfktD,IAAM,CAACltD,MAAQ,OACfmtD,IAAM,CAACntD,MAAQ,OACfotD,KAAO,CAACptD,MAAQ,QAChBqtD,IAAM,CAACrtD,MAAQ,OACfstD,IAAM,CAACttD,MAAQ,OACfutD,IAAM,CAACvtD,MAAQ,SAGnBwoD,YAAY,KAIhBgF,SAAU,CACRxiB,QAAQ,CACNyiB,KAAK,CACHC,gBAAgB,KAChBC,iBAAgB,EAChBr3D,MAAM,CACJk+B,SAAS,kBACTD,QAAQ,iBAGZq5B,KAAK,CACHF,gBAAgB,KAChBC,iBAAgB,EAChBr3D,MAAM,CACJk+B,SAAS,wBACTD,QAAQ,gBAGZs5B,OAAO,CACLH,gBAAgB,gBAChBC,iBAAgB,EAChBr3D,MAAM,CACJk+B,SAAS,6BACTD,QAAQ,kBACRvP,WAAW,CACTxE,QAAQ,CAAC,IAAI,WAKrBsiC,UAAW,CACTgL,KAAM,CACJtmC,SAAS,EACTgN,SAAU,2BACVxP,WAAY,CACVnvB,MAAO,CAAC,OAAO,QACfY,OAAQ,CAAC,OAAO,QAChBgH,GAAI,OAEN82B,QAAS,WACTw5B,WAAY,MACZ9d,WAAY,gBACZ+d,iBAAiB,CAAC,QAClBC,mBAAmB,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OACxDC,gBAAgB,CAAC,OAAO,MAAM,OAC9BllC,gBAAgB,GAChBksB,IAAI,OACJiZ,UAAU,CACR3U,KAAK,CACH4U,UAAU,kBAEZC,KAAK,CACHD,UAAU,mBAGdE,QAAS,SAACh4D,GACR,IAAM2pB,EAAO,GACb,GAAI3pB,EAAMi4D,gBAAkBj4D,EAAMi4D,eAChC,OAAQj4D,EAAMi4D,gBACZ,IAAK,OACHtuC,EAAKgwB,WAAL,8BACF,MACA,IAAK,OACHhwB,EAAKgwB,WAAL,4BAMN,OAAOhwB,GAETyI,cAAe,SAACpyB,EAAM2T,EAAcukD,GAClC,IAAMtZ,EAAMjrC,EAAcujD,SAAS1K,UAAUgL,KAAK5Y,IAE5CuZ,EADYxkD,EAAcujD,SAAS1K,UAAUgL,KAAKK,UAAUjZ,GAC9BkZ,UAG9BhiC,EAAS,CACbsiC,KAAI,YAAAjyD,OAAcnG,EAAM2L,SACxB0sD,aAAcH,EAAU/tD,cAAgB+tD,EAAU/tD,cAAkBnK,EAAMoK,YAAYotD,MAAQx3D,EAAMoK,YAAYotD,KAAKa,aAAer4D,EAAMoK,YAAYotD,KAAKa,aAAer4D,EAAMmK,cAChLguD,oBACAG,YAAY3kD,EAAcqrC,SAI5B,MAAO,GAAA74C,OAVK,oCAUL,KAAUjF,OAAOqF,KAAKuvB,GACxBrvB,IAAI,SAAA8xD,GAAC,OAAIC,mBAAmBD,GAAK,IAAMC,mBAAmB1iC,EAAOyiC,MACjEzkD,KAAK,MAEZue,OAAQ,SAACF,EAAWtnB,EAAO7K,EAAM2T,GAE/B,IADmB+b,SAASC,eAAe,eAC3B,CACd,IAAM8oC,EAAY/oC,SAAStwB,cAAc,OA2BzC,GA1BAq5D,EAAUC,UAAV,68BAAAvyD,OASegsB,EATf,2dAAAhsB,OAgBsBwN,EAAcujD,SAAS1K,UAAUgL,KAAKt5B,SAhB5D,oQAuBAxO,SAASipC,KAAKplC,YAAYklC,IAGrB/oC,SAASC,eAAe,oBAAoB,CAC/C,IAAMipC,EAAYlpC,SAAStwB,cAAc,SACzCw5D,EAAU7rD,GAAK,mBACf6rD,EAAUF,UAAV,4aAaAhpC,SAASipC,KAAKplC,YAAYqlC,OAKlCC,KAAM,CACJ3nC,SAAQ,EACRgN,SAAU,2BACVxP,WAAY,CACVnvB,MAAO,CAAC,OAAO,QACfY,OAAQ,CAAC,OAAO,QAChBgH,GAAI,OAEN82B,QAAS,WACTw5B,WAAY,MACZ9d,WAAU,0BACV+d,iBAAiB,CAAC,OAAO,QACzBoB,MAAO,CACL12D,KAAK,iBACLnC,MAAM,OACN4tB,QAAQ,WAEV+pC,gBAAgB,CAAC,MAAM,MAAM,QAC7BD,mBAAmB,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OACtFK,QAAS,SAACh4D,GACR,IAAM2pB,EAAO,GACX,OAAQ3pB,EAAMi4D,gBACZ,IAAK,OACHtuC,EAAKguC,mBAAqB,CAAC,MAAM,OACjChuC,EAAKgwB,WAAL,qBACF,MACA,IAAK,OACHhwB,EAAKguC,mBAAqB,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAC7FhuC,EAAKgwB,WAAL,gBAKN,OAAOhwB,GAETyI,cAAe,SAACpyB,EAAM2T,EAAcukD,GACnC,MAAO,CACLa,YAAa,OACZC,YAAah5D,EAAM2L,QACnBstD,WAAYra,GAAIsa,mBAChBC,QAASn5D,EAAM8F,SAAW,SAAW,UACrCszD,YAAW,GAAAjzD,OAAKwN,EAAcqrC,QAAnB,0BACXqa,UAAWnB,EAAU/tD,cAAgB+tD,EAAU/tD,cAAkBnK,EAAMoK,YAAYyuD,MAAQ74D,EAAMoK,YAAYyuD,KAAKQ,UAAYr5D,EAAMoK,YAAYyuD,KAAKQ,UAAYr5D,EAAMmK,gBAG3KkoB,OAAQ,SAACF,EAAWtnB,EAAO7K,EAAM2T,GAC/B,IAAI2lD,KAAennC,GAChB+V,GAAG,IADN,eAAAzyB,EAAAvU,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KACW,SAAA0I,EAAO+iB,GAAP,IAAAh/B,EAAAsW,EAAA/N,EAAA,OAAAgnB,EAAAzyB,EAAA6W,KAAA,SAAAwI,GAAA,cAAAA,EAAAtI,KAAAsI,EAAArI,MAAA,OACD9T,EAAgB,IAAIE,IAAcvC,GACpC2Y,EAAgB,KAChB/N,EAAc,KAHX4T,EAAA+6C,GAKCl4B,EAAMxyB,KALP2P,EAAArI,KAMA,wBANAqI,EAAA+6C,GAAA,yBAQHv5D,EAAMw5D,oBARHh7C,EAAArI,KAAA,EAUmBnW,EAAMy5D,mBAVzB,cAUH9gD,EAVG6F,EAAAtG,KAYHtN,EAAcy2B,EAAMq4B,QAAQC,SAAS/uD,YACrCA,EAAcvI,EAAc+T,MAAMxL,EAAYoW,YAAYD,IAAI1e,EAAc+T,MAAMrM,KAAK2tC,IAAI,GAAGrrC,SAASsM,IAAgBqI,aAAaA,WAGpIrT,OAAOisD,cAAcC,WAArB,oBAAqD,CACnDC,iBAAgB,GAAA3zD,OAAKyE,EAAL,KAAAzE,OAAoBnG,EAAMmK,cAA1B,2BAChB4vD,WAAY,QACZC,WAAY,GACZC,WAAY,GACZd,QAAS,YArBR36C,EAAAgB,OAAA,2BAAAhB,EAAAgB,OAAA,qCAAAhB,EAAA7H,SAAA2H,EAAAve,SADX,gBAAAuf,GAAA,OAAA7J,EAAAoB,MAAA9W,KAAA8E,YAAA,IA8BGq1D,SAGPC,QAAS,CACPjpC,SAAQ,EACRgN,SAAU,8BACVxP,WAAY,CACVnvB,MAAO,CAAC,OAAO,QACfY,OAAQ,CAAC,OAAO,QAChBgH,GAAI,OAEN82B,QAAS,WACTw5B,WAAY,MACZ9d,WAAU,+BACV+d,iBAAiB,CAAC,OAAO,QACzBC,mBAAmB,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAC9DC,gBAAgB,CAAC,MAAM,MAAM,OAAO,OAAO,OAAO,OAAO,QACzDllC,gBAAgB,CAAC0nC,0CAA0C,IAC3Dxb,IAAI,OACJka,MAAM,CACJ12D,KAAK,UACLyrB,QAAQ,WAEVgqC,UAAU,CACR3U,KAAK,CACHqK,OAAO3O,GAAIyb,2BACX1nC,IAAI,8BAENolC,KAAK,CACHxK,OAAO3O,GAAI0b,2BACX3nC,IAAI,+BAGRqlC,QAAS,SAACh4D,GACR,IAAM2pB,EAAO,GAEPsuC,EAAiBj4D,EAAMi4D,gBAAkBj4D,EAAMi4D,eACjDsC,EAAyB,SAAnBtC,EAA4B,OAAS,OAE/C,GAAIj4D,EAAMw6D,iBAAmBx6D,EAAMw6D,gBAAgB15D,MACjD,OAAQd,EAAMw6D,gBAAgB15D,MAAMiG,eAClC,IAAK,MACH4iB,EAAKmvC,MAAQ,CACX12D,KAAK,UACLyrB,QAAQ,WAEVlE,EAAKgwB,WAAL,KAAAxzC,OAAuBo0D,EAAvB,oBACF,MACA,IAAK,MACHA,EAAM,OACN5wC,EAAKmvC,MAAQ,CACX12D,KAAK,UACLyrB,QAAQ,WAEVlE,EAAKgwB,WAAL,KAAAxzC,OAAuBo0D,EAAvB,oBACF,MACA,IAAK,MAED5wC,EAAKmvC,MADgB,SAAnBb,EACW,CACX71D,KAAK,OACLnC,MAAM,WACN4tB,QAAQ,WAGG,CACXzrB,KAAK,UACLyrB,QAAQ,WAGZlE,EAAKgwB,WAAL,KAAAxzC,OAAuBo0D,EAAvB,oBAMN,OAAO5wC,GAETyI,cAAe,SAACpyB,EAAM2T,EAAcukD,GAClC,IAAMtZ,EAAMjrC,EAAcujD,SAAS1K,UAAU2N,QAAQvb,IAC/CiZ,EAAYlkD,EAAcujD,SAAS1K,UAAU2N,QAAQtC,UAAUjZ,GAEjE6b,EAAe,KAEnB,GAAIvC,EAAUsC,iBAAmBtC,EAAUsC,gBAAgB15D,MACzD,OAAQo3D,EAAUsC,gBAAgB15D,MAAMiG,eACtC,IAAK,MACH0zD,EAAe,MACjB,MACA,IAAK,MACHA,EAAe,MACjB,MACA,IAAK,MACHA,EAAe,MACjB,MACA,IAAK,MACHA,EAAe,MACjB,MACA,QACEA,EAAe,MAKrB,IAAIC,EAAqBxC,EAAU/tD,cAAgB+tD,EAAU/tD,cAAcb,cAAkBtJ,EAAMoK,YAAY+vD,SAAWn6D,EAAMoK,YAAY+vD,QAAQQ,aAAe36D,EAAMoK,YAAY+vD,QAAQQ,aAAe36D,EAAMmK,cAClNuwD,EAAqBA,EAAmB3zD,cAOxC,MAAO,CACLwmD,OANasK,EAAUtK,OAOvBmN,qBACAE,cAPoB56D,EAAM2L,QAQ1B8uD,eACAI,kBARwB76D,EAAM2L,QAS9BmvD,0BAR+B,EAS/Bv7D,MAAM,OACNY,OAAO,SAIXkyB,OAAQ,SAACF,EAAWtnB,EAAO7K,EAAM2T,GAC/B,GAAIhG,OAAOotD,cAAc,CAGvB,IADsBrrC,SAASC,eAAe,kBAC3B,CACjB,IAAM8oC,EAAY/oC,SAAStwB,cAAc,OAmBzC,GAlBAq5D,EAAUC,UAAV,szCAAAvyD,OAQsBwN,EAAcujD,SAAS1K,UAAU2N,QAAQj8B,SAR/D,iQAeAxO,SAASipC,KAAKplC,YAAYklC,IAGrB/oC,SAASC,eAAe,uBAAuB,CAClD,IAAMqrC,EAAetrC,SAAStwB,cAAc,SAC5C47D,EAAajuD,GAAK,sBAClBiuD,EAAatC,UAAb,6cAaAhpC,SAASipC,KAAKplC,YAAYynC,IAI9BrtD,OAAOotD,cAAc1oC,OAAOF,EAAY,+BAI9C8oC,QAAS,CACP/pC,SAAQ,EACRgN,SAAU,8BACVxP,WAAY,CACVnvB,MAAO,CAAC,OAAO,QACfY,OAAQ,CAAC,OAAO,QAChBgH,GAAI,OAEN82B,QAAS,WACTw5B,WAAY,MACZ9d,WAAY,eACZ+d,iBAAiB,CAAC,OAAO,QACzBC,mBAAmB,CAAC,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,MAAM,OAChFC,gBAAgB,CAAC,OAAO,MAAM,OAC9BhZ,IAAI,OACJiZ,UAAU,CACR3U,KAAK,CACHvwB,IAAI,iCACJ46B,OAAO3O,GAAIsc,4BAEbnD,KAAK,CACHplC,IAAI,yBACJ46B,OAAO3O,GAAIuc,6BAGfnD,QAAS,SAACh4D,GACR,IAAM2pB,EAAO,GACb,GAAI3pB,EAAMi4D,gBAAkBj4D,EAAMi4D,eAChC,OAAQj4D,EAAMi4D,gBACZ,IAAK,OACH,GAAIj4D,EAAMw6D,iBAAmBx6D,EAAMw6D,gBAAgB15D,MACjD,OAAQd,EAAMw6D,gBAAgB15D,MAAMiG,eAClC,IAAK,MACH4iB,EAAKmvC,MAAQ,CACX12D,KAAK,OACLnC,MAAM,WACN4tB,QAAQ,WAEVlE,EAAKgwB,WAAL,yBACF,MACA,IAAK,MACHhwB,EAAKmvC,MAAQ,CACX12D,KAAK,OAEPunB,EAAKgwB,WAAL,yBACF,MACA,QACEhwB,EAAKmvC,MAAQ,KACbnvC,EAAKgwB,WAAL,6BAIR,MACA,IAAK,OACHhwB,EAAKmvC,MAAQ,KACbnvC,EAAKgwB,WAAL,aAMN,OAAOhwB,GAETyI,cAAe,SAACpyB,EAAM2T,EAAcukD,GAClC,IAAMtZ,EAAMjrC,EAAcujD,SAAS1K,UAAUyO,QAAQrc,IAC/CiZ,EAAYlkD,EAAcujD,SAAS1K,UAAUyO,QAAQpD,UAAUjZ,GAE/D9oB,EAAS,CACby3B,OAFasK,EAAUtK,OAGvBoN,aAAczC,EAAU/tD,cAAgB+tD,EAAU/tD,cAAcb,cAAkBtJ,EAAMoK,YAAY6wD,SAAWj7D,EAAMoK,YAAY6wD,QAAQN,aAAe36D,EAAMoK,YAAY6wD,QAAQN,aAAe36D,EAAMmK,cAAcb,cACrNsxD,cAAc56D,EAAM2L,QACpByvD,iBAAiB,MACjBC,uBAAuB,GAGnB3mB,EAAU,CACdyiB,KAAO,CACL7X,IAAM,oBACNK,IAAM,sBAER2X,KAAO,qBAGHkD,EAAkBtC,EAAUsC,iBAAmBtC,EAAUsC,gBAAgB15D,MAAQo3D,EAAUsC,gBAAgB15D,MAAMiG,cAAgB,KAGvI,GAAImxD,EAAUD,eACZ,OAAQC,EAAUD,gBAChB,IAAK,OAEH,OADAniC,EAAOwlC,sBAAwB5mB,EAAQwjB,EAAUD,gBAAlB,IACvBuC,GACN,IAAK,MACL,IAAK,MACH1kC,EAAOwlC,sBAAwB5mB,EAAQwjB,EAAUD,gBAAgBuC,GACnE,MACA,QACE1kC,EAAOwlC,sBAAwBp6D,OAAOwG,OAAOgtC,EAAQwjB,EAAUD,iBAAiBnkD,KAAK,KAG3F,MACA,IAAK,OACL,QACEgiB,EAAOwlC,sBAAwB5mB,EAAQwjB,EAAUD,gBAMvD,OAAQuC,GACN,IAAK,MACH1kC,EAAOslC,iBAAmB,MAC5B,MACA,IAAK,MACHtlC,EAAOslC,iBAAmB,MAC5B,MACA,QACEtlC,EAAOslC,iBAAmB,MAI9B,IAAIzoC,EAAMklC,EAAUllC,IAWpB,OARe4oC,UAAUC,UAAU/vC,QAAQ,WAAa,IAEjDiE,SAAS+rC,OAAOze,MAAM,+CACzBttB,SAAS+rC,OAAS,qEAClB9oC,GAAO,gBAIJ,GAAAxsB,OAAGwsB,EAAH,KAAUzxB,OAAOqF,KAAKuvB,GACxBrvB,IAAI,SAAA8xD,GAAC,OAAIC,mBAAmBD,GAAK,IAAMC,mBAAmB1iC,EAAOyiC,MACjEzkD,KAAK,MAEZue,OAAQ,SAACF,EAAWtnB,EAAO7K,EAAM2T,GAE/B,IADsB+b,SAASC,eAAe,kBAC3B,CACjB,IAAM8oC,EAAY/oC,SAAStwB,cAAc,OA8BzC,GA7BAq5D,EAAUC,UAAV,iqBAAAvyD,OAQiBgsB,EARjB,yeAAAhsB,OAewBwN,EAAcujD,SAAS1K,UAAUyO,QAAQ/8B,SAfjE,iwBA0BAxO,SAASipC,KAAKplC,YAAYklC,IAGrB/oC,SAASC,eAAe,uBAAuB,CAClD,IAAM+rC,EAAehsC,SAAStwB,cAAc,SAC5Cs8D,EAAa3uD,GAAK,sBAClB2uD,EAAahD,UAAb,qbAaAhpC,SAASipC,KAAKplC,YAAYmoC,OAKlC/U,cAAe,CACbz1B,SAAS,EACTgN,SAAU,oCACVxP,WAAY,CACVnvB,MAAO,CAAC,OAAO,QACfY,OAAQ,CAAC,OAAO,QAChBgH,GAAI,OAEN82B,QAAS,WACTw5B,WAAY,MACZ9d,WAAY,gBACZ+d,iBAAiB,CAAC,UAClBE,gBAAgB,CAAC,OAAO,OACxBllC,gBAAgB,CAACipC,uCAAuC,IACxDvpC,cAAe,SAACpyB,EAAM2T,EAAcukD,EAAU0D,EAAUC,GAEtD,IAAMC,EAAcnoD,EAAckkC,OAAOqgB,EAAU/tD,eAC7CgtB,EAAgBxpB,OAAOouD,mBAAqBpuD,OAAOouD,mBAAmB5kC,cAAgB,KAE5F,OAAK2kC,EAAYnV,cAIV,CACLmH,UAAWn6C,EAAci4C,QAAQM,gBACjC8P,QAASroD,EAAci4C,QAAQM,gBAC/BzrB,SAAUtJ,GAAiC,aAAhBA,GAA8BxpB,OAAOouD,mBAAmBE,UAAU9kC,EAAc7tB,eAAiBqE,OAAOouD,mBAAmBE,UAAUtuD,OAAOouD,mBAAmB5kC,cAAc7tB,eAAem3B,SAAW9yB,OAAOuuD,SACzOtV,YAAakV,EAAYnV,cAAcC,YACvCE,cAAegV,EAAYnV,cAAcG,cACzCqV,yBAA0BL,EAAYnV,cAAcE,UACpDuV,oBAAqB,CAACN,EAAYnV,cAAcE,WAChDwV,gCAAgC,EAChCT,UAAWA,GAAwB,aACnCC,QAASA,GAAoB,cAbtB,MAgBXxpC,OAAQ,SAACF,EAAWtnB,GACd8C,OAAOg5C,eAAiBx0B,IACtBtnB,IACFsnB,EAAWmqC,sBAAwB7yD,WAAWoB,IAEhD8C,OAAOg5C,cAAct0B,OAAOF,EAAY,WAI9CoqC,UAAW,CACTrrC,SAAS,EACTgN,SAAU,4BACVxP,WAAY,CACVnvB,MAAO,CAAC,OAAO,QACfY,OAAQ,CAAC,OAAO,QAChBgH,GAAI,OAEN82B,QAAS,YACTw5B,WAAY,MACZ9d,WAAY,gBACZ+d,iBAAiB,CAAC,UAClBE,gBAAgB,CAAC,OAAO,OAAO,MAAM,OAAO,OAAO,OAAO,OAAO,OACjE4E,iBAAiB,CACftrC,SAAS,EACT8qB,gBAAiB,6CACjBygB,eAAgB,CACd,CACEC,aAAgB,UAChB32D,KAAQ,gBACR8I,KAAQ,WAEV,CACE6tD,aAAgB,UAChB32D,KAAQ,gBACR8I,KAAQ,WAEV,CACE6tD,aAAgB,UAChB32D,KAAQ,eACR8I,KAAQ,WAEV,CACE6tD,aAAgB,UAChB32D,KAAQ,eACR8I,KAAQ,aAId6jB,gBAAgB,CACdiqC,iDAAiD,GACjDC,gDAAgD,CAC9CtpC,cAAc5D,SAASipC,KACvB1lC,QAAS,SAACjzB,EAAM2T,EAAcqe,GAI5B,IADA,IAAMpI,EAAU8F,SAASmtC,iBAAiB,wBACjC3yD,EAAE,EAAEA,EAAE0f,EAAQ9kB,OAAOoF,IAC5B0f,EAAQ1f,GAAG4yD,SASb,IADA,IAAMC,EAAUrtC,SAASmtC,iBAAiB,qBACjC3yD,EAAE,EAAEA,EAAE6yD,EAAQj4D,OAAOoF,IAC5B6yD,EAAQ7yD,GAAG4yD,SAGb,IAAM5qC,EAAWlyB,EAAMkyB,SAAWlyB,EAAMkyB,SAAvB,iBAAA/rB,OAAmDnG,EAAMmK,eAC1E,IAAKulB,SAASC,eAAeuC,GAAU,CACrC,IAAM/yB,EAAIuwB,SAAStwB,cAAc,KACjCD,EAAE4N,GAAKmlB,EACP/yB,EAAEqkB,KAAOwO,EAAaI,cAAcpyB,EAAM2T,GAC1CxU,EAAEoP,OAAS,SACXpP,EAAEqP,IAAM,+BACRrP,EAAEmE,UAAY,kDACdnE,EAAEmlB,MAAQ,kBACVnlB,EAAEQ,MAAQ,gBACV+vB,SAASipC,KAAKplC,YAAYp0B,OAKlCizB,cAAe,SAACpyB,EAAM2T,GAAiC9O,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,OAC/C8sB,EAAY3xB,EAAM2xB,UAAY3xB,EAAM2xB,UAAY,MAChDmE,EAAS,CACbknC,KAAK,KACLnuD,KAAK,OACLm0C,KAAK,SACL58C,MAAM,cACN62D,iBAAgB,EAEhBC,aAAY,GAAA/2D,OAAIwrB,EAAJ,KAAAxrB,OAAiBnG,EAAMmK,eACnCma,MAAK,QAAAne,OAASwrB,EAAT,SAAAxrB,OAA0BnG,EAAMmK,eACrCgzD,YAAW,GAAAh3D,OAAIwrB,EAAJ,KAAAxrB,OAAiBnG,EAAMmK,eAClCizD,aAAa,6CACbxR,QAAmD,IAA1Cj4C,EAAci4C,QAAQM,gBAAwB,UAAY,QAKrE,MAAO,GAAA/lD,OAFM,uCAEN,KAAUjF,OAAOqF,KAAKuvB,GACxBrvB,IAAI,SAAA8xD,GAAC,OAAIC,mBAAmBD,GAAK,IAAMC,mBAAmB1iC,EAAOyiC,MACjEzkD,KAAK,MAEZue,OAAQ,SAACF,EAAWtnB,EAAO7K,GACzB,IAAMkyB,EAAWlyB,EAAMkyB,SAAWlyB,EAAMkyB,SAAvB,iBAAA/rB,OAAkDnG,EAAMmK,eACnEhL,EAAIuwB,SAASC,eAAeuC,GAC9B/yB,GACFA,EAAEk+D,UAgCRC,QAAS,CACPpsC,SAAS,EACTgN,SAAU,8BACVxP,WAAY,CACVnvB,MAAO,CAAC,OAAO,QACfY,OAAQ,CAAC,OAAO,QAChBgH,GAAI,OAEN82B,QAAS,WACTw5B,WAAY,MACZ9d,WAAY,aACZ+d,iBAAiB,CAAC,UAClBE,gBAAgB,CAAC,OAAO,OACxBhZ,IAAI,aACJlsB,gBAAgB,CAAC6qC,mDAAmD,IACpEnrC,cAAe,SAACpyB,EAAM2T,EAAcukD,EAAUsF,EAAW3B,GACvD,MAAO,CACLjd,IAAK,aACLoE,KAAM,MACNt5C,MAAO1J,EAAMoK,YAAYoJ,QACzBme,UAAW,MACX6rC,WAAYA,GAA0B,aACtC3B,QAASA,GAAoB,eAGjCxpC,OAAQ,SAACF,EAAWtnB,EAAO7K,GACrB2N,OAAO8vD,iBACL5yD,IACFsnB,EAAWtnB,OAASA,EAAOmW,YAE7BrT,OAAO8vD,eAAeprC,OAAOF,EAAW,WAI9CurC,MAAO,CACLxsC,SAAS,EACTgN,SAAU,4BACVxP,WAAY,CACVnvB,MAAO,CAAC,OAAO,QACfY,OAAQ,CAAC,OAAO,QAChBgH,GAAI,OAEN82B,QAAS,WACTw5B,WAAY,MACZ9d,WAAY,aACZ+d,iBAAiB,CAAC,UAClBE,gBAAgB,CAAC,OAAO,OACxBhZ,IAAI,aACJlsB,gBAAgB,CAACirC,0CAA0C,IAC3DvrC,cAAe,SAACpyB,EAAM2T,EAAcukD,EAAUsF,EAAW3B,GACvD,MAAO,CACL+B,mBAAoB,KACpBC,oBAAqB,KACrBC,wBAAyB,KACzBC,yBAA0B,KAC1BxQ,OAAQ,KACRyQ,uBAAwB,OAG5B3rC,OAAQ,SAACF,EAAWtnB,EAAO7K,GACzB,GAAI2N,OAAOswD,YAAY,CACrB,IAAMC,EAAS,eACf,IAAKxuC,SAASC,eAAeuuC,GAAQ,CACnC,IAAMC,EAAuBzuC,SAAStwB,cAAc,OACpD++D,EAAqBpxD,GAAKmxD,EAC1BxuC,SAASipC,KAAKplC,YAAY4qC,GAG5BxwD,OAAOswD,YAAYv1C,QAAQ01C,IAAIjsC,EAAWzC,SAASC,eAAeuuC,UAQ/DvqD,+VC1mFA0qD,EA9Nb,SAAAA,EAAYr+D,GAAM,IAAAwE,EAAAzE,KAAAmB,OAAAo9D,EAAA,EAAAp9D,CAAAnB,KAAAs+D,GAAAt+D,KANlBC,MAAQ,GAMUD,KALlBqjD,UAAY,KAKMrjD,KAJlBqK,YAAc,KAIIrK,KAHlBsC,cAAgB,KAGEtC,KAKlBuC,SAAW,SAAAtC,GACTwE,EAAKxE,MAAQA,EAETwE,EAAKnC,cACPmC,EAAKnC,cAAcC,SAASkC,EAAKxE,OAEjCwE,EAAKnC,cAAgB,IAAIE,EAAciC,EAAKxE,OAG9CwE,EAAK4+C,UAAY5+C,EAAKnC,cAAcwJ,gBAAgB,CAAC,aAAa,QAAQ,cAC1ErH,EAAK4F,YAAc5F,EAAKnC,cAAcwJ,gBAAgB,CAAC,YAAYrH,EAAK4+C,aAfxDrjD,KAkBlBw+D,WAlBkBr9D,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAkBL,SAAA0I,IAAA,IAAA9H,EAAA,OAAAob,EAAAzyB,EAAA6W,KAAA,SAAAwI,GAAA,cAAAA,EAAAtI,KAAAsI,EAAArI,MAAA,cAAAqI,EAAArI,KAAA,EACS3R,EAAKnC,cAAc06B,gBAAgBv4B,EAAK4+C,UAAU5+C,EAAKxE,MAAM2L,SADtE,cACP6K,EADOgI,EAAAtG,QAEK1T,EAAKnC,cAAc+T,MAAMI,GAAS5H,UAChD4H,EAAUhS,EAAKnC,cAAc+T,MAAM,IAH1BoI,EAAAgB,OAAA,SAKJhJ,GALI,wBAAAgI,EAAA7H,SAAA2H,EAAAve,SAlBKA,KA0BlBy+D,aA1BkB,eAAA1mD,EAAA5W,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KA0BH,SAAAkJ,EAAOnO,EAASilB,GAAhB,OAAAhE,EAAAzyB,EAAA6W,KAAA,SAAAiJ,GAAA,cAAAA,EAAA/I,KAAA+I,EAAA9I,MAAA,cAAA8I,EAAAO,OAAA,SACNhb,EAAKnC,cAAcm0B,0BAA0B,eAAgB,QAAS,GAAI7lB,EAAUilB,IAD9E,wBAAA3W,EAAAtI,SAAAmI,EAAA/e,SA1BG,gBAAAuf,EAAAC,GAAA,OAAAzH,EAAAjB,MAAA9W,KAAA8E,YAAA,GAAA9E,KA8BlB0+D,cA9BkBv9D,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KA8BF,SAAAC,IAAA,IAAAlK,EAAA+yD,EAAAC,EAAA95D,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACdxK,GADqBA,EAAPgzD,EAAA75D,OAAA,QAAAC,IAAA45D,EAAA,GAAAA,EAAA,GAAe,OACCn6D,EAAKxE,MAAM2L,QAD3BsK,EAAAE,KAAA,EAES3R,EAAKnC,cAAcw3B,oBAAoBr1B,EAAK4+C,UAAU,gBAAgB,CAACz3C,IAFhF,YAEV+yD,EAFUzoD,EAAAiC,MAAA,CAAAjC,EAAAE,KAAA,eAAAF,EAAAuJ,OAAA,SAILhb,EAAKnC,cAAc+T,MAAMsoD,IAJpB,cAAAzoD,EAAAuJ,OAAA,SAMP,MANO,wBAAAvJ,EAAAU,SAAAd,EAAA9V,SA9BEA,KAuClB6+D,iBAvCkB19D,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAuCC,SAAAmC,IAAA,OAAA6Z,EAAAzyB,EAAA6W,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,cAAA6B,EAAAwH,OAAA,SACVhb,EAAKnC,cAAcw3B,oBAAoB,iBAAiB,sBAD9C,wBAAA7hB,EAAArB,SAAAoB,EAAAhY,SAvCDA,KA2ClB8+D,mBA3CkB39D,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KA2CG,SAAAkK,IAAA,OAAA8R,EAAAzyB,EAAA6W,KAAA,SAAAgK,GAAA,cAAAA,EAAA9J,KAAA8J,EAAA7J,MAAA,cAAA6J,EAAAR,OAAA,SAOZhb,EAAKnC,cAAc+T,MAAM,IAPb,wBAAA4J,EAAArJ,SAAAmJ,EAAA/f,SA3CHA,KAqDlB++D,OArDkB,eAAA5pB,EAAAh0C,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAqDT,SAAA+K,EAAOjX,EAAMU,GAAb,IAAAkP,EAAAylD,EAAAC,EAAAC,EAAAzkB,EAAAj5B,EAAA29C,EAAAC,EAAAviC,EAAAwiC,EAAAC,EAAAC,EAAAz6D,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAA8K,GAAA,cAAAA,EAAA5K,KAAA4K,EAAA3K,MAAA,UAAyBmD,EAAzBgmD,EAAAx6D,OAAA,QAAAC,IAAAu6D,EAAA,GAAAA,EAAA,GAAwC,MACzCP,EAAkBv6D,EAAKnC,cAAcwJ,gBAAgB,CAAC,YAAYrH,EAAK4+C,aACxDlyB,QAFd,CAAApQ,EAAA3K,KAAA,eAAA2K,EAAAtB,OAAA,UAGE,GAHF,cAMDw/C,EANC,cAAA74D,OAM6BiE,EAAY08B,KAAKp9B,MAN9C,KAAAvD,OAMuDmT,GAQ1D2lD,EAAMz6D,EAAKnC,cAAc+T,MAAM,GAd5B0K,EAAA3K,KAAA,EAmBGwI,QAAQkD,IAAI,CACpBrd,EAAK+6D,gBAAgBn1D,GACrB5F,EAAKnC,cAAcuO,mBAAmBxG,GAAY,GAAM,KArBnD,UAAAowC,EAAA15B,EAAA5I,KAAAqJ,EAAArgB,OAAA8qC,EAAA,EAAA9qC,CAAAs5C,EAAA,GAiBL0kB,EAjBK39C,EAAA,GAkBL49C,EAlBK59C,EAAA,IAwBH29C,IAAoBC,EAxBjB,CAAAr+C,EAAA3K,KAAA,YA0BCymB,EAAiBp4B,EAAKnC,cAAcwJ,gBAAgB,CAAC,QAAQ,SAAS,QAGvEyN,EA7BA,CAAAwH,EAAA3K,KAAA,gBAAA2K,EAAA5K,KAAA,GAAA4K,EAAA3K,KAAA,GA+BsB3R,EAAKnC,cAAcm9D,yBAAyB5iC,EAAemiC,GA/BjF,QA+BDzlD,EA/BCwH,EAAA5I,KAAA4I,EAAA3K,KAAA,iBAAA2K,EAAA5K,KAAA,GAAA4K,EAAAy4C,GAAAz4C,EAAA,kBAmCExH,IAAkBA,EAAe1K,UACpC0K,EAAiB9U,EAAKnC,cAAc+T,MAAM,IApCzC,WAwCAkD,IAAkB9U,EAAKnC,cAAc+T,MAAMkD,GAAgB2b,IAAI,GAxC/D,CAAAnU,EAAA3K,KAAA,gBAAA2K,EAAAtB,OAAA,SAyCIhb,EAAKnC,cAAc+T,MAAM,IAzC7B,eAAA0K,EAAA3K,KAAA,GA4CmB3R,EAAKnC,cAAc2kC,oBAAoBm4B,EAAgBM,0BAA0B/1D,EAAMU,GA5C1G,eA4CCg1D,EA5CDt+C,EAAA5I,KA8CCmnD,EAA4B76D,EAAKnC,cAAc+T,MAAMkD,GAAgB5F,MAAMwrD,GACjFD,EAAMI,EAA0Bt+C,IAAIq+C,GAAW1rD,MAAM,KA/ChDoN,EAAAtB,OAAA,SAmDEhb,EAAKnC,cAAcipB,cAAc0zC,EAAcC,IAnDjD,eAAAn+C,EAAAtB,OAAA,SAsDAy/C,GAtDA,yBAAAn+C,EAAAnK,SAAAgK,EAAA5gB,KAAA,cArDS,gBAAA6W,EAAAuB,GAAA,OAAA+8B,EAAAr+B,MAAA9W,KAAA8E,YAAA,GAAA9E,KA+GlB2/D,SA/GkB,eAAAl+C,EAAAtgB,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KA+GP,SAAAwL,EAAOu+C,GAAP,IAAAX,EAAA3zC,EAAAu0C,EAAA,OAAAhuC,EAAAzyB,EAAA6W,KAAA,SAAAyL,GAAA,cAAAA,EAAAvL,KAAAuL,EAAAtL,MAAA,UAEH6oD,EAFG,gBAAA74D,OAE6Bw5D,GAEnB,QADbt0C,EAAa7mB,EAAKnC,cAAcw9D,8BAA8Bb,KACxCx6D,EAAKnC,cAAc+T,MAAMiV,GAAYzc,QAJxD,CAAA6S,EAAAtL,KAAA,eAAAsL,EAAAjC,OAAA,SAKAhb,EAAKnC,cAAc+T,MAAMiV,IALzB,cAAA5J,EAAAtL,KAAA,EAQc3R,EAAKnC,cAAcw3B,oBAAoB,iBAAiB,aAAa,CAAC8lC,IARpF,YAQLC,EARKn+C,EAAAvJ,OASU1T,EAAKnC,cAAc+T,MAAMwpD,GAAYhxD,QAT/C,CAAA6S,EAAAtL,KAAA,gBAUPypD,EAAap7D,EAAKnC,cAAc+T,MAAMwpD,GAV/Bn+C,EAAAjC,OAAA,SAWAhb,EAAKnC,cAAcy9D,8BAA8Bd,EAAcY,IAX/D,eAAAn+C,EAAAjC,OAAA,SAaF,MAbE,yBAAAiC,EAAA9K,SAAAyK,EAAArhB,SA/GO,gBAAAggE,GAAA,OAAAv+C,EAAA3K,MAAA9W,KAAA8E,YAAA,GAAA9E,KA+HlBw/D,gBA/HkB,eAAAS,EAAA9+D,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KA+HA,SAAAoM,EAAO5X,GAAP,IAAA40D,EAAA3zC,EAAAu0C,EAAAzT,EAAA8T,EAAA,OAAAruC,EAAAzyB,EAAA6W,KAAA,SAAAiM,GAAA,cAAAA,EAAA/L,KAAA+L,EAAA9L,MAAA,UAEV6oD,EAFU,uBAAA74D,OAE6BiE,EAAY08B,KAAKp9B,OAE3C,QADb2hB,EAAa7mB,EAAKnC,cAAcw9D,8BAA8Bb,KACxCx6D,EAAKnC,cAAc+T,MAAMiV,GAAYzc,QAJjD,CAAAqT,EAAA9L,KAAA,eAAA8L,EAAAzC,OAAA,SAKPhb,EAAKnC,cAAc+T,MAAMiV,IALlB,cAAApJ,EAAA9L,KAAA,EASS3R,EAAKk7D,SAASt1D,EAAY08B,KAAKtzB,SATxC,YASVosD,EATU39C,EAAA/J,MAAA,CAAA+J,EAAA9L,KAAA,YAcRg2C,EAAgB3nD,EAAKnC,cAAcwJ,gBAAgB,CAAC,UAAU,kBAG9Do0D,EAAez7D,EAAKnC,cAAc+T,MAAMwpD,GAAYlsD,MAAMlP,EAAKnC,cAAc+T,MAAM+1C,IAAgBprC,IAAI,MAExGvc,EAAKnC,cAAc+T,MAAM6pD,GAAcrxD,QAnB9B,CAAAqT,EAAA9L,KAAA,gBAAA8L,EAAAzC,OAAA,SAoBLhb,EAAKnC,cAAcy9D,8BAA8Bd,EAAciB,IApB1D,eAAAh+C,EAAAzC,OAAA,SAwBT,MAxBS,yBAAAyC,EAAAtL,SAAAqL,EAAAjiB,SA/HA,gBAAAmgE,GAAA,OAAAF,EAAAnpD,MAAA9W,KAAA8E,YAAA,GAAA9E,KA0JlBogE,oBA1JkBj/D,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KA0JI,SAAAwqD,IAAA,IAAAz0D,EAAAtB,EAAAg2D,EAAAC,EAAAC,EAAA17D,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAAwqD,GAAA,cAAAA,EAAAtqD,KAAAsqD,EAAArqD,MAAA,UAAOxK,EAAP40D,EAAAz7D,OAAA,QAAAC,IAAAw7D,EAAA,GAAAA,EAAA,GAAe,KAAKl2D,EAApBk2D,EAAAz7D,OAAA,QAAAC,IAAAw7D,EAAA,GAAAA,EAAA,GAAoC,KAAKF,EAAzCE,EAAAz7D,OAAA,QAAAC,IAAAw7D,EAAA,IAAAA,EAAA,GACf50D,IACHA,EAAUnH,EAAKxE,MAAM2L,UAElBtB,GAAmB7F,EAAKxE,MAAM6X,mBACjCxN,EAAkB7F,EAAKxE,MAAM2oC,oBAAoBnkC,EAAKxE,MAAM6X,mBAGzDlM,GAAYtB,EARG,CAAAm2D,EAAArqD,KAAA,eAAAqqD,EAAAhhD,OAAA,UASX,GATW,cAYhB8gD,EAAa97D,EAAKnC,cAAc+T,MAAM,GAZtBoqD,EAAArqD,KAAA,GAad3R,EAAKnC,cAAcmT,aAAatU,OAAOqF,KAAK8D,GAA5C,eAAAo2D,EAAAv/D,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAA6D,SAAA8qD,EAAOh3D,GAAP,IAAAU,EAAAu2D,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAnvC,EAAAzyB,EAAA6W,KAAA,SAAAgrD,GAAA,cAAAA,EAAA9qD,KAAA8qD,EAAA7qD,MAAA,UAC3D/L,EAAcC,EAAgBX,IAEhClF,EAAK4F,cAAe5F,EAAK4F,YAAYs7C,eAAe/7C,SAASS,EAAY08B,KAAKp9B,OAHjB,CAAAs3D,EAAA7qD,KAAA,eAAA6qD,EAAAxhD,OAAA,wBAAAwhD,EAAA7qD,KAAA,EAUvDwI,QAAQkD,IAAI,CACpBrd,EAAKk7D,SAASt1D,EAAY08B,KAAKtzB,SAC/BhP,EAAKnC,cAAc4+D,iBAAiBt1D,EAAQvB,KAZmB,OAAAu2D,EAAAK,EAAA9oD,KAAA0oD,EAAA1/D,OAAA8qC,EAAA,EAAA9qC,CAAAy/D,EAAA,GAQ/DE,EAR+DD,EAAA,GAS/DE,EAT+DF,EAAA,GAe7DC,GAAaC,IACTC,EAAaF,EAAUntD,MAAMotD,GACnCR,EAAaA,EAAWjqD,KAAK0qD,IAjBkC,yBAAAC,EAAArqD,SAAA+pD,EAAA3gE,SAA7D,gBAAAmhE,GAAA,OAAAT,EAAA5pD,MAAA9W,KAAA8E,YAAA,IAbc,eAkChBw7D,IACFC,EAAa97D,EAAKnC,cAAc0W,iBAAiBunD,EAAW97D,EAAK4F,YAAYE,UAC7Eg2D,EAAa97D,EAAKnC,cAAc8+D,qBAAqBb,EAAW97D,EAAK4F,YAAYq7C,wBApC/D+a,EAAAhhD,OAAA,SAuCb8gD,GAvCa,yBAAAE,EAAA7pD,SAAAypD,EAAArgE,SA1JJA,KAoMlBqhE,UApMkBlgE,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAoMN,SAAAyrD,IAAA,IAAAh3D,EAAAujB,EAAAvd,EAAAixD,EAAAz8D,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAAurD,GAAA,cAAAA,EAAArrD,KAAAqrD,EAAAprD,MAAA,cAAO9L,EAAPi3D,EAAAx8D,OAAA,QAAAC,IAAAu8D,EAAA,GAAAA,EAAA,GAAuB,QAE/Bj3D,EAAkB7F,EAAKxE,MAAM2oC,oBAAoBnkC,EAAKxE,MAAM6X,mBAE1D+V,EAASppB,EAAKnC,cAAc+T,MAAM,GAClC/F,EAAkB7L,EAAKnC,cAAc+T,MAAM,GALrCmrD,EAAAprD,KAAA,EAMJ3R,EAAKnC,cAAcmT,aAAatU,OAAOqF,KAAK8D,GAA5C,eAAAm3D,EAAAtgE,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAA6D,SAAA6rD,EAAO/3D,GAAP,IAAAU,EAAAs3D,EAAAC,EAAAC,EAAAzC,EAAA,OAAAvtC,EAAAzyB,EAAA6W,KAAA,SAAA6rD,GAAA,cAAAA,EAAA3rD,KAAA2rD,EAAA1rD,MAAA,cAC3D/L,EAAcC,EAAgBX,GAD6Bm4D,EAAA1rD,KAAA,EAEzBwI,QAAQkD,IAAI,CAClDrd,EAAKs6D,OAAOp1D,EAAMU,GAClB5F,EAAKnC,cAAcuO,mBAAmBxG,GAAY,GAAM,KAJO,OAAAs3D,EAAAG,EAAA3pD,KAAAypD,EAAAzgE,OAAA8qC,EAAA,EAAA9qC,CAAAwgE,EAAA,GAE1DE,EAF0DD,EAAA,GAElDxC,EAFkDwC,EAAA,GAO7DC,GAAWzC,IACbvxC,EAASA,EAAOvX,KAAKurD,EAAQluD,MAAMyrD,EAAgB9uD,kBACnDA,EAAkBA,EAAgBgG,KAAK8oD,EAAgB9uD,kBATQ,wBAAAwxD,EAAAlrD,SAAA8qD,EAAA1hE,SAA7D,gBAAA+hE,GAAA,OAAAN,EAAA3qD,MAAA9W,KAAA8E,YAAA,IANI,cAmBV+oB,EAASA,EAAO7M,IAAI1Q,GAnBVkxD,EAAA/hD,OAAA,SAqBHoO,GArBG,wBAAA2zC,EAAA5qD,SAAA0qD,EAAAthE,SAnMVA,KAAKuC,SAAStC,wCCDZ+hE,EAAgBC,EAAQ,KACxBpjB,EAAMC,8/CAENt8C,aAOJ,SAAAA,EAAYvC,GAAM,IAAAwE,EAAAzE,KAAAmB,OAAAo9D,EAAA,EAAAp9D,CAAAnB,KAAAwC,GAAAxC,KAJlBC,MAAQ,GAIUD,KAHlBkiE,aAAe,KAGGliE,KAKlBuC,SAAW,SAAAtC,GACTwE,EAAKxE,MAAQA,GANGD,KAQlBmiE,QAAU,SAAA9iD,GACR,OAAO5a,EAAK4R,MAAMgJ,GAAKtU,QAAQ,IATf/K,KAWlBg6B,KAAO,SAAA4P,GAAC,OAAI,IAAInlC,EAAKxE,MAAMmf,KAAKgjD,MAAMC,GAAGz4B,IAXvB5pC,KAYlBsiE,MAAQ,SAAAC,GACN,OAAK99D,EAAKxE,MAAMmf,KAGT3a,EAAKxE,MAAMmf,KAAKgjD,MAAMI,SAC1BD,GAAO,GAAGthD,WACX,SAJO,MAdOjhB,KAqBlByiE,MAAQ,SAAApjD,GACN,OAAK5a,EAAKxE,MAAMmf,KAGT3a,EAAKxE,MAAMmf,KAAKgjD,MAAMK,OAC1BpjD,GAAO,GAAG4B,WACX,SAJO,MAvBOjhB,KA8BlB0iE,WAAa,SAAA93C,GACX,IAAIpjB,EAAImoB,SAAStwB,cAAc,YAE/B,OADAmI,EAAEmxD,UAAY/tC,EACiB,IAAxBpjB,EAAEm7D,WAAW59D,OAAe,GAAKyC,EAAEm7D,WAAW,GAAGC,WAjCxC5iE,KAmClB6iE,UAAY,SAAA1oC,GAAC,OAAI,IAAI2oC,IAAU3oC,IAnCbn6B,KAoClBqW,MAAQ,SAAA8jB,GAAC,OAAI,IAAI2oC,IAAwB,kBAAN3oC,EAAiBA,EAAI4oC,OAAO5oC,KApC7Cn6B,KAqClBmf,UAAY,WAAc,QAAA6jD,EAAAl+D,UAAAC,OAAV9E,EAAU,IAAAgjE,MAAAD,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAVjjE,EAAUijE,GAAAp+D,UAAAo+D,GAAMtvD,IAAcsoB,KAAKkkB,iBAAiB37C,EAAK0a,UAALrI,MAAArS,EAAI,CAAW0+D,MAASxpD,OAAO,aAA3BvT,OAA0CnG,KArChGD,KAsClBojE,eAAiB,WAAc,QAAAC,EAAAC,EAAAx+D,UAAAC,OAAV9E,EAAU,IAAAgjE,MAAAK,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAVtjE,EAAUsjE,GAAAz+D,UAAAy+D,GAAM3vD,IAAcsoB,KAAKikB,gBAAekjB,EAAAvnC,SAAQ/d,MAARjH,MAAAusD,EAAA,CAAcF,MAASxpD,OAAO,aAA9BvT,OAA6CnG,KAtClGD,KAuClB6zB,kBAAoB,SAACiC,GACnB,IAAM/E,EAAWtsB,EAAKxE,MAAM07C,UAAUzwB,KAAK,SAAA4jB,GAAC,OAAIA,EAAE9oC,OAAS8vB,IAC3D,QAAK/E,GAGEA,EAASA,UA5CA/wB,KA8ClBwjE,8BAAgC,SAAC55B,GAC/B,OAAOA,EAAEtN,QAAQ,YAAY,MACpBA,QAAQ,OAAO,IACfA,QAAQ,QAAQ,IAChBA,QAAQ,UAAU,KAClBA,QAAQ,SAAS,KAnDVt8B,KAqDlBgU,WAAa,SAACyvD,GACZ,OAAOA,EAAMA,EAAI5gD,OAAO,EAAE,GAAG7b,cAAcy8D,EAAI5gD,OAAO,GAAK,IAtD3C7iB,KAwDlBiL,YAAc,SAACR,GAAqB,IAAhBkP,EAAgB7U,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAT,KACzB,OAAOq+D,IAAO14D,EAAKkP,IAzDH3Z,KA2DlBywB,kBAAoB,SAACizC,EAAKC,GAOxB,OANIA,GAAQxiE,OAAOqF,KAAKm9D,GAAM5+D,QAC5B5D,OAAOqF,KAAKm9D,GAAMz5D,QAAQ,SAAAkF,GACxBs0D,EAAKt0D,GAAKu0D,EAAKv0D,KAIZs0D,GAlES1jE,KAoElB4jE,UAAY,SAACC,GACV,IAAIC,EAAMn0C,SAAStwB,cAAc,OAEjC,OADAykE,EAAInL,UAAYkL,EACTC,EAAIC,aAAeD,EAAIE,WAAa,IAvE5BhkE,KA0ElBikE,SAAW,SAACC,EAAI16B,GACd,IAAME,EAAQ97B,OAAOu2D,QACfC,EAASF,EAAKx6B,EAEhB26B,EAAc,EAElBr6D,KAAKs6D,cAAgB,SAAUjoC,EAAGvyB,EAAGglC,EAAGz9B,GAEtC,OADAgrB,GAAKhrB,EAAE,GACC,EAAUy9B,EAAE,EAAEzS,EAAEA,EAAIvyB,GAEpBglC,EAAE,KADVzS,GACkBA,EAAE,GAAK,GAAKvyB,IAGV,SAAhBy6D,IACFF,GAXc,GAYd,IAAIG,EAAMx6D,KAAKs6D,cAAcD,EAAa36B,EAAO06B,EAAQ56B,GACzD57B,OAAOq2D,SAAS,EAAEO,GACfH,EAAc76B,GACf57B,OAAOsT,WAAWqjD,EAfN,IAmBlBA,IAhGgBvkE,KAkGlBykE,8BAAgC,SAACz+D,GAAqC,IAA/B4sB,EAA+B9tB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzB8I,OAAOsgD,SAASzqC,KAE3Dzd,EAAOA,EAAKs2B,QAAQ,UAAW,QAC/B,IACIooC,EADQ,IAAI9nB,OAAO,OAAS52C,EAAO,qBACnB2+D,KAAK/xC,GACzB,OAAK8xC,EACAA,EAAQ,GACNE,mBAAmBF,EAAQ,GAAGpoC,QAAQ,MAAO,MAD5B,GADH,MAvGLt8B,KA2GlB2K,YAAc,SAAClB,EAAGY,GAEhB,IAAMu1D,EAAmBv1D,EAAY08B,KAAKtzB,QACpCoxD,EAA2BpgE,EAAKqH,gBAAgB,CAAC,WAAW,UAAU,UAAU,kBAChFg5D,EAAwBz6D,EAAYsrC,WAAatrC,EAAYsrC,UAAUxB,kBAAoB9pC,EAAYsrC,UAAUxB,kBAAkB1gC,QAAU,KAC7IsxD,EAA4B16D,EAAYsrC,WAAatrC,EAAYsrC,UAAUxB,mBAAqB9pC,EAAYsrC,UAAUxB,kBAAkBmc,aAAejmD,EAAYsrC,UAAUxB,kBAAkBmc,aAAe,GAC9MX,EAAiBlrD,EAAKqH,gBAAgB,CAAC,QAAQ,iBAAiB,QAAQ,kBAAkBzB,EAAY08B,KAAKp9B,QAC3Gq7D,EAA6BrV,GAAkBA,EAAexb,kBAAoBwb,EAAexb,kBAAkB1gC,QAAU,KAG7HwxD,EADqBD,GAA8Bv7D,EAAGsJ,KAAKxJ,gBAAkBy7D,EAA2Bz7D,eAAiBE,EAAGwyC,gBAAgB1yC,gBAAkBc,EAAY08B,KAAKtzB,QAAQlK,eAAiBE,EAAGy6D,GAAG36D,gBAAkB9E,EAAKxE,MAAM2L,QAAQrC,eAC5Mu7D,IAA0Br7D,EAAGsJ,KAAKxJ,gBAAkBu7D,EAAsBv7D,gBAAuH,IAAtGw7D,EAA0Br+D,IAAI,SAACkB,GAAQ,OAAOA,EAAE2B,gBAAkBmiB,QAAQjiB,EAAGsJ,KAAKxJ,iBAA2BE,EAAGwyC,gBAAgB1yC,gBAAkBq2D,EAAiBr2D,cACrS27D,GAAoBD,GAAiBx7D,EAAGsJ,KAAKxJ,gBAAkB9E,EAAKxE,MAAM2L,QAAQrC,eAAiBE,EAAGwyC,gBAAgB1yC,gBAAkBq2D,EAAiBr2D,cACzJ47D,GAAuBF,GAAiBx7D,EAAGy6D,GAAG36D,gBAAkB9E,EAAKxE,MAAM2L,QAAQrC,eAAiBE,EAAGwyC,gBAAgB1yC,gBAAkBq2D,EAAiBr2D,cAC1J67D,GAAeH,IAAkBC,IAAqBC,IAAwB17D,EAAGy6D,GAAG36D,gBAAkBq2D,EAAiBr2D,eAAkBs7D,GAA4Bp7D,EAAGy6D,GAAG36D,gBAAkBs7D,EAAyBpxD,QAAQlK,eAC9N87D,GAAcJ,IAAkBC,IAAqBC,GAAuB17D,EAAGy6D,GAAG36D,gBAAkB9E,EAAKxE,MAAM2L,QAAQrC,cACvH+7D,GAAYL,IAAkBC,IAAqBC,IAAwBC,GAAe37D,EAAGy6D,GAAG36D,gBAAkB9E,EAAKxE,MAAM2L,QAAQrC,eAAiBE,EAAGwyC,gBAAgB1yC,gBAAkBq2D,EAAiBr2D,cAE9MD,EAAS,KAkBb,OAhBI87D,EACF97D,EAAS,UACA+7D,EACT/7D,EAAS,SACA27D,EACT37D,EAAS,UACA47D,EACT57D,EAAS,OACA67D,EACT77D,EAAS,UACAg8D,EACTh8D,EAAS,OACAg8D,IACTh8D,EAAS,WAGJA,GA9IStJ,KAgJlB4C,YAAc,SAAAC,GACZ,IAAI0iE,EAAY1iE,EACV2iE,EAAUD,EAAU1iD,OAAO,EAAG,GAC9B4iD,EAAQF,EAAU1iD,OAAO0iD,EAAUxgE,OAAS,GAElD,OADAwgE,EAAYC,EAAU,MAAQC,GApJdzlE,KAuJlB8C,WAvJkB,eAAA4S,EAAAvU,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAuJL,SAAA0I,EAAO9K,GAAP,IAAAs6C,EAAA2X,EAAAzG,EAAA3zC,EAAA08B,EAAAtnB,EAAAisB,EAAA5pD,EAAA4iE,EAAA,OAAA9zC,EAAAzyB,EAAA6W,KAAA,SAAAwI,GAAA,cAAAA,EAAAtI,KAAAsI,EAAArI,MAAA,UAEL23C,EAAYtpD,EAAKxE,MAAM4rD,QAAQ+Z,QAAQ54D,IAAMvI,EAAKqH,gBAAgB,CAAC,UAAU,qBAC7E45D,EAAYjhE,EAAKqH,gBAAgB,CAAC,UAAU,YAAY,SAE/CqlB,SAAYu0C,EAAU9Y,kBAAkBhjD,SAASmkD,GALrD,CAAAtvC,EAAArI,KAAA,eAAAqI,EAAAgB,OAAA,SAMF,MANE,UASNhb,EAAKohE,aAAapyD,IAAahP,EAAKxE,MAAMmf,KATpC,CAAAX,EAAArI,KAAA,eAAAqI,EAAAgB,OAAA,SAUF,MAVE,UAaLw/C,EAbK,cAAA74D,OAayBqN,KAC9B6X,EAAa7mB,EAAKq7D,8BAA8Bb,IAd3C,CAAAxgD,EAAArI,KAAA,gBAAAqI,EAAAgB,OAAA,SAgBF6L,GAhBE,WAmBL08B,EAAM,KACNtnB,EAAWj8B,EAAKxE,MAAMmf,KAAK0mD,gBACf,IAAd/X,EArBO,CAAAtvC,EAAArI,KAAA,gBAsBHu2C,EAAM,IAAIoZ,IAAI,CAAErlC,WAAUslC,WAAYC,wBAAclY,EAAU9sC,cAtB3DxC,EAAArI,KAAA,GAuBau2C,EAAIuZ,QAAQzyD,GAvBzB,aAuBH1Q,EAvBG0b,EAAAtG,QAwBMpV,EAAQiD,KAxBd,CAAAyY,EAAArI,KAAA,gBAAAqI,EAAArI,KAAA,GAyBoBu2C,EAAI3mD,KAAKjD,EAAQiD,MAAMmgE,aAzB3C,aAyBDR,EAzBClnD,EAAAtG,OA0Ba1E,EAAQlK,gBAAkBo8D,EAAap8D,cA1BpD,CAAAkV,EAAArI,KAAA,gBAAAqI,EAAAgB,OAAA,SA2BEhb,EAAKs7D,8BAA8Bd,EAAcl8D,EAAQiD,KAAKgiD,IA3BhE,eAAAvpC,EAAAgB,OAAA,SAgCJ,MAhCI,yBAAAhB,EAAA7H,SAAA2H,EAAAve,SAvJK,gBAAAuf,GAAA,OAAA7J,EAAAoB,MAAA9W,KAAA8E,YAAA,GAAA9E,KAyLlB+oC,oBAzLkB5nC,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAyLI,SAAAmC,IAAA,IAAA1N,EAAAsB,EAAAk7B,EAAAjvB,EAAAuuD,EAAAl4B,EAAAhF,EAAAF,EAAAC,EAAA+H,EAAAq1B,EAAAvhE,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,UAAO9L,EAAP+7D,EAAAthE,OAAA,QAAAC,IAAAqhE,EAAA,GAAAA,EAAA,GAAuB,KAAKz6D,EAA5By6D,EAAAthE,OAAA,QAAAC,IAAAqhE,EAAA,GAAAA,EAAA,GAAoC,KAClDv/B,EAAY,CAChBvxB,cAAc,GACd2zB,OAAOzkC,EAAK4R,MAAM,GAClB84B,aAAa1qC,EAAK4R,MAAM,GACxB2yB,cAAcvkC,EAAK4R,MAAM,GACzB4yB,gBAAgBxkC,EAAK4R,MAAM,GAC3B26B,kBAAkBvsC,EAAK4R,MAAM,GAC7BiwD,sBAAsB7hE,EAAK4R,MAAM,IAGnC/L,EAAkBA,GAAoC7F,EAAKxE,MAAMqK,iBACjEsB,EAAUA,GAAoBnH,EAAKxE,MAAM2L,UAExBtB,EAdG,CAAA2N,EAAA7B,KAAA,eAAA6B,EAAAwH,OAAA,SAeXqnB,GAfW,cAkBdjvB,EAAyC,SAAhCpT,EAAKxE,MAAM6X,iBAlBNG,EAAA7B,KAAA,GAoBd3R,EAAKgR,aAAatU,OAAOqF,KAAK8D,GAA9B,eAAAuU,EAAA1d,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAA+C,SAAAkJ,EAAOpV,GAAP,IAAAU,EAAAgO,EAAA3B,EAAAoe,EAAAyxC,EAAA,OAAA10C,EAAAzyB,EAAA6W,KAAA,SAAAiJ,GAAA,cAAAA,EAAA/I,KAAA+I,EAAA9I,MAAA,cAC7C/L,EAAcC,EAAgBX,GADeuV,EAAA9I,KAAA,EAEpB3R,EAAKu4B,gBAAgB3yB,EAAY08B,KAAKp9B,MAAMiC,GAFxB,YAE7CyM,EAF6C6G,EAAA/G,MAAA,CAAA+G,EAAA9I,KAAA,gBAAA8I,EAAA9I,KAAA,EAKxB3R,EAAKuiC,kBAAkB38B,GALC,cAK3CqM,EAL2CwI,EAAA/G,KAM3C2c,EAAezc,EAAiB1E,MAAM+C,GANKwI,EAAA9I,KAAA,GAOb3R,EAAKwiC,oBAAoBnS,EAAanrB,EAAMU,EAAYwN,GAP3C,QAO3C0uD,EAP2CrnD,EAAA/G,KAS5CzB,EAAW7H,SAAYimB,EAAajmB,UACvCi4B,EAAUvxB,cAAc5L,GAAS,CAC/B+M,aACAoe,eACAzc,mBACAkuD,yBAIFz/B,EAAUqI,aAAerI,EAAUqI,aAAa74B,KAAKwe,GACrDgS,EAAUw/B,sBAAwBx/B,EAAUw/B,sBAAsBhwD,KAAKiwD,IAnBxB,yBAAArnD,EAAAtI,SAAAmI,EAAA/e,SAA/C,gBAAAwf,GAAA,OAAAX,EAAA/H,MAAA9W,KAAA8E,YAAA,IApBc,eA4CdshE,EAAuB,GAC7BjlE,OAAOqF,KAAK8D,GAAiBJ,QAAS,SAAAP,GAChCm9B,EAAUvxB,cAAc5L,KAC1By8D,EAAqBz8D,GAASm9B,EAAUvxB,cAAc5L,MAI1Dm9B,EAAUvxB,cAAgB6wD,EAEpBl4B,EAAkB/sC,OAAOqF,KAAKsgC,EAAUvxB,eAAe/Q,OAAO,SAAAmF,GAAK,OAAMlF,EAAK4R,MAAMywB,EAAUvxB,cAAc5L,GAAO0O,kBAAkBc,GAAG,KAE1I+vB,EAASzkC,EAAK4R,MAAM,GACpB2yB,EAAgBvkC,EAAK4R,MAAM,GAC3B4yB,EAAkBxkC,EAAK4R,MAAM,GAC7B26B,EAAoBvsC,EAAK4R,MAAM,GA1Df4B,EAAA7B,KAAA,GA6Dd3R,EAAKgR,aAAay4B,EAAlB,eAAA2B,EAAA1uC,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAAkC,SAAAC,EAAOnM,GAAP,IAAAU,EAAAihC,EAAAi7B,EAAAz2B,EAAAqF,EAAAxJ,EAAAD,EAAAuE,EAAAD,EAAArD,EAAA,OAAA9a,EAAAzyB,EAAA6W,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAChC/L,EAAcC,EAAgBX,GADEuM,EAAAE,KAAA,EAER3R,EAAKsnC,mBAAmB1hC,EAAYuB,GAF5B,cAEhC0/B,EAFgCp1B,EAAAiC,KAMhCouD,EAAwBz/B,EAAUvxB,cAAc5L,GAAO48D,sBANvBrwD,EAAAE,KAAA,EAU5BwI,QAAQkD,IAAI,CACpBrd,EAAKynC,aAAa7hC,KAXkB,cAAAylC,EAAA55B,EAAAiC,KAAAg9B,EAAAh0C,OAAA8qC,EAAA,EAAA9qC,CAAA2uC,EAAA,GAQpCnE,EARoCwJ,EAAA,GAehCzJ,EAAWjnC,EAAK4R,MAAMs1B,EAAUS,QAChC6D,EAAcs2B,EAAsBvlD,IAAI8lB,EAAUw/B,uBAhBlBpwD,EAAAE,KAAA,GAiBR3R,EAAKwiC,oBAAoBqE,EAAgB3hC,EAAMU,EAAYwN,GAjBnD,QAiBhCm4B,EAjBgC95B,EAAAiC,MAkBhCw0B,EAAgB45B,EAAsBhwD,MAAMy5B,MAGhDhH,EAAgBA,EAAc1yB,KAAKq2B,IAGjCjB,IACFxC,EAASA,EAAO5yB,KAAKo1B,EAAS/3B,MAAMs8B,KAGlCD,IACF/G,EAAkBA,EAAgB3yB,KAAK05B,IA7BH,yBAAA95B,EAAAU,SAAAd,EAAA9V,SAAlC,gBAAA6W,GAAA,OAAAg5B,EAAA/4B,MAAA9W,KAAA8E,YAAA,IA7Dc,eAgGhBmkC,EAAgB9vB,GAAG,KACrB63B,EAAoBhI,EAAchoB,IAAIioB,GAAiBt1B,MAAM,MAG/DmzB,EAAUoC,OAASA,EACnBpC,EAAUkC,cAAgBA,EAC1BlC,EAAUmC,gBAAkBA,EAC5BnC,EAAUkK,kBAAoBA,EAvGV/4B,EAAAwH,OAAA,SA2GbqnB,GA3Ga,yBAAA7uB,EAAArB,SAAAoB,EAAAhY,SAzLJA,KAsSlBwmE,oBAtSkBrlE,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAsSI,SAAAkK,IAAA,IAAArU,EAAAE,EAAAtB,EAAApB,EAAAu9D,EAAAC,EAAAC,EAAAC,EAAArqB,EAAAsqB,EAAA/hE,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAAgK,GAAA,cAAAA,EAAA9J,KAAA8J,EAAA7J,MAAA,UAAO1K,EAAPm7D,EAAA9hE,OAAA,QAAAC,IAAA6hE,EAAA,GAAAA,EAAA,GAAqB,GAAGj7D,EAAxBi7D,EAAA9hE,OAAA,QAAAC,IAAA6hE,EAAA,GAAAA,EAAA,GAAgC,OAAhCA,EAAA9hE,OAAA,QAAAC,IAAA6hE,EAAA,KAAAA,EAAA,GACpBj7D,EAAUA,GAAoBnH,EAAKxE,MAAM2L,QADrB,CAAAqU,EAAA7J,KAAA,eAAA6J,EAAAR,OAAA,SAIX,IAJW,cAOdnV,EAAkB7F,EAAKqiE,0BAExBp7D,GAAkBA,EAAc3G,SACnC2G,EAAgBvK,OAAOqF,KAAK8D,IAG1BpB,EAAe,GACbu9D,EAAkB,GACpBC,EAAqBjiE,EAAK4R,MAAM,GAfhB4J,EAAA7J,KAAA,GAgBG3R,EAAKsiE,YAAYn7D,EAAQ,EAAE,SAASF,GAhBvC,eAgBdi7D,EAhBc1mD,EAAA9H,OAkBJwuD,EAAS5hE,QAEvB4hE,EAASz8D,QAAQ,SAACT,EAAG6D,GAGnB,IAAK7D,EAAG5G,OAAS4G,EAAGu9D,cAAgBv9D,EAAGw9D,gBACrC,OAAO,EAGT,IAAMp8D,EAAcpG,EAAK4R,MAAM5M,EAAGoB,aAC9Bm8D,EAAcviE,EAAK4R,MAAM5M,EAAGu9D,aAC1BC,EAAkBxiE,EAAK4R,MAAM5M,EAAGw9D,iBAEtC,OAAQx9D,EAAGH,QACT,IAAK,UACL,IAAK,aACL,IAAK,iBACL,IAAK,kBACH,GAAkB,oBAAdG,EAAGH,QACDgE,EAAM,GAAKo5D,EAAmBvtD,GAAG,GACnC,OAICjQ,EAAaO,EAAG5G,QACnBqG,EAAaO,EAAG5G,MAAQ,CACtBqkE,MAAM,KACNC,SAAS,KACTC,SAAS,KACT73B,UAAU9qC,EAAK4R,MAAM,KAIzBnN,EAAaO,EAAG5G,MAAM0sC,UAAYrmC,EAAaO,EAAG5G,MAAM0sC,UAAUj5B,KAAKzL,GAChC,OAAnC3B,EAAaO,EAAG5G,MAAMskE,WACxBj+D,EAAaO,EAAG5G,MAAMqkE,MAAQD,EAC9B/9D,EAAaO,EAAG5G,MAAMskE,SAAWH,EAAYrzD,MAAMszD,IAIvD,MACA,IAAK,WACL,IAAK,cACL,IAAK,kBACHD,EAAcA,EAAYrzD,MAAMlP,EAAK4R,OAAO,IAO3CowD,EAAgBh9D,EAAG5G,SACtB6jE,EAAqBA,EAAmBpwD,KAAK0wD,IACtB9xC,IAAI,KACzBwxC,EAAqBjiE,EAAK4R,MAAM,IAKlCowD,EAAgBh9D,EAAG5G,OAAQ,KAO7B+jE,EAAcniE,EAAK4R,MAAM,GACzBkmC,EAAiB93C,EAAK4R,MAAM,GAChClV,OAAOwG,OAAOuB,GAAcgB,QAAS,SAAAT,GACnC,IAAM29D,EAAW39D,EAAG09D,SAASnmD,IAAIvX,EAAG8lC,WAAWh5B,MAAM,GACrDqwD,EAAcA,EAAYtwD,KAAK8wD,EAASzzD,MAAMlK,EAAG8lC,YACjDgN,EAAiBA,EAAejmC,KAAK7M,EAAG8lC,aAG1Cq3B,EAAcA,EAAY5lD,IAAIu7B,GAAgB5oC,OAAO,GA5FjCsM,EAAAR,OAAA,SAiGbmnD,GAjGa,yBAAA3mD,EAAArJ,SAAAmJ,EAAA/f,SAtSJA,KAyYlBqnE,oBAzYkBlmE,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAyYI,SAAA+K,IAAA,IAAAlV,EAAAE,EAAAtB,EAAApB,EAAAqiC,EAAAm7B,EAAAC,EAAApH,EAAAz6D,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAA8K,GAAA,cAAAA,EAAA5K,KAAA4K,EAAA3K,MAAA,UAAO1K,EAAP6zD,EAAAx6D,OAAA,QAAAC,IAAAu6D,EAAA,GAAAA,EAAA,GAAqB,GACzC3zD,GAD4CA,EAAxB2zD,EAAAx6D,OAAA,QAAAC,IAAAu6D,EAAA,GAAAA,EAAA,GAAgC,OACtB96D,EAAKxE,MAAM2L,QADrB,CAAAmV,EAAA3K,KAAA,eAAA2K,EAAAtB,OAAA,SAIX,IAJW,cAOdnV,EAAkB7F,EAAKqiE,0BAExBp7D,GAAkBA,EAAc3G,SACnC2G,EAAgBvK,OAAOqF,KAAK8D,IAGxBpB,EAAe,GACjBqiC,EAAc9mC,EAAK4R,MAAM,GACzBqwD,EAAqBjiE,EAAK4R,MAAM,GAfhB0K,EAAA3K,KAAA,GAgBG3R,EAAKsiE,YAAYn7D,EAAQ,EAAE,SAASF,GAhBvC,eAgBdi7D,EAhBc5lD,EAAA5I,OAoBJwuD,EAAS5hE,QAEvB4hE,EAASz8D,QAAQ,SAACT,EAAG6D,GAMnB,GAJKpE,EAAaO,EAAG5G,QACnBqG,EAAaO,EAAG5G,MAAQ,KAGtBqG,EAAaO,EAAG5G,MAAM+G,SAASH,EAAGH,QAAtC,CAKA,IAAKG,EAAG5G,OAAS4G,EAAGu9D,cAAgBv9D,EAAGw9D,gBACrC,OAAO,EAGT,IAAMK,EAAkB/7B,EACpBy7B,EAAcviE,EAAK4R,MAAM5M,EAAGu9D,aAC1BC,EAAkBxiE,EAAK4R,MAAM5M,EAAGw9D,iBAGtC,OAAQx9D,EAAGH,QACT,IAAK,UACL,IAAK,aACL,IAAK,iBACL,IAAK,kBACH,GAAkB,oBAAdG,EAAGH,QACDgE,EAAM,GAAKo5D,EAAmBvtD,GAAG,GACnC,OAGJoyB,EAAcy7B,EAAYrzD,MAAMszD,GAAiB3wD,KAAKgxD,EAAgB3zD,MAAM+yD,IAAqB1lD,IAAI0lD,EAAmBpwD,KAAK0wD,IAC/H,MACA,IAAK,WACL,IAAK,cACL,IAAK,kBAEHA,EAAcA,EAAYrzD,MAAMlP,EAAK4R,OAAO,KAOhDqwD,EAAqBA,EAAmBpwD,KAAK0wD,IACtB9xC,IAAI,KACzBqW,EAAc9mC,EAAK4R,MAAM,GACzBqwD,EAAqBjiE,EAAK4R,MAAM,IAGlCnN,EAAaO,EAAG5G,MAAMqI,KAAKzB,EAAGH,WAvEdyX,EAAAtB,OAAA,SA+Eb8rB,GA/Ea,yBAAAxqB,EAAAnK,SAAAgK,EAAA5gB,SAzYJA,KA0dlBgsC,eA1dkB7qC,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KA0dD,SAAAwL,IAAA,IAAA3V,EAAAE,EAAAiiB,EAAA5hB,EAAAs7D,EAAAziE,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAAyL,GAAA,cAAAA,EAAAvL,KAAAuL,EAAAtL,MAAA,UAAO1K,EAAP67D,EAAAxiE,OAAA,QAAAC,IAAAuiE,EAAA,GAAAA,EAAA,GAAqB,IACpC37D,GADuCA,EAAxB27D,EAAAxiE,OAAA,EAAAwiE,EAAA,QAAAviE,IACeP,EAAKxE,MAAM2L,UAExBF,GAAkBA,EAAc3G,QAAWN,EAAKxE,MAAMqK,gBAHxD,CAAAoX,EAAAtL,KAAA,eAAAsL,EAAAjC,OAAA,SAIN,IAJM,cAOToO,EAAS,GAPAnM,EAAAtL,KAAA,EAQY3R,EAAKuH,gBAAgBJ,EAAQ,EAAE,SAASF,GARpD,cAQTO,EARSyV,EAAAvJ,KAUfzM,EAAcxB,QAAS,SAAAE,GAErByjB,EAAOzjB,GAAiB,GACxB,IAAImhC,EAAc9mC,EAAK4R,MAAM,GAEzBmxD,EAAmB/iE,EAAK4R,MAAM,GAC5BN,EAAc5U,OAAOwG,OAAOsE,GAAczH,OAAO,SAAAiF,GAAE,OAAKA,EAAGE,QAAUS,IAEvE2L,GAAeA,EAAYhR,QAE7BgR,EAAY7L,QAAQ,SAACT,EAAG6D,GAGtB,IAAK7D,EAAG5G,MAAS4G,EAAGrF,QAAwB,YAAdqF,EAAGrF,SAA0BqF,EAAGkN,aAAelN,EAAGiN,WAC9E,OAAO,EAGT,IAAM4wD,EAAkB/7B,EACpB50B,EAAalS,EAAK4R,MAAM5M,EAAGkN,YACzBD,EAAajS,EAAK4R,MAAM5M,EAAGiN,YAGjC,OAAQjN,EAAGH,QACT,IAAK,UACL,IAAK,UACL,IAAK,OACL,IAAK,UACL,IAAK,WACHiiC,EAAc50B,EAAWhD,MAAM+C,GAAYJ,KAAKgxD,EAAgB3zD,MAAM6zD,IAAoBxmD,IAAIwmD,EAAkBlxD,KAAKK,IACvH,MACA,IAAK,OACL,IAAK,SACL,IAAK,UACL,IAAK,UACL,IAAK,WACHA,EAAaA,EAAWhD,MAAMlP,EAAK4R,OAAO,KAO9CmxD,EAAoBA,EAAkBlxD,KAAKK,IACrBue,IAAI,KACxBqW,EAAc9mC,EAAK4R,MAAM,GACzBmxD,EAAoB/iE,EAAK4R,MAAM,MAOrCwX,EAAOzjB,GAAiBmhC,IA9DX7pB,EAAAjC,OAAA,SAiERoO,GAjEQ,yBAAAnM,EAAA9K,SAAAyK,EAAArhB,SA1dCA,KA6hBlBynE,kBA7hBkBtmE,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KA6hBE,SAAAoM,IAAA,IAAAvW,EAAAE,EAAAK,EAAAy7D,EAAAC,EAAA7iE,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAAiM,GAAA,cAAAA,EAAA/L,KAAA+L,EAAA9L,MAAA,UAAO1K,EAAPi8D,EAAA5iE,OAAA,QAAAC,IAAA2iE,EAAA,GAAAA,EAAA,GAAqB,IACvC/7D,GAD0CA,EAAxB+7D,EAAA5iE,OAAA,EAAA4iE,EAAA,QAAA3iE,IACYP,EAAKxE,MAAM2L,UAExBF,GAAkBA,EAAc3G,QAAWN,EAAKxE,MAAMqK,gBAHrD,CAAA4X,EAAA9L,KAAA,eAAA8L,EAAAzC,OAAA,SAIT,IAJS,cAAAyC,EAAA9L,KAAA,EAOS3R,EAAKuH,gBAAgBJ,EAAQ,EAAE,SAASF,GAPjD,cAOZO,EAPYiW,EAAA/J,KASZuvD,EAAW,GAEjBh8D,EAAcxB,QAAQ,SAACE,GACrB,IAAI4L,EAAavR,EAAK4R,MAAM,GACxBuxD,EAAiB,KACrBF,EAASt9D,GAAiBw9D,EAE1B,IAAM7xD,EAAc5U,OAAOwG,OAAOsE,GAAczH,OAAO,SAAAiF,GAAE,OAAKA,EAAGE,QAAUS,IACvE2L,GAAeA,EAAYhR,QAE7BgR,EAAY7L,QAAQ,SAACT,EAAG6D,GAEtB,IAAK7D,EAAG5G,MAAS4G,EAAGrF,QAAwB,YAAdqF,EAAGrF,SAA0BqF,EAAGoB,YAC5D,OAAO,EAGT,OAAQpB,EAAGH,QACT,IAAK,OACL,IAAK,UACL,IAAK,UACL,IAAK,UACH0M,EAAaA,EAAWM,KAAK7M,EAAGoB,aAC3B+8D,IACHA,EAAiBn+D,GAErB,MACA,IAAK,OACL,IAAK,SACL,IAAK,UACL,IAAK,WACHuM,EAAaA,EAAWO,MAAM9M,EAAGoB,aAOjCmL,EAAWQ,GAAG,KAChBR,EAAavR,EAAK4R,MAAM,GACxBuxD,EAAiB,QAMvBF,EAASt9D,GAAiBw9D,IAtDV1lD,EAAAzC,OAAA,SAyDXioD,GAzDW,yBAAAxlD,EAAAtL,SAAAqL,EAAAjiB,SA7hBFA,KAwlBlB6nE,aAAe,SAACC,GACd,OAAO,IAAIlpD,QAAQ,SAAAI,GAAO,OAAIkC,WAAWlC,EAAS8oD,MAzlBlC9nE,KA2lBlB+nE,oBA3lBkB5mE,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KA2lBI,SAAA8qD,IAAA,IAAAj1D,EAAAE,EAAAo8D,EAAAC,EAAAnjE,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAAgrD,GAAA,cAAAA,EAAA9qD,KAAA8qD,EAAA7qD,MAAA,cAAO1K,EAAPu8D,EAAAljE,OAAA,QAAAC,IAAAijE,EAAA,GAAAA,EAAA,GAAqB,GAAGr8D,EAAxBq8D,EAAAljE,OAAA,EAAAkjE,EAAA,QAAAjjE,EAAAi8D,EAAA7qD,KAAA,EACU3R,EAAKgjE,kBAAkB/7D,EAAcE,GAD/C,YACdo8D,EADc/G,EAAA9oD,MAAA,CAAA8oD,EAAA7qD,KAAA,eAAA6qD,EAAAxhD,OAAA,SAGXte,OAAOqF,KAAKwhE,GAAiB92C,OAAQ,SAACg3C,EAAIv+D,GAI/C,OAHIq+D,EAAgBr+D,KAClBu+D,EAAIv+D,GAASq+D,EAAgBr+D,GAAOI,WAE/Bm+D,GACP,KARgB,cAAAjH,EAAAxhD,OAAA,SAWb,MAXa,wBAAAwhD,EAAArqD,SAAA+pD,EAAA3gE,SA3lBJA,KAwmBlB+rC,mBAxmBkB,eAAA20B,EAAAv/D,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAwmBG,SAAAwqD,EAAOh2D,EAAYuB,GAAnB,IAAAg1D,EAAAC,EAAA/rC,EAAAqzC,EAAA78B,EAAA,OAAAzZ,EAAAzyB,EAAA6W,KAAA,SAAAwqD,GAAA,cAAAA,EAAAtqD,KAAAsqD,EAAArqD,MAAA,cAAAqqD,EAAArqD,KAAA,EACqBwI,QAAQkD,IAAI,CAClDrd,EAAKu4B,gBAAgB3yB,EAAY08B,KAAKp9B,MAAMiC,GAC5CnH,EAAKq1B,oBAAoBzvB,EAAY08B,KAAKp9B,MAAO,gBAAiB,CAACiC,MAHlD,UAAAg1D,EAAAH,EAAAtoD,KAAA0oD,EAAA1/D,OAAA8qC,EAAA,EAAA9qC,CAAAy/D,EAAA,GACd9rC,EADc+rC,EAAA,GACDsH,EADCtH,EAAA,IAMf/rC,IAAgBqzC,EAND,CAAA1H,EAAArqD,KAAA,gBAOjB+xD,EAAe1jE,EAAKuU,iBAAiBmvD,EAAa99D,EAAYE,UACxD+gC,EAAkBxW,EAAanhB,MAAMw0D,GAR1B1H,EAAAhhD,OAAA,SASV6rB,GATU,eAAAm1B,EAAAhhD,OAAA,SAYZ,MAZY,yBAAAghD,EAAA7pD,SAAAypD,EAAArgE,SAxmBH,gBAAAoY,EAAA4nD,GAAA,OAAAU,EAAA5pD,MAAA9W,KAAA8E,YAAA,GAAA9E,KAsnBlBooE,cAtnBkBjnE,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAsnBF,SAAA6rD,IAAA,IAAAh2D,EAAAE,EAAAK,EAAAo8D,EAAAC,EAAAxjE,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAA6rD,GAAA,cAAAA,EAAA3rD,KAAA2rD,EAAA1rD,MAAA,UAAO1K,EAAP48D,EAAAvjE,OAAA,QAAAC,IAAAsjE,EAAA,GAAAA,EAAA,GAAqB,IAEnC18D,GAFsCA,EAAxB08D,EAAAvjE,OAAA,EAAAujE,EAAA,QAAAtjE,IAEOP,EAAKxE,MAAM2L,UAEfF,GAAkBA,EAAc3G,QAAWN,EAAKxE,MAAMqK,gBAJzD,CAAAw3D,EAAA1rD,KAAA,eAAA0rD,EAAAriD,OAAA,SAKL,IALK,cAAAqiD,EAAA1rD,KAAA,EAQa3R,EAAKuH,gBAAgBJ,EAAQ,EAAE,SAASF,GAAc,GARnE,cAQRO,EARQ61D,EAAA3pD,KAURkwD,EAAc,GAEpB38D,EAAcxB,QAAQ,SAACE,GACrB,IAAI4L,EAAavR,EAAK4R,MAAM,GAC5BgyD,EAAYj+D,GAAiB4L,EAE7B,IAAMD,EAAc5U,OAAOwG,OAAOsE,GAAczH,OAAO,SAAAiF,GAAE,OAAKA,EAAGE,QAAUS,IACvE2L,GAAeA,EAAYhR,QAE7BgR,EAAY7L,QAAQ,SAACT,EAAG6D,GAEtB,IAAK7D,EAAG5G,MAAS4G,EAAGrF,QAAwB,YAAdqF,EAAGrF,SAA0BqF,EAAGoB,YAC5D,OAAO,EAGT,OAAQpB,EAAGH,QACT,IAAK,OACL,IAAK,UACL,IAAK,UACL,IAAK,UACL,IAAK,WACH0M,EAAaA,EAAWM,KAAK7M,EAAGoB,aAClC,MACA,IAAK,OACL,IAAK,SACL,IAAK,UACL,IAAK,UACL,IAAK,WACHmL,EAAaA,EAAWO,MAAM9M,EAAGoB,aAOjCmL,EAAWQ,GAAG,KAChBR,EAAavR,EAAK4R,MAAM,MAM9BgyD,EAAYj+D,GAAiB4L,IApDjB8rD,EAAAriD,OAAA,SAyDP4oD,GAzDO,yBAAAvG,EAAAlrD,SAAA8qD,EAAA1hE,SAtnBEA,KAirBlBuoE,oBAjrBkBpnE,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAirBI,SAAAyrD,IAAA,IAAA11D,EAAAC,EAAA28D,EAAA98D,EAAA6hD,EAAAz1C,EAAA2wD,EAAAtc,EAAAuc,EAAAhE,EAAAiE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA1wD,EAAA2wD,EAAA/H,EAAAz8D,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAAurD,GAAA,cAAAA,EAAArrD,KAAAqrD,EAAAprD,MAAA,UAAOxK,EAAP21D,EAAAx8D,OAAA,QAAAC,IAAAu8D,EAAA,IAAAA,EAAA,GAAqB11D,EAArB01D,EAAAx8D,OAAA,QAAAC,IAAAu8D,EAAA,GAAAA,EAAA,GAAsC,EAAEiH,EAAxCjH,EAAAx8D,OAAA,QAAAC,IAAAu8D,EAAA,GAAAA,EAAA,GAAuD,SAAS71D,EAAhE61D,EAAAx8D,OAAA,QAAAC,IAAAu8D,EAAA,GAAAA,EAAA,GAA8E,GAAGhU,EAAjFgU,EAAAx8D,OAAA,QAAAC,IAAAu8D,EAAA,IAAAA,EAAA,IACpB31D,EAAUA,GAAoBnH,EAAKxE,MAAM2L,UAExBF,GAAkBA,EAAc3G,OAH7B,CAAAy8D,EAAAprD,KAAA,eAAAorD,EAAA/hD,OAAA,SAIX,IAJW,UAOpB7T,EAAUA,EAAQrC,cAEZuO,EAAmBrT,EAAKxE,MAAM6X,iBAG9B2wD,EAAuBhkE,EAAKqH,gBAAgB,CAAC,UAAU,qBAC7DD,EAAmB7B,KAAKoB,IAAIq9D,EAAqB58D,GAE3CsgD,EAAkB1nD,EAAKxE,MAAM4rD,QAAQ+Z,QAAQ54D,IAAMvI,EAAKqH,gBAAgB,CAAC,UAAU,oBACnF48D,EAAgBjkE,EAAKqH,gBAAgB,CAAC,UAAU,YAAY,cAE9D44D,EAAU,GACViE,EAAmB,KACnBC,EAAwB,MAGxBF,EAAcv3C,UAAWu3C,EAAc5b,UAAUX,GAvBjC,CAAAqV,EAAAprD,KAAA,YAwBZyyD,EAAkBH,EAAc5b,UAAUX,GAGhDyc,EAAqB,GAAAxiE,OAAMyiE,EAAN,cAAAziE,OAAkC0R,EAAlC,YAAA1R,OAA6Dy4C,EAAI0qB,wBAAjE,2CAAAnjE,OAAkIwF,EAAlI,gBAAAxF,OAAwJqiE,EAAxJ,cAAAriE,OAAyLoiE,EAAzL,aACrBG,EAAmBlkE,EAAK+kE,iBAAiBZ,GAErCrb,GACFzxB,QAAQC,IAAI,oCAAoC4sC,KAI9CA,GAAoBA,EAAiB54D,KAAK05D,QAAUtoE,OAAOwG,OAAOghE,EAAiB54D,KAAK05D,QAAQ1kE,QAnClF,CAAAy8D,EAAAprD,KAAA,gBAqCV0yD,EAAe3nE,OAAOwG,OAAOghE,EAAiB54D,KAAK05D,QAAQr9D,MAC3D28D,EAAwBD,GAAgBA,EAAaz8D,YAAcC,SAASw8D,EAAaz8D,aAAa,EAAIR,EAE1Gm9D,EAxCU,GAAA5iE,OAwCsByiE,EAxCtB,cAAAziE,OAwCkD0R,EAxClD,YAAA1R,OAwC6Ey4C,EAAI0qB,wBAxCjF,2CAAAnjE,OAwCkJwF,EAxClJ,gBAAAxF,OAwCwK2iE,EAxCxK,cAAA3iE,OAwC0MoiE,EAxC1M,aAAAhH,EAAAprD,KAAA,GAyCM3R,EAAKilE,kBAAkBV,EAA2B,IAzCxD,cAyCZC,EAzCYzH,EAAArpD,OA2CC8wD,EAAUl5D,KAAK05D,QAAUR,EAAUl5D,KAAK05D,OAAO1kE,QA3ChD,CAAAy8D,EAAAprD,KAAA,gBAAAorD,EAAAprD,KAAA,GA6CI3R,EAAKklE,mBAAmBV,EAAUl5D,KAAK05D,OAAO/9D,GAAc,GAAK,GA7CrE,SA6Cdu9D,EA7CczH,EAAArpD,OA+CGhX,OAAOwG,OAAOshE,GAAWlkE,SAElCmkE,EAAqB/nE,OAAOwG,OAAOshE,GAAWviE,IAAK,SAAAyF,GAAM,OAAKG,SAASH,EAAOE,eACxDrC,KAAKoB,IAAL0L,MAAA9M,KAAI7I,OAAAyoE,EAAA,EAAAzoE,CAAQ+nE,KAGfH,IAEvB5nE,OAAOwG,OAAOshE,GAAW/+D,QAAQ,SAACT,GAChBtI,OAAOqF,KAAKmiE,EAAiB54D,KAAK05D,QAAQ7/D,SAASH,EAAGyC,WAEpEy8D,EAAiB54D,KAAK05D,OAAOhgE,EAAGyC,SAAWzC,KAK/ChF,EAAKolE,iBAAiBjB,EAAsBD,EAAiB54D,KAAK05D,UA/DxD,QAAAjI,EAAAprD,KAAA,iBAoEhBuyD,EAAmB,KApEH,WAuEdQ,EAAMR,EAENpb,GACFzxB,QAAQC,IAAI,cAAcotC,GAGvBA,EA7Ea,CAAA3H,EAAAprD,KAAA,gBAAAorD,EAAAprD,KAAA,GA+EJ3R,EAAK4/B,YAAYukC,GA/Eb,YA+EhBO,EA/EgB3H,EAAArpD,OAmFHgxD,EAAIp5D,MAAoC,IAA5BzD,SAAS68D,EAAIp5D,KAAK3L,QAnF3B,CAAAo9D,EAAAprD,KAAA,SAoFVgzD,EAAe,EACfC,GAAgB,EArFN,eAAA7H,EAAAprD,KAAA,GAuFN3R,EAAKojE,aAAa,KAvFZ,eAAArG,EAAAprD,KAAA,GAwFA3R,EAAK4/B,YAAYukC,GAxFjB,QAwFZO,EAxFY3H,EAAArpD,KAyFZixD,IACAC,KAAgBF,IAAOA,EAAIp5D,OAAOzD,SAAS68D,EAAIp5D,KAAK3L,QA1FxC,WA4FLglE,EAAa,IAAMC,EA5Fd,CAAA7H,EAAAprD,KAAA,iBAgGZ+yD,GAAOA,EAAIp5D,MAAQzD,SAAS68D,EAAIp5D,KAAK3L,QAAQ,IACzCuU,EAAYrM,SAAS5B,KAAKwwB,MAAM,MAChCouC,EAAiB7kE,EAAKq7D,8BAA8B,iBAAiB,KAC5D8I,GAAyB,CACtC74D,KAAKo5D,EACLxwD,aAEFlU,EAAKs7D,8BAA8B,iBAAiBuJ,IAvGtC,aA2GdH,GAAOA,EAAIp5D,MAAQo5D,EAAIp5D,KAAK05D,QA3Gd,CAAAjI,EAAAprD,KAAA,SA4GhBsuD,EAAUyE,EAAIp5D,KAAK05D,OA5GHjI,EAAAprD,KAAA,wBAAAorD,EAAA/hD,OAAA,SA8GT,IA9GS,eAAA+hD,EAAA/hD,OAAA,SAkHb,CACLilD,UACAiE,mBACAC,0BArHkB,yBAAApH,EAAA5qD,SAAA0qD,EAAAthE,SAjrBJA,KAyyBlB+mE,YAzyBkB5lE,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAyyBJ,SAAAi0D,IAAA,IAAAl+D,EAAAC,EAAA28D,EAAA98D,EAAAg5D,EAAAqF,EAAAjlE,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAA+zD,GAAA,cAAAA,EAAA7zD,KAAA6zD,EAAA5zD,MAAA,cAAOxK,EAAPm+D,EAAAhlE,OAAA,QAAAC,IAAA+kE,EAAA,IAAAA,EAAA,GAAqBl+D,EAArBk+D,EAAAhlE,OAAA,QAAAC,IAAA+kE,EAAA,GAAAA,EAAA,GAAsC,EAAEvB,EAAxCuB,EAAAhlE,OAAA,QAAAC,IAAA+kE,EAAA,GAAAA,EAAA,GAAuD,SAASr+D,EAAhEq+D,EAAAhlE,OAAA,QAAAC,IAAA+kE,EAAA,GAAAA,EAAA,GAA8E,GAA9EC,EAAA5zD,KAAA,EACU3R,EAAKuH,gBAAgBJ,EAAQC,EAAiB28D,EAAe98D,GADvE,cACNg5D,EADMsF,EAAA7xD,KAAA6xD,EAAAvqD,OAAA,SAGLhb,EAAKwlE,eAAevF,EAAQh5D,IAHvB,wBAAAs+D,EAAApzD,SAAAkzD,EAAA9pE,SAzyBIA,KA8yBlB6pE,iBAAmB,SAACtoB,EAAS4nB,GAC3B,IAAMe,EAAa,GACnB/oE,OAAOqF,KAAK2iE,GAAKj/D,QAAQ,SAAAqD,GACvB,IAAM9D,EAAK0/D,EAAI57D,IACX9D,EAAG4C,aAAiB5C,EAAGrF,QAAsC,YAA5BqF,EAAGrF,OAAOmF,gBAC7C2gE,EAAW38D,GAAU9D,KAKzB,IAAM0gE,EAAgB,CACpBp6D,KAAK,CACH05D,OAAOS,IAGXzlE,EAAK2lE,kBAAkB7oB,GAAS,EAAM4oB,IA7zBtBnqE,KA+zBlBgM,gBA/zBkB7K,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KA+zBA,SAAAw0D,IAAA,IAAAz+D,EAAAC,EAAA28D,EAAA98D,EAAA6hD,EAAA+c,EAAA5F,EAAAiE,EAAAC,EAAA38D,EAAAs+D,EAAAC,EAAA1lE,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAAw0D,GAAA,cAAAA,EAAAt0D,KAAAs0D,EAAAr0D,MAAA,cAAOxK,EAAP4+D,EAAAzlE,OAAA,QAAAC,IAAAwlE,EAAA,IAAAA,EAAA,GAAqB3+D,EAArB2+D,EAAAzlE,OAAA,QAAAC,IAAAwlE,EAAA,GAAAA,EAAA,GAAsC,EAAEhC,EAAxCgC,EAAAzlE,OAAA,QAAAC,IAAAwlE,EAAA,GAAAA,EAAA,GAAuD,SAAS9+D,EAAhE8+D,EAAAzlE,OAAA,QAAAC,IAAAwlE,EAAA,GAAAA,EAAA,GAA8E,GAAGjd,EAAjFid,EAAAzlE,OAAA,QAAAC,IAAAwlE,EAAA,IAAAA,EAAA,GAAAC,EAAAr0D,KAAA,EAKN3R,EAAK8jE,oBAAoB38D,EAAQC,EAAiB28D,EAAe98D,EAAc6hD,GALzE,UAAA+c,EAAAG,EAAAtyD,KAEdusD,EAFc4F,EAEd5F,QACAiE,EAHc2B,EAGd3B,iBACAC,EAJc0B,EAId1B,sBAIE38D,EAAe,IACf08D,EATY,CAAA8B,EAAAr0D,KAAA,gBAAAq0D,EAAAr0D,KAAA,GAWO3R,EAAKimE,iBAAiBhG,EAAQh5D,GAXrC,QAWdO,EAXcw+D,EAAAtyD,KAAAsyD,EAAAr0D,KAAA,wBAaRm0D,EAAqBppE,OAAOqF,KAAK/B,EAAKxE,MAAMqK,iBAbpCmgE,EAAAr0D,KAAA,GAeO3R,EAAKklE,mBAAmBjF,EAAQ6F,GAfvC,SAedt+D,EAfcw+D,EAAAtyD,OAkBMhX,OAAOqF,KAAKyF,GAAclH,QAC5CN,EAAKolE,iBAAiBjB,EAAsB38D,GAnBhC,eAuBZshD,GACFzxB,QAAQC,IAAI,4BAA4B9vB,GAxB1Bw+D,EAAAhrD,OAAA,SA2BTte,OACEwG,OAAOsE,GACPzH,OAAO,SAAAiF,GAAE,OAAKA,EAAGE,OAAS+B,EAAc9B,SAASH,EAAGE,MAAM3C,iBAC1D6C,KAAK,SAACzK,EAAE0K,GAAH,OAAU1K,EAAE2K,UAAYD,EAAEC,WAAa,EAAI,KA9BzC,yBAAA0gE,EAAA7zD,SAAAyzD,EAAArqE,SA/zBAA,KA+1BlBiqE,eA/1BkB,eAAAU,EAAAxpE,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KA+1BD,SAAA+0D,EAAOlG,GAAP,IAAAh5D,EAAApB,EAAAq8D,EAAAkE,EAAA/lE,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAA60D,GAAA,cAAAA,EAAA30D,KAAA20D,EAAA10D,MAAA,UAAe1K,EAAfm/D,EAAA9lE,OAAA,QAAAC,IAAA6lE,EAAA,GAAAA,EAAA,GAA6B,GAEvCnG,GAAYA,EAAQ3/D,QAAqC,oBAApB2/D,EAAQx6D,QAFnC,CAAA4gE,EAAA10D,KAAA,eAAA00D,EAAArrD,OAAA,SAGN,IAHM,cAMTnV,EAAkB7F,EAAKxE,MAAMqK,gBAAkB7F,EAAKxE,MAAMqK,gBAAkB7F,EAAKqiE,0BAElFp7D,GAAkBA,EAAc3G,SACnC2G,EAAgBvK,OAAOqF,KAAK8D,KAGxBq8D,EAAWjC,EAAQlgE,OAAQ,SAAAiF,GAAE,OAAKiC,EAAc9B,SAASH,EAAGE,QAAU,CAAC,UAAU,WAAW,aAAa,cAAc,kBAAkB,mBAAmB,iBAAiB,mBAAmBC,SAASH,EAAGH,WAErMvE,QACX4hE,EAAS98D,KAAK,SAACzK,EAAE0K,GAAH,OAAU1K,EAAE2K,UAAYD,EAAEC,WAAa,EAAI,IAf5C+gE,EAAArrD,OAAA,SAkBRknD,GAlBQ,wBAAAmE,EAAAl0D,SAAAg0D,EAAA5qE,SA/1BC,gBAAAmgE,GAAA,OAAAwK,EAAA7zD,MAAA9W,KAAA8E,YAAA,GAAA9E,KAm3BlB2pE,mBAn3BkB,eAAAoB,EAAA5pE,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAm3BG,SAAAm1D,EAAOtG,GAAP,IAAAh5D,EAAAtC,EAAAshE,EAAAz+D,EAAAg/D,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAzmE,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAAu1D,GAAA,cAAAA,EAAAr1D,KAAAq1D,EAAAp1D,MAAA,UAAe1K,EAAf6/D,EAAAxmE,OAAA,QAAAC,IAAAumE,EAAA,GAAAA,EAAA,GAA6B,GAAGniE,IAAhCmiE,EAAAxmE,OAAA,QAAAC,IAAAumE,EAAA,KAAAA,EAAA,GAAgDb,IAAhDa,EAAAxmE,OAAA,QAAAC,IAAAumE,EAAA,KAAAA,EAAA,GACd9mE,EAAKxE,MAAM2L,SAAY84D,GAAYA,EAAQ3/D,QAAqC,oBAApB2/D,EAAQx6D,QADtD,CAAAshE,EAAAp1D,KAAA,eAAAo1D,EAAA/rD,OAAA,SAEV,IAFU,UAKd/T,GAAkBA,EAAc3G,SACnC2G,EAAgBvK,OAAOqF,KAAK/B,EAAKxE,MAAMqK,kBAGrC2B,EAAe,GACfg/D,EAAoB,GACpBC,EAA4B,GAG1BC,EAAmB1mE,EAAKqH,gBAAgB,CAAC,QAAQ,gBACjDs/D,EAAoB3mE,EAAKqH,gBAAgB,CAAC,QAAQ,iBAClDu/D,EAAoB5mE,EAAKqH,gBAAgB,CAAC,QAAQ,sBAClDw/D,EAAuB7mE,EAAKqH,gBAAgB,CAAC,QAAQ,oBAI3DJ,EAAcxB,QAAQ,SAAAP,GACpB,IAAMU,EAAc5F,EAAKxE,MAAMqK,gBAAgBX,GACzCk7D,EAA2BpgE,EAAKqH,gBAAgB,CAAC,WAAW,UAAU,UAAU,kBAChFg5D,EAAwBz6D,EAAYsrC,WAAatrC,EAAYsrC,UAAUxB,kBAAoB9pC,EAAYsrC,UAAUxB,kBAAkB1gC,QAAU,KAC7IsxD,EAA4B16D,EAAYsrC,WAAatrC,EAAYsrC,UAAUxB,mBAAqB9pC,EAAYsrC,UAAUxB,kBAAkBmc,aAAejmD,EAAYsrC,UAAUxB,kBAAkBmc,aAAe,GAC9Mmb,EAA2BhnE,EAAKqH,gBAAgB,CAAC,QAAQ,iBAAiB,QAAQ,sBAElF6jD,EAAiBlrD,EAAKqH,gBAAgB,CAAC,QAAQ,iBAAiB,QAAQ,kBAAkBzB,EAAY08B,KAAKp9B,QAC3Gq7D,EAA6BrV,GAAkBA,EAAexb,kBAAoBwb,EAAexb,kBAAkB1gC,QAAU,KAG7Hi4D,EAAmBjnE,EAAKqH,gBAAgB,CAAC,QAAQ,kBAAkBzB,EAAY08B,KAAKp9B,QAE1F+6D,EAAQx6D,QAAS,SAAAT,GACf,IAAImP,EAAgBvO,EAAYE,SAC1BohE,EAAYthE,EAAY08B,KAAKp9B,MAC7BiiE,EAAclH,EAAQlgE,OAAO,SAAA01B,GAAC,OAAIA,EAAEr3B,OAAS4G,EAAG5G,OAChDgpE,EAAeD,EAAY7mE,OAAO,GAAK6mE,EAAYpnE,OAAO,SAAAsnE,GAAG,OAAIA,EAAI7vB,gBAAgB1yC,gBAAkBc,EAAYoJ,QAAQlK,gBAAexE,OAAO,EACjJmgE,EAA0C,IAAvB0G,EAAY7mE,QAAgB0E,EAAGsJ,KAAKxJ,gBAAkB9E,EAAKxE,MAAM2L,QAAQrC,eAAiBE,EAAGwyC,gBAAgB1yC,gBAAkBc,EAAY08B,KAAKtzB,QAAQlK,cAC3K47D,EAA6C,IAAvByG,EAAY7mE,QAAgB0E,EAAGy6D,GAAG36D,gBAAkB9E,EAAKxE,MAAM2L,QAAQrC,eAAiBE,EAAGwyC,gBAAgB1yC,gBAAkBc,EAAY08B,KAAKtzB,QAAQlK,cAC5KwiE,EAAqB/G,GAA8Bv7D,EAAGsJ,KAAKxJ,gBAAkBy7D,EAA2Bz7D,eAAiBE,EAAGwyC,gBAAgB1yC,gBAAkBc,EAAY08B,KAAKtzB,QAAQlK,eAAiBE,EAAGy6D,GAAG36D,gBAAkB9E,EAAKxE,MAAM2L,QAAQrC,cAEnPyiE,EAAsBH,GAAgBD,EAAY1gD,KAAM,SAAA4gD,GAAG,OAAIA,EAAI/4D,KAAKxJ,gBAAkB9E,EAAKxE,MAAM2L,QAAQrC,gBAAkBuiE,EAAI5H,GAAG36D,gBAAkBc,EAAY08B,KAAKtzB,QAAQlK,eAAkBs7D,GAA4BiH,EAAI5H,GAAG36D,gBAAkBs7D,EAAyBpxD,QAAQlK,eAAiBqiE,EAAYpnE,OAAO,SAAAynE,GAAI,OAAIA,EAAKhwB,gBAAgB1yC,gBAAkBc,EAAY08B,KAAKtzB,QAAQlK,gBAAexE,OAAO,KAC3ZmnE,EAAqBL,GAAgBD,EAAY1gD,KAAM,SAAA4gD,GAAG,OAAIA,EAAI7vB,gBAAgB1yC,gBAAkBc,EAAYoJ,QAAQlK,eAAiBqiE,EAAYpnE,OAAO,SAAAynE,GAAI,OAAIA,EAAKhwB,gBAAgB1yC,gBAAkBc,EAAY08B,KAAKtzB,QAAQlK,gBAAexE,QAAU+mE,EAAI5H,GAAG36D,gBAAkB9E,EAAKxE,MAAM2L,QAAQrC,gBAEzS07D,EAAgB8G,GAAuBjH,IAA0Br7D,EAAGsJ,KAAKxJ,gBAAkBu7D,EAAsBv7D,eAAiBw7D,EAA0Br+D,IAAI,SAACkB,GAAQ,OAAOA,EAAE2B,gBAAkBK,SAASH,EAAGsJ,KAAKxJ,iBAAoBE,EAAGwyC,gBAAgB1yC,gBAAkBc,EAAY08B,KAAKtzB,QAAQlK,cACvS4iE,EAAiBV,IAA6BhiE,EAAGsJ,KAAKxJ,gBAAkBkiE,EAAyBh4D,QAAQlK,eAAiBkiE,EAAyBnb,aAAa5pD,IAAI,SAACkB,GAAQ,OAAOA,EAAE2B,gBAAkBK,SAASH,EAAGsJ,KAAKxJ,iBAAmBE,EAAGy6D,GAAG36D,gBAAkB9E,EAAKxE,MAAM2L,QAAQrC,eAAiBE,EAAGwyC,gBAAgB1yC,gBAAkBc,EAAY08B,KAAKtzB,QAAQlK,cACtW67D,EAAcyG,IAAiB5G,GAAiBx7D,EAAGsJ,KAAKxJ,gBAAkB9E,EAAKxE,MAAM2L,QAAQrC,gBAAkBE,EAAGy6D,GAAG36D,gBAAkBc,EAAY08B,KAAKtzB,QAAQlK,eAAkBs7D,GAA4Bp7D,EAAGy6D,GAAG36D,gBAAkBs7D,EAAyBpxD,QAAQlK,eAAiBqiE,EAAYpnE,OAAO,SAAAsnE,GAAG,OAAIA,EAAI7vB,gBAAgB1yC,gBAAkBc,EAAY08B,KAAKtzB,QAAQlK,gBAAexE,OAAO,GACvYsgE,EAAawG,IAAiB5G,IAAkB+G,GAAuBviE,EAAGwyC,gBAAgB1yC,gBAAkBc,EAAYoJ,QAAQlK,eAAiBqiE,EAAYpnE,OAAO,SAAAsnE,GAAG,OAAIA,EAAI7vB,gBAAgB1yC,gBAAkBc,EAAY08B,KAAKtzB,QAAQlK,gBAAexE,QAAU0E,EAAGy6D,GAAG36D,gBAAkB9E,EAAKxE,MAAM2L,QAAQrC,cAC9S6iE,EAAeR,EAAY7mE,OAAO,GAAK6mE,EAAYpnE,OAAO,SAAAsnE,GAAG,OAAIzhE,EAAYgJ,UAAU3M,IAAI,SAAA0I,GAAC,OAAIA,EAAEqE,QAAQlK,gBAAeK,SAASkiE,EAAI7vB,gBAAgB1yC,iBAAiBxE,OAAO,GAAK0E,EAAGwyC,gBAAgB1yC,gBAAkBc,EAAY08B,KAAKtzB,QAAQlK,cAGjPq2D,EAAmB8L,GAAoBA,EAAiBj4D,QAAUi4D,EAAiBj4D,QAAUpJ,EAAY08B,KAAKtzB,QAG9G44D,EAAUT,EAAY1gD,KAAM,SAAAzhB,GAAE,OAAKA,EAAGwyC,gBAAgB1yC,gBAAkB6hE,EAAkB33D,QAAQlK,gBAAkBE,EAAGy6D,GAAG36D,gBAAkB9E,EAAKxE,MAAM2L,QAAQrC,eAAiBE,EAAGsJ,KAAKxJ,gBAAkB9E,EAAKxE,MAAM2L,QAAQrC,iBAC7N+iE,OAAwBtnE,IAAZqnE,EAEZE,EAAmBD,GAAa7iE,EAAGwyC,gBAAgB1yC,gBAAkBq2D,EAAiBr2D,eAAiBE,EAAGy6D,GAAG36D,gBAAkB8hE,EAAkB53D,QAAQlK,eAAiBE,EAAGsJ,KAAKxJ,gBAAkB9E,EAAKxE,MAAM2L,QAAQrC,eAAiB9E,EAAK4R,MAAM5M,EAAG1I,OAAOoY,GAAG,GAChQqzD,EAAkBF,GAAa7iE,EAAGwyC,gBAAgB1yC,gBAAkBq2D,EAAiBr2D,eAAiBE,EAAGy6D,GAAG36D,gBAAkB9E,EAAKxE,MAAM2L,QAAQrC,eAAiBE,EAAGsJ,KAAKxJ,gBAAkB8hE,EAAkB53D,QAAQlK,eAAiB9E,EAAK4R,MAAM5M,EAAG1I,OAAOoY,GAAG,GAE/PszD,EAAmBH,GAAa7iE,EAAGwyC,gBAAgB1yC,gBAAkBc,EAAYoJ,QAAQlK,eAAiBE,EAAGsJ,KAAKxJ,gBAAkB9E,EAAKxE,MAAM2L,QAAQrC,eAAiBE,EAAGy6D,GAAG36D,gBAAkB+hE,EAAqB73D,QAAQlK,eAAiB9E,EAAK4R,MAAM5M,EAAG1I,OAAOoY,GAAG,GACtQuzD,EAAoBJ,GAAa7iE,EAAGwyC,gBAAgB1yC,gBAAkBc,EAAYoJ,QAAQlK,eAAiBE,EAAGy6D,GAAG36D,gBAAkB9E,EAAKxE,MAAM2L,QAAQrC,eAAiBE,EAAGsJ,KAAKxJ,gBAAkB+hE,EAAqB73D,QAAQlK,eAAiB9E,EAAK4R,MAAM5M,EAAG1I,OAAOoY,GAAG,GAEvQwzD,EAAeL,GAAa7iE,EAAGwyC,gBAAgB1yC,gBAAkB6hE,EAAkB33D,QAAQlK,eAAiBE,EAAGy6D,GAAG36D,gBAAkB9E,EAAKxE,MAAM2L,QAAQrC,eAAiBE,EAAGsJ,KAAKxJ,gBAAkB4hE,EAAiB13D,QAAQlK,eAAiB9E,EAAK4R,MAAM5M,EAAG1I,OAAOoY,GAAG,GACpQyzD,EAAgBN,GAAa7iE,EAAGwyC,gBAAgB1yC,gBAAkB6hE,EAAkB33D,QAAQlK,eAAiBE,EAAGsJ,KAAKxJ,gBAAkB9E,EAAKxE,MAAM2L,QAAQrC,eAAiBE,EAAGy6D,GAAG36D,gBAAkB4hE,EAAiB13D,QAAQlK,eAAiB9E,EAAK4R,MAAM5M,EAAG1I,OAAOoY,GAAG,GAErQ0zD,EAAqBpjE,EAAGwyC,gBAAgB1yC,gBAAkB6hE,EAAkB33D,QAAQlK,gBAAkBqjE,IAAkBJ,GAAmE/iE,EAAGsJ,KAAKxJ,gBAAkB9E,EAAKxE,MAAM2L,QAAQrC,cACxOujE,EAAoBrjE,EAAGwyC,gBAAgB1yC,gBAAkB6hE,EAAkB33D,QAAQlK,gBAAkBojE,IAAiBJ,GAAoE9iE,EAAGy6D,GAAG36D,gBAAkB9E,EAAKxE,MAAM2L,QAAQrC,cAErOwjE,GAAeT,IAAcpH,IAAqBkH,IAAiBF,IAAuBjgE,EAAaxC,EAAG5G,OAAS4G,EAAGsJ,KAAKxJ,gBAAkB9E,EAAKxE,MAAM2L,QAAQrC,eAAiBE,EAAGwyC,gBAAgB1yC,gBAAkBc,EAAY08B,KAAKtzB,QAAQlK,cAC/O+7D,GAAYgH,IAAcnH,IAAwBgH,IAAmBH,IAAwB//D,EAAaxC,EAAG5G,OAAS4G,EAAGy6D,GAAG36D,gBAAkB9E,EAAKxE,MAAM2L,QAAQrC,eAAiBE,EAAGwyC,gBAAgB1yC,gBAAkBc,EAAY08B,KAAKtzB,QAAQlK,cAMtP,GAAI27D,GAAoBC,GAAuBF,GAAiBG,GAAeC,GAAcC,GAAYyH,GAAeX,GAAgBD,GAAkBI,GAAoBC,GAAmBG,GAAgBC,GAAiBC,GAAsBC,GAAqBL,GAAoBC,EAAkB,CAEjT,IAAIpjE,EAAS,KACT4C,EAAUzC,EAAG5G,KAEbuiE,EACF97D,EAAS,UACA+7D,EACT/7D,EAAS,SACA27D,GAAiBkH,EAC1B7iE,EAAS,UACA47D,EACT57D,EAAS,OACA67D,EACT77D,EAAS,UACAg8D,EACTh8D,EAAS,OACAyjE,EACTzjE,EAAS,UACA8iE,EACT9iE,EAAS,WACAijE,EACTjjE,EAAS,UACAkjE,EACTljE,EAAS,WACAqjE,EACTrjE,EAAS,aACAsjE,EACTtjE,EAAS,cACAmjE,EACTnjE,EAAS,iBACAojE,EACTpjE,EAAS,kBACAwjE,EACTxjE,EAAS,kBACAujE,IACTvjE,EAAS,oBAGX,IAAI09D,EAAc,KAoBlB,GAnBIsF,IACFpgE,GAAW,IAAIzC,EAAG6kB,YAClB04C,EAAcviE,EAAKuU,iBAAiBqzD,EAAQtrE,MAAMqqE,EAAkB7gE,WAG/DuiE,GAAqBD,KACxB3gE,GAAS,IAAI5C,IAMbG,EAAGwyC,gBAAgB1yC,gBAAkBc,EAAY08B,KAAKtzB,QAAQlK,cAChEqP,EAAgB,GACP0zD,IACT1zD,EAAgBtM,SAAS7C,EAAGujE,eAI1B/gE,EAAaC,GAEf,OAAQD,EAAaC,GAAS5C,QAC5B,IAAK,UACC2C,EAAaC,GAAS5C,SAAWA,GAAU+7D,IAC7Cp5D,EAAaC,GAAS+gE,WAAaxoE,EAAKuU,iBAAiBvP,EAAG1I,MAAM6X,IAEtE,MACA,QACE,IAAKyzD,EAAQ,CACX,IAAMa,EAAWjhE,EAAaC,GAASnL,MAAMuV,KAAK7R,EAAKuU,iBAAiBvP,EAAG1I,MAAM6X,IACjF3M,EAAaC,GAASnL,MAAQmsE,QAMpC,GAAIJ,GAAqBD,EAClB3B,EAA0BthE,SAASH,EAAG5G,KAAK0G,iBAC9Cy9D,EAAcviE,EAAKuU,iBAAiBvP,EAAG1I,MAAMqqE,EAAkB7gE,UAC/D0gE,EAAkB//D,KAAlB/J,OAAAuD,EAAA,EAAAvD,CAAA,GAA2BsI,EAA3B,CAA+ByC,UAASvC,QAAOgiE,YAAW3E,cAAa19D,SAAQvI,MAAO0D,EAAKuU,iBAAiBvP,EAAG1I,MAAM6X,YAWvH,OARA3M,EAAaC,GAAb/K,OAAAuD,EAAA,EAAAvD,CAAA,GAA6BsI,EAA7B,CAAiCyC,UAASvC,QAAOgiE,YAAW3E,cAAa19D,SAAQvI,MAAO0D,EAAKuU,iBAAiBvP,EAAG1I,MAAM6X,KAGlHsyD,EAA0BthE,SAASH,EAAG5G,KAAK0G,gBAC9C2hE,EAA0BhgE,KAAKzB,EAAG5G,KAAK0G,eAIjCD,GACN,IAAK,WACH,IAAM6jE,EAAOvB,EAAYpnE,OAAO,SAAAsnE,GAAG,OAAKA,IAAQriE,IAChD,GAAI0jE,EAAKpoE,OAAO,EAAE,CAChB,IAAM+mE,EAAMqB,EAAK,GACjBlhE,EAAaC,GAASkhE,eAAiB3oE,EAAKuU,iBAAiB8yD,EAAI/qE,MAAM+qE,EAAIkB,cAC3E/gE,EAAaC,GAASoiB,YAAcw9C,EAAIx9C,YAE5C,MACA,IAAK,UACL,IAAK,WACL,IAAK,aACL,IAAK,cACL,IAAK,iBACL,IAAK,kBACHriB,EAAaC,GAASoiB,YAAc3kB,QAWlDshE,EAAkB/gE,QAAS,SAAAT,GACpByhE,EAA0BthE,SAASH,EAAG5G,KAAK0G,iBAC9C0C,EAAaxC,EAAGyC,SAAWzC,MAI3BL,EAxMe,CAAAoiE,EAAAp1D,KAAA,gBAAAo1D,EAAAp1D,KAAA,GAyMI3R,EAAK4oE,6BAA6BphE,EAAaP,EAAcg/D,GAzMjE,QAyMjBz+D,EAzMiBu/D,EAAArzD,KAAA,eAAAqzD,EAAA/rD,OAAA,SA8MZxT,GA9MY,yBAAAu/D,EAAA50D,SAAAo0D,EAAAhrE,SAn3BH,gBAAAmhE,GAAA,OAAA4J,EAAAj0D,MAAA9W,KAAA8E,YAAA,GAAA9E,KAmkClBstE,qBAAuB,SAACC,EAAM5/D,GAE5B,IAAM/B,EAAUnH,EAAKxE,OAASwE,EAAKxE,MAAM2L,QAAUnH,EAAKxE,MAAM2L,QAAU,KAClExB,EAAgB3F,EAAKxE,OAASwE,EAAKxE,MAAMmK,cAAgB3F,EAAKxE,MAAMmK,cAAgB,KAE1F,IAAKwB,IAAYxB,IAAkB3F,EAAKxE,MAAMqK,kBAAoB7F,EAAKxE,MAAMqK,gBAAgBF,GAC3F,OAAO,EAGT,IACMojE,EADc/oE,EAAKxE,MAAMqK,gBAAgBF,GAClB28B,KAAKp9B,MAE9B8jE,EAAYhpE,EAAKipE,wBAChBD,EAAU7hE,KACb6hE,EAAU7hE,GAAW,IAGlB6hE,EAAU7hE,GAAS4hE,KACtBC,EAAU7hE,GAAS4hE,GAAY,IAGjCC,EAAU7hE,GAAS4hE,GAAUD,GAAS5/D,EACtClJ,EAAKkpE,yBAAyBF,IAzlCdztE,KA2lClB2tE,yBAA2B,SAAAliE,GACzBhH,EAAKud,gBAAgB,eAAezW,KAAKC,UAAUC,KA5lCnCzL,KAimClB0tE,sBAAwB,WAAmD,IAAlD9hE,EAAkD9G,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA1C,KAAK0oE,EAAqC1oE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA5B,KAAKsF,EAAuBtF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAT,KAC1D2oE,EAAYhpE,EAAKmpE,cAAc,gBAAe,EAAK,IACnDniE,EAAehH,EAAKxE,MAAMwL,aAAXtK,OAAAuD,EAAA,EAAAvD,CAAA,GAA+BsD,EAAKxE,MAAMwL,cAAiB,GAC5EoiB,EAAS4/C,EAsBb,OApBI7hE,IACE6hE,EAAU7hE,IACZiiB,EAAS4/C,EAAU7hE,GACf4hE,IACF3/C,EAASA,EAAO2/C,GAAY3/C,EAAO2/C,GAAY,GAE3CpjE,GACFjJ,OAAOqF,KAAKiF,GAAcvB,QAAQ,SAAAqjE,GAChC,IAAM9jE,EAAKgC,EAAa8hE,IACnB1/C,EAAO0/C,IAAU9jE,EAAGE,OAASF,EAAGE,MAAM3C,gBAAkBoD,EAAcpD,gBACzE6mB,EAAO0/C,GAAS9hE,EAAa8hE,QAMrC1/C,EAAS,IAINA,GA1nCS7tB,KA4nClBqtE,6BA5nCkB,eAAAQ,EAAA1sE,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KA4nCa,SAAAi4D,EAAO7hE,GAAP,IAAAP,EAAAg/D,EAAAqD,EAAAN,EAAAO,EAAAC,EAAAC,EAAA/C,EAAAgD,EAAArpE,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAAm4D,GAAA,cAAAA,EAAAj4D,KAAAi4D,EAAAh4D,MAAA,cAAoB1K,EAApByiE,EAAAppE,OAAA,QAAAC,IAAAmpE,EAAA,GAAAA,EAAA,GAAkC,GAAGzD,IAArCyD,EAAAppE,OAAA,QAAAC,IAAAmpE,EAAA,KAAAA,EAAA,GAExBziE,GAAkBA,EAAc3G,SACnC2G,EAAgBvK,OAAOqF,KAAK/B,EAAKxE,MAAMqK,kBAGrCyjE,EAAa,GAI4B,kBAHzCN,EAAYhpE,EAAKipE,yBAGAjpE,EAAKxE,MAAM2L,WAC9B6hE,EAAUhpE,EAAKxE,MAAM2L,SAAW,IAI5BoiE,EAAoB,GACpBC,EAAsB,GACtBC,EAAuBzpE,EAAKqH,gBAAgB,CAAC,QAAQ,oBAC3D3K,OAAOqF,KAAK0nE,GAAsBhkE,QAAS,SAAAP,GACzC,IAAM+hE,EAAmBwC,EAAqBvkE,GACxC4rC,EAAkB9wC,EAAKqH,gBAAgB,CAAC,QAAQ,SAAS4/D,EAAiB95C,YAC1Ey8C,EAAmB94B,EAAgB9hC,QAAQlK,cACjDykE,EAAkBK,GAAoB94B,EACtCy4B,EAAkBK,GAAkB1kE,MAAQ+hE,EAAiB95C,UAC7Dq8C,EAAoB/iE,KAAKmjE,KAGrBlD,EAAmB1mE,EAAKqH,gBAAgB,CAAC,QAAQ,gBA3B1BsiE,EAAAh4D,KAAA,GAgCvB3R,EAAKgR,aAAa/J,EAAlB,eAAA4iE,EAAAntE,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAAgC,SAAA04D,EAAOnkE,GAAP,IAAAC,EAAAmjE,EAAA7B,EAAA6C,EAAAz4D,EAAA,OAAA8b,EAAAzyB,EAAA6W,KAAA,SAAAw4D,GAAA,cAAAA,EAAAt4D,KAAAs4D,EAAAr4D,MAAA,UAE9B/L,EAAc5F,EAAKxE,MAAMqK,gBAAgBF,GACzCojE,EAAWnjE,EAAY08B,KAAKp9B,MAC5BgiE,EAAYthE,EAAY08B,KAAKp9B,MAGoB,kBAA5C8jE,EAAUhpE,EAAKxE,MAAM2L,SAAS4hE,KACvCC,EAAUhpE,EAAKxE,MAAM2L,SAAS4hE,GAAY,IAGtCgB,EAX8BrtE,OAAAuD,EAAA,EAAAvD,CAAA,GAWfssE,EAAUhpE,EAAKxE,MAAM2L,SAAS4hE,MAE7Cz3D,EAAc5U,OAAOwG,OAAOsE,GAAczH,OAAO,SAAAiF,GAAE,OAAKA,EAAGE,QAAUS,OACxD2L,EAAYhR,OAdK,CAAA0pE,EAAAr4D,KAAA,eAAAq4D,EAAAr4D,KAAA,EAgB5B3R,EAAKgR,aAAaM,EAAlB,eAAA24D,EAAAvtE,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAA8B,SAAA84D,EAAOllE,EAAG6D,GAAV,IAAAigE,EAAAqB,EAAAl4D,EAAAC,EAAAk4D,EAAA5H,EAAA6H,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAzD,EAAA0D,EAAAxP,EAAAyP,EAAA,OAAAx9C,EAAAzyB,EAAA6W,KAAA,SAAAq5D,GAAA,cAAAA,EAAAn5D,KAAAm5D,EAAAl5D,MAAA,UAC5Bm3D,EAD4B,KAAAnnE,OACfqD,EAAGM,UADY,OAE5B6kE,EAAWnB,EAAUhpE,EAAKxE,MAAM2L,SAAS4hE,GAAUD,GAASE,EAAUhpE,EAAKxE,MAAM2L,SAAS4hE,GAAUD,GAAS9jE,EAE/GiN,EAAa,MAEbk4D,EAASl4D,YAAejS,EAAK4R,MAAMu4D,EAASl4D,YAAY7H,QAN1B,CAAAygE,EAAAl5D,KAAA,QAOhCM,EAAajS,EAAK4R,MAAMu4D,EAASl4D,YAPD44D,EAAAl5D,KAAA,uBAAAk5D,EAAAl5D,KAAA,EASb3R,EAAKuiC,kBAAkB38B,EAAYZ,EAAG4C,YAAY5C,EAAGM,WATxC,OAShC2M,EATgC44D,EAAAn3D,KAUhCy2D,EAASl4D,WAAaA,EAVU,QAa9BC,EAAalS,EAAK4R,MAAM5M,EAAG1I,OAC3B8tE,EAAmBn4D,EAAW/C,MAAMgD,GAGnCi4D,EAASn5C,kBACZm5C,EAASn5C,gBAAkBhsB,EAAG5G,MAlBEysE,EAAA9V,GAsB1B/vD,EAAGH,OAtBuBgmE,EAAAl5D,KAuB3B,SAvB2Bk5D,EAAA9V,GAAA,GAwB3B,YAxB2B8V,EAAA9V,GAAA,GAyB3B,SAzB2B8V,EAAA9V,GAAA,GA0B3B,YA1B2B8V,EAAA9V,GAAA,GA2B3B,YA3B2B8V,EAAA9V,GAAA,GAmC3B,YAnC2B8V,EAAA9V,GAAA,GAoC3B,WApC2B8V,EAAA9V,GAAA,GA2C3B,aA3C2B8V,EAAA9V,GAAA,GAkD3B,YAlD2B8V,EAAA9V,GAAA,GAmD3B,aAnD2B8V,EAAA9V,GAAA,GA2D3B,oBA3D2B8V,EAAA9V,GAAA,GA4D3B,qBA5D2B8V,EAAA9V,GAAA,GAqE3B,eArE2B8V,EAAA9V,GAAA,GAsE3B,gBAtE2B8V,EAAA9V,GAAA,GAkH3B,mBAlH2B8V,EAAA9V,GAAA,GAmH3B,oBAnH2B8V,EAAA9V,GAAA,2BA4BzBoV,EAAS/jE,cACZ+jE,EAASj4D,WAAaA,EACtBi4D,EAAS7tE,MAAQ8tE,EACjBD,EAAS/jE,YAAcgkE,EACvBD,EAAStgD,YAAclkB,GAhCKklE,EAAA7vD,OAAA,2BAqCzBmvD,EAAS/jE,cACZ+jE,EAAS7tE,MAAQ4V,EACjBi4D,EAAS/jE,YAAc8L,EACvBi4D,EAASj4D,WAAaA,EAAWqK,IAAItK,IAxCT44D,EAAA7vD,OAAA,2BA4CzBmvD,EAAS/jE,cACZ+jE,EAASj4D,WAAaA,EACtBi4D,EAAS/jE,YAAcgkE,EACvBD,EAAS7tE,MAAQ6tE,EAASxB,gBA/CEkC,EAAA7vD,OAAA,uBAoDzBmvD,EAAS/jE,YApDgB,CAAAykE,EAAAl5D,KAAA,gBAAAk5D,EAAAl5D,KAAA,GAqDE3R,EAAK8qE,mBAAmB9lE,EAAG4C,aArD7B,QAqDtB46D,EArDsBqI,EAAAn3D,KAsD5By2D,EAASj4D,WAAaA,EACtBi4D,EAAS/jE,YAAcgkE,EACvBD,EAAS3H,gBAAkBA,EAxDC,eAAAqI,EAAA7vD,OAAA,uBA6DzBmvD,EAAS3H,gBA7DgB,CAAAqI,EAAAl5D,KAAA,gBAAAk5D,EAAAl5D,KAAA,GA8DE3R,EAAK8qE,mBAAmB9lE,EAAG4C,aA9D7B,QA8DtB46D,EA9DsBqI,EAAAn3D,KA+D5By2D,EAAS3H,gBAAkBA,EAC3B2H,EAAS/jE,YAAcpG,EAAK4R,MAAMu4D,EAAS5H,aAAarzD,MAAMi7D,EAAS3H,iBAhE3C,eAmE9B2H,EAASj4D,WAAalS,EAAK4R,MAAM,GAnEHi5D,EAAA7vD,OAAA,uBAuEzBmvD,EAAS3H,gBAvEgB,CAAAqI,EAAAl5D,KAAA,gBAAAk5D,EAAAl5D,KAAA,GAwEE3R,EAAK8qE,mBAAmB9lE,EAAG4C,aAxE7B,QAwEtB46D,EAxEsBqI,EAAAn3D,KAyE5By2D,EAAS3H,gBAAkBA,EAzEC,WA4EzB2H,EAAS/jE,YA5EgB,CAAAykE,EAAAl5D,KAAA,YA8E5Bw4D,EAAS/jE,YAAcpG,EAAK4R,MAAM,GAClCu4D,EAASj4D,WAAalS,EAAK4R,MAAM,IAEV03D,EAAWtkE,EAAGyC,SAjFT,CAAAojE,EAAAl5D,KAAA,SAAAk5D,EAAAE,GAiFoBzB,EAAWtkE,EAAGyC,SAjFlCojE,EAAAl5D,KAAA,wBAAAk5D,EAAAl5D,KAAA,GAiFoD,IAAIwI,QAAJ,eAAA6wD,EAAAtuE,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAAa,SAAA65D,EAAO1wD,EAASC,GAAhB,OAAA4S,EAAAzyB,EAAA6W,KAAA,SAAA05D,GAAA,cAAAA,EAAAx5D,KAAAw5D,EAAAv5D,MAAA,OAC3F3R,EAAKxE,MAAMmf,KAAKC,IAAIuwD,sBAAsBnmE,EAAG5G,KAAK,SAACyc,EAAI7V,GACjD6V,GACFL,EAAOK,GAETN,EAAQvV,KALiF,wBAAAkmE,EAAA/4D,SAAA84D,EAAA1vE,SAAb,gBAAA6vE,EAAAC,GAAA,OAAAL,EAAA34D,MAAA9W,KAAA8E,YAAA,IAjFpD,QAAAwqE,EAAAE,GAAAF,EAAAn3D,KAAA,SAiFtB62D,EAjFsBM,EAAAE,MA6FrBzB,EAAWtkE,EAAGyC,WACjB6hE,EAAWtkE,EAAGyC,SAAW8iE,GAGrBC,EAAeD,EAAe9yC,KAAK13B,OAAQ,SAAAu3B,GAAG,OAAKkyC,EAAoBrkE,SAASmyB,EAAItoB,QAAQlK,gBAAkBwyB,EAAIK,OAAOL,EAAIK,OAAOr3B,OAAO,GAAGwE,gBAAhC,4BAAAnD,OAA8E+kE,EAAiB13D,QAAQ6oB,QAAQ,IAAI,IAAI/yB,iBAE3O9E,EAAK0a,UAAU,eAAe8vD,GAE1BA,GAAgBA,EAAalqE,QAC/BkqE,EAAa/kE,QAAS,SAAA6xB,GACpB,IAAIlxB,EAAcyB,SAASyvB,EAAIhsB,KAAK,IAC9BggE,EAAmB/B,EAAkBjyC,EAAItoB,QAAQlK,eACjDqP,EAAgBm3D,EAAiBxlE,SACvCM,EAAcpG,EAAKuU,iBAAiBnO,EAAY+N,GAChDg2D,EAAS/jE,YAAc+jE,EAAS/jE,YAAYyL,KAAKzL,GACjDpG,EAAK0a,UAAU,oBAAoB1V,EAAG5G,KAAK,IAAIktE,EAAiBpmE,MAAMkB,EAAYE,QAAQ,GAAG6jE,EAAS/jE,YAAYE,QAAQ,OA5GpG,eAAAukE,EAAA7vD,OAAA,uBAoHzBmvD,EAAS3H,gBApHgB,CAAAqI,EAAAl5D,KAAA,gBAAAk5D,EAAAl5D,KAAA,GAqHE3R,EAAK8qE,mBAAmB9lE,EAAG4C,aArH7B,QAqHtB46D,EArHsBqI,EAAAn3D,KAsH5By2D,EAAS3H,gBAAkBA,EAtHC,WAyH9B2H,EAAS/jE,YAAcpG,EAAK4R,MAAMu4D,EAAS7tE,OAEtC6tE,EAASj4D,WA3HgB,CAAA24D,EAAAl5D,KAAA,aA6HL23D,EAAWtkE,EAAGyC,SA7HT,CAAAojE,EAAAl5D,KAAA,SAAAk5D,EAAAU,GA6HoBjC,EAAWtkE,EAAGyC,SA7HlCojE,EAAAl5D,KAAA,wBAAAk5D,EAAAl5D,KAAA,GA6HoD,IAAIwI,QAAJ,eAAAqxD,EAAA9uE,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAAa,SAAAq6D,EAAOlxD,EAASC,GAAhB,OAAA4S,EAAAzyB,EAAA6W,KAAA,SAAAk6D,GAAA,cAAAA,EAAAh6D,KAAAg6D,EAAA/5D,MAAA,OAC3F3R,EAAKxE,MAAMmf,KAAKC,IAAIuwD,sBAAsBnmE,EAAG5G,KAAK,SAACyc,EAAI7V,GACjD6V,GACFL,EAAOK,GAETN,EAAQvV,KALiF,wBAAA0mE,EAAAv5D,SAAAs5D,EAAAlwE,SAAb,gBAAAowE,EAAAC,GAAA,OAAAJ,EAAAn5D,MAAA9W,KAAA8E,YAAA,IA7HpD,QAAAwqE,EAAAU,GAAAV,EAAAn3D,KAAA,SA6HtB62D,EA7HsBM,EAAAU,MAuIpBtE,EAAmBjnE,EAAKqH,gBAAgB,CAAC,QAAQ,kBAAkB6/D,IACnEyD,EAAoB1D,GAAoBA,EAAiBnhE,SAAWmhE,EAAiBnhE,SAAW,GAChGq1D,EAAmB8L,GAAoBA,EAAiBj4D,QAAUi4D,EAAiBj4D,QAAUpJ,EAAY08B,KAAKtzB,QAG/Gs6D,EAAWtkE,EAAGyC,WACjB6hE,EAAWtkE,EAAGyC,SAAW8iE,IAGrBC,EAAeD,EAAe9yC,KAAK13B,OAAQ,SAAAu3B,GAAG,OAAKA,EAAItoB,QAAQlK,gBAAgBq2D,MACjEqP,EAAalqE,SAC/B4R,EAAarK,SAAS2iE,EAAa,GAAGl/D,KAAK,IAC3C4G,EAAalS,EAAKuU,iBAAiBrC,EAAWy4D,GAC9CR,EAASj4D,WAAaA,IApJE,uBAAA24D,EAAA7vD,OAAA,oBA8JlCmvD,EAASjlE,MAAQS,EAGjB6B,EAAaxC,EAAGyC,SAAW0iE,EAG3BnB,EAAUhpE,EAAKxE,MAAM2L,SAAS4hE,GAAUD,GAASqB,SAG1CJ,EAASjB,GAvKkB,yBAAA+B,EAAA14D,SAAA+3D,EAAA3uE,SAA9B,gBAAAswE,EAAAC,GAAA,OAAA7B,EAAA53D,MAAA9W,KAAA8E,YAAA,IAhB4B,WA4LhC4lE,EA5LgC,CAAA+D,EAAAr4D,KAAA,gBAAAq4D,EAAAr4D,KAAA,GA6Lb3R,EAAKimE,iBAAiBz+D,EAAa,CAAC7B,GAAe3F,EAAKxE,MAAMwL,cA7LjD,QA6LlCQ,EA7LkCwiE,EAAAt2D,KAAA,yBAAAs2D,EAAA73D,SAAA23D,EAAAvuE,SAAhC,gBAAAwwE,GAAA,OAAAlC,EAAAx3D,MAAA9W,KAAA8E,YAAA,IAhCuB,eAkOzB2oE,GACFhpE,EAAKkpE,yBAAyBF,GAnOHW,EAAA3uD,OAAA,SAsOtBxT,GAtOsB,yBAAAmiE,EAAAx3D,SAAAk3D,EAAA9tE,SA5nCb,gBAAA+hE,GAAA,OAAA8L,EAAA/2D,MAAA9W,KAAA8E,YAAA,GAAA9E,KAo2ClB0qE,iBAp2CkB,eAAA+F,EAAAtvE,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAo2CC,SAAA66D,EAAOzkE,GAAP,IAAAP,EAAAilE,EAAAlD,EAAA1f,EAAA6iB,EAAA9rE,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAA46D,GAAA,cAAAA,EAAA16D,KAAA06D,EAAAz6D,MAAA,cAAoB1K,EAApBklE,EAAA7rE,OAAA,QAAAC,IAAA4rE,EAAA,GAAAA,EAAA,GAAkC,GAAGD,EAArCC,EAAA7rE,OAAA,QAAAC,IAAA4rE,EAAA,GAAAA,EAAA,GAAkD,KAE9DllE,GAAkBA,EAAc3G,SACnC2G,EAAgBvK,OAAOqF,KAAK/B,EAAKxE,MAAMqK,mBAGrCmjE,EAAYhpE,EAAKmpE,cAAc,gBAAe,EAAK,KAGxCnpE,EAAKxE,MAAM2L,WACxB6hE,EAAUhpE,EAAKxE,MAAM2L,SAAW,IAGlCK,EAAe9K,OAAOC,OAAO,GAAG6K,GAE1B8hD,EAAYtpD,EAAKxE,MAAM4rD,QAAQ+Z,QAAQ54D,IAAMvI,EAAKqH,gBAAgB,CAAC,UAAU,oBAflE+kE,EAAAz6D,KAAA,EAmBX3R,EAAKgR,aAAa/J,EAAlB,eAAAolE,EAAA3vE,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAAgC,SAAAk7D,EAAO3mE,GAAP,IAAAC,EAAAmjE,EAAA,OAAA37C,EAAAzyB,EAAA6W,KAAA,SAAA+6D,GAAA,cAAAA,EAAA76D,KAAA66D,EAAA56D,MAAA,cAE9B/L,EAAc5F,EAAKxE,MAAMqK,gBAAgBF,GACzCojE,EAAWnjE,EAAY08B,KAAKp9B,MAG7B8jE,EAAUhpE,EAAKxE,MAAM2L,SAAS4hE,KACjCC,EAAUhpE,EAAKxE,MAAM2L,SAAS4hE,GAAY,IAG5CmD,EAAeA,GAAgBxvE,OAAOwG,OAAOgpE,GAAc5rE,OAAS4rE,EAAelsE,EAAKipE,sBAAsBjpE,EAAKxE,MAAM2L,QAAQ4hE,EAASpjE,GAVtG4mE,EAAA56D,KAAA,EA6B9B3R,EAAKgR,aAAatU,OAAOqF,KAAKmqE,GAA9B,eAAAM,EAAA9vE,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAA4C,SAAAq7D,EAAO3D,EAAMpjE,GAAb,IAAAV,EAAA0nE,EAAAC,EAAAC,EAAAl9C,EAAAm9C,EAAAC,EAAAhkE,EAAAikE,EAAAvM,EAAA16D,EAAAknE,EAAA/6D,EAAAg7D,EAAAC,EAAAC,EAAAtoE,EAAAuoE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAArN,EAAA7oB,EAAAm2B,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA3gD,EAAAzyB,EAAA6W,KAAA,SAAAw8D,GAAA,cAAAA,EAAAt8D,KAAAs8D,EAAAr8D,MAAA,WAC1C3M,EAAKknE,EAAapD,KAGZ9jE,EAAGE,OAASF,EAAGE,MAAM3C,gBAAkBoD,EAAcpD,iBAAkByC,EAAGskD,WAAazhD,SAAS7C,EAAGskD,aAAezhD,SAASyhD,IAJvF,CAAA0kB,EAAAr8D,KAAA,eAAAq8D,EAAAhzD,OAAA,UAKvC,GALuC,UAQ1C0xD,EAAa1D,GAAaA,EAAUhpE,EAAKxE,MAAM2L,UAAY6hE,EAAUhpE,EAAKxE,MAAM2L,SAAS4hE,IAAaC,EAAUhpE,EAAKxE,MAAM2L,SAAS4hE,GAAUD,GAE9I6D,EAAiB,CACrBsB,cAAc,UACdC,gBAAgB,SAChBC,kBAAkB,UAClBC,oBAAoB,UACpBC,sBAAsB,UACtBC,uBAAuB,UACvBC,uBAAuB,UACvBC,yBAAyB,UACzBC,0BAA0B,WAEtB7B,EAAgB,CAAC,UAAU,WAC3Bl9C,EAA4B,YAAd1qB,EAAGrF,OACjBktE,EAAYD,EAAcznE,SAASH,EAAGrF,QACtCmtE,EAAyB,2BAAd9nE,EAAG0pE,OACd5lE,EAAS9D,EAAGgsB,gBAAkBhsB,EAAGgsB,gBAAkB,KACnD+7C,EAAkBrwE,OAAOqF,KAAK4qE,GAAgBxnE,SAASH,EAAG0pE,UAG5D5lE,GAAUtB,EAAasB,IAAWtB,EAAasB,GAAQmJ,YA7BX,CAAA+7D,EAAAr8D,KAAA,gBAAAq8D,EAAAhzD,OAAA,UA8BvC,GA9BuC,aAiC5C6xD,GAAa/jE,IAAWtB,EAAasB,IAAWikE,GAAmB/nE,EAAGssB,OAAOhxB,QAjCjC,CAAA0tE,EAAAr8D,KAAA,gBAmCxC6uD,EAA8C,YAA9BmM,EAAe3nE,EAAG0pE,QAClC5oE,EAAW06D,EAAgB,GAAK56D,EAAYE,SAClD0B,EAAY,IAAA7F,OAAKqD,EAAG2pE,UAAa,CAC/BhvE,OAAO,UACPuF,MAAMS,EACNd,OAAO8nE,EAAe3nE,EAAG0pE,QACzBppE,UAAUuC,SAAS7C,EAAG2pE,QAAQ,KAC9BvwE,KAAK0K,EAAS9D,EAAGgsB,gBAAkB,KACnCnH,YAAY22C,EAAgB56D,EAAY08B,KAAKp9B,MAAQS,EACrDrJ,MAAO0I,EAAG1I,MAAQ0I,EAAG1I,MAAQ0D,EAAKuU,iBAAiBvP,EAAGssB,OAAO,GAAGxrB,GAAU0W,YA5C9BwxD,EAAAhzD,OAAA,UA+CvC,GA/CuC,WAmD3C0U,GAAgB5mB,GAAWikE,EAnDgB,CAAAiB,EAAAr8D,KAAA,gBAAAq8D,EAAAhzD,OAAA,UAoDvC,GApDuC,WAuD5CgyD,EAAShoE,EAAGgoE,OAAShoE,EAAGgoE,OAAS,KAvDW,CAAAgB,EAAAr8D,KAAA,gBAAAq8D,EAAAr8D,KAAA,GA2D9B,IAAIwI,QAAJ,eAAAy0D,EAAAlyE,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAAa,SAAAy9D,EAAOt0D,EAASC,GAAhB,OAAA4S,EAAAzyB,EAAA6W,KAAA,SAAAs9D,GAAA,cAAAA,EAAAp9D,KAAAo9D,EAAAn9D,MAAA,OAC3B3R,EAAKxE,MAAMmf,KAAKC,IAAIV,eAAelV,EAAGgsB,gBAAgB,SAACnW,EAAI2c,GACrD3c,GACFL,EAAOK,GAETN,EAAQid,KALiB,wBAAAs3C,EAAA38D,SAAA08D,EAAAtzE,SAAb,gBAAAwzE,EAAAC,GAAA,OAAAJ,EAAAv8D,MAAA9W,KAAA8E,YAAA,IA3D8B,QA2D9C2sE,EA3D8CgB,EAAAt6D,KAAA,WAwE3Cs5D,IAAYF,GAAYE,EAAO1+D,KAAKxJ,gBAAkB9E,EAAKxE,MAAM2L,QAAQrC,eAxE9B,CAAAkpE,EAAAr8D,KAAA,gBAAAq8D,EAAAhzD,OAAA,UAyEvC,GAzEuC,eAAAgzD,EAAAr8D,KAAA,GA4EvB3R,EAAKuiC,kBAAkB38B,EAAYonE,EAAOplE,YAAYolE,EAAO1nE,WA5EtC,QA4E1C2M,EA5E0C+7D,EAAAt6D,KA8EhDs5D,EAAOrtE,OAAS,YAChBqtE,EAAOnoE,OAAS8nE,EAAe3nE,EAAG0pE,QAClC1B,EAAOx1B,gBAAkB5xC,EAAYoJ,QACrCg+D,EAAO1nE,UAAYuC,SAAS7C,EAAG2pE,QAAQ,KAEnC1B,EAAU,KAnFkCe,EAAAjZ,GAoFxC/vD,EAAG0pE,OApFqCV,EAAAr8D,KAqFzC,kBArFyCq8D,EAAAjZ,GAAA,GAsFzC,wBAtFyCiZ,EAAAjZ,GAAA,GAgHzC,oBAhHyCiZ,EAAAjZ,GAAA,GA+HzC,2BA/HyCiZ,EAAAjZ,GAAA,GAkNzC,8BAlNyCiZ,EAAAjZ,GAAA,GAmNzC,6BAnNyCiZ,EAAAjZ,GAAA,GAoNzC,0BApNyCiZ,EAAAjZ,GAAA,GAqNzC,2BArNyCiZ,EAAAjZ,GAAA,GAsNzC,sBAtNyCiZ,EAAAjZ,GAAA,wBAuFvC/vD,EAAGssB,OAvFoC,CAAA08C,EAAAr8D,KAAA,gBAwFtC+6D,IACF1D,EAAUhpE,EAAKxE,MAAM2L,SAAS4hE,GAAUD,GAAS9jE,GAzFTgpE,EAAAhzD,OAAA,UA2FnC,GA3FmC,WA8FxCgyD,EAAOvN,GAAG36D,gBAAkBc,EAAY08B,KAAKtzB,QAAQlK,cA9Fb,CAAAkpE,EAAAr8D,KAAA,gBAgGtC+6D,UACK1D,EAAUhpE,EAAKxE,MAAM2L,SAAS4hE,GAAUD,GAjGPkF,EAAAhzD,OAAA,UAoGnC,GApGmC,WAuG5CiyD,EAAUjoE,EAAGssB,OAAStxB,EAAKuU,iBAAiBvP,EAAGssB,OAAO,GAAG1rB,EAAYE,UAAU0W,WAAa,EAvGhD,CAAAwxD,EAAAr8D,KAAA,gBAAAq8D,EAAAhzD,OAAA,UA0GnC,GA1GmC,eA6G5CgyD,EAAO1wE,MAAQ2wE,EACfD,EAAO5mE,YAAc6mE,EA9GuBe,EAAAhzD,OAAA,wBAiHvChW,EAAGssB,OAjHoC,CAAA08C,EAAAr8D,KAAA,gBAkHtC+6D,IACF1D,EAAUhpE,EAAKxE,MAAM2L,SAAS4hE,GAAUD,GAAS9jE,GAnHTgpE,EAAAhzD,OAAA,UAqHnC,GArHmC,eAwHvCgyD,EAAO/6D,aACJi7D,EAAqBltE,EAAKuU,iBAAiBvP,EAAGssB,OAAO,GAAG,IAAIpiB,MAAM+C,GACxE+6D,EAAO/6D,WAAaA,EACpB+6D,EAAO1wE,MAAQ4wE,EACfF,EAAO5mE,YAAc8mE,GA5HqBc,EAAAhzD,OAAA,wBAgIxCmyD,EAAgCnoE,EAAGwyB,UAAYxyB,EAAGwyB,UAAY,KAhItB,CAAAw2C,EAAAr8D,KAAA,gBAAAq8D,EAAAr8D,KAAA,GAmIH,IAAIwI,QAAJ,eAAA80D,EAAAvyE,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAAa,SAAA89D,EAAO30D,EAASC,GAAhB,OAAA4S,EAAAzyB,EAAA6W,KAAA,SAAA29D,GAAA,cAAAA,EAAAz9D,KAAAy9D,EAAAx9D,MAAA,OAClD3R,EAAKxE,MAAMmf,KAAKC,IAAIuwD,sBAAsBnmE,EAAGgsB,gBAAgB,SAACnW,EAAI7V,GAC5D6V,GACFL,EAAOK,GAETN,EAAQvV,KALwC,wBAAAmqE,EAAAh9D,SAAA+8D,EAAA3zE,SAAb,gBAAA6zE,EAAAC,GAAA,OAAAJ,EAAA58D,MAAA9W,KAAA8E,YAAA,IAnIG,QAmI1C8sE,EAnI0Ca,EAAAt6D,KAAA,WA6IvCy5D,EA7IuC,CAAAa,EAAAr8D,KAAA,gBAAAq8D,EAAAhzD,OAAA,UA8InC,GA9ImC,WAkJvChW,EAAGwyB,YACNxyB,EAAGwyB,UAAY21C,EACXT,IACF1D,EAAUhpE,EAAKxE,MAAM2L,SAAS4hE,GAAUD,GAAS9jE,IAIjDH,EAAS,KACTuoE,EAAqC,KACrCC,EAA0C,GACxCC,EAAsBttE,EAAKqH,gBAAgB,CAAC,WAAW,UAAU,kBAGnEzB,EAAYsrC,WAAatrC,EAAYsrC,UAAUF,cAC7Cm8B,EAA8B11C,MAChC21C,EAAqCxnE,EAAYsrC,UAAUF,YAAYhiC,QAAQ6oB,QAAQ,IAAI,IAAI/yB,cAC/FuoE,EAA0CF,EAA8B11C,KAAK13B,OAAO,SAACiF,GAAS,OAAOA,EAAGgK,QAAQlK,gBAAgBc,EAAYoJ,QAAQlK,eAAiBE,EAAG2yB,OAAO3yB,EAAG2yB,OAAOr3B,OAAO,GAAGwE,gBAA9B,4BAAAnD,OAA4EyrE,MACxOD,EAA8Bp0B,SACvCs0B,EAA0C3wE,OAAOwG,OAAOiqE,EAA8Bp0B,QAAQh5C,OAAO,SAACiF,GAAS,OAAOA,EAAGgK,QAAQlK,gBAAgBc,EAAYoJ,QAAQlK,iBAGnKuoE,EAAwC/sE,SAC1CuE,EAAS,YAKRwoE,EAAwC/sE,SACvC6sE,EAA8B11C,MAChC21C,EAAqCxnE,EAAY08B,KAAKtzB,QAAQ6oB,QAAQ,IAAI,IAAI/yB,gBAC9EuoE,EAA0CF,EAA8B11C,KAAK13B,OAAO,SAACiF,GAAS,OAAOA,EAAGgK,QAAQlK,gBAAgBc,EAAYoJ,QAAQlK,eAAiBE,EAAG2yB,OAAO3yB,EAAG2yB,OAAOr3B,OAAO,GAAGwE,gBAA9B,4BAAAnD,OAA4EyrE,MAGpM9sE,QAAUgtE,IACrDF,EAAqCE,EAAoBt+D,QAAQ6oB,QAAQ,IAAI,IAAI/yB,cACjFuoE,EAA0CF,EAA8B11C,KAAK13B,OAAO,SAACiF,GAAS,OAAOA,EAAGgK,QAAQlK,gBAAgBc,EAAYoJ,QAAQlK,eAAiBE,EAAG2yB,OAAO3yB,EAAG2yB,OAAOr3B,OAAO,GAAGwE,gBAA9B,4BAAAnD,OAA4EyrE,OAE1OD,EAA8Bp0B,SACvCs0B,EAA0C3wE,OAAOwG,OAAOiqE,EAA8Bp0B,QAAQh5C,OAAO,SAACiF,GAAS,OAAOA,EAAGgK,QAAQlK,gBAAgBc,EAAYoJ,QAAQlK,iBAGnKuoE,EAAwC/sE,SAC1CuE,EAAS,YAIRwoE,EAAwC/sE,OAhMD,CAAA0tE,EAAAr8D,KAAA,gBAAAq8D,EAAAhzD,OAAA,UAiMnC,GAjMmC,WAoMtCuyD,EAAmBF,EAAwC,GAE3DG,EAAcD,EAAiBjiE,KAAOzD,SAAS0lE,EAAiBjiE,KAAK,IAAOiiE,EAAiB+B,KAAO/B,EAAiB+B,IAAIhkE,KAAQzD,SAAS0lE,EAAiB+B,IAAIhkE,KAAK,IAAM,KAtMpI,CAAA0iE,EAAAr8D,KAAA,gBAAAq8D,EAAAhzD,OAAA,UAyMnC,GAzMmC,eA4MtCyyD,EAAmBztE,EAAKuU,iBAAiBi5D,EAAY5nE,EAAYE,UACvEknE,EAAOnoE,OAASA,EAChBmoE,EAAO1wE,MAAQmxE,EACfT,EAAO5mE,YAAcqnE,EA/MuBO,EAAAhzD,OAAA,wBAuNvCpV,EAAYsrC,WAActrC,EAAYsrC,UAAUF,YAvNT,CAAAg9B,EAAAr8D,KAAA,gBAAAq8D,EAAAhzD,OAAA,UAwNnC,GAxNmC,WA2NxC0yD,EAAqB1oE,EAAGwyB,UAAYxyB,EAAGwyB,UAAY,KA3NX,CAAAw2C,EAAAr8D,KAAA,gBAAAq8D,EAAAr8D,KAAA,GA8Nd,IAAIwI,QAAJ,eAAAo1D,EAAA7yE,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAAa,SAAAo+D,EAAOj1D,EAASC,GAAhB,OAAA4S,EAAAzyB,EAAA6W,KAAA,SAAAi+D,GAAA,cAAAA,EAAA/9D,KAAA+9D,EAAA99D,MAAA,OACvC3R,EAAKxE,MAAMmf,KAAKC,IAAIuwD,sBAAsBnmE,EAAGgsB,gBAAgB,SAACnW,EAAI7V,GAC5D6V,GACFL,EAAOK,GAETN,EAAQvV,KAL6B,wBAAAyqE,EAAAt9D,SAAAq9D,EAAAj0E,SAAb,gBAAAm0E,EAAAC,GAAA,OAAAJ,EAAAl9D,MAAA9W,KAAA8E,YAAA,IA9Nc,QA8N1CqtE,EA9N0CM,EAAAt6D,KAAA,WAwOvCg6D,EAxOuC,CAAAM,EAAAr8D,KAAA,gBAAAq8D,EAAAhzD,OAAA,UAyOnC,GAzOmC,WA6OvChW,EAAGwyB,YACNxyB,EAAGwyB,UAAYk2C,EACXhB,IACF1D,EAAUhpE,EAAKxE,MAAM2L,SAAS4hE,GAAUD,GAAS9jE,IAI/Cq7D,EAAwBz6D,EAAYsrC,UAAUxB,kBAAkB1gC,QAAQlK,cAAc+yB,QAAQ,IAAI,IAClG2f,EAAkB5xC,EAAY08B,KAAKtzB,QAAQlK,cAAc+yB,QAAQ,IAAI,KACrE81C,EAA+BD,EAAmBj2C,KAAK13B,OAAO,SAACiF,GAAS,OAAOA,EAAG2yB,OAAOr3B,QAAQ,GAAK0E,EAAG2yB,OAAO3yB,EAAG2yB,OAAOr3B,OAAO,GAAGwE,gBAA9B,4BAAAnD,OAA4E0+D,IAA2Br7D,EAAG2yB,OAAO3yB,EAAG2yB,OAAOr3B,OAAO,GAAGwE,gBAA9B,4BAAAnD,OAA4E61C,MAE7Pl3C,OAxPU,CAAA0tE,EAAAr8D,KAAA,gBAAAq8D,EAAAhzD,OAAA,UAyPnC,GAzPmC,WA4PtC4yD,EAA4BD,EAA6BhmE,OAEzDkmE,EAAc7tE,EAAKxE,MAAMmf,KAAKC,IAAI4R,IAAIojD,UAAU,CACpD,CACE1X,aAAc,UACd32D,KAAM,SACN8I,KAAM,YAERujE,EAA0BtiE,KAAKsiE,EAA0Bj2C,UAEtCk2C,EAAYgC,OAtQW,CAAA7B,EAAAr8D,KAAA,gBAAAq8D,EAAAhzD,OAAA,UAuQnC,GAvQmC,eA0QtC8yD,EAAiBD,EAAYgC,OAC7B9B,EAAsB/tE,EAAKuU,iBAAiBu5D,EAAeloE,EAAYE,UAC7EknE,EAAO1wE,MAAQyxE,EAAoBvxD,WA5QSwxD,EAAAhzD,OAAA,6BAAAgzD,EAAAhzD,OAAA,sBAkRhDgyD,EAAO/6D,WAAaA,EACpB+6D,EAAO9nE,MAAQS,EACfqnE,EAAOnjD,YAAclkB,EACrBqnE,EAAO96D,WAAaD,EAAW/C,MAAMlP,EAAK4R,MAAMo7D,EAAO1wE,QAGvDkL,EAAasB,GAAUkkE,EAIlBhoE,EAAGgoE,SACNhoE,EAAGgoE,OAASA,EACZhE,EAAUhpE,EAAKxE,MAAM2L,SAAS4hE,GAAUD,GAAS9jE,GA9RH,0BAAAgpE,EAAA77D,SAAAs6D,EAAAlxE,SAA5C,gBAAAu0E,EAAAC,GAAA,OAAAvD,EAAAn6D,MAAA9W,KAAA8E,YAAA,IA7B8B,wBAAAksE,EAAAp6D,SAAAm6D,EAAA/wE,SAAhC,gBAAAy0E,GAAA,OAAA3D,EAAAh6D,MAAA9W,KAAA8E,YAAA,IAnBW,cAoVb2oE,GACFhpE,EAAKkpE,yBAAyBF,GArVfoD,EAAApxD,OAAA,SAwVVxT,GAxVU,yBAAA4kE,EAAAj6D,SAAA85D,EAAA1wE,SAp2CD,gBAAA00E,GAAA,OAAAjE,EAAA35D,MAAA9W,KAAA8E,YAAA,GAAA9E,KA8rDlBoqE,kBAAoB,SAAC7oB,GAA8B,IAArBozB,EAAqB7vE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAATiL,EAASjL,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3C6B,EAAM8tE,GAAgBpzB,EACxB+nB,EAAiB7kE,EAAKq7D,8BAA8B,iBAAiB,IACnEnnD,EAAYrM,SAAS5B,KAAKwwB,MAAM,KAKtC,OAJAouC,EAAeziE,GAAO,CACpBkJ,OACA4I,aAEKlU,EAAKs7D,8BAA8B,iBAAiBuJ,IAtsD3CtpE,KAwsDlB40E,iBAAmB,WACjB,OAAOnwE,EAAKmpE,cAAc,iBAAgB,IAzsD1B5tE,KA2sDlB60E,iBAAmB,SAACC,GAClB,OAAOrwE,EAAKud,gBAAgB,gBAAgB8yD,IA5sD5B90E,KA8sDlBwpE,iBAAmB,SAACjoB,GAAyB,IAAhBozB,EAAgB7vE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GACrC+B,EAAM8tE,GAAgBpzB,EACxB+nB,EAAiB7kE,EAAKq7D,8BAA8B,iBAAiB,IAEzE,OAAIwJ,GAAkBA,EAAeziE,GAC5ByiE,EAAeziE,GAAKkJ,KAEtB,MArtDS/P,KAutDlBqkC,YAvtDkB,eAAA0wC,EAAA5zE,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAutDJ,SAAAm/D,EAAMzzB,GAAN,IAAA0zB,EAAA7sB,EAAAr4C,EAAAmlE,EAAApwE,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAAk/D,GAAA,cAAAA,EAAAh/D,KAAAg/D,EAAA/+D,MAAA,cAAe6+D,EAAfC,EAAAnwE,OAAA,QAAAC,IAAAkwE,EAAA,IAAAA,EAAA,GAAoC9sB,EAApC8sB,EAAAnwE,OAAA,QAAAC,IAAAkwE,EAAA,GAAAA,EAAA,GAA2C,KAA3CC,EAAA/+D,KAAA,EACOwJ,IACJC,IAAI0hC,EAAS6G,GACbgtB,MAAM,SAAA91D,GACyB,oBAAnB21D,GACTA,EAAe31D,KALrB,cACNvP,EADMolE,EAAAh9D,KAAAg9D,EAAA11D,OAAA,SAQL1P,GARK,wBAAAolE,EAAAv+D,SAAAo+D,EAAAh1E,SAvtDI,gBAAAq1E,GAAA,OAAAN,EAAAj+D,MAAA9W,KAAA8E,YAAA,GAAA9E,KAiuDlBs1E,wBAjuDkB,eAAAC,EAAAp0E,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAiuDQ,SAAA2/D,EAAOj0B,GAAP,IAAA/6C,EAAAwhD,EAAAytB,EAAA98D,EAAA2wD,EAAA9b,EAAAz9C,EAAA2lE,EAAA5wE,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAA0/D,GAAA,cAAAA,EAAAx/D,KAAAw/D,EAAAv/D,MAAA,UAAgB5P,EAAhBkvE,EAAA3wE,OAAA,QAAAC,IAAA0wE,EAAA,GAAAA,EAAA,GAAqB,GAAG1tB,EAAxB0tB,EAAA3wE,OAAA,QAAAC,IAAA0wE,EAAA,GAAAA,EAAA,GAA4B,IAAID,EAAhCC,EAAA3wE,OAAA,QAAAC,IAAA0wE,EAAA,GAAAA,EAAA,GAA4C,EAC9D/8D,EAAYrM,SAAS5B,KAAKwwB,MAAM,QAGlCouC,EAAiB7kE,EAAKq7D,8BAA8B,iBAAiB,MAEnDwJ,EAAe/nB,IAAa+nB,EAAe/nB,GAAU5oC,WAAaA,EAAU2wD,EAAe/nB,GAAU5oC,UAAUqvC,GAN7G,CAAA2tB,EAAAv/D,KAAA,eAAAu/D,EAAAl2D,OAAA,SAOf6pD,EAAe/nB,GAAUxxC,MAPV,cAUlBy9C,EAAShnD,EAAKivE,GAVIE,EAAAv/D,KAAA,GAWL3R,EAAK4/B,YAAYkd,EAAS,WAAWiM,GAXhC,aAWlBz9C,EAXkB4lE,EAAAx9D,QAeZpI,EAAKA,MAA8B,OAAtBA,EAAKA,KAAK+gC,QAfX,CAAA6kC,EAAAv/D,KAAA,gBAgBtBkzD,EAAe/nB,GAAY,CACzBxxC,OACA4I,aAEFlU,EAAKs7D,8BAA8B,iBAAiBuJ,GApB9BqM,EAAAl2D,OAAA,SAqBf1P,GArBe,aAsBb0lE,EAAYjvE,EAAKzB,OAAO,GAtBX,CAAA4wE,EAAAv/D,KAAA,gBAAAu/D,EAAAv/D,KAAA,GAuBT3R,EAAK6wE,wBAAwB/zB,EAAS/6C,EAAKwhD,EAAIytB,EAAY,GAvBlD,eAAAE,EAAAl2D,OAAA,SAAAk2D,EAAAx9D,MAAA,eAAAw9D,EAAAl2D,OAAA,SAyBjB,MAzBiB,yBAAAk2D,EAAA/+D,SAAA4+D,EAAAx1E,SAjuDR,gBAAA41E,GAAA,OAAAL,EAAAz+D,MAAA9W,KAAA8E,YAAA,GAAA9E,KA4vDlB0pE,kBA5vDkB,eAAAmM,EAAA10E,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KA4vDE,SAAAigE,EAAOv0B,GAAP,IAAAyG,EAAA+tB,EAAApB,EAAAvsB,EAAAvhD,EAAA8R,EAAA2wD,EAAAv5D,EAAAimE,EAAAlxE,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAAggE,GAAA,cAAAA,EAAA9/D,KAAA8/D,EAAA7/D,MAAA,UAAgB4xC,EAAhBguB,EAAAjxE,OAAA,QAAAC,IAAAgxE,EAAA,GAAAA,EAAA,GAAoB,GAAGD,EAAvBC,EAAAjxE,OAAA,QAAAC,IAAAgxE,EAAA,IAAAA,EAAA,GAAyCrB,EAAzCqB,EAAAjxE,OAAA,QAAAC,IAAAgxE,EAAA,IAAAA,EAAA,GAAqD5tB,EAArD4tB,EAAAjxE,OAAA,QAAAC,IAAAgxE,EAAA,GAAAA,EAAA,GAA4D,KACxEnvE,EAAM8tE,GAAgBpzB,EACtB5oC,EAAYrM,SAAS5B,KAAKwwB,MAAM,QAGhCouC,EAAiB7kE,EAAKq7D,8BAA8B,iBAAiB,MAErDwJ,EAAeziE,IAAQyiE,EAAeziE,GAAK8R,WAAaA,EAAU2wD,EAAeziE,GAAK8R,UAAUqvC,GAPpG,CAAAiuB,EAAA7/D,KAAA,eAAA6/D,EAAAx2D,OAAA,SAQR6pD,EAAeziE,GAAKkJ,MAAQgmE,EAAczM,EAAeziE,GAAKkJ,KAAKA,KAAOu5D,EAAeziE,GAAKkJ,MARtF,cAAAkmE,EAAA7/D,KAAA,GAWC3R,EAAK4/B,YAAYkd,GAAS,EAAM6G,GAXjC,eAWZr4C,EAXYkmE,EAAA99D,KAalBmxD,EAAeziE,GAAO,CACpBkJ,OACA4I,aAEFlU,EAAKs7D,8BAA8B,iBAAiBuJ,GAjBlC2M,EAAAx2D,OAAA,SAkBV1P,GAAQgmE,EAAchmE,EAAKA,KAAOA,GAlBxB,yBAAAkmE,EAAAr/D,SAAAk/D,EAAA91E,SA5vDF,gBAAAk2E,GAAA,OAAAL,EAAA/+D,MAAA9W,KAAA8E,YAAA,GAAA9E,KAgxDlBw1B,oBAAsB,SAAAzX,GACpB,IAAI8P,EAAS,QACb,GAAIvhB,SAASyR,EAAMo4D,MAAM,CACvB,IAAMC,EAAY9pE,SAASyR,EAAMo4D,MACjC,OAAQC,GACN,KAAK,KACHvoD,EAAS,SACX,MACA,QACEA,EAAM,SAAAznB,OAAYgwE,SAGbr4D,EAAM+yB,UACfjjB,EAAS9P,EAAM+yB,QAAQhe,MAAM,MAAM,IAGrC,OAAOjF,GAhyDS7tB,KAkyDlB+xB,iBAAmB,WACjB,OAAOne,KAnyDS5T,KAqyDlBgmC,aAAe,SAACF,EAAKuwC,GAEnB,IADAvwC,EAAO3kC,OAAOC,OAAO,GAAG0kC,IACf/gC,OAAO,EAAE,CAChB,IAAMuxE,EAAOxwC,EAAKywC,QAClB,IAAKzwC,EAAK/gC,OACR,OAAOsxE,EAAMC,GAAQD,EAAMC,GAAQ,KAC9B,GAAID,EAAMC,GACf,OAAO7xE,EAAKuhC,aAAaF,EAAKuwC,EAAMC,IAGxC,OAAO,MA/yDSt2E,KAizDlB8L,gBAAkB,SAACg6B,GAAuB,IAAlB0wC,EAAkB1xE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAExC,GADA0xE,EAAUA,GAAoB5iE,IAC1BkyB,EAAK/gC,OAAO,EAAE,CAChB,IAAMuxE,EAAOxwC,EAAKywC,QAClB,IAAKzwC,EAAK/gC,OACR,OAAOyxE,EAAQF,GAAQE,EAAQF,GAAQ,KAClC,GAAIE,EAAQF,GACjB,OAAO7xE,EAAKqH,gBAAgBg6B,EAAK0wC,EAAQF,IAG7C,OAAO,MA3zDSt2E,KA6zDlBy2E,eAAiB,WACf,OAAO7oE,OAAOsgD,SAASC,OAAO5kD,cAAcK,SAASgK,IAAcqrC,QAAQ11C,gBA9zD3DvJ,KAg0DlB02E,aAAe,WACb,OAAO9oE,OAAOsgD,SAASC,OAAO5kD,cAAcK,SAASgK,IAAcwrC,QAAQ71C,gBAj0D3DvJ,KAm0DlB22E,4BAn0DkBx1E,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAm0DY,SAAA+gE,IAAA,IAAA5uE,EAAA6uE,EAAAC,EAAAC,EAAAjyE,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAA+gE,GAAA,cAAAA,EAAA7gE,KAAA6gE,EAAA5gE,MAAA,OAC5BpO,GADmCA,EAAP+uE,EAAAhyE,OAAA,QAAAC,IAAA+xE,EAAA,GAAAA,EAAA,GAAY,OACzBnpE,OAAOsgD,SAASrrD,KAAKggB,OAAO,GACrCg0D,EAAqBpyE,EAAKqH,gBAAgB,CAAC,YAAY,SAAS,aAChEgrE,EAAWryE,EAAKgyE,iBAClBI,EAAmB1lD,SAAW2lD,GAAYlpE,OAAOqpE,KACnDrpE,OAAOqpE,GAAG,MAAO,OAAQjvE,GACzB4F,OAAOqpE,GAAG,OAAQ,aANQ,wBAAAD,EAAApgE,SAAAggE,EAAA52E,SAn0DZA,KA40DlBuyB,yBA50DkB,eAAA2kD,EAAA/1E,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KA40DS,SAAAshE,EAAO5hD,GAAP,IAAA3kB,EAAAwmE,EAAA70B,EAAA80B,EAAAC,EAAAC,EAAAzyE,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAAuhE,GAAA,cAAAA,EAAArhE,KAAAqhE,EAAAphE,MAAA,UAAiBxF,EAAjB2mE,EAAAxyE,OAAA,QAAAC,IAAAuyE,EAAA,GAAAA,EAAA,GAA0B,KAE7CH,EAAmBxjE,IAAcyuC,UAAUC,OAAO9E,OAClD+E,EAAe60B,EAAiB70B,aAChC80B,EAAWzpE,OAAOsgD,SAASC,OAAO5kD,cAAcK,SAASgK,IAAcqrC,QAAQ11C,gBAEjF6tE,EAAiBjmD,UAAWvjB,OAAOqpE,KAAQ10B,IAAgB80B,EANtC,CAAAG,EAAAphE,KAAA,eASnBghE,EAAiB50B,uBAE2B,IAA1C5uC,IAAci4C,QAAQM,iBAClBmrB,EAAiB1jE,IAAci4C,QAAQC,kBAAkBl4C,IAAci4C,QAAQM,iBACrF52B,EAAU/C,eAAV,IAAApsB,OAA+BkxE,IAEtB/0B,IAAiB80B,IAC1B9hD,EAAU/C,eAAiB,UAhBRglD,EAAAphE,KAAA,EAoBhB,IAAIwI,QAAJ,eAAA64D,EAAAt2E,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAAa,SAAA6hE,EAAO14D,EAASC,GAAhB,OAAA4S,EAAAzyB,EAAA6W,KAAA,SAAA0hE,GAAA,cAAAA,EAAAxhE,KAAAwhE,EAAAvhE,MAAA,OAClBmf,EAAUqiD,YAAc,WACtB54D,GAAQ,IAEVuW,EAAUsiD,gBAAkB,WAC1B54D,KAGFrR,OAAOqpE,GAAG,OAAQ,QAAS1hD,GART,wBAAAoiD,EAAA/gE,SAAA8gE,EAAA13E,SAAb,gBAAA83E,EAAAC,GAAA,OAAAN,EAAA3gE,MAAA9W,KAAA8E,YAAA,IApBgB,OA+BC,oBAAb8L,GACTA,IAhCqB,aAoCD,oBAAbA,GACTA,IArCuB4mE,EAAA/3D,OAAA,UAwClB,GAxCkB,yBAAA+3D,EAAA5gE,SAAAugE,EAAAn3E,SA50DT,gBAAAg4E,GAAA,OAAAd,EAAApgE,MAAA9W,KAAA8E,YAAA,GAAA9E,KAs3DlBi4E,eAt3DkB,eAAAC,EAAA/2E,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAs3DD,SAAAsiE,EAAOnyE,EAAMyN,EAASwd,GAAtB,IAAAF,EAAA,OAAAc,EAAAzyB,EAAA6W,KAAA,SAAAmiE,GAAA,cAAAA,EAAAjiE,KAAAiiE,EAAAhiE,MAAA,cAAAgiE,EAAAjiE,KAAA,EAEP4a,EAAW,IAAItsB,EAAKxE,MAAMmf,KAAKC,IAAIg5D,SAASpnD,EAAKxd,GAF1C2kE,EAAA34D,OAAA,SAGN,CAACzZ,OAAM+qB,aAHD,OAAAqnD,EAAAjiE,KAAA,EAAAiiE,EAAA5e,GAAA4e,EAAA,SAKb3zE,EAAK2+D,eAAe,6BAA6Bp9D,EAAKyN,EAAtD2kE,EAAA5e,IALa,cAAA4e,EAAA34D,OAAA,SAOR,MAPQ,wBAAA24D,EAAAxhE,SAAAuhE,EAAAn4E,KAAA,YAt3DC,gBAAAs4E,EAAAC,EAAAC,GAAA,OAAAN,EAAAphE,MAAA9W,KAAA8E,YAAA,GAAA9E,KA+3DlBy4E,kBAAoB,WAA0B,IAAzBphB,EAAyBvyD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAT,KACnC,OAAOL,EAAKmpE,cAAc,kBAAiB,EAAMvW,IAh4DjCr3D,KAk4DlB04E,qBAAuB,SAACC,EAAS9qB,GAU/B,OATK8qB,EAASllE,SAAWhP,EAAKxE,MAAM2L,UAClC+sE,EAASllE,QAAUhP,EAAKxE,MAAM2L,SAE3B+sE,EAASj4C,WACZi4C,EAASj4C,SAAWj8B,EAAKg0E,qBAEG,qBAAnBE,EAASC,OAA0BD,EAASC,cAC9CD,EAASC,QAEbD,EAASllE,aAGdo6C,EAAWA,IAAuBppD,EAAKxE,MAAM4tD,SAAWppD,EAAKxE,MAAM4tD,SAA+C,oBAA5BppD,EAAKxE,MAAM44E,aAA8Bp0E,EAAKxE,MAAM44E,eAAiB,QAElJhrB,EAASirB,aAAaH,KAj5Df34E,KAq5DlB8N,2BAA6B,SAACP,GAC5B,IAAM4+C,EAAkB1nD,EAAKxE,MAAM4rD,QAAQ+Z,QAAQ54D,IAAMvI,EAAKqH,gBAAgB,CAAC,UAAU,oBACnFitE,EAAUt0E,EAAKqH,gBAAgB,CAAC,UAAU,YAAY,YAAY,UAAUqgD,IAClF,OAAO5+C,EAAM,GAAAnH,OAAM2yE,EAAN,QAAA3yE,OAAoBmH,GAAW,MAx5D5BvN,KA05DlBq+C,uBAAyB,SAAC5qC,GACxB,IAAM04C,EAAkB1nD,EAAKxE,MAAM4rD,QAAQ+Z,QAAQ54D,IAAMvI,EAAKqH,gBAAgB,CAAC,UAAU,oBACnFitE,EAAUt0E,EAAKqH,gBAAgB,CAAC,UAAU,YAAY,YAAY,UAAUqgD,IAClF,OAAO14C,EAAO,GAAArN,OAAM2yE,EAAN,aAAA3yE,OAAyBqN,GAAY,MA75DnCzT,KA+5DlB+O,YAAc,SAACjE,GAA6D,IAArDkuE,EAAqDl0E,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtC,EAAGukC,EAAmCvkC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzB,IAAKm0E,EAAoBn0E,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAR,IAClE,IACEk0E,EAAehvE,KAAKkvE,IAAIF,GACxBA,EAAenqE,MAAMmqE,GAAgB,EAAIA,EAEzC,IAAMG,EAAeruE,EAAS,EAAI,IAAM,GAEpCX,EAAImC,SAASxB,EAASd,KAAKkvE,IAAIE,OAAOtuE,IAAW,GAAGC,QAAQiuE,IAAe/3D,WAC3E4R,EAAK1oB,EAAEpF,OAAS,EAAKoF,EAAEpF,OAAS,EAAI,EAExC,OAAOo0E,GAAgBtmD,EAAI1oB,EAAE0Y,OAAO,EAAGgQ,GAAKomD,EAAY,IAAM9uE,EAAE0Y,OAAOgQ,GAAGyJ,QAAQ,iBAAkB,KAAO28C,IAAcD,EAAe3vC,EAAUr/B,KAAKkvE,IAAIpuE,EAASX,GAAGY,QAAQiuE,GAAc/7D,MAAM,GAAK,IACxM,MAAOzV,GACP,OAAO,OA36DOxH,KA86DlBq5E,qBA96DkBl4E,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KA86DK,SAAAyjE,IAAA,IAAAC,EAAAta,EAAA3zC,EAAA2hC,EAAA1L,EAAAsC,EAAAjkB,EAAA45C,EAAAC,EAAA30E,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAAyjE,GAAA,cAAAA,EAAAvjE,KAAAujE,EAAAtjE,MAAA,UAAOmjE,EAAPE,EAAA10E,OAAA,QAAAC,IAAAy0E,EAAA,IAAAA,EAAA,GAEfxa,EAFe,qBAAA74D,OAEsBmzE,KACrCjuD,EAAa7mB,EAAKk1E,cAAc1a,IAHjB,CAAAya,EAAAtjE,KAAA,eAAAsjE,EAAAj6D,OAAA,SAKZ6L,GALY,cAQf2hC,EAAYxoD,EAAKqH,gBAAgB,CAAC,UAAU,YAAY,WAAW,cAAcpF,IAAK,SAAAkzE,GAAI,OAAIA,EAAKrwE,gBACnGg4C,EAAW98C,EAAKqH,gBAAgB,CAAC,UAAU,YAAY,WAAW,YAAY,cAT/D4tE,EAAAtjE,KAAA,EAUC3R,EAAKilE,kBAAkBnoB,EAAS,MAAK,GAVtC,YAUjBsC,EAViB61B,EAAAvhE,MAAA,CAAAuhE,EAAAtjE,KAAA,gBAanBytC,EAAY1iD,OAAOwG,OAAOk8C,GAEpBjkB,EAAWtzB,SAAS5B,KAAKwwB,MAAM,KACjCq+C,IACF11B,EAAaA,EAAUr/C,OAAQ,SAAA4K,GAAC,OAAKA,EAAEyqE,IAAIlgB,QAAQjwB,OAAO9J,GAAYxwB,EAAEyqE,IAAIlgB,QAAQlwB,IAAI7J,KAKpF45C,EAAiB,GAtBJE,EAAAtjE,KAAA,GAuBb3R,EAAKgR,aAAaouC,EAAlB,eAAAi2B,EAAA34E,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAA6B,SAAAkkE,EAAO3qE,GAAP,IAAA/C,EAAA2tE,EAAA,OAAAnoD,EAAAzyB,EAAA6W,KAAA,SAAAgkE,GAAA,cAAAA,EAAA9jE,KAAA8jE,EAAA7jE,MAAA,YAE7BhH,EAAEyqE,IAAIlgB,QAAQlwB,KAAK7J,GAAYqtB,EAAUrjD,SAASwF,EAAEqE,QAAQlK,gBAF/B,CAAA0wE,EAAA7jE,KAAA,QAG/BojE,EAAetuE,KAAKkE,GAHW6qE,EAAA7jE,KAAA,sBAKzB/J,EAAc+C,EAAEyqE,IAAIlgB,QAAQ3M,SAE9BgtB,GAAoB,EAPOC,EAAA7jE,KAAA,EAQzB3R,EAAKgR,aAAcrG,EAAEyqE,IAAIlgB,QAAQugB,SAAShzB,WAA1C,eAAAizB,EAAAh5E,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAAsD,SAAAukE,EAAOjgD,GAAP,IAAAkpB,EAAAvuB,EAAA,OAAAjD,EAAAzyB,EAAA6W,KAAA,SAAAokE,GAAA,cAAAA,EAAAlkE,KAAAkkE,EAAAjkE,MAAA,WACtD4jE,EADsD,CAAAK,EAAAjkE,KAAA,eAAAikE,EAAA56D,OAAA,oBAI7C,qBAAT0a,EAAEn0B,KAJoD,CAAAq0E,EAAAjkE,KAAA,YAKlDitC,EAAYlpB,EAAEpE,OAAOukD,QACL71E,EAAKovB,kBAAkBwvB,GANW,CAAAg3B,EAAAjkE,KAAA,gBAAAikE,EAAAjkE,KAAA,EAQ3B3R,EAAKu4B,gBAAgBqmB,EAAUj0C,EAAEqE,SAAQ,EAAKpH,GARnB,QAQhDyoB,EARgDulD,EAAAliE,OAUlC1T,EAAK4R,MAAMye,GAAc3b,GAAG,OAC9C6gE,GAAoB,GAXgC,QAAAK,EAAAjkE,KAAA,kCAAAikE,EAAAzjE,SAAAwjE,EAAAp6E,SAAtD,gBAAAu6E,GAAA,OAAAJ,EAAArjE,MAAA9W,KAAA8E,YAAA,IARyB,OA8B3Bk1E,GACFR,EAAetuE,KAAKkE,GA/BS,wBAAA6qE,EAAArjE,SAAAmjE,EAAA/5E,SAA7B,gBAAAw6E,GAAA,OAAAV,EAAAhjE,MAAA9W,KAAA8E,YAAA,IAvBa,eAAA40E,EAAAj6D,OAAA,SA2DZhb,EAAK8mB,cAAc0zC,EAAcua,IA3DrB,yBAAAE,EAAA9iE,SAAA0iE,EAAAt5E,SA96DLA,KA6+DlBkY,gBA7+DkB,eAAAuiE,EAAAt5E,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KA6+DA,SAAA6kE,EAAOjnE,GAAP,IAAAoE,EAAA+wC,EAAAD,EAAAgyB,EAAA73B,EAAA83B,EAAAC,EAAA5b,EAAA3zC,EAAAwvD,EAAAC,EAAAC,EAAAz5B,EAAAxrB,EAAA2T,EAAA0e,EAAAv6B,EAAA9d,EAAAkrE,EAAAC,EAAAp2E,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAAklE,GAAA,cAAAA,EAAAhlE,KAAAglE,EAAA/kE,MAAA,UAAeyB,EAAfqjE,EAAAn2E,OAAA,QAAAC,IAAAk2E,EAAA,GAAAA,EAAA,GAAsB,KAAKtyB,EAA3BsyB,EAAAn2E,OAAA,QAAAC,IAAAk2E,EAAA,GAAAA,EAAA,GAA0C,KAAKvyB,EAA/CuyB,EAAAn2E,OAAA,QAAAC,IAAAk2E,EAAA,GAAAA,EAAA,GAA4D,KAAKP,EAAjEO,EAAAn2E,OAAA,QAAAC,IAAAk2E,EAAA,IAAAA,EAAA,GAA2Fp4B,EAA3Fo4B,EAAAn2E,OAAA,QAAAC,IAAAk2E,EAAA,GAAAA,EAAA,GAAqG,KAAKN,EAA1GM,EAAAn2E,OAAA,QAAAC,IAAAk2E,EAAA,GAAAA,EAAA,GAAgH,KAAKL,EAArHK,EAAAn2E,OAAA,QAAAC,IAAAk2E,EAAA,GAAAA,EAAA,GAA2H,KAC/F,IAAxCtnE,IAAci4C,QAAQM,iBAAwBv4C,IAAcC,MAAMsd,QADtD,CAAAgqD,EAAA/kE,KAAA,eAAA+kE,EAAA17D,OAAA,SAEP,IAFO,UAMVw/C,EANU,gBAAA74D,OAMsBqN,EANtB,KAAArN,OAMiCyR,EANjC,KAAAzR,OAM2C08C,EAN3C,KAAA18C,OAMwDw0E,EANxD,KAAAx0E,OAMiEy0E,KAC7EvvD,EAAa7mB,EAAKk1E,cAAc1a,IAPpB,CAAAkc,EAAA/kE,KAAA,eAWR0kE,EAAqBxvD,EAAW9mB,OAAQ,SAAAsqC,GAAC,OAA0B,OAAnBA,EAAE8Z,gBAA0BA,GAAkB9Z,EAAE8Z,gBAAgBA,KAAsC,OAAjB9Z,EAAE6Z,cAAwBA,GAAgB7Z,EAAE6Z,cAAcA,OAE3KmyB,EAAmB/1E,OAAO,GAbtC,CAAAo2E,EAAA/kE,KAAA,cAcN6kE,EAAeH,EAAmB1uE,MAAM2D,MAdlC,CAAAorE,EAAA/kE,KAAA,gBAAA+kE,EAAA17D,OAAA,SAgBHw7D,EAAaz2E,OAAQ,SAAA6M,GAAC,QAAOu3C,GAAkBv3C,EAAEsH,WAAWiwC,MAAqBD,GAAgBt3C,EAAEsH,WAAWgwC,MAhB3G,eAAAwyB,EAAA17D,OAAA,SAkBL,MAlBK,QAAA07D,EAAA/kE,KAAA,iBAsBdkV,EAAa,GAtBC,eAyBV0vD,EAAUpnE,IAAcC,MAAMqwC,MAChC3C,EA1BY,GAAAn7C,OA0BE40E,EAAQz5B,UA1BVn7C,OA0BqBqN,IAEjCm1C,GAAkBD,GAA2B,OAAX9wC,GAAiC,OAAdirC,KACjD/sB,EAAS,GAEX6yB,GAAkBt8C,SAASs8C,KACzB+xB,EACF5kD,EAAO7qB,KAAP,SAAA9E,OAAqBwiD,KAEflf,EAAQkf,EAAgB,OAC9B7yB,EAAO7qB,KAAP,SAAA9E,OAAqBsjC,MAIrBif,GAAgBr8C,SAASq8C,IAC3B5yB,EAAO7qB,KAAP,OAAA9E,OAAmBuiD,IAGN,OAAX9wC,GACFke,EAAO7qB,KAAP,UAAA9E,OAAsByR,IAGN,OAAdirC,GAAsBx2C,SAASw2C,IACjC/sB,EAAO7qB,KAAP,aAAA9E,OAAyB08C,IAGb,OAAV83B,GACF7kD,EAAO7qB,KAAP,SAAA9E,OAAqBw0E,IAGT,OAAVC,GAAkBvuE,SAASuuE,IAC7B9kD,EAAO7qB,KAAP,SAAA9E,OAAqBy0E,IAGnB9kD,EAAOhxB,SACTw8C,GAAY,IAAIxrB,EAAOhiB,KAAK,OAI1Bq0C,EAAS3jD,EAAKqH,gBAAgB,CAAC,QAAQ,WAjE7BqvE,EAAA/kE,KAAA,GAkEG3R,EAAK4/B,YAAYkd,GAAS,EAAM6G,GAlEnC,WAkEZv6B,EAlEYstD,EAAAhjE,KAAA,CAAAgjE,EAAA/kE,KAAA,gBAAA+kE,EAAA17D,OAAA,SAoEP,IApEO,eAuEV1P,EAAO8d,EAAO9d,KAEhBkrE,EAAe,KACJ,OAAXpjE,IACFojE,EAAelrE,EAAKvL,OAAQ,SAAA6M,GAAC,OAAMA,EAAEwG,SAAWA,KAGlDyT,EAAWpgB,KAAK,CACd2M,SACA8wC,eACAC,iBACA74C,KAAKkrE,IAGPx2E,EAAK8mB,cAAc0zC,EAAc3zC,GArFjB6vD,EAAA17D,OAAA,SAuFT1P,GAvFS,yBAAAorE,EAAAvkE,SAAA8jE,EAAA16E,SA7+DA,gBAAAo7E,GAAA,OAAAX,EAAA3jE,MAAA9W,KAAA8E,YAAA,GAAA9E,KAskElB05D,iBAtkEkB,eAAA2hB,EAAAl6E,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAskEC,SAAAylE,EAAOxlD,GAAP,OAAAjE,EAAAzyB,EAAA6W,KAAA,SAAAslE,GAAA,cAAAA,EAAAplE,KAAAolE,EAAAnlE,MAAA,cACjB0f,EAAeA,GAA8BrxB,EAAKxE,MAAMmK,cADvCmxE,EAAAnlE,KAAA,EAEJ3R,EAAKq1B,oBAAoBhE,EAAa,YAFlC,cAAAylD,EAAA97D,OAAA,SAAA87D,EAAApjE,MAAA,wBAAAojE,EAAA3kE,SAAA0kE,EAAAt7E,SAtkED,gBAAAw7E,GAAA,OAAAH,EAAAvkE,MAAA9W,KAAA8E,YAAA,GAAA9E,KA0kElBqhE,UAAY,SAACoa,EAAKC,EAAYprE,GAC5B,GAAImrE,GAAQC,GAAeprE,EAAgB,CACzC,IAAI67B,EAAShrC,OAAOqF,KAAKi1E,GAAMvqD,OAAO,SAACyqD,EAAYnoE,GACjD,IAAMooE,EAAan3E,EAAK4R,MAAMqlE,EAAYloE,IACpC4uB,EAAM39B,EAAK4R,MAAMolE,EAAKjoE,IAC5B,OAAO/O,EAAK4R,MAAMslE,GAAarlE,KAAKslE,EAAWjoE,MAAMyuB,KACrD,GAEF,GAAI+J,EACF,OAAO1nC,EAAK4R,MAAM81B,GAAQnrB,IAAI1Q,GAGlC,OAAO,MAtlEStQ,KAwlElBoxC,oBAAsB,SAAC0R,GAAyB,IAAf+4B,EAAe/2E,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAN,EAMxC,MAL0B,CACxBg3E,KAAK,KACLC,IAAI,MACJC,KAAK,QAEkBl5B,GAAW+4B,GA9lEpB77E,KAgmElBogC,yBAhmEkBj/B,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAgmES,SAAAomE,IAAA,IAAAC,EAAAh9C,EAAAwpC,EAAAG,EAAAsT,EAAAC,EAAA,OAAAvqD,EAAAzyB,EAAA6W,KAAA,SAAAomE,GAAA,cAAAA,EAAAlmE,KAAAkmE,EAAAjmE,MAAA,cACnB8lE,EAAkBz3E,EAAKqH,gBAAgB,CAAC,YAAY,SACpDozB,EAAuBz6B,EAAKqH,gBAAgB,CAAC,QAAQ,QAAQ,QAAQ,kBAAkB,OAAO,mBAC9F48D,EAAgBjkE,EAAKqH,gBAAgB,CAAC,UAAU,YAAY,cAC5D+8D,EAAkBH,EAAc5b,UAAU,GAC1CqvB,EALmB,GAAA/1E,OAKIyiE,EALJ,2CAAAziE,OAK6D84B,EAAqBzrB,QALlF,cAAA4oE,EAAAjmE,KAAA,EAMK3R,EAAK6wE,wBAAwB6G,EAAkBzT,EAAcliE,KAAK,MANvE,aAMnB41E,EANmBC,EAAAlkE,OAOFikE,EAAgBrsE,MAAQqsE,EAAgBrsE,KAAK05D,QAAwD,oBAAvC2S,EAAgBrsE,KAAK05D,OAAOjlE,QAPxF,CAAA63E,EAAAjmE,KAAA,gBAAAimE,EAAA58D,OAAA,SAQhB28D,EAAgBrsE,KAAK05D,OAAOjlE,OAAQ,SAAAiF,GAAE,OAAKA,EAAGwyC,gBAAgB1yC,gBAAkB2yE,EAAgBzoE,QAAQlK,eAAiBE,EAAGy6D,GAAG36D,gBAAkB21B,EAAqBzrB,QAAQlK,eAAiB9E,EAAK4R,MAAM5M,EAAG1I,OAAOoY,GAAG,MARvM,eAAAkjE,EAAA58D,OAAA,SAUlB,IAVkB,yBAAA48D,EAAAzlE,SAAAqlE,EAAAj8E,SAhmETA,KA4mElBs8E,yBAA2B,SAAC1C,GAC1B,OAAOn1E,EAAKxE,MAAMoK,YAAYgJ,UAAU6X,KAAK,SAAA4jB,GAAC,OAAIA,EAAEr7B,QAAQlK,gBAAkBqwE,EAAKrwE,iBA7mEnEvJ,KA+mElBo6B,aAAe,SAAAr5B,GACb,OAAO0D,EAAK4R,MAAMtV,GAAOq5B,aAAa0oC,IAAUyZ,aAAaxxE,WAhnE7C/K,KAknElBw8E,uBAAyB,SAAA5jE,GACvB,OAAOnU,EAAK4R,MAAL,KAAAjQ,OAAgBwS,KAnnEP5Y,KAqnElBo2B,qBAAuB,SAACtB,EAAalc,KAA6B9T,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,OAC1D23E,EAA0Bh4E,EAAK+3E,uBAAuB5jE,GAC5D,OAAOnU,EAAK4R,MAAMye,GAAcnhB,MAAM8oE,GAAyBriD,aAAa0oC,IAAUyZ,aAAaxxE,WAvnEnF/K,KAynElBgZ,iBAAmB,SAAC8b,EAAalc,GAAoC,IAAtB8jE,EAAsB53E,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAT,KACpD23E,EAA0Bh4E,EAAK+3E,uBAAuB5jE,GACxDnC,EAAUhS,EAAK4R,MAAMye,GAAc9T,IAAIy7D,GAI3C,OAHIC,IAAiBA,EAAa7tE,UAChC4H,EAAUA,EAAQ9C,MAAM+oE,IAEnBjmE,GA/nESzW,KAioElB28E,oBAjoEkBx7E,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAioEI,SAAA+mE,IAAA,IAAA9mD,EAAA+mD,EAAAC,EAAAh4E,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAA8mE,GAAA,cAAAA,EAAA5mE,KAAA4mE,EAAA3mE,MAAA,cACpB0f,GAD2BA,EAAPgnD,EAAA/3E,OAAA,QAAAC,IAAA83E,EAAA,GAAAA,EAAA,GAAoB,OACKr4E,EAAKxE,MAAMoK,YAAY08B,KAAKp9B,MADrDozE,EAAA3mE,KAAA,EAES3R,EAAKq1B,oBAAoBhE,EAAc,SAAU,GAAI,IAAIs/C,MAAM,SAAA91D,GAC1F7a,EAAK2+D,eAAe,yBAA0B9jD,KAH5B,cAEdu9D,EAFcE,EAAA5kE,KAAA4kE,EAAAt9D,OAAA,SAMbo9D,GANa,wBAAAE,EAAAnmE,SAAAgmE,EAAA58E,SAjoEJA,KAyoElB4tE,cAAgB,SAAC/mE,GAA4C,IAAxCm2E,IAAwCl4E,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAAxBm4E,EAAwBn4E,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAT,KAC9C+oB,EAASovD,EACb,GAAIrvE,OAAO+T,aAAa,CACtB,IAAMxH,EAAOwH,aAAaC,QAAQ/a,GAC9BsT,IACF0T,EAAS1T,EACL6iE,IACFnvD,EAAStiB,KAAKsW,MAAM1H,KAI1B,OAAK0T,GACIovD,GArpEOj9E,KAypElBk9E,gBAAkB,WAAoB,IAAnBC,EAAmBr4E,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GAC7B,GAAI8I,OAAO+T,aAAa,CAEtB,IAAKw7D,IAAgBA,EAAYp4E,OAC/B,OAAO6I,OAAO+T,aAAay7D,QAI7B,IADA,IAAMC,EAAqB,GAClBlzE,EAAE,EAAEA,EAAEyD,OAAO+T,aAAa5c,OAAOoF,IAAI,CAC5C,IAAMmzE,EAAY1vE,OAAO+T,aAAa9a,IAAIsD,GACrCgzE,EAAYvzE,SAAS0zE,IACxBD,EAAmBnyE,KAAKoyE,GAG5BD,EAAmBnzE,QAAQ,SAACozE,GAC1B74E,EAAK84E,iBAAiBD,OAxqEVt9E,KA4qElBu9E,iBAAmB,SAAC12E,GAClB,QAAI+G,OAAO+T,eACT/T,OAAO+T,aAAa67D,WAAW32E,IACxB,IA/qEO7G,KAmrElBgiB,gBAAkB,SAACnb,EAAI9F,GAA0B,IAApByK,EAAoB1G,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAC/C,GAAI8I,OAAO+T,aACT,IAGE,OAFA5gB,EAAQyK,EAAYD,KAAKC,UAAUzK,GAASA,EAC5C6M,OAAO+T,aAAa87D,QAAQ52E,EAAI9F,IACzB,EACP,MAAOgd,GAEPnQ,OAAO+T,aAAa67D,WAAW32E,GAGnC,OAAO,GA9rES7G,KAgsElB09E,eAhsEkB,eAAAC,EAAAx8E,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAgsED,SAAA+nE,EAAOvzE,GAAP,IAAAwzE,EAAAnC,EAAA7hE,EAAAikE,EAAAC,EAAAC,EAAA,OAAAnsD,EAAAzyB,EAAA6W,KAAA,SAAAgoE,GAAA,cAAAA,EAAA9nE,KAAA8nE,EAAA7nE,MAAA,WACV/L,GAAe5F,EAAKxE,MAAMoK,cAC7BA,EAAc5F,EAAKxE,MAAMoK,aAEtBA,EAJU,CAAA4zE,EAAA7nE,KAAA,eAAA6nE,EAAAx+D,OAAA,UAKN,GALM,cAQTo+D,EAA0B,GARjBI,EAAA7nE,KAAA,EASW3R,EAAKq1B,oBAAoBzvB,EAAY08B,KAAKp9B,MAAO,kBAT5D,WAST+xE,EATSuC,EAAA9lE,OAWMujE,EAAY32E,OAXlB,CAAAk5E,EAAA7nE,KAAA,eAAA6nE,EAAAx+D,OAAA,UAYN,GAZM,OAef,IAfe5F,EAAA,SAeNikE,GACP,IAAMI,EAAyB,IAAIt/D,QAAJ,eAAAu/D,EAAAh9E,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAAa,SAAAuoE,EAAOp/D,EAASC,GAAhB,IAAAo/D,EAAA,OAAAxsD,EAAAzyB,EAAA6W,KAAA,SAAAqoE,GAAA,cAAAA,EAAAnoE,KAAAmoE,EAAAloE,MAAA,cAAAkoE,EAAAnoE,KAAA,EAAAmoE,EAAAloE,KAAA,EAEV3R,EAAKq1B,oBAAoBzvB,EAAY08B,KAAKp9B,MAAO,kBAAkB,CAACm0E,IAF1D,OAElCO,EAFkCC,EAAAnmE,KAGxC6G,EAAQq/D,GAHgCC,EAAAloE,KAAA,gBAAAkoE,EAAAnoE,KAAA,EAAAmoE,EAAA9kB,GAAA8kB,EAAA,SAKxCxiD,QAAQC,IAARuiD,EAAA9kB,IACAx6C,EAAQ,MANgC,yBAAAs/D,EAAA1nE,SAAAwnE,EAAAp+E,KAAA,YAAb,gBAAAu+E,EAAAC,GAAA,OAAAL,EAAArnE,MAAA9W,KAAA8E,YAAA,IAS/B+4E,EAAwB3yE,KAAKgzE,IAVtBJ,EAAc,EAAEA,EAAcpC,EAAY32E,OAAO+4E,IAAgBjkE,EAAjEikE,GAfM,OAAAG,EAAA7nE,KAAA,GA4BcwI,QAAQkD,IAAI+7D,GA5B1B,WA4BTE,EA5BSE,EAAA9lE,KA8BVujE,GAAgBqC,EA9BN,CAAAE,EAAA7nE,KAAA,gBAAA6nE,EAAAx+D,OAAA,UA+BN,GA/BM,eAkCTu+D,EAAOtC,EAAYl3E,OAAQ,SAACi6E,EAAMnxE,GAAP,OAAiBmxE,IAAUV,EAAezwE,KAlC5D2wE,EAAAx+D,OAAA,SAoCRu+D,EAAKj5E,OAAO,GApCJ,yBAAAk5E,EAAArnE,SAAAgnE,EAAA59E,SAhsEC,gBAAA0+E,GAAA,OAAAf,EAAA7mE,MAAA9W,KAAA8E,YAAA,GAAA9E,KAsuElB2+E,eAtuEkB,eAAAC,EAAAz9E,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAsuED,SAAAgpE,EAAOx0E,EAAYuB,GAAnB,IAAA0nC,EAAAwrC,EAAAC,EAAAC,EAAAC,EAAAxpC,EAAAtB,EAAA,OAAAtiB,EAAAzyB,EAAA6W,KAAA,SAAAipE,GAAA,cAAAA,EAAA/oE,KAAA+oE,EAAA9oE,MAAA,UAEV/L,GAAgBuB,EAFN,CAAAszE,EAAA9oE,KAAA,eAAA8oE,EAAAz/D,OAAA,UAGN,GAHM,UAMX6zB,GAAmB,EACnBwrC,EAAqB,KACrBC,EAA2B,KAE3BC,EAA8B,MAG9B30E,EAAYsrC,YAAatrC,EAAYsrC,UAAUxkB,QAbpC,CAAA+tD,EAAA9oE,KAAA,YAcP6oE,EAAkB50E,EAAYsrC,UAAUF,YAAYzvC,KACpDyvC,EAAchxC,EAAKovB,kBAAkBorD,GACrC9qC,EAAoB1vC,EAAKovB,kBAAkBxpB,EAAYsrC,UAAUxB,kBAAkBnuC,OAIrFyvC,IAAetB,EApBN,CAAA+qC,EAAA9oE,KAAA,gBAAA8oE,EAAA9oE,KAAA,GAsBsB3R,EAAKi1D,iBAAiBulB,GAtB5C,eAsBXF,EAtBWG,EAAA/mE,KAAA+mE,EAAA9oE,KAAA,GAgCgB3R,EAAK67B,mBAAmB2+C,EAAgBrzE,GAhCxD,SAgCXkzE,EAhCWI,EAAA/mE,QAmCT6mE,EAA8Bv6E,EAAKuU,iBAAiB8lE,EAAmBC,GAEvEzrC,EAAmB7uC,EAAK4R,MAAMyoE,GAAoB3lE,GAAG,IArC5C,eAAA+lE,EAAAz/D,OAAA,SA6CR,CACL6zB,mBACAwrC,qBACAC,2BACAC,gCAjDa,yBAAAE,EAAAtoE,SAAAioE,EAAA7+E,SAtuEC,gBAAAm/E,EAAAC,GAAA,OAAAR,EAAA9nE,MAAA9W,KAAA8E,YAAA,GAAA9E,KA2xElBugC,kBA3xEkB,eAAA8+C,EAAAl+E,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KA2xEE,SAAAypE,EAAOxpD,EAAcypD,GAArB,IAAAxpD,EAAAypD,EAAA16E,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAAwpE,GAAA,cAAAA,EAAAtpE,KAAAspE,EAAArpE,MAAA,cAAgC2f,EAAhCypD,EAAAz6E,OAAA,QAAAC,IAAAw6E,EAAA,GAAAA,EAAA,GAAyC,GAAzCC,EAAArpE,KAAA,EACL3R,EAAKm3C,sBAAsB9lB,EAAcypD,EAAWxpD,GAD/C,cAAA0pD,EAAAhgE,OAAA,SAAAggE,EAAAtnE,MAAA,wBAAAsnE,EAAA7oE,SAAA0oE,EAAAt/E,SA3xEF,gBAAA0/E,EAAAC,GAAA,OAAAN,EAAAvoE,MAAA9W,KAAA8E,YAAA,GAAA9E,KA+xElB4/E,uBA/xEkB,eAAAC,EAAA1+E,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KA+xEO,SAAAiqE,EAAOhqD,EAAcI,GAArB,IAAAC,EAAAvqB,EAAAmlB,EAAAgvD,EAAAC,EAAA7/D,EAAA8/D,EAAAC,EAAAC,EAAAC,EAAAt7E,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAAoqE,GAAA,cAAAA,EAAAlqE,KAAAkqE,EAAAjqE,MAAA,UAAiC+f,EAAjCiqD,EAAAr7E,OAAA,QAAAC,IAAAo7E,EAAA,GAAAA,EAAA,GAAgD,GACvEx0E,GAD2EA,EAApDw0E,EAAAr7E,OAAA,QAAAC,IAAAo7E,EAAA,GAAAA,EAAA,GAA8D,OAChE37E,EAAKxE,MAAM2L,QADT,CAAAy0E,EAAAjqE,KAAA,eAAAiqE,EAAA5gE,OAAA,SAGd,MAHc,YAKjBsR,EAAWtsB,EAAKovB,kBAAkBiC,MACxB/E,EAAS4jB,QAAQze,GANV,CAAAmqD,EAAAjqE,KAAA,gBAOf4pE,GAAeD,EAAAhvD,EAAS4jB,SAAQze,GAAjBpf,MAAAipE,EAAA5+E,OAAAyoE,EAAA,EAAAzoE,CAAgCg1B,IAEjDhW,EAAW,KACX8/D,EAAW,KAVMI,EAAAlqE,KAAA,GAAAkqE,EAAAjqE,KAAA,GAgBTwI,QAAQkD,IAAI,CACpBrd,EAAKxE,MAAMmf,KAAKC,IAAIihE,cACpBN,EAAaO,YAAY,CAACxtE,KAAMnH,MAlBf,QAAAs0E,EAAAG,EAAAloE,KAAAgoE,EAAAh/E,OAAA8qC,EAAA,EAAA9qC,CAAA++E,EAAA,GAcjB//D,EAdiBggE,EAAA,GAejBF,EAfiBE,EAAA,GAAAE,EAAAjqE,KAAA,iBAAAiqE,EAAAlqE,KAAA,GAAAkqE,EAAA7mB,GAAA6mB,EAAA,sBAwBjBlgE,IAAY8/D,EAxBK,CAAAI,EAAAjqE,KAAA,gBAAAiqE,EAAA5gE,OAAA,SAyBZhb,EAAKuU,iBAAiBvU,EAAKuU,iBAAiBmH,EAAS,GAAGxM,MAAMssE,GAAU,IAzB5D,eAAAI,EAAA5gE,OAAA,SA6BhBhb,EAAK4R,MAAM,IA7BK,yBAAAgqE,EAAAzpE,SAAAkpE,EAAA9/E,KAAA,cA/xEP,gBAAAwgF,EAAAC,GAAA,OAAAZ,EAAA/oE,MAAA9W,KAAA8E,YAAA,GAAA9E,KA+zElBgzE,uBA/zEkB,eAAA0N,EAAAv/E,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KA+zEO,SAAA8qE,EAAO5vD,EAAUkoC,EAAajjC,EAAkBplB,EAAUgwE,GAA1D,IAAAC,EAAA1gE,EAAA,OAAA0R,EAAAzyB,EAAA6W,KAAA,SAAA6qE,GAAA,cAAAA,EAAA3qE,KAAA2qE,EAAA1qE,MAAA,cAAA0qE,EAAA3qE,KAAA,EAAA2qE,EAAA1qE,KAAA,EASE3R,EAAKxE,MAAMmf,KAAKC,IAAIihE,cATtB,OASfngE,EATe2gE,EAAA3oE,MAWV0oE,EAAA9vD,EAAS4jB,SACjBq+B,uBADQl8D,MAAA+pE,EAAA,CACe5nB,GADf7yD,OAAAjF,OAAAyoE,EAAA,EAAAzoE,CAC+B60B,KACvCxtB,KAAK,CACJuK,KAAMkmD,EACN94C,aAIDgoB,GAAG,kBAAmB,SAAStlC,GAChC7C,KAAKmf,UAAL,yCAAA/Y,OAAwDvD,IACxD+9E,MACCG,KAAK,eAAgB,SAASC,EAAoBC,GACnDjhF,KAAKmf,UAAU,iCAAiC8hE,GAChDL,EAAiBK,KAxBEH,EAAA1qE,KAAA,gBAAA0qE,EAAA3qE,KAAA,EAAA2qE,EAAAtnB,GAAAsnB,EAAA,SA2BrBr8E,EAAK0a,UAAL2hE,EAAAtnB,IACA5oD,EAAS,KAADkwE,EAAAtnB,IA5Ba,yBAAAsnB,EAAAlqE,SAAA+pE,EAAA3gF,KAAA,YA/zEP,gBAAAkhF,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAZ,EAAA5pE,MAAA9W,KAAA8E,YAAA,GAAA9E,KA+1ElBuhF,0BAA4B,SAAAC,GAC1B,IAAK/8E,EAAKxE,MAAMmf,KAAKgjD,MAAMqf,YAAYD,GACrC,MAAM,IAAIE,MACR,gBAAgBt7E,OAAOo7E,EAAW,iCAGtC,IAAItnD,EAAIsnD,EAAUvkE,MAAM,EAAG,IACvBkd,EAAI,KAAK/zB,OAAOo7E,EAAUvkE,MAAM,GAAI,MACpCrV,EAAI,KAAKxB,OAAOo7E,EAAUvkE,MAAM,IAAK,MAGzC,OAFArV,EAAInD,EAAKxE,MAAMmf,KAAKgjD,MAAMuf,YAAY/5E,GACjC,CAAC,GAAI,IAAIgC,SAAShC,KAAIA,GAAK,IACzB,CACLsyB,EAAGA,EACHC,EAAGA,EACHvyB,EAAGA,IA72EW5H,KAi3ElB4hF,gCAAkC,SAACC,EAAO5lB,EAAS6lB,EAAmB7lC,GACpE,OAAO+lB,EAAc+f,aACnB,CAAC,UAAU,UAAU,UAAU,SAC/B,CAACF,EAAO5lC,EAAiBggB,EAAS+lB,mBAASF,MAp3E7B9hF,KAw3ElBiiF,oBAx3EkB,eAAAC,EAAA/gF,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAw3EI,SAAAssE,EAAOlpB,GAAP,IAAAmpB,EAAAC,EAAA,OAAAxwD,EAAAzyB,EAAA6W,KAAA,SAAAqsE,GAAA,cAAAA,EAAAnsE,KAAAmsE,EAAAlsE,MAAA,cACdgsE,EAAe39E,EAAKqH,gBAAgB,CAAC,UAAU,YAAY,aAD7Cw2E,EAAAlsE,KAAA,EAEF3R,EAAK4/B,YAAL,GAAAj+B,OAAoBg8E,EAAat1B,UAAUQ,OAA3C,iBAAAlnD,OAAiE6yD,EAAjE,WAAA7yD,OAAsFg8E,EAAarsD,OAAO63B,OAAQ,KAAK,CACvIvF,QAAQ,CACNk6B,YAAYH,EAAarsD,OAAOy3B,UAJhB,YAEd60B,EAFcC,EAAAnqE,QAQTkqE,EAAItyE,KARK,CAAAuyE,EAAAlsE,KAAA,eAAAksE,EAAA7iE,OAAA,SASX4iE,EAAItyE,MATO,cAAAuyE,EAAA7iE,OAAA,SAYb,MAZa,wBAAA6iE,EAAA1rE,SAAAurE,EAAAniF,SAx3EJ,gBAAAwiF,GAAA,OAAAN,EAAAprE,MAAA9W,KAAA8E,YAAA,GAAA9E,KAu4ElByiF,iBAv4EkB,eAAAC,EAAAvhF,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAu4EC,SAAA8sE,EAAO7sD,EAAaI,EAAWC,EAAa0rD,EAAMjxE,EAASgwE,GAA3D,IAAAgC,EAAA7xD,EAAA+wD,EAAA7oB,EAAAgD,EAAA4mB,EAAArB,EAAAsB,EAAA5oD,EAAAC,EAAAvyB,EAAA,OAAAiqB,EAAAzyB,EAAA6W,KAAA,SAAA8sE,GAAA,cAAAA,EAAA5sE,KAAA4sE,EAAA3sE,MAAA,UACX2a,EAAWtsB,EAAKovB,kBAAkBiC,GADvB,CAAAitD,EAAA3sE,KAAA,eAIfxF,EAAS,KAAK,sBAJCmyE,EAAAtjE,OAAA,UAKR,GALQ,UAQZsR,EAAS4jB,QAAQze,GARL,CAAA6sD,EAAA3sE,KAAA,eASfxF,EAAS,KAAK,oBATCmyE,EAAAtjE,OAAA,UAUR,GAVQ,cAaXqiE,GAAoBc,EAAA7xD,EAAS4jB,SAAQze,GAAjBpf,MAAA8rE,EAAAzhF,OAAAyoE,EAAA,EAAAzoE,CAAgCg1B,IAAc6sD,YAbvDD,EAAA5sE,KAAA,EAgBT8iD,EAAcx0D,EAAKxE,MAAM2L,QACzBqwD,EAAUx3D,EAAKxE,MAAM4rD,QAAQ+Z,QAAQ54D,IAAMvI,EAAKqH,gBAAgB,CAAC,UAAU,oBAC3E+2E,EAAgBp+E,EAAKm9E,gCAAgCC,EAAO5lB,EAAS6lB,EAAmB/wD,EAASkyD,UAlBxFF,EAAA3sE,KAAA,GAoBS3R,EAAKxE,MAAMmf,KAAKC,IAAI6jE,SAASC,KACnD,KAAON,EAAc5hE,SAAS,OAC9Bg4C,GAtBa,eAoBTuoB,EApBSuB,EAAA5qE,KAAA2qE,EAyBKr+E,EAAK88E,0BAA0BC,GAA3CtnD,EAzBO4oD,EAyBP5oD,EAAGC,EAzBI2oD,EAyBJ3oD,EAAGvyB,EAzBCk7E,EAyBDl7E,EAEdnD,EAAKgyB,0BAA0BX,EAAcI,EAAYC,EAAa/vB,OAAO,CAACy7E,EAAO3nD,EAAGC,EAAGvyB,IAAKgJ,EAAUgwE,GA3B3FmC,EAAAtjE,OAAA,UA6BR,GA7BQ,eAAAsjE,EAAA5sE,KAAA,GAAA4sE,EAAAvpB,GAAAupB,EAAA,SA+BfnyE,EAAS,KAADmyE,EAAAvpB,IA/BOupB,EAAAtjE,OAAA,UAgCR,GAhCQ,yBAAAsjE,EAAAnsE,SAAA+rE,EAAA3iF,KAAA,aAv4ED,gBAAAojF,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAf,EAAA5rE,MAAA9W,KAAA8E,YAAA,GAAA9E,KA26ElB0jF,8BA36EkB,eAAAC,EAAAxiF,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KA26Ec,SAAA+tE,EAAO9tD,EAAa+tD,EAAaz4B,EAAW04B,EAAS7D,GAArD,IAAAlvD,EAAAtnB,EAAA,OAAAooB,EAAAzyB,EAAA6W,KAAA,SAAA8tE,GAAA,cAAAA,EAAA5tE,KAAA4tE,EAAA3tE,MAAA,UACxB2a,EAAWtsB,EAAKovB,kBAAkBiC,GADV,CAAAiuD,EAAA3tE,KAAA,eAAA2tE,EAAAtkE,OAAA,UAIrB,GAJqB,cAO9Bqc,QAAQC,IAAI,YAAYhL,EAASkyD,SAASY,EAAazK,OAAO6G,GAAU6D,GAP1CC,EAAA3tE,KAAA,EAUb3R,EAAKxE,MAAM+jF,qBAAqBC,QAAQ,CACvD74B,aACAr7C,KAAK+zE,EACLn6E,MAAMk6E,EACN3f,GAAGnzC,EAASkyD,SACZiB,MAAM9K,OAAO6G,KAfe,cAUxBx2E,EAVwBs6E,EAAA5rE,KAAA4rE,EAAAtkE,OAAA,SAkBvBhW,GAlBuB,wBAAAs6E,EAAAntE,SAAAgtE,EAAA5jF,SA36Ed,gBAAAmkF,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAZ,EAAA7sE,MAAA9W,KAAA8E,YAAA,GAAA9E,KAg8ElBwkF,iCAh8EkB,eAAAC,EAAAtjF,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAg8EiB,SAAA6uE,EAAOC,EAAIC,EAASh0E,EAASgwE,GAA7B,IAAAnrD,EAAAovD,EAAAp7E,EAAAq7E,EAAA,OAAAjzD,EAAAzyB,EAAA6W,KAAA,SAAA8uE,GAAA,cAAAA,EAAA5uE,KAAA4uE,EAAA3uE,MAAA,cAE7Bqf,EAAkB,KAFWsvD,EAAA5uE,KAAA,EAAA4uE,EAAA3uE,KAAA,EAKN3R,EAAKxE,MAAM+jF,qBAAqBgB,sBAAsB,CAACL,MAAIC,aALrD,OAKzBC,EALyBE,EAAA5sE,KAM/Bsd,EAAkBovD,EAAWt3E,OAC7BuuB,QAAQC,IAAI,wBAAwBtG,GAPLsvD,EAAA3uE,KAAA,uBAAA2uE,EAAA5uE,KAAA,EAAA4uE,EAAAvrB,GAAAurB,EAAA,SAS/BjpD,QAAQC,IAAI,8BAAZgpD,EAAAvrB,IACA5oD,EAAS,MAAK,GAViBm0E,EAAAtlE,OAAA,UAWxB,GAXwB,WAc5BgW,EAd4B,CAAAsvD,EAAA3uE,KAAA,gBAe/B0lB,QAAQC,IAAI,0BACZnrB,EAAS,MAAK,GAhBiBm0E,EAAAtlE,OAAA,UAiBxB,GAjBwB,eAoB3BhW,EAAK,CACT0pE,OAAO,gBACP19C,mBAEFqG,QAAQC,IAAI,mCAAmCtG,GAC/CmrD,EAAiBn3E,GAGXq7E,EAAyBl3E,OAAOq3E,YAAY,WAChDxgF,EAAKxE,MAAMmf,KAAKC,IAAIuwD,sBAAsBn6C,EAAiB,SAACnW,EAAK2hE,GAC/DnlD,QAAQC,IAAI,mCAAmCtG,EAAgBnW,EAAI2hE,IAC/D3hE,GAAO2hE,IACTrzE,OAAOs3E,cAAcJ,GACrBr7E,EAAGwyB,UAAYglD,EACfx3E,EAAGrF,QAAUkb,GAAO2hE,EAAQ78E,OAAS,UAAY,QAEjDwM,EAASnH,EAAG6V,GAE4B,oBAA7B1R,OAAOu3E,mBAChBv3E,OAAOu3E,kBAAkB17E,EAAGgsB,EAAgBhsB,EAAGrF,OAAO,UAI3D,KA3C8B2gF,EAAAtlE,OAAA,UA6C1B,GA7C0B,yBAAAslE,EAAAnuE,SAAA8tE,EAAA1kF,KAAA,YAh8EjB,gBAAAolF,EAAAC,EAAAC,EAAAC,GAAA,OAAAd,EAAA3tE,MAAA9W,KAAA8E,YAAA,GAAA9E,KAg/ElBwlF,+BAh/EkB,eAAAC,EAAAtkF,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAg/Ee,SAAA6vE,EAAO5vD,EAAagsD,EAAkBlxE,EAASgwE,GAA/C,IAAA7vD,EAAAkoC,EAAA4oB,EAAA5lB,EAAA4mB,EAAArB,EAAAmE,EAAAzrD,EAAAC,EAAAvyB,EAAA,OAAAiqB,EAAAzyB,EAAA6W,KAAA,SAAA2vE,GAAA,cAAAA,EAAAzvE,KAAAyvE,EAAAxvE,MAAA,UACzB2a,EAAWtsB,EAAKovB,kBAAkBiC,GADT,CAAA8vD,EAAAxvE,KAAA,eAI7BxF,EAAS,KAAK,sBAJeg1E,EAAAnmE,OAAA,UAKtB,GALsB,cAAAmmE,EAAAzvE,KAAA,EASvB8iD,EAAcx0D,EAAKxE,MAAM2L,QATFg6E,EAAAxvE,KAAA,EAUT2a,EAAS4jB,QAAQkxC,SAAS5sB,GAAa6sB,OAV9B,cAUvBjE,EAVuB+D,EAAAztE,KAWvB8jD,EAAUx3D,EAAKxE,MAAM4rD,QAAQ+Z,QAAQ54D,IAAMvI,EAAKqH,gBAAgB,CAAC,UAAU,oBAC3E+2E,EAAgBp+E,EAAKm9E,gCAAgCC,EAAO5lB,EAAS6lB,EAAmB/wD,EAASkyD,UAZ1E2C,EAAAxvE,KAAA,GAcL3R,EAAKxE,MAAMmf,KAAKC,IAAI6jE,SAASC,KACnD,KAAON,EAAc5hE,SAAS,OAC9Bg4C,GAhB2B,eAcvBuoB,EAduBoE,EAAAztE,KAAAwtE,EAmBTlhF,EAAK88E,0BAA0BC,GAA3CtnD,EAnBqByrD,EAmBrBzrD,EAAGC,EAnBkBwrD,EAmBlBxrD,EAAGvyB,EAnBe+9E,EAmBf/9E,EAEdnD,EAAKgyB,0BAA0BX,EAAc,yBAA0B,CAACmjC,EAAa6oB,EAAmB5nD,EAAGC,EAAGvyB,GAAIgJ,EAAUgwE,GArB/FgF,EAAAnmE,OAAA,UAuBtB,GAvBsB,eAAAmmE,EAAAzvE,KAAA,GAAAyvE,EAAApsB,GAAAosB,EAAA,SAyB7B9pD,QAAQ/d,MAAR6nE,EAAApsB,IACA5oD,EAAS,KAADg1E,EAAApsB,IA1BqBosB,EAAAnmE,OAAA,UA2BtB,GA3BsB,yBAAAmmE,EAAAhvE,SAAA8uE,EAAA1lF,KAAA,aAh/Ef,gBAAA+lF,EAAAC,EAAAC,EAAAC,GAAA,OAAAT,EAAA3uE,MAAA9W,KAAA8E,YAAA,GAAA9E,KA+gFlBmmF,kBA/gFkB,eAAAC,EAAAjlF,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KA+gFE,SAAAwwE,EAAOpqC,EAAiBqqC,EAAWpqC,EAAOqqC,EAASxlF,EAAO8gF,EAAO2E,EAAUvqB,GAA3E,IAAAwN,EAAAgd,EAAA1hC,EAAA2hC,EAAA51C,EAAA/gC,EAAA,OAAA8hB,EAAAzyB,EAAA6W,KAAA,SAAA0wE,GAAA,cAAAA,EAAAxwE,KAAAwwE,EAAAvwE,MAAA,eACFpR,IAAZi3D,EADc,CAAA0qB,EAAAvwE,KAAA,eAAAuwE,EAAAvwE,KAAA,EAEK3R,EAAKxE,MAAMmf,KAAKC,IAAIunE,aAFzB,OAEVnd,EAFUkd,EAAAxuE,KAGhB8jD,EAAU3vD,SAASm9D,GAHH,cAMZgd,EAAS,CACb,CAAEzgF,KAAM,OAAQ8I,KAAM,UACtB,CAAE9I,KAAM,UAAW8I,KAAM,UACzB,CAAE9I,KAAM,UAAW8I,KAAM,WACzB,CAAE9I,KAAM,oBAAqB8I,KAAM,YAG/Bi2C,EAAS,CACb,CAAE/+C,KAAM,QAAS8I,KAAM,WACvB,CAAE9I,KAAM,UAAW8I,KAAM,WACzB,CAAE9I,KAAM,QAAS8I,KAAM,WACvB,CAAE9I,KAAM,QAAS8I,KAAM,WACvB,CAAE9I,KAAM,WAAY8I,KAAM,YAGtB43E,EAAa,CACjB1nC,QAAS,IACTh5C,KAAMsgF,EACNrqB,QAASA,EACT4qB,kBAAmB5qC,GAGfnL,EAAU,CACdoL,QACAqqC,UACAxlF,QACA8gF,QACA2E,YAGIz2E,EAAOxE,KAAKC,UAAU,CAC1Bs7E,MAAO,CACLC,aAAcN,EACdO,OAAQjiC,GAEVkiC,YAAa,SACbR,OAAQC,EACR51C,QAASA,IA3CO61C,EAAAlnE,OAAA,SA8CX,IAAIb,QAAQ,SAACI,EAASC,GAC3Bxa,EAAKxE,MAAMmf,KAAK0mD,gBAAgBt9D,KAAK,CACnC0+E,QAAS,MACTl6E,GAAItC,KAAKwwB,MAAMja,WAAWkmE,UAAU,GACpChU,OAAQ,uBACRp9C,OAAQ,CAACmmB,EAAOnsC,GAChBgD,KAAMmpC,GACL,SAACn+B,EAAOskE,GACT,GAAItkE,EACF,OAAOkB,EAAOlB,GAGhBiB,EAAQqjE,EAAI5Y,aA1DE,yBAAAkd,EAAA/vE,SAAAyvE,EAAArmF,SA/gFF,gBAAAonF,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAvB,EAAAtvE,MAAA9W,KAAA8E,YAAA,GAAA9E,KA8kFlBs2B,WA9kFkB,eAAAsxD,EAAAzmF,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KA8kFL,SAAAgyE,EAAOC,EAAkBC,EAAQC,GAAjC,IAAAC,EAAAC,EAAAC,EAAA1e,EAAAxN,EAAA8qB,EAAAqB,EAAAnuD,EAAA4nD,EAAAmF,EAAA/hC,EAAAshC,EAAAM,EAAAn3B,EAAA+2B,EAAA31C,EAAAoL,EAAAsqC,EAAAzlF,EAAAgP,EAAAs4E,EAAAvjF,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAAqyE,GAAA,cAAAA,EAAAnyE,KAAAmyE,EAAAlyE,MAAA,UAAsD6xE,EAAtDI,EAAAtjF,OAAA,QAAAC,IAAAqjF,EAAA,GAAAA,EAAA,GAAiE,EACtEH,EAAezjF,EAAKovB,kBAAkBi0D,GACtCK,EAAkB1jF,EAAKovB,kBAAkBm0D,GAE1CE,GAAiBC,EAJX,CAAAG,EAAAlyE,KAAA,eAAAkyE,EAAA7oE,OAAA,UAKF,GALE,cAAA6oE,EAAAlyE,KAAA,EAQU3R,EAAKxE,MAAMmf,KAAKC,IAAIkpE,IAAIC,QARlC,UAQL/e,EARK6e,EAAAnwE,KASP8jD,EAAU3vD,SAASm9D,GAEjBsd,EAAe,CACnB,CAAE/gF,KAAM,OAAQ8I,KAAM,UACtB,CAAE9I,KAAM,UAAW8I,KAAM,UACzB,CAAE9I,KAAM,UAAW8I,KAAM,WACzB,CAAE9I,KAAM,oBAAqB8I,KAAM,YAG/Bs5E,EAAe3jF,EAAKqH,gBAAgB,CAAC,SAASg8E,IAI9C7tD,EAASjwB,KAAKw9B,OAAM,IAAI98B,MAAOiN,UAAY,IAAO,OAC5CywE,EAAa3zC,YAvBd,CAAA6zC,EAAAlyE,KAAA,gBAAAkyE,EAAAlyE,KAAA,GAuBkC8xE,EAAavzC,QAAQyzC,EAAa3zC,aAAaszC,GAAQjC,OAvBzF,QAAAwC,EAAA9uB,GAAA8uB,EAAAnwE,KAAAmwE,EAAAlyE,KAAA,iBAAAkyE,EAAA9uB,GAuBkG,KAvBlG,QAuBPqoB,EAvBOyG,EAAA9uB,GAwBPyuB,EAAW,IACbpG,EAAQv1E,SAASu1E,GAAOv1E,SAAS27E,IAEnCpG,EAAQA,EAAM5gE,WAER+lE,EAASoB,EAAat5E,KACtBm2C,EAAamjC,EAAanjC,WAE1BshC,EAAU4B,EAAgBlF,SAC1B4D,EAAoBqB,EAAajF,SAEjCvzB,EAAa04B,EAAapiF,MAAQ8hF,EAElCrB,EAAS,CACbxqB,UACAj2D,KAAM0pD,EACNm3B,oBACA7nC,QAASopC,EAAappC,QAAQ/9B,YAAc,KAG1C6vB,EAAU,GA5CHw3C,EAAA9Y,GA8CHvqB,EA9CGqjC,EAAAlyE,KA+CJ,OA/CIkyE,EAAA9Y,GAAA,2BAgDDtzB,EAAQ6rC,EACRvB,EAAWvsD,EAEXl5B,EAAQ0D,EAAK21B,aAAa31B,EAAK4R,MAAM,GAAGshC,IAAI,KAAKphC,MAAM,IAC7Du6B,EAAU,CACR/vC,QACA8gF,QACA3lC,QACAqqC,UACAC,YAzDK8B,EAAA7oE,OAAA,2BA6DPqxB,EAAU,CACRi3C,SACAlG,QACA5nD,SACAssD,UACAkC,SAAS,GAlEJH,EAAA7oE,OAAA,2BAuEL1P,EAAOxE,KAAKC,UAAU,CAC1Bi7E,SACA31C,UACAg2C,MAAO,CACLE,SACAD,gBAEFE,YAAa,WA9EJqB,EAAA7oE,OAAA,SAmFJ,IAAIb,QAAQ,SAACI,EAASC,GAC3Bxa,EAAKxE,MAAMmf,KAAK0mD,gBAAgBt9D,KAAK,CACnCuK,KAAMg1E,EACNb,QAAS,MACTnxD,OAAQ,CAACgyD,EAAQh4E,GACjBojE,OAAQ,uBACRnmE,GAAItC,KAAKwwB,MAAMja,WAAWkmE,UAAU,IACnC,SAACppE,EAAO2qE,GACT,GAAI3qE,GAAU2qE,GAAYA,EAAS3qE,MACjC,OAAOiB,EAAQ,MACV,GAAI0pE,GAAYA,EAASjf,OAAQ,CACtC,IAAMzzC,EAAmBvxB,EAAK88E,0BAA0BmH,EAASjf,QAGjE,OAFAzzC,EAAiB6rD,MAAQA,EACzB7rD,EAAiBiE,OAASA,EACnBjb,EAAQgX,SAjGV,yBAAAsyD,EAAA1xE,SAAAixE,EAAA7nF,SA9kFK,gBAAA2oF,EAAAC,EAAAC,GAAA,OAAAjB,EAAA9wE,MAAA9W,KAAA8E,YAAA,GAAA9E,KAqrFlByiF,iBArrFkB,eAAAqG,EAAA3nF,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAqrFC,SAAAkzE,EAAOjB,EAAkBC,EAAQC,EAAqB9xD,EAAYC,EAAcvlB,EAAUgwE,GAA1F,IAAAsH,EAAAC,EAAAnyD,EAAAiE,EAAA4nD,EAAA3nD,EAAAC,EAAAvyB,EAAAohF,EAAAC,EAAAC,EAAAnzD,EAAAozD,EAAArkF,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAAmzE,GAAA,cAAAA,EAAAjzE,KAAAizE,EAAAhzE,MAAA,UAAA+yE,EAAApkF,OAAA,QAAAC,IAAAmkF,EAAA,GAAAA,EAAA,GAA4H,KAEvIjB,EAAezjF,EAAKovB,kBAAkBi0D,GACtCK,EAAkB1jF,EAAKovB,kBAAkBm0D,GAE1CE,GAAiBC,EALL,CAAAiB,EAAAhzE,KAAA,eAMfxF,EAAS,KAAK,sBANCw4E,EAAA3pE,OAAA,UAOR,GAPQ,cAAA2pE,EAAAhzE,KAAA,EAUc3R,EAAK6xB,WAAWwxD,EAAkBC,EAAQC,GAVxD,QAUXhyD,EAVWozD,EAAAjxE,OAaP8hB,EAA2BjE,EAA3BiE,OAAQ4nD,EAAmB7rD,EAAnB6rD,MAAO3nD,EAAYlE,EAAZkE,EAAGC,EAASnE,EAATmE,EAAGvyB,EAAMouB,EAANpuB,EACvBohF,EAAe,CAAC/uD,EAAQryB,EAAGsyB,EAAGC,GAE9B8uD,EAAYd,EAAgBkB,eAAen+D,KAAM,SAAAo+D,GAAC,OAAIA,EAAEtjF,OAASkwB,IACjEgzD,GAAWD,GAAYA,EAAU3tC,OAAOpwB,KAAM,SAAA/gB,GAAC,MAAe,UAAXA,EAAEnE,QACtD6I,MAAMvC,SAASu1E,KAAWqH,GAC7BF,EAAaO,QAAQ1H,GAEjB9rD,EAASI,EAAa/vB,OAAO4iF,GACnCvkF,EAAKgyB,0BAA0BuxD,EAAqB9xD,EAAYH,EAAQnlB,EAAUgwE,IAElFhwE,EAAS,KAAK,oBAxBC,yBAAAw4E,EAAAxyE,SAAAmyE,EAAA/oF,SArrFD,gBAAAwpF,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAhB,EAAAhyE,MAAA9W,KAAA8E,YAAA,GAAA9E,KAitFlB+pF,aAjtFkB,eAAAC,EAAA7oF,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAitFH,SAAAo0E,EAAOn0D,EAAammB,EAAgB6lC,EAAkBlxE,EAASgwE,GAA/D,IAAAmG,EAAAmD,EAAAjuB,EAAAyqB,EAAA31D,EAAAkoC,EAAA4oB,EAAA/wC,EAAAq5C,EAAA,OAAAt4D,EAAAzyB,EAAA6W,KAAA,SAAAm0E,GAAA,cAAAA,EAAAj0E,KAAAi0E,EAAAh0E,MAAA,cAEP2wE,EAAe,CACnB,CAAE/gF,KAAM,OAAQ8I,KAAM,UACtB,CAAE9I,KAAM,UAAW8I,KAAM,UACzB,CAAE9I,KAAM,UAAW8I,KAAM,WACzB,CAAE9I,KAAM,oBAAqB8I,KAAM,YAG/Bo7E,EAAkB,CACtB,CAAElkF,KAAM,QAAS8I,KAAM,WACvB,CAAE9I,KAAM,OAAQ8I,KAAM,WACtB,CAAE9I,KAAM,oBAAqB8I,KAAM,UAZxBs7E,EAAAh0E,KAAA,EAeS3R,EAAKxE,MAAMmf,KAAKC,IAAIunE,aAf7B,UAeP3qB,EAfOmuB,EAAAjyE,KAiBPuuE,EAAa,CACjBzqB,UACAjd,QAAS,IACTh5C,KAAM8vB,EACN+wD,kBAAmB5qC,GAGflrB,EAAWtsB,EAAKovB,kBAAkBiC,GAxB3B,CAAAs0D,EAAAh0E,KAAA,gBA2BXxF,EAAS,KAAK,sBA3BHw5E,EAAA3qE,OAAA,UA4BJ,GA5BI,eA+BTw5C,EAAcx0D,EAAKxE,MAAM2L,QA/BhBw+E,EAAAh0E,KAAA,GAgCK2a,EAAS4jB,QAAQkxC,SAAS5sB,GAAa6sB,OAhC5C,QAgCTjE,EAhCSuI,EAAAjyE,MAiCT24B,EAAU,IACN+wC,MAAQA,EAChB/wC,EAAQ/9B,KAAOkmD,EACfnoB,EAAQgxC,kBAAoBA,EAEtBqI,EAAa5+E,KAAKC,UAAU,CAChCs7E,MAAO,CACLC,eACAmD,mBAEFzD,OAAQC,EACRO,YAAa,kBACbn2C,YAKFrsC,EAAKxE,MAAMmf,KAAK0mD,gBAAgBt9D,KAC9B,CACE0+E,QAAS,MACTl6E,GAAI,aACJ+F,KAAMkmD,EACNka,OAAQ,uBACRp9C,OAAQ,CAACkjC,EAAakxB,IAExB,SAACpsE,EAAO2qE,GACN,GAAI3qE,GAAU2qE,GAAYA,EAAS3qE,MACjC,OAAOnN,EAAS,KAAKmN,GAChB,GAAI2qE,GAAYA,EAASjf,OAAQ,CACtC,IAAMzzC,EAAmBvxB,EAAK88E,0BAA0BmH,EAASjf,QACzDvvC,EAAYlE,EAAZkE,EAAGC,EAASnE,EAATmE,EAAGvyB,EAAMouB,EAANpuB,EAEdnD,EAAKgyB,0BAA0BX,EAAc,yBAA0B,CAACmjC,EAAa6oB,EAAmB5nD,EAAGC,EAAGvyB,GAAIgJ,EAAUgwE,MAjErH,yBAAAwJ,EAAAxzE,SAAAqzE,EAAAjqF,SAjtFG,gBAAAqqF,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAT,EAAAlzE,MAAA9W,KAAA8E,YAAA,GAAA9E,KAwxFlBk3B,mBAxxFkB,eAAAwzD,EAAAvpF,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAwxFG,SAAA80E,EAAO70D,EAAa80D,EAAaC,GAAjC,IAAAC,EAAAC,EAAAt0E,EAAAu0E,EAAA,OAAAn5D,EAAAzyB,EAAA6W,KAAA,SAAAg1E,GAAA,cAAAA,EAAA90E,KAAA80E,EAAA70E,MAAA,cAAA60E,EAAA70E,KAAA,EAITwI,QAAQkD,IAAI,CACpBrd,EAAKu4B,gBAAgBlH,EAAa+0D,GAAW,GAC7CpmF,EAAKymF,aAAap1D,EAAa80D,EAAaC,KAN3B,cAAAC,EAAAG,EAAA9yE,KAAA4yE,EAAA5pF,OAAA8qC,EAAA,EAAA9qC,CAAA2pF,EAAA,GAEjBr0E,EAFiBs0E,EAAA,GAGjBC,EAHiBD,EAAA,GAQnBtmF,EAAK0a,UAAU,qBAAqB2W,EAAarxB,EAAK4R,MAAM20E,GAAWjgF,UAAUtG,EAAK4R,MAAMI,GAAS1L,UAAWigF,GAAavmF,EAAK4R,MAAM20E,GAAW19C,IAAI7oC,EAAK4R,MAAMI,KAR/Iw0E,EAAAxrE,OAAA,SASZurE,GAAavmF,EAAK4R,MAAM20E,GAAW19C,IAAI7oC,EAAK4R,MAAMI,KATtC,wBAAAw0E,EAAAr0E,SAAA+zE,EAAA3qF,SAxxFH,gBAAAmrF,EAAAC,EAAAC,GAAA,OAAAX,EAAA5zE,MAAA9W,KAAA8E,YAAA,GAAA9E,KAmyFlBkrF,aAnyFkB,eAAAI,EAAAnqF,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAmyFH,SAAA01E,EAAOz1D,EAAa80D,EAAaC,GAAjC,OAAAh5D,EAAAzyB,EAAA6W,KAAA,SAAAu1E,GAAA,cAAAA,EAAAr1E,KAAAq1E,EAAAp1E,MAAA,UACR0f,GAAiB80D,GAAiBC,EAD1B,CAAAW,EAAAp1E,KAAA,eAAAo1E,EAAA/rE,OAAA,UAEJ,GAFI,cAIbhb,EAAK0a,UAAU,eAAe2W,EAAa80D,EAAaC,GAJ3CW,EAAAp1E,KAAA,EAKA3R,EAAKq1B,oBAChBhE,EAAc,YAAa,CAAC+0D,EAAYD,IAN7B,cAAAY,EAAA/rE,OAAA,SAAA+rE,EAAArzE,MAAA,wBAAAqzE,EAAA50E,SAAA20E,EAAAvrF,SAnyFG,gBAAAyrF,EAAAC,EAAAC,GAAA,OAAAL,EAAAx0E,MAAA9W,KAAA8E,YAAA,GAAA9E,KA4yFlBy2B,0BAA4B,SAACX,EAAaI,EAAWH,EAAOnlB,EAASgwE,EAAiBgL,GACpFnnF,EAAKxE,MAAMw2B,0BAA0BX,EAAcI,EAAYH,EAAQ,KAAM,SAACtsB,GACpD,oBAAbmH,GACTA,EAASnH,IAEV,SAACA,GAC8B,oBAArBm3E,GACTA,EAAiBn3E,IAElB,KAAMmiF,IArzFO5rF,KAuzFlB6rF,aAAe,SAAC/1D,EAAariB,EAAQ7C,EAASgwE,GAC5Cn8E,EAAKxE,MAAMw2B,0BAA0BX,EAAc,UAAW,CAC5DriB,EACAhP,EAAKxE,MAAMmf,KAAKgjD,MAAM0pB,iBAAiB,MACvC,KAAK,SAACriF,GACkB,oBAAbmH,GACTA,EAASnH,IAEV,SAACA,GAC8B,oBAArBm3E,GACTA,EAAiBn3E,MAj0FLzJ,KAq0FlB01B,YAAc,SAACI,EAAariB,EAAQ7C,EAASgwE,GAC3Cn8E,EAAKxE,MAAMw2B,0BAA0BX,EAAc,UAAW,CAC5DriB,EACAhP,EAAKxE,MAAMmf,KAAKgjD,MAAM0pB,iBAAiB,OACvC,KAAK,SAACriF,GACkB,oBAAbmH,GACTA,EAASnH,IAEV,SAACA,GAC8B,oBAArBm3E,GACTA,EAAiBn3E,MA/0FLzJ,KAm1FlB+rF,eAn1FkB,eAAAC,EAAA7qF,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAm1FD,SAAAo2E,EAAOC,EAAMviF,EAAMU,EAAYuB,GAA/B,IAAAy7C,EAAA8kC,EAAAt+D,EAAA0iB,EAAA67C,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA9rD,EAAAlqB,EAAAi2E,EAAAzrB,EAAA7e,EAAAuqC,EAAAxhC,EAAAyhC,EAAAC,EAAAC,EAAAnnD,EAAAonD,EAAAC,EAAAtiD,EAAAuiD,EAAAC,EAAAC,EAAAC,EAAA33E,EAAAkxD,GAAA1wD,GAAAo3E,GAAAC,GAAAC,GAAAC,GAAAhjD,GAAAijD,GAAAC,GAAA9xD,GAAA/H,GAAAzc,GAAAu2E,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAh6E,GAAAi6E,GAAAC,GAAAprF,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAAk6E,GAAA,cAAAA,EAAAh6E,KAAAg6E,EAAA/5E,MAAA,OAAuCixC,IAAvC6oC,GAAAnrF,OAAA,QAAAC,IAAAkrF,GAAA,KAAAA,GAAA,GAAyD/D,EAAzD+D,GAAAnrF,OAAA,QAAAC,IAAAkrF,GAAA,IAAAA,GAAA,GAEXriE,EAAS,KACP0iB,EAAY9rC,EAAKqH,gBAAgB,CAAC,cAGlCsgF,EAAe3nF,EAAKqH,gBAAgB,CAAC,aAAarH,EAAKxE,MAAM6X,mBAC/DuvC,GAAgB+kC,GAAqD,qBAA9BA,EAAa/kC,eACtDA,EAAe+kC,EAAa/kC,cAI1BglC,EAA0B,KAC1B5nF,EAAKxE,MAAM6X,kBAAoBrT,EAAKxE,MAAMmK,eACtCkiF,EAAiB7nF,EAAKxE,MAAM2oC,oBAAoBnkC,EAAKxE,MAAM6X,kBAAkBrT,EAAKxE,MAAMmK,mBAE5FiiF,EAA0B,IACFC,EAAe3iF,OAAS2iF,GAExCnrF,OAAOqF,KAAK+pC,GAAW3mC,SAASD,MAC1C0iF,EAA0B,IACF1iF,GAASU,GArBpB8lF,EAAA32B,GAwBP0yB,EAxBOiE,EAAA/5E,KAyBR,oBAzBQ+5E,EAAA32B,GAAA,GA4CR,sBA5CQ22B,EAAA32B,GAAA,GAuDR,aAvDQ22B,EAAA32B,GAAA,GA0DR,qBA1DQ22B,EAAA32B,GAAA,GA6DR,2BA7DQ22B,EAAA32B,GAAA,GAiER,kCAjEQ22B,EAAA32B,GAAA,GAyFR,iBAzFQ22B,EAAA32B,GAAA,GAmGR,qBAnGQ22B,EAAA32B,GAAA,GA0GR,SA1GQ22B,EAAA32B,GAAA,GAiHR,0BAjHQ22B,EAAA32B,GAAA,GAuIR,qBAvIQ22B,EAAA32B,GAAA,GAuKR,sBAvKQ22B,EAAA32B,GAAA,IA2LR,QA3LQ22B,EAAA32B,GAAA,IA4MR,QA5MQ22B,EAAA32B,GAAA,IAgOR,WAhOQ22B,EAAA32B,GAAA,IAgPR,eAhPQ22B,EAAA32B,GAAA,IA6PR,qBA7PQ22B,EAAA32B,GAAA,IAmQR,eAnQQ22B,EAAA32B,GAAA,IA0QR,eA1QQ22B,EAAA32B,GAAA,IA0RR,QA1RQ22B,EAAA32B,GAAA,IA6RR,iBA7RQ22B,EAAA32B,GAAA,IA2SR,qBA3SQ22B,EAAA32B,GAAA,IAiTR,6BAjTQ22B,EAAA32B,GAAA,IAsUR,sBAtUQ22B,EAAA32B,GAAA,IAgWR,kBAhWQ22B,EAAA32B,GAAA,IAgXR,aAhXQ22B,EAAA32B,GAAA,6BAAA22B,EAAA/5E,KAAA,GA8BDwI,QAAQkD,IAAI,CACpBrd,EAAK+hE,sBACL/hE,EAAK4iE,oBAAoB,GAAGz7D,GAC5BnH,EAAK2rF,qBAAqBxkF,GAAQ,KAjCzB,eAAA2gF,EAAA4D,EAAAh4E,KAAAq0E,EAAArrF,OAAA8qC,EAAA,EAAA9qC,CAAAorF,EAAA,GA2BTE,EA3BSD,EAAA,GA4BTE,EA5BSF,EAAA,GA6BTG,EA7BSH,EAAA,GAoCPE,GAAoBC,IACtB9+D,EAASppB,EAAK4R,MAAMs2E,GAAmBh5E,MAAM+4E,GACzCD,IACF5+D,EAASA,EAAOtX,MAAMsX,EAAOla,MAAM84E,MAvC5B0D,EAAA1wE,OAAA,4BAAA0wE,EAAA/5E,KAAA,GA6C2CwI,QAAQkD,IAAI,CAChErd,EAAKsnF,eAAe,kBAAkBpiF,EAAMU,EAAYuB,GACxDnH,EAAKsnF,eAAe,yBAAyBpiF,EAAMU,EAAYuB,KA/CtD,eAAAghF,EAAAuD,EAAAh4E,KAAA00E,EAAA1rF,OAAA8qC,EAAA,EAAA9qC,CAAAyrF,EAAA,GA6CNE,EA7CMD,EAAA,GA6CWE,EA7CXF,EAAA,GAkDPC,GAAoBC,GAA0BD,EAAiB3zE,GAAG,IAAM4zE,EAAuB5zE,GAAG,KACpG0U,EAASk/D,EAAuB/rE,IAAI8rE,GAAkBv2E,MAAM,GAAG5C,MAAM,MAnD5Dw8E,EAAA1wE,OAAA,4BAAA0wE,EAAA/5E,KAAA,GAwDI3R,EAAK4rF,cAxDT,eAwDXxiE,EAxDWsiE,EAAAh4E,KAAAg4E,EAAA1wE,OAAA,4BAAA0wE,EAAA/5E,KAAA,GA2DI3R,EAAK+hE,sBA3DT,eA2DX34C,EA3DWsiE,EAAAh4E,KAAAg4E,EAAA1wE,OAAA,4BAAA0wE,EAAA/5E,KAAA,GA8DI3R,EAAK6rF,6BAA6B1kF,GA9DtC,eA8DXiiB,EA9DWsiE,EAAAh4E,KAAAg4E,EAAA1wE,OAAA,4BAAA0wE,EAAA/5E,KAAA,GAsEDwI,QAAQkD,IAAI,CACpBrd,EAAKsnF,eAAe,WAAWpiF,EAAMU,EAAYuB,GACjDnH,EAAKsnF,eAAe,kBAAkBpiF,EAAMU,EAAYuB,GACxDnH,EAAKsnF,eAAe,yBAAyBpiF,EAAMU,EAAYuB,KAzEtD,eAAAohF,EAAAmD,EAAAh4E,KAAA80E,EAAA9rF,OAAA8qC,EAAA,EAAA9qC,CAAA6rF,EAAA,GAmETE,EAnESD,EAAA,GAoETE,EApESF,EAAA,GAqETG,EArESH,EAAA,GA4EPI,EAA4B,KAE5BD,GAA+BF,GAAYC,IACvCG,EAAiBH,EAAgBx5E,MAAMu5E,EAASlsE,IAAI,MAC1DqsE,EAA4BD,EAA4B92E,KAAKg3E,IAI/Dz/D,EAAS,CACPw/D,4BACAD,+BAtFS+C,EAAA1wE,OAAA,4BAAA0wE,EAAA/5E,KAAA,GA0FkCwI,QAAQkD,IAAI,CACvDrd,EAAKsnF,eAAe,aAAapiF,EAAMU,EAAYuB,GAAQ,GAC3DnH,EAAKsnF,eAAe,oBAAoBpiF,EAAMU,EAAYuB,GAAQ,KA5FzD,eAAA2hF,EAAA4C,EAAAh4E,KAAAq1E,EAAArsF,OAAA8qC,EAAA,EAAA9qC,CAAAosF,EAAA,GA0FNE,EA1FMD,EAAA,GA0FME,EA1FNF,EAAA,GA+FPC,GAAeC,GAAsBD,EAAYt0E,GAAG,KACtD0U,EAAS6/D,EAAmB1sE,IAAIysE,GAAal3E,MAAM,GAAG5C,MAAM,MAhGnDw8E,EAAA1wE,OAAA,4BAAA0wE,EAAA/5E,KAAA,GAoGoB3R,EAAKsnF,eAAe,mBAAmBpiF,EAAMU,EAAYuB,GApG7E,eAoGLg2B,EApGKuuD,EAAAh4E,QAsGHT,EAAgBpL,SAAS5B,KAAKwwB,MAAM,KAC1CrN,GAAUnW,EAAckqB,GAAkB,OAvGjCuuD,EAAA1wE,OAAA,yBA2GPte,OAAOqF,KAAK+pC,GAAW3mC,SAASD,GA3GzB,CAAAwmF,EAAA/5E,KAAA,gBAAA+5E,EAAA/5E,KAAA,GA4GM3R,EAAK8rF,gBAAgB5mF,EAAO0iF,GA5GlC,QA4GTx+D,EA5GSsiE,EAAAh4E,KAAAg4E,EAAA/5E,KAAA,wBAAA+5E,EAAA/5E,KAAA,GA8GM3R,EAAK+rF,aAAanmF,EAAYg9C,GA9GpC,QA8GTx5B,EA9GSsiE,EAAAh4E,KAAA,eAAAg4E,EAAA1wE,OAAA,qBAAA0wE,EAAA3gB,GAkHH7lE,EAlHGwmF,EAAA/5E,KAmHJ,SAnHI+5E,EAAA3gB,GAAA,GAsHJ,YAtHI2gB,EAAA3gB,GAAA,GAyHJ,SAzHI2gB,EAAA3gB,GAAA,2BAAA2gB,EAAA/5E,KAAA,GAoHQ3R,EAAKgsF,wBAAwB7kF,EAAQygF,GApH7C,eAoHPx+D,EApHOsiE,EAAAh4E,KAAAg4E,EAAA1wE,OAAA,2BAAA0wE,EAAA/5E,KAAA,GAuHQ3R,EAAKisF,2BAA2B9kF,EAAQygF,GAvHhD,eAuHPx+D,EAvHOsiE,EAAAh4E,KAAAg4E,EAAA1wE,OAAA,2BA0HDyiD,EAAez9D,EAAKksF,kBA1HnBR,EAAA/5E,KAAA,GA2HQ8rD,EAAa9B,oBAAoBx0D,EAAQygF,GA3HjD,eA2HPx+D,EA3HOsiE,EAAAh4E,KAAAg4E,EAAA1wE,OAAA,2BAAA0wE,EAAA1wE,OAAA,2BAgIPoO,IAAWppB,EAAK4R,MAAMwX,GAAQhf,UAChCgf,EAASppB,EAAK4R,MAAMwX,GAAQ7M,IAAI,SAE9B6M,EAASppB,EAAK28D,qBAAqBvzC,EAAOxjB,EAAYq7C,sBAAsBr7C,EAAYo7C,mBAnIjF0qC,EAAA1wE,OAAA,4BAwILyiD,EAAez9D,EAAKksF,kBACpBttC,EAAY5+C,EAAKqH,gBAAgB,CAAC,aAAa,QAAQ,cACvD8hF,EAAiBnpF,EAAKqH,gBAAgB,CAAC,YAAYu3C,IA1I9C8sC,EAAA/5E,KAAA,GA2II8rD,EAAavC,SAASt1D,EAAY08B,KAAKtzB,SA3I3C,aA2IXoa,EA3IWsiE,EAAAh4E,MAAA,CAAAg4E,EAAA/5E,KAAA,UA+ITyX,EAASppB,EAAKuU,iBAAiB6U,EAAO+/D,EAAerjF,UAE/C6hD,EAAgB3nD,EAAK4R,MAAM5R,EAAKqH,gBAAgB,CAAC,UAAU,mBAjJxDqkF,EAAAngB,GAkJD4d,EAAeloC,sBAlJdyqC,EAAA/5E,KAmJF,QAnJE+5E,EAAAngB,GAAA,IAuJF,SAvJEmgB,EAAAngB,GAAA,IA2JF,UA3JEmgB,EAAAngB,GAAA,IA+JF,SA/JEmgB,EAAAngB,GAAA,8BAoJC6d,EAAezhC,EAAcprC,IAAI,YACvC6M,EAASA,EAAOla,MAAMk6E,GArJjBsC,EAAA1wE,OAAA,6BAwJCquE,EAAgB1hC,EAAcprC,IAAI,SACxC6M,EAASA,EAAOla,MAAMm6E,GAzJjBqC,EAAA1wE,OAAA,6BA4JCsuE,EAAiB3hC,EAAcprC,IAAI,IACzC6M,EAASA,EAAOla,MAAMo6E,GA7JjBoC,EAAA1wE,OAAA,6BAgKLoO,EAASA,EAAOla,MAAMy4C,GAhKjB+jC,EAAA1wE,OAAA,6BAAA0wE,EAAA1wE,OAAA,6BAAA0wE,EAAA1wE,OAAA,sBAwKLmnB,EAAsBylD,EAAwB5nF,EAAKxE,MAAMmK,eAxKpD+lF,EAAAS,GAyKHjnF,EAzKGwmF,EAAA/5E,KA0KJ,SA1KI+5E,EAAAS,GAAA,IA6KJ,YA7KIT,EAAAS,GAAA,IAgLJ,SAhLIT,EAAAS,GAAA,8BAAAT,EAAA/5E,KAAA,IA2KQ3R,EAAKosF,oBAAoBjqD,GA3KjC,gBA2KP/Y,EA3KOsiE,EAAAh4E,KAAAg4E,EAAA1wE,OAAA,6BAAA0wE,EAAA/5E,KAAA,IA8KQ3R,EAAKqsF,uBAAuBlqD,GA9KpC,gBA8KP/Y,EA9KOsiE,EAAAh4E,KAAAg4E,EAAA1wE,OAAA,6BAiLDyiD,EAAez9D,EAAKksF,kBAjLnBR,EAAA/5E,KAAA,IAkLQ8rD,EAAavC,SAAS/4B,EAAoBG,KAAKtzB,SAlLvD,gBAkLPoa,EAlLOsiE,EAAAh4E,KAAAg4E,EAAA1wE,OAAA,6BAAA0wE,EAAA1wE,OAAA,6BAuLPoO,IAAWppB,EAAK4R,MAAMwX,GAAQhf,UAChCgf,EAASppB,EAAK4R,MAAMwX,GAAQ7M,IAAI,OAxLvBmvE,EAAA1wE,OAAA,sBAAA0wE,EAAAY,GA4LHpnF,EA5LGwmF,EAAA/5E,KA6LJ,SA7LI+5E,EAAAY,GAAA,IAgMJ,SAhMIZ,EAAAY,GAAA,8BAAAZ,EAAA/5E,KAAA,IA8LQ3R,EAAKusF,cAAc3E,GA9L3B,gBA8LPx+D,EA9LOsiE,EAAAh4E,KAAAg4E,EAAA1wE,OAAA,6BAiMDyiD,EAAez9D,EAAKksF,kBAjMnBR,EAAA/5E,KAAA,IAkMQ8rD,EAAab,UAAUgrB,GAlM/B,gBAkMPx+D,EAlMOsiE,EAAAh4E,KAAAg4E,EAAA1wE,OAAA,6BAAA0wE,EAAA/5E,KAAA,IAqMiB3R,EAAKynC,aAAa7hC,GAAY,EAAMg9C,GArMrD,gBAqMD1b,EArMCwkD,EAAAh4E,OAsM+B,OAArBwzB,EAAUQ,SACzBte,EAAS8d,EAAUQ,QAvMdgkD,EAAA1wE,OAAA,6BAAA0wE,EAAA1wE,OAAA,6BAAA0wE,EAAA/5E,KAAA,IA6Ma3R,EAAKynC,aAAa7hC,GAAY,EAAMg9C,GA7MjD,YA6ML6mC,EA7MKiC,EAAAh4E,KAiNX0V,EAASppB,EAAK4R,MAAM,IAEhB63E,GAAczpF,EAAK4R,MAAM63E,EAAU9hD,QAAQv9B,QAnNpC,CAAAshF,EAAA/5E,KAAA,aAoNTyX,EAASppB,EAAK4R,MAAM63E,EAAU9hD,SAE1B+/C,EAtNK,CAAAgE,EAAA/5E,KAAA,iBAAA+5E,EAAA/5E,KAAA,IAuNgB3R,EAAK4rF,cAvNrB,UAuNDlC,EAvNCgC,EAAAh4E,QAyNL0V,EAASA,EAAOvX,KAAK63E,IAzNhB,SAAAgC,EAAA/5E,KAAA,0BAAA+5E,EAAA1wE,OAAA,6BAAA0wE,EAAA/5E,KAAA,IAqODwI,QAAQkD,IAAI,CACpBrd,EAAKuiC,kBAAkB38B,GACvB5F,EAAKgjE,kBAAkB,CAAC99D,GAAOiC,GAC/BnH,EAAKsnF,eAAe,mBAAmBpiF,EAAMU,EAAYuB,KAxOhD,YAAAwiF,EAAA+B,EAAAh4E,KAAAk2E,EAAAltF,OAAA8qC,EAAA,EAAA9qC,CAAAitF,EAAA,GAkOT13E,EAlOS23E,EAAA,GAmOTzmB,GAnOSymB,EAAA,GAoOTn3E,GApOSm3E,EAAA,KA2OP33E,GAAckxD,IAAkBA,GAAej+D,IA3OxC,CAAAwmF,EAAA/5E,KAAA,iBAAA+5E,EAAA/5E,KAAA,IA4O4B3R,EAAKuiC,kBAAkB38B,EAAYu9D,GAAej+D,GAAO0C,aA5OrF,SA4OHiiF,GA5OG6B,EAAAh4E,KA6OT0V,EAASppB,EAAK4R,MAAMK,GAAYsK,IAAIstE,IAAwB/3E,MAAM,GAAG5C,MAAM,KAAKqN,IAAI9J,IAAMvD,MAAM,KA7OvF,gBAAAw8E,EAAA1wE,OAAA,6BAAA0wE,EAAA/5E,KAAA,IAoPDwI,QAAQkD,IAAI,CACpBrd,EAAKsnF,eAAe,mBAAmBpiF,EAAMU,EAAYuB,GACzDnH,EAAKsnF,eAAe,eAAepiF,EAAMU,EAAYuB,KAtP5C,gBAAA2iF,GAAA4B,EAAAh4E,KAAAq2E,GAAArtF,OAAA8qC,EAAA,EAAA9qC,CAAAotF,GAAA,GAkPTE,GAlPSD,GAAA,GAmPT/iD,GAnPS+iD,GAAA,GAyPPC,IAAoBhjD,KACtB5d,EAAS4d,GAAa93B,MAAM,KAAKqN,IAAIytE,KA1P5B0B,EAAA1wE,OAAA,0BA8Pe7T,EA9Pf,CAAAukF,EAAA/5E,KAAA,iBAAA+5E,EAAA/5E,KAAA,IA8P+B3R,EAAKsjE,oBAAoB,CAACp+D,GAAOiC,GA9PhE,SAAAukF,EAAAc,GAAAd,EAAAh4E,KAAAg4E,EAAA/5E,KAAA,mBAAA+5E,EAAAc,IA8P2E,EA9P3E,gBA8PLvC,GA9PKyB,EAAAc,KA+PcvC,GAAkB/kF,KACzCkkB,EAAS6gE,GAAkB/kF,IAhQlBwmF,EAAA1wE,OAAA,0BAoQF7T,EApQE,CAAAukF,EAAA/5E,KAAA,iBAAA+5E,EAAA/5E,KAAA,IAoQc3R,EAAKsnC,mBAAmB1hC,EAAYuB,GApQlD,SAAAukF,EAAAe,GAAAf,EAAAh4E,KAAAg4E,EAAA/5E,KAAA,mBAAA+5E,EAAAe,IAoQ6D,EApQ7D,gBAoQXrjE,EApQWsiE,EAAAe,GAAAf,EAAA1wE,OAAA,0BA2QPte,OAAOqF,KAAK+pC,GAAW3mC,SAASD,GA3QzB,CAAAwmF,EAAA/5E,KAAA,iBA4QHw3E,GAAiBr9C,EAAU5mC,GAC3BkzB,GAAiBp4B,EAAKqH,gBAAgB,CAAC,QAAQ,SAAS,QA7QrDqkF,EAAAh6E,KAAA,IAAAg6E,EAAA/5E,KAAA,IA+QQ3R,EAAKg7D,yBAAyB5iC,GAAe+wD,IA/QrD,SA+QP//D,EA/QOsiE,EAAAh4E,KAAAg4E,EAAA/5E,KAAA,mBAAA+5E,EAAAh6E,KAAA,IAAAg6E,EAAAgB,GAAAhB,EAAA,oBAmRJtiE,IAAUppB,EAAK4R,MAAMwX,GAAQhf,UAChCgf,EAAS,KApRFsiE,EAAA/5E,KAAA,0BAAA+5E,EAAA/5E,KAAA,IAuRM3R,EAAKq1B,oBAAoBzvB,EAAY08B,KAAKp9B,MAAO,cAvRvD,SAuRTkkB,EAvRSsiE,EAAAh4E,KAAA,gBAAAg4E,EAAA1wE,OAAA,6BAAA0wE,EAAA/5E,KAAA,IA2RI3R,EAAK2sF,iBAAiB/mF,EAAYuB,GA3RtC,gBA2RXiiB,EA3RWsiE,EAAAh4E,KAAAg4E,EAAA1wE,OAAA,0BA8RPte,OAAOqF,KAAK+pC,GAAW3mC,SAASD,GA9RzB,CAAAwmF,EAAA/5E,KAAA,iBAAA+5E,EAAA/5E,KAAA,IA+RM3R,EAAKu4B,gBAAgBrzB,EAAMiC,GA/RjC,UA+RTiiB,EA/RSsiE,EAAAh4E,QAgSM0V,EAAOhf,UACpBgf,EAAS,KAjSFsiE,EAAA/5E,KAAA,uBAoSUxK,EApSV,CAAAukF,EAAA/5E,KAAA,iBAAA+5E,EAAA/5E,KAAA,IAoS0B3R,EAAKu4B,gBAAgB3yB,EAAYV,MAAMiC,GApSjE,SAAAukF,EAAAkB,GAAAlB,EAAAh4E,KAAAg4E,EAAA/5E,KAAA,mBAAA+5E,EAAAkB,IAoS4E,EApS5E,UAoSLv8D,GApSKq7D,EAAAkB,MAqSYv8D,GAAajmB,UAChCimB,GAAe,KAEjBjH,EAASiH,GAxSA,gBAAAq7D,EAAA1wE,OAAA,0BA4Sc7T,EA5Sd,CAAAukF,EAAA/5E,KAAA,iBAAA+5E,EAAA/5E,KAAA,IA4S8B3R,EAAKu4B,gBAAgB3yB,EAAY08B,KAAKp9B,MAAMiC,GA5S1E,SAAAukF,EAAAmB,GAAAnB,EAAAh4E,KAAAg4E,EAAA/5E,KAAA,mBAAA+5E,EAAAmB,IA4SqF,EA5SrF,gBA4SLj5E,GA5SK83E,EAAAmB,MA8STzjE,EAASxV,IA9SA83E,EAAA1wE,OAAA,6BAAA0wE,EAAA/5E,KAAA,IAkTgDwI,QAAQkD,IAAI,CACrErd,EAAKsnF,eAAe,MAAMpiF,EAAMU,EAAYuB,GAAQ,GACpDnH,EAAKsnF,eAAe,aAAapiF,EAAMU,EAAYuB,GAAQ,GAC3DnH,EAAKsnF,eAAe,oBAAoBpiF,EAAMU,EAAYuB,GAAQ,KArTzD,gBAAAgjF,GAAAuB,EAAAh4E,KAAA02E,GAAA1tF,OAAA8qC,EAAA,EAAA9qC,CAAAytF,GAAA,GAkTNE,GAlTMD,GAAA,GAkTIE,GAlTJF,GAAA,GAkTgBG,GAlThBH,GAAA,GAwTPI,GAAuBD,GAEvBA,IAA0BF,IAAaC,KACnCzB,GAAiByB,GAAYp7E,MAAMm7E,GAAU9tE,IAAI,MACvDiuE,GAAuBD,GAAuB14E,KAAKg3E,KAKrDz/D,EAAS,CACPohE,wBACAD,2BAnUSmB,EAAA1wE,OAAA,0BAuUPte,OAAOqF,KAAK+pC,GAAW3mC,SAASD,GAvUzB,CAAAwmF,EAAA/5E,KAAA,iBAwUHw3E,GAAiBr9C,EAAU5mC,GAxUxBwmF,EAAA/5E,KAAA,IAyUM3R,EAAK8sF,uBAAuB3D,GAAehiF,EAAQygF,GAzUzD,SAyUTx+D,EAzUSsiE,EAAAh4E,KAAAg4E,EAAA/5E,KAAA,0BAAA+5E,EAAA/5E,KAAA,IA+UCwI,QAAQkD,IAAI,CACpBrd,EAAKuiC,kBAAkB38B,GACvB5F,EAAKsnF,eAAe,mBAAmBpiF,EAAMU,EAAYuB,GACzDy7C,EAAe5iD,EAAK0rC,6BAA6BvkC,EAAQygF,EAAwB1iF,GAAS,OAlVnF,SAAAylF,GAAAe,EAAAh4E,KAAAk3E,GAAAluF,OAAA8qC,EAAA,EAAA9qC,CAAAiuF,GAAA,GA4UPE,GA5UOD,GAAA,GA6UPE,GA7UOF,GAAA,GA8UPG,GA9UOH,GAAA,GAqVLE,IAAqBD,KACjBx6D,GAAey6D,GAAkB57E,MAAM27E,IACzCI,GAAoB56D,GACpB06D,KAAqB/qF,EAAK4R,MAAMm5E,IAAkB3gF,UACpD6gF,GAAoBA,GAAkBp5E,KAAK7R,EAAK4R,MAAMm5E,MAExD3hE,EAAS6hE,IA3VF,gBAAAS,EAAA1wE,OAAA,6BAAA0wE,EAAA/5E,KAAA,IAiW4CwI,QAAQkD,IAAI,CACjErd,EAAKsnF,eAAe,kBAAkBpiF,EAAMU,EAAYuB,GACxDnH,EAAKsnF,eAAe,yBAAyBpiF,EAAMU,EAAYuB,KAnWtD,gBAAA+jF,GAAAQ,EAAAh4E,KAAAy3E,GAAAzuF,OAAA8qC,EAAA,EAAA9qC,CAAAwuF,GAAA,GAiWNE,GAjWMD,GAAA,GAiWWE,GAjWXF,GAAA,GAsWNC,KACHA,GAAmBprF,EAAK4R,MAAM,IAG3By5E,KACHA,GAA0BrrF,EAAK4R,MAAM,IAGvCwX,EAASiiE,GAAwBv5E,MAAMs5E,IA9W5BM,EAAA1wE,OAAA,6BAAA0wE,EAAA/5E,KAAA,IAiXiCwI,QAAQkD,IAAI,CACtDrd,EAAKsnF,eAAe,aAAapiF,EAAMU,EAAYuB,GAAQ,GAC3DnH,EAAKsnF,eAAe,oBAAoBpiF,EAAMU,EAAYuB,GAAQ,KAnXzD,gBAAAmkF,GAAAI,EAAAh4E,KAAA63E,GAAA7uF,OAAA8qC,EAAA,EAAA9qC,CAAA4uF,GAAA,GAiXN/5E,GAjXMg6E,GAAA,GAiXKC,GAjXLD,GAAA,GAsXNh6E,KACHA,GAAavR,EAAK4R,MAAM,IAErB45E,KACHA,GAAqBxrF,EAAK4R,MAAM,KAGlCwX,EAASoiE,GAAmB15E,MAAMP,KAIvBQ,GAAG/R,EAAK4R,MAAM,MACvBwX,EAASppB,EAAK4R,MAAM,IAlYX85E,EAAA1wE,OAAA,6BAAA0wE,EAAA1wE,OAAA,6BAAA0wE,EAAA1wE,OAAA,SAyYRoO,GAzYQ,0BAAAsiE,EAAAv5E,SAAAq1E,EAAAjsF,KAAA,gBAn1FC,gBAAAwxF,EAAAC,EAAAC,EAAAC,GAAA,OAAA3F,EAAAl1E,MAAA9W,KAAA8E,YAAA,GAAA9E,KA8tGlB4xF,mBA9tGkB,eAAAC,EAAA1wF,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KA8tGG,SAAAi8E,EAAOnmB,GAAP,IAAAt/D,EAAA4yD,EAAA3zC,EAAAymE,EAAAC,EAAAltF,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAAg8E,GAAA,cAAAA,EAAA97E,KAAA87E,EAAA77E,MAAA,UAAiB/J,EAAjB2lF,EAAAjtF,OAAA,QAAAC,IAAAgtF,EAAA,GAAAA,EAAA,GAA6B,SAC1C/yB,EADa,mBAAA74D,OACsBulE,EADtB,KAAAvlE,OACmCiG,KAChDif,EAAa7mB,EAAKq7D,8BAA8Bb,KACnCx6D,EAAK4R,MAAMiV,GAAYzc,QAHvB,CAAAojF,EAAA77E,KAAA,eAAA67E,EAAAxyE,OAAA,SAIVhb,EAAK4R,MAAMiV,IAJD,cAAA2mE,EAAA77E,KAAA,EAOS3R,EAAKq1B,oBAAoB6xC,EAAU,cAAc,GAAG,GAAGt/D,GAPhE,YAOf0lF,EAPeE,EAAA95E,MAAA,CAAA85E,EAAA77E,KAAA,gBASjB27E,EAAkBttF,EAAK4R,MAAM07E,GATZE,EAAAxyE,OAAA,SAUVhb,EAAKs7D,8BAA8Bd,EAAc8yB,IAVvC,eAAAE,EAAAxyE,OAAA,SAaZ,MAbY,yBAAAwyE,EAAAr7E,SAAAk7E,EAAA9xF,SA9tGH,gBAAAkyF,GAAA,OAAAL,EAAA/6E,MAAA9W,KAAA8E,YAAA,GAAA9E,KA6uGlBmyF,yBA7uGkB,eAAAC,EAAAjxF,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KA6uGS,SAAAw8E,EAAOhoF,EAAYuB,GAAnB,IAAAS,EAAAimF,EAAAC,EAAA/3B,EAAA9jD,EAAAyxD,EAAAqqB,EAAAC,EAAA3tF,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAAy8E,GAAA,cAAAA,EAAAv8E,KAAAu8E,EAAAt8E,MAAA,UAA2B/J,EAA3BomF,EAAA1tF,OAAA,QAAAC,IAAAytF,EAAA,GAAAA,EAAA,GAAuC,SAChE7mF,EAAUA,GAAWnH,EAAKxE,MAAM2L,QADP,CAAA8mF,EAAAt8E,KAAA,eAAAs8E,EAAAjzE,OAAA,SAGhB,MAHgB,cAAAizE,EAAAt8E,KAAA,EAUfwI,QAAQkD,IAAI,CACpBrd,EAAKq1B,oBAAoBzvB,EAAY08B,KAAKp9B,MAAO,MAAO,GAAI,GAAI0C,GAChE5H,EAAKq1B,oBAAoBzvB,EAAY08B,KAAKp9B,MAAO,aAAc,GAAI,GAAI0C,GACvE5H,EAAKq1B,oBAAoBzvB,EAAY08B,KAAKp9B,MAAO,gBAAiB,CAACiC,GAAU,GAAIS,KAb1D,UAAAimF,EAAAI,EAAAv6E,KAAAo6E,EAAApxF,OAAA8qC,EAAA,EAAA9qC,CAAAmxF,EAAA,GAOvB93B,EAPuB+3B,EAAA,GAQvB77E,EARuB67E,EAAA,GASvBpqB,EATuBoqB,EAAA,GAgBzB/3B,EAAM/1D,EAAK4R,MAAMmkD,GACjB9jD,EAAajS,EAAK4R,MAAMK,GACxByxD,EAAe1jE,EAAK4R,MAAM8xD,GAErBzxD,EAAW7H,SAAYs5D,EAAat5D,SAAY2rD,EAAI3rD,SAAYpK,EAAK4R,MAAM8xD,GAAcwqB,GAAG,KAAMluF,EAAK4R,MAAMK,GAAYyC,GAAG1U,EAAK4R,MAAM8xD,IApBnH,CAAAuqB,EAAAt8E,KAAA,gBAqBjBo8E,EAAY/tF,EAAK21B,aAAa31B,EAAK4R,MAAMK,GAAYH,MAAMjK,SAASkuD,EAAIx5C,IAAI,KAAKrN,MAAM+C,EAAWH,MAAM4xD,OArBvFuqB,EAAAjzE,OAAA,SAsBhB+yE,GAtBgB,eAAAE,EAAAjzE,OAAA,SAyBlB/I,GAzBkB,yBAAAg8E,EAAA97E,SAAAy7E,EAAAryF,SA7uGT,gBAAA4yF,EAAAC,GAAA,OAAAT,EAAAt7E,MAAA9W,KAAA8E,YAAA,GAAA9E,KAwwGlBgnC,kBAxwGkB,eAAA8rD,EAAA3xF,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAwwGE,SAAAk9E,EAAO1oF,GAAP,IAAAgC,EAAAsM,EAAAsmD,EAAA3zC,EAAA/gB,EAAAmM,EAAAmB,EAAA+wC,EAAAD,EAAAqqC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA7uF,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAA29E,GAAA,cAAAA,EAAAz9E,KAAAy9E,EAAAx9E,MAAA,UAAmB/J,EAAnBsnF,EAAA5uF,OAAA,QAAAC,IAAA2uF,EAAA,GAAAA,EAAA,GAA+B,SAASh7E,EAAxCg7E,EAAA5uF,OAAA,QAAAC,IAAA2uF,EAAA,IAAAA,EAAA,GAEZ10B,EAFY,kBAAA74D,OAEsBiE,EAAY08B,KAAKp9B,MAFvC,KAAAvD,OAEgDiG,KAE1Dif,EAAa7mB,EAAKq7D,8BAA8Bb,KACnCx6D,EAAK4R,MAAMiV,GAAYzc,QAL1B,CAAA+kF,EAAAx9E,KAAA,eAAAw9E,EAAAn0E,OAAA,SAMPhb,EAAK4R,MAAMiV,IANJ,cAUd/gB,EAAWF,EAAYE,SAVTqpF,EAAAx9E,KAAA,EAYK3R,EAAKq1B,oBAAoBzvB,EAAY08B,KAAKp9B,MAAM,aAAa,GAAG,GAAG0C,GAZxE,WAYdqK,EAZck9E,EAAAz7E,QAeCQ,EAfD,CAAAi7E,EAAAx9E,KAAA,gBAgBVyB,EAAyC,SAAhCpT,EAAKxE,MAAM6X,iBACpB8wC,EAAiBt8C,SAASqM,GAAY,KACtCgwC,EAAer8C,SAASqM,GAAY,KAlB1Bi7E,EAAAx9E,KAAA,GAmBQ3R,EAAKyT,gBAAgB7N,EAAYoJ,QAAQoE,EAAO+wC,EAAeD,GAAa,GAnBpF,QAmBVqqC,EAnBUY,EAAAz7E,KAqBZ86E,EAAc,CAChBljF,KAAK,KACLwjF,SAAS,MAGPL,EAAa,CACfnjF,KAAK,KACLwjF,SAAS,MAGXP,EAAU9oF,QAAS,SAAAmH,GACjB,IAAMkiF,EAAWvpF,KAAKkvE,IAAI5sE,SAAS+E,EAAEsH,WAAWrM,SAASqM,IACrDrM,SAAS+E,EAAEsH,WAAWrM,SAASqM,MAAgBs6E,EAAYM,UAAYA,EAASN,EAAYM,YAC9FN,EAAYM,SAAWA,EACvBN,EAAYljF,KAAOsB,GAGjB/E,SAAS+E,EAAEsH,WAAWrM,SAASqM,KAAeu6E,EAAWK,WAC3DL,EAAWK,SAAWA,EACtBL,EAAWnjF,KAAOsB,KAKlB4hF,EAAYljF,MAAQmjF,EAAWnjF,OAC3BojF,EAAmB1uF,EAAK4R,MAAM48E,EAAYljF,KAAKgJ,WAC/Cq6E,EAAkB3uF,EAAK4R,MAAM68E,EAAWnjF,KAAKgJ,WAC7Cs6E,EAAa5uF,EAAK4R,MAAM48E,EAAYljF,KAAK4I,WACzC26E,EAAY7uF,EAAK4R,MAAM68E,EAAWnjF,KAAK4I,WACvC46E,EAAWD,EAAU/8E,MAAM88E,GAC3BG,EAAYJ,EAAgB78E,MAAM48E,GAClCM,EAAoBD,EAAUxyE,IAAIuyE,GAClCG,EAA0BjvF,EAAK4R,MAAMsC,GAAWpC,MAAM88E,GAC5D38E,EAAay8E,EAAiB78E,KAAKm9E,EAAkB9/E,MAAM+/E,KAtD7C,eA2Ddh9E,IAAejS,EAAK4R,MAAMK,GAAY7H,UACxC6H,EAAajS,EAAKuU,iBAAiBtC,EAAWnM,MAI3CmM,GAAcjS,EAAK4R,MAAMK,GAAY7H,SAAWpK,EAAK4R,MAAMK,GAAYF,GAAG,MAC7EE,EAAajS,EAAK4R,MAAM,IAIxB5R,EAAKs7D,8BAA8Bd,EAAcvoD,GArEjCk9E,EAAAn0E,OAAA,SA0EX/I,GA1EW,yBAAAk9E,EAAAh9E,SAAAm8E,EAAA/yF,SAxwGF,gBAAA6zF,GAAA,OAAAf,EAAAh8E,MAAA9W,KAAA8E,YAAA,GAAA9E,KAo1GlB8zF,gBAAkB,WAOhB,OANIrvF,EAAKxE,MAAM6zF,iBAAyD,oBAA/BrvF,EAAKxE,MAAM6zF,iBAElDrvF,EAAKxE,MAAM6zF,mBAIN,GA31GS9zF,KAg2GlBurB,cAAgB,SAAC1kB,EAAIkJ,GAAiB,IAAZi4C,EAAYljD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAR,IAI5B,OAHIL,EAAKxE,MAAMsrB,eAAqD,oBAA7B9mB,EAAKxE,MAAMsrB,eAChD9mB,EAAKxE,MAAMsrB,cAAc1kB,EAAIkJ,EAAKi4C,GAE7Bj4C,GAp2GS/P,KAs2GlB+/D,8BAAgC,SAACl5D,EAAIkJ,GAAiB,IAAZi4C,EAAYljD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAR,IAI5C,OAHIL,EAAKxE,MAAMsrB,eAAqD,oBAA7B9mB,EAAKxE,MAAMsrB,eAChD9mB,EAAKxE,MAAMsrB,cAAc1kB,EAAIkJ,EAAKi4C,GAAI,GAEjCj4C,GA12GS/P,KA42GlB8/D,8BAAgC,SAACj5D,GAA0B,IAAtBkkB,EAAsBjmB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAT,KAChD,OAAOL,EAAKk1E,cAAc9yE,EAAIkkB,GAAa,IA72G3B/qB,KA+2GlB25E,cAAgB,SAAC9yE,GAAgD,IAA5CkkB,EAA4CjmB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA/B,KAAKivF,EAA0BjvF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAC3DwmB,EAAa,KAejB,OAdAzkB,EAAMA,EAAI0C,cAEN9E,EAAKxE,MAAMqrB,YAAc7mB,EAAKxE,MAAMqrB,WAAWzkB,GACjDykB,EAAa7mB,EAAKxE,MAAMqrB,WAAWzkB,GAE1BktF,IAGPzoE,GAFFA,EAAa7mB,EAAKmpE,cAAc,gBACdtiD,EAAWzkB,GACdykB,EAAWzkB,GAEX,MAIbykB,GAAcA,EAAWvb,QAAUub,EAAWguB,gBAAkBhuB,EAAWguB,gBAAgBhtC,SAAS5B,KAAKwwB,MAAM,MAC1G5P,EAAWvb,KAEbgb,GAl4GS/qB,KAo4GlBkhE,iBAp4GkB,eAAA8yB,EAAA7yF,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAo4GC,SAAAo+E,EAAOpJ,EAAWxgF,GAAlB,IAAA6pF,EAAAC,EAAA3sB,EAAA4sB,EAAAC,EAAA,OAAAxiE,EAAAzyB,EAAA6W,KAAA,SAAAq+E,GAAA,cAAAA,EAAAn+E,KAAAm+E,EAAAl+E,MAAA,cAAAk+E,EAAAl+E,KAAA,EAIPwI,QAAQkD,IAAI,CACpBrd,EAAKu4B,gBAAgB3yB,EAAY08B,KAAKp9B,MAAMkhF,GAAW,GACvDpmF,EAAKq1B,oBAAoBzvB,EAAY08B,KAAKp9B,MAAM,iBANjC,cAAAuqF,EAAAI,EAAAn8E,KAAAg8E,EAAAhzF,OAAA8qC,EAAA,EAAA9qC,CAAA+yF,EAAA,GAEf1sB,EAFe2sB,EAAA,GAGfC,EAHeD,EAAA,GASbE,EAAY5vF,EAAK4R,MAAM,GACvB5R,EAAK4R,MAAMmxD,GAAmBruD,GAAG,IAAM1U,EAAK4R,MAAM+9E,GAAuBj7E,GAAG,KAC9Ek7E,EAAY5vF,EAAK4R,MAAMmxD,GAAmBxmD,IAAIvc,EAAK4R,MAAM+9E,KAX1CE,EAAA70E,OAAA,SAcV40E,GAdU,wBAAAC,EAAA19E,SAAAq9E,EAAAj0F,SAp4GD,gBAAAu0F,EAAAC,GAAA,OAAAR,EAAAl9E,MAAA9W,KAAA8E,YAAA,GAAA9E,KAo5GlBoyC,WAAa,SAACxf,GACZ,OAAOhlB,OAAOC,KAAK+kB,EAAI,SAAS,aAr5GhB5yB,KAu5GlB2uC,mBAv5GkBxtC,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAu5GG,SAAA4+E,IAAA,IAAA7oF,EAAAqiC,EAAAv2B,EAAAk5B,EAAA8jD,EAAA5vF,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAA0+E,GAAA,cAAAA,EAAAx+E,KAAAw+E,EAAAv+E,MAAA,UAAOxK,EAAP8oF,EAAA3vF,OAAA,QAAAC,IAAA0vF,EAAA,GAAAA,EAAA,GAAe,KAC5BzmD,EAAkB,GACxBriC,EAAUA,GAAWnH,EAAKxE,MAAM2L,QAFb,CAAA+oF,EAAAv+E,KAAA,eAAAu+E,EAAAl1E,OAAA,SAKVwuB,GALU,UAQbv2B,EAAgBpL,SAAS5B,KAAKwwB,MAAM,OACpC0V,EAAsBnsC,EAAKqH,gBAAgB,CAAC,QAAQ,mBAClCqlB,QAVL,CAAAwjE,EAAAv+E,KAAA,gBAAAu+E,EAAAv+E,KAAA,GAWX3R,EAAKgR,aAAam7B,EAAoB3wC,MAAMo5C,UAA5C,eAAAu7C,EAAAzzF,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAAuD,SAAAg/E,EAAOr7C,GAAP,IAAA7vC,EAAAmrF,EAAAzqF,EAAAoM,EAAA0gC,EAAA5jC,EAAAwhF,EAAA5iD,EAAA/tC,EAAAk1C,EAAA,OAAAznB,EAAAzyB,EAAA6W,KAAA,SAAA++E,GAAA,cAAAA,EAAA7+E,KAAA6+E,EAAA5+E,MAAA,cACrDzM,EAAQ,QACRmrF,EAAiBt7C,EAAS1B,OAC1BztC,EAAcyqF,EAAenrF,GAHwBqrF,EAAA5+E,KAAA,EAKrD3R,EAAKxE,MAAM+wB,aAAa3mB,EAAYrE,KAAKqE,EAAYoJ,QAAQpJ,EAAY4mB,KALpB,cAAA+jE,EAAA5+E,KAAA,EAOrC3R,EAAKu4B,gBAAgB3yB,EAAYrE,KAAK4F,GAPD,QAOrD6K,EAPqDu+E,EAAA78E,OAQ5C1B,EAAQ0C,GAAG,KAClBg+B,EAAaqC,EAASrC,WACtB5jC,EAAeq9B,EAAoBjwC,MACnCo0F,EAAgBnkD,EAAoBliB,MACpCyjB,EAAevB,EAAoBuB,aACnC/tC,EAASo1C,EAAS5B,qBAAqBlgC,EAAgB,UAAY,SACnE4hC,EAAiB6pB,IAAoC,IAA7B3pB,EAAS5B,qBAA0Bxc,MAAMzhB,OAAO,uBAAuB,OACrGs0B,EAAgB/iC,KAAK,CACnBvB,QACAvF,SACAqS,UACA0gC,aACA5jC,eACA4+B,eACA4iD,gBACAz7C,oBAvBuD,wBAAA07C,EAAAp+E,SAAAi+E,EAAA70F,SAAvD,gBAAAi1F,GAAA,OAAAL,EAAA99E,MAAA9W,KAAA8E,YAAA,IAXW,eAAA6vF,EAAAl1E,OAAA,SAwCZwuB,GAxCY,yBAAA0mD,EAAA/9E,SAAA69E,EAAAz0F,SAv5GHA,KAi8GlBq0C,4BAj8GkB,eAAA6gD,EAAA/zF,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAi8GY,SAAAs/E,EAAOl5C,GAAP,IAAAkQ,EAAAuc,EAAAG,EAAAsT,EAAA1wE,EAAA,OAAAomB,EAAAzyB,EAAA6W,KAAA,SAAAm/E,GAAA,cAAAA,EAAAj/E,KAAAi/E,EAAAh/E,MAAA,UACtB+1C,EAAkB1nD,EAAKxE,MAAM4rD,QAAQ+Z,QAAQ54D,IAAMvI,EAAKqH,gBAAgB,CAAC,UAAU,sBACnF48D,EAAgBjkE,EAAKqH,gBAAgB,CAAC,UAAU,YAAY,eAChDqlB,UAAWu3C,EAAc5b,UAAUX,GAHzB,CAAAipC,EAAAh/E,KAAA,gBAIpByyD,EAAkBH,EAAc5b,UAAUX,GAC1CgwB,EALoB,GAAA/1E,OAKGyiE,EALH,aAAAziE,OAK8By4C,EAAI0qB,wBALlC,2CAAAnjE,OAKmG61C,EALnG,cAAAm5C,EAAAh/E,KAAA,EAMC3R,EAAKilE,kBAAkByS,EAAkB,MAAK,GAN/C,YAMpB1wE,EANoB2pF,EAAAj9E,OAOyB,kBAAxB1M,EAAag+D,OAPd,CAAA2rB,EAAAh/E,KAAA,gBAAAg/E,EAAA31E,OAAA,SAQjBhU,EAAag+D,OAAOjlE,OAAQ,SAAAiF,GAAE,MAAgB,+CAAZA,EAAGsJ,MAAyDtJ,EAAGy6D,GAAG36D,gBAAkB0yC,EAAgB1yC,iBARrH,eAAA6rF,EAAA31E,OAAA,SAWrB,MAXqB,yBAAA21E,EAAAx+E,SAAAu+E,EAAAn1F,SAj8GZ,gBAAAq1F,GAAA,OAAAH,EAAAp+E,MAAA9W,KAAA8E,YAAA,GAAA9E,KA88GlB4uC,mBA98GkBztC,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KA88GG,SAAAy/E,IAAA,IAAA1pF,EAAA2pF,EAAA5kD,EAAAsuB,EAAA3zC,EAAA8iB,EAAA9jC,EAAAkrF,EAAA1wF,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAAw/E,GAAA,cAAAA,EAAAt/E,KAAAs/E,EAAAr/E,MAAA,UAAOxK,EAAP4pF,EAAAzwF,OAAA,QAAAC,IAAAwwF,EAAA,GAAAA,EAAA,GAAe,KAAKD,EAApBC,EAAAzwF,OAAA,QAAAC,IAAAwwF,EAAA,GAAAA,EAAA,GAAqC,KACxD5pF,EAAUA,GAAWnH,EAAKxE,MAAM2L,QADb,CAAA6pF,EAAAr/E,KAAA,eAAAq/E,EAAAh2E,OAAA,SAGV,MAHU,WAMbkxB,EAAqBlsC,EAAKqH,gBAAgB,CAAC,QAAQ,kBACjCqlB,QAPL,CAAAskE,EAAAr/E,KAAA,eAAAq/E,EAAAh2E,OAAA,SAQV,MARU,UAWbw/C,EAXa,mBAAA74D,OAWsBwF,EAXtB,KAAAxF,OAWiCmvF,KAC9CjqE,EAAa7mB,EAAKk1E,cAAc1a,IAZnB,CAAAw2B,EAAAr/E,KAAA,gBAAAq/E,EAAAh2E,OAAA,SAcV6L,GAdU,eAiBb8iB,EAAkB,GAClB9jC,EAAkBqmC,EAAmB1wC,MAAMqK,gBAlB9BmrF,EAAAr/E,KAAA,GAmBb3R,EAAKgR,aAAatU,OAAOqF,KAAK8D,GAA9B,eAAAorF,EAAAv0F,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAA+C,SAAA8/E,EAAOhsF,GAAP,IAAAU,EAAA8pC,EAAAlB,EAAA2B,EAAAghD,EAAAC,EAAAvhD,EAAAO,EAAAC,EAAAC,EAAAtC,EAAA/C,EAAAF,EAAAprC,EAAA0uC,EAAA,OAAAjhB,EAAAzyB,EAAA6W,KAAA,SAAA6/E,GAAA,cAAAA,EAAA3/E,KAAA2/E,EAAA1/E,MAAA,cAC7C/L,EAAcC,EAAgBX,GAC9BwqC,EAAoB9pC,EAAY8pC,kBAFa2hD,EAAA1/E,KAAA,EAG7C3R,EAAKxE,MAAM+wB,aAAamjB,EAAkBnuC,KAAKmuC,EAAkB1gC,QAAQ0gC,EAAkBljB,KAH9C,cAAA6kE,EAAA1/E,KAAA,EAItB3R,EAAKq1B,oBAAoBqa,EAAkBnuC,KAAK,aAJ1B,OAI7CitC,EAJ6C6iD,EAAA39E,KAK1Cy8B,EAAa,EAL6B,YAK1BA,GAActoC,SAAS2mC,IALG,CAAA6iD,EAAA1/E,KAAA,gBAAA0/E,EAAA1/E,KAAA,GAWvCwI,QAAQkD,IAAI,CACpBrd,EAAK4vC,4BAA4BF,EAAkB1gC,SACnDhP,EAAKq1B,oBAAoBqa,EAAkBnuC,KAAK,cAAc,CAAC4uC,IAC/DnwC,EAAKq1B,oBAAoBqa,EAAkBnuC,KAAK,sBAAsB,CAAC4uC,IACvEnwC,EAAKq1B,oBAAoBqa,EAAkBnuC,KAAK,gBAAgB,CAACvB,EAAKxE,MAAM2L,QAAQgpC,MAfrC,WAAAghD,EAAAE,EAAA39E,KAAA09E,EAAA10F,OAAA8qC,EAAA,EAAA9qC,CAAAy0F,EAAA,GAO/CthD,EAP+CuhD,EAAA,GAQ/ChhD,EAR+CghD,EAAA,GAS/C/gD,EAT+C+gD,EAAA,GAU/C9gD,EAV+C8gD,EAAA,GAiB7CpjD,EAAc,KACd/C,EAAe,KACfF,EAAgB,KAChBqF,GAA6B,OAAfA,IAChBpC,EAAchuC,EAAKuU,iBAAiB67B,EAAWxqC,EAAYE,WAExC,OAAjBwqC,EAvB6C,CAAA+gD,EAAA1/E,KAAA,YAwB/C0+B,EAAcrwC,EAAKuU,iBAAiB87B,EAAY,MAChDC,EAAetwC,EAAKuU,iBAAiB+7B,EAAa1qC,EAAYE,WAC7C4O,GAAG,GA1B2B,CAAA28E,EAAA1/E,KAAA,YA2B7Co5B,EAAgBuF,GAGhBrF,EAAeqF,EAAaphC,MAAMmhC,GAAa9zB,IAAIyxB,IAClCt5B,GAAG27B,KAClBpF,EAAeoF,GAGX1wC,EAASwwC,EAAa3B,GAAkBvD,EAAav2B,GAAG,GAAK,WAAa,UAEvD,OAArBo8E,GAA6BA,EAAiBhsF,gBAAkBnF,EArCvB,CAAA0xF,EAAA1/E,KAAA,gBAAA0/E,EAAAr2E,OAAA,kBAyCvCqzB,EAAgBwB,GAAmBA,EAAgBvvC,OAASuvC,EAAgB,GAAK,KAEvFlG,EAAgBzkC,GAAS,CACvBvF,SACAquC,cACA/C,eACAF,gBACAsD,iBAhD2C,QAKe8B,IALfkhD,EAAA1/E,KAAA,iCAAA0/E,EAAAl/E,SAAA++E,EAAA31F,SAA/C,gBAAA+1F,GAAA,OAAAL,EAAA5+E,MAAA9W,KAAA8E,YAAA,IAnBa,eAAA2wF,EAAAh2E,OAAA,SA0EZhb,EAAK8mB,cAAc0zC,EAAc7wB,IA1ErB,yBAAAqnD,EAAA7+E,SAAA0+E,EAAAt1F,SA98GHA,KA0hHlBilC,cA1hHkB,eAAA+wD,EAAA70F,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KA0hHF,SAAAogF,EAAOpL,GAAP,IAAAqL,EAAA7pF,EAAA4yD,EAAA3zC,EAAAwJ,EAAAqhE,EAAArxF,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAAmgF,GAAA,cAAAA,EAAAjgF,KAAAigF,EAAAhgF,MAAA,UAAkB8/E,IAAlBC,EAAApxF,OAAA,QAAAC,IAAAmxF,EAAA,KAAAA,EAAA,GAAmC9pF,EAAnC8pF,EAAApxF,OAAA,QAAAC,IAAAmxF,EAAA,GAAAA,EAAA,GAA+C,SACxDtL,EADS,CAAAuL,EAAAhgF,KAAA,eAAAggF,EAAA32E,OAAA,UAEL,GAFK,UAMRw/C,EANQ,cAAA74D,OAMsBykF,EANtB,KAAAzkF,OAMoC8vF,EANpC,KAAA9vF,OAMmDiG,GAC7C,WAAhBA,EAPU,CAAA+pF,EAAAhgF,KAAA,aAQNkV,EAAa7mB,EAAKq7D,8BAA8Bb,KACnCx6D,EAAK4R,MAAMiV,GAAYzc,QAT9B,CAAAunF,EAAAhgF,KAAA,eAAAggF,EAAA32E,OAAA,SAUHhb,EAAK4R,MAAMiV,IAVR,cAAA8qE,EAAAhgF,KAAA,GAcW3R,EAAKxE,MAAMmf,KAAKC,IAAIm/C,WAAWqsB,GAd1C,aAcV/1D,EAdUshE,EAAAj+E,MAAA,CAAAi+E,EAAAhgF,KAAA,YAiBR8/E,IACFphE,EAAerwB,EAAKuU,iBAAiB8b,EAAa,MAGpDA,EAAerwB,EAAK4R,MAAMye,IAGRjmB,QAxBN,CAAAunF,EAAAhgF,KAAA,YAyBU,WAAhB/J,EAzBM,CAAA+pF,EAAAhgF,KAAA,gBAAAggF,EAAA32E,OAAA,SA0BDhb,EAAKs7D,8BAA8Bd,EAAcnqC,IA1BhD,eAAAshE,EAAA32E,OAAA,SA4BDqV,GA5BC,eAAAshE,EAAA32E,OAAA,SAgCP,MAhCO,yBAAA22E,EAAAx/E,SAAAq/E,EAAAj2F,SA1hHE,gBAAAq2F,GAAA,OAAAL,EAAAl/E,MAAA9W,KAAA8E,YAAA,GAAA9E,KA4jHlBg9B,gBA5jHkB,eAAAs5D,EAAAn1F,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KA4jHA,SAAA0gF,EAAOzgE,EAAa+0D,GAApB,IAAAqL,EAAA7pF,EAAA4yD,EAAA3zC,EAAAkrE,EAAAC,EAAA79E,EAAAkc,EAAA4hE,EAAA5xF,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAA0gF,GAAA,cAAAA,EAAAxgF,KAAAwgF,EAAAvgF,MAAA,UAA+B8/E,IAA/BQ,EAAA3xF,OAAA,QAAAC,IAAA0xF,EAAA,KAAAA,EAAA,GAAgDrqF,EAAhDqqF,EAAA3xF,OAAA,QAAAC,IAAA0xF,EAAA,GAAAA,EAAA,GAA4D,SACvE7L,EADW,CAAA8L,EAAAvgF,KAAA,eAAAugF,EAAAl3E,OAAA,UAEP,GAFO,UAMVw/C,EANU,gBAAA74D,OAMsB0vB,EANtB,KAAA1vB,OAMsCykF,EANtC,KAAAzkF,OAMoD8vF,EANpD,KAAA9vF,OAMmEiG,GAC/D,WAAhBA,EAPY,CAAAsqF,EAAAvgF,KAAA,aAQRkV,EAAa7mB,EAAKq7D,8BAA8Bb,KACnCx6D,EAAK4R,MAAMiV,GAAYzc,QAT5B,CAAA8nF,EAAAvgF,KAAA,eAAAugF,EAAAl3E,OAAA,SAULhb,EAAK4R,MAAMiV,IAVN,cAAAqrE,EAAAvgF,KAAA,GAiBNwI,QAAQkD,IAAI,CACpBrd,EAAKi1D,iBAAiB5jC,GACtBrxB,EAAK67B,mBAAmBxK,EAAa+0D,EAAWx+E,KAnBlC,WAAAmqF,EAAAG,EAAAx+E,KAAAs+E,EAAAt1F,OAAA8qC,EAAA,EAAA9qC,CAAAq1F,EAAA,GAed59E,EAfc69E,EAAA,KAgBd3hE,EAhBc2hE,EAAA,KAAAE,EAAAvgF,KAAA,YAuBV8/E,IACFphE,EAAerwB,EAAKuU,iBAAiB8b,EAAalc,KAGpDkc,EAAerwB,EAAK4R,MAAMye,IAGRjmB,QA9BJ,CAAA8nF,EAAAvgF,KAAA,YA+BQ,WAAhB/J,EA/BQ,CAAAsqF,EAAAvgF,KAAA,gBAAAugF,EAAAl3E,OAAA,SAgCHhb,EAAKs7D,8BAA8Bd,EAAcnqC,IAhC9C,eAAA6hE,EAAAl3E,OAAA,SAkCHqV,GAlCG,QAAA6hE,EAAAvgF,KAAA,iBAsCd3R,EAAK2+D,eAAe,gCAAgCttC,GAtCtC,eAAA6gE,EAAAl3E,OAAA,SAwCT,MAxCS,yBAAAk3E,EAAA//E,SAAA2/E,EAAAv2F,SA5jHA,gBAAA42F,EAAAC,GAAA,OAAAP,EAAAx/E,MAAA9W,KAAA8E,YAAA,GAAA9E,KAsmHlB82F,gBAAkB,SAACC,GACjB,GAA+B,oBAApBA,EAASrsE,OAAsB,CACxCqsE,EAASrsE,SACTqsE,EAASC,kBAAkB,EAAG,OAC9B,IAAM3U,EAAM1yD,SAASsnE,YAAY,QAEjC,OADAF,EAASC,kBAAkB,EAAG,GACvB3U,EAET,OAAO,GA9mHSriF,KAgnHlBk3F,WAAa,SAACtkE,EAAI3yB,EAAM2Q,GACtB,IAAMoiB,EAASrD,SAAStwB,cAAc,UACtC2zB,EAAO5e,IAAMwe,EAGT3yB,GACFkB,OAAOqF,KAAKvG,GAAOiK,QAAQ,SAACitF,EAAKhtF,GAC/B6oB,EAAOmkE,GAAQl3F,EAAMk3F,KAID,oBAAbvmF,IACLoiB,EAAOG,WACTH,EAAOI,mBAAqB,WACC,WAAtBJ,EAAOG,YAAiD,aAAtBH,EAAOG,aAC5CH,EAAOI,mBAAqB,KAC5BxiB,MAIJoiB,EAAOK,OAASziB,GAIfoiB,EAAOhmB,IAAO2iB,SAASC,eAAeoD,EAAOhmB,KAChD2iB,SAASipC,KAAKplC,YAAYR,IAzoHZhzB,KA4oHlBo3F,YAAc,SAAA3zB,GACZ,IACEl4D,KAAKsW,MAAM4hD,GACX,MAAOj8D,GACP,OAAO,EAET,OAAO,GAlpHSxH,KAopHlB6lE,aAAe,SAACpyD,GACd,QAAOA,GAAmD,OAAzCA,EAAQwpC,MAAM,wBArpHfj9C,KAupHlBqgC,oBAvpHkB,eAAAg3D,EAAAl2F,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAupHI,SAAAyhF,EAAOxhE,GAAP,IAAAzpB,EAAAkrF,EAAAzyF,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAAuhF,GAAA,cAAAA,EAAArhF,KAAAqhF,EAAAphF,MAAA,cAAoB/J,EAApBkrF,EAAAxyF,OAAA,QAAAC,IAAAuyF,EAAA,GAAAA,EAAA,GAAgC,SAAhCC,EAAAphF,KAAA,EACP3R,EAAKq1B,oBAAoBhE,EAAc,cAAe,GAAI,GAAIzpB,GADvD,cAAAmrF,EAAA/3E,OAAA,SAAA+3E,EAAAr/E,MAAA,wBAAAq/E,EAAA5gF,SAAA0gF,EAAAt3F,SAvpHJ,gBAAAy3F,GAAA,OAAAJ,EAAAvgF,MAAA9W,KAAA8E,YAAA,GAAA9E,KA0pHlBsgC,mBA1pHkB,eAAAo3D,EAAAv2F,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KA0pHG,SAAA8hF,EAAO7hE,EAAariB,GAApB,IAAApH,EAAAurF,EAAA9yF,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAA4hF,GAAA,cAAAA,EAAA1hF,KAAA0hF,EAAAzhF,MAAA,cAA4B/J,EAA5BurF,EAAA7yF,OAAA,QAAAC,IAAA4yF,EAAA,GAAAA,EAAA,GAAwC,SAC3DnkF,EAAUA,GAAoBhP,EAAKxE,MAAMoK,YAAY08B,KAAKtzB,QADvCokF,EAAAzhF,KAAA,EAEN3R,EAAKq1B,oBAAoBhE,EAAc,YAAa,CAACriB,GAAU,GAAIpH,GAF7D,cAAAwrF,EAAAp4E,OAAA,SAAAo4E,EAAA1/E,MAAA,wBAAA0/E,EAAAjhF,SAAA+gF,EAAA33F,SA1pHH,gBAAA83F,EAAAC,GAAA,OAAAL,EAAA5gF,MAAA9W,KAAA8E,YAAA,GAAA9E,KA8pHlBg4F,mBA9pHkB,eAAAC,EAAA92F,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KA8pHG,SAAAqiF,EAAOpiE,EAAariB,GAApB,OAAAoe,EAAAzyB,EAAA6W,KAAA,SAAAkiF,GAAA,cAAAA,EAAAhiF,KAAAgiF,EAAA/hF,MAAA,cACnB3C,EAAUA,GAAoBhP,EAAKxE,MAAMoK,YAAY08B,KAAKtzB,QADvC0kF,EAAA/hF,KAAA,EAEN3R,EAAKq1B,oBAAoBhE,EAAc,YAAa,CAACriB,IAF/C,cAAA0kF,EAAA14E,OAAA,SAAA04E,EAAAhgF,MAAA,wBAAAggF,EAAAvhF,SAAAshF,EAAAl4F,SA9pHH,gBAAAo4F,EAAAC,GAAA,OAAAJ,EAAAnhF,MAAA9W,KAAA8E,YAAA,GAAA9E,KAkqHlBs4F,QAlqHkB,eAAAC,EAAAp3F,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAkqHR,SAAA2iF,EAAO1iE,GAAP,IAAA2lD,EAAA,OAAA5pD,EAAAzyB,EAAA6W,KAAA,SAAAwiF,GAAA,cAAAA,EAAAtiF,KAAAsiF,EAAAriF,MAAA,cACR0f,EAAeA,GAA8BrxB,EAAKxE,MAAMoK,YAAY08B,KAAKp9B,MADjE8uF,EAAAriF,KAAA,EAEW3R,EAAKq1B,oBAAoBhE,EAAc,WAFlD,YAEF2lD,EAFEgd,EAAAtgF,MAAA,CAAAsgF,EAAAriF,KAAA,eAAAqiF,EAAAh5E,OAAA,SAIC,CACLg8D,KAAKA,EAAK,GACVid,UAAUjd,EAAK,KANX,cAAAgd,EAAAh5E,OAAA,SASD,MATC,wBAAAg5E,EAAA7hF,SAAA4hF,EAAAx4F,SAlqHQ,gBAAA24F,GAAA,OAAAJ,EAAAzhF,MAAA9W,KAAA8E,YAAA,GAAA9E,KA6qHlB44F,gBA7qHkB,eAAAC,EAAA13F,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KA6qHA,SAAAijF,EAAO5iE,GAAP,IAAAH,EAAAgjE,EAAAC,EAAAl0F,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAAgjF,GAAA,cAAAA,EAAA9iF,KAAA8iF,EAAA7iF,MAAA,cAAmB2f,EAAnBijE,EAAAj0F,OAAA,QAAAC,IAAAg0F,EAAA,GAAAA,EAAA,GAA4B,GAAID,EAAhCC,EAAAj0F,OAAA,QAAAC,IAAAg0F,EAAA,GAAAA,EAAA,GAA6C,GAA7CC,EAAA7iF,KAAA,EACH3R,EAAKq1B,oBAAoBr1B,EAAKxE,MAAMoK,YAAY08B,KAAKp9B,MAAOusB,EAAYH,EAAQgjE,GAAY3jB,MAAM,SAAA91D,GAC7G7a,EAAK2+D,eAAe,yBAA0B9jD,KAFhC,cAAA25E,EAAAx5E,OAAA,SAAAw5E,EAAA9gF,MAAA,wBAAA8gF,EAAAriF,SAAAkiF,EAAA94F,SA7qHA,gBAAAk5F,GAAA,OAAAL,EAAA/hF,MAAA9W,KAAA8E,YAAA,GAAA9E,KAkrHlBugF,YAlrHkB,eAAA4Y,EAAAh4F,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAkrHJ,SAAAujF,EAAOtjE,EAAcI,GAArB,IAAAmjE,EAAAtjE,EAAAgjE,EAAAhoE,EAAAuoE,EAAAx0F,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAAsjF,GAAA,cAAAA,EAAApjF,KAAAojF,EAAAnjF,MAAA,UAAiC2f,EAAjCujE,EAAAv0F,OAAA,QAAAC,IAAAs0F,EAAA,GAAAA,EAAA,GAA0C,GAAIP,EAA9CO,EAAAv0F,OAAA,QAAAC,IAAAs0F,EAAA,GAAAA,EAAA,GAA2D,GACnEvoE,EAAWtsB,EAAKovB,kBAAkBiC,GAD1B,CAAAyjE,EAAAnjF,KAAA,eAIV3R,EAAK2+D,eAAe,sBAAuBttC,GAJjCyjE,EAAA95E,OAAA,SAKH,MALG,cAAA85E,EAAAnjF,KAAA,GAQCijF,EAAAtoE,EAAS4jB,SAAQze,GAAjBpf,MAAAuiF,EAAAl4F,OAAAyoE,EAAA,EAAAzoE,CAAgC40B,IAAQwqD,YAAYwY,GARrD,cAAAQ,EAAA95E,OAAA,SAAA85E,EAAAphF,MAAA,wBAAAohF,EAAA3iF,SAAAwiF,EAAAp5F,SAlrHI,gBAAAw5F,EAAAC,GAAA,OAAAN,EAAAriF,MAAA9W,KAAA8E,YAAA,GAAA9E,KA4rHlB05F,iBA5rHkB,eAAAC,EAAAx4F,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KA4rHC,SAAA+jF,EAAOnwF,EAAGowF,EAAQC,EAAWlrB,GAA7B,IAAA3yC,EAAA89D,EAAA,OAAAloE,EAAAzyB,EAAA6W,KAAA,SAAA+jF,GAAA,cAAAA,EAAA7jF,KAAA6jF,EAAA5jF,MAAA,UAEb6lB,EAAY2yC,GAAYA,EAAS3yC,UAAY2yC,EAAS3yC,UAAY,KAFrD,CAAA+9D,EAAA5jF,KAAA,eAAA4jF,EAAA5jF,KAAA,EAKI,IAAIwI,QAAJ,eAAAq7E,EAAA94F,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAAa,SAAAqkF,EAAOl7E,EAASC,GAAhB,OAAA4S,EAAAzyB,EAAA6W,KAAA,SAAAkkF,GAAA,cAAAA,EAAAhkF,KAAAgkF,EAAA/jF,MAAA,OAC9B3R,EAAKxE,MAAMmf,KAAKC,IAAIuwD,sBAAsBnmE,EAAG5G,KAAK,SAACyc,EAAI7V,GACjD6V,GACFL,EAAOK,GAETN,EAAQvV,KALoB,wBAAA0wF,EAAAvjF,SAAAsjF,EAAAl6F,SAAb,gBAAAo6F,EAAAC,GAAA,OAAAJ,EAAAnjF,MAAA9W,KAAA8E,YAAA,IALJ,OAKfm3B,EALe+9D,EAAA7hF,KAAA,UAgBZ8jB,EAhBY,CAAA+9D,EAAA5jF,KAAA,eAAA4jF,EAAAv6E,OAAA,SAiBR,MAjBQ,WAoBXs6E,EAAoB99D,EAAUC,KAAK13B,OAAO,SAACiF,GAAS,OAAOA,EAAG2yB,OAAO3yB,EAAG2yB,OAAOr3B,OAAO,GAAGwE,gBAA9B,4BAAAnD,OAA4EyzF,MAEtH90F,OAtBN,CAAAi1F,EAAA5jF,KAAA,gBAAA4jF,EAAAv6E,OAAA,SAuBR,MAvBQ,eAAAu6E,EAAA7jF,KAAA,GAAA6jF,EAAAv6E,OAAA,SA2BR,CACLwc,EACAx3B,EAAKxE,MAAMmf,KAAKC,IAAI4R,IAAIojD,UAAUylB,EAAWC,EAAkB,GAAGhqF,KAAKgqF,EAAkB,GAAG39D,UA7B/E,eAAA49D,EAAA7jF,KAAA,GAAA6jF,EAAAxgC,GAAAwgC,EAAA,UAAAA,EAAAv6E,OAAA,SAgCR,MAhCQ,yBAAAu6E,EAAApjF,SAAAgjF,EAAA55F,KAAA,cA5rHD,gBAAAs6F,EAAAC,EAAAC,EAAAC,GAAA,OAAAd,EAAA7iF,MAAA9W,KAAA8E,YAAA,GAAA9E,KA+tHlB06F,gBAAkB,SAACC,GACjB,IAAMC,EAAmBn2F,EAAK4R,MAAM5R,EAAKqH,gBAAgB,CAAC,UAAU,mBAAmBkV,IAAI,UAAUA,IAAI,OACzG,OAAOvc,EAAK4R,MAAMskF,GAAQ35E,IAAI45E,IAjuHd56F,KAmuHlB66F,eAnuHkB15F,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAmuHD,SAAAilF,IAAA,OAAAjpE,EAAAzyB,EAAA6W,KAAA,SAAA8kF,GAAA,cAAAA,EAAA5kF,KAAA4kF,EAAA3kF,MAAA,cAAA2kF,EAAA3kF,KAAA,EACF3R,EAAKxE,MAAMmf,KAAKC,IAAIw7E,iBADlB,cAAAE,EAAAt7E,OAAA,SAAAs7E,EAAA5iF,MAAA,wBAAA4iF,EAAAnkF,SAAAkkF,EAAA96F,SAnuHCA,KAsuHlB47C,sBAtuHkB,eAAAo/C,EAAA75F,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAsuHM,SAAAolF,EAAOnlE,EAAaI,GAApB,IAAAH,EAAAhF,EAAAmqE,EAAAp2F,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAAklF,GAAA,cAAAA,EAAAhlF,KAAAglF,EAAA/kF,MAAA,UAA+B2f,EAA/BmlE,EAAAn2F,OAAA,QAAAC,IAAAk2F,EAAA,GAAAA,EAAA,GAAwC,GACzDplE,EADiB,CAAAqlE,EAAA/kF,KAAA,eAAA+kF,EAAA17E,OAAA,SAEb,MAFa,UAKhBsR,EAAWtsB,EAAKovB,kBAAkBiC,GALlB,CAAAqlE,EAAA/kF,KAAA,eAQpB3R,EAAK2+D,eAAe,sBAAuBttC,GARvBqlE,EAAA17E,OAAA,SASb,MATa,cAAA07E,EAAA/kF,KAAA,EAYT2a,EAASqqE,cAAcllE,EAAYH,GAZ1B,cAAAolE,EAAA17E,OAAA,SAAA07E,EAAAhjF,MAAA,yBAAAgjF,EAAAvkF,SAAAqkF,EAAAj7F,SAtuHN,gBAAAq7F,EAAAC,GAAA,OAAAN,EAAAlkF,MAAA9W,KAAA8E,YAAA,GAAA9E,KAovHlB85B,oBApvHkB,eAAAyhE,EAAAp6F,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAovHI,SAAA2lF,EAAO1lE,EAAcI,GAArB,IAAAH,EAAAgjE,EAAA1sF,EAAA0kB,EAAA0qE,EAAA16F,EAAA26F,EAAA52F,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAA0lF,GAAA,cAAAA,EAAAxlF,KAAAwlF,EAAAvlF,MAAA,UAAiC2f,EAAjC2lE,EAAA32F,OAAA,QAAAC,IAAA02F,EAAA,GAAAA,EAAA,GAA0C,GAAI3C,EAA9C2C,EAAA32F,OAAA,QAAAC,IAAA02F,EAAA,GAAAA,EAAA,GAA2D,GAAIrvF,EAA/DqvF,EAAA32F,OAAA,QAAAC,IAAA02F,EAAA,GAAAA,EAAA,GAA6E,SAE5F5lE,EAFe,CAAA6lE,EAAAvlF,KAAA,eAAAulF,EAAAl8E,OAAA,SAGX,MAHW,UAMdsR,EAAWtsB,EAAKovB,kBAAkBiC,GANpB,CAAA6lE,EAAAvlF,KAAA,eASlB3R,EAAK0a,UAAU,sBAAuB2W,GATpB6lE,EAAAl8E,OAAA,SAUX,MAVW,UAafsR,EAAS4jB,QAAQze,GAbF,CAAAylE,EAAAvlF,KAAA,gBAclB3R,EAAK0a,UAAU,oBAAqB+W,GAdlBylE,EAAAl8E,OAAA,SAeX,MAfW,eAkBpBpT,EAA8B,WAAhBA,GAA4BA,IAAgBwC,MAAMxC,GAAeC,SAASD,GAAeA,EAlBnFsvF,EAAAxlF,KAAA,GAqBlB1R,EAAK0a,UAAL,yBAAA/Y,OAAwC0vB,EAAxC,OAAA1vB,OAA0D8vB,IArBxCylE,EAAAvlF,KAAA,IAsBEqlF,EAAA1qE,EAAS4jB,SAAQze,GAAjBpf,MAAA2kF,EAAAt6F,OAAAyoE,EAAA,EAAAzoE,CAAgC40B,IAAQ+vD,KAAKiT,EAAW1sF,GAAa+oE,MAAM,SAAAr3D,GAC7FtZ,EAAK0a,UAAL,GAAA/Y,OAAkB0vB,EAAlB,qBAAA1vB,OAAkD8vB,EAAlD,YAAwEnY,KAvBxD,eAsBZhd,EAtBY46F,EAAAxjF,KAyBlB1T,EAAK0a,UAAL,yBAAA/Y,OAAwC0vB,EAAxC,OAAA1vB,OAA0D8vB,EAA1D,OAAA9vB,OAA0ErF,IAzBxD46F,EAAAl8E,OAAA,SA0BX1e,GA1BW,QAAA46F,EAAAxlF,KAAA,GAAAwlF,EAAAniC,GAAAmiC,EAAA,UA4BlBl3F,EAAK0a,UAAU,4BAAfw8E,EAAAniC,IA5BkB,yBAAAmiC,EAAA/kF,SAAA4kF,EAAAx7F,KAAA,cApvHJ,gBAAA47F,EAAAC,GAAA,OAAAN,EAAAzkF,MAAA9W,KAAA8E,YAAA,GAAA9E,KAmxHlByV,aAnxHkB,eAAAqmF,EAAA36F,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAmxHH,SAAAkmF,EAAO1lB,EAAOzlE,GAAd,IAAAtD,EAAA0uF,EAAAl3F,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAAgmF,GAAA,cAAAA,EAAA9lF,KAAA8lF,EAAA7lF,MAAA,cAAA4lF,EAAAj3F,OAAA,QAAAC,IAAAg3F,EAAA,KAAAA,EAAA,KAAAC,EAAA7lF,KAAA,eAAA6lF,EAAA7lF,KAAA,EAELwI,QAAQkD,IAAIu0D,EAAM3vE,IAAK,SAACooC,EAAExhC,GAC9B,OAAOsD,EAASk+B,EAAGxhC,EAAO+oE,MAHjB,OAAA4lB,EAAA7lF,KAAA,gBAMF9I,EAAQ,EANN,YAMSA,EAAQ+oE,EAAMtxE,QANvB,CAAAk3F,EAAA7lF,KAAA,gBAAA6lF,EAAA7lF,KAAA,GAOHxF,EAASylE,EAAM/oE,GAAQA,EAAO+oE,GAP3B,QAM+B/oE,IAN/B2uF,EAAA7lF,KAAA,iCAAA6lF,EAAArlF,SAAAmlF,EAAA/7F,SAnxHG,gBAAAk8F,EAAAC,GAAA,OAAAL,EAAAhlF,MAAA9W,KAAA8E,YAAA,GAAA9E,KA8xHlBo8F,QAAU,SAACh6D,GACT,OAAQ39B,EAAK4R,MAAM,GAAGC,KAAK7R,EAAK4R,MAAM+rB,GAAKphB,IAAI,KAAM22B,IAAI,IAAIphC,MAAM,IA/xHnDvW,KAiyHlBq8F,iBAjyHkB,eAAAC,EAAAn7F,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAiyHC,SAAA0mF,EAAOlyF,GAAP,IAAAmyF,EAAA,OAAA3qE,EAAAzyB,EAAA6W,KAAA,SAAAwmF,GAAA,cAAAA,EAAAtmF,KAAAsmF,EAAArmF,MAAA,cAAAqmF,EAAArmF,KAAA,EACS3R,EAAKuzF,mBAAmB3tF,EAAYV,MAAMU,EAAY08B,KAAKtzB,SADpE,cACb+oF,EADaC,EAAAtkF,QAGfqkF,EAAgB/3F,EAAKuU,iBAAiBwjF,EAAcnyF,EAAYE,WAHjDkyF,EAAAh9E,OAAA,SAKV+8E,GALU,wBAAAC,EAAA7lF,SAAA2lF,EAAAv8F,SAjyHD,gBAAA08F,GAAA,OAAAJ,EAAAxlF,MAAA9W,KAAA8E,YAAA,GAAA9E,KAwyHlBwwF,aAxyHkB,eAAAmM,EAAAx7F,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAwyHH,SAAA+mF,EAAOvyF,GAAP,IAAAg9C,EAAA4X,EAAA3zC,EAAA8zC,EAAAC,EAAAw9B,EAAA/3F,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAA6mF,GAAA,cAAAA,EAAA3mF,KAAA2mF,EAAA1mF,MAAA,UAAmBixC,IAAnBw1C,EAAA93F,OAAA,QAAAC,IAAA63F,EAAA,KAAAA,EAAA,GAEP59B,EAFO,aAAA74D,OAEsBiE,EAAY08B,KAAKtzB,QAFvC,KAAArN,OAEkDihD,KACzD/7B,EAAa7mB,EAAKq7D,8BAA8Bb,KACnCx6D,EAAK4R,MAAMiV,GAAYzc,QAJ7B,CAAAiuF,EAAA1mF,KAAA,eAAA0mF,EAAAr9E,OAAA,SAKJhb,EAAK4R,MAAMiV,IALP,cAAAwxE,EAAA1mF,KAAA,EAQiB3R,EAAKoM,mBAAmBxG,GAAY,EAAMg9C,GAR3D,YAQP+X,EARO09B,EAAA3kF,QASUinD,EAAgBM,0BAT1B,CAAAo9B,EAAA1mF,KAAA,YAULipD,EAAYD,EAAgBM,0BAC7Bj7D,EAAK4R,MAAMgpD,GAAWxwD,QAXhB,CAAAiuF,EAAA1mF,KAAA,gBAAA0mF,EAAAr9E,OAAA,SAYFhb,EAAKs7D,8BAA8Bd,EAAcI,IAZ/C,eAAAy9B,EAAAr9E,OAAA,SAgBN,MAhBM,yBAAAq9E,EAAAlmF,SAAAgmF,EAAA58F,SAxyHG,gBAAA+8F,GAAA,OAAAJ,EAAA7lF,MAAA9W,KAAA8E,YAAA,GAAA9E,KA6zHlB6Q,mBA7zHkB,eAAAmsF,EAAA77F,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KA6zHG,SAAAonF,EAAO5yF,GAAP,IAAA6yF,EAAA71C,EAAA4X,EAAA3zC,EAAAhb,EAAA8uD,EAAA+9B,EAAAC,EAAA7sF,EAAAC,EAAAgsF,EAAAa,EAAAjkF,EAAAkkF,EAAAx4F,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAAsnF,GAAA,cAAAA,EAAApnF,KAAAonF,EAAAnnF,MAAA,UAAmB8mF,EAAnBI,EAAAv4F,OAAA,QAAAC,IAAAs4F,EAAA,IAAAA,EAAA,GAAuCj2C,IAAvCi2C,EAAAv4F,OAAA,QAAAC,IAAAs4F,EAAA,KAAAA,EAAA,GAEdjzF,EAAY08B,KAFE,CAAAw2D,EAAAnnF,KAAA,eAAAmnF,EAAA99E,OAAA,UAGV,GAHU,UAObw/C,EAPa,mBAAA74D,OAOsBiE,EAAY08B,KAAKtzB,QAPvC,KAAArN,OAOkDihD,KAC/D/7B,EAAa7mB,EAAKk1E,cAAc1a,IARnB,CAAAs+B,EAAAnnF,KAAA,eAAAmnF,EAAA99E,OAAA,SAUV6L,GAVU,cAafhb,EAAkB7L,EAAK4R,MAAM,GAE3B+oD,EAAkB,CACtBjzB,OAAQ,KACRqwD,cAAc,KACdlsF,gBAAgB,KAChB8sF,kBAAkB,GAClB7sF,qBAAqB,KACrBC,yBAAyB,KACzBgtF,yBAAyB,KACzB99B,0BAA0B,KAC1B+9B,mCAAmC,MAG/BN,EAAgB,GAChBC,EAAoB,GACpB7sF,EAAuB,GACvBC,EAA2B,GA9Bd+sF,EAAAnnF,KAAA,GAgCb3R,EAAKgR,aAAapL,EAAYgJ,UAA9B,eAAAqqF,EAAAv8F,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAAwC,SAAA8nF,EAAOrqF,EAAanJ,GAApB,IAAA2rB,EAAAtiB,EAAAoqF,EAAAC,EAAAjlF,EAAAklF,EAAAphB,EAAAqhB,EAAA,OAAAlsE,EAAAzyB,EAAA6W,KAAA,SAAA+nF,GAAA,cAAAA,EAAA7nF,KAAA6nF,EAAA5nF,MAAA,cACtC0f,EAAexiB,EAAa3J,MAC5B6J,EAAeF,EAAaG,QAAQlK,cAFEy0F,EAAA5nF,KAAA,EAQlCwI,QAAQkD,IAAI,CACpBrd,EAAKi1D,iBAAiB5jC,GACtBrxB,EAAKuzF,mBAAmBliE,EAAazrB,EAAY08B,KAAKtzB,SACpDH,EAAaihC,UAAUmoC,aAAej4E,EAAKq1B,oBAAoBhE,EAAaxiB,EAAaihC,UAAUmoC,aAAa12E,KAAKsN,EAAaihC,UAAUmoC,aAAa3mD,QAAU,OAX3H,UAAA6nE,EAAAI,EAAA7lF,KAAA0lF,EAAA18F,OAAA8qC,EAAA,EAAA9qC,CAAAy8F,EAAA,GAK1ChlF,EAL0CilF,EAAA,GAM1CC,EAN0CD,EAAA,GAO1CnhB,EAP0CmhB,EAAA,GAcvCC,EAduC,CAAAE,EAAA5nF,KAAA,gBAAA4nF,EAAAv+E,OAAA,kBAkBxCi9D,GAAgBppE,EAAa/I,WAC/B4yF,EAAc3pF,GAAgBkpE,EAC9BA,EAAej4E,EAAKuU,iBAAiB0jE,EAAappE,EAAa/I,YAG7DwzF,EAAqBt5F,EAAKuU,iBAAiB8kF,EAAgBllF,EAAc8jE,IAEtDlmE,GAAG/R,EAAK4R,MAAM,SACnCynF,EAAkBr5F,EAAK4R,MAAM,GAC7B0nF,EAAqBt5F,EAAK4R,MAAM,IAGlC+mF,EAAkB5pF,GAAgBsqF,EAClCvtF,EAAqBiD,GAAgBuqF,EACrCztF,EAAkBA,EAAgBgG,KAAKynF,GAhCK,yBAAAC,EAAApnF,SAAA+mF,EAAA39F,SAAxC,gBAAAi+F,EAAAC,GAAA,OAAAR,EAAA5mF,MAAA9W,KAAA8E,YAAA,IAhCa,eAqEnBs6D,EAAgBo9B,cAAgB/3F,EAAK4R,MAAM,GAC3C+oD,EAAgBM,0BAA4Bj7D,EAAK4R,MAAM/F,GAtEpCitF,EAAAnnF,KAAA,GAyEO3R,EAAK43F,iBAAiBhyF,GAzE7B,YAyEfmyF,EAzEee,EAAAplF,QA2EjBinD,EAAgBo9B,cAAgBA,EAChCp9B,EAAgBM,0BAA4BN,EAAgBM,0BAA0BppD,KAAKkmF,IAK7Fr7F,OAAOqF,KAAK+J,GAAsBrG,QAAQ,SAACsJ,EAAarJ,GACtD,IACMg0F,EADqB5tF,EAAqBiD,GACEwN,IAAI1Q,GACtDE,EAAyBgD,GAAgB2qF,IAG3C/+B,EAAgB9uD,gBAAkBA,EAClC8uD,EAAgB7uD,qBAAuBA,EACvC6uD,EAAgB5uD,yBAA2BA,GAEvC62C,EA3Fe,CAAAk2C,EAAAnnF,KAAA,gBAAAmnF,EAAAnnF,KAAA,GA4Fe3R,EAAK25F,qBAAqB/zF,EAAY08B,KAAKtzB,SA5F1D,aA4FX4pF,EA5FWE,EAAAplF,MA+FKqkC,MA/FL,CAAA+gD,EAAAnnF,KAAA,gBAAAmnF,EAAAnnF,KAAA,GAgGsB3R,EAAK45F,uBAAuBh0F,GAAY,GAhG9D,SAgGT+O,EAhGSmkF,EAAAplF,QAkGbklF,EAAkB7gD,MAAQ6gD,EAAkB7gD,MAAMx7B,IAAI5H,IAGxDgmD,EAAgBM,0BAA4BN,EAAgBM,0BAA0BppD,KAAK+mF,EAAkB7gD,OArG9F,eAAA+gD,EAAAnnF,KAAA,GA2G8B3R,EAAKwiC,oBAAoBm4B,EAAgB9uD,gBAAgBjG,EAAYV,MAAMU,GA3GzG,eA2GnB+0D,EAAgBo+B,yBA3GGD,EAAAplF,KAAAolF,EAAAnnF,KAAA,GA4GwC3R,EAAKwiC,oBAAoBm4B,EAAgBM,0BAA0Br1D,EAAYV,MAAMU,GA5G7H,eA4GnB+0D,EAAgBq+B,mCA5GGF,EAAAplF,KA8Gf+kF,IACF99B,EAAgBjzB,OAAS1nC,EAAK48D,UAAU67B,EAAc3sF,EAAqBD,IA/G1DitF,EAAA99E,OAAA,SAkHZhb,EAAK8mB,cAAc0zC,EAAcG,IAlHrB,yBAAAm+B,EAAA3mF,SAAAqmF,EAAAj9F,SA7zHH,gBAAAs+F,GAAA,OAAAtB,EAAAlmF,MAAA9W,KAAA8E,YAAA,GAAA9E,KAi7HlBu+F,8BAj7HkB,eAAAC,EAAAr9F,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAi7Hc,SAAA4oF,EAAO34D,GAAP,IAAA44D,EAAAC,EAAA,OAAA9sE,EAAAzyB,EAAA6W,KAAA,SAAA2oF,GAAA,cAAAA,EAAAzoF,KAAAyoF,EAAAxoF,MAAA,cACxBsoF,EAAMj6F,EAAK+3E,uBAAuB,IADVoiB,EAAAxoF,KAAA,EAET3R,EAAKq1B,oBAAoB,gBAAgB,eAAe,CAAC4kE,EAAI3zF,UAAU+6B,IAF9D,cAExB64D,EAFwBC,EAAAzmF,KAAAymF,EAAAn/E,OAAA,SAGvBk/E,GAHuB,wBAAAC,EAAAhoF,SAAA6nF,EAAAz+F,SAj7Hd,gBAAA6+F,GAAA,OAAAL,EAAA1nF,MAAA9W,KAAA8E,YAAA,GAAA9E,KAs7HlB88B,2BAt7HkB,eAAAgiE,EAAA39F,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAs7HW,SAAAkpF,EAAOjpE,EAAakpE,GAApB,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAx+D,EAAAy+D,EAAAC,EAAA1iE,EAAA2iE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAApnE,EAAA,OAAA7G,EAAAzyB,EAAA6W,KAAA,SAAA8pF,GAAA,cAAAA,EAAA5pF,KAAA4pF,EAAA3pF,MAAA,cAAA2pF,EAAA3pF,KAAA,EAMjBwI,QAAQkD,IAAI,CACpBrd,EAAKq1B,oBAAoBhE,EAAa,UACtCrxB,EAAKq1B,oBAAoBhE,EAAa,UACtCrxB,EAAKq1B,oBAAoBhE,EAAa,eACtCrxB,EAAKq1B,oBAAoBhE,EAAa,iBAVb,UAAAmpE,EAAAc,EAAA5nF,KAAA+mF,EAAA/9F,OAAA8qC,EAAA,EAAA9qC,CAAA89F,EAAA,GAEzBE,EAFyBD,EAAA,GAGzBE,EAHyBF,EAAA,GAIzBG,EAJyBH,EAAA,GAKzBr+D,EALyBq+D,EAAA,KAavBC,GAAkBC,GAAkBC,GAAgBx+D,GAb7B,CAAAk/D,EAAA3pF,KAAA,gBAcnBkpF,EAAgB,CACpB7rF,QAAQ0rF,GAEJI,EAAgB,CACpB9rF,QAAQ2rF,GAEJviE,EAAiBp4B,EAAKqH,gBAAgB,CAAC,QAAQ,SAAS,QApBrCi0F,EAAA3pF,KAAA,GAyBfwI,QAAQkD,IAAI,CACpBrd,EAAKs4B,2BAA2BF,EAAeyiE,GAC/C76F,EAAKs4B,2BAA2BF,EAAe0iE,KA3BxB,WAAAC,EAAAO,EAAA5nF,KAAAsnF,EAAAt+F,OAAA8qC,EAAA,EAAA9qC,CAAAq+F,EAAA,GAuBvBE,EAvBuBD,EAAA,GAwBvBE,EAxBuBF,EAAA,IA8BrBC,IAAgBC,EA9BK,CAAAI,EAAA3pF,KAAA,gBAkCjBwpF,EAAcF,EAAa/rF,MAAMlP,EAAKuU,iBAAiBqmF,EAAa,GAAG,KACvEQ,EAAcF,EAAahsF,MAAMlP,EAAKuU,iBAAiBqmF,EAAa,GAAG,KAEvES,EAAgBF,EAAYtpF,KAAKupF,GACjCnnE,EAAiBonE,EAAc9+E,IAAIvc,EAAKuU,iBAAiB6nB,EAAY,KAtCpDk/D,EAAAtgF,OAAA,SA0ChBiZ,GA1CgB,eAAAqnE,EAAAtgF,OAAA,SA8CpB,MA9CoB,yBAAAsgF,EAAAnpF,SAAAmoF,EAAA/+F,SAt7HX,gBAAAggG,EAAAC,GAAA,OAAAnB,EAAAhoF,MAAA9W,KAAA8E,YAAA,GAAA9E,KAs+HlB+8B,2BAt+HkB,eAAAmjE,EAAA/+F,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAs+HW,SAAAsqF,EAAOC,EAAgBC,GAAvB,IAAAphC,EAAA3zC,EAAAg1E,EAAA5B,EAAA54D,EAAAu8C,EAAAnb,EAAA,OAAAr1C,EAAAzyB,EAAA6W,KAAA,SAAAsqF,GAAA,cAAAA,EAAApqF,KAAAoqF,EAAAnqF,MAAA,UAGrB6oD,EAHqB,2BAAA74D,OAGsBg6F,EAAgB3sF,QAHtC,KAAArN,OAGiDi6F,EAAgB5sF,WACtF6X,EAAa7mB,EAAKq7D,8BAA8Bb,KACnCx6D,EAAK4R,MAAMiV,GAAYzc,QALf,CAAA0xF,EAAAnqF,KAAA,eAAAmqF,EAAA9gF,OAAA,SAMlBhb,EAAK4R,MAAMiV,IANO,cAAAi1E,EAAApqF,KAAA,EAUnBmqF,EAAW77F,EAAKqH,gBAAgB,CAAC,QAAQ,SAAS,OAAO,YACzD4yF,EAAMj6F,EAAK+3E,uBAAuB,KAElC12C,EAAO,IACR56B,KAAKk1F,EAAgB3sF,SAGtB6sF,EAAS/2F,gBAAkB62F,EAAgB3sF,QAAQlK,eAAiB+2F,EAAS/2F,gBAAkB82F,EAAgB5sF,QAAQlK,eACzHu8B,EAAK56B,KAAKo1F,GAEZx6D,EAAK56B,KAAKm1F,EAAgB5sF,SApBD8sF,EAAAnqF,KAAA,GAsBP3R,EAAKq1B,oBAAoB,kBAAkB,eAAe,CAAC4kE,EAAI3zF,UAAU+6B,IAtBlE,aAsBnBu8C,EAtBmBke,EAAApoF,MAAA,CAAAooF,EAAAnqF,KAAA,gBAyBjB8wD,EAAQziE,EAAK4R,MAAMgsE,EAAI,IAAIrhE,IAAI09E,GAzBd6B,EAAA9gF,OAAA,SA0BhBhb,EAAKs7D,8BAA8Bd,EAAciI,IA1BjC,eAAAq5B,EAAA9gF,OAAA,SA4BlB,MA5BkB,eAAA8gF,EAAApqF,KAAA,GAAAoqF,EAAA/mC,GAAA+mC,EAAA,SAAAA,EAAA9gF,OAAA,SA8BlB,MA9BkB,yBAAA8gF,EAAA3pF,SAAAupF,EAAAngG,KAAA,aAt+HX,gBAAAwgG,EAAAC,GAAA,OAAAP,EAAAppF,MAAA9W,KAAA8E,YAAA,GAAA9E,KAugIlBy/D,yBAvgIkB,eAAAihC,EAAAv/F,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAugIS,SAAA8qF,EAAOP,EAAgBC,GAAvB,IAAAphC,EAAA3zC,EAAAg1E,EAAA5B,EAAA54D,EAAA64D,EAAAz3B,EAAA,OAAAr1C,EAAAzyB,EAAA6W,KAAA,SAAA2qF,GAAA,cAAAA,EAAAzqF,KAAAyqF,EAAAxqF,MAAA,UAErBiqF,EAAgBt6C,mBAClBs6C,EAAkBl/F,OAAOC,OAAO,GAAGi/F,IACnB5sF,QAAU4sF,EAAgBt6C,iBAItCkZ,EARmB,yBAAA74D,OAQsBg6F,EAAgB3sF,QARtC,KAAArN,OAQiDi6F,EAAgB5sF,WACpF6X,EAAa7mB,EAAKq7D,8BAA8Bb,KAEnCx6D,EAAK4R,MAAMiV,GAAYzc,QAXjB,CAAA+xF,EAAAxqF,KAAA,eAAAwqF,EAAAnhF,OAAA,SAYhBhb,EAAK4R,MAAMiV,IAZK,cAAAs1E,EAAAzqF,KAAA,EAgBjBmqF,EAAW77F,EAAKqH,gBAAgB,CAAC,QAAQ,SAAS,OAAO,YACzD4yF,EAAMj6F,EAAK+3E,uBAAuB,KAElC12C,EAAO,IACR56B,KAAKk1F,EAAgB3sF,SAEtB6sF,EAAS/2F,gBAAkB62F,EAAgB3sF,QAAQlK,eAAiB+2F,EAAS/2F,gBAAkB82F,EAAgB5sF,QAAQlK,eACzHu8B,EAAK56B,KAAKo1F,GAEZx6D,EAAK56B,KAAKm1F,EAAgB5sF,SAzBHmtF,EAAAxqF,KAAA,GA2BF3R,EAAKq1B,oBAAoB,gBAAgB,eAAe,CAAC4kE,EAAI3zF,UAAU+6B,IA3BrE,aA2BjB64D,EA3BiBiC,EAAAzoF,MAAA,CAAAyoF,EAAAxqF,KAAA,gBA8Bf8wD,EAAQziE,EAAK4R,MAAMsoF,EAAO,IAAI39E,IAAI09E,GA9BnBkC,EAAAnhF,OAAA,SAgCdhb,EAAKs7D,8BAA8Bd,EAAciI,IAhCnC,eAAA05B,EAAAnhF,OAAA,SAkChB,MAlCgB,eAAAmhF,EAAAzqF,KAAA,GAAAyqF,EAAApnC,GAAAonC,EAAA,SAAAA,EAAAnhF,OAAA,SAoChB,MApCgB,yBAAAmhF,EAAAhqF,SAAA+pF,EAAA3gG,KAAA,aAvgIT,gBAAA6gG,EAAAC,GAAA,OAAAJ,EAAA5pF,MAAA9W,KAAA8E,YAAA,GAAA9E,KAokIlB+gG,wBApkIkB,eAAAC,EAAA7/F,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAokIQ,SAAAorF,EAAOr1F,GAAP,IAAAF,EAAAi7D,EAAAu6B,EAAAC,EAAAC,EAAAt8F,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAAorF,GAAA,cAAAA,EAAAlrF,KAAAkrF,EAAAjrF,MAAA,UAAe1K,EAAf01F,EAAAr8F,OAAA,QAAAC,IAAAo8F,EAAA,GAAAA,EAAA,GAA6B,GACrDx1F,EAAUA,GAAoBnH,EAAKxE,MAAM2L,QAEpCF,GAAkBA,EAAc3G,SACnC2G,EAAgBvK,OAAOqF,KAAK/B,EAAKxE,MAAMqK,kBAGpCsB,GAAYF,GAAkBA,EAAc3G,OAPzB,CAAAs8F,EAAAjrF,KAAA,eAAAirF,EAAA5hF,OAAA,SAQf,IARe,cAAA4hF,EAAAjrF,KAAA,EAWD3R,EAAKsiE,YAAYn7D,EAAQ,EAAE,SAASF,GAXnC,OAWlBi7D,EAXkB06B,EAAAlpF,KAalB+oF,EAAqB,GACvBC,EAAuB18F,EAAK4R,MAAM,GAItCswD,EAASz8D,QAAS,SAAAT,GAEhB,IAAMkiE,EAAYliE,EAAGkiE,UACfh1D,EAAalS,EAAK4R,MAAM5M,EAAGkN,YAMjC,OAJKuqF,EAAmBv1B,KACtBu1B,EAAmBv1B,GAAalnE,EAAK4R,MAAM,IAGrC5M,EAAGH,QACT,IAAK,UACL,IAAK,aACH43F,EAAmBv1B,GAAau1B,EAAmBv1B,GAAWr1D,KAAKK,GACrE,MACA,IAAK,WACL,IAAK,cACCA,EAAWwC,GAAG+nF,EAAmBv1B,MACnCw1B,EAAuBA,EAAqB7qF,KAAKK,EAAWJ,MAAM2qF,EAAmBv1B,MAEvFu1B,EAAmBv1B,GAAau1B,EAAmBv1B,GAAWp1D,MAAMI,GAChEuqF,EAAmBv1B,GAAWn1D,GAAG,KACnC0qF,EAAmBv1B,GAAalnE,EAAK4R,MAAM,IAU7C8qF,EAAqBhoF,GAAG,IAC1BhY,OAAOqF,KAAK06F,GAAoBh3F,QAAS,SAAAP,GACvC,IAAMmrB,EAAeosE,EAAmBv3F,GACpCmrB,GAAgBA,EAAa3b,GAAG,KAC9B2b,EAAa3b,GAAGgoF,GAClBD,EAAmBv3F,GAASu3F,EAAmBv3F,GAAO4M,MAAM4qF,IAE5DA,EAAuBA,EAAqB5qF,MAAM2qF,EAAmBv3F,IACrEu3F,EAAmBv3F,GAAS,QAzDd,yBAAA03F,EAAAzqF,SAAAqqF,EAAAjhG,SApkIR,gBAAAshG,GAAA,OAAAN,EAAAlqF,MAAA9W,KAAA8E,YAAA,GAAA9E,KAsoIlBuhG,2BAtoIkB,eAAAC,EAAArgG,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAsoIW,SAAA4rF,EAAOC,EAAQC,GAAf,IAAAt2B,EAAAu2B,EAAA,OAAA/vE,EAAAzyB,EAAA6W,KAAA,SAAA4rF,GAAA,cAAAA,EAAA1rF,KAAA0rF,EAAAzrF,MAAA,cAAAyrF,EAAAzrF,KAAA,EACK3R,EAAKq9F,0BADV,YACrBz2B,EADqBw2B,EAAA1pF,MAAA,CAAA0pF,EAAAzrF,KAAA,eAAAyrF,EAAAzrF,KAAA,EAGG3R,EAAKq1B,oBAAoBuxC,EAAkBrlE,KAAM,6BAA8B,CAAC07F,EAASC,IAH5F,cAGnBC,EAHmBC,EAAA1pF,KAAA0pF,EAAApiF,OAAA,SAKlBmiF,GALkB,cAAAC,EAAApiF,OAAA,SAOpB,MAPoB,wBAAAoiF,EAAAjrF,SAAA6qF,EAAAzhG,SAtoIX,gBAAA+hG,EAAAC,GAAA,OAAAR,EAAA1qF,MAAA9W,KAAA8E,YAAA,GAAA9E,KA+oIlBqwF,YA/oIkBlvF,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KA+oIJ,SAAAosF,IAAA,IAAAhjC,EAAA3zC,EAAA42E,EAAAx9B,EAAA5+B,EAAAonD,EAAA,OAAAr7D,EAAAzyB,EAAA6W,KAAA,SAAAksF,GAAA,cAAAA,EAAAhsF,KAAAgsF,EAAA/rF,MAAA,UAGN6oD,EAHM,gBAIN3zC,EAAa7mB,EAAKq7D,8BAA8Bb,KACnCx6D,EAAK4R,MAAMiV,GAAYzc,QAL9B,CAAAszF,EAAA/rF,KAAA,eAAA+rF,EAAA1iF,OAAA,SAMHhb,EAAK4R,MAAMiV,IANR,YASN42E,EAAiBz9F,EAAKqH,gBAAgB,CAAC,QAAQ,WATzC,CAAAq2F,EAAA/rF,KAAA,gBAAA+rF,EAAA/rF,KAAA,EAWY3R,EAAK4/B,YAAY69D,EAAe3gD,UAX5C,YAWJmjB,EAXIy9B,EAAAhqF,QAYKusD,EAAQ30D,KAZb,CAAAoyF,EAAA/rF,KAAA,YAaF0vB,EAAO3kC,OAAOwG,OAAOu6F,EAAep8D,QACtConD,EAAWzoF,EAAKuhC,aAAaF,EAAK4+B,EAAQ30D,OAdtC,CAAAoyF,EAAA/rF,KAAA,YAgBN82E,EAAWzoF,EAAK4R,MAAM62E,GAAUv5E,MAAM,KACjClP,EAAK4R,MAAM62E,GAAUr+E,QAjBpB,CAAAszF,EAAA/rF,KAAA,gBAAA+rF,EAAA1iF,OAAA,SAkBGhb,EAAKs7D,8BAA8Bd,EAAciuB,IAlBpD,eAAAiV,EAAA1iF,OAAA,SAuBL,MAvBK,yBAAA0iF,EAAAvrF,SAAAqrF,EAAAjiG,SA/oIIA,KAwqIlB8mE,wBAA0B,WACxB,IAAKriE,EAAKxE,MAAM2oC,oBACd,OAAO,EAET,IAAMo+B,EAAcviE,EAAKqH,gBAAgB,CAAC,QAAQ,oBAC5Cs2F,EAAiB39F,EAAKxE,MAAM2oC,oBAAX,KASvB,OARwBznC,OAAOqF,KAAK47F,GAAgBlxE,OAAQ,SAAC5mB,EAAgBX,GAC3E,IAAMU,EAAc+3F,EAAez4F,GAInC,OAHIxI,OAAOqF,KAAKwgE,GAAap9D,SAASS,EAAY08B,KAAKp9B,QAAUq9D,EAAY38D,EAAY08B,KAAKp9B,OAAOwnB,UACnG7mB,EAAgBX,GAASU,GAEpBC,GACP,KAprIctK,KAwrIlBqiG,oBAxrIkBlhG,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAwrII,SAAAysF,IAAA,IAAAj3B,EAAAh/D,EAAAk2F,EAAAC,EAAAC,EAAA/rF,EAAAgsF,EAAAC,EAAAC,EAAA,OAAA/wE,EAAAzyB,EAAA6W,KAAA,SAAA4sF,GAAA,cAAAA,EAAA1sF,KAAA0sF,EAAAzsF,MAAA,cAAAysF,EAAAzsF,KAAA,EACY3R,EAAKq9F,0BADjB,YACdz2B,EADcw3B,EAAA1qF,MAAA,CAAA0qF,EAAAzsF,KAAA,gBAAAysF,EAAAzsF,KAAA,EAGQ3R,EAAKo2F,iBAHb,YAGZxuF,EAHYw2F,EAAA1qF,MAAA,CAAA0qF,EAAAzsF,KAAA,gBAKVmsF,EAA0B,GALhBM,EAAAzsF,KAAA,GAMwBwI,QAAQkD,IAAI,CAClDrd,EAAKq1B,oBAAoBuxC,EAAkBrlE,KAAK,qBAChDvB,EAAKq1B,oBAAoBuxC,EAAkBrlE,KAAK,oBAAoB,GAAG,GAAGqG,EAAYk2F,KARxE,WAAAC,EAAAK,EAAA1qF,KAAAsqF,EAAAthG,OAAA8qC,EAAA,EAAA9qC,CAAAqhG,EAAA,GAMX9rF,EANW+rF,EAAA,GAMAC,EANAD,EAAA,IAWZ/rF,IAAcgsF,EAXF,CAAAG,EAAAzsF,KAAA,gBAaRusF,EAAmBl+F,EAAK4R,MAAM5R,EAAKqH,gBAAgB,CAAC,UAAU,mBAAmBkV,IAAIuhF,GACrFK,EAAWn+F,EAAK4R,MAAMK,GAAYsK,IAAI0hF,GAAgBnsF,MAAM,GAAG5C,MAAMgvF,GAd7DE,EAAApjF,OAAA,SAePhb,EAAK23F,QAAQwG,GAAUjvF,MAAM,MAftB,eAAAkvF,EAAApjF,OAAA,SAmBb,MAnBa,yBAAAojF,EAAAjsF,SAAA0rF,EAAAtiG,SAxrIJA,KA6sIlB8iG,oBA7sIkB3hG,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KA6sII,SAAAktF,IAAA,IAAA33B,EAAA,OAAAv5C,EAAAzyB,EAAA6W,KAAA,SAAA+sF,GAAA,cAAAA,EAAA7sF,KAAA6sF,EAAA5sF,MAAA,cAAA4sF,EAAA5sF,KAAA,EACY3R,EAAKw+F,uBADjB,YACd73B,EADc43B,EAAA7qF,MAAA,CAAA6qF,EAAA5sF,KAAA,eAAA4sF,EAAA5sF,KAAA,EAGL3R,EAAKq1B,oBAAoBsxC,EAAkBplE,KAAK,eAH3C,cAAAg9F,EAAAvjF,OAAA,SAAAujF,EAAA7qF,MAAA,cAAA6qF,EAAAvjF,OAAA,SAKb,MALa,wBAAAujF,EAAApsF,SAAAmsF,EAAA/iG,SA7sIJA,KAotIlBowF,qBAptIkBjvF,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAotIK,SAAAqtF,IAAA,IAAAt3F,EAAAsqF,EAAA9qB,EAAA+3B,EAAAr+F,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAAmtF,GAAA,cAAAA,EAAAjtF,KAAAitF,EAAAhtF,MAAA,cAAOxK,EAAPu3F,EAAAp+F,OAAA,QAAAC,IAAAm+F,EAAA,GAAAA,EAAA,GAAe,KAAKjN,IAApBiN,EAAAp+F,OAAA,QAAAC,IAAAm+F,EAAA,KAAAA,EAAA,GAAAC,EAAAhtF,KAAA,EACW3R,EAAKw+F,uBADhB,YACf73B,EADeg4B,EAAAjrF,MAAA,CAAAirF,EAAAhtF,KAAA,gBAGnBxK,EAAUA,GAAoBnH,EAAKxE,MAAM2L,QAHtBw3F,EAAAhtF,KAAA,EAIN3R,EAAKu4B,gBAAgBouC,EAAkBplE,KAAK4F,EAAQsqF,GAJ9C,cAAAkN,EAAA3jF,OAAA,SAAA2jF,EAAAjrF,MAAA,eAAAirF,EAAA3jF,OAAA,SAMd,MANc,yBAAA2jF,EAAAxsF,SAAAssF,EAAAljG,SAptILA,KA4tIlBuvE,mBA5tIkBpuE,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KA4tIG,SAAAwtF,IAAA,IAAAh3F,EAAA6pF,EAAA/hD,EAAA8yB,EAAAmE,EAAAk4B,EAAAx+F,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAAstF,GAAA,cAAAA,EAAAptF,KAAAotF,EAAAntF,MAAA,cAAO/J,EAAPi3F,EAAAv+F,OAAA,QAAAC,IAAAs+F,EAAA,GAAAA,EAAA,GAAmB,SAASpN,IAA5BoN,EAAAv+F,OAAA,QAAAC,IAAAs+F,EAAA,KAAAA,EAAA,GAAAC,EAAAntF,KAAA,EACa3R,EAAKq9F,0BADlB,cACb3tD,EADaovD,EAAAprF,KAAAorF,EAAAntF,KAAA,EAES3R,EAAKq1B,oBAAoBqa,EAAkBnuC,KAAK,oBAAoB,GAAG,GAAGqG,GAFnF,YAEf46D,EAFes8B,EAAAprF,MAAA,CAAAorF,EAAAntF,KAAA,gBAIjB6wD,EAAkBxiE,EAAK4R,MAAM4wD,GACzBivB,IACI9qB,EAAoB3mE,EAAKqH,gBAAgB,CAAC,QAAQ,iBACxDm7D,EAAkBxiE,EAAKuU,iBAAiBiuD,EAAgBmE,EAAkB7gE,WAP3Dg5F,EAAA9jF,OAAA,SASVwnD,GATU,eAAAs8B,EAAA9jF,OAAA,SAWZ,MAXY,yBAAA8jF,EAAA3sF,SAAAysF,EAAArjG,SA5tIHA,KAyuIlBswF,6BAzuIkB,eAAAkT,EAAAriG,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAyuIa,SAAA4tF,EAAO73F,GAAP,IAAA83F,EAAAC,EAAA18B,EAAA0lB,EAAA,OAAA96D,EAAAzyB,EAAA6W,KAAA,SAAA2tF,GAAA,cAAAA,EAAAztF,KAAAytF,EAAAxtF,MAAA,cAAAwtF,EAAAxtF,KAAA,EACmBwI,QAAQkD,IAAI,CAC1Drd,EAAK8qE,mBAAmB,UACxB9qE,EAAK2rF,qBAAqBxkF,KAHC,UAAA83F,EAAAE,EAAAzrF,KAAAwrF,EAAAxiG,OAAA8qC,EAAA,EAAA9qC,CAAAuiG,EAAA,GACxBz8B,EADwB08B,EAAA,KACRhX,EADQgX,EAAA,MAKJ18B,EALI,CAAA28B,EAAAxtF,KAAA,eAAAwtF,EAAAnkF,OAAA,SAMpBhb,EAAK4R,MAAMs2E,GAAmBh5E,MAAMszD,IANhB,cAAA28B,EAAAnkF,OAAA,SAQtB,MARsB,wBAAAmkF,EAAAhtF,SAAA6sF,EAAAzjG,SAzuIb,gBAAA6jG,GAAA,OAAAL,EAAA1sF,MAAA9W,KAAA8E,YAAA,GAAA9E,KAmvIlB8hG,wBAnvIkB3gG,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAmvIQ,SAAAiuF,IAAA,IAAAC,EAAA,OAAAlyE,EAAAzyB,EAAA6W,KAAA,SAAA+tF,GAAA,cAAAA,EAAA7tF,KAAA6tF,EAAA5tF,MAAA,YAClB2tF,EAAsBt/F,EAAKqH,gBAAgB,CAAC,QAAQ,qBADlC,CAAAk4F,EAAA5tF,KAAA,WAGK3R,EAAKovB,kBAAkBkwE,EAAoB/9F,QACzC+9F,EAAoB9yE,IAJ3B,CAAA+yE,EAAA5tF,KAAA,eAAA4tF,EAAA5tF,KAAA,EAKS3R,EAAKxE,MAAM+wB,aAAa+yE,EAAoB/9F,KAAK+9F,EAAoBtwF,QAAQswF,EAAoB9yE,KAL1G,OAAA+yE,EAAA7rF,KAAA,cAAA6rF,EAAAvkF,OAAA,SAQjBskF,GARiB,wBAAAC,EAAAptF,SAAAktF,EAAA9jG,SAnvIRA,KA6vIlBikG,oBA7vIkB9iG,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KA6vII,SAAAquF,IAAA,IAAAC,EAAA,OAAAtyE,EAAAzyB,EAAA6W,KAAA,SAAAmuF,GAAA,cAAAA,EAAAjuF,KAAAiuF,EAAAhuF,MAAA,YACd+tF,EAAkB1/F,EAAKqH,gBAAgB,CAAC,QAAQ,iBADlC,CAAAs4F,EAAAhuF,KAAA,WAGK3R,EAAKovB,kBAAkBswE,EAAgBn+F,QACrCm+F,EAAgBlzE,IAJvB,CAAAmzE,EAAAhuF,KAAA,eAAAguF,EAAAhuF,KAAA,EAKS3R,EAAKxE,MAAM+wB,aAAamzE,EAAgBn+F,KAAKm+F,EAAgB1wF,QAAQ0wF,EAAgBlzE,KAL9F,OAAAmzE,EAAAjsF,KAAA,cAAAisF,EAAA3kF,OAAA,SAQb0kF,GARa,wBAAAC,EAAAxtF,SAAAstF,EAAAlkG,SA7vIJA,KAuwIlBijG,qBAvwIkB9hG,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAuwIK,SAAAwuF,IAAA,IAAAC,EAAA,OAAAzyE,EAAAzyB,EAAA6W,KAAA,SAAAsuF,GAAA,cAAAA,EAAApuF,KAAAouF,EAAAnuF,MAAA,YACfkuF,EAAmB7/F,EAAKqH,gBAAgB,CAAC,QAAQ,kBADlC,CAAAy4F,EAAAnuF,KAAA,WAGK3R,EAAKovB,kBAAkBywE,EAAiBt+F,QACtCs+F,EAAiBrzE,IAJxB,CAAAszE,EAAAnuF,KAAA,eAAAmuF,EAAAnuF,KAAA,EAKS3R,EAAKxE,MAAM+wB,aAAaszE,EAAiBt+F,KAAKs+F,EAAiB7wF,QAAQ6wF,EAAiBrzE,KALjG,OAAAszE,EAAApsF,KAAA,cAAAosF,EAAA9kF,OAAA,SAQd6kF,GARc,wBAAAC,EAAA3tF,SAAAytF,EAAArkG,SAvwILA,KAixIlBwkG,qBAjxIkBrjG,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAixIK,SAAA4uF,IAAA,IAAArwD,EAAA,OAAAviB,EAAAzyB,EAAA6W,KAAA,SAAAyuF,GAAA,cAAAA,EAAAvuF,KAAAuuF,EAAAtuF,MAAA,YACfg+B,EAAwB3vC,EAAKqH,gBAAgB,CAAC,QAAQ,uBADvC,CAAA44F,EAAAtuF,KAAA,WAGK3R,EAAKovB,kBAAkBugB,EAAsBpuC,QAC3CouC,EAAsBnjB,IAJ7B,CAAAyzE,EAAAtuF,KAAA,eAAAsuF,EAAAtuF,KAAA,EAKS3R,EAAKxE,MAAM+wB,aAAaojB,EAAsBpuC,KAAKouC,EAAsB3gC,QAAQ2gC,EAAsBnjB,KALhH,OAAAyzE,EAAAvsF,KAAA,cAAAusF,EAAAjlF,OAAA,SAQd20B,GARc,wBAAAswD,EAAA9tF,SAAA6tF,EAAAzkG,SAjxILA,KA2xIlB2kG,0BA3xIkBxjG,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KA2xIU,SAAA+uF,IAAA,IAAAh5F,EAAA+gF,EAAAkY,EAAAtsF,EAAA8yD,EAAA6C,EAAA42B,EAAAC,EAAA/gD,EAAAghD,EAAAlgG,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAAgvF,GAAA,cAAAA,EAAA9uF,KAAA8uF,EAAA7uF,MAAA,UAAOxK,EAAPo5F,EAAAjgG,OAAA,QAAAC,IAAAggG,EAAA,GAAAA,EAAA,GAAe,KAAKrY,EAApBqY,EAAAjgG,OAAA,QAAAC,IAAAggG,EAAA,GAAAA,EAAA,GAAsC,KAAKH,EAA3CG,EAAAjgG,OAAA,QAAAC,IAAAggG,EAAA,GAAAA,EAAA,GAAwD,MAC7Ep5F,GAAWnH,EAAKxE,MAAM2L,UACzBA,EAAUnH,EAAKxE,MAAM2L,SAGlBA,EALqB,CAAAq5F,EAAA7uF,KAAA,eAAA6uF,EAAAxlF,OAAA,SAMjB,MANiB,cASpBlH,EAAiB,GATG0sF,EAAA7uF,KAAA,EAUM3R,EAAK+/F,uBAVX,cAUpBn5B,EAVoB45B,EAAA9sF,KAWpB+1D,EAAuBzpE,EAAKqH,gBAAgB,CAAC,QAAQ,oBAXjCm5F,EAAA7uF,KAAA,GAaK3R,EAAKq+F,sBAbV,WAapBgC,EAboBG,EAAA9sF,KAcrBw0E,EAdqB,CAAAsY,EAAA7uF,KAAA,gBAAA6uF,EAAA7uF,KAAA,GAeE3R,EAAK2rF,qBAAqBxkF,GAAQ,GAfpC,QAexB+gF,EAfwBsY,EAAA9sF,KAAA,YAkBtBw0E,IAAqBmY,EAlBC,CAAAG,EAAA7uF,KAAA,gBAmBlB2uF,EAAkBtgG,EAAK4R,MAAMs2E,GAAmB3rE,IAAIvc,EAAK4R,MAAMyuF,IAC/D9gD,EAAU7iD,OAAOqF,KAAK0nE,GAAsBnpE,OAE9C8/F,IACFA,EAAepgG,EAAK4R,MAAMwuF,GAAc7jF,IAAIgjC,IAvBtBihD,EAAA7uF,KAAA,GA4BlB3R,EAAKgR,aAAatU,OAAOqF,KAAK0nE,GAA9B,eAAAg3B,EAAA/jG,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAAqD,SAAAsvF,EAAOx7F,GAAP,IAAA+hE,EAAA9mB,EAAAwgD,EAAA/sF,EAAA,OAAAwZ,EAAAzyB,EAAA6W,KAAA,SAAAovF,GAAA,cAAAA,EAAAlvF,KAAAkvF,EAAAjvF,MAAA,cACnDs1D,EAAmBwC,EAAqBvkE,GACxCi7C,EAAY8mB,EAAiBh1B,gBAAgBkO,UAFMygD,EAAAjvF,KAAA,EAG3B3R,EAAKq1B,oBAAoBuxC,EAAkBrlE,KAAK,WAAW,CAAC4+C,IAHjC,QAGnDwgD,EAHmDC,EAAAltF,QAKnDE,EAAmB5T,EAAK4R,MAAM+uF,GAAiBzxF,MAAMoxF,GACrDF,IAEFxsF,EAAmBA,EAAiB9B,MAAM8B,EAAiB1E,MAAMkxF,KAEnEtsF,EAAeqsC,GAAangD,EAAK21B,aAAa/hB,IAVS,wBAAAgtF,EAAAzuF,SAAAuuF,EAAAnlG,SAArD,gBAAAslG,GAAA,OAAAJ,EAAApuF,MAAA9W,KAAA8E,YAAA,IA5BkB,eAAAmgG,EAAAxlF,OAAA,SA2CnBte,OAAOwG,OAAO4Q,IA3CK,yBAAA0sF,EAAAruF,SAAAguF,EAAA5kG,SA3xIVA,KA00IlBulG,sBA10IkBpkG,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KA00IM,SAAA2vF,IAAA,IAAA55F,EAAA+gF,EAAAuJ,EAAAuP,EAAAltF,EAAAjO,EAAA+gE,EAAA6C,EAAA42B,EAAAC,EAAAW,EAAA5gG,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAA0vF,GAAA,cAAAA,EAAAxvF,KAAAwvF,EAAAvvF,MAAA,UAAOxK,EAAP85F,EAAA3gG,OAAA,QAAAC,IAAA0gG,EAAA,GAAAA,EAAA,GAAe,KAAK/Y,EAApB+Y,EAAA3gG,OAAA,QAAAC,IAAA0gG,EAAA,GAAAA,EAAA,GAAsC,KAAKxP,EAA3CwP,EAAA3gG,OAAA,QAAAC,IAAA0gG,EAAA,IAAAA,EAAA,GAA6DD,EAA7DC,EAAA3gG,OAAA,QAAAC,IAAA0gG,EAAA,IAAAA,EAAA,IAEjB95F,GAAWnH,EAAKxE,MAAM2L,UACzBA,EAAUnH,EAAKxE,MAAM2L,SAGlBA,EANiB,CAAA+5F,EAAAvvF,KAAA,eAAAuvF,EAAAlmF,OAAA,SAOb,MAPa,cAUhBlH,EAAiB,GACjBjO,EAAkB7F,EAAKqiE,0BAXP6+B,EAAAvvF,KAAA,GAYU3R,EAAK+/F,uBAZf,eAYhBn5B,EAZgBs6B,EAAAxtF,KAahB+1D,EAAuBzpE,EAAKqH,gBAAgB,CAAC,QAAQ,oBAbrC65F,EAAAvvF,KAAA,GAeS3R,EAAKq+F,sBAfd,WAehBgC,EAfgBa,EAAAxtF,KAgBjBw0E,EAhBiB,CAAAgZ,EAAAvvF,KAAA,gBAAAuvF,EAAAvvF,KAAA,GAiBM3R,EAAK2rF,qBAAqBxkF,GAAQ,GAjBxC,QAiBpB+gF,EAjBoBgZ,EAAAxtF,KAAA,YAoBlBw0E,IAAqBmY,EApBH,CAAAa,EAAAvvF,KAAA,gBAqBd2uF,EAAkBtgG,EAAK4R,MAAMs2E,GAAmB3rE,IAAIvc,EAAK4R,MAAMyuF,IArBjDa,EAAAvvF,KAAA,GAuBd3R,EAAKgR,aAAatU,OAAOqF,KAAK0nE,GAA9B,eAAA03B,EAAAzkG,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAAqD,SAAAgwF,EAAOl8F,GAAP,IAAA+hE,EAAA9mB,EAAAv6C,EAAAy7F,EAAAC,EAAAv6D,EAAAnzB,EAAA2tF,EAAAlxE,EAAA,OAAAjD,EAAAzyB,EAAA6W,KAAA,SAAAgwF,GAAA,cAAAA,EAAA9vF,KAAA8vF,EAAA7vF,MAAA,cACnDs1D,EAAmBwC,EAAqBvkE,GACxCi7C,EAAY8mB,EAAiBh1B,gBAAgBkO,UAC7Cv6C,EAAcC,EAAgBohE,EAAiB95C,WAHIq0E,EAAA7vF,KAAA,EAO/CwI,QAAQkD,IAAI,CACpBrd,EAAKuiC,kBAAkB38B,GACvB5F,EAAKq1B,oBAAoBuxC,EAAkBrlE,KAAK,WAAW,CAAC4+C,MATL,OAAAkhD,EAAAG,EAAA9tF,KAAA4tF,EAAA5kG,OAAA8qC,EAAA,EAAA9qC,CAAA2kG,EAAA,GAKvDt6D,EALuDu6D,EAAA,GAMvD1tF,EANuD0tF,EAAA,GAYnDC,EAAmBvhG,EAAK4R,MAAMgC,GAAkB1E,MAAMlP,EAAK4R,MAAMm1B,IACnE1W,EAAekxE,EAAiBryF,MAAMoxF,GACtC7O,IACFphE,EAAerwB,EAAKuU,iBAAiB8b,EAAa,KAGpDvc,EAAemzD,EAAiB95C,WAAa6zE,EAAehhG,EAAK21B,aAAatF,GAAgBA,EAlBrC,yBAAAmxE,EAAArvF,SAAAivF,EAAA7lG,SAArD,gBAAAkmG,GAAA,OAAAN,EAAA9uF,MAAA9W,KAAA8E,YAAA,IAvBc,eAAA6gG,EAAAlmF,OAAA,SA6CfgmF,EAAetkG,OAAOwG,OAAO4Q,GAAkBA,GA7ChC,yBAAAotF,EAAA/uF,SAAA4uF,EAAAxlG,SA10INA,KA23IlBmmG,gBA33IkB,eAAAC,EAAAjlG,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KA23IA,SAAAwwF,EAAO18F,EAAMmB,GAAb,IAAAxC,EAAAo5F,EAAAp3F,EAAA4jE,EAAAo4B,EAAAxhG,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAAswF,GAAA,cAAAA,EAAApwF,KAAAowF,EAAAnwF,MAAA,cAAoB9N,EAApBg+F,EAAAvhG,OAAA,QAAAC,IAAAshG,EAAA,IAAAA,EAAA,GACV5E,EAAU,GACVp3F,EAAkB7F,EAAKqiE,0BACvBoH,EAAuBzpE,EAAKqH,gBAAgB,CAAC,QAAQ,oBAH3Cy6F,EAAAnwF,KAAA,EAKV3R,EAAKgR,aAAatU,OAAOqF,KAAK0nE,GAA9B,eAAAs4B,EAAArlG,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAAqD,SAAA4wF,EAAO96B,GAAP,IAAAD,EAAAh1B,EAAAkO,EAAAv6C,EAAAmhC,EAAA,OAAA3Z,EAAAzyB,EAAA6W,KAAA,SAAAywF,GAAA,cAAAA,EAAAvwF,KAAAuwF,EAAAtwF,MAAA,UACnDs1D,EAAmBwC,EAAqBvC,GACxCj1B,EAAkBg1B,EAAiBh1B,gBACnCkO,EAAYlO,EAAgBkO,YAC9B+mB,IAAchiE,GAASD,WAAWoB,GAAQ,GAJW,CAAA47F,EAAAtwF,KAAA,YAKjD/L,EAAcC,EAAgBohE,EAAiB95C,WACrD9mB,EAASrG,EAAKuU,iBAAiBlO,EAAO,IACjCxC,EAPkD,CAAAo+F,EAAAtwF,KAAA,gBAAAswF,EAAAtwF,KAAA,EAQxB3R,EAAKuiC,kBAAkB38B,GARC,OAQ/CmhC,EAR+Ck7D,EAAAvuF,KASrDrN,EAASA,EAAOkW,IAAIwqB,GATiC,QAWvD1gC,EAASrG,EAAK2xB,qBAAqBtrB,EAAO4gE,EAAiBnhE,UAC3Dm3F,EAAQ98C,GAAa95C,EAZkC47F,EAAAtwF,KAAA,iBAcvDsrF,EAAQ98C,GAAa,EAdkC,yBAAA8hD,EAAA9vF,SAAA6vF,EAAAzmG,SAArD,gBAAA2mG,GAAA,OAAAH,EAAA1vF,MAAA9W,KAAA8E,YAAA,IALU,cAAAyhG,EAAA9mF,OAAA,SAuBTte,OAAOwG,OAAO+5F,IAvBL,wBAAA6E,EAAA3vF,SAAAyvF,EAAArmG,SA33IA,gBAAA4mG,EAAAC,GAAA,OAAAT,EAAAtvF,MAAA9W,KAAA8E,YAAA,GAAA9E,KAo5IlB8mG,oBAp5IkB,eAAAC,EAAA5lG,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAo5II,SAAAmxF,EAAOtF,GAAP,IAAAp5F,EAAA6rC,EAAA8yD,EAAAniG,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAAixF,GAAA,cAAAA,EAAA/wF,KAAA+wF,EAAA9wF,MAAA,cAAe9N,IAAf2+F,EAAAliG,OAAA,QAAAC,IAAAiiG,EAAA,KAAAA,EAAA,GAAAC,EAAA9wF,KAAA,EACY3R,EAAK+/F,uBADjB,YACdrwD,EADc+yD,EAAA/uF,MAAA,CAAA+uF,EAAA9wF,KAAA,eAAA8wF,EAAA9wF,KAAA,EAGL3R,EAAKq1B,oBAAoBqa,EAAkBnuC,KAAK,oBAAoB,CAAC07F,EAAQp5F,IAHxE,cAAA4+F,EAAAznF,OAAA,SAAAynF,EAAA/uF,MAAA,cAAA+uF,EAAAznF,OAAA,SAKb,MALa,wBAAAynF,EAAAtwF,SAAAowF,EAAAhnG,SAp5IJ,gBAAAmnG,GAAA,OAAAJ,EAAAjwF,MAAA9W,KAAA8E,YAAA,GAAA9E,KA25IlBonG,iBA35IkB,eAAAC,EAAAlmG,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KA25IC,SAAAyxF,EAAO39F,EAAMmB,GAAb,IAAAxC,EAAAi/F,EAAAngC,EAAA/iB,EAAAL,EAAA09C,EAAA8F,EAAAC,EAAAC,EAAA78F,EAAA88F,EAAAC,EAAA9iG,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAA4xF,GAAA,cAAAA,EAAA1xF,KAAA0xF,EAAAzxF,MAAA,cAAoB9N,IAApBs/F,EAAA7iG,OAAA,QAAAC,IAAA4iG,EAAA,KAAAA,EAAA,GAAiCL,EAAjCK,EAAA7iG,OAAA,QAAAC,IAAA4iG,EAAA,GAAAA,EAAA,GAAgD,KAC7DxgC,EAAW,KADEygC,EAAAzxF,KAAA,EAEa3R,EAAKq9F,0BAFlB,YAEXz9C,EAFWwjD,EAAA1vF,MAAA,CAAA0vF,EAAAzxF,KAAA,YAKT4tC,EAAUv/C,EAAKqH,gBAAgB,CAAC,QAAQ,SAAS,aAEvDhB,EAASrG,EAAK4R,MAAMvL,MACLA,EAAO+D,UAAW/D,EAAOoqB,IAAI,GAR7B,CAAA2yE,EAAAzxF,KAAA,gBAAAyxF,EAAApoF,OAAA,SASN,MATM,YAYXiiF,EAAU6F,IACE7F,EAAQ38F,SAAWi/C,EAbpB,CAAA6jD,EAAAzxF,KAAA,gBAAAyxF,EAAAzxF,KAAA,GAcG3R,EAAK0hG,gBAAgBx8F,EAAMmB,GAd9B,QAcb42F,EAdamG,EAAA1vF,KAAA,eAAA0vF,EAAAzxF,KAAA,GAoBLwI,QAAQkD,IAAI,CACpBrd,EAAKq1B,oBAAoBuqB,EAAgBr+C,KAAK,qBAC9CvB,EAAKq1B,oBAAoBuqB,EAAgBr+C,KAAK,oBAAoB,CAAC07F,EAAQp5F,MAtB9D,WAAAk/F,EAAAK,EAAA1vF,KAAAsvF,EAAAtmG,OAAA8qC,EAAA,EAAA9qC,CAAAqmG,EAAA,GAkBbE,EAlBaD,EAAA,GAmBb58F,EAnBa48F,EAAA,IAyBXC,IAAgB78F,EAzBL,CAAAg9F,EAAAzxF,KAAA,gBA0BbtL,EAASrG,EAAKuU,iBAAiBlO,EAAO,IACtC48F,EAAejjG,EAAKuU,iBAAiB0uF,EAAa,IAClD78F,EAAcpG,EAAKuU,iBAAiBnO,EAAY,IAC1C88F,EAAK98F,EAAY8I,MAAM+zF,GAGzBH,IAAmBj/F,IACrBwC,EAASA,EAAO6I,MAAM+zF,IAItBtgC,EADE9+D,EACSq/F,EAAG3mF,IAAIlW,GAAQyL,MAAM,GAAG5C,OAAO,GAE/B7I,EAAOkW,IAAI2mF,GAAIpxF,MAAM,GAAG5C,OAAO,GAvC/Bk0F,EAAApoF,OAAA,SA4CN2nD,GA5CM,eAAAygC,EAAApoF,OAAA,SA+CV,MA/CU,yBAAAooF,EAAAjxF,SAAA0wF,EAAAtnG,SA35ID,gBAAA8nG,EAAAC,GAAA,OAAAV,EAAAvwF,MAAA9W,KAAA8E,YAAA,GAAA9E,KA48IlB8wF,uBA58IkB,eAAAkX,EAAA7mG,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KA48IO,SAAAoyF,EAAO59F,GAAP,IAAA69F,EAAAC,EAAAlpC,EAAA3zC,EAAA88E,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAvpC,EAAAtY,EAAA8hD,EAAAC,EAAAx8C,EAAAy8C,EAAAC,EAAAjkG,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAA+yF,GAAA,cAAAA,EAAA7yF,KAAA6yF,EAAA5yF,MAAA,UAAmB8xF,EAAnBa,EAAAhkG,OAAA,QAAAC,IAAA+jG,EAAA,GAAAA,EAAA,GAAoC,KAAKZ,IAAzCY,EAAAhkG,OAAA,QAAAC,IAAA+jG,EAAA,KAAAA,EAAA,GAEjB9pC,EAFiB,0BAAA74D,OAEyBiE,EAAY08B,KAAKp9B,MAF1C,KAAAvD,OAEmD8hG,EAFnD,KAAA9hG,OAEuE+hG,KACxF78E,EAAa7mB,EAAKq7D,8BAA8Bb,KACnCx6D,EAAK4R,MAAMiV,GAAYzc,QAJnB,CAAAm6F,EAAA5yF,KAAA,eAAA4yF,EAAAvpF,OAAA,SAKdhb,EAAK4R,MAAMiV,IALG,UAQnB88E,EAAmB3jG,EAAK4R,MAAM,GAC5BgyF,EAAqB5jG,EAAKqH,gBAAgB,CAAC,YAAY,aACvDw8F,EAAej+F,EAAYgJ,UAAU6X,KAAM,SAAA9b,GAAC,OAAIA,EAAEpJ,OAASqiG,EAAmB/iD,cAE/D+iD,EAAmB1iD,eAAe/7C,SAASS,EAAY08B,KAAKp9B,OAZ1D,CAAAq/F,EAAA5yF,KAAA,gBAAA4yF,EAAAvpF,OAAA,SAad2oF,GAbc,eAAAY,EAAA5yF,KAAA,GAgBwB3R,EAAKq1B,oBAAoBwuE,EAAa3+F,MAAM,2BAhBpE,WAgBjB4+F,EAhBiBS,EAAA7wF,KAAA,CAAA6wF,EAAA5yF,KAAA,gBAAA4yF,EAAAvpF,OAAA,SAqBd2oF,GArBc,eAwBjBI,EAxBiB,6BAAApiG,OAwB6CkiG,EAAa3+F,OAxB1Dq/F,EAAA5yF,KAAA,GAyBjB3R,EAAKxE,MAAM+wB,aAAaw3E,EAA+BD,EAAiCF,EAAmBp3E,KAzB1F,eAAA+3E,EAAA5yF,KAAA,GA+BbwI,QAAQkD,IAAI,CACpBrd,EAAK47B,oBAAoBioE,EAAa3+F,OACtClF,EAAKoM,mBAAmBxG,GAAY,GAAM,GAC1C5F,EAAKq1B,oBAAoB0uE,EAA+B,eAAe,CAACF,EAAa70F,YAlChE,WAAAg1F,EAAAO,EAAA7wF,KAAAuwF,EAAAvnG,OAAA8qC,EAAA,EAAA9qC,CAAAsnG,EAAA,GA4BrBE,EA5BqBD,EAAA,GA6BrBtpC,EA7BqBspC,EAAA,KA8BrB5hD,EA9BqB4hD,EAAA,MAqCNtpC,EArCM,CAAA4pC,EAAA5yF,KAAA,cAuCfwyF,EAAqBxpC,EAAgB5uD,yBAAyB83F,EAAa70F,QAAQlK,kBAE/Dq/F,EAAmBt7D,IAAI,MAzC5B,CAAA07D,EAAA5yF,KAAA,YA0Cd8xF,EA1Cc,CAAAc,EAAA5yF,KAAA,gBAAA4yF,EAAA5yF,KAAA,GA2CQ3R,EAAKq1B,oBAAoBwuE,EAAa3+F,MAAM,YAAY,CAACU,EAAY08B,KAAKtzB,UA3ClF,QA2CjBy0F,EA3CiBc,EAAA7wF,KAAA,WA8Cb0wF,EAAYpkG,EAAK4R,MAAMywC,EAAU,IACvCohD,EAAmBzjG,EAAK4R,MAAM6xF,GAC9BS,EAAoBlkG,EAAK4R,MAAMsyF,GACzBt8C,EAAiB5nD,EAAKqH,gBAAgB,CAAC,UAAU,mBAEjDg9F,EAAgBZ,EAAiBlnF,IAAI2nF,GAC3CP,EAAmBS,EAAUl1F,MAAMm1F,GAE/BX,IACFC,EAAmBA,EAAiBpnF,IAAI,MAAMrN,MAAM04C,IAKjD5nD,EAAK4R,MAAM+xF,GAAkBv5F,QA5Df,CAAAm6F,EAAA5yF,KAAA,gBAAA4yF,EAAAvpF,OAAA,SA6DVhb,EAAKs7D,8BAA8Bd,EAAcmpC,IA7DvC,eAAAY,EAAAvpF,OAAA,SAkEhB2oF,GAlEgB,yBAAAY,EAAApyF,SAAAqxF,EAAAjoG,SA58IP,gBAAAipG,GAAA,OAAAjB,EAAAlxF,MAAA9W,KAAA8E,YAAA,GAAA9E,KAghJlB0wF,2BAhhJkBvvF,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAghJW,SAAAqzF,IAAA,IAAAt9F,EAAAtB,EAAA+9F,EAAAx6E,EAAAs7E,EAAArkG,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAAmzF,GAAA,cAAAA,EAAAjzF,KAAAizF,EAAAhzF,MAAA,UAAOxK,EAAPu9F,EAAApkG,OAAA,QAAAC,IAAAmkG,EAAA,GAAAA,EAAA,GAAe,KAAK7+F,EAApB6+F,EAAApkG,OAAA,QAAAC,IAAAmkG,EAAA,GAAAA,EAAA,GAAoC,KAC1Dv9F,IACHA,EAAUnH,EAAKxE,MAAM2L,UAElBtB,GAAmB7F,EAAKxE,MAAM6X,mBACjCxN,EAAkB7F,EAAKxE,MAAM2oC,oBAAoBnkC,EAAKxE,MAAM6X,mBAGzDlM,GAAYtB,EARU,CAAA8+F,EAAAhzF,KAAA,eAAAgzF,EAAA3pF,OAAA,UASlB,GATkB,cAYrB4oF,EAAqB5jG,EAAKqH,gBAAgB,CAAC,YAAY,YAEzD+hB,EAASppB,EAAK4R,MAAM,GAdG+yF,EAAAhzF,KAAA,GAerB3R,EAAKgR,aAAatU,OAAOqF,KAAK8D,GAA9B,eAAA++F,EAAAloG,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAA+C,SAAAyzF,EAAO3/F,GAAP,IAAAU,EAAAk/F,EAAAC,EAAAzoC,EAAAqnC,EAAA,OAAAv2E,EAAAzyB,EAAA6W,KAAA,SAAAwzF,GAAA,cAAAA,EAAAtzF,KAAAszF,EAAArzF,MAAA,UAC7C/L,EAAcC,EAAgBX,IACjBU,EAAYgJ,UAAU6X,KAAM,SAAA9b,GAAC,OAAKA,EAAEpJ,OAASqiG,EAAmB/iD,WAFhC,CAAAmkD,EAAArzF,KAAA,gBAAAqzF,EAAArzF,KAAA,EAOvCwI,QAAQkD,IAAI,CACpBrd,EAAKy8D,iBAAiBt1D,EAAQvB,GAAY,GAC1C5F,EAAKqsF,uBAAuBzmF,EAAY,MAAK,KATE,OAAAk/F,EAAAE,EAAAtxF,KAAAqxF,EAAAroG,OAAA8qC,EAAA,EAAA9qC,CAAAooG,EAAA,GAK/CxoC,EAL+CyoC,EAAA,IAM/CpB,EAN+CoB,EAAA,KAYzBzoC,IACtBlzC,EAASA,EAAOvX,KAAK8xF,EAAiBz0F,MAAMotD,KAbG,yBAAA0oC,EAAA7yF,SAAA0yF,EAAAtpG,SAA/C,gBAAA0pG,GAAA,OAAAL,EAAAvyF,MAAA9W,KAAA8E,YAAA,IAfqB,eAAAskG,EAAA3pF,OAAA,SAiCpBoO,GAjCoB,yBAAAu7E,EAAAxyF,SAAAsyF,EAAAlpG,SAhhJXA,KAmjJlB2pG,cAnjJkB,eAAAC,EAAAzoG,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAmjJF,SAAAg0F,EAAOlgG,EAAMU,GAAb,IAAAy/F,EAAAzB,EAAAppC,EAAA3zC,EAAAy+E,EAAA3B,EAAAvrE,EAAAwd,EAAA2vD,EAAA5qC,EAAA6qC,EAAAnlG,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAAi0F,GAAA,cAAAA,EAAA/zF,KAAA+zF,EAAA9zF,MAAA,UAAyB0zF,EAAzBG,EAAAllG,OAAA,QAAAC,IAAAilG,EAAA,GAAAA,EAAA,GAA4C,MACpD5B,EAAqB5jG,EAAKqH,gBAAgB,CAAC,YAAY,aACrCqlB,QAFV,CAAA+4E,EAAA9zF,KAAA,eAAA8zF,EAAAzqF,OAAA,UAGL,GAHK,UAMRw/C,EANQ,iBAAA74D,OAMyBiE,EAAY08B,KAAKp9B,MAN1C,KAAAvD,OAMmD0jG,KAC3Dx+E,EAAa7mB,EAAKq7D,8BAA8Bb,KACnCx6D,EAAK4R,MAAMiV,GAAYzc,QAR5B,CAAAq7F,EAAA9zF,KAAA,eAAA8zF,EAAAzqF,OAAA,SASLhb,EAAK4R,MAAMiV,IATN,cAYVy+E,EAAatlG,EAAK4R,MAAM,GAZd6zF,EAAA9zF,KAAA,GAaiB3R,EAAKqsF,uBAAuBzmF,GAb7C,aAaR+9F,EAbQ8B,EAAA/xF,QAeU1T,EAAK4R,MAAM+xF,GAAkBjvF,GAAG,GAf1C,CAAA+wF,EAAA9zF,KAAA,YAkBP0zF,EAlBO,CAAAI,EAAA9zF,KAAA,gBAmBJymB,EAAiBp4B,EAAKqH,gBAAgB,CAAC,QAAQ,SAAS,QAnBpDo+F,EAAA/zF,KAAA,GAqBFkkC,EAAkB,CACtB5mC,QAAQ40F,EAAmBtiD,iBAAmBsiD,EAAmB50F,SAtB3Dy2F,EAAA9zF,KAAA,GAwBmB3R,EAAKg7D,yBAAyB5iC,EAAewd,GAxBhE,QAwBRyvD,EAxBQI,EAAA/xF,KAAA+xF,EAAA9zF,KAAA,iBAAA8zF,EAAA/zF,KAAA,GAAA+zF,EAAA1wC,GAAA0wC,EAAA,kBA4BLJ,IAAsBA,EAAmBj7F,UAC5Ci7F,EAAqBrlG,EAAK4R,MAAM,IA7BxB,eAiCN2zF,EAAevlG,EAAK4R,MAAMyzF,GAAoBn2F,MAAMy0F,GAjC9C8B,EAAA9zF,KAAA,GAmCkB3R,EAAKoM,mBAAmBxG,GAAY,GAAM,GAnC5D,SAmCN+0D,EAnCM8qC,EAAA/xF,QAsCV4xF,EAAaC,EAAahpF,IAAIo+C,EAAgBo+B,0BAA0B7pF,MAAM,KAIzElP,EAAK4R,MAAM0zF,GAAYl7F,SAC1BpK,EAAKs7D,8BAA8Bd,EAAc8qC,IA3CzC,eAAAG,EAAAzqF,OAAA,SAgDPsqF,GAhDO,yBAAAG,EAAAtzF,SAAAizF,EAAA7pG,KAAA,cAnjJE,gBAAAmqG,EAAAC,GAAA,OAAAR,EAAA9yF,MAAA9W,KAAA8E,YAAA,GAAA9E,KAqmJlBqqG,WArmJkB,eAAAC,EAAAnpG,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAqmJL,SAAA00F,EAAO5gG,EAAMU,GAAb,IAAAmgG,EAAAC,EAAAC,EAAAzrC,EAAA3zC,EAAAq/E,EAAAC,EAAA/tE,EAAAguE,EAAAzrC,EAAA0rC,EAAAhmG,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAA80F,GAAA,cAAAA,EAAA50F,KAAA40F,EAAA30F,MAAA,UAAyBo0F,EAAzBM,EAAA/lG,OAAA,QAAAC,IAAA8lG,EAAA,GAAAA,EAAA,GAA0C,KAAKL,EAA/CK,EAAA/lG,OAAA,QAAAC,IAAA8lG,EAAA,GAAAA,EAAA,GAAkE,MACvEJ,EAAkBjmG,EAAKqH,gBAAgB,CAAC,YAAY,UACrCqlB,QAFV,CAAA45E,EAAA30F,KAAA,eAAA20F,EAAAtrF,OAAA,UAGF,GAHE,UAMLw/C,EANK,cAAA74D,OAMyBiE,EAAY08B,KAAKp9B,MAN1C,KAAAvD,OAMmDokG,EANnD,KAAApkG,OAMuEqkG,KAC5En/E,EAAa7mB,EAAKq7D,8BAA8Bb,KACnCx6D,EAAK4R,MAAMiV,GAAYzc,QAR/B,CAAAk8F,EAAA30F,KAAA,eAAA20F,EAAAtrF,OAAA,SASFhb,EAAK4R,MAAMiV,IATT,cAYPq/E,EAAUlmG,EAAK4R,MAAM,GAZd00F,EAAA30F,KAAA,GAaoB3R,EAAKosF,oBAAoBxmF,EAAYmgG,GAbzD,aAaLI,EAbKG,EAAA5yF,MAAA,CAAA4yF,EAAA30F,KAAA,YAiBHymB,EAAiBp4B,EAAKqH,gBAAgB,CAAC,QAAQ,SAAS,QAGzD2+F,EApBI,CAAAM,EAAA30F,KAAA,gBAAA20F,EAAA50F,KAAA,GAAA40F,EAAA30F,KAAA,GAsBsB3R,EAAKg7D,yBAAyB5iC,EAAe6tE,GAtBnE,QAsBLD,EAtBKM,EAAA5yF,KAAA4yF,EAAA30F,KAAA,iBAAA20F,EAAA50F,KAAA,GAAA40F,EAAAvxC,GAAAuxC,EAAA,kBA0BFN,IAAsBA,EAAmB57F,UAC5C47F,EAAqBhmG,EAAK4R,MAAM,IA3B3B,eA+BHw0F,EAAYpmG,EAAK4R,MAAMo0F,GAAoB92F,MAAMi3F,GA/B9CG,EAAA30F,KAAA,GAiCqB3R,EAAKoM,mBAAmBxG,GAAY,GAAM,GAjC/D,SAiCH+0D,EAjCG2rC,EAAA5yF,QAoCPwyF,EAAUE,EAAU7pF,IAAIo+C,EAAgBo+B,0BAA0B7pF,MAAM,KACnElP,EAAK4R,MAAMs0F,GAAS97F,SACvBpK,EAAKs7D,8BAA8Bd,EAAc0rC,IAtC5C,eAAAI,EAAAtrF,OAAA,SA2CJkrF,GA3CI,yBAAAI,EAAAn0F,SAAA2zF,EAAAvqG,KAAA,cArmJK,gBAAAgrG,EAAAC,GAAA,OAAAX,EAAAxzF,MAAA9W,KAAA8E,YAAA,GAAA9E,KAkpJlBkrG,aAlpJkB,eAAAC,EAAAhqG,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAkpJH,SAAAu1F,EAAOC,GAAP,IAAAC,EAAA,OAAAz5E,EAAAzyB,EAAA6W,KAAA,SAAAs1F,GAAA,cAAAA,EAAAp1F,KAAAo1F,EAAAn1F,MAAA,cAAAm1F,EAAAn1F,KAAA,EACS3R,EAAKq1B,oBAAoB,cAAc,aAAa,CAACuxE,IAD9D,YACTC,EADSC,EAAApzF,MAAA,CAAAozF,EAAAn1F,KAAA,eAAAm1F,EAAA9rF,OAAA,SAGJhb,EAAK4R,MAAMi1F,IAHP,cAAAC,EAAA9rF,OAAA,SAKN,MALM,wBAAA8rF,EAAA30F,SAAAw0F,EAAAprG,SAlpJG,gBAAAwrG,GAAA,OAAAL,EAAAr0F,MAAA9W,KAAA8E,YAAA,GAAA9E,KAypJlB6wF,oBAzpJkB,eAAA4a,EAAAtqG,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAypJI,SAAA61F,EAAOrhG,GAAP,IAAAmgG,EAAArC,EAAAlpC,EAAA3zC,EAAAqgF,EAAAvsC,EAAAwsC,EAAAC,EAAAC,EAAAR,EAAAS,EAAA3/C,EAAA4/C,EAAApB,EAAAqB,EAAAnnG,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAAi2F,GAAA,cAAAA,EAAA/1F,KAAA+1F,EAAA91F,MAAA,UAAmBo0F,EAAnByB,EAAAlnG,OAAA,QAAAC,IAAAinG,EAAA,GAAAA,EAAA,GAAoC,KAAK9D,IAAzC8D,EAAAlnG,OAAA,QAAAC,IAAAinG,EAAA,KAAAA,EAAA,GAEdhtC,EAFc,uBAAA74D,OAEyBiE,EAAY08B,KAAKp9B,MAF1C,KAAAvD,OAEmDokG,EAFnD,KAAApkG,OAEuE+hG,KACrF78E,EAAa7mB,EAAKq7D,8BAA8Bb,KACnCx6D,EAAK4R,MAAMiV,GAAYzc,QAJtB,CAAAq9F,EAAA91F,KAAA,eAAA81F,EAAAzsF,OAAA,SAKXhb,EAAK4R,MAAMiV,IALA,YAQdqgF,EAAathG,EAAYgJ,UAAU6X,KAAM,SAAA9b,GAAC,MAAgB,aAAXA,EAAEpJ,QARnC,CAAAkmG,EAAA91F,KAAA,gBAAA81F,EAAA91F,KAAA,GAYY3R,EAAKoM,mBAAmBxG,GAAY,GAAM,GAZtD,WAYZ+0D,EAZY8sC,EAAA/zF,OAaZyzF,EAAyBxsC,EAAgB5uD,yBAAyBm7F,EAAWl4F,QAAQlK,kBAG7DqiG,EAAuBt+D,IAAI,MAhBvC,CAAA4+D,EAAA91F,KAAA,gBAAA81F,EAAA91F,KAAA,GAsBNwI,QAAQkD,IAAI,CACpBrd,EAAKymG,aAAaS,EAAWl4F,SAC7BhP,EAAKq1B,oBAAoB6xE,EAAWhiG,MAAM,iBAxB5B,WAAAkiG,EAAAK,EAAA/zF,KAAA2zF,EAAA3qG,OAAA8qC,EAAA,EAAA9qC,CAAA0qG,EAAA,GAoBdP,EApBcQ,EAAA,GAqBdC,EArBcD,EAAA,IA2BZR,IAAaS,EA3BD,CAAAG,EAAA91F,KAAA,YA8BTo0F,EA9BS,CAAA0B,EAAA91F,KAAA,gBAAA81F,EAAA91F,KAAA,GA+Ba3R,EAAKq1B,oBAAoB6xE,EAAWhiG,MAAM,YAAY,CAACU,EAAY08B,KAAKtzB,UA/BrF,QA+BZ+2F,EA/BY0B,EAAA/zF,KAAA,YAkCVqyF,EAlCU,CAAA0B,EAAA91F,KAAA,YAqCNg2C,EAAgB3nD,EAAKqH,gBAAgB,CAAC,UAAU,kBAGhDkgG,EAAoBvnG,EAAK4R,MAAMm0F,GAAkBxpF,IAAIvc,EAAK4R,MAAM01F,IAClEnB,EAAmBnmG,EAAK4R,MAAMi1F,GAAW33F,MAAMq4F,GAE/C7D,IACFyC,EAAmBA,EAAiB5pF,IAAI,MAAMrN,MAAMlP,EAAK4R,MAAM+1C,KAG5D3nD,EAAK4R,MAAMu0F,GAAkB/7F,QA/CtB,CAAAq9F,EAAA91F,KAAA,gBAAA81F,EAAAzsF,OAAA,SAgDHhb,EAAKs7D,8BAA8Bd,EAAc2rC,IAhD9C,eAAAsB,EAAAzsF,OAAA,SAuDb,MAvDa,yBAAAysF,EAAAt1F,SAAA80F,EAAA1rG,SAzpJJ,gBAAAmsG,GAAA,OAAAV,EAAA30F,MAAA9W,KAAA8E,YAAA,GAAA9E,KAktJlBywF,wBAltJkBtvF,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAktJQ,SAAAu2F,IAAA,IAAAxgG,EAAAtB,EAAAujB,EAAAw+E,EAAAvnG,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAAq2F,GAAA,cAAAA,EAAAn2F,KAAAm2F,EAAAl2F,MAAA,UAAOxK,EAAPygG,EAAAtnG,OAAA,QAAAC,IAAAqnG,EAAA,GAAAA,EAAA,GAAe,KAAK/hG,EAApB+hG,EAAAtnG,OAAA,QAAAC,IAAAqnG,EAAA,GAAAA,EAAA,GAAoC,KACvDzgG,IACHA,EAAUnH,EAAKxE,MAAM2L,UAElBtB,GAAmB7F,EAAKxE,MAAM6X,mBACjCxN,EAAkB7F,EAAKxE,MAAM2oC,oBAAoBnkC,EAAKxE,MAAM6X,mBAGzDlM,GAAYtB,EARO,CAAAgiG,EAAAl2F,KAAA,eAAAk2F,EAAA7sF,OAAA,UASf,GATe,cAYpBoO,EAASppB,EAAK4R,MAAM,GAZAi2F,EAAAl2F,KAAA,EAalB3R,EAAKgR,aAAatU,OAAOqF,KAAK8D,GAA9B,eAAAiiG,EAAAprG,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAA+C,SAAA22F,EAAO7iG,GAAP,IAAAU,EAAAoiG,EAAAC,EAAA3rC,EAAA6pC,EAAA,OAAA/4E,EAAAzyB,EAAA6W,KAAA,SAAA02F,GAAA,cAAAA,EAAAx2F,KAAAw2F,EAAAv2F,MAAA,UAC7C/L,EAAcC,EAAgBX,IACjBU,EAAYgJ,UAAU6X,KAAM,SAAA9b,GAAC,MAAgB,aAAXA,EAAEpJ,OAFJ,CAAA2mG,EAAAv2F,KAAA,gBAAAu2F,EAAAv2F,KAAA,EAOvCwI,QAAQkD,IAAI,CACpBrd,EAAKy8D,iBAAiBt1D,EAAQvB,GAAY,GAC1C5F,EAAKosF,oBAAoBxmF,EAAY,MAAK,KATK,OAAAoiG,EAAAE,EAAAx0F,KAAAu0F,EAAAvrG,OAAA8qC,EAAA,EAAA9qC,CAAAsrG,EAAA,GAK/C1rC,EAL+C2rC,EAAA,IAM/C9B,EAN+C8B,EAAA,KAYzB3rC,IACtBlzC,EAASA,EAAOvX,KAAKs0F,EAAiBj3F,MAAMotD,KAbG,yBAAA4rC,EAAA/1F,SAAA41F,EAAAxsG,SAA/C,gBAAA4sG,GAAA,OAAAL,EAAAz1F,MAAA9W,KAAA8E,YAAA,IAbkB,cAAAwnG,EAAA7sF,OAAA,SA+BjBoO,GA/BiB,yBAAAy+E,EAAA11F,SAAAw1F,EAAApsG,SAltJRA,KAmvJlBgxF,cAnvJkB7vF,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAmvJF,SAAAg3F,IAAA,IAAAviG,EAAAujB,EAAAvd,EAAAw8F,EAAAhoG,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAA82F,GAAA,cAAAA,EAAA52F,KAAA42F,EAAA32F,MAAA,eAAO9L,EAAPwiG,EAAA/nG,OAAA,QAAAC,IAAA8nG,EAAA,GAAAA,EAAA,GAAuB,OACbroG,EAAKxE,MAAM6X,mBACjCxN,EAAkB7F,EAAKxE,MAAM2oC,oBAAoBnkC,EAAKxE,MAAM6X,mBAE1D+V,EAASppB,EAAK4R,MAAM,GACpB/F,EAAkB7L,EAAK4R,MAAM,GALnB02F,EAAA32F,KAAA,EAMR3R,EAAKgR,aAAatU,OAAOqF,KAAK8D,GAA9B,eAAA0iG,EAAA7rG,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAA+C,SAAAo3F,EAAOtjG,GAAP,IAAAU,EAAA6iG,EAAAC,EAAAC,EAAAhuC,EAAA,OAAAvtC,EAAAzyB,EAAA6W,KAAA,SAAAo3F,GAAA,cAAAA,EAAAl3F,KAAAk3F,EAAAj3F,MAAA,cAC7C/L,EAAcC,EAAgBX,GADe0jG,EAAAj3F,KAAA,EAEXwI,QAAQkD,IAAI,CAClDrd,EAAK4lG,WAAW1gG,EAAMU,GACtB5F,EAAKoM,mBAAmBxG,GAAY,GAAM,KAJO,OAAA6iG,EAAAG,EAAAl1F,KAAAg1F,EAAAhsG,OAAA8qC,EAAA,EAAA9qC,CAAA+rG,EAAA,GAE5CE,EAF4CD,EAAA,GAEpC/tC,EAFoC+tC,EAAA,GAO/CC,GAAWhuC,IACbvxC,EAASA,EAAOvX,KAAK82F,EAAQz5F,MAAMyrD,EAAgB9uD,kBACnDA,EAAkBA,EAAgBgG,KAAK8oD,EAAgB9uD,kBATN,wBAAA+8F,EAAAz2F,SAAAq2F,EAAAjtG,SAA/C,gBAAAstG,GAAA,OAAAN,EAAAl2F,MAAA9W,KAAA8E,YAAA,IANQ,cAoBd+oB,EAASA,EAAO7M,IAAI1Q,GApBNy8F,EAAAttF,OAAA,SAsBPoO,GAtBO,wBAAAk/E,EAAAn2F,SAAAi2F,EAAA7sG,SAnvJEA,KA2wJlButG,aA3wJkBpsG,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KA2wJH,SAAA23F,IAAA,IAAAC,EAAA7kE,EAAA,OAAA/W,EAAAzyB,EAAA6W,KAAA,SAAAy3F,GAAA,cAAAA,EAAAv3F,KAAAu3F,EAAAt3F,MAAA,cAGb6sD,MAAM0qC,UAAUC,IAAM,WACpB,OAAO5tG,KAAKkxB,OAAO,SAAS28E,EAAIC,GAAM,OAAOD,EAAKC,GAAO,IAG3D7qC,MAAM0qC,UAAUviG,IAAM,WACpB,OAAOpB,KAAKoB,IAAI0L,MAAM,KAAM9W,OAG9BijE,MAAM0qC,UAAUI,IAAM,WACpB,OAAO/tG,KAAK4tG,MAAM5tG,KAAK+E,QAGnB0oG,EAAM,GACN7kE,EAAsBnkC,EAAKxE,MAAM2oC,oBAhB1B8kE,EAAAt3F,KAAA,EAiBP3R,EAAKgR,aAAatU,OAAOqF,KAAKoiC,GAA9B,eAAAolE,EAAA7sG,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAAoD,SAAAo4F,EAAO3+D,GAAP,IAAAhlC,EAAAuN,EAAA,OAAAga,EAAAzyB,EAAA6W,KAAA,SAAAi4F,GAAA,cAAAA,EAAA/3F,KAAA+3F,EAAA93F,MAAA,cAClD9L,EAAkBs+B,EAAoB0G,GACtCz3B,EAAsB,SAAby3B,EAFyC4+D,EAAA93F,KAAA,EAGlD3R,EAAKgR,aAAatU,OAAOqF,KAAK8D,GAA9B,eAAA6jG,EAAAhtG,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAAgD,SAAAu4F,EAAOzkG,GAAP,IAAAU,EAAA65C,EAAAmqD,EAAAh7F,EAAAkzB,EAAA+nE,EAAAC,EAAAC,EAAA,OAAA38E,EAAAzyB,EAAA6W,KAAA,SAAAw4F,GAAA,cAAAA,EAAAt4F,KAAAs4F,EAAAr4F,MAAA,cAC9C/L,EAAcC,EAAgBX,GADgB8kG,EAAAr4F,KAAA,EAEhC3R,EAAKyT,gBAAgB7N,EAAYoJ,QAAQoE,EAAO,KAAK,MAAK,EAAM,KAAK,OAFrC,OAE9CqsC,EAF8CuqD,EAAAt2F,KAG9Ck2F,EAAS,GACXh7F,EAAY,KACVkzB,EAAO,GACP+nE,EAAS,GACTC,EAAW,GAEXC,EAAUtqD,EAAMA,EAAMn/C,OAAO,GAEnCm/C,EAAMh6C,QAAS,SAAAgwB,GACR7mB,IACHg7F,EAAOnjG,KAAK,SACZmjG,EAAOnjG,KAAK,QAGZmI,EAAY,GACZm7F,EAAQE,cAAcxkG,QAAS,SAAAykG,GAC7B,IAAMC,EAAgBvkG,EAAYgJ,UAAU6X,KAAM,SAAA2jF,GAAE,OAAMA,EAAGp7F,QAAQlK,gBAAkBolG,EAAGn7F,aAAajK,gBACnGqlG,GACFv7F,EAAUnI,KAAK0jG,KAKnBP,EAAOnjG,KAAK,YACZmjG,EAAOnjG,KAAK,cAEZojG,EAAM,KAAW,GACjBC,EAAQ,KAAW,GAEnBl7F,EAAUnJ,QAAS,SAAAkF,GACjBi/F,EAAOnjG,KAAK,OAAOkE,EAAEpJ,MACrBqoG,EAAOnjG,KAAK,SAASkE,EAAEpJ,MAEvBsoG,EAAOl/F,EAAEpJ,MAAQ,GACjBuoG,EAASn/F,EAAEpJ,MAAQ,KAGrBugC,EAAKr7B,KAAKmjG,EAAOt6F,KAAK,OAGxB,IAAMtJ,EAAO04D,IAAmB,IAAZjpC,EAAEvhB,WAAgBgB,OAAO,cACvCm1F,EAAOrqG,EAAK4R,MAAM6jB,EAAE60E,UAAU/tF,IAAI,MAAMjW,QAAQ,GAChDikG,EAAQtlG,WAAWwwB,EAAE+0E,WAErBhpE,EAAM,GACZA,EAAI/6B,KAAJ,GAAA9E,OAAYuD,EAAZ,KAAAvD,OAAqBkpC,IACrBrJ,EAAI/6B,KAAKT,GACTw7B,EAAI/6B,KAAK4jG,GACT7oE,EAAI/6B,KAAK8jG,GAELvkG,GAAM,eACR6jG,EAAM,KAASpjG,KAAKxB,WAAWolG,IAC/BP,EAAQ,KAASrjG,KAAKxB,WAAWslG,KAGnC37F,EAAUnJ,QAAS,SAAAglG,GACjB,IAAMC,EAAQj1E,EAAEw0E,cAAcxjF,KAAM,SAAA9b,GAAC,OAAKA,EAAEoE,aAAajK,gBAAkB2lG,EAAMz7F,QAAQlK,gBACrF6lG,EAAQ,GACRC,EAAS,GACb,GAAIF,EAAM,CAGR,GAFAE,EAAU5qG,EAAK4R,MAAM84F,EAAMG,WAAWzgG,QAAwC,UAA9BnF,WAAWylG,EAAMG,WACjEF,EAAS3qG,EAAK4R,MAAM84F,EAAML,MAAMjgG,QAA6C,UAAnCpK,EAAK4R,MAAM84F,EAAML,MAAM9tF,IAAI,MAClB,qBAAxCmuF,EAAK,GAAA/oG,OAAI8oG,EAAMlpG,KAAV,kBAA+C,CAC7D,IAAMupG,EAAiB9qG,EAAK4R,MAAM84F,EAAK,GAAA/oG,OAAI8oG,EAAMlpG,KAAV,mBAAgCgb,IAAI,MACtEuuF,EAAe1gG,UAClBugG,EAAQA,EAAM94F,KAAKi5F,IAInB9kG,GAAM,eACHoE,MAAMnF,WAAW0lG,KACpBd,EAAOY,EAAMlpG,MAAMkF,KAAKxB,WAAW0lG,IAEhCvgG,MAAMnF,WAAW2lG,KACpBd,EAASW,EAAMlpG,MAAMkF,KAAKxB,WAAW2lG,KAK3CppE,EAAI/6B,KAAKkkG,GACTnpE,EAAI/6B,KAAKmkG,KAGX9oE,EAAKr7B,KAAK+6B,EAAIlyB,KAAK,QAGrB5S,OAAOqF,KAAK8nG,GAAQpkG,QAAS,SAAAkF,GAC3B,IAAMogG,EAAUlB,EAAOl/F,GAAGw+F,MAAMU,EAAOl/F,GAAGrK,OAC1CN,EAAK0a,UAAL,GAAA/Y,OAAkBuD,EAAlB,KAAAvD,OAA2BkpC,EAA3B,KAAAlpC,OAAuCgJ,EAAvC,iBAAAhJ,OAAwDopG,MAG1DruG,OAAOqF,KAAK+nG,GAAUrkG,QAAS,SAAAkF,GAC7B,IAAMugC,EAAW4+D,EAASn/F,GAAGw+F,MAAMW,EAASn/F,GAAGrK,OAC/CN,EAAK0a,UAAL,GAAA/Y,OAAkBuD,EAAlB,KAAAvD,OAA2BkpC,EAA3B,KAAAlpC,OAAuCgJ,EAAvC,kBAAAhJ,OAAyDupC,MAO3D89D,EAAIviG,KAAKq7B,EAAKxyB,KAAK,OAvGiC,yBAAA06F,EAAA73F,SAAAw3F,EAAApuG,SAAhD,gBAAAyvG,GAAA,OAAAtB,EAAAr3F,MAAA9W,KAAA8E,YAAA,IAHkD,wBAAAopG,EAAAt3F,SAAAq3F,EAAAjuG,SAApD,gBAAA0vG,GAAA,OAAA1B,EAAAl3F,MAAA9W,KAAA8E,YAAA,IAjBO,OA+HbL,EAAK0a,UAAUsuF,EAAI15F,KAAK,OA/HX,wBAAA25F,EAAA92F,SAAA42F,EAAAxtG,SA3wJGA,KA44JlBuwF,gBA54JkBpvF,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KA44JA,SAAA85F,IAAA,IAAAvoE,EAAA98B,EAAA+9B,EAAAxa,EAAA+hF,EAAA9qG,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAA45F,GAAA,cAAAA,EAAA15F,KAAA05F,EAAAz5F,MAAA,cAAOgxB,EAAPwoE,EAAA7qG,OAAA,QAAAC,IAAA4qG,EAAA,GAAAA,EAAA,GAAgB,KAAKtlG,EAArBslG,EAAA7qG,OAAA,QAAAC,IAAA4qG,EAAA,GAAAA,EAAA,GAAqC,KAAKvnE,EAA1CunE,EAAA7qG,OAAA,QAAAC,IAAA4qG,EAAA,GAAAA,EAAA,GAAuD,KACnE/hF,EAASppB,EAAK4R,MAAM,GAEnB/L,IACHA,EAAkB7F,EAAKxE,MAAM2oC,oBAAoBnkC,EAAKxE,MAAM6X,mBAJ9C+3F,EAAAz5F,KAAA,EAOV3R,EAAKgR,aAAatU,OAAOqF,KAAK8D,GAA9B,eAAAwlG,EAAA3uG,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAA+C,SAAAk6F,EAAOpmG,GAAP,IAAAU,EAAAqB,EAAAskG,EAAA,OAAAn+E,EAAAzyB,EAAA6W,KAAA,SAAAg6F,GAAA,cAAAA,EAAA95F,KAAA85F,EAAA75F,MAAA,cAC7C/L,EAAcC,EAAgBX,GAC9B+B,EAAgB07B,EAAW,CAACA,GAAY,KAFK6oE,EAAA75F,KAAA,EAGpB3R,EAAK25F,qBAAqB/zF,EAAY08B,KAAKtzB,QAAQ40B,EAAa38B,GAH5C,QAG7CskG,EAH6CC,EAAA93F,OAI3B63F,EAAiBxzD,QACvC3uB,EAASA,EAAOvX,KAAK05F,EAAiBxzD,QALW,wBAAAyzD,EAAAr5F,SAAAm5F,EAAA/vG,SAA/C,gBAAAkwG,GAAA,OAAAJ,EAAAh5F,MAAA9W,KAAA8E,YAAA,IAPU,cAAA+qG,EAAApwF,OAAA,SAeToO,GAfS,wBAAAgiF,EAAAj5F,SAAA+4F,EAAA3vG,SA54JAA,KA65JlB2wF,gBAAkB,WAIhB,OAHKlsF,EAAKy9D,eACRz9D,EAAKy9D,aAAe,IAAI5D,EAAa75D,EAAKxE,QAErCwE,EAAKy9D,cAj6JIliE,KAm6JlBmwG,kBAAoB,SAAC9lG,GACnB,IAAMwjB,EAAS,GACT0iB,EAAY9rC,EAAKqH,gBAAgB,CAAC,cAexC,OAdA3K,OAAOqF,KAAK+pC,GAAWrmC,QAAS,SAAAk9B,GAC9B,IAAMwmD,EAAiBr9C,EAAUnJ,GAC5BwmD,EAAez8D,UAAWy8D,EAAejoC,eAAe/7C,SAASS,EAAY08B,KAAKp9B,SAGvD,SAA5BikF,EAAetoC,SACjBz3B,EAAOuZ,GAAYwmD,EAEGvjF,EAAYgJ,UAAU6X,KAAM,SAAA9b,GAAC,OAAKA,EAAE+hB,SAAW/hB,EAAEpJ,KAAKuD,gBAAkBqkF,EAAetoC,SAAS/7C,kBAEpHskB,EAAOuZ,GAAYwmD,MAIlB//D,GAp7JS7tB,KAs7JlBohE,qBAAuB,SAACgvC,GAAuC,IAAjCttD,EAAiCh+C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAvB,MAAMm+C,EAAiBn+C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAZ,QAC3CsnD,EAAgB3nD,EAAK4R,MAAM5R,EAAKqH,gBAAgB,CAAC,UAAU,mBAC3DugD,EAAiB5nD,EAAK4R,MAAM5R,EAAKqH,gBAAgB,CAAC,UAAU,oBAC5DukG,EAAc,CAClBt0B,IAAM,CACJu0B,MAAQlkD,EAAcprC,IAAI,YAC1BuvF,OAASlkD,EAAerrC,IAAI,aAE9Bg7D,KAAO,CACLs0B,MAAQlkD,EAAcprC,IAAI,SAC1BuvF,OAASlkD,EAAerrC,IAAI,UAE9BwvF,MAAQ,CACNF,MAAQlkD,EAAcprC,IAAI,IAC1BuvF,OAASlkD,EAAerrC,IAAI,KAE9ByvF,KAAO,CACLH,MAAQlkD,EAAcprC,IAAI,GAC1BuvF,OAASlkD,EAAerrC,IAAI,KAIhC,OADAovF,EAAQ3rG,EAAK4R,MAAM+5F,MACLA,EAAMvhG,QACXuhG,EAAMz8F,MAAM08F,EAAYvtD,GAAWG,IAErC,MA/8JSjjD,KAi9JlB0wG,kCAj9JkB,eAAAC,EAAAxvG,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAi9JkB,SAAA+6F,EAAOhlG,GAAP,IAAAvB,EAAAqB,EAAAmlG,EAAAtgE,EAAAugE,EAAAhsG,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAA86F,GAAA,cAAAA,EAAA56F,KAAA46F,EAAA36F,MAAA,cAAe/L,EAAfymG,EAAA/rG,OAAA,QAAAC,IAAA8rG,EAAA,GAAAA,EAAA,GAA2B,KAAKplG,EAAhColG,EAAA/rG,OAAA,QAAAC,IAAA8rG,EAAA,GAAAA,EAAA,GAA8C,KAC1ED,EAA4B,GAC5BtgE,EAAY9rC,EAAKqH,gBAAgB,CAAC,cAFNilG,EAAA36F,KAAA,EAI5B3R,EAAKgR,aAAatU,OAAOqF,KAAK+pC,GAA9B,eAAAygE,EAAA7vG,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAAyC,SAAAo7F,EAAO7pE,GAAP,IAAAwmD,EAAAtjF,EAAAujB,EAAAq0C,EAAA,OAAArwC,EAAAzyB,EAAA6W,KAAA,SAAAi7F,GAAA,cAAAA,EAAA/6F,KAAA+6F,EAAA96F,MAAA,WACzC1K,GAAkBA,EAAc9B,SAASw9B,GADA,CAAA8pE,EAAA96F,KAAA,eAAA86F,EAAAzxF,OAAA,qBAKvCmuE,EAAiBr9C,EAAUnJ,IAEbjW,QAPyB,CAAA+/E,EAAA96F,KAAA,eAAA86F,EAAAzxF,OAAA,kBAWvCnV,EAAkB,IACRD,EAAYV,OAASU,EAEjCwjB,EAAS,KAdgCqjF,EAAA13C,GAerCpyB,EAfqC8pE,EAAA96F,KAgBtC,SAhBsC86F,EAAA13C,GAAA,GAmBtC,SAnBsC03C,EAAA13C,GAAA,2BAAA03C,EAAA96F,KAAA,GAiB1B3R,EAAKgsF,wBAAwB7kF,EAAQtB,GAjBX,eAiBzCujB,EAjByCqjF,EAAA/4F,KAAA+4F,EAAAzxF,OAAA,2BAoBnCyiD,EAAez9D,EAAKksF,kBApBeugB,EAAA96F,KAAA,GAqB1B8rD,EAAa9B,oBAAoBx0D,EAAQtB,GArBf,eAqBzCujB,EArByCqjF,EAAA/4F,KAAA+4F,EAAAzxF,OAAA,2BAAAyxF,EAAAzxF,OAAA,oBA2BzCoO,IACFA,EAASA,EAAO7M,IAAI,MAChB4sE,EAAeloC,wBACjB73B,EAASppB,EAAK28D,qBAAqBvzC,EAAO+/D,EAAeloC,sBAAsBkoC,EAAenoC,mBAEhGorD,EAA0BzpE,GAAYvZ,GAhCK,yBAAAqjF,EAAAt6F,SAAAq6F,EAAAjxG,SAAzC,gBAAAmxG,GAAA,OAAAH,EAAAl6F,MAAA9W,KAAA8E,YAAA,IAJ4B,cAAAisG,EAAAtxF,OAAA,SAwC3BoxF,GAxC2B,wBAAAE,EAAAn6F,SAAAg6F,EAAA5wG,SAj9JlB,gBAAAoxG,GAAA,OAAAT,EAAA75F,MAAA9W,KAAA8E,YAAA,GAAA9E,KA2/JlBqxG,8BA3/JkB,eAAAC,EAAAnwG,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KA2/Jc,SAAA07F,EAAOlnG,GAAP,IAAAmnG,EAAAC,EAAAC,EAAA5sG,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAA07F,GAAA,cAAAA,EAAAx7F,KAAAw7F,EAAAv7F,MAAA,cAAAs7F,EAAA3sG,OAAA,QAAAC,IAAA0sG,EAAA,GAAAA,EAAA,GAAiC,KACzDF,EAAwB,GACxBC,EAAiBhtG,EAAK0rG,kBAAkB9lG,GAFhBsnG,EAAAv7F,KAAA,EAIxB3R,EAAKgR,aAAatU,OAAOqF,KAAKirG,GAA9B,eAAAG,EAAAzwG,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAA+C,SAAAg8F,EAAOzqE,GAAP,IAAA0qE,EAAAlkB,EAAA1rB,EAAA,OAAArwC,EAAAzyB,EAAA6W,KAAA,SAAA87F,GAAA,cAAAA,EAAA57F,KAAA47F,EAAA37F,MAAA,OAC/C07F,EAAW,KACTlkB,EAAiB6jB,EAAerqE,GAFa2qE,EAAAv4C,GAI3CpyB,EAJ2C2qE,EAAA37F,KAK5C,SAL4C27F,EAAAv4C,GAAA,EAQ5C,YAR4Cu4C,EAAAv4C,GAAA,EAW5C,SAX4Cu4C,EAAAv4C,GAAA,0BAAAu4C,EAAA37F,KAAA,EAM9B3R,EAAKosF,oBAAoBxmF,EAAY,MAAK,GANZ,cAM/CynG,EAN+CC,EAAA55F,KAAA45F,EAAAtyF,OAAA,0BAAAsyF,EAAA37F,KAAA,GAS9B3R,EAAKqsF,uBAAuBzmF,EAAY,MAAK,GATf,eAS/CynG,EAT+CC,EAAA55F,KAAA45F,EAAAtyF,OAAA,2BAYzCyiD,EAAez9D,EAAKksF,kBAZqBohB,EAAA37F,KAAA,GAa9B8rD,EAAavC,SAASt1D,EAAY08B,KAAKtzB,SAbT,eAa/Cq+F,EAb+CC,EAAA55F,KAAA45F,EAAAtyF,OAAA,2BAAAsyF,EAAAtyF,OAAA,oBAmB/CqyF,IACFA,EAAWA,EAAS9wF,IAAI,MACpB4sE,EAAeloC,uBAAyBkoC,EAAenoC,mBACzDqsD,EAAWrtG,EAAK28D,qBAAqB0wC,EAASlkB,EAAeloC,sBAAsBkoC,EAAenoC,mBAEpG+rD,EAAsBpqE,GAAY0qE,GAxBe,yBAAAC,EAAAn7F,SAAAi7F,EAAA7xG,SAA/C,gBAAAgyG,GAAA,OAAAJ,EAAA96F,MAAA9W,KAAA8E,YAAA,IAJwB,cAAA6sG,EAAAlyF,OAAA,SAgCvB+xF,GAhCuB,wBAAAG,EAAA/6F,SAAA26F,EAAAvxG,SA3/Jd,gBAAAiyG,GAAA,OAAAX,EAAAx6F,MAAA9W,KAAA8E,YAAA,GAAA9E,KA6hKlBkyG,iBA7hKkB,eAAAC,EAAAhxG,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KA6hKC,SAAAu8F,EAAOzoG,EAAMU,GAAb,IAAAqB,EAAA6kC,EAAA8hE,EAAAC,EAAAxtG,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAAs8F,GAAA,cAAAA,EAAAp8F,KAAAo8F,EAAAn8F,MAAA,cAAyB1K,EAAzB4mG,EAAAvtG,OAAA,QAAAC,IAAAstG,EAAA,GAAAA,EAAA,GAAuC,KAClD/hE,EAAY9rC,EAAKqH,gBAAgB,CAAC,cAClCumG,EAAgB,GAFLE,EAAAn8F,KAAA,EAIX3R,EAAKgR,aAAatU,OAAOqF,KAAK+pC,GAA9B,eAAAiiE,EAAArxG,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAAyC,SAAA48F,EAAOrrE,GAAP,IAAAwmD,EAAA//D,EAAAuxC,EAAAszC,EAAAC,EAAArK,EAAAM,EAAAgK,EAAAC,EAAAC,EAAAlH,EAAA1pC,EAAA,OAAArwC,EAAAzyB,EAAA6W,KAAA,SAAA88F,GAAA,cAAAA,EAAA58F,KAAA48F,EAAA38F,MAAA,WAEzC1K,GAAkBA,EAAc9B,SAASw9B,GAFA,CAAA2rE,EAAA38F,KAAA,eAAA28F,EAAAtzF,OAAA,qBAMvCmuE,EAAiBr9C,EAAUnJ,IAEbjW,UAA6C,IAAlCy8D,EAAepoC,eARD,CAAAutD,EAAA38F,KAAA,eAAA28F,EAAAtzF,OAAA,iBAYzCoO,EAAS,KACTuxC,EAAkB,KAbuB2zC,EAAAv5C,GAerCpyB,EAfqC2rE,EAAA38F,KAgBtC,YAhBsC28F,EAAAv5C,GAAA,GAsCtC,SAtCsCu5C,EAAAv5C,GAAA,GA4DtC,SA5DsCu5C,EAAAv5C,GAAA,oBAAAu5C,EAAAvjC,GAiBjCoe,EAAepoC,eAjBkButD,EAAA38F,MAAA28F,EAAAvjC,GAAA,yBAAAujC,EAAA38F,KAAA,GAoBJwI,QAAQkD,IAAI,CAC3Crd,EAAKklG,cAAchgG,EAAMU,GACzB5F,EAAKoM,mBAAmBxG,GAAY,GAAM,KAtBP,eAAAqoG,EAAAK,EAAA56F,KAAAw6F,EAAAxxG,OAAA8qC,EAAA,EAAA9qC,CAAAuxG,EAAA,GAoBpC7kF,EApBoC8kF,EAAA,IAoB7BvzC,EApB6BuzC,EAAA,MA2B7BrK,EAAej+F,EAAYgJ,UAAU6X,KAAM,SAAA9b,GAAC,OAAKA,EAAEpJ,OAAS4nF,EAAetoC,aAE3E8Z,EAAgB5uD,yBAAyB83F,EAAa70F,QAAQlK,iBAC1Dq/F,EAAqBxpC,EAAgB5uD,yBAAyB83F,EAAa70F,QAAQlK,eACzFskB,EAASA,EAAOla,MAAMi1F,IA/BSmK,EAAAtzF,OAAA,2BAAAszF,EAAAtzF,OAAA,oBAAAszF,EAAA/iC,GAuCjC4d,EAAepoC,eAvCkButD,EAAA38F,MAAA28F,EAAA/iC,GAAA,yBAAA+iC,EAAA38F,KAAA,GA0CJwI,QAAQkD,IAAI,CAC3Crd,EAAK4lG,WAAW1gG,EAAMU,GACtB5F,EAAKoM,mBAAmBxG,GAAY,GAAM,KA5CP,eAAAuoG,EAAAG,EAAA56F,KAAA06F,EAAA1xG,OAAA8qC,EAAA,EAAA9qC,CAAAyxG,EAAA,GA0CpC/kF,EA1CoCglF,EAAA,IA0C7BzzC,EA1C6ByzC,EAAA,MAiD7BC,EAAezoG,EAAYgJ,UAAU6X,KAAM,SAAA9b,GAAC,MAAgB,aAAXA,EAAEpJ,SAEnDo5D,EAAgB5uD,yBAAyBsiG,EAAar/F,QAAQlK,iBAC1DqiG,EAAyBxsC,EAAgB5uD,yBAAyBsiG,EAAar/F,QAAQlK,eAC7FskB,EAASA,EAAOla,MAAMi4F,IArDSmH,EAAAtzF,OAAA,2BAAAszF,EAAAtzF,OAAA,oBA6DnCyiD,EAAez9D,EAAKksF,kBA7DeoiB,EAAAniB,GA8DjChD,EAAepoC,eA9DkButD,EAAA38F,KA+DlC,QA/DkC28F,EAAAniB,GAAA,GAkElC,iBAlEkCmiB,EAAAniB,GAAA,GAyElC,qBAzEkCmiB,EAAAniB,GAAA,2BAAAmiB,EAAA38F,KAAA,GAgEtB8rD,EAAanD,OAAOp1D,EAAMU,GAhEJ,eAgErCwjB,EAhEqCklF,EAAA56F,KAAA46F,EAAAtzF,OAAA,2BAAAszF,EAAA38F,KAAA,GAmEtB8rD,EAAavC,SAASt1D,EAAY08B,KAAKtzB,SAnEjB,eAmErCoa,EAnEqCklF,EAAA56F,QAqEnC0V,EAASppB,EAAKuU,iBAAiB6U,EAAO,IACtCA,EAASppB,EAAK28D,qBAAqBvzC,EAAO+/D,EAAeloC,sBAAsBkoC,EAAenoC,mBAtE3DstD,EAAAtzF,OAAA,2BAAAszF,EAAA38F,KAAA,GA0EtB8rD,EAAa9B,oBAAoB/1D,GA1EX,eA0ErCwjB,EA1EqCklF,EAAA56F,KAAA46F,EAAAtzF,OAAA,2BAAAszF,EAAAtzF,OAAA,mCAAAszF,EAAAtzF,OAAA,oBAoF9B,OAAXoO,GAAmBppB,EAAK4R,MAAMwX,GAAQ1U,GAAG,KAC3Ck5F,EAAcjrE,GAAYvZ,GArFiB,yBAAAklF,EAAAn8F,SAAA67F,EAAAzyG,SAAzC,gBAAAgzG,GAAA,OAAAR,EAAA17F,MAAA9W,KAAA8E,YAAA,IAJW,cAAAytG,EAAA9yF,OAAA,SA6FV4yF,GA7FU,wBAAAE,EAAA37F,SAAAw7F,EAAApyG,SA7hKD,gBAAAizG,EAAAC,GAAA,OAAAf,EAAAr7F,MAAA9W,KAAA8E,YAAA,GAAA9E,KA4nKlBo+F,qBA5nKkBj9F,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KA4nKK,SAAAs9F,IAAA,IAAA1/F,EAAA40B,EAAA38B,EAAAuzD,EAAA3zC,EAAAilB,EAAA8sD,EAAA+V,EAAAtuG,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAAo9F,GAAA,cAAAA,EAAAl9F,KAAAk9F,EAAAj9F,MAAA,UAAO3C,EAAP2/F,EAAAruG,OAAA,QAAAC,IAAAouG,EAAA,GAAAA,EAAA,GAAe,KAAK/qE,EAApB+qE,EAAAruG,OAAA,QAAAC,IAAAouG,EAAA,GAAAA,EAAA,GAAiC,MAAM1nG,EAAvC0nG,EAAAruG,OAAA,QAAAC,IAAAouG,EAAA,GAAAA,EAAA,GAAqD,KACrE3/F,IACHA,EAAUhP,EAAKxE,MAAMoK,YAAY08B,KAAKtzB,SAGlCwrD,EALe,wBAAA74D,OAKyBqN,EALzB,KAAArN,OAKoCiiC,EALpC,KAAAjiC,OAKoDmF,KAAKC,UAAUE,MAClF4f,EAAa7mB,EAAKk1E,cAAc1a,IANjB,CAAAo0C,EAAAj9F,KAAA,eAAAi9F,EAAA5zF,OAAA,SAQZ6L,GARY,cAWfilB,EAAY9rC,EAAKqH,gBAAgB,CAAC,cAClCuxF,EAAoB,GAZLgW,EAAAj9F,KAAA,GAcf3R,EAAKgR,aAAatU,OAAOqF,KAAK+pC,GAA9B,eAAA+iE,EAAAnyG,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAAyC,SAAA09F,EAAO5pG,GAAP,IAAAikF,EAAAvzC,EAAAhT,EAAAmsE,EAAAC,EAAA3+E,EAAA,OAAAjD,EAAAzyB,EAAA6W,KAAA,SAAAy9F,GAAA,cAAAA,EAAAv9F,KAAAu9F,EAAAt9F,MAAA,WAEzC1K,GAAkBA,EAAc9B,SAASD,GAFA,CAAA+pG,EAAAt9F,KAAA,eAAAs9F,EAAAj0F,OAAA,qBAMvCmuE,EAAiBr9C,EAAU5mC,IAEbwnB,QARyB,CAAAuiF,EAAAt9F,KAAA,eAAAs9F,EAAAj0F,OAAA,wBAYvC46B,EAAkB,CACtB5mC,QAAQm6E,EAAe7nC,iBAAmB6nC,EAAen6E,SAbdigG,EAAAt9F,KAAA,EAiBjB3R,EAAKuzF,mBAAmBruF,EAAM8J,GAjBb,YAiBzC4zB,EAjByCqsE,EAAAv7F,MAAA,CAAAu7F,EAAAt9F,KAAA,YAqBvCo9F,EAAsB,MACtBnrE,EAtBuC,CAAAqrE,EAAAt9F,KAAA,gBAuBnCq9F,EAAkBhvG,EAAKqH,gBAAgB,CAAC,QAAQ,SAASu8B,IAvBtBqrE,EAAAv9F,KAAA,GAAAu9F,EAAAt9F,KAAA,GAyBX3R,EAAKg7D,yBAAyBg0C,EAAgBp5D,GAzBnC,QAyBvCm5D,EAzBuCE,EAAAv7F,KAAAu7F,EAAAt9F,KAAA,iBAAAs9F,EAAAv9F,KAAA,GAAAu9F,EAAAl6C,GAAAk6C,EAAA,UA2BvCF,EAAsB/uG,EAAK4R,MAAM,GA3BM,QA+BrCye,EAAerwB,EAAKuU,iBAAiBquB,EAAgBkJ,EAAU5mC,GAAOY,SAASipG,GAGrFnW,EAAkB1zF,GAASmrB,EAGtBuoE,EAAkB7gD,QACrB6gD,EAAkB7gD,MAAQ/3C,EAAK4R,MAAM,IAIvCgnF,EAAkB7gD,MAAQ6gD,EAAkB7gD,MAAMlmC,KAAK+mF,EAAkB1zF,IA1C9B,yBAAA+pG,EAAA98F,SAAA28F,EAAAvzG,KAAA,cAAzC,gBAAA2zG,GAAA,OAAAL,EAAAx8F,MAAA9W,KAAA8E,YAAA,IAde,eAAAuuG,EAAA5zF,OAAA,SA4Ddhb,EAAK8mB,cAAc0zC,EAAco+B,IA5DnB,yBAAAgW,EAAAz8F,SAAAu8F,EAAAnzG,SA5nKLA,KA0rKlB4zG,2BAA6B,SAACngG,GAC5B,IAAKA,EACH,OAAO,EAET,IAAM88B,EAAY9rC,EAAKqH,gBAAgB,CAAC,cACxC,OAAO3K,OAAOwG,OAAO4oC,GAAWrlB,KAAM,SAAA7gB,GAAW,OAAKA,EAAY8mB,SAAW9mB,EAAYoJ,QAAQlK,gBAAkBkK,EAAQlK,iBA/rK3GvJ,KAisKlBmwC,6BAjsKkBhvC,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAisKa,SAAAg+F,IAAA,IAAAjoG,EAAAtB,EAAA+9B,EAAAyrE,EAAA70C,EAAA3zC,EAAA6b,EAAA4sE,EAAAC,EAAAlvG,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAAg+F,GAAA,cAAAA,EAAA99F,KAAA89F,EAAA79F,MAAA,UAAOxK,EAAPooG,EAAAjvG,OAAA,QAAAC,IAAAgvG,EAAA,GAAAA,EAAA,GAAe,KAAK1pG,EAApB0pG,EAAAjvG,OAAA,QAAAC,IAAAgvG,EAAA,GAAAA,EAAA,GAAoC,KAAK3rE,EAAzC2rE,EAAAjvG,OAAA,QAAAC,IAAAgvG,EAAA,GAAAA,EAAA,GAAsD,KAAKF,IAA3DE,EAAAjvG,OAAA,QAAAC,IAAAgvG,EAAA,KAAAA,EAAA,GAGvB/0C,EAHuB,6BAAA74D,OAGsBwF,EAHtB,KAAAxF,OAGiCmF,KAAKC,UAAUlB,GAHhD,KAAAlE,OAGoEiiC,EAHpE,KAAAjiC,OAGoF0tG,KAC3GxoF,EAAa7mB,EAAKq7D,8BAA8Bb,KACnCx6D,EAAK4R,MAAMiV,GAAYzc,QALb,CAAAolG,EAAA79F,KAAA,eAAA69F,EAAAx0F,OAAA,SAMpBhb,EAAK4R,MAAMiV,IANS,cAAA2oF,EAAA79F,KAAA,GASO3R,EAAKyiC,yBAAyBt7B,EAAQtB,EAAgB+9B,EAAa,KAAKyrE,GAT/E,aASvB3sE,EATuB8sE,EAAA97F,MAAA,CAAA87F,EAAA79F,KAAA,gBAWrB29F,EAAoB5yG,OAAOwG,OAAOw/B,GAAuBjW,OAAQ,SAACg3C,EAAKgsC,GAE3E,OADAhsC,EAAMA,EAAI5xD,KAAK7R,EAAK4R,MAAM69F,KAEzBzvG,EAAK4R,MAAM,IAda49F,EAAAx0F,OAAA,SAgBpBhb,EAAKs7D,8BAA8Bd,EAAc80C,IAhB7B,eAAAE,EAAAx0F,OAAA,SAkBtBhb,EAAK4R,MAAM,IAlBW,yBAAA49F,EAAAr9F,SAAAi9F,EAAA7zG,SAjsKbA,KAqtKlBm0G,oBArtKkB,eAAAC,EAAAjzG,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAqtKI,SAAAw+F,EAAOzoG,EAAQvB,GAAf,IAAAwjB,EAAAymF,EAAA,OAAAziF,EAAAzyB,EAAA6W,KAAA,SAAAs+F,GAAA,cAAAA,EAAAp+F,KAAAo+F,EAAAn+F,MAAA,cACfxK,IACHA,EAAUnH,EAAKxE,MAAM2L,SAEjBiiB,EAAS,GAJK0mF,EAAAn+F,KAAA,EAKW3R,EAAKq1B,oBAAoBzvB,EAAY08B,KAAKp9B,MAAM,sBAAsB,CAACiC,IALlF,YAKd0oG,EALcC,EAAAp8F,MAAA,CAAAo8F,EAAAn+F,KAAA,eAAAm+F,EAAAn+F,KAAA,EAOZ3R,EAAKgR,aAAa6+F,EAAlB,eAAAE,EAAArzG,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAAoC,SAAA4+F,EAAOP,EAAeQ,GAAtB,IAAAC,EAAA/mB,EAAA,OAAA/7D,EAAAzyB,EAAA6W,KAAA,SAAA2+F,GAAA,cAAAA,EAAAz+F,KAAAy+F,EAAAx+F,MAAA,cAAAw+F,EAAAx+F,KAAA,EAEV3R,EAAKq1B,oBAAoBzvB,EAAY08B,KAAKp9B,MAAM,YAAY,CAAC+qG,IAFnD,QAElCC,EAFkCC,EAAAz8F,QAKhCy1E,EAAiBnpF,EAAKmvG,2BAA2Be,MAGrD9mF,EAAO+/D,EAAejkF,OAAS+qG,GARK,wBAAAE,EAAAh+F,SAAA69F,EAAAz0G,SAApC,gBAAA60G,EAAAC,GAAA,OAAAN,EAAA19F,MAAA9W,KAAA8E,YAAA,IAPY,cAAAyvG,EAAA90F,OAAA,SAqBboO,GArBa,wBAAA0mF,EAAA39F,SAAAy9F,EAAAr0G,SArtKJ,gBAAA+0G,EAAAC,GAAA,OAAAZ,EAAAt9F,MAAA9W,KAAA8E,YAAA,GAAA9E,KA4uKlBknC,yBA5uKkB/lC,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KA4uKS,SAAAo/F,IAAA,IAAArpG,EAAAtB,EAAA+9B,EAAA6sE,EAAApB,EAAAjmF,EAAAsnF,EAAArwG,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAAm/F,GAAA,cAAAA,EAAAj/F,KAAAi/F,EAAAh/F,MAAA,cAAOxK,EAAPupG,EAAApwG,OAAA,QAAAC,IAAAmwG,EAAA,GAAAA,EAAA,GAAe,KAAK7qG,EAApB6qG,EAAApwG,OAAA,QAAAC,IAAAmwG,EAAA,GAAAA,EAAA,GAAoC,KAAK9sE,EAAzC8sE,EAAApwG,OAAA,QAAAC,IAAAmwG,EAAA,GAAAA,EAAA,GAAsD,KAAKD,EAA3DC,EAAApwG,OAAA,QAAAC,IAAAmwG,EAAA,GAAAA,EAAA,GAAgF,KAAKrB,EAArFqB,EAAApwG,OAAA,QAAAC,IAAAmwG,EAAA,IAAAA,EAAA,GACpBvpG,IACHA,EAAUnH,EAAKxE,MAAM2L,UAElBtB,GAAmB7F,EAAKxE,MAAM2oC,qBAAuBnkC,EAAKxE,MAAM6X,mBACnExN,EAAkB7F,EAAKxE,MAAM2oC,oBAAoBnkC,EAAKxE,MAAM6X,mBAGxD+V,EAAS,GARUunF,EAAAh/F,KAAA,GAUnB3R,EAAKgR,aAAatU,OAAOqF,KAAK8D,GAA9B,eAAA+qG,EAAAl0G,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAA+C,SAAAy/F,EAAO3rG,GAAP,IAAAuyE,EAAAo4B,EAAA,OAAAziF,EAAAzyB,EAAA6W,KAAA,SAAAs/F,GAAA,cAAAA,EAAAp/F,KAAAo/F,EAAAn/F,MAAA,cAC7C8lE,EAAkB5xE,EAAgBX,GAAOo9B,KADIwuE,EAAAn/F,KAAA,EAIpB3R,EAAKq1B,oBAAoBoiD,EAAgBvyE,MAAM,sBAAsB,CAACiC,IAJlD,YAI7C0oG,EAJ6CiB,EAAAp9F,MAAA,CAAAo9F,EAAAn/F,KAAA,eAAAm/F,EAAAn/F,KAAA,EAS3C3R,EAAKgR,aAAa6+F,EAAlB,eAAAkB,EAAAr0G,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAAoC,SAAA4/F,EAAOvB,EAAeQ,GAAtB,IAAAC,EAAA/mB,EAAA4lB,EAAAC,EAAA,OAAA5hF,EAAAzyB,EAAA6W,KAAA,SAAAy/F,GAAA,cAAAA,EAAAv/F,KAAAu/F,EAAAt/F,MAAA,cACxC89F,EAAiBzvG,EAAK4R,MAAM69F,GADYwB,EAAAt/F,KAAA,EAGV3R,EAAKq1B,oBAAoBoiD,EAAgBvyE,MAAM,YAAY,CAAC+qG,IAHlD,YAGlCC,EAHkCe,EAAAv9F,MAAA,CAAAu9F,EAAAt/F,KAAA,cAQhCw3E,EAAiBsnB,GAA8CzwG,EAAKmvG,2BAA2Be,KAE7Eb,IAAoBlmB,EAAepiE,cAAgBoiE,EAAen6E,SAAWm6E,EAAen6E,QAAQlK,gBAAkBorG,EAAgBprG,cAVxH,CAAAmsG,EAAAt/F,KAAA,YAahCo9F,EAAsB,MACtBnrE,EAdgC,CAAAqtE,EAAAt/F,KAAA,cAe5Bq9F,EAAkBhvG,EAAKqH,gBAAgB,CAAC,QAAQ,SAASu8B,KAf7B,CAAAqtE,EAAAt/F,KAAA,gBAAAs/F,EAAAv/F,KAAA,GAAAu/F,EAAAt/F,KAAA,GAkBF3R,EAAKg7D,yBAAyBg0C,EAAgB7lB,GAlB5C,QAkB9B4lB,EAlB8BkC,EAAAv9F,KAAAu9F,EAAAt/F,KAAA,iBAAAs/F,EAAAv/F,KAAA,GAAAu/F,EAAAl8C,GAAAk8C,EAAA,kBAyBpCxB,EAAiBzvG,EAAKuU,iBAAiBk7F,EAAetmB,EAAerjF,SAASipG,GAKzE3lF,EAAO+/D,EAAejkF,SACzBkkB,EAAO+/D,EAAejkF,OAASlF,EAAK4R,MAAM,IAI5CwX,EAAO+/D,EAAejkF,OAASkkB,EAAO+/D,EAAejkF,OAAO2M,KAAK49F,GAnC7B,yBAAAwB,EAAA9+F,SAAA6+F,EAAAz1G,KAAA,cAApC,gBAAA21G,EAAAC,GAAA,OAAAJ,EAAA1+F,MAAA9W,KAAA8E,YAAA,IAT2C,wBAAAywG,EAAA3+F,SAAA0+F,EAAAt1G,SAA/C,gBAAA61G,GAAA,OAAAR,EAAAv+F,MAAA9W,KAAA8E,YAAA,IAVmB,eAAAswG,EAAA31F,OAAA,SA6DlBoO,GA7DkB,yBAAAunF,EAAAx+F,SAAAq+F,EAAAj1G,SA5uKTA,KA2yKlB81G,aA3yKkB30G,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KA2yKH,SAAAkgG,IAAA,IAAA1rG,EAAAmwD,EAAAw7C,EAAAlxG,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAAggG,GAAA,cAAAA,EAAA9/F,KAAA8/F,EAAA7/F,MAAA,eAAO/L,EAAP2rG,EAAAjxG,OAAA,QAAAC,IAAAgxG,EAAA,GAAAA,EAAA,GAAmB,OACZvxG,EAAKxE,MAAMoK,cAC7BA,EAAc5F,EAAKxE,MAAMoK,aAFd4rG,EAAA7/F,KAAA,EAIK3R,EAAKq1B,oBAAoBzvB,EAAY08B,KAAKp9B,MAAO,OAJtD,YAIP6wD,EAJOy7C,EAAA99F,MAAA,CAAA89F,EAAA7/F,KAAA,eAAA6/F,EAAAx2F,OAAA,SAMJhb,EAAK4R,MAAMmkD,GAAKx5C,IAAIvc,EAAK4R,MAAM,OAN3B,cAAA4/F,EAAAx2F,OAAA,SAQN,MARM,wBAAAw2F,EAAAr/F,SAAAm/F,EAAA/1G,SA3yKGA,KAqzKlBoxF,iBArzKkBjwF,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAqzKC,SAAAqgG,IAAA,IAAA7rG,EAAAuB,EAAAuqG,EAAAC,EAAAnvD,EAAAjxC,EAAA05E,EAAA2mB,EAAAC,EAAAC,EAAAzxG,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAAugG,GAAA,cAAAA,EAAArgG,KAAAqgG,EAAApgG,MAAA,UAAO/L,EAAPksG,EAAAxxG,OAAA,QAAAC,IAAAuxG,EAAA,GAAAA,EAAA,GAAmB,KAAK3qG,EAAxB2qG,EAAAxxG,OAAA,QAAAC,IAAAuxG,EAAA,GAAAA,EAAA,GAAgC,MAC5ClsG,GAAe5F,EAAKxE,MAAMoK,cAC7BA,EAAc5F,EAAKxE,MAAMoK,cAEtBuB,GAAWnH,EAAKxE,MAAM2L,UACzBA,EAAUnH,EAAKxE,MAAM2L,SAGlBA,GAAYvB,EARA,CAAAmsG,EAAApgG,KAAA,eAAAogG,EAAA/2F,OAAA,SASR,MATQ,cAAA+2F,EAAApgG,KAAA,EAgBPwI,QAAQkD,IAAI,CACpBrd,EAAKqxG,aAAazrG,GAClB5F,EAAKsnF,eAAe,aAAa1hF,EAAYV,MAAMU,EAAYuB,GAC/DnH,EAAKsnF,eAAe,oBAAoB1hF,EAAYV,MAAMU,EAAYuB,KAnBvD,UAAAuqG,EAAAK,EAAAr+F,KAAAi+F,EAAAj1G,OAAA8qC,EAAA,EAAA9qC,CAAAg1G,EAAA,GAaflvD,EAbemvD,EAAA,GAcfpgG,EAdeogG,EAAA,GAef1mB,EAfe0mB,EAAA,KAsBbnvD,GAAiBjxC,GAAc05E,GAtBlB,CAAA8mB,EAAApgG,KAAA,gBAuBTigG,EAAO3mB,EAAkBn5E,MAAMP,GAC/BsgG,EAAOD,EAAK1iG,MAAMszC,GAxBTuvD,EAAA/2F,OAAA,SA4BR62F,GA5BQ,eAAAE,EAAA/2F,OAAA,SA+BV,MA/BU,yBAAA+2F,EAAA5/F,SAAAs/F,EAAAl2G,SArzKDA,KAs1KlBuxF,uBAt1KkB,eAAAklB,EAAAt1G,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAs1KO,SAAA6gG,EAAO9oB,GAAP,IAAAhiF,EAAAtB,EAAA+9B,EAAAlB,EAAAwvE,EAAA7xG,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAA2gG,GAAA,cAAAA,EAAAzgG,KAAAygG,EAAAxgG,MAAA,cAAsBxK,EAAtB+qG,EAAA5xG,OAAA,QAAAC,IAAA2xG,EAAA,GAAAA,EAAA,GAA8B,KAAKrsG,EAAnCqsG,EAAA5xG,OAAA,QAAAC,IAAA2xG,EAAA,GAAAA,EAAA,GAAmD,KAAKtuE,EAAxDsuE,EAAA5xG,OAAA,QAAAC,IAAA2xG,EAAA,GAAAA,EAAA,GAAqE,KAArEC,EAAAxgG,KAAA,EACa3R,EAAKyiC,yBAAyBt7B,EAAQtB,EAAgB+9B,EAAaulD,GADhF,cACjBzmD,EADiByvE,EAAAz+F,KAAAy+F,EAAAn3F,OAAA,SAEhB0nB,GAAyBA,EAAsBymD,EAAejkF,OAASw9B,EAAsBymD,EAAejkF,OAASlF,EAAK4R,MAAM,IAFhH,wBAAAugG,EAAAhgG,SAAA8/F,EAAA12G,SAt1KP,gBAAA62G,GAAA,OAAAJ,EAAA3/F,MAAA9W,KAAA8E,YAAA,GAAA9E,KA01KlB82G,YA11KkB31G,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KA01KJ,SAAAkhG,IAAA,IAAAC,EAAA,OAAAnlF,EAAAzyB,EAAA6W,KAAA,SAAAghG,GAAA,cAAAA,EAAA9gG,KAAA8gG,EAAA7gG,MAAA,cAAA6gG,EAAA7gG,KAAA,EACY3R,EAAKyyG,eADjB,cACNF,EADMC,EAAA9+F,KAAA8+F,EAAAx3F,OAAA,SAELte,OAAOwG,OAAOqvG,GAAW9lF,OAAQ,SAACimF,EAAS/8D,GAChD,IAAMg9D,EAAW3yG,EAAK4R,MAAM+jC,EAAU+8D,UAItC,OAHIC,IAAaA,EAASvoG,UACxBsoG,EAAWA,EAAS7gG,KAAK8gG,IAEpBD,GACP1yG,EAAK4R,MAAM,KARD,wBAAA4gG,EAAArgG,SAAAmgG,EAAA/2G,SA11KIA,KAo2KlBk3G,aAp2KkB/1G,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAo2KH,SAAAwhG,IAAA,IAAAxpF,EAAAgP,EAAA,OAAAhL,EAAAzyB,EAAA6W,KAAA,SAAAqhG,GAAA,cAAAA,EAAAnhG,KAAAmhG,EAAAlhG,MAAA,cACPyX,EAAS,GACTgP,EAAiBp4B,EAAKqH,gBAAgB,CAAC,QAAQ,SAAS,QAFjDwrG,EAAAlhG,KAAA,EAGP3R,EAAKgR,aAAatU,OAAOqF,KAAK/B,EAAKxE,MAAM2oC,qBAAzC,eAAA2uE,EAAAp2G,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAA8D,SAAA2hG,EAAOloE,GAAP,IAAAz3B,EAAAvN,EAAA,OAAAunB,EAAAzyB,EAAA6W,KAAA,SAAAwhG,GAAA,cAAAA,EAAAthG,KAAAshG,EAAArhG,MAAA,cAC5DyB,EAAsB,SAAby3B,EACThlC,EAAkB7F,EAAKxE,MAAM2oC,oBAAoB0G,GAFWmoE,EAAArhG,KAAA,EAG5D3R,EAAKgR,aAAatU,OAAOqF,KAAK8D,GAA9B,eAAAotG,EAAAv2G,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAA+C,SAAA8hG,EAAOhuG,GAAP,IAAAytG,EAAAD,EAAAS,EAAAvtG,EAAAwtG,EAAAC,EAAAC,EAAArhG,EAAAmqB,EAAA0P,EAAAynE,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAvmF,EAAAzyB,EAAA6W,KAAA,SAAAoiG,GAAA,cAAAA,EAAAliG,KAAAkiG,EAAAjiG,MAAA,cAE/CghG,EAAW3yG,EAAK4R,MAAM,GACtB8gG,EAAW1yG,EAAK4R,MAAM,GACtBuhG,EAAcnzG,EAAK4R,MAAM,GACvBhM,EAAcC,EAAgBX,GAC9BkuG,EAAgBxtG,EAAY08B,KAAKp9B,MAEvCkkB,EAAOgqF,GAAiB,CACtBT,WACAD,WACAS,cACArnE,UAAU,IAZuC8nE,EAAAjiG,KAAA,EAkBzCwI,QAAQkD,IAAI,CACpBrd,EAAKuiC,kBAAkB38B,GACvB5F,EAAKmtF,mBAAmBvnF,KApByB,cAAAytG,EAAAO,EAAAlgG,KAAA4/F,EAAA52G,OAAA8qC,EAAA,EAAA9qC,CAAA22G,EAAA,GAgBjDphG,EAhBiDqhG,EAAA,GAiBjDl3E,EAjBiDk3E,EAAA,GAuBnDX,EAAW3yG,EAAKuU,iBAAiB6nB,EAAY,IAAIltB,MAAM+C,GAvBJ2hG,EAAAjiG,KAAA,GAwBlC3R,EAAKwiC,oBAAoBmwE,EAASztG,EAAMU,EAAYwN,GAxBlB,WAwBnDu/F,EAxBmDiB,EAAAlgG,KA0BnD0V,EAAOgqF,GAAeT,SAAWA,EACjCD,EAAWA,EAAS7gG,KAAK8gG,KAGnB7mE,EAAY9rC,EAAK0rG,kBAAkB9lG,IA9BU,CAAAguG,EAAAjiG,KAAA,gBAAAiiG,EAAAjiG,KAAA,GAgC3C3R,EAAKgR,aAAatU,OAAOqF,KAAK+pC,GAAW/rC,OAAQ,SAAA4iC,GAAQ,OAAKmJ,EAAUnJ,GAAUge,UAAlF,eAAAkzD,EAAAn3G,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAA8F,SAAA0iG,EAAOnxE,GAAP,IAAAwmD,EAAA4qB,EAAAC,EAAApxE,EAAAqxE,EAAAC,EAAA,OAAA9mF,EAAAzyB,EAAA6W,KAAA,SAAA2iG,GAAA,cAAAA,EAAAziG,KAAAyiG,EAAAxiG,MAAA,cAC5Fw3E,EAAiBr9C,EAAUnJ,GADiEwxE,EAAAxiG,KAAA,EAKxFwI,QAAQkD,IAAI,CACpBrd,EAAKuzF,mBAAmB5wD,EAAS/8B,EAAY08B,KAAKtzB,SAClDhP,EAAKg7D,yBAAyB5iC,EAAe+wD,KAPmD,OAAA4qB,EAAAI,EAAAzgG,KAAAsgG,EAAAt3G,OAAA8qC,EAAA,EAAA9qC,CAAAq3G,EAAA,GAGhGnxE,EAHgGoxE,EAAA,GAIhGC,EAJgGD,EAAA,GAU9FpxE,GAAmBqxE,IACfC,EAA2Bl0G,EAAKuU,iBAAiBquB,EAAgBumD,EAAerjF,UAAUoJ,MAAMlP,EAAK4R,MAAMqiG,OAChFC,EAAyB9pG,UACxDsoG,EAAWA,EAAS7gG,KAAKqiG,GACzB9qF,EAAOgqF,GAAetnE,UAAUnJ,GAAYuxE,GAdkD,wBAAAC,EAAAhiG,SAAA2hG,EAAAv4G,SAA9F,gBAAA64G,GAAA,OAAAP,EAAAxhG,MAAA9W,KAAA8E,YAAA,IAhC2C,YAqD/CuF,EAAYsrC,YAAatrC,EAAYsrC,UAAUF,YArDA,CAAA4iE,EAAAjiG,KAAA,gBAsD3C4hG,EAAiB72G,OAAOC,OAAO,GAAGiJ,IACzBgJ,UAAYlS,OAAOwG,OAAO0C,EAAYgJ,WACrD2kG,EAAejxE,KAAO5lC,OAAOC,OAAO,GAAGiJ,EAAYsrC,UAAUF,aAGzDuiE,EAAeriE,UAAUmjE,cAC3Bd,EAAeriE,UAAUmjE,aAAa5uG,QAAS,SAAA6uG,GAC7C,IAAMnK,EAAgBoJ,EAAe3kG,UAAU6X,KAAM,SAAA9b,GAAC,OAAKA,EAAEpJ,OAAS+yG,EAAY/yG,OAClF,GAAI4oG,EAAc,CAChB,IAAMoK,EAAchB,EAAe3kG,UAAUqY,QAAQkjF,GACrDoJ,EAAe3kG,UAAU2lG,GAAeD,KAhEGV,EAAAjiG,KAAA,GAwEvCwI,QAAQkD,IAAI,CACpBrd,EAAKuiC,kBAAkBgxE,GACvBvzG,EAAKmtF,mBAAmBomB,EAAejxE,KAAK/gC,QA1EG,WAAAiyG,EAAAI,EAAAlgG,KAAA+/F,EAAA/2G,OAAA8qC,EAAA,EAAA9qC,CAAA82G,EAAA,GAsE/CE,EAtE+CD,EAAA,GAuE/CE,EAvE+CF,EAAA,IA6E7CC,IAAiBC,EA7E4B,CAAAC,EAAAjiG,KAAA,gBA8E/CwhG,EAAcnzG,EAAKuU,iBAAiBo/F,EAAe,IAAIzkG,MAAMwkG,GA9EdE,EAAAjiG,KAAA,GA+E3B3R,EAAKwiC,oBAAoB2wE,EAAYjuG,EAAMquG,EAAengG,GA/E/B,SA+E/C+/F,EA/E+CS,EAAAlgG,QAgF3By/F,EAAY/oG,UAC9Bgf,EAAOgqF,GAAeD,YAAcA,EACpCT,EAAWA,EAAS7gG,KAAKshG,IAlFoB,QAuFnD/pF,EAAOgqF,GAAeV,SAAWA,EAvFkB,yBAAAkB,EAAAzhG,SAAA+gG,EAAA33G,SAA/C,gBAAAi5G,GAAA,OAAAvB,EAAA5gG,MAAA9W,KAAA8E,YAAA,IAH4D,wBAAA2yG,EAAA7gG,SAAA4gG,EAAAx3G,SAA9D,gBAAAk5G,GAAA,OAAA3B,EAAAzgG,MAAA9W,KAAA8E,YAAA,IAHO,cAAAwyG,EAAA73F,OAAA,SAiGNoO,GAjGM,wBAAAypF,EAAA1gG,SAAAygG,EAAAr3G,SAp2KGA,KAu8KlBm5G,sBAv8KkBh4G,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAu8KM,SAAAujG,IAAA,IAAAn6C,EAAA3zC,EAAA88B,EAAAixD,EAAAC,EAAAC,EAAA,OAAA1nF,EAAAzyB,EAAA6W,KAAA,SAAAujG,GAAA,cAAAA,EAAArjG,KAAAqjG,EAAApjG,MAAA,UAChB6oD,EADgB,uBAEhB3zC,EAAa7mB,EAAKq7D,8BAA8Bb,IAFhC,CAAAu6C,EAAApjG,KAAA,eAAAojG,EAAA/5F,OAAA,SAIb6L,GAJa,cAOhB88B,EAAS3jD,EAAKqH,gBAAgB,CAAC,QAAQ,WACvCutG,EAAe50G,EAAKqH,gBAAgB,CAAC,QAAQ,aAR7B0tG,EAAApjG,KAAA,EASS3R,EAAK4/B,YAAYg1E,EAAa93D,UAAS,EAAM6G,GATtD,aAShBkxD,EATgBE,EAAArhG,OAWEmhG,EAAiBvpG,MAAQupG,EAAiBvpG,KAAK0pG,OAASH,EAAiBvpG,KAAK0pG,MAAM10G,OAAO,GAX7F,CAAAy0G,EAAApjG,KAAA,gBAYdmjG,EAAaD,EAAiBvpG,KAAK0pG,MAAM,GAZ3BD,EAAA/5F,OAAA,SAabhb,EAAKs7D,8BAA8Bd,EAAcs6C,EAAWF,EAAarxD,MAb5D,eAAAwxD,EAAA/5F,OAAA,SAgBf,MAhBe,yBAAA+5F,EAAA5iG,SAAAwiG,EAAAp5G,SAv8KNA,KAy9KlB05G,mBAz9KkBv4G,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAy9KG,SAAA8jG,IAAA,IAAAvxD,EAAAixD,EAAApxD,EAAA/e,EAAA0wE,EAAAC,EAAA/0G,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAA6jG,GAAA,cAAAA,EAAA3jG,KAAA2jG,EAAA1jG,MAAA,eAAAyjG,EAAA90G,OAAA,QAAAC,IAAA60G,EAAA,KAAAA,EAAA,GACbzxD,EAAS3jD,EAAKqH,gBAAgB,CAAC,QAAQ,WACvCutG,EAAe50G,EAAKqH,gBAAgB,CAAC,QAAQ,SAFhCguG,EAAA1jG,KAAA,EAGA3R,EAAKilE,kBAAkB2vC,EAAa93D,SAAS83D,EAAarxD,KAAI,GAAK,EAAMI,GAHzE,YAGbH,EAHa6xD,EAAA3hG,MAAA,CAAA2hG,EAAA1jG,KAAA,gBAMX8yB,EAASzkC,EAAK4R,MAAM4xC,EAAK/e,QACzB0wE,EAAWn1G,EAAK4R,MAAM4xC,EAAKkvD,UAPhB2C,EAAAr6F,OAAA,SAQV,CACLypB,SACA0wE,aAVe,eAAAE,EAAA1jG,KAAA,GAaJ3R,EAAKs1G,2BAbD,eAAAD,EAAAr6F,OAAA,SAAAq6F,EAAA3hG,MAAA,yBAAA2hG,EAAAljG,SAAA+iG,EAAA35G,SAz9KHA,KAy+KlB+5G,yBAz+KkB54G,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAy+KS,SAAAmkG,IAAA,IAAA3yD,EAAA4X,EAAA3zC,EAAA2uF,EAAA/wE,EAAA0wE,EAAA/8E,EAAAhP,EAAAqsF,EAAAp1G,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAAkkG,GAAA,cAAAA,EAAAhkG,KAAAgkG,EAAA/jG,MAAA,UAAOixC,IAAP6yD,EAAAn1G,OAAA,QAAAC,IAAAk1G,EAAA,KAAAA,EAAA,GAGnBj7C,EAHmB,sBAAA74D,OAGmBihD,KACtC/7B,EAAa7mB,EAAKq7D,8BAA8Bb,MACnC3zC,EAAW2uF,QAAWx1G,EAAK4R,MAAMiV,EAAW2uF,QAAQprG,UAAayc,EAAW4d,QAAWzkC,EAAK4R,MAAMiV,EAAW4d,QAAQr6B,UAAayc,EAAWsuF,UAAan1G,EAAK4R,MAAMiV,EAAWsuF,UAAU/qG,QALpL,CAAAsrG,EAAA/jG,KAAA,eAAA+jG,EAAA16F,OAAA,SAMhB,CACLw6F,OAAOx1G,EAAK4R,MAAMiV,EAAW2uF,QAC7B/wE,OAAOzkC,EAAK4R,MAAMiV,EAAW4d,QAC7B0wE,SAASn1G,EAAK4R,MAAMiV,EAAWsuF,YATV,cAarBK,EAASx1G,EAAK4R,MAAM,GACpB6yB,EAASzkC,EAAK4R,MAAM,GACpBujG,EAAWn1G,EAAK4R,MAAM,GACpBwmB,EAAiBp4B,EAAKqH,gBAAgB,CAAC,QAAQ,SAAS,QAhBrCquG,EAAA/jG,KAAA,GAiBnB3R,EAAKgR,aAAatU,OAAOqF,KAAK/B,EAAKxE,MAAM2oC,qBAAzC,eAAAwxE,EAAAj5G,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAA8D,SAAAwkG,EAAO/qE,GAAP,IAAAz3B,EAAAvN,EAAA,OAAAunB,EAAAzyB,EAAA6W,KAAA,SAAAqkG,GAAA,cAAAA,EAAAnkG,KAAAmkG,EAAAlkG,MAAA,cAC5DyB,EAAsB,SAAby3B,EACThlC,EAAkB7F,EAAKxE,MAAM2oC,oBAAoB0G,GAFWgrE,EAAAlkG,KAAA,EAG5D3R,EAAKgR,aAAatU,OAAOqF,KAAK8D,GAA9B,eAAAiwG,EAAAp5G,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAA+C,SAAA2kG,EAAO7wG,GAAP,IAAAU,EAAA+0D,EAAAzzB,EAAA8uE,EAAAlqE,EAAAynE,EAAA0C,EAAAC,EAAA,OAAA9oF,EAAAzyB,EAAA6W,KAAA,SAAA2kG,GAAA,cAAAA,EAAAzkG,KAAAykG,EAAAxkG,MAAA,cAC7C/L,EAAcC,EAAgBX,GADeixG,EAAAxkG,KAAA,EAErB3R,EAAKoM,mBAAmBxG,GAAY,EAAMg9C,GAFrB,cAE7C+X,EAF6Cw7C,EAAAziG,KAAAyiG,EAAAxkG,KAAA,EAG3B3R,EAAKynC,aAAa7hC,EAAY+0D,EAAgB/X,GAHnB,UAG7C1b,EAH6CivE,EAAAziG,MAI/CinD,IAAmBA,EAAgBM,2BAA8BN,EAAgBM,0BAA0B7wD,QAJ5D,CAAA+rG,EAAAxkG,KAAA,gBAAAwkG,EAAAxkG,KAAA,GAK1B3R,EAAKwiC,oBAAoBm4B,EAAgBM,0BAA0B/1D,EAAMU,EAAYwN,GAL3D,QAK3C4iG,EAL2CG,EAAAziG,KAMjDyhG,EAAWA,EAAStjG,KAAKmkG,GAErB9uE,GAAaA,EAAUQ,SAAWR,EAAUQ,OAAOt9B,UACrDorG,EAASA,EAAO3jG,KAAKmkG,EAAS9mG,MAAMg4B,EAAUQ,SAC9CjD,EAASA,EAAO5yB,KAAKmkG,EAAS9mG,MAAMg4B,EAAUS,UAVC,aAe7CmE,EAAY9rC,EAAK0rG,kBAAkB9lG,IAfU,CAAAuwG,EAAAxkG,KAAA,gBAAAwkG,EAAAxkG,KAAA,GAiB3C3R,EAAKgR,aAAatU,OAAOqF,KAAK+pC,GAAW/rC,OAAQ,SAAA4iC,GAAQ,OAAKmJ,EAAUnJ,GAAUge,UAAlF,eAAAy1D,EAAA15G,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAA8F,SAAAilG,EAAO1zE,GAAP,IAAAwmD,EAAAmtB,EAAAC,EAAAlmF,EAAA0+E,EAAAjtC,EAAA,OAAA10C,EAAAzyB,EAAA6W,KAAA,SAAAglG,GAAA,cAAAA,EAAA9kG,KAAA8kG,EAAA7kG,MAAA,cAC5Fw3E,EAAiBr9C,EAAUnJ,GADiE6zE,EAAA7kG,KAAA,EAKxFwI,QAAQkD,IAAI,CACpBrd,EAAKuzF,mBAAmB5wD,EAAS/8B,EAAY08B,KAAKtzB,SAClDhP,EAAKg7D,yBAAyB5iC,EAAe+wD,KAPmD,OAAAmtB,EAAAE,EAAA9iG,KAAA6iG,EAAA75G,OAAA8qC,EAAA,EAAA9qC,CAAA45G,EAAA,GAGhGjmF,EAHgGkmF,EAAA,GAIhGxH,EAJgGwH,EAAA,GAU9FlmF,GAAgB0+E,IACZjtC,EAAwB9hE,EAAKuU,iBAAiB8b,EAAa84D,EAAerjF,UAAUoJ,MAAMlP,EAAK4R,MAAMm9F,OAC7EjtC,EAAsB13D,UAElD+qG,EAAWA,EAAStjG,KAAKiwD,IAdqE,wBAAA00C,EAAArkG,SAAAkkG,EAAA96G,SAA9F,gBAAAk7G,GAAA,OAAAL,EAAA/jG,MAAA9W,KAAA8E,YAAA,IAjB2C,YAsC/CuF,EAAYsrC,YAAatrC,EAAYsrC,UAAUF,YAtCA,CAAAmlE,EAAAxkG,KAAA,gBAuC3C4hG,EAAiB72G,OAAOC,OAAO,GAAGiJ,IACzBgJ,UAAYlS,OAAOwG,OAAO0C,EAAYgJ,WACrD2kG,EAAejxE,KAAO5lC,OAAOC,OAAO,GAAGiJ,EAAYsrC,UAAUF,aAGzDuiE,EAAeriE,UAAUmjE,cAC3Bd,EAAeriE,UAAUmjE,aAAa5uG,QAAS,SAAA6uG,GAC7C,IAAMnK,EAAgBoJ,EAAe3kG,UAAU6X,KAAM,SAAA9b,GAAC,OAAKA,EAAEpJ,OAAS+yG,EAAY/yG,OAClF,GAAI4oG,EAAc,CAChB,IAAMoK,EAAchB,EAAe3kG,UAAUqY,QAAQkjF,GACrDoJ,EAAe3kG,UAAU2lG,GAAeD,KAjDG6B,EAAAxkG,KAAA,GAsDhB3R,EAAKoM,mBAAmBmnG,GAAe,GAAM,GAtD7B,aAsD3C0C,EAtD2CE,EAAAziG,QAuDvBuiG,EAAmBpqG,iBAAoBoqG,EAAmBpqG,gBAAgBzB,QAvDnD,CAAA+rG,EAAAxkG,KAAA,gBAAAwkG,EAAAxkG,KAAA,GAwDT3R,EAAKwiC,oBAAoByzE,EAAmBpqG,gBAAgB3G,EAAMquG,EAAengG,GAxDxE,QAwDzC8iG,EAxDyCC,EAAAziG,KAyD/CyhG,EAAWA,EAAStjG,KAAKqkG,GAzDsB,yBAAAC,EAAAhkG,SAAA4jG,EAAAx6G,SAA/C,gBAAAm7G,GAAA,OAAAZ,EAAAzjG,MAAA9W,KAAA8E,YAAA,IAH4D,wBAAAw1G,EAAA1jG,SAAAyjG,EAAAr6G,SAA9D,gBAAAo7G,GAAA,OAAAhB,EAAAtjG,MAAA9W,KAAA8E,YAAA,IAjBmB,eAoFzBm1G,EAASA,EAAOj5F,IAAI44F,GACpB1wE,EAASA,EAAOloB,IAAI44F,GAEd/rF,EAAS,CACbosF,SACA/wE,SACA0wE,YA1FuBO,EAAA16F,OAAA,SA6FlBhb,EAAKs7D,8BAA8Bd,EAAcpxC,IA7F/B,yBAAAssF,EAAAvjG,SAAAojG,EAAAh6G,SAz+KTA,KAwkLlBq7G,YAxkLkB,eAAAC,EAAAn6G,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAwkLJ,SAAA0lG,EAAOlxG,GAAP,IAAAshC,EAAA,OAAA9Z,EAAAzyB,EAAA6W,KAAA,SAAAulG,GAAA,cAAAA,EAAArlG,KAAAqlG,EAAAplG,MAAA,cAAAolG,EAAAplG,KAAA,EACY3R,EAAKynC,aAAa7hC,GAD9B,YACNshC,EADM6vE,EAAArjG,OAE0B,OAArBwzB,EAAUS,OAFf,CAAAovE,EAAAplG,KAAA,eAAAolG,EAAA/7F,OAAA,SAGHksB,EAAUS,QAHP,cAAAovE,EAAA/7F,OAAA,SAKL,MALK,wBAAA+7F,EAAA5kG,SAAA2kG,EAAAv7G,SAxkLI,gBAAAy7G,GAAA,OAAAH,EAAAxkG,MAAA9W,KAAA8E,YAAA,GAAA9E,KA+kLlB6uC,mBA/kLkB1tC,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KA+kLG,SAAA6lG,IAAA,IAAA5jG,EAAAi2B,EAAA4tE,EAAA72G,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAA2lG,GAAA,cAAAA,EAAAzlG,KAAAylG,EAAAxlG,MAAA,UAAO0B,EAAP6jG,EAAA52G,OAAA,QAAAC,IAAA22G,EAAA,GAAAA,EAAA,GAAwB,KAEtCl3G,EAAKxE,MAAM2oC,qBAAwBnkC,EAAKxE,MAAM2L,QAFhC,CAAAgwG,EAAAxlG,KAAA,eAAAwlG,EAAAn8F,OAAA,UAGV,GAHU,cAMbsuB,EAAkB,GANL6tE,EAAAxlG,KAAA,EAQb3R,EAAKgR,aAAatU,OAAOqF,KAAK/B,EAAKxE,MAAM2oC,qBAAzC,eAAAizE,EAAA16G,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAA8D,SAAAimG,EAAOxsE,GAAP,IAAAhlC,EAAA,OAAAunB,EAAAzyB,EAAA6W,KAAA,SAAA8lG,GAAA,cAAAA,EAAA5lG,KAAA4lG,EAAA3lG,MAAA,WAC9D0B,GAAoBA,IAAqBw3B,EADqB,CAAAysE,EAAA3lG,KAAA,eAAA2lG,EAAAt8F,OAAA,wBAI5DnV,EAAkB7F,EAAKxE,MAAM2oC,oBAAoB0G,GAJWysE,EAAA3lG,KAAA,EAK5D3R,EAAKgR,aAAatU,OAAOqF,KAAK8D,GAA9B,eAAA0xG,EAAA76G,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAA+C,SAAAomG,EAAOtyG,GAAP,IAAAU,EAAA6xG,EAAA5oE,EAAA0rC,EAAAxR,EAAA,OAAA37C,EAAAzyB,EAAA6W,KAAA,SAAAkmG,GAAA,cAAAA,EAAAhmG,KAAAgmG,EAAA/lG,MAAA,cAC7C/L,EAAcC,EAAgBX,GADewyG,EAAA/lG,KAAA,EAKzC3R,EAAKk6E,eAAet0E,EAAY5F,EAAKxE,MAAM2L,SALF,OAAAswG,EAAAC,EAAAhkG,KAGjDm7B,EAHiD4oE,EAGjD5oE,iBACA0rC,EAJiDk9B,EAIjDl9B,4BAGE1rC,IACIk6B,EAAW11D,EAAmBnO,EAAQU,EAAY08B,KAAKp9B,MAC7DokC,EAAgBy/B,GAAY,CAC1B7jE,QACA2lC,WACAjlC,cACA20E,gCAb+C,wBAAAm9B,EAAAvlG,SAAAqlG,EAAAj8G,SAA/C,gBAAAo8G,GAAA,OAAAJ,EAAAllG,MAAA9W,KAAA8E,YAAA,IAL4D,wBAAAi3G,EAAAnlG,SAAAklG,EAAA97G,SAA9D,gBAAAq8G,GAAA,OAAAR,EAAA/kG,MAAA9W,KAAA8E,YAAA,IARa,cAAA82G,EAAAn8F,OAAA,SAgCZsuB,GAhCY,wBAAA6tE,EAAAhlG,SAAA8kG,EAAA17G,SA/kLHA,KAonLlBs8G,2BApnLkBn7G,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAonLW,SAAA0mG,IAAA,IAAAj3D,EAAAk3D,EAAAC,EAAAC,EAAAC,EAAA73G,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAA2mG,GAAA,cAAAA,EAAAzmG,KAAAymG,EAAAxmG,MAAA,UAAOkvC,EAAPq3D,EAAA53G,OAAA,QAAAC,IAAA23G,EAAA,GAAAA,EAAA,GAAgB,KACtCl4G,EAAKxE,MAAM2L,QADW,CAAAgxG,EAAAxmG,KAAA,eAAAwmG,EAAAn9F,OAAA,UAElB,GAFkB,UAIrB+8F,EAAgB,GAChBC,EAAkBh4G,EAAK4R,MAAM,GAAG2K,IAAI,OACpC07F,EAAkBj4G,EAAKqH,gBAAgB,CAAC,QAAQ,iBAAiB,QAAQ,qBANpD,CAAA8wG,EAAAxmG,KAAA,eAAAwmG,EAAAxmG,KAAA,EAQnB3R,EAAKgR,aAAatU,OAAOqF,KAAKk2G,GAA9B,eAAAG,EAAA17G,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAA+C,SAAAinG,EAAOnzG,GAAP,IAAAU,EAAA0yG,EAAAjoF,EAAA,OAAAjD,EAAAzyB,EAAA6W,KAAA,SAAA+mG,GAAA,cAAAA,EAAA7mG,KAAA6mG,EAAA5mG,MAAA,UAC7C/L,EAAcqyG,EAAgB/yG,GACnB,OAAb27C,GAAqBj7C,EAAYi7C,SAAS/7C,gBAAkB+7C,EAAS/7C,cAFtB,CAAAyzG,EAAA5mG,KAAA,eAAA4mG,EAAAv9F,OAAA,qBAK/Cs9F,EAAgBt4G,EAAKovB,kBAAkBxpB,EAAYV,UACjCU,EAAY4mB,IANiB,CAAA+rF,EAAA5mG,KAAA,eAAA4mG,EAAA5mG,KAAA,EAO3B3R,EAAKxE,MAAM+wB,aAAa3mB,EAAYV,MAAMU,EAAYoJ,QAAQpJ,EAAY4mB,KAP/C,OAOjD8rF,EAPiDC,EAAA7kG,KAAA,WAS/C4kG,EAT+C,CAAAC,EAAA5mG,KAAA,gBAAA4mG,EAAA5mG,KAAA,GAUtB3R,EAAKu4B,gBAAgB3yB,EAAYV,MAAMlF,EAAKxE,MAAM2L,SAV5B,SAU3CkpB,EAV2CkoF,EAAA7kG,OAW7B2c,EAAawY,IAAImvE,KACnCD,EAAc7yG,GAAS,CACrBU,cACAoM,QAAQqe,IAdqC,yBAAAkoF,EAAApmG,SAAAkmG,EAAA98G,SAA/C,gBAAAi9G,GAAA,OAAAJ,EAAA/lG,MAAA9W,KAAA8E,YAAA,IARmB,cAAA83G,EAAAn9F,OAAA,SA6BpB+8F,GA7BoB,yBAAAI,EAAAhmG,SAAA2lG,EAAAv8G,SApnLXA,KAspLlBinC,oBAtpLkB,eAAAi2E,EAAA/7G,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAspLI,SAAAsnG,EAAOroF,EAAanrB,EAAMU,GAA1B,IAAAwN,EAAAuB,EAAAgkG,EAAAt4G,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAAonG,GAAA,cAAAA,EAAAlnG,KAAAknG,EAAAjnG,MAAA,UAAsCyB,EAAtCulG,EAAAr4G,OAAA,QAAAC,IAAAo4G,EAAA,IAAAA,EAAA,KAEpBtoF,EAAerwB,EAAK4R,MAAMye,IACT3b,GAAG,GAHA,CAAAkkG,EAAAjnG,KAAA,eAAAinG,EAAAjnG,KAAA,EAImB3R,EAAK45F,uBAAuBh0F,EAAYwN,GAJ3D,QAIZuB,EAJYikG,EAAAllG,QAOhB2c,EAAeA,EAAanhB,MAAMyF,IAPlB,cAAAikG,EAAA59F,OAAA,SAUbqV,GAVa,wBAAAuoF,EAAAzmG,SAAAumG,EAAAn9G,SAtpLJ,gBAAAs9G,EAAAC,EAAAC,GAAA,OAAAN,EAAApmG,MAAA9W,KAAA8E,YAAA,GAAA9E,KAmqLlBy9G,eAnqLkB,eAAAC,EAAAv8G,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAmqLD,SAAA8nG,EAAOlqG,EAAQoE,GAAf,IAAA+wC,EAAAD,EAAAi1D,EAAAx7E,EAAAy7E,EAAA/4G,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAA6nG,GAAA,cAAAA,EAAA3nG,KAAA2nG,EAAA1nG,MAAA,cAAsBwyC,EAAtBi1D,EAAA94G,OAAA,QAAAC,IAAA64G,EAAA,GAAAA,EAAA,GAAqC,KAAKl1D,EAA1Ck1D,EAAA94G,OAAA,QAAAC,IAAA64G,EAAA,GAAAA,EAAA,GAAuD,KAAvDC,EAAA1nG,KAAA,EAEU3R,EAAKyT,gBAAgBzE,EAAQoE,EAAO+wC,EAAeD,GAAa,EAAK,MAF/E,YAETi1D,EAFSE,EAAA3lG,QAIGylG,EAAW74G,OAJd,CAAA+4G,EAAA1nG,KAAA,eAKPgsB,EAAMw7E,EAAW1sF,OAAQ,SAAC08E,EAAI1zE,GAClC,IAAM60E,EAAWtqG,EAAKuU,iBAAiBkhB,EAAE60E,SAAS,IAClD,OAAOnB,EAAIt3F,KAAKy4F,IAChBtqG,EAAK4R,MAAM,IARAynG,EAAAr+F,OAAA,SAWN2iB,EAAIphB,IAAI48F,EAAW74G,SAXb,cAAA+4G,EAAAr+F,OAAA,SAcRhb,EAAK4R,MAAM,IAdH,wBAAAynG,EAAAlnG,SAAA+mG,EAAA39G,SAnqLC,gBAAA+9G,EAAAC,GAAA,OAAAN,EAAA5mG,MAAA9W,KAAA8E,YAAA,GAAA9E,KAurLlBq+F,uBAvrLkB,eAAA4f,EAAA98G,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAurLO,SAAAqoG,EAAO7zG,EAAYwN,GAAnB,IAAAwB,EAAA1N,EAAAszD,EAAA3zC,EAAA0nE,EAAAmrB,EAAAthF,EAAAtjB,EAAA6kG,EAAAt5G,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAAooG,GAAA,cAAAA,EAAAloG,KAAAkoG,EAAAjoG,MAAA,UAA0BiD,EAA1B+kG,EAAAr5G,OAAA,QAAAC,IAAAo5G,EAAA,GAAAA,EAAA,GAA8C,KAAKzyG,EAAnDyyG,EAAAr5G,OAAA,QAAAC,IAAAo5G,EAAA,GAAAA,EAAA,GAAyD,EAE3E/kG,EAFkB,CAAAglG,EAAAjoG,KAAA,WAGrBiD,EAAsB5U,EAAKqH,gBAAgB,CAAC,QAAQ,SAASzB,EAAYV,MAAM,wBAH1D,CAAA00G,EAAAjoG,KAAA,eAAAioG,EAAA5+F,OAAA,SAKZ,MALY,UAUjBw/C,EAViB,uBAAA74D,OAUsBiE,EAAYoJ,QAVlC,KAAArN,OAU6CyR,EAV7C,KAAAzR,OAUuDiT,KACxEiS,EAAa7mB,EAAKq7D,8BAA8Bb,KACnCx6D,EAAK4R,MAAMiV,GAAYzc,QAZnB,CAAAwvG,EAAAjoG,KAAA,gBAAAioG,EAAA5+F,OAAA,SAadhb,EAAK4R,MAAMiV,IAbG,eAAA+yF,EAAAjoG,KAAA,GAgBD3R,EAAKyT,gBAAgB7N,EAAYoJ,QAAQoE,EAAO,KAAK,MAAK,EAAM,KAAK,OAAO,GAhB3E,aAgBnBm7E,EAhBmBqrB,EAAAlmG,QAkBN66E,EAAUjuF,OAlBJ,CAAAs5G,EAAAjoG,KAAA,cAmBrB48E,EAAYA,EAAU5mF,QACJ3H,EAAK4R,MAAM28E,EAAU35E,IAAsBxK,QApBxC,CAAAwvG,EAAAjoG,KAAA,YAqBbmD,EAAiB9U,EAAKuU,iBAAiBg6E,EAAU35E,GAAqB,IACvE5U,EAAK4R,MAAMkD,GAAgB1K,QAtBb,CAAAwvG,EAAAjoG,KAAA,gBAAAioG,EAAA5+F,OAAA,SAuBVhb,EAAKs7D,8BAA8Bd,EAAc1lD,IAvBvC,eA4BjBsjB,EAAiBp4B,EAAKqH,gBAAgB,CAAC,QAAQ,SAAS,QA5BvCuyG,EAAAjoG,KAAA,GA6BM3R,EAAKg7D,yBAAyB5iC,EAAexyB,GA7BnD,WA6BjBkP,EA7BiB8kG,EAAAlmG,KA8BlB1T,EAAK4R,MAAMkD,GAAgB1K,QA9BT,CAAAwvG,EAAAjoG,KAAA,gBAAAioG,EAAA5+F,OAAA,SA+Bdhb,EAAKs7D,8BAA8Bd,EAAc1lD,IA/BnC,aAkCnB5N,EAAM,GAlCa,CAAA0yG,EAAAjoG,KAAA,gBAAAioG,EAAAjoG,KAAA,GAmCR3R,EAAK45F,uBAAuBh0F,EAAYwN,EAAOwB,EAAoB1N,EAAM,GAnCjE,eAAA0yG,EAAA5+F,OAAA,SAAA4+F,EAAAlmG,MAAA,eAAAkmG,EAAA5+F,OAAA,SAsChB,MAtCgB,yBAAA4+F,EAAAznG,SAAAsnG,EAAAl+G,SAvrLP,gBAAAs+G,EAAAC,GAAA,OAAAN,EAAAnnG,MAAA9W,KAAA8E,YAAA,GAAA9E,KAguLlBkwC,cAhuLkB,eAAAsuE,EAAAr9G,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAguLF,SAAA4oG,EAAOp0G,EAAYwN,GAAnB,IAAAonD,EAAA3zC,EAAA0vD,EAAA5yB,EAAA7G,EAAAm9D,EAAAC,EAAA3rB,EAAA5zB,EAAArvB,EAAA,OAAAle,EAAAzyB,EAAA6W,KAAA,SAAA2oG,GAAA,cAAAA,EAAAzoG,KAAAyoG,EAAAxoG,MAAA,UAER6oD,EAFQ,cAAA74D,OAEsBiE,EAAYoJ,QAFlC,KAAArN,OAE6CyR,KACrDyT,EAAa7mB,EAAKq7D,8BAA8Bb,KACnCx6D,EAAK4R,MAAMiV,GAAYzc,QAJ5B,CAAA+vG,EAAAxoG,KAAA,eAAAwoG,EAAAn/F,OAAA,SAKLhb,EAAK4R,MAAMiV,IALN,cAQR0vD,EAAUpnE,IAAcC,MAAMqwC,MAC9BkE,EAAS3jD,EAAKqH,gBAAgB,CAAC,QAAQ,WACvCy1C,EAVQ,GAAAn7C,OAUM40E,EAAQz5B,UAVdn7C,OAUyBiE,EAAYoJ,QAVrC,YAAArN,OAUuDyR,EAVvD,uBAAA+mG,EAAAxoG,KAAA,EAcJwI,QAAQkD,IAAI,CACpBrd,EAAKilE,kBAAkBnoB,EAASy5B,EAAQhzB,KAAI,GAAK,EAAMI,GACvD3jD,EAAKoM,mBAAmBxG,GAAY,GAAM,KAhB9B,UAAAq0G,EAAAE,EAAAzmG,KAAAwmG,EAAAx9G,OAAA8qC,EAAA,EAAA9qC,CAAAu9G,EAAA,GAYZ1rB,EAZY2rB,EAAA,GAaZv/C,EAbYu/C,EAAA,GAmBV5uE,EAAatrC,EAAK4R,MAAM,GAExB28E,GAAa5zB,GACfj+D,OAAOqF,KAAK44D,EAAgB5uD,0BAA0BtG,QAAS,SAAAsJ,GAC7D,IAAM2qF,EAAyB15F,EAAK4R,MAAM+oD,EAAgB5uD,yBAAyBgD,IACnF,GAAI2qF,EAAuBhlF,GAAG,OAAU65E,EAAUjuF,OAAO,EAAE,CACzD,IAAMuO,EAAe0/E,EAAU,GAAG0b,cAAcxjF,KAAM,SAAA9b,GAAC,OAAKA,EAAEoE,aAAajK,gBAAkBiK,EAAajK,gBAC1G,GAAI+J,EAAa,CACf,IAAMurG,EAAgBp6G,EAAK4R,MAAM/C,EAAag8F,WACzCuP,EAAchwG,UACjBkhC,EAAaA,EAAWz5B,KAAKuoG,EAAclrG,MAAMwqF,SAQtDpuD,IAAcA,EAAWlhC,UAAWkhC,EAAW7a,IAAI,GArC1C,CAAA0pF,EAAAxoG,KAAA,gBAAAwoG,EAAAxoG,KAAA,GAsCO3R,EAAKq6G,iBAAiBz0G,EAAYwN,GAtCzC,QAsCZk4B,EAtCY6uE,EAAAzmG,KAAA,eAAAymG,EAAAn/F,OAAA,SAyCPhb,EAAKs7D,8BAA8Bd,EAAclvB,IAzC1C,yBAAA6uE,EAAAhoG,SAAA6nG,EAAAz+G,SAhuLE,gBAAA++G,EAAAC,GAAA,OAAAR,EAAA1nG,MAAA9W,KAAA8E,YAAA,GAAA9E,KA+wLlB8+G,iBA/wLkB,eAAAG,EAAA99G,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KA+wLC,SAAAqpG,EAAO70G,EAAYwN,GAAnB,IAAAonD,EAAA3zC,EAAA0vD,EAAA5yB,EAAA7G,EAAA4G,EAAA6qC,EAAAjjD,EAAAp3B,EAAAiwC,EAAAlwC,EAAA,OAAAmZ,EAAAzyB,EAAA6W,KAAA,SAAAkpG,GAAA,cAAAA,EAAAhpG,KAAAgpG,EAAA/oG,MAAA,UAEX6oD,EAFW,iBAAA74D,OAEsBiE,EAAYoJ,QAFlC,KAAArN,OAE6CyR,KACxDyT,EAAa7mB,EAAKq7D,8BAA8Bb,KACnCx6D,EAAK4R,MAAMiV,GAAYzc,QAJzB,CAAAswG,EAAA/oG,KAAA,eAAA+oG,EAAA1/F,OAAA,SAKRhb,EAAK4R,MAAMiV,IALH,cAQX0vD,EAAUpnE,IAAcC,MAAMs0C,OAC9BC,EAAS3jD,EAAKqH,gBAAgB,CAAC,QAAQ,WACvCy1C,EAVW,GAAAn7C,OAUG40E,EAAQz5B,UAVXn7C,OAUsBiE,EAAYoJ,QAVlC,YAAArN,OAUoDyR,GAVpDsnG,EAAA/oG,KAAA,EAWE3R,EAAKilE,kBAAkBnoB,EAASy5B,EAAQhzB,KAAI,GAAK,EAAMI,GAXzD,aAWbD,EAXag3D,EAAAhnG,OAaHgwC,EAAOpjD,OAAO,GAbX,CAAAo6G,EAAA/oG,KAAA,cAcX48E,EAAY7qC,EAAOj9B,KAAM,SAAAiP,GAAC,OAAIA,EAAE1mB,QAAQlK,gBAAkBc,EAAYoJ,QAAQlK,iBAdnE,CAAA41G,EAAA/oG,KAAA,cAgBT25B,EAAatrC,EAAK4R,MAAM28E,EAAUic,cACpBl/D,EAAW52B,GAAG,GAjBnB,CAAAgmG,EAAA/oG,KAAA,gBAAA+oG,EAAA1/F,OAAA,SAmBJhb,EAAK8mB,cAAc0zC,EAAclvB,IAnB7B,eAsBLp3B,EAAYrM,SAAS5B,KAAKwwB,MAAM,KAChC0tB,EAAiBt8C,SAASqM,GAAY,MAvBjCwmG,EAAA/oG,KAAA,GAwBO3R,EAAKyT,gBAAgB7N,EAAYoJ,QAAQoE,EAAO+wC,EAAe,MAAK,EAAK,KAAK,QAxBrF,WAwBXoqC,EAxBWmsB,EAAAhnG,OA0BLO,EAAoBs6E,EAAUxuF,OAAQ,SAAA6M,GAAC,OAAK5M,EAAK4R,MAAMhF,EAAE49F,WAAW91F,GAAG,MACvDpU,OA3BX,CAAAo6G,EAAA/oG,KAAA,YA4BT25B,EAAatrC,EAAK4R,MAAMqC,EAAkB,GAAGu2F,WACxCxqG,EAAK4R,MAAM05B,GAAYlhC,QA7BnB,CAAAswG,EAAA/oG,KAAA,gBAAA+oG,EAAA1/F,OAAA,SA8BAhb,EAAKs7D,8BAA8Bd,EAAclvB,IA9BjD,eAAAovE,EAAA1/F,OAAA,SAqCVhb,EAAK4R,MAAM,IArCD,yBAAA8oG,EAAAvoG,SAAAsoG,EAAAl/G,SA/wLD,gBAAAo/G,EAAAC,GAAA,OAAAJ,EAAAnoG,MAAA9W,KAAA8E,YAAA,GAAA9E,KAyzLlBksC,aAzzLkB,eAAAozE,EAAAn+G,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAyzLH,SAAA0pG,EAAOl1G,GAAP,IAAA+0D,EAAA/X,EAAA1b,EAAAszB,EAAA3zC,EAAAk0F,EAAA9mB,EAAAjd,EAAA42B,EAAAnV,EAAAuiB,EAAAC,EAAAx9C,EAAAy9C,EAAAC,EAAA96G,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAA4pG,GAAA,cAAAA,EAAA1pG,KAAA0pG,EAAAzpG,MAAA,UAAmBgpD,EAAnBwgD,EAAA76G,OAAA,QAAAC,IAAA46G,EAAA,IAAAA,EAAA,GAAyCv4D,IAAzCu4D,EAAA76G,OAAA,QAAAC,IAAA46G,EAAA,KAAAA,EAAA,GAEPj0E,EAAY,CAChBQ,OAAQ1nC,EAAK4R,MAAM,GACnB+1B,OAAQ3nC,EAAK4R,MAAM,IAGhBhM,EAAY08B,KAPJ,CAAA84E,EAAAzpG,KAAA,eAAAypG,EAAApgG,OAAA,SASJksB,GATI,UAaPszB,EAbO,aAAA74D,OAasBiE,EAAY08B,KAAKtzB,QAbvC,KAAArN,OAakDihD,KACzD/7B,EAAa7mB,EAAKq7D,8BAA8Bb,MACnC3zC,EAAW6gB,QAAW1nC,EAAK4R,MAAMiV,EAAW6gB,QAAQt9B,UAAayc,EAAW8gB,QAAW3nC,EAAK4R,MAAMiV,EAAW8gB,QAAQv9B,QAf3H,CAAAgxG,EAAAzpG,KAAA,eAAAypG,EAAApgG,OAAA,SAiBJ,CACL0sB,OAAO1nC,EAAK4R,MAAMiV,EAAW6gB,QAC7BC,OAAO3nC,EAAK4R,MAAMiV,EAAW8gB,UAnBpB,cAAAyzE,EAAAzpG,KAAA,GAuBM3R,EAAK6zF,QAAQjuF,EAAY08B,KAAKp9B,OAvBpC,WAuBP61G,EAvBOK,EAAA1nG,KAAA,CAAA0nG,EAAAzpG,KAAA,gBAAAypG,EAAApgG,OAAA,SA2BJksB,GA3BI,WA8BRyzB,EA9BQ,CAAAygD,EAAAzpG,KAAA,gBAAAypG,EAAAzpG,KAAA,GA+Ba3R,EAAKoM,mBAAmBxG,GA/BrC,QA+BX+0D,EA/BWygD,EAAA1nG,KAAA,WAkCRinD,EAlCQ,CAAAygD,EAAAzpG,KAAA,gBAAAypG,EAAApgG,OAAA,SAoCJksB,GApCI,eAuCP+sD,EAAY8mB,EAAK9mB,UAAUhyF,IAAI,SAACkzE,EAAKzvE,GAAQ,OAAOyvE,EAAK34D,WAAW1X,gBACpEkyE,EAAO+jC,EAAK/jC,KAEZ42B,EAAgB,GAChBnV,EAAgB,GAChBuiB,EAAgB,GA5CTI,EAAAzpG,KAAA,GA8CP3R,EAAKgR,aAAapL,EAAYgJ,UAA9B,eAAAysG,EAAA3+G,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAAwC,SAAAkqG,EAAOzsG,EAAanJ,GAApB,IAAAqJ,EAAAwsG,EAAAC,EAAAC,EAAAC,EAAA1O,EAAA,OAAA5/E,EAAAzyB,EAAA6W,KAAA,SAAAmqG,GAAA,cAAAA,EAAAjqG,KAAAiqG,EAAAhqG,MAAA,UACtC5C,EAAeF,EAAaG,QAAQwN,WAAW1X,eAEjC,KADdy2G,EAAYtnB,EAAUhtE,QAAQlY,IAFQ,CAAA4sG,EAAAhqG,KAAA,YAItC6pG,EAAcx7G,EAAK4R,OAAO5R,EAAK69D,MAAMmZ,EAAKukC,KAC1CE,EAAcz7G,EAAK23F,QAAQ6jB,EAAYj/F,IAAI,MAAMrN,MAAM,MAEvD0zC,EAPsC,CAAA+4D,EAAAhqG,KAAA,gBAQpC+pG,EAAc,KACZ1O,EAAiBhtG,EAAK0rG,kBAAkB9lG,GATN+1G,EAAAhqG,KAAA,GAUlC3R,EAAKgR,aAAatU,OAAOqF,KAAKirG,GAA9B,eAAA4O,EAAAl/G,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAA+C,SAAAyqG,EAAOl5E,GAAP,OAAAvV,EAAAzyB,EAAA6W,KAAA,SAAAsqG,GAAA,cAAAA,EAAApqG,KAAAoqG,EAAAnqG,MAAA,OAAAmqG,EAAA/mD,GAC3CpyB,EAD2Cm5E,EAAAnqG,KAE5C,SAF4CmqG,EAAA/mD,GAAA,EAK5C,YAL4C+mD,EAAA/mD,GAAA,yBAAA+mD,EAAAnqG,KAAA,EAG3B3R,EAAK4lG,WAAWhgG,EAAYV,MAAMU,GAHP,cAG/C81G,EAH+CI,EAAApoG,KAAAooG,EAAA9gG,OAAA,0BAAA8gG,EAAAnqG,KAAA,EAM3B3R,EAAKklG,cAAct/F,EAAYV,MAAMU,GANV,cAM/C81G,EAN+CI,EAAApoG,KAAAooG,EAAA9gG,OAAA,2BAAA8gG,EAAA9gG,OAAA,oBAW/C0gG,IACF9N,EAAcjrE,GAAY+4E,GAZuB,yBAAAI,EAAA3pG,SAAA0pG,EAAAtgH,SAA/C,gBAAAwgH,GAAA,OAAAH,EAAAvpG,MAAA9W,KAAA8E,YAAA,IAVkC,QA4B1C26G,EAAcjsG,GAAgB0sG,EAC9BhjB,EAAc1pF,GAAgBysG,EA7BY,yBAAAG,EAAAxpG,SAAAmpG,EAAA//G,SAAxC,gBAAAygH,EAAAC,GAAA,OAAAZ,EAAAhpG,MAAA9W,KAAA8E,YAAA,IA9CO,YA+ETs6D,EA/ES,CAAAygD,EAAAzpG,KAAA,YAgFXu1B,EAAUQ,OAAS1nC,EAAK48D,UAAU67B,EAAc99B,EAAgB7uD,qBAAqB6uD,EAAgB9uD,iBACrGq7B,EAAUS,OAAS3nC,EAAK48D,UAAUo+C,EAAcrgD,EAAgB7uD,qBAAqB6uD,EAAgB9uD,iBAErGnP,OAAOwG,OAAO0qG,GAAenoG,QAAS,SAAAi2G,GACpCx0E,EAAUQ,OAASR,EAAUQ,OAAO71B,KAAK6pG,GACzCx0E,EAAUS,OAAST,EAAUS,OAAO91B,KAAK6pG,KAMrCT,EAAsBj7G,EAAKqH,gBAAgB,CAAC,YAAY,OAAO,aACzCrH,EAAKqH,gBAAgB,CAAC,YAAY,OAAO,cAC1C4zG,EA7FhB,CAAAG,EAAAzpG,KAAA,gBA8FH8rD,EAAez9D,EAAKksF,kBA9FjBkvB,EAAAzpG,KAAA,GA+Fa8rD,EAAanD,OAAO10D,EAAYV,MAAMU,GA/FnD,SA+FHs1G,EA/FGE,EAAA1nG,QAiGPwzB,EAAUQ,OAASR,EAAUQ,OAAO71B,KAAKqpG,GACzCh0E,EAAUS,OAAST,EAAUS,OAAO91B,KAAKqpG,IAlGlC,eAsGPl7G,EAAK4R,MAAMs1B,EAAUS,QAAQv9B,UAC/B88B,EAAUS,OAAS3nC,EAAK4R,MAAM,IAE5B5R,EAAK4R,MAAMs1B,EAAUQ,QAAQt9B,UAC/B88B,EAAUQ,OAAS1nC,EAAK4R,MAAM,IA1GrBwpG,EAAApgG,OAAA,SA6GJhb,EAAKs7D,8BAA8Bd,EAActzB,IA7G7C,eAAAk0E,EAAApgG,OAAA,SAgHNksB,GAhHM,yBAAAk0E,EAAAjpG,SAAA2oG,EAAAv/G,SAzzLG,gBAAA2gH,GAAA,OAAArB,EAAAxoG,MAAA9W,KAAA8E,YAAA,GAChB9E,KAAKuC,SAAStC,gEA06LCc,GAMf,IAN8D,IAAzCwJ,EAAyCzF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAhC,EAAEoK,EAA8BpK,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAjB,EAAEqK,EAAerK,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAF,EAEtD87G,EAAal3G,WAAW3I,GAAO,EACjCmsE,EAAWltE,KAAKqW,MAAMtV,GAAOm4E,MAE7B2nC,EAAY,EACT3zC,EAAS5/B,IAAI,MAClB4/B,EAAWA,EAASlsD,IAAI,KACxB6/F,IAMF,GAHA3xG,EAAelF,KAAKoB,IAAI,EAAE8D,GAGtBnO,GAAO,IAAK,CACd,IAAM+/G,EAAcv2G,EAAW2iE,EAAS6zC,IAAI,GAAGh2G,QAAQmE,GAAc2T,OAAO,EAAEtY,GAAY,KAC1F2iE,EAAW5gE,SAAS4gE,GAAUjsD,YAAa6/F,EAAc,IAAIA,EAAc,SAE3E5zC,EAAWA,EAASniE,QAAQR,GAI9B,GAAI2iE,GAAU,GAAMA,EAASnoE,OAAO,EAAGmK,EACrCg+D,EAAWxjE,WAAWwjE,GAAU8zC,YAAY9xG,QACvC,GAAKg+D,EAASnoE,OAAO,EAAGoK,EAAc,CAC3C,IAAM8xG,EAAa9xG,GAAc+9D,EAASnoE,OAAO,GAEjDmoE,GADeltE,KAAKqW,MAAMtV,GAAOm4E,MAAMj4D,WAAWqb,QAAQ,IAAI,IAAIzZ,OAAQqqD,EAASnoE,OAAO,EAAGk8G,GAW/F,OANIL,IACF1zC,EAAW,IAAIA,GAGjBA,GA/BiB,CAAC,GAAI,IAAK,IAAK,IAAI,KA+Bf2zC,+CAIHpqG,EAAQ9V,EAAM4J,EAAS22G,EAAOC,GAEhD52G,EAAYsE,MAAMtE,GAAuB,EAAXA,EAC9B22G,EAAUryG,MAAMqyG,GAAmB,GAATA,EAC1BC,EAAuBtyG,MAAMsyG,GAA6C,EAAtBA,EAGpD,IAAMC,GAFN3qG,EAAU/M,WAAW1J,KAAKqW,MAAMI,IAAU1L,QAAQR,IAE3B0W,WAAWqb,QAAQ,IAAI,IAAIv3B,OAC9Cq8G,EAAOF,IACT32G,EAAWP,KAAKoB,IAAI,EAAEb,GAAU62G,EAAOF,IACvCzqG,EAAU/M,WAAW1J,KAAKqW,MAAMI,IAAU1L,QAAQR,IAGpD,IAAM82G,EAAUr3G,KAAKoQ,MAAM3D,GACvB6qG,GAAW7qG,EAAQ,GAAGuqG,YAAYz2G,GAAUsY,OAAO,EAAEtY,GAGzD,GAFA+2G,GAAWA,EAAS,IAAIC,OAAOh3G,IAAYsY,OAAO,EAAEtY,GAEhD42G,EAAoB,CACtB,IAAMK,EAAiBF,EAAQz+F,OAAO,EAAEs+F,GACxCG,EAAUA,EAAQz+F,OAAOs+F,GACzB,IAAMM,EAAsBp+G,EAAAjE,EAAAC,cAACiE,EAAA,EAAK+f,KAAN,CAAW9iB,SAAU,OAAQL,MAAO,OAAQM,WAAY,WAAY6gH,EAApE,IAA8EG,GAC1G,OAAQ3yG,MAAM7O,KAAKmiE,QAAQ1rD,IApBR,IAoBsBpT,EAAAjE,EAAAC,cAAAgE,EAAAjE,EAAAkpC,SAAA,KAAGm5E,EAAmBp+G,EAAAjE,EAAAC,cAAA,SAAOO,MAAO,CAACW,SAAS,QAAS+gH,GAAvD,IAAwEj+G,EAAAjE,EAAAC,cAACiE,EAAA,EAAK+f,KAAN,CAAW9iB,SAAU,CAAC,EAAE,IAAKI,IAE9I,OAAQkO,MAAM7O,KAAKmiE,QAAQ1rD,IAtBR,IAsBsBpT,EAAAjE,EAAAC,cAAAgE,EAAAjE,EAAAkpC,SAAA,KAAG+4E,EAAQh+G,EAAAjE,EAAAC,cAAA,iBAASiiH,GAA4B,MAAV3gH,EAAgB,IAAM,KAAQA,EAAQ0C,EAAAjE,EAAAC,cAACiE,EAAA,EAAK+f,KAAN,CAAW9iB,SAAU,CAAC,EAAE,IAAKI,GAAqB,eAK9J6B,iWC9/LTgD,6MAEJpD,MAAQ,CACNs/G,WAAU,+EAGCA,GACX1hH,KAAKgD,SAAS,CACZ0+G,+CAIK,IAAAt8G,EAAApF,KACDm2C,EAAan2C,KAAKC,MAAMk2C,WACxB1nB,EAAWzuB,KAAKC,MAAMwuB,WAAa0nB,EACnCtwC,EAAgB7F,KAAKC,MAAM4F,gBAAkBswC,EAC7CwrE,EAA4C,qBAAzB3hH,KAAKC,MAAM0hH,WAA4B3hH,KAAKC,MAAM0hH,UACrEC,EAA4C,qBAAzB5hH,KAAKC,MAAM2hH,WAA4B5hH,KAAKC,MAAM2hH,UAErEn8G,EAAY,CAChB2J,EAAE,EACFgf,OAAO,EACP/sB,UAAU,EACVhB,aAAa,EACb2S,YAAY,KACZzN,SAAS,WACTsH,UAAU,UACVvM,gBAAgB,WAGdmuB,GAAa5oB,GAAiB7F,KAAKoC,MAAMs/G,aAC3Cj8G,EAAU2oB,OAAS,EACnB3oB,EAAUpE,UAAY,KACtBoE,EAAUnF,gBAAkB,eAI1BN,KAAKC,MAAMwF,WAAatE,OAAOqF,KAAKxG,KAAKC,MAAMwF,WAAWV,QAC5D5D,OAAOqF,KAAKxG,KAAKC,MAAMwF,WAAWyE,QAAQ,SAAAkF,GACxC3J,EAAU2J,GAAKhK,EAAKnF,MAAMwF,UAAU2J,KAIxC,IAAM7L,EAAY,CAChBC,IAAO2sB,eACP1B,EAAWjrB,IAAOq+G,OAAS,KAC1BF,EAA4B,KAAhBn+G,IAAO4sB,OACpBwxF,EAAYp+G,IAAO8sB,QAAU,KAC7B6lB,EAAa3yC,IAAO8hB,SAAW,KAC/Bzf,EAAgBrC,IAAO6sB,YAAc,MAOvC,OAJIrwB,KAAKC,MAAMsD,WAAaC,IAAOxD,KAAKC,MAAMsD,YAC5CA,EAAU2H,KAAK1H,IAAOxD,KAAKC,MAAMsD,YAIjCmR,EAAAtV,EAAAC,cAACmQ,EAAA,EAADrO,OAAAC,OAAA,GACMqE,EADN,CAEElC,UAAWA,EACX9B,QAASzB,KAAKC,MAAMyB,YACpBogH,WAAY,SAACt6G,GAAD,OAAOpC,EAAK28G,cAAa,IACrCC,YAAa,SAACx6G,GAAD,OAAOpC,EAAK28G,cAAa,MAGpC/hH,KAAKC,MAAMskB,OAASvkB,KAAKC,MAAMskB,MAAMxf,OAAO,GAC1C2P,EAAAtV,EAAAC,cAACmQ,EAAA,EAADrO,OAAAC,OAAA,CACE8E,GAAI,CAAC,EAAE,GACPwB,GAAI,CAAC,EAAE,GACPjI,WAAY,SACZC,cAAe,OACXM,KAAKC,MAAMy9B,kBAEfhpB,EAAAtV,EAAAC,cAACmQ,EAAA,EAAQkiC,GAATvwC,OAAAC,OAAA,CACEZ,WAAY,EACZD,SAAU,CAAC,EAAE,GACbE,UAAW,OACXP,MAAO,YACP+uB,WAAY,WACRjvB,KAAKC,MAAMw9B,YAEdz9B,KAAKC,MAAMskB,OAGZvkB,KAAKC,MAAMy3B,aAAe13B,KAAKC,MAAMy3B,YAAY3yB,OAAO,GACtD2P,EAAAtV,EAAAC,cAACmQ,EAAA,EAAD,CACEqhC,UAAW,MACXC,QAAS9wC,KAAKC,MAAMy3B,aAEpBhjB,EAAAtV,EAAAC,cAACmQ,EAAA,EAAD,CACE9H,GAAI,EACJ1B,KAAM,OACN9C,KAAM,MACNhD,MAAO,gBAMpBF,KAAKC,MAAM0B,iBAnGQX,aAyGbwE,8WCoPAy8G,6MA3Vb7/G,MAAQ,2EAGN,OACEiB,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,KACED,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAKC,UAAWC,IAAO1B,gBAAiBiF,GAAI,CAAC,EAAE,GAAIpB,GAAI,CAAC,EAAE,GAAIsH,GAAI,CAAC,MAAO,QACxE5J,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAKC,UAAWC,IAAOzB,iBACvBsB,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAKiC,SAAU,WAAYD,OAAQ,IACjCjC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM5D,cAAe,SAAUD,WAAY,SAAUsE,SAAU,CAAC,OAAQ,QAASN,GAAI,OAAQsD,GAAI,EAAGtG,UAAW,SAAUwM,GAAI,CAAC,MAAO,QACnI5J,EAAAjE,EAAAC,cAACiE,EAAA,EAAQ+rB,GAAT,CAAY/gB,WAAY,YAAa2gB,WAAY,QAAS1vB,GAAI,QAASgB,SAAU,CAAC,QAAQ,GAAIE,UAAW,SAAUP,MAAO,SAA1H,oBAGAmD,EAAAjE,EAAAC,cAACiE,EAAA,EAAQ4+G,GAAT,CAAY1hH,WAAY,MAAOyuB,WAAY,CAAC,QAAS,OAAQ1uB,SAAU,CAAC,EAAE,GAAIE,UAAW,SAAUP,MAAO,SAA1G,+BAIFmD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM5D,cAAe,SAAUD,WAAY,SAAUsE,SAAU,CAAC,OAAQ,QAASN,GAAI,OAAQhD,UAAW,UACtG4C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAKC,UAAWC,IAAOtB,cAAezC,WAAY,SAAUD,MAAO,OAAQqN,UAAW,CAAC,OAAO,QAASvM,gBAAiB,QAASJ,MAAO,YAAakP,EAAG,CAAC,EAAE,GAAI/N,UAAW,wCAAyChB,aAAc,OAAQT,MAAO,CAAC2F,SAAS,aACxPlC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAK0J,GAAI,kBAAmBjG,GAAI,GAC9B1D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMyD,GAAI,GAAV,wZAGA1D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMyD,GAAI,GAAV,sgBAGA1D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMyD,GAAI,GAAV,ikBAGA1D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMyD,GAAI,GAAV,iuBAGA1D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,+mCAKFD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAK0J,GAAI,kBAAmBtH,GAAI,CAAC,EAAE,IACjCrC,EAAAjE,EAAAC,cAACiE,EAAA,EAAQ+K,GAAT,CAAYnO,MAAO,YAAaO,UAAW,OAAQD,WAAY,EAAGyuB,WAAY,UAAW1uB,SAAU,CAAC,EAAE,IAAtG,sBAIA8C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMoC,GAAI,GAAV,sGAIArC,EAAAjE,EAAAC,cAAA,MAAIkE,UAAWC,IAAOvB,MACpBoB,EAAAjE,EAAAC,cAAA,UACEgE,EAAAjE,EAAAC,cAAA,4CADF,yKAGAgE,EAAAjE,EAAAC,cAAA,UACEgE,EAAAjE,EAAAC,cAAA,iDADF,mjBAGAgE,EAAAjE,EAAAC,cAAA,UACEgE,EAAAjE,EAAAC,cAAA,wCADF,sLAGAgE,EAAAjE,EAAAC,cAAA,UACEgE,EAAAjE,EAAAC,cAAA,mDADF,4IAGAgE,EAAAjE,EAAAC,cAAA,UACEgE,EAAAjE,EAAAC,cAAA,sDADF,mHAGAgE,EAAAjE,EAAAC,cAAA,UACEgE,EAAAjE,EAAAC,cAAA,yDADF,6JAGAgE,EAAAjE,EAAAC,cAAA,UACEgE,EAAAjE,EAAAC,cAAA,yCADF,mOAGAgE,EAAAjE,EAAAC,cAAA,UACEgE,EAAAjE,EAAAC,cAAA,2CADF,wJAGAgE,EAAAjE,EAAAC,cAAA,UACEgE,EAAAjE,EAAAC,cAAA,wCADF,iFAGAgE,EAAAjE,EAAAC,cAAA,UACEgE,EAAAjE,EAAAC,cAAA,4CADF,4CAGAgE,EAAAjE,EAAAC,cAAA,UACEgE,EAAAjE,EAAAC,cAAA,0DADF,sJAMJgE,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAK0J,GAAI,sBAAuBtH,GAAI,CAAC,EAAE,IACrCrC,EAAAjE,EAAAC,cAACiE,EAAA,EAAQ+K,GAAT,CAAYnO,MAAO,YAAaO,UAAW,OAAQD,WAAY,EAAGyuB,WAAY,UAAW1uB,SAAU,CAAC,EAAE,IAAtG,mCAIA8C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMoC,GAAI,GAAV,mjBAKFrC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAK0J,GAAI,WAAYtH,GAAI,CAAC,EAAE,IAC1BrC,EAAAjE,EAAAC,cAACiE,EAAA,EAAQ+K,GAAT,CAAYnO,MAAO,YAAaO,UAAW,OAAQD,WAAY,EAAGyuB,WAAY,UAAW1uB,SAAU,CAAC,EAAE,IAAtG,gBAKF8C,EAAAjE,EAAAC,cAAA,MAAIkE,UAAWC,IAAOvB,MACpBoB,EAAAjE,EAAAC,cAAA,UACEgE,EAAAjE,EAAAC,cAAA,+BAA8BgE,EAAAjE,EAAAC,cAAA,WADhC,qTAIAgE,EAAAjE,EAAAC,cAAA,UACEgE,EAAAjE,EAAAC,cAAA,2BAA0BgE,EAAAjE,EAAAC,cAAA,WAD5B,kGAIAgE,EAAAjE,EAAAC,cAAA,UACEgE,EAAAjE,EAAAC,cAAA,2CAA0CgE,EAAAjE,EAAAC,cAAA,WAD5C,qzBAIAgE,EAAAjE,EAAAC,cAAA,UACEgE,EAAAjE,EAAAC,cAAA,kDAAiDgE,EAAAjE,EAAAC,cAAA,WADnD,uMAIAgE,EAAAjE,EAAAC,cAAA,UACEgE,EAAAjE,EAAAC,cAAA,iEAAgEgE,EAAAjE,EAAAC,cAAA,WADlE,oWAIAgE,EAAAjE,EAAAC,cAAA,UACEgE,EAAAjE,EAAAC,cAAA,4CAA2CgE,EAAAjE,EAAAC,cAAA,WAD7C,8EAGEgE,EAAAjE,EAAAC,cAAA,MAAIkE,UAAWC,IAAOvB,KAAMrC,MAAO,CAACuiH,UAAU,gBAC5C9+G,EAAAjE,EAAAC,cAAA,0GACAgE,EAAAjE,EAAAC,cAAA,kMACAgE,EAAAjE,EAAAC,cAAA,4KAGJgE,EAAAjE,EAAAC,cAAA,UACEgE,EAAAjE,EAAAC,cAAA,kDAAiDgE,EAAAjE,EAAAC,cAAA,WADnD,iFAGEgE,EAAAjE,EAAAC,cAAA,MAAIkE,UAAWC,IAAOvB,KAAMrC,MAAO,CAACuiH,UAAU,gBAC5C9+G,EAAAjE,EAAAC,cAAA,mNACAgE,EAAAjE,EAAAC,cAAA,oKACAgE,EAAAjE,EAAAC,cAAA,gQACAgE,EAAAjE,EAAAC,cAAA,wOACAgE,EAAAjE,EAAAC,cAAA,0LACAgE,EAAAjE,EAAAC,cAAA,2JACAgE,EAAAjE,EAAAC,cAAA,qLACAgE,EAAAjE,EAAAC,cAAA,mEACAgE,EAAAjE,EAAAC,cAAA,uVACAgE,EAAAjE,EAAAC,cAAA,qNACAgE,EAAAjE,EAAAC,cAAA,0OACAgE,EAAAjE,EAAAC,cAAA,yHAIJgE,EAAAjE,EAAAC,cAAA,UACEgE,EAAAjE,EAAAC,cAAA,+CAA8CgE,EAAAjE,EAAAC,cAAA,WADhD,sCAGEgE,EAAAjE,EAAAC,cAAA,MAAIkE,UAAWC,IAAOvB,KAAMrC,MAAO,CAACuiH,UAAU,gBAC5C9+G,EAAAjE,EAAAC,cAAA,0LACAgE,EAAAjE,EAAAC,cAAA,+PACAgE,EAAAjE,EAAAC,cAAA,mUACAgE,EAAAjE,EAAAC,cAAA,yIACAgE,EAAAjE,EAAAC,cAAA,6QARJ,uXAYAgE,EAAAjE,EAAAC,cAAA,UACEgE,EAAAjE,EAAAC,cAAA,iDAAgDgE,EAAAjE,EAAAC,cAAA,WADlD,sCAGEgE,EAAAjE,EAAAC,cAAA,MAAIkE,UAAWC,IAAOvB,KAAMrC,MAAO,CAACuiH,UAAU,gBAC5C9+G,EAAAjE,EAAAC,cAAA,0HACAgE,EAAAjE,EAAAC,cAAA,4GAGJgE,EAAAjE,EAAAC,cAAA,UACEgE,EAAAjE,EAAAC,cAAA,oCAAmCgE,EAAAjE,EAAAC,cAAA,WADrC,80BAMFgE,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAK0J,GAAI,iBAAkBtH,GAAI,CAAC,EAAE,IAChCrC,EAAAjE,EAAAC,cAACiE,EAAA,EAAQ+K,GAAT,CAAYnO,MAAO,YAAaO,UAAW,OAAQD,WAAY,EAAGyuB,WAAY,UAAW1uB,SAAU,CAAC,EAAE,IAAtG,qBAGA8C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMoC,GAAI,GAAV,sLAKFrC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAK0J,GAAI,qBAAsBtH,GAAI,CAAC,EAAE,IACpCrC,EAAAjE,EAAAC,cAACiE,EAAA,EAAQ+K,GAAT,CAAYnO,MAAO,YAAaO,UAAW,OAAQD,WAAY,EAAGyuB,WAAY,UAAW1uB,SAAU,CAAC,EAAE,IAAtG,yBAGA8C,EAAAjE,EAAAC,cAAA,MAAIkE,UAAWC,IAAOvB,MACpBoB,EAAAjE,EAAAC,cAAA,UACEgE,EAAAjE,EAAAC,cAAA,iEAAgEgE,EAAAjE,EAAAC,cAAA,WADlE,sjBAIAgE,EAAAjE,EAAAC,cAAA,UACEgE,EAAAjE,EAAAC,cAAA,8EAA6EgE,EAAAjE,EAAAC,cAAA,WAD/E,snCAIAgE,EAAAjE,EAAAC,cAAA,UACEgE,EAAAjE,EAAAC,cAAA,iCAAgCgE,EAAAjE,EAAAC,cAAA,WADlC,wVAOJgE,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAK0J,GAAI,iCAAkCtH,GAAI,CAAC,EAAE,IAChDrC,EAAAjE,EAAAC,cAACiE,EAAA,EAAQ+K,GAAT,CAAYnO,MAAO,YAAaO,UAAW,OAAQD,WAAY,EAAGyuB,WAAY,UAAW1uB,SAAU,CAAC,EAAE,IAAtG,uCAGA8C,EAAAjE,EAAAC,cAAA,MAAIkE,UAAWC,IAAOvB,MACpBoB,EAAAjE,EAAAC,cAAA,UACEgE,EAAAjE,EAAAC,cAAA,0CAAyCgE,EAAAjE,EAAAC,cAAA,WAD3C,uRAIAgE,EAAAjE,EAAAC,cAAA,UACEgE,EAAAjE,EAAAC,cAAA,mCAAkCgE,EAAAjE,EAAAC,cAAA,WADpC,mOAIAgE,EAAAjE,EAAAC,cAAA,UACEgE,EAAAjE,EAAAC,cAAA,+BAA8BgE,EAAAjE,EAAAC,cAAA,WADhC,sRAOJgE,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAK0J,GAAI,qBAAsBtH,GAAI,CAAC,EAAE,IACpCrC,EAAAjE,EAAAC,cAACiE,EAAA,EAAQ+K,GAAT,CAAYnO,MAAO,YAAaO,UAAW,OAAQD,WAAY,EAAGyuB,WAAY,UAAW1uB,SAAU,CAAC,EAAE,IAAtG,yBAGA8C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMoC,GAAI,GAAV,sqBAKFrC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAK0J,GAAI,kBAAmBtH,GAAI,CAAC,EAAE,IACjCrC,EAAAjE,EAAAC,cAACiE,EAAA,EAAQ+K,GAAT,CAAYnO,MAAO,YAAaO,UAAW,OAAQD,WAAY,EAAGyuB,WAAY,UAAW1uB,SAAU,CAAC,EAAE,IAAtG,sBAGA8C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMoC,GAAI,GAAV,klCAKFrC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAK0J,GAAI,0BAA2BtH,GAAI,CAAC,EAAE,IACzCrC,EAAAjE,EAAAC,cAACiE,EAAA,EAAQ+K,GAAT,CAAYnO,MAAO,YAAaO,UAAW,OAAQD,WAAY,EAAGyuB,WAAY,UAAW1uB,SAAU,CAAC,EAAE,IAAtG,+BAGA8C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMoC,GAAI,GAAV,4rBAGArC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMoC,GAAI,GAAV,+lBAGArC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMoC,GAAI,GAAV,2ZAGArC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMoC,GAAI,GAAV,weAGArC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMoC,GAAI,GAAV,sWAGArC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMoC,GAAI,GAAV,gjCAGArC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMoC,GAAI,GAAV,8mBAGArC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMoC,GAAI,GAAV,6MAKFrC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAK0J,GAAI,0CAA2CtH,GAAI,CAAC,EAAE,IACzDrC,EAAAjE,EAAAC,cAACiE,EAAA,EAAQ+K,GAAT,CAAYnO,MAAO,YAAaO,UAAW,OAAQD,WAAY,EAAGyuB,WAAY,UAAW1uB,SAAU,CAAC,EAAE,IAAtG,sDAGA8C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMoC,GAAI,GAAV,wwCAKFrC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAK0J,GAAI,0CAA2CtH,GAAI,CAAC,EAAE,IACzDrC,EAAAjE,EAAAC,cAACiE,EAAA,EAAQ+K,GAAT,CAAYnO,MAAO,YAAaO,UAAW,OAAQD,WAAY,EAAGyuB,WAAY,UAAW1uB,SAAU,CAAC,EAAE,IAAtG,+BAGA8C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMoC,GAAI,GAAV,yyBAKFrC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAK0J,GAAI,iCAAkCtH,GAAI,CAAC,EAAE,IAChDrC,EAAAjE,EAAAC,cAACiE,EAAA,EAAQ+K,GAAT,CAAYnO,MAAO,YAAaO,UAAW,OAAQD,WAAY,EAAGyuB,WAAY,UAAW1uB,SAAU,CAAC,EAAE,IAAtG,0CAGA8C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMoC,GAAI,GAAV,woBAIArC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMoC,GAAI,GAAV,62DAGArC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMoC,GAAI,GAAV,40BAGArC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMoC,GAAI,GAAV,2xBAGArC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMoC,GAAI,GAAV,4bAGArC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMoC,GAAI,GAAV,mPAGArC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMoC,GAAI,GAAV,2aAGArC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMoC,GAAI,GAAV,giCAKFrC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAK0J,GAAI,gBAAiBtH,GAAI,CAAC,EAAE,IAC/BrC,EAAAjE,EAAAC,cAACiE,EAAA,EAAQ+K,GAAT,CAAYnO,MAAO,YAAaO,UAAW,OAAQD,WAAY,EAAGyuB,WAAY,UAAW1uB,SAAU,CAAC,EAAE,IAAtG,qBAGA8C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMoC,GAAI,GAAV,mzBAKFrC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAK0J,GAAI,gBAAiBtH,GAAI,CAAC,EAAE,IAC/BrC,EAAAjE,EAAAC,cAACiE,EAAA,EAAQ+K,GAAT,CAAYnO,MAAO,YAAaO,UAAW,OAAQD,WAAY,EAAGyuB,WAAY,UAAW1uB,SAAU,CAAC,EAAE,IAAtG,qBAGA8C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMoC,GAAI,GAAV,62DASVrC,EAAAjE,EAAAC,cAAC+iH,EAAA,EAAD,cAtVUphH,6BCDHqhH,EAAA,CACbp+F,YAAa,CAAC,OAAQ,QAEtBC,UAAW,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACxDC,YAAa,CAAC,EAAG,IAAK,IAAK,IAAK,IAAK,KACrCC,eAAgB,CAAC,EAAG,EAAG,EAAG,EAAG,GAC7BC,YAAa,CACXC,MAAO,EACPC,MAAO,KACPC,KAAM,KAERvS,MAAO,CACLwS,MAAO,2CACPvS,UAAW,qCACXwS,QAAS,mDAEXC,MAAO,CAAC,EAAG,EAAG,EAAG,GAAI,GAAI,GAAI,IAAK,KAClCC,MAAO,CAAC,IAAK,MAAO,MAAO,OAAQ,QACnCplB,MAAO,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KAC5BqlB,UAAW,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KAChCC,UAAW,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,IAAK,IAAK,IAAK,KAAM,MACrDC,QAAS,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KAC9BC,WAAY,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KACjCC,WAAY,CAAC,EAAG,GAAI,GAAI,GAAI,IAAK,KACjCC,QAAS,CAAC,EAAG,oBAAoB,qBACjCC,aAAc,CAAC,IAAK,MAAO,MAAO,OAClCC,QAAS,CACP,IACA,iCACA,+BACA,8BACA,uCAEFC,QAAS,CACPC,SAAU,IAEZhf,OAAQ,CACNif,QAAS,UACTG,cAAe,oDACfC,gBAAiBH,IAAKI,MAAM,GAC5BC,eAAgBL,IAAKM,KAAK,GAC1BC,OAAQ,UACRP,KAAM,UACNQ,YAAa,UACbC,QAAS,UACTC,UAAW,UACXC,UAAW,UACXC,SAAU,UACVC,MAAOC,IAAWD,MAClBE,aAAc,UACdC,YAAa,UACbC,WAAY,OACZC,KAAM,WACNC,KAAM,OACNC,OAAQ,OACRC,eAAgB,OAChBC,YAAa,OACbC,aAAc,OACdC,aAAc,UACdC,MAAO,OACPC,YAAa,cAIbC,MAAM,UACNC,YAAY,UACZC,cAAc,UACdC,gBAAgB,UAChBC,SAAS,UACTC,aAAa,UACb3K,gBAAgB,UAChB4K,qBAAqB,UACrBC,YAAa,UACbC,UAAW,UACXC,UAAW,UACXC,UAAW,UACXC,SAAU,UACVvhB,QAAS,UACTme,QAAS,UACTnc,OAAQ,UACRwf,KAAK,UACLzf,QAAS,UACTI,QAAS,UACTuS,OAAQ,UACRlJ,OAAO,UACPiW,OAAO,UACPC,UAAU,UACVC,WAAW,UACXG,YAAY,UACZC,WAAW,UACXC,WAAW,UACXC,aAAa,UACbL,gBAAgB,UAChBC,gBAAgB,iCAChB3c,aAAa,CACXnC,OAAO,CACLd,KAAK,UACLG,KAAK,UACL8f,MAAM,UACNlgB,OAAO,UACPK,QAAQ,UACRN,QAAQ,UACRogB,QAAQ,UACRjgB,QAAQ,UACRC,QAAQ,UACRigB,QAAQ,UACRC,SAAS,UACT/f,SAAS,UACTggB,eAAe,UACfC,gBAAgB,WAElBC,SAAS,CACPvgB,KAAK,UACLG,KAAK,UACL8f,MAAM,UACNlgB,OAAO,UACPK,QAAQ,UACRN,QAAQ,UACRogB,QAAQ,UACRC,QAAQ,UACRlgB,QAAQ,UACRC,QAAQ,UACRG,SAAS,UACT+f,SAAS,UACTC,eAAe,UACfC,gBAAgB,WAElB1kB,OAAO,CACL0E,UAAU,UACVC,QAAQ,UACRC,OAAO,YAGXggB,OAAQ,CACN,oBACA,mBACA,kBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,kBAEFC,OAAQ,CACN,0BACA,yBACA,wBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,uBACA,yBAGJC,SAAU,CAAC,EAAG,EAAG,GAAI,IAAK,MAC1BC,aAAc,CACZ1D,KAAM,CACJvlB,MAAO,UACP8S,YAAa,UACb1S,gBAAiB,WAEnBgpB,QAAS,CACPppB,MAAOkpB,YAAM,GAAKG,IAAM9D,MACxBnlB,gBAAiB+oB,YAAK,GAAKE,IAAM9D,MACjCzS,YAAauW,IAAM9D,MAErB+D,QAAS,CACPtpB,MAAOkpB,YAAM,GAAKK,IAAOhE,MACzBnlB,gBAAiB+oB,YAAK,GAAKI,IAAOhE,MAClCzS,YAAayW,IAAOhE,MAEtBiE,OAAQ,CACNxpB,MAAOkpB,YAAM,GAAKO,IAAIlE,MACtBnlB,gBAAiB+oB,YAAK,GAAKM,IAAIlE,MAC/BzS,YAAa2W,IAAIlE,MAEnBmE,KAAM,CACJ1pB,MAAO,UACP8S,YAAa,UACb1S,gBAAiB,YAGrBupB,QAAS,CACPtE,QAAS,CACPrlB,MAAOslB,IAAKnjB,KACZ/B,gBAAiBklB,IAAKC,KAEtBqE,eAAgBtE,IAAKC,KACrBsE,mBAAoBvE,IAAKnjB,MAE3B2nB,OAAQ,CACN9pB,MAAOomB,IAAWD,MAClB0D,mBAAoBzD,IAAWD,OAEjCiD,QAAS,CACPQ,eAAgBP,IAAM9D,KACtBsE,mBAAoBR,IAAMlnB,MAE5BqnB,OAAQ,CACNI,eAAgBH,IAAIlE,KACpBsE,mBAAoBJ,IAAItnB,OAG5B4nB,YAAa,CACXC,MAAO,CACL3pB,SAAU,UACVH,OAAQ,OACR4D,SAAU,OACVmmB,QAAS,UAEXC,OAAQ,CACN7pB,SAAU,OACVH,OAAQ,OACR4D,SAAU,QAEZqmB,MAAO,CACL9pB,SAAU,SACVH,OAAQ,OACR4D,SAAU,OACV3D,aAAc,gLCrOCiiH,cAEnB,SAAAA,EAAYC,GAAQ,IAAA99G,EAAAtD,OAAAo9D,EAAA,EAAAp9D,CAAAnB,KAAAsiH,GAAA,IACLE,EAA+BD,EAApCE,IAAYrwF,EAAwBmwF,EAAxBnwF,WAAeswF,EADjBvhH,OAAAwhH,EAAA,EAAAxhH,CAC0BohH,EAD1B,6BAElB99G,EAAAtD,OAAAyhH,EAAA,EAAAzhH,CAAAnB,KAAAmB,OAAA0hH,EAAA,EAAA1hH,CAAAmhH,GAAAx8B,KAAA9lF,KAAM0iH,KAEDxhE,MAAQ,KACbz8C,EAAK+9G,MAAQA,EACb/9G,EAAK2tB,WAAaA,EANA3tB,6LAUbzE,KAAKkhD,QACRlhD,KAAKkhD,MAAQ,IAAIlhD,KAAKwiH,MAAM,CAC1BM,eAAgB,2BAGd9iH,KAAKkhD,MAAM6hE,8BACX/iH,KAAKkhD,MAAM8hE,4RAIV,IAAIpkG,QAAJ,eAAAlJ,EAAAvU,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAAa,SAAAkJ,EAAOC,EAASC,GAAhB,OAAA4S,EAAAzyB,EAAA6W,KAAA,SAAAiJ,GAAA,cAAAA,EAAA/I,KAAA+I,EAAA9I,MAAA,OAClB4I,EAAQ5Z,EAAK87C,MAAMxgB,UADD,wBAAAxhB,EAAAtI,SAAAmI,EAAA/e,SAAb,gBAAAuf,EAAAC,GAAA,OAAA9J,EAAAoB,MAAA9W,KAAA8E,YAAA,kLAKQ47B,yFACQ1gC,KAAKkhD,MAAM+hE,0BAA5BtqC,0CAES34E,KAAKkhD,MAAMgiE,iBAAiB,CACvCC,SAASxqC,EAASwqC,SAClBC,WAAWzqC,EAASyqC,qFAGjB,0QAIDpjH,KAAKkhD,MAAMmiE,iJAGLx3D,GACZ1qD,OAAA0e,EAAA,EAAA1e,QAAA0hH,EAAA,EAAA1hH,CAAAmhH,EAAA3U,WAAA,0BAAA3tG,MAAA8lF,KAAA9lF,KAA8B,CAAEsjH,iBAAiB,WA3CTC,KCAvBC,cAEnB,SAAAA,EAAYjB,GAAQ,IAAA99G,EAAAtD,OAAAo9D,EAAA,EAAAp9D,CAAAnB,KAAAwjH,GAAA,IACLC,EAAgClB,EAArCE,IAAgB52D,EAAqB02D,EAArB12D,QAAY62D,EADlBvhH,OAAAwhH,EAAA,EAAAxhH,CAC2BohH,EAD3B,0BAElB99G,EAAAtD,OAAAyhH,EAAA,EAAAzhH,CAAAnB,KAAAmB,OAAA0hH,EAAA,EAAA1hH,CAAAqiH,GAAA19B,KAAA9lF,KAAM0iH,KAEDzhE,UAAY,KACjBx8C,EAAKg/G,UAAYA,EACjBh/G,EAAKonD,QAAUA,EANGpnD,mMAUbzE,KAAKihD,YACRjhD,KAAKihD,UAAY,IAAIjhD,KAAKyjH,UAAUzjH,KAAK6rD,mBAEpB7rD,KAAK0jH,0BAAtBhjF,0CAEEA,EAASijF,yCACRjjF,uRAKF,IAAI9hB,QAAJ,eAAAlJ,EAAAvU,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAAa,SAAAkJ,EAAOC,EAASC,GAAhB,OAAA4S,EAAAzyB,EAAA6W,KAAA,SAAAiJ,GAAA,cAAAA,EAAA/I,KAAA+I,EAAA9I,MAAA,OAClB4I,EAAQ5Z,EAAK67C,UAAUyiE,eADL,wBAAAxkG,EAAAtI,SAAAmI,EAAA/e,SAAb,gBAAAuf,EAAAC,GAAA,OAAA9J,EAAAoB,MAAA9W,KAAA8E,YAAA,kLAKQ47B,6EACXA,kCACqBA,EAASkjF,0BAA1BC,YACUA,EAAS9+G,gDAChB8+G,EAAS,oCAGb,yQAIgB7jH,KAAK0jH,0BAAtBhjF,0CAEEA,EAASojF,0CACRpjF,2IAIGmrB,GACZ7rD,KAAK+jH,YAAY,CACftB,IAAKziH,KAAKyjH,UACV53D,YAEF1qD,OAAA0e,EAAA,EAAA1e,QAAA0hH,EAAA,EAAA1hH,CAAAqiH,EAAA7V,WAAA,0BAAA3tG,MAAA8lF,KAAA9lF,KAA8B,CAAEsjH,iBAAiB,WAnDLC,wBCA3BS,cAEnB,SAAAA,EAAYC,GAAkB,IAAAx/G,EAAA,OAAAtD,OAAAo9D,EAAA,EAAAp9D,CAAAnB,KAAAgkH,IAC5Bv/G,EAAAtD,OAAAyhH,EAAA,EAAAzhH,CAAAnB,KAAAmB,OAAA0hH,EAAA,EAAA1hH,CAAA6iH,GAAAltG,MAAA9W,KAAS8E,aACJo/G,YAAa,EAClBz/G,EAAKw/G,iBAAmBA,EACxBx/G,EAAKi8B,SAAW,IAAIj8B,EAAKw/G,iBACzBx/G,EAAK0/G,eALuB1/G,yLASvBzE,KAAK0gC,WACR1gC,KAAK0gC,SAAW,IAAI1gC,KAAKikH,mBAGvBjkH,KAAK0gC,yCACD1gC,KAAK0gC,SAAS0jF,2CACbpkH,KAAK0gC,6PAKV1gC,KAAK0gC,yCACM1gC,KAAK0gC,SAAS2jF,ySAKzBrkH,KAAK0gC,yCACM1gC,KAAK0gC,SAASgjF,0SAKzB1jH,KAAK0gC,yCACM1gC,KAAK0gC,SAAS4jF,ySAKzBtkH,KAAK0gC,yCACM1gC,KAAK0gC,SAASkmD,gTAKzB5mF,KAAK0gC,yCACiB1gC,KAAK0gC,SAAS6jF,0BAAhCA,SACNvkH,KAAKkkH,YAAa,oBACXK,mPAKLvkH,KAAK0gC,gCACP1gC,KAAK0gC,SAAS8jF,+BACPxkH,KAAK0gC,mHAxD+B6iF,KCA5BkB,eAEnB,SAAAA,EAAYlC,GAAQ,IAAA99G,EAAAtD,OAAAo9D,EAAA,EAAAp9D,CAAAnB,KAAAykH,GAAA,IACLC,EAAiEnC,EAAtEE,IAAiB1jE,EAAqDwjE,EAArDxjE,QAAS4lE,EAA4CpC,EAA5CoC,UAAW1oD,EAAiCsmD,EAAjCtmD,QAAS2oD,EAAwBrC,EAAxBqC,WAAelC,EADnDvhH,OAAAwhH,EAAA,EAAAxhH,CAC4DohH,EAD5D,6DAElB99G,EAAAtD,OAAAyhH,EAAA,EAAAzhH,CAAAnB,KAAAmB,OAAA0hH,EAAA,EAAA1hH,CAAAsjH,GAAA3+B,KAAA9lF,KAAM0iH,KAEDhiF,SAAW,KAChBj8B,EAAKogH,WAAa,KAClBpgH,EAAKs6C,QAAUA,EACft6C,EAAKw3D,QAAUA,EACfx3D,EAAKkgH,UAAYA,EACjBlgH,EAAKmgH,WAAaA,EAClBngH,EAAKigH,WAAaA,EAVAjgH,+LAcbzE,KAAK6kH,aACR7kH,KAAK6kH,WAAa,IAAI7kH,KAAK0kH,WAAW,CACpCI,UAAU,EACV/lE,QAAS/+C,KAAK++C,QACd4lE,UAAW3kH,KAAK2kH,UAChBC,WAAY5kH,KAAK4kH,gBAIflkF,EAAW1gC,KAAK0jH,+CAEdhjF,EAASijF,yCACRjjF,2IAQT,OAHK1gC,KAAK0gC,WACR1gC,KAAK0gC,SAAW1gC,KAAK6kH,WAAWE,iBAAiB/kH,KAAK2kH,UAAW3kH,KAAKi8D,UAEjEj8D,KAAK0gC,oFAGGA,6EACXA,kCAEqBA,EAASl4B,KAAK,mCAA/Bq7G,YACUA,EAAS9+G,gDAChB8+G,EAAS,oCAGb,8PAIDnjF,EAAW1gC,KAAK0jH,sCAEpB1jH,KAAK6kH,WAAWG,sBACVtkF,EAASukF,wCACRvkF,2IAIGmrB,GACZ7rD,KAAK+jH,YAAY,CACfl4D,UACA42D,IAAKziH,KAAK0kH,WACV3lE,QAAS/+C,KAAK++C,QACdkd,QAASj8D,KAAKi8D,QACd0oD,UAAW3kH,KAAK2kH,UAChBC,WAAY5kH,KAAK4kH,aAEnBzjH,OAAA0e,EAAA,EAAA1e,QAAA0hH,EAAA,EAAA1hH,CAAAsjH,EAAA9W,WAAA,0BAAA3tG,MAAA8lF,KAAA9lF,KAA8B,CAAEsjH,iBAAiB,WApEJC,gBCA5B2B,eAEnB,SAAAA,EAAY3C,GAAQ,IAAA99G,EAAAtD,OAAAo9D,EAAA,EAAAp9D,CAAAnB,KAAAklH,GAAA,IACLC,EAA6D5C,EAAlEE,IAA4C2C,GAAsB7C,EAAtC8C,eAAsC9C,EAAtB6C,UAAa1C,EAD/CvhH,OAAAwhH,EAAA,EAAAxhH,CACwDohH,EADxD,4CAElB99G,EAAAtD,OAAAyhH,EAAA,EAAAzhH,CAAAnB,KAAAmB,OAAA0hH,EAAA,EAAA1hH,CAAA+jH,GAAAp/B,KAAA9lF,KAAM0iH,KAEDhiF,SAAW,KAChBj8B,EAAK0gH,sBAAwBA,EAC7B1gH,EAAK2gH,SAAWA,EANE3gH,yLAUbzE,KAAK0gC,WACR1gC,KAAK0gC,SAAW,IAAI1gC,KAAKmlH,sBAAsB,CAC7CC,SAASplH,KAAKolH,aAIdplH,KAAK0gC,yCACD1gC,KAAK0gC,SAASijF,yCACb3jH,KAAK0gC,mRAKP1gC,KAAK0gC,0PAIR1gC,KAAK0gC,gCACP1gC,KAAK0gC,SAASukF,0BACPjlH,KAAK0gC,mHA/BkC6iF,KCelD+B,GAMEC,aANFD,kBACAE,GAKED,aALFC,qBACAC,GAIEF,aAJFE,gBACAC,GAGEH,aAHFG,gBACAC,GAEEJ,aAFFI,mBACAC,GACEL,aADFK,gBAGI/mE,GAAMC,8/CAEN+mE,GAAgBhnE,GAAIinE,gCACpBC,GAAiBlnE,GAAImnE,8BACrBX,GAAiBzxG,IAAci4C,QAAQM,gBACvC85D,GAAkBpnE,GAAIqnE,gCACtBC,GAAetnE,GAAIunE,yBACnBC,GAAgBxnE,GAAIynE,yBAEpBC,GAAuB,GAE7BplH,OAAOqF,KAAKoN,IAAci4C,QAAQY,UAAUC,QAAQxiD,QAAQ,SAAC6jD,EAAUzgD,GACrEi5G,GAAqBx4D,GAAan6C,IAAci4C,QAAQY,UAAUC,OAAOqB,GAAWlP,GAAI2nE,uBAG1F,IAAMC,GAAW,IAAInB,GAAkB,CACrC14D,kBAAmBh5C,IAAci4C,QAAQU,kBAGrCm6D,GAAS,IAAIlB,GAAqB,CACtCmB,YAAa/yG,IAAci4C,QAAQY,UAAUC,OAAO24D,IAAgBxmE,GAAI2nE,uBAIpEI,GAAS,IAAInB,GAAgB,CACjChD,IAAKoE,IACLN,wBACAlB,kBACAQ,iBACAE,oBAGIe,GAAS,IAAIpB,GAAgB,CACjCa,wBACAlB,oBAGI0B,GAAgB,IAAI7B,GAAuB,CAC/CG,kBACAkB,wBACA9D,IAAK0C,IACLC,SAASvmE,GAAI2nE,qBACbQ,OAAQ,qCAGJC,GAAY,IAAItB,GAAmB,CACvClD,IAAKyE,IACL15D,OAAQy4D,GACRkB,sBAAsB,IAGlBC,GAAS,IAAIxB,GAAgB,CACjCnD,IAAK4E,IACLC,OAAQnB,GACRt6D,QAASw6D,KAGL5C,GAAY,IAAID,EAAmB,CACvCf,IAAK8E,IACL17D,QAASj4C,IAAci4C,QAAQC,kBAAkBu5D,IAAgB97G,gBAG7Ds7G,GAAa,IAAIJ,GAAoB,CACzChC,IAAKiC,IACLI,UAAU,EACV7oD,QAASopD,GACTtmE,QAASnrC,IAAcmrC,QACvB4lE,UAAW4B,GAAqBlB,IAChCT,WAAY,8CAGRpC,GAAQ,IAAIF,EAAe,CAC/BG,IAAK+E,IACLp1F,WAAW,CACTq1F,SAAU,aACVC,eAAe,EACf77D,QAAS,CACP87D,KAAM/zG,IAAci4C,QAAQC,kBAAkBu5D,IAAgB97G,cAC9D0yD,QAASopD,GACTr3D,YAAap6C,IAAci4C,QAAQC,kBAAkBu5D,IAAgB97G,eAEvEq+G,iBAAiB,KAMNvnE,GAAA,CACbomE,YACAC,UACAK,iBACAjmE,OANa,IAAIkjE,EAAoBC,qBAOrCY,cACAoC,aACAG,UACA3D,aACAjB,SACAoE,UACAE,oFCpFae,oLAzBX,OACExkH,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAK1D,MAVa,CAClB2F,SAAU,QACV6N,OAAQ,EACRtD,KAAM,EACNqD,MAAO,EACP3T,MAAO,OACP8F,OAAQ,MAIiBhF,gBAAiB,uBAAwB8O,EAAG,GACnE/L,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM7D,WAAY,UAChB4D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAK8L,EAAG,GACN/L,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM0C,KAAK,UAAU9F,MAAM,OAAOgD,KAAK,QAEzCG,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM5D,cAAe,UACnB2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM9C,WAAY,QAAlB,0CAGA6C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,6BACwBtD,KAAKC,MAAM4rD,QAAQl0B,SAAS3xB,KADpD,wDAE8C,IAC5C3C,EAAAjE,EAAAC,cAACiE,EAAA,EAAK+f,KAAN,CAAWzjB,MAAO,CAAEc,cAAe,eAChCV,KAAKC,MAAM4rD,QAAQ+Z,QAAQ5/D,MACjB,IALf,6DArBqB8hH,IAAM9mH,WCkBxB+mH,oLAfX,OACE1kH,EAAAjE,EAAAC,cAAA,YAC4C,IAAxCW,KAAKC,MAAM4rD,QAAQm8D,kBAA8BhoH,KAAKC,MAAMmf,KAE1D/b,EAAAjE,EAAAC,cAAC4oH,GAAD,CACEp8D,QAAS7rD,KAAKC,MAAM4rD,UAGtB,aAVci8D,IAAM9mH,uECiIjBknH,8MA/HbC,cAAgB,WACd,OACE9kH,EAAAjE,EAAAC,cAACgE,EAAAjE,EAAMkpC,SAAP,KACEjlC,EAAAjE,EAAAC,cAACiE,EAAA,EAAQ4+G,GAAT,CACE3hH,SAAU,EACVC,WAAY,EACZyuB,WAAY,UACZ7nB,GAAI,GAJN,uCASCghH,KAAWC,iBACVhlH,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM8D,GAAI,GAAV,8GAE6C,IAC3C/D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEmgB,KAAK,qBACLc,MAAM,oBACN/V,OAAO,SAASC,IAAI,gCAHtB,UAHF,IAUI,IACFpL,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEmgB,KAAK,iCACLc,MAAM,gBACN/V,OAAO,SAASC,IAAI,gCAHtB,UAMQ,IAjBV,KAkBK,IACHpL,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEmgB,KAAK,+BACLc,MAAM,kBACN/V,OAAO,SAASC,IAAI,gCAHtB,mBAMQ,IAzBV,aA6BApL,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,KACED,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM8D,GAAI,GAAV,qGAE0C,IACxC/D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEmgB,KAAK,8BACLc,MAAM,yBACN/V,OAAO,SAASC,IAAI,gCAHtB,SAHF,IAUI,IACFpL,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEmgB,KAAK,2BACLc,MAAM,2BACN/V,OAAO,SAASC,IAAI,gCAHtB,WAXF,IAkBI,IACFpL,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEmgB,KAAK,iCACLc,MAAM,yBACN/V,OAAO,SAASC,IAAI,gCAHtB,SAnBF,OA0BO,IACLpL,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEmgB,KAAK,iCACLc,MAAM,0BACN/V,OAAO,SAASC,IAAI,gCAHtB,UAMQ,IAjCV,gBAqCApL,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,KACED,EAAAjE,EAAAC,cAACiE,EAAA,EAAK+f,KAAN,CAAWilG,MAAI,GAAf,0BADF,2DAE8C,IAC5CjlH,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEmgB,KAAK,qBACLc,MAAM,oBACN/V,OAAO,SAASC,IAAI,gCAHtB,UAHF,IAUI,IACFpL,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEmgB,KAAK,iCACLc,MAAM,gBACN/V,OAAO,SAASC,IAAI,gCAHtB,UAMQ,IAjBV,KAkBK,IACHpL,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEmgB,KAAK,+BACLc,MAAM,kBACN/V,OAAO,SAASC,IAAI,gCAHtB,mBAnBF,gFAmCR,OACEpL,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAOilH,OAAQvoH,KAAKC,MAAMsoH,QACxBllH,EAAAjE,EAAAC,cAACmpH,GAAA,EAAD,CAAWC,UAAWzoH,KAAKC,MAAMyoH,YAC/BrlH,EAAAjE,EAAAC,cAACmpH,GAAA,EAAUG,KAAX,KACG3oH,KAAKmoH,0BAxHeL,IAAM9mH,WCiDxB4nH,oLAxCX,OACEvlH,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAOilH,OAAQvoH,KAAKC,MAAMsoH,QACxBllH,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM8L,EAAG,EAAGrL,SAAU,SACpBV,EAAAjE,EAAAC,cAACiE,EAAA,EAAOmE,KAAR,CACEohH,UAAQ,EACR30G,KAAM,QACNhU,MAAO,YACPqF,SAAU,WACVF,IAAK,EACL8N,MAAO,EACPjN,GAAI,EACJ/F,GAAI,EACJsB,QAASzB,KAAKC,MAAMyoH,aAGtBrlH,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM5D,cAAe,SAAUK,eAAgB,iBAC7CsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMvD,eAAgB,SAAUqH,GAAI,GAClC/D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM0C,KAAK,UAAU9F,MAAM,OAAOgD,KAAK,QAGzCG,EAAAjE,EAAAC,cAACiE,EAAA,EAAQ4+G,GAAT,CAAY96G,GAAI,GAAhB,uBAEA/D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM8D,GAAI,GAAV,4GAKA/D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEmgB,KAAK,4FACLjV,OAAO,SAASC,IAAI,gCAEpBpL,EAAAjE,EAAAC,cAACiE,EAAA,EAAOwlH,QAAR,CAAgB5lH,KAAK,SAArB,qCAjCc4kH,IAAM9mH,WC0CnB+nH,GArDK,CAClBC,YAAa,WACX,IAAIA,GAAc,EAQlB,MAN+B,qBAApBp7G,OAAOuuD,SAChB6sD,EAAoD,qBAA/Bp7G,OAAOuuD,SAAS8sD,WACL,qBAAhBr7G,OAAOwR,OACvB4pG,EAAgE,qBAA3Cp7G,OAAOwR,KAAK0mD,gBAAgBmjD,YAA8Br7G,OAAOwR,KAAK0mD,gBAAgBmjD,YAGtGD,GAETE,cAAe,WACb,MAA2B,qBAAhBt7G,OAAOwR,MAA+D,qBAAhCxR,OAAOwR,KAAK0mD,kBACL,qBAAxCl4D,OAAOwR,KAAK0mD,gBAAgBqjD,SAA2Bv7G,OAAOwR,KAAK0mD,gBAAgBqjD,UAIrGC,iBAAkB,WAChB,MAA2B,qBAAhBx7G,OAAOwR,MAA+D,qBAAhCxR,OAAOwR,KAAK0mD,kBACI,qBAAjDl4D,OAAOwR,KAAK0mD,gBAAgBsjD,kBAAoCx7G,OAAOwR,KAAK0mD,gBAAgBsjD,mBAI9GC,UAAW,WACT,IAAIA,EAA6C,qBAA1Bz7G,OAAO07G,eAM9B,MAJ+B,qBAApB17G,OAAOuuD,WAChBktD,EAAgD,qBAA7Bz7G,OAAOuuD,SAASotD,UAA4B37G,OAAOuuD,SAASotD,UAG1EF,GAETG,QAAS,WACP,MAAO,cAAcrmE,KAAKqY,UAAUC,YAGtCguD,UAAW,WACT,IAAMA,IAAY,WAAWtmE,KAAKqY,UAAUC,WAE5C,OAAOguD,GAGTC,MA3CkB,WA4ChB,IAAMA,KACJ,mBAAmBvmE,KAAKqY,UAAUC,YAAe7tD,OAAO+7G,UAI1D,OAAOD,IC0BIE,8MA7DbzB,cAAgB,WACd,OACE9kH,EAAAjE,EAAAC,cAACmpH,GAAA,EAAUG,KAAX,KACEtlH,EAAAjE,EAAAC,cAACiE,EAAA,EAAQ4+G,GAAT,CAAY96G,GAAI,GAAhB,iBACiB3C,EAAKxE,MAAM4rD,QAAQl0B,SAAS3xB,KAD7C,cAC8D,IAC3D+iH,GAAYC,cAAZ,uBAGH3lH,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM8D,GAAI,GAAV,iCACiC,IAC/B/D,EAAAjE,EAAAC,cAACiE,EAAA,EAAK+f,KAAN,CAAWzjB,MAAO,CAAEc,cAAe,eAChC+D,EAAKxE,MAAM4rD,QAAQl0B,SAAS3xB,MAClB,IAJf,wCAKmC,IACjC3C,EAAAjE,EAAAC,cAACiE,EAAA,EAAK+f,KAAN,CAAWzjB,MAAO,CAAEc,cAAe,eAChC,IACA+D,EAAKxE,MAAM4rD,QAAQ+Z,QAAQ5/D,MACjB,IATf,YAaC+iH,GAAYC,gBAAkBa,KAAYxB,iBACzChlH,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAKgnB,GAAI,UAAWlb,EAAG,EAAGjM,QAAS,CAAC,OAAQ,UAC1CE,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM7D,WAAY,UAChB4D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAKiC,SAAU,WAAY/F,MAAO,OAChC6D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,KACED,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAQJ,KAAM,UAGlBG,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,KACED,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM9C,WAAY,GAAlB,oCACA6C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM9C,WAAY,GAAlB,sCAMJ,KAEJ6C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAKH,QAAS,CAAC,QAAS,SACtBE,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAQ7B,QAASgD,EAAKxE,MAAMyoH,WAAYlpH,MAAO,GAA/C,iFASN,OACE6D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAOilH,OAAQvoH,KAAKC,MAAMsoH,QACxBllH,EAAAjE,EAAAC,cAACmpH,GAAA,EAAD,CAAWC,UAAWzoH,KAAKC,MAAMyoH,YAC/BrlH,EAAAjE,EAAAC,cAACgE,EAAAjE,EAAMkpC,SAAP,KACGtoC,KAAKmoH,0BAtDcL,IAAM9mH,kDCiDvB8oH,OA3Df,SAA6B7pH,GAC3B,OACEoD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,KACED,EAAAjE,EAAAC,cAACmpH,GAAA,EAAUuB,OAAX,CAAkBxlG,MAAO,6CAA8CylG,SAAU,wDAAyDC,UAAW,0EACrJ5mH,EAAAjE,EAAAC,cAACmpH,GAAA,EAAUG,KAAX,KACEtlH,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM5D,cAAe,CAAC,SAAU,OAC9BK,eAAgB,gBAChBqH,GAAI,CAAC,EAAG,IACR/D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAKxD,KAAM,MAAON,MAAO,EAAG0G,GAAI,CAAC,EAAG,GAAI3G,GAAI,CAAC,EAAG,GAAIY,GAAI,GACtDkD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMvD,eAAgB,SAAUR,GAAI,GAClC8D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE0C,KAAK,cACL9F,MAAM,UACNgD,KAAK,SAGTG,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAS/C,SAAU,EAAGE,UAAW,UAAjC,oBACA4C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM/C,SAAU,EAAGE,UAAW,UAA9B,6FAKF4C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAKxD,KAAM,MAAON,MAAO,EAAG0G,GAAI,CAAC,EAAG,GAAI3G,GAAI,CAAC,EAAG,GAAIY,GAAI,GACtDkD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMvD,eAAgB,SAAUR,GAAI,GAClC8D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE0C,KAAK,qBACL9F,MAAM,UACNgD,KAAK,SAGTG,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAS/C,SAAU,EAAGE,UAAW,UAAjC,0BACA4C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM/C,SAAU,EAAGE,UAAW,UAA9B,6DAIF4C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAKxD,KAAM,MAAON,MAAO,EAAG0G,GAAI,CAAC,EAAG,GAAI3G,GAAI,CAAC,EAAG,GAAIY,GAAI,GACtDkD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMvD,eAAgB,SAAUR,GAAI,GAClC8D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE0C,KAAK,iBACL9F,MAAM,UACNgD,KAAK,QAEPG,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE0C,KAAK,gBACL9F,MAAM,UACNgD,KAAK,SAGTG,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAS/C,SAAU,EAAGE,UAAW,UAAjC,wBACA4C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM/C,SAAU,EAAGE,UAAW,UAA9B,qGC1CN0e,GAAY,WAAc,QAAA6jD,EAAAl+D,UAAAC,OAAV9E,EAAU,IAAAgjE,MAAAD,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAVjjE,EAAUijE,GAAAp+D,UAAAo+D,IAEjB,SAASgnD,GAAsBjqH,GAC5C,IAAMkqH,EAAUC,2BAEXD,EAAQtI,QAAWsI,EAAQpsG,MAErBosG,EAAQpsG,MACjBoB,GAAU,gBAAiBgrG,GAE3BhrG,GAAU,kBAAmBgrG,GAJ7BhrG,GAAU,kBAAmBgrG,GAO/B,IAAME,EAAY,eAAA30G,EAAAvU,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAAG,SAAA0I,EAAO6Y,EAAcpxB,GAArB,IAAAskH,EAAA,OAAAz4F,EAAAzyB,EAAA6W,KAAA,SAAAwI,GAAA,cAAAA,EAAAtI,KAAAsI,EAAArI,MAAA,cACfk0G,EAAmC,aAAlBlzF,EAA+BpxB,EAAOoxB,EACvDzV,eACFA,aAAa87D,QAAQ,iBAAkB6sC,GACvC3oG,aAAa87D,QAAQ,gBAAiBrmD,IAGpCn3B,EAAMoqH,cAA8C,oBAAvBpqH,EAAMoqH,cACrCpqH,EAAMoqH,aAAajzF,EAAckzF,GAIK,oBAA7BrqH,EAAMsqH,oBACftqH,EAAMsqH,qBAbW9rG,EAAAgB,OAAA,SAgBZ2X,GAhBY,wBAAA3Y,EAAA7H,SAAA2H,EAAAve,SAAH,gBAAAuf,EAAAC,GAAA,OAAA9J,EAAAoB,MAAA9W,KAAA8E,YAAA,GAoBZ0lH,EAAc,eAAAzyG,EAAA5W,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAAG,SAAAkJ,IAAA,OAAA8S,EAAAzyB,EAAA6W,KAAA,SAAAiJ,GAAA,cAAAA,EAAA/I,KAAA+I,EAAA9I,MAAA,OACrB+zG,EAAQK,iBACJvqH,EAAMoqH,cAA8C,oBAAvBpqH,EAAMoqH,cACrCpqH,EAAMoqH,aAAa,SAAS,UAHT,wBAAAnrG,EAAAtI,SAAAmI,EAAA/e,SAAH,yBAAA+X,EAAAjB,MAAA9W,KAAA8E,YAAA,GAUd0kH,EAAUT,GAAYS,UACtBD,EAAWR,GAAYM,YACvBoB,EAAa1B,GAAYC,cACzBE,EAAgBH,GAAYG,gBAC5BwB,IAAiBrqE,GAAWS,OAAOpgB,SAASiqF,KAC5CvB,EAAmBL,GAAYK,mBAC/BwB,EAAwBH,GAAcjB,GAAWD,GAAYH,GAAoBF,EAEjF2B,EAAoB5qH,EAAM4qH,kBAC1BC,EAAe7qH,EAAM6qH,aAEvBzqE,GAAW+mE,SACT0D,GACFzqE,GAAW+mE,OAAOt8F,QAAUu1B,GAAW+mE,OAAOt8F,SAAW,GACzDu1B,GAAW+mE,OAAOt8F,QAAQigG,uBAAwB,IAElD1qE,GAAW+mE,OAAOt8F,QAAUu1B,GAAW+mE,OAAOt8F,SAAW,GACzDu1B,GAAW+mE,OAAOt8F,QAAQigG,uBAAwB,IAItD,IAAIC,EAAsB7pH,OAAOqF,KAAK65C,IAAY77C,OAAO,SAAAsqC,GAAC,MAAU,WAANA,IAO9D,GALI+7E,IACFG,EAAsBA,EAAoBxmH,OAAO,SAAAolC,GAAC,OAA4F,IAAxFihF,EAAkBnkH,IAAI,SAACkB,GAAQ,OAAOA,EAAE2B,gBAAkBmiB,QAAQke,EAAErgC,kBAIxHmhH,EAAa,CACf,IAAMO,EAAgBD,EAAoBt/F,QAAQ,YAElDs/F,EAAoBE,OAAOD,EAAc,GAEzC,IAAME,EAAcH,EAAoBt/F,QAAQ,UAChDs/F,EAAoBE,OAAOC,EAAY,GAEvCH,EAAoBzhC,QAAQ,cACvB,CACL,IAAM4hC,EAAcH,EAAoBt/F,QAAQ,UAEhDs/F,EAAoBE,OAAOC,EAAY,GAGzC,IAAMthG,EAAUmhG,EAAoBtkH,IAAK,SAAC0wB,EAAc9pB,GACtD,OAAQ8pB,GACN,IAAK,WACH,GAAIwzF,EAAuB,CACzB,IAAI5kH,EAAO,KACPykH,EACFzkH,EAAO,WACEwjH,EACTxjH,EAAO,QACEujH,EACTvjH,EAAO,SACEojH,EACTpjH,EAAO,WACEkjH,IACTljH,EAAO,eAGT,IAAMolH,EAAgBx3G,IAAcysC,WAAWr6C,EAAKuD,eACpD,GAAI6hH,GAAiBA,EAAcj6F,QAAQ,CACzC,IAAMk6F,EAAaD,EAAcl3G,KAAOk3G,EAAcl3G,KAAnC,GAAA9N,OAA6CJ,EAAKuD,cAAlD,QACnB,OACElG,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPqH,IAAG,UAAAT,OAAYJ,GACfjG,eAAgB,gBAChBH,MAAO,CACLE,KAAK,WAGPuD,EAAAjE,EAAAC,cAAC4+B,GAAA,EAAD,CACE/8B,YAAa,CACXktB,OAAO,GAET8P,QAASl4B,EACTD,UAAU,EACVvG,MAAO,CAAC,EAAE,KACVmvB,WAAY,CAACnvB,MAAM,OAAOY,OAAO,QACjC+9B,SAAQ,qBAAA/3B,OAAuBilH,GAC/B3pH,YAAWP,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAAG,SAAAC,IAAA,OAAA+b,EAAAzyB,EAAA6W,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAAkBi0G,EAAajzF,EAAcpxB,GAA7C,cAAAkQ,EAAAuJ,OAAA,SAAAvJ,EAAAiC,MAAA,wBAAAjC,EAAAU,SAAAd,EAAA9V,SACd45C,WAAawxE,GAAiBA,EAAcxxE,WAAawxE,EAAcxxE,WAA1D,iBAAAxzC,OAAwFJ,KAEvG3C,EAAAjE,EAAAC,cAAC4+B,GAAA,EAAD,CACE/8B,YAAa,CACXktB,OAAO,GAETroB,UAAU,EACVvG,MAAO,CAAC,EAAE,KACV0+B,QAAS,gBACTC,SAAQ,wBACRyb,WAAY,4BACZjrB,WAAY,CAACnvB,MAAM,OAAOY,OAAO,QACjCsB,YAAc,SAAA8F,GAAC,OAAIvH,EAAM40E,kBAAiB,OAKlD,OAAO,KAEP,IAAMu2C,EAAgBx3G,IAAcysC,WAAWjpB,EAAc7tB,eAC7D,OACElG,EAAAjE,EAAAC,cAAC4+B,GAAA,EAAD,CACE/8B,YAAa,CACXktB,OAAO,GAETroB,UAAU,EACVm4B,QAAS,iBACTr3B,IAAG,UAAAT,OAAYgxB,GACfzI,WAAY,CAACnvB,MAAM,OAAOY,OAAO,QACjC+9B,SAAQ,uCACRz8B,YAAWP,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAAG,SAAAmC,IAAA,OAAA6Z,EAAAzyB,EAAA6W,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,cAAA6B,EAAA7B,KAAA,EAAkBi0G,EAAajzF,GAA/B,cAAAnf,EAAAwH,OAAA,SAAAxH,EAAAE,MAAA,wBAAAF,EAAArB,SAAAoB,EAAAhY,SACd45C,WAAawxE,GAAiBA,EAAcxxE,WAAawxE,EAAcxxE,WAA1D,iCACb0xE,YAAcrrH,EAAM8F,SAAW,CAAChG,eAAe,aAAaD,KAAK,UAAY,CAACC,eAAe,aAAaD,KAAK,WAIvH,QACE,IAAMsrH,EAAgBx3G,IAAcysC,WAAWjpB,EAAc7tB,eAC7D,GAAI6hH,GAAiBA,EAAcj6F,QAAQ,CACzC,IAAMk6F,EAAaD,EAAcxqE,UAAYwqE,EAAcxqE,UAAawqE,EAAcl3G,KAAOk3G,EAAcl3G,KAAnC,GAAA9N,OAA6CgxB,EAAc7tB,cAA3D,QAEpE20B,EAAUktF,EAAcplH,KAAOolH,EAAcplH,KAAOoxB,EACxD,OACE/zB,EAAAjE,EAAAC,cAAC4+B,GAAA,EAAD,CACE/8B,YAAa,CACXktB,OAAO,GAETroB,UAAU,EACVm4B,QAASA,EACTr3B,IAAG,UAAAT,OAAYgxB,GACf+G,SAAQ,qBAAA/3B,OAAuBilH,GAC/B18F,WAAY,CAACnvB,MAAM,OAAOY,OAAO,QACjCsB,YAAWP,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAAG,SAAAkK,IAAA,OAAA8R,EAAAzyB,EAAA6W,KAAA,SAAAgK,GAAA,cAAAA,EAAA9J,KAAA8J,EAAA7J,MAAA,cAAA6J,EAAA7J,KAAA,EAAkBi0G,EAAajzF,GAA/B,cAAAnX,EAAAR,OAAA,SAAAQ,EAAA9H,MAAA,wBAAA8H,EAAArJ,SAAAmJ,EAAA/f,SACd45C,WAAawxE,GAAiBA,EAAcxxE,WAAawxE,EAAcxxE,WAA1D,iBAAAxzC,OAAwFgxB,GACrGk0F,YAAcrrH,EAAM8F,SAAW,CAAChG,eAAe,aAAaD,KAAK,UAAY,CAACC,eAAe,aAAaD,KAAK,WAIrH,OAAO,QAIb,OACEuD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAK9D,MAAO,CAAC,IACX6D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM5D,cAAe,SAAUD,WAAY,UACxC0qH,EAAQpsG,OACP1a,EAAAjE,EAAAC,cAACiE,EAAA,EAAK8L,EAAN,CAAQ3O,UAAU,UAAlB,+DAEE4C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMmgB,KAAK,uBAAuBjV,OAAO,SAASC,IAAI,gCAAtD,sBAFF,KAMEpL,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMmgB,KAAK,8BAA8BjV,OAAO,SAASC,IAAI,gCAA7D,eANF,6OAgBA07G,EAAQtI,QAAWsI,EAAQpsG,OAASosG,EAAQ/yF,gBAA6C,WAA1B+yF,EAAQ/yF,eACvE/zB,EAAAjE,EAAAC,cAACiE,EAAA,EAAOwlH,QAAR,CACEtpH,MAAO,CAAC,IACR+D,UAAW,CAACC,KAAO+mB,QACnBhrB,GAAI,CAAC,EAAG,GACR2D,KAAM,QACN2D,IAAK,QACLpF,QAAON,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAAE,SAAA+K,IAAA,OAAAiR,EAAAzyB,EAAA6W,KAAA,SAAA8K,GAAA,cAAAA,EAAA5K,KAAA4K,EAAA3K,MAAA,cAAA2K,EAAA3K,KAAA,EAAkBo0G,IAAlB,cAAAzpG,EAAAtB,OAAA,SAAAsB,EAAA5I,MAAA,wBAAA4I,EAAAnK,SAAAgK,EAAA5gB,UAERmqH,EAAQtI,OAAS,uBAAyB,UAIjDx+G,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEg7B,SAAU,OACV5+B,cAAe,MACfK,eAAgB,iBAEf8pB,kBCmVM0hG,8MApiBbnpH,MAAQ,CACNw4C,WAAU,EACV4wE,YAAW,EACX12C,cAAc,GACd22C,eAAe,KACfC,kBAAiB,EACjBC,kBAAiB,EACjBC,mBAAmB,KACnBC,oBAAmB,EACnBC,oBAAoB,QAItBxpH,cAAgB,OAShBypH,iBAAmB,SAAAvkH,GACjBA,EAAE2D,iBAEF1G,EAAKzB,SAAS,CACZwoH,YAAa/mH,EAAKrC,MAAMopH,gBAI5BQ,iBAAmB,WACjB,IAAIP,EAAiB,KASrB,OARI9pG,eACF8pG,EAAiB9pG,aAAaC,QAAQ,oBAEpCnd,EAAKzB,SAAS,CACZyoH,mBAICA,KAGTt2G,kBAAoB,WAClB1Q,EAAKhC,YACLgC,EAAKunH,sBAGPC,mBAAqB,WACnBxnH,EAAKhC,eAGPypH,WAAa,SAAA1kH,GACX/C,EAAKzB,SAAS,CACZwoH,YAAY,EACZC,eAAe,KACfE,kBAAiB,EACjBD,kBAAkB,EAClBI,oBAAoB,UAIxBzB,mDAAe,SAAA9rG,EAAO6Y,EAAcpxB,GAArB,IAAAskH,EAAA,OAAAz4F,EAAAzyB,EAAA6W,KAAA,SAAAwI,GAAA,cAAAA,EAAAtI,KAAAsI,EAAArI,MAAA,cACTk0G,EAAmC,aAAlBlzF,EAA+BpxB,EAAOoxB,EAG3D3yB,EAAKnC,cAAciwB,yBAAyB,CAC1CC,cAAc,UACdE,WAAW43F,EACX73F,YAAY,kBAGVhuB,EAAKxE,MAAMoqH,cAAmD,oBAA5B5lH,EAAKxE,MAAMoqH,cAC/C5lH,EAAKxE,MAAMoqH,aAAajzF,EAAckzF,GAIxC7lH,EAAKzB,SAAS,CACZ8oH,oBAAqB10F,IAGvB3yB,EAAK0nH,iBAnBQ1tG,EAAAgB,OAAA,SAqBN2X,GArBM,wBAAA3Y,EAAA7H,SAAA2H,EAAAve,mEA0BfmsH,eAAiB,WACf,IAAMP,EAAqBnnH,EAAKrC,MAAMwpH,mBAAqBnnH,EAAKrC,MAAMwpH,mBAAmB,EAAI,EACxFA,EAGH1qG,WAAW,WAAQzc,EAAK0nH,kBAAmB,KAF3C1nH,EAAKikH,aAIPjkH,EAAKzB,SAAS,CACZ4oH,0BAIJQ,gBAAkB,SAAC5kH,EAAE6kH,GACnB7kH,EAAE2D,iBACF1G,EAAKzB,SAAS,CACZ8oH,oBAAqBO,OAIzB3D,WAAa,WAEXjkH,EAAKynH,aAELznH,EAAKunH,mBAELvnH,EAAKxE,MAAMyoH,gBAGb4D,kBAAoB,SAAC9kH,EAAEikH,GACrBjkH,EAAE2D,iBACF1G,EAAKzB,SAAS,CACZyoH,mBAGmB,iBAAjBA,IAEFhnH,EAAKnC,cAAciwB,yBAAyB,CAC1CC,cAAe,UACfC,YAAa,cACbC,WAAY+4F,IAGdhnH,EAAKnC,cAAc0f,gBAAgB,iBAAiBypG,OAIxDc,qBAAuB,WAErB,OADqB9nH,EAAKnC,cAAcujE,aAAaphE,EAAKrC,MAAM0yE,gBAE9DrwE,EAAKowE,kBAAiB,GACtBpwE,EAAKnC,cAAcuyE,iBAAiBpwE,EAAKrC,MAAM0yE,eAC/CrwE,EAAK4lH,aAAa,SAAS,UAC3BnpG,WAAW,WAAQzc,EAAKikH,cAAe,MAChC,GAEAjkH,EAAKzB,SAAS,CACnB6oH,oBAAmB,OAKzBW,oBAAsB,SAAChlH,GACrB,IACMstE,EAAgBttE,EAAEgH,OAAOzN,MACzB65C,EAAYn2C,EAAKnC,cAAcujE,aAAaiP,GAClDrwE,EAAKzB,SAAS,CACZ43C,YACAk6B,gBACA+2C,oBANyB,OAU7Bh3C,iBAAmB,SAAC82C,GAClBlnH,EAAKzB,SAAS,CACZ2oH,wBAIJc,mBAAqB,WAEnB,IAAMC,EACJrpH,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,KACED,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM7C,UAAW,SAAUF,SAAU,EAAGmF,GAAI,CAAC,EAAE,IAA/C,kCAAkFrC,EAAAjE,EAAAC,cAACstH,GAAA,EAAD,CAAYzoD,GAAG,oBAAoBhkE,MAAO,UAAWN,MAAO,CAACM,MAAMuE,EAAKxE,MAAMoG,MAAMC,OAAOif,QAAQ+e,eAAe,aAAc91B,OAAQ,SAAUC,IAAI,gCAAtJ,sBAIhFm+G,EAA8C,QAA9BnoH,EAAKrC,MAAMqpH,eAC3BoB,EAAsD,WAA9BpoH,EAAKrC,MAAMqpH,eAGzC,MAFuD,iBAA9BhnH,EAAKrC,MAAMqpH,eAIhCpoH,EAAAjE,EAAAC,cAACgE,EAAAjE,EAAMkpC,SAAP,KACEjlC,EAAAjE,EAAAC,cAACmpH,GAAA,EAAUuB,OAAX,CAAkBxlG,MAAO,qBAAsBylG,SAAU,4DACzD3mH,EAAAjE,EAAAC,cAACmpH,GAAA,EAAUG,KAAX,KACEtlH,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE5D,cAAe,CAAC,SAAU,OAC1BK,eAAgB,gBAChBqH,GAAI,CAAC,EAAG,IAER/D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAKxD,KAAM,MAAON,MAAO,EAAG0G,GAAI,CAAC,EAAG,GAAI3G,GAAI,CAAC,EAAG,GAAIY,GAAI,GACtDkD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMvD,eAAgB,SAAUR,GAAI,GAClC8D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE0C,KAAK,SACL9F,MAAM,UACNgD,KAAK,SAGTG,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAS/C,SAAU,EAAGE,UAAW,UAAjC,4BACA4C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM/C,SAAU,EAAGE,UAAW,UAA9B,4IAMF4C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAKxD,KAAM,MAAON,MAAO,EAAG0G,GAAI,CAAC,EAAG,GAAI3G,GAAI,CAAC,EAAG,GAAIY,GAAI,GACtDkD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMvD,eAAgB,SAAUR,GAAI,GAClC8D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE0C,KAAK,uBACL9F,MAAM,UACNgD,KAAK,SAGTG,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAS/C,SAAU,EAAGE,UAAW,UAAjC,4BACA4C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM/C,SAAU,EAAGhB,GAAI,EAAGkB,UAAW,UAArC,kJAG2B4C,EAAAjE,EAAAC,cAAA,WACzBgE,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEihB,MAAM,wCACN/jB,WAAY,IACZN,MAAO,OACPO,UAAW,SACXqH,WAAY,OACZ2b,KAAK,IACLhiB,QAASgD,EAAKsnH,kBAPhB,gCAaJ1oH,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAKxD,KAAM,MAAON,MAAO,EAAG0G,GAAI,CAAC,EAAG,GAAI3G,GAAI,CAAC,EAAG,IAC9C8D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMvD,eAAgB,SAAUR,GAAI,GAClC8D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE0C,KAAK,SACL9F,MAAM,UACNgD,KAAK,SAGTG,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAS/C,SAAU,EAAGE,UAAW,UAAjC,gCACA4C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM/C,SAAU,EAAGE,UAAW,UAA9B,6GAWRgE,EAAKrC,MAAMupH,iBAEXtoH,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,KACED,EAAAjE,EAAAC,cAACmpH,GAAA,EAAUuB,OAAX,CACExlG,MAAO,qBACPrQ,KAAM,uBACN81G,SAAU,+BAGZ3mH,EAAAjE,EAAAC,cAACmpH,GAAA,EAAUG,KAAX,KACEtlH,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPwE,SAAU,CAAC,EAAE,QACbtE,cAAe,SACfK,eAAgB,UAEhBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPmB,MAAO,oBAEP0C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEq0B,UAAQ,EACRn4B,MAAO,EACPsP,KAAM,OACNvL,UAAWC,KAAOonB,MAClB5X,YAAa,aACb1S,gBAAiB,SACjB69C,QAAS,sBACTp9C,MAAO0D,EAAKrC,MAAM0yE,cAClBvtE,SAAW,SAAAC,GAAC,OAAI/C,EAAK+nH,oBAAoBhlH,IACzCswB,YAAa,qCAIfrzB,EAAKrC,MAAMypH,oBACTxoH,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/D,GAAI,EACJgB,SAAU,EACVL,MAAO,MACPM,WAAY,EACZC,UAAW,UALb,mCAWJ4C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEqC,GAAI,CAAC,EAAE,GACPlC,GAAI,OACJjD,WAAY,EACZ0C,KAAM,SACN3C,SAAU,CAAC,EAAE,GACbF,aAAc,EACdysH,cAAe,UACfvpH,UAAW,CAACC,KAAOgnB,gBACnB/oB,QAAU,SAAA+F,GAAC,OAAI/C,EAAK8nH,yBATtB,YAcFlpH,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE2J,GAAI,EACJxN,WAAY,SACZM,eAAgB,UAEhBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEwE,WAAY,OACZrH,UAAW,SACXgB,QAAU,SAAA+F,GAAC,OAAI/C,EAAKowE,kBAAiB,KAHvC,0BAQA63C,IAMNG,EAEAxpH,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,KACED,EAAAjE,EAAAC,cAACmpH,GAAA,EAAUuB,OAAX,CAAkBxlG,MAAO,qBAAsBylG,SAAU,6BAA8B91G,KAAM,yBAC7F7Q,EAAAjE,EAAAC,cAACmpH,GAAA,EAAUG,KAAX,KACEtlH,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM9D,MAAO,EAAGmG,GAAI,CAAC,EAAE,GAAIjG,cAAe,SAAUK,eAAgB,UAClEsD,EAAAjE,EAAAC,cAAC6qH,GAAD,CACE1qH,MAAO,GACPuG,SAAUtB,EAAKxE,MAAM8F,SACrBskH,aAAc5lH,EAAK4lH,aACnBE,mBAAoB9lH,EAAKikH,WACzBxlH,KAAMuB,EAAKxE,MAAM8F,SAAW,SAAW,QACvC8uE,iBAAkBpwE,EAAKowE,iBAAiB1nE,KAAtBhM,OAAA4rH,GAAA,EAAA5rH,QAAA4rH,GAAA,EAAA5rH,CAAAsD,QAGtBpB,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM2J,GAAI,EAAGxN,WAAY,SAAUM,eAAgB,UACjDsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM7C,UAAW,SAAUqH,WAAY,OAAQrG,QAAU,SAAA+F,GAAC,OAAI/C,EAAK6nH,kBAAkB9kH,EAAE,SAAvF,0BAEAklH,IAMNE,EAEAvpH,EAAAjE,EAAAC,cAACgE,EAAAjE,EAAMkpC,SAAP,KACEjlC,EAAAjE,EAAAC,cAACmpH,GAAA,EAAUuB,OAAX,CAAkBxlG,MAAO,0CAA4CrQ,KAAM,yBAC3E7Q,EAAAjE,EAAAC,cAACmpH,GAAA,EAAUG,KAAX,KAEKlkH,EAAKrC,MAAM0pH,oBAoCVzoH,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,KACED,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM/C,SAAU,EAAGE,UAAW,SAAUD,WAAY,EAAGyuB,WAAY,KAAnE,4BAC4BxqB,EAAKrC,MAAM0pH,oBADvC,uBAGAzoH,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE4C,GAAI,EACJnG,eAAgB,SAChBN,WAAY,SACZgB,UAAW,UACX4C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAQJ,KAAK,SALf,IAKyBG,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMoE,GAAI,EAAGxH,MAAO,aAApB,cAA6CuE,EAAKrC,MAAMwpH,mBAAxD,iBA5C3BvoH,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM9D,MAAO,EAAGmG,GAAI,CAAC,EAAE,GAAIjG,cAAe,SAAUK,eAAgB,UAClEsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAK/D,GAAI,GACP8D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM/C,SAAU,CAAC,EAAE,GAAIE,UAAW,SAAUD,WAAY,EAAGyuB,WAAY,KAAvE,yCAIF5rB,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM/D,GAAI,EAAGG,cAAe,CAAC,SAAS,OAAQD,WAAY,SAAUM,eAAgB,UAClFsD,EAAAjE,EAAAC,cAAC4+B,GAAA,EAAD,CACE/8B,YAAa,CACXktB,OAAO,GAET8P,QAAS,aACTC,SAAU,mBACVp4B,SAAUtB,EAAKxE,MAAM8F,SACrB6zC,WAAY,oBACZl4C,YAAc,SAAA8F,GAAC,OAAI/C,EAAK4lH,aAAa,SAAS,WAC9C17F,WAAalqB,EAAKxE,MAAM8F,SAAW,CAACvG,MAAM,OAAOY,OAAO,QAAU,CAACb,GAAG,MAAMC,MAAM,OAAOY,OAAO,UAElGiD,EAAAjE,EAAAC,cAAC4+B,GAAA,EAAD,CACE/8B,YAAa,CACXktB,OAAO,GAET8P,QAAS,mBACTn4B,SAAUtB,EAAKxE,MAAM8F,SACrBo4B,SAAU,oBACVyb,WAAY,uBACZl4C,YAAc,SAAA8F,GAAC,OAAI/C,EAAK4lH,aAAa,YAAY,cACjD17F,WAAalqB,EAAKxE,MAAM8F,SAAW,CAACvG,MAAM,OAAOY,OAAO,QAAU,CAACb,GAAG,MAAMC,MAAM,OAAOY,OAAO,WAGpGiD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM7D,WAAY,SAAUM,eAAgB,UAC1CsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM7C,UAAW,SAAUqH,WAAY,OAAQrG,QAAU,SAAA+F,GAAC,OAAI/C,EAAK6nH,kBAAkB9kH,EAAE,YAAvF,6BAkBNklH,IAORrpH,EAAAjE,EAAAC,cAACgE,EAAAjE,EAAMkpC,SAAP,KACEjlC,EAAAjE,EAAAC,cAACmpH,GAAA,EAAUuB,OAAX,CAAkBxlG,MAAO,kBAAmBrQ,KAAM,yBAClD7Q,EAAAjE,EAAAC,cAACmpH,GAAA,EAAUG,KAAX,KAEItlH,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPmG,GAAI,CAAC,EAAE,GACPjG,cAAe,SACfK,eAAgB,UAEhBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAK/D,GAAI,GACP8D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9C,WAAY,EACZD,SAAU,CAAC,EAAE,GACb0uB,WAAY,IACZxuB,UAAW,UAJb,wCASF4C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/D,GAAI,CAAC,EAAE,GACPE,WAAY,SACZM,eAAgB,SAChBL,cAAe,CAAC,SAAS,QAEzB2D,EAAAjE,EAAAC,cAAC4+B,GAAA,EAAD,CACE/8B,YAAa,CACXktB,OAAO,GAET8P,QAAO,kBACPn4B,SAAUtB,EAAKxE,MAAM8F,SACrB6zC,WAAY,wBACZzb,SAAU,6BACVz8B,YAAc,SAAA8F,GAAC,OAAI/C,EAAK6nH,kBAAkB9kH,EAAE,WAC5CmnB,WAAYlqB,EAAKxE,MAAM8F,SAAW,CAACvG,MAAM,OAAOY,OAAO,QAAU,CAACZ,MAAM,OAAOY,OAAO,OAAO4sH,aAAa,SAE5G3pH,EAAAjE,EAAAC,cAAC4+B,GAAA,EAAD,CACE/8B,YAAa,CACXktB,OAAO,GAET8P,QAAO,aACPn4B,SAAUtB,EAAKxE,MAAM8F,SACrB6zC,WAAY,oBACZzb,SAAU,wBACVz8B,YAAc,SAAA8F,GAAC,OAAI/C,EAAK6nH,kBAAkB9kH,EAAE,QAC5CmnB,WAAYlqB,EAAKxE,MAAM8F,SAAW,CAACvG,MAAM,OAAOY,OAAO,QAAU,CAACZ,MAAM,OAAOY,OAAO,OAAO4sH,aAAa,UAG9G3pH,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE7D,WAAY,SACZM,eAAgB,UAEhBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEpD,MAAO,UACP4H,WAAY,UACZrG,QAAU,SAAA+F,GAAC,OAAI/C,EAAKowE,kBAAiB,KAHvC,4BAUJ63C,OAMVO,aAAe,WAEb,OAAIxoH,EAAKrC,MAAM0pH,qBAAwBrnH,EAAKrC,MAAMqpH,gBAAkBhnH,EAAKrC,MAAMupH,iBACtE,KAIPtoH,EAAAjE,EAAAC,cAACmpH,GAAA,EAAUpG,OAAX,KACK39G,EAAKrC,MAAMqpH,iBAcNhnH,EAAKrC,MAAMupH,kBAAgD,iBAA5BlnH,EAAKrC,MAAMqpH,iBAC9CpoH,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEC,UAAW,CAACC,KAAOgnB,eAAehnB,KAAOinB,OACzChpB,QAASgD,EAAKynH,WACdhpH,KAAM,SACN7C,aAAc,EACdysH,cAAe,OACftsH,WAAY,EACZD,SAAU,CAAC,EAAE,GACbkD,GAAI,OACJkC,GAAI,CAAC,EAAE,IATT,QAdAtC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEC,UAAW,CAACC,KAAOgnB,eAAehnB,KAAOinB,OACzChpB,QAAU,SAAA+F,GAAC,OAAI/C,EAAK6nH,kBAAkB9kH,EAAE,iBACxCtE,KAAM,SACN7C,aAAc,EACdysH,cAAe,OACftsH,WAAY,EACZD,SAAU,CAAC,EAAE,GACbkD,GAAI,OACJkC,GAAI,CAAC,EAAE,IATT,kGA9dJ3F,KAAKsC,cACPtC,KAAKsC,cAAcC,SAASvC,KAAKC,OAEjCD,KAAKsC,cAAgB,IAAIE,KAAcxC,KAAKC,wCA6f9C,OACEoD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAOilH,OAAQvoH,KAAKC,MAAMsoH,QACxBllH,EAAAjE,EAAAC,cAACmpH,GAAA,EAAD,CAAWC,UAAWzoH,KAAK0oH,aACE,IAA1B1oH,KAAKoC,MAAMopH,WACVnoH,EAAAjE,EAAAC,cAACgE,EAAAjE,EAAMkpC,SAAP,KACGtoC,KAAKysH,qBACLzsH,KAAKitH,gBAGR5pH,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,KACED,EAAAjE,EAAAC,cAAC6tH,GAAD,MACCltH,KAAKitH,yBA5hBUnF,IAAM9mH,WCkCrBmsH,8MA9CbhF,cAAgB,WACd,OACE9kH,EAAAjE,EAAAC,cAACgE,EAAAjE,EAAMkpC,SAAP,KACEjlC,EAAAjE,EAAAC,cAACiE,EAAA,EAAQ4+G,GAAT,CAAY96G,GAAI,GAAhB,4BAEA/D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM8D,GAAI,GAAV,kFAEqB,IAClB2hH,GAAYC,cAAZ,2CAHH,KASA3lH,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAKgnB,GAAI,UAAWlb,EAAG,EAAGjM,QAAS,CAAC,OAAQ,UAC1CE,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM7D,WAAY,UAChB4D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAKiC,SAAU,WAAY/F,MAAO,OAChC6D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,KACED,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAQJ,KAAM,UAGlBG,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,KACED,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM9C,WAAY,GAAlB,0CAGA6C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM9C,WAAY,GAAlB,mHASV,OACE6C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAOilH,OAAQvoH,KAAKC,MAAMsoH,QACxBllH,EAAAjE,EAAAC,cAACmpH,GAAA,EAAD,CAAWC,UAAWzoH,KAAKC,MAAMyoH,YAC/BrlH,EAAAjE,EAAAC,cAACmpH,GAAA,EAAUG,KAAX,KACG3oH,KAAKmoH,0BAvCmBL,IAAM9mH,WCmC5BosH,8MA1CbC,iBAAmB,SAAA/rF,GACjB78B,EAAKxE,MAAMyoH,aACXjkH,EAAKxE,MAAMqtH,iBAGbnF,cAAgB,WACd,OACE9kH,EAAAjE,EAAAC,cAACgE,EAAAjE,EAAMkpC,SAAP,KACEjlC,EAAAjE,EAAAC,cAACiE,EAAA,EAAQ4+G,GAAT,CAAY96G,GAAI,GAAhB,sDAIA/D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM8D,GAAI,GAAV,8EAKA/D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM5D,cAAe,CAAC,SAAU,OAAQK,eAAgB,WAAYmG,GAAI,GACtE7C,EAAAjE,EAAAC,cAACiE,EAAA,EAAOwlH,QAAR,CAAgBrnH,QAASgD,EAAKxE,MAAMyoH,WAAYvoH,GAAI,CAAC,EAAG,GAAIZ,GAAI,CAAC,EAAG,IAApE,qBAGA8D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAQ7B,QAASgD,EAAK4oH,kBAAtB,wFASN,OACEhqH,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAOilH,OAAQvoH,KAAKC,MAAMsoH,QACxBllH,EAAAjE,EAAAC,cAACmpH,GAAA,EAAD,CAAWC,UAAWzoH,KAAKC,MAAMyoH,YAC/BrlH,EAAAjE,EAAAC,cAACmpH,GAAA,EAAUG,KAAX,KACG3oH,KAAKmoH,0BAnCwBL,IAAM9mH,WCiRjCusH,8MApQbnrH,MAAQ,CACNorH,eAAe,EACfhC,YAAY,KAGdiC,gBAAkB,WAChBhpH,EAAKzB,SAAS,CACZwqH,eAAgB/oH,EAAKrC,MAAMorH,mBAI/BzB,iBAAmB,SAAAvkH,GACjBs0B,QAAQC,IAAI,aAAct3B,EAAKrC,MAAMopH,YACrChkH,EAAE2D,iBAEF1G,EAAKzB,SAAS,CACZwoH,YAAa/mH,EAAKrC,MAAMopH,sFAK1B,OACEnoH,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAOilH,OAAQvoH,KAAKC,MAAMsoH,QACxBllH,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE3D,GAAI,CAAC,EAAG,GACR4tC,GAAI,CAAC,EAAG,GACRtgC,GAAI,CAAC,OAAQ,GACblG,GAAI,CAAC,OAAQ,GACbhD,SAAU,QACVkC,SAAU,SACVV,SAAU,YAEVlC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAKiC,SAAU,YACblC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEvD,eAAgB,WAChBI,GAAI,CAAC,GAAI,GACT+F,GAAI,CAAC,SAAU,GACfX,SAAU,WACVF,IAAK,IACLyK,KAAM,IACNqD,MAAO,IACPmX,GAAI,QACJhlB,OAAQ,KAERjC,EAAAjE,EAAAC,cAACiE,EAAA,EAAOmE,KAAR,CACEohH,UAAQ,EACR30G,KAAM,QACNhU,MAAO,YACPuB,QAASzB,KAAKC,MAAMyoH,gBAKI,IAA7B1oH,KAAKoC,MAAMorH,gBACc,IAA1BxtH,KAAKoC,MAAMopH,WACTnoH,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,KACED,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE1D,MAAO,CAAEqG,SAAU,QACnBhC,UAAW,uBAEXZ,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAKqC,GAAI,CAAC,EAAG,GAAIsH,GAAI,CAAC,EAAG,GAAIlG,GAAI,CAAC,EAAG,IAGnC1D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAKoqH,aAAa,SAAShoH,GAAI,GAC7BrC,EAAAjE,EAAAC,cAACiE,EAAA,EAAQ4+G,GAAT,+CAIF7+G,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM/D,GAAI,GAAV,+KAG8D,IAC5D8D,EAAAjE,EAAAC,cAAA,kDAAkD,IAClDgE,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEihB,MAAM,wCACNopG,GAAI,IACJlqG,KAAK,IACLhiB,QAASzB,KAAK+rH,kBAJhB,+BAUF1oH,EAAAjE,EAAAC,cAACiE,EAAA,EAAQ+K,GAAT,yBAEAhL,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE7D,WAAY,UACZgE,GAAI,EACJlE,GAAI,CAAC,EAAG,GACR2G,GAAI,CAAC,EAAG,GACRo4B,SAAU,CAAC,OAAQ,YAEnBj7B,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAK8L,EAAG,CAAC,EAAG,GAAI5P,MAAO,CAAC,EAAG,KACzB6D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE5D,cAAe,SACfK,eAAgB,gBAChBK,OAAQ,QAERiD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,KACED,EAAAjE,EAAAC,cAACiE,EAAA,EAAQsqH,GAAT,iCACAvqH,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM/C,SAAS,KAAf,oKAQF8C,EAAAjE,EAAAC,cAACiE,EAAA,EAAOwlH,QAAR,CAAgB1hH,GAAI,GAClB/D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM7D,WAAY,UAChB4D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM0C,KAAK,YAAY7F,GAAI,IAD7B,qBAONkD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAK8L,EAAG,CAAC,EAAG,GAAI5P,MAAO,CAAC,EAAG,KACzB6D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE5D,cAAe,SACfK,eAAgB,gBAChBK,OAAQ,QAERiD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,KACED,EAAAjE,EAAAC,cAACiE,EAAA,EAAQsqH,GAAT,sCAGAvqH,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM/C,SAAS,KAAf,gIAMF8C,EAAAjE,EAAAC,cAACiE,EAAA,EAAOwlH,QAAR,CAAgB1hH,GAAI,EAAG3F,QAASzB,KAAKytH,iBACnCpqH,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM7D,WAAY,UAChB4D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM0C,KAAK,oBAAoB7F,GAAI,IADrC,8BAWZkD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEiC,SAAU,WACV6N,OAAQ,IACRtD,KAAM,IACNqD,MAAO,IACPxN,GAAI,CAAC,EAAG,GACRsH,GAAI,EACJlG,GAAI,EACJujB,GAAI,SAGJjnB,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM6C,UAAW,EAAG6M,YAAa,SACjC3P,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM2J,GAAI,EAAGlN,eAAgB,CAAC,SAAU,aACtCsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAQ7B,QAASzB,KAAKC,MAAMyoH,WAAYlpH,MAAO,CAAC,EAAG,SAAnD,mBAOJ,KAEHQ,KAAKoC,MAAMorH,cACVnqH,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAK/D,GAAI,GACP8D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE1D,MAAO,CAAEqG,SAAU,QACnBhC,UAAW,uBAEXZ,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAKqC,GAAI,CAAC,EAAG,GAAIsH,GAAI,CAAC,EAAG,GAAIlG,GAAI,CAAC,EAAG,IAEnC1D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM8D,GAAI,EAAGrH,eAAgB,UAC3BsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEJ,KAAM,IACNnC,MACEf,KAAKC,MAAM2L,QAAU5L,KAAKC,MAAM2L,QAAU,gBAKhDvI,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAY8D,GAAI,EAAGqM,QAASzT,KAAKC,MAAM2L,UACvCvI,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM/D,GAAI,MAKd8D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEiC,SAAU,WACV6N,OAAQ,IACRtD,KAAM,IACNqD,MAAO,IACPxN,GAAI,CAAC,EAAG,GACRsH,GAAI,EACJlG,GAAI,EACJujB,GAAI,SAGJjnB,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM6C,UAAW,EAAG6M,YAAa,SACjC3P,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM4C,GAAI,EAAGnG,eAAgB,CAAC,SAAU,aACtCsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAOwlH,QAAR,CACEtpH,MAAO,CAAC,EAAG,QACXiC,QAASzB,KAAKytH,iBAFhB,cAUJ,KAEHztH,KAAKoC,MAAMopH,WACVnoH,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAK/D,GAAI,GACP8D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE1D,MAAO,CAAEqG,SAAU,QACnBhC,UAAW,uBAEXZ,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAKqC,GAAI,CAAC,EAAG,GAAIsH,GAAI,CAAC,EAAG,GAAIlG,GAAI,CAAC,EAAG,IAEnC1D,EAAAjE,EAAAC,cAAC6tH,GAAD,QAIJ7pH,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEiC,SAAU,WACV6N,OAAQ,IACRtD,KAAM,IACNqD,MAAO,IACPxN,GAAI,CAAC,EAAG,GACRsH,GAAI,EACJlG,GAAI,EACJujB,GAAI,SAGJjnB,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE2J,GAAI,EACJlN,eAAgB,CAAC,SAAU,YAC3BoG,UAAW,EACX6M,YAAa,QAEb3P,EAAAjE,EAAAC,cAACiE,EAAA,EAAOwlH,QAAR,CACEtpH,MAAO,CAAC,EAAG,QACXiC,QAASzB,KAAK+rH,kBAFhB,cAUJ,cA9PcjE,IAAM9mH,WCoDnB6sH,oLAtDX,OACExqH,EAAAjE,EAAAC,cAAA,WACEgE,EAAAjE,EAAAC,cAACyuH,GAAD,CACEpF,WAAY1oH,KAAKC,MAAMyiD,OAAO/N,QAAQo5E,wBACtCxF,OAAQvoH,KAAKC,MAAMyiD,OAAO3yC,KAAKi+G,yBAC/BrgH,YAAa3N,KAAKC,MAAM0N,cAG1BtK,EAAAjE,EAAAC,cAAC4uH,GAAD,CACEvF,WAAY1oH,KAAKC,MAAMyiD,OAAO/N,QAAQu5E,mBACtC3F,OAAQvoH,KAAKC,MAAMyiD,OAAO3yC,KAAKo+G,oBAC/BxgH,YAAa3N,KAAKC,MAAM0N,cAG1BtK,EAAAjE,EAAAC,cAAC+uH,GAAD,CACE1F,WAAY1oH,KAAKC,MAAMyiD,OAAO/N,QAAQ05E,uBACtC9F,OAAQvoH,KAAKC,MAAMyiD,OAAO3yC,KAAKu+G,wBAC/BziE,QAAS7rD,KAAKC,MAAM4rD,UAGtBxoD,EAAAjE,EAAAC,cAACkvH,GAADptH,OAAAC,OAAA,GACMpB,KAAKC,MADX,CAEE8F,SAAU/F,KAAKC,MAAM8F,SACrBskH,aAAcrqH,KAAKC,MAAMoqH,aACzB/yC,eAAgBt3E,KAAKC,MAAM4rD,QAAQ+Z,QACnC4oD,gBAAiBxuH,KAAKC,MAAMuuH,gBAC5B9F,WAAY1oH,KAAKC,MAAMyiD,OAAO/N,QAAQ85E,qBACtClG,OAASvoH,KAAKC,MAAMyiD,OAAO3yC,KAAK2+G,wBAA0B1uH,KAAKC,MAAM0uH,oBAGvEtrH,EAAAjE,EAAAC,cAACuvH,GAAD,CACElG,WAAY1oH,KAAKC,MAAMyiD,OAAO/N,QAAQk6E,4BACtCtG,OAAQvoH,KAAKC,MAAMyiD,OAAO3yC,KAAK++G,yBAC/Bx3C,eAAgBt3E,KAAKC,MAAM4rD,QAAQ+Z,UAErCviE,EAAAjE,EAAAC,cAAC0vH,GAAD,CACErG,WACE1oH,KAAKC,MAAMyiD,OAAO/N,QAAQq6E,iCAE5BzG,OAAQvoH,KAAKC,MAAMyiD,OAAO3yC,KAAKk/G,oBAC/B3B,YAAattH,KAAKC,MAAMqtH,cAG1BjqH,EAAAjE,EAAAC,cAAC6vH,GAAD,CACExG,WAAY1oH,KAAKC,MAAMyiD,OAAO/N,QAAQw6E,mBACtC5G,OAAQvoH,KAAKC,MAAMyiD,OAAO3yC,KAAKq/G,oBAC/B93C,eAAgBt3E,KAAKC,MAAM4rD,QAAQ+Z,QACnCh6D,QAAS5L,KAAKC,MAAM2L,kBAjDIk8G,IAAM9mH,iCC2EzBquH,8MA1Eb/sH,cAAgB,gFAEVtC,KAAKsC,cACPtC,KAAKsC,cAAcC,SAASvC,KAAKC,OAEjCD,KAAKsC,cAAgB,IAAIE,KAAcxC,KAAKC,oDAK9CD,KAAKyC,wDAILzC,KAAKyC,yDAILzC,KAAKyC,uFAGU+E,sEACfA,EAAE2D,iBAEGnL,KAAKC,MAAM2L,wCACR5L,KAAKC,MAAMkqH,QAAQmF,uBAAuB,CAAC,kBACjDtvH,KAAKC,MAAMoqH,aAAa,SAAS,aAEnCrqH,KAAKC,MAAMyiD,OAAO/N,QAAQ46E,gKAGnB,IAAAnqH,EAAApF,KAEDsqH,EAAiBtqH,KAAKsC,cAAcm2E,oBACpC+2C,EAAYlF,GAAmD,WAAjCA,EAAe/gH,eAAkF,kBAA3CvJ,KAAKC,MAAMyiD,OAAO3yC,KAAK0/G,iBAAgCzvH,KAAKC,MAAMyiD,OAAO3yC,KAAK0/G,gBAAgBlmH,cAAcK,SAAS,UAE/M,OACEvG,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAOilH,OAAQvoH,KAAKC,MAAMsoH,QACxBllH,EAAAjE,EAAAC,cAACmpH,GAAA,EAAD,CAAWC,UAAY,SAAAjhH,GAAC,OAAIpC,EAAKsjH,WAAWlhH,KAC1CnE,EAAAjE,EAAAC,cAACmpH,GAAA,EAAUuB,OAAX,CAAkBxlG,MAAQirG,EAAW,eAAH,mBAAyCt7G,KAAM,uBACjF7Q,EAAAjE,EAAAC,cAACmpH,GAAA,EAAUG,KAAX,KACEtlH,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM8D,GAAI,EAAG5H,MAAO,EAAGE,cAAe,SAAU+D,GAAI,QAClDJ,EAAAjE,EAAAC,cAACiE,EAAA,EAAK8L,EAAN,CAAQlP,MAAO,YAAaO,UAAW,UAAvC,iEACkE+uH,EAAW,SAAW,UADxF,IACoGnsH,EAAAjE,EAAAC,cAAA,WAClGgE,EAAAjE,EAAAC,cAACiE,EAAA,EAAK+f,KAAN,CAAWnjB,MAAO,MAAOM,WAAY,GAArC,IAA0CR,KAAKC,MAAMyiD,OAAO3yC,KAAK0/G,gBAAjE,KAA8FpsH,EAAAjE,EAAAC,cAAA,WAE5FmwH,EACEnsH,EAAAjE,EAAAC,cAACiE,EAAA,EAAK+f,KAAN,sCACgChgB,EAAAjE,EAAAC,cAAA,2BADhC,QAC+DgE,EAAAjE,EAAAC,cAAA,0BAD/D,0BAC+GgE,EAAAjE,EAAAC,cAAA,+BAD/G,QACkJgE,EAAAjE,EAAAC,cAAA,iCADlJ,uCACsNgE,EAAAjE,EAAAC,cAAA,YAGpN,0DAIVgE,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM/D,GAAI,EAAGG,cAAe,SAAUD,WAAY,SAAUM,eAAgB,UAC1EsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE8D,GAAI,EACJ3D,GAAI,CAAC,EAAG,GACRpD,aAAc,EACdiB,UAAW,OACX4B,KAAMlD,KAAKC,MAAM8F,SAAW,QAAU,SACtCtE,QAAO,eAAAiU,EAAAvU,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAAG,SAAAkJ,EAAOvX,GAAP,OAAAqqB,EAAAzyB,EAAA6W,KAAA,SAAAiJ,GAAA,cAAAA,EAAA/I,KAAA+I,EAAA9I,MAAA,cAAA8I,EAAA9I,KAAA,EAAqBhR,EAAKsjH,WAAWlhH,GAArC,wBAAA0X,EAAAtI,SAAAmI,EAAA/e,SAAH,gBAAAwf,GAAA,OAAA9J,EAAAoB,MAAA9W,KAAA8E,YAAA,IANT,qBA3DqBgjH,IAAM9mH,WC2E1B0uH,8MAvEbptH,cAAgB,gFAEVtC,KAAKsC,cACPtC,KAAKsC,cAAcC,SAASvC,KAAKC,OAEjCD,KAAKsC,cAAgB,IAAIE,KAAcxC,KAAKC,oDAK9CD,KAAKyC,wDAILzC,KAAKyC,yDAILzC,KAAKyC,uFAGU+E,mEACfA,EAAE2D,iBACFnL,KAAKC,MAAMyiD,OAAO/N,QAAQg7E,iKAGnB,IAAAvqH,EAAApF,KAED4vH,EAAmE,kBAA5C5vH,KAAKC,MAAMyiD,OAAO3yC,KAAK8/G,kBAAiC7vH,KAAKC,MAAMyiD,OAAO3yC,KAAK8/G,iBAAiBtmH,cAAcK,SAAS,UAC9IkmH,EAAmE,kBAA5C9vH,KAAKC,MAAMyiD,OAAO3yC,KAAK8/G,kBAAiC7vH,KAAKC,MAAMyiD,OAAO3yC,KAAK8/G,iBAAiBtmH,cAAcK,SAAS,8BAEpJ,OACEvG,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAOilH,OAAQvoH,KAAKC,MAAMsoH,QACxBllH,EAAAjE,EAAAC,cAACmpH,GAAA,EAAD,CAAWC,UAAY,SAAAjhH,GAAC,OAAIpC,EAAKsjH,WAAWlhH,KAC1CnE,EAAAjE,EAAAC,cAACmpH,GAAA,EAAUuB,OAAX,CAAkBxlG,MAAQ,oBAAsBrQ,KAAM,uBACtD7Q,EAAAjE,EAAAC,cAACmpH,GAAA,EAAUG,KAAX,KACEtlH,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM8D,GAAI,EAAG5H,MAAO,EAAGE,cAAe,SAAU+D,GAAI,QAClDJ,EAAAjE,EAAAC,cAACiE,EAAA,EAAK8L,EAAN,CAAQlP,MAAO,YAAaO,UAAW,UAAvC,kEACiE4C,EAAAjE,EAAAC,cAAA,WAC/DgE,EAAAjE,EAAAC,cAACiE,EAAA,EAAK+f,KAAN,CAAWnjB,MAAO,MAAOM,WAAY,GAArC,IAA0CR,KAAKC,MAAMyiD,OAAO3yC,KAAK8/G,iBAAjE,KAA+FxsH,EAAAjE,EAAAC,cAAA,WAE7FuwH,EACEvsH,EAAAjE,EAAAC,cAACiE,EAAA,EAAK+f,KAAN,CACE9iB,SAAU,GAEV8C,EAAAjE,EAAAC,cAAA,WAHF,iCAGsCgE,EAAAjE,EAAAC,cAAA,2BAHtC,QAGqEgE,EAAAjE,EAAAC,cAAA,0BAHrE,0BAGqHgE,EAAAjE,EAAAC,cAAA,+BAHrH,QAGwJgE,EAAAjE,EAAAC,cAAA,iCAHxJ,uCAG4NgE,EAAAjE,EAAAC,cAAA,WAH5N,sEAIqEgE,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM/C,SAAU,EAAGL,MAAO,OAAQ4H,WAAY,OAAQ0G,OAAQ,SAAUC,IAAK,+BAAgCgV,KAAM,iHAAnH,qBAJrE,KAMEqsG,EAAgB,8FAAgG,0DAI1HzsH,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM/D,GAAI,EAAGG,cAAe,SAAUD,WAAY,SAAUM,eAAgB,UAC1EsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE8D,GAAI,EACJ3D,GAAI,CAAC,EAAG,GACRpD,aAAc,EACdiB,UAAW,OACX4B,KAAMlD,KAAKC,MAAM8F,SAAW,QAAU,SACtCtE,QAAO,eAAAiU,EAAAvU,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAAG,SAAAkJ,EAAOvX,GAAP,OAAAqqB,EAAAzyB,EAAA6W,KAAA,SAAAiJ,GAAA,cAAAA,EAAA/I,KAAA+I,EAAA9I,MAAA,cAAA8I,EAAA9I,KAAA,EAAqBhR,EAAKsjH,WAAWlhH,GAArC,wBAAA0X,EAAAtI,SAAAmI,EAAA/e,SAAH,gBAAAwf,GAAA,OAAA9J,EAAAoB,MAAA9W,KAAA8E,YAAA,IANT,qBAxDsBgjH,IAAM9mH,WCG1CihE,EAAQ,MAAU7Z,SAClB,IAAM2nE,GAAajxE,mCAEbkxE,GAA2BlI,IAAMmI,cAAc,CACnD7wG,KAAM,GACNxT,QAAS,GACTuhD,SAAU,GACVU,SAAU,GACVlS,UAAW,GACXu0E,WAAY,GACZ7lH,YAAa,GACboB,aAAc,GACd0kH,aAAc,GACdC,eAAgB,GAChBC,SAAU,aACV1B,iBAAkB,GAClBrB,YAAa,aACbgD,kBAAmB,GACnBz3C,aAAc,aACd7nD,aAAc,aACdgzD,qBAAsB,GACtBusC,oBAAqB,GACrBC,eAAgB,aAChBhC,gBAAiB,aACjB3iE,QAAS,CACP+Z,QAAS,GACTjuC,SAAU,GACV84F,aAAc,aACdzI,iBAAkB,MAEpB0I,oBAAoB,EACpBh3D,iBAAkB,aAClBi3D,iBAAkB,aAClBl3D,kBAAmB,aACnB9wB,sBAAsB,EACtBioF,yBAA0B,GAC1BC,oBAAqB,aACrBC,qBAAsB,aACtBC,0BAA0B,EAC1BxrF,0BAA2B,aAC3Bmd,OAAQ,CACN3yC,KAAM,CACJ0/G,gBAAiB,GACjBL,oBAAqB,GACrBjB,oBAAqB,GACrBc,oBAAqB,GACrBP,sBAAuB,GACvBsC,uBAAwB,GACxB1C,wBAAyB,GACzBsC,yBAA0B,GAC1B9B,yBAA0B,GAC1Bd,yBAA0B,GAC1BiD,iCAAkC,IAEpCt8E,QAAS,CACPu8E,kBAAmB,aACnB/B,mBAAoB,aACpBgC,sBAAuB,aACvB9C,uBAAwB,aACxB+C,uBAAwB,aACxBrD,wBAAyB,aACzBsD,yBAA0B,aAC1B9B,0BAA2B,aAC3B+B,0BAA2B,aAC3B3B,2BAA4B,aAC5B4B,2BAA4B,aAC5B1C,4BAA6B,aAC7B2C,gCAAiC,aACjCC,gCAAiC,aACjCzC,iCAAkC,aAClC0C,iCAAkC,eAGtC/jH,YAAa,CACXoC,KAAM,CACJtE,aAAc,IAEhBkmH,KAAM,GACNh9E,QAAS,MAITi9E,GAAmB,KACnBC,IAA0B,EAExBC,8MAGJrhH,oBAAqB,IAGrBnO,cAAgB,OAkChB6S,uCAAoB,SAAAoJ,IAAA,OAAAsT,EAAAzyB,EAAA6W,KAAA,SAAAwI,GAAA,cAAAA,EAAAtI,KAAAsI,EAAArI,MAAA,OAClB3R,EAAKo0E,eAGLp0E,EAAK4rH,WAEL5rH,EAAKstH,oBAKLnkH,OAAOokH,gBAAkB,SAAC7+C,GACxB,IAAMxlE,EAAclJ,EAAKwtH,oBAGzB,OAFAtkH,EAAYwlE,OAASA,EACrB1uE,EAAKytH,eAAevkH,GACbA,GAGTC,OAAOu3E,kBAAoB,SAACx3E,EAAY9K,EAAKuB,EAAO2xB,GAWlD,OATApoB,EAAYvJ,OAASA,EACrBuJ,EAAYooB,OAASA,EACrBpoB,EAAYmB,KAAO,WACnBnB,EAAYylE,QAAU1oE,KAAKwwB,MAC3BvtB,EAAY8nB,gBAAkB5yB,EAI9B4B,EAAK0gF,kBAAkBx3E,GAChBA,GA7BS,wBAAA8Q,EAAA7H,SAAA2H,EAAAve,WAiCpB+xH,kBAAoB,WAElB,GADyBttH,EAAKxE,MAAMogD,WAAWS,OAAOojE,WACjC,CACnB,IAAMoG,EAAiB7lH,EAAKnC,cAAcm2E,oBACrBh0E,EAAKxE,MAAMogD,WAAWS,OAAOojE,cAAgBz/G,EAAKxE,MAAMogD,WAAWS,OAAOpgB,SAASiqF,KAGtGlmH,EAAKxE,MAAMoqH,aAAa,SAAS,UACL,WAAnBC,GACT7lH,EAAKxE,MAAMoqH,aAAa,SAAS,UAKvC4B,yDAAqB,SAAAltG,EAAO9f,EAAWC,GAAlB,IAAAizH,EAAAC,EAAAC,EAAAC,EAAAnI,EAAA,OAAAt4F,EAAAzyB,EAAA6W,KAAA,SAAAiJ,GAAA,cAAAA,EAAA/I,KAAA+I,EAAA9I,MAAA,UAEnB3R,EAAKhC,aAIqBgC,EAAKrC,MAAMmwH,kBAAoB9tH,EAAKxE,MAAMogD,WAAWS,OAAOojE,YAGpFz/G,EAAKzB,SAAS,CACZuvH,kBAAiB,GACjB,WACA9tH,EAAKstH,sBAIL9yH,EAAUm4B,gBAAkB3yB,EAAKxE,MAAMm3B,eAAiB3yB,EAAKxE,MAAMm3B,cACrE3yB,EAAK4rH,WACKpxH,EAAUkrH,UAAY1lH,EAAKxE,MAAMkqH,QACvC1lH,EAAKxE,MAAMkqH,QAAQpsG,iBAAiB2jE,OAASj9E,EAAKxE,MAAMkqH,QAAQpsG,MAAM+yB,QAAQ/rC,QAC1EotH,EAAe1tH,EAAKxE,MAAMkqH,QAAQpsG,MAAM+yB,QACxCshF,EAAoD,oCAAjBD,GAAuE,sBAAjBA,EAEtE,kBAArBP,IAAwCQ,GAE1C3tH,EAAKxE,MAAMoqH,aAAa,SAAS,MAIjCuH,GAAmB,MAETQ,EAGV3tH,EAAK4rH,WAFL5rH,EAAK4sH,yBAAyB,KAAKc,IAK5B1tH,EAAKxE,MAAMkqH,QAAQtI,QAA6C,kBAAnCp9G,EAAKxE,MAAMkqH,QAAQ/yF,eAA8D,kBAA3B3yB,EAAKxE,MAAMm3B,eACvG3yB,EAAK4rH,YAEI5rH,EAAKxE,MAAMkqH,QAAQ/yF,eAAiB3yB,EAAKxE,MAAMkqH,QAAQ/yF,gBAAkB3yB,EAAKxE,MAAMm3B,eAAkBn4B,EAAU61E,gBAAkBrwE,EAAKxE,MAAM60E,gBACxJrwE,EAAK4rH,WAGsBpxH,EAAU61E,gBAAkBrwE,EAAKxE,MAAM60E,eAElErwE,EAAK6oH,cAGD+E,EAAepzH,EAAUmL,gBAAkB3F,EAAKxE,MAAMmK,cAEtDkoH,EAA6BrzH,EAAU2pC,qBAAuBnkC,EAAKxE,MAAM2oC,qBAAuBr9B,KAAKC,UAAUrK,OAAOqF,KAAKvH,EAAU2pC,wBAA0Br9B,KAAKC,UAAUrK,OAAOqF,KAAK/B,EAAKxE,MAAM2oC,sBAGvMypF,GACF5tH,EAAKzB,SAAS,CACZ4V,cAAe,OAKf3Z,EAAU8xH,2BAA6BtsH,EAAKxE,MAAM8wH,0BACpDtsH,EAAKzB,SAAS,CACZ+tH,yBAAyBtsH,EAAKxE,MAAM8wH,2BAIpCpvG,gBACIwoG,EAAU5+G,KAAKsW,MAAMF,aAAaC,QAAQ,cAC/Bnd,EAAKxE,MAAMkqH,QAAQtI,SAAWsI,EAAQtI,QAAUp9G,EAAKxE,MAAMkqH,QAAQ/yF,gBAAkB+yF,EAAQ/yF,eAC5G3yB,EAAKnC,cAAc0f,gBAAgB,UAAUzW,KAAKC,UAAU,CAACq2G,OAAOp9G,EAAKxE,MAAMkqH,QAAQtI,OAAOzqF,cAAc3yB,EAAKxE,MAAMkqH,QAAQ/yF,mBAI/Hi7F,IAAgBC,EA1ED,CAAApzG,EAAA9I,KAAA,gBAAA8I,EAAA9I,KAAA,GA2EX3R,EAAKosH,sBA3EM,QA8EItlH,KAAKC,UAAUtM,EAAU2sD,WAAatgD,KAAKC,UAAU/G,EAAKrC,MAAMypD,UAGrFpnD,EAAKzB,SAAS,CACZ24C,UAAU,GACVhT,sBAAqB,GACpB,WACDlkC,EAAK4rH,WACgC,oBAA1B5rH,EAAKxE,MAAMuyH,YACpB/tH,EAAKxE,MAAMuyH,WAAW/tH,EAAKrC,MAAMypD,WAvFpB,yBAAA3sC,EAAAtI,SAAAmI,EAAA/e,mEA8FrBqwH,8BAAW,SAAAr4G,IAAA,IAAAof,EAAAq7F,EAAAtI,EAAAp8D,EAAAmiE,EAAA9wG,EAAAszG,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA3wC,EAAAkoC,EAAA0I,EAAA7lE,EAAAkZ,EAAAvhE,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,cAAOghB,EAAPivC,EAAAthE,OAAA,QAAAC,IAAAqhE,EAAA,GAAAA,EAAA,GAAqB,KAArBpuD,EAAA7B,KAAA,EAGsB68G,OAHtB,YAGHR,EAHGx6G,EAAAE,OAIiBvK,OAAOuuD,UAAYvuD,OAAOuuD,WAAas2D,IAC/D7kH,OAAOuuD,SAAWs2D,GAGdtI,EAAU1lH,EAAKxE,MAAMkqH,QACrBp8D,EAAYtpD,EAAKrC,MAAMypD,QAAQ+Z,QAAQ54D,IAAMvI,EAAKrC,MAAMypD,QAAQl0B,SAAS3qB,GATtE,CAAAiL,EAAA7B,KAAA,eAAA6B,EAAAwH,OAAA,UAYA,GAZA,UAiBHywG,EAAa,IAAIgD,IAAK,IAAIA,IAAKzmE,UAAU0mE,aAAav/G,IAAci4C,QAAQY,UAAUC,OAAOqB,GAAWgiE,KAE1G3wG,EAAO+qG,EAAQiJ,QAGdxlH,OAAOouD,oBAAsBmuD,EAAQ/yF,gBAAkBxpB,OAAOouD,mBAAmB5kC,gBACpFxpB,OAAOouD,mBAAqBmuD,GAI1B/yF,EACFw6F,GAAmB,KAEnBx6F,EAAgB3yB,EAAKxE,MAAMm3B,cAMzB+yF,GAA6B,WAAlB/yF,GAA8BA,IAAkB+yF,EAAQ/yF,gBACjEhY,GAAgD,oBAAjCA,EAAK0mD,gBAAgBg+C,QACtC1kG,EAAK0mD,gBAAgBg+C,UACZqG,EAAQjuD,WAAkD,oBAA9BiuD,EAAQjuD,UAAU4nD,SACvDqG,EAAQjuD,UAAU4nD,UAEpB1kG,EAAO,KACPwyG,GAAmB,MAGfc,EAAwBvI,EAAQ/yF,eAAiB+yF,EAAQ/yF,gBAAkBA,GAAqC,WAAlBA,GAA8BA,IAAkBw6F,GAI/IzH,EAAQtI,SAAU6Q,EAlDd,CAAAz6G,EAAA7B,KAAA,aAoDHghB,IAAiBs7F,EApDd,CAAAz6G,EAAA7B,KAAA,YAsDiB,WAAlBghB,GAA+B3yB,EAAKrC,MAAMmwH,iBAtDzC,CAAAt6G,EAAA7B,KAAA,gBAAA6B,EAAAwH,OAAA,UAuDI,GAvDJ,eA2DLmyG,GAAmBx6F,EA3Ddnf,EAAA7B,KAAA,GA4DC+zG,EAAQE,aAAajzF,GA5DtB,eAAAnf,EAAAwH,OAAA,SA8DEL,GA9DF,WAyHLuzG,EAAW,KACXC,EAAe,KAEdxzG,EAYHwzG,EAAexzG,EAAK0mD,gBAXhBl4D,OAAOuuD,UACT13D,EAAKnC,cAAc6c,UAAU,+BAC7ByzG,EAAehlH,OAAOuuD,UACbvuD,OAAOwR,MAChB3a,EAAKnC,cAAc6c,UAAU,uCAC7ByzG,EAAehlH,OAAOwR,OAEtB3a,EAAKnC,cAAc6c,UAAU,yDAC7BwzG,EAAW/+G,IAAci4C,QAAQY,UAAUC,OAAOqB,GAAWgiE,IAM7D8C,GAAgB,EAEdz7F,GAAmC,WAAlBA,IAA+Bw7F,GAA+C,oBAAxBA,EAAajP,OA7IjF,CAAA1rG,EAAA7B,KAAA,gBAAA6B,EAAA9B,KAAA,GAAA8B,EAAA7B,KAAA,GA+ICw8G,EAAajP,SA/Id,QAAA1rG,EAAA7B,KAAA,iBAAA6B,EAAA9B,KAAA,GAAA8B,EAAAuhD,GAAAvhD,EAAA,UAiJL26G,EAAe,KACfD,EAAW/+G,IAAci4C,QAAQY,UAAUC,OAAOqB,GAAWgiE,GAC7D8C,GAAgB,EAnJX,eAwJLD,EACFxzG,EAAO,IAAI8zG,IAAKN,GAEPD,IACTvzG,EAAO,IAAI8zG,IAAK,IAAIA,IAAKzmE,UAAU0mE,aAAaR,IAC1B,WAAlBv7F,GACF3yB,EAAKxE,MAAMoqH,aAAa,SAAS,OAI/ByI,EAlKG,eAAAjjF,EAAA1uC,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAkKY,SAAAC,IAAA,IAAAq3C,EAAA,OAAAt7B,EAAAzyB,EAAA6W,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAEnBxI,OAAOylH,aAAe5uH,EAAKrC,MAAMgd,KAGY,oBAAlC3a,EAAKxE,MAAMqzH,qBACpB7uH,EAAKxE,MAAMqzH,qBACX7uH,EAAKxE,MAAMszH,sBAAsB,OAPhBr9G,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAYX3R,EAAKgsH,eAZM,WAabhsH,EAAKrC,MAAMypD,QAAQm8D,iBAbN,CAAA9xG,EAAAE,KAAA,YAeV3R,EAAKrC,MAAMumC,qBAfD,CAAAzyB,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAgBP3R,EAAKosH,sBAhBE,WAmBX1G,EAAQv+G,QAnBG,CAAAsK,EAAAE,KAAA,aAqBT3R,EAAKrC,MAAM+qD,SArBF,CAAAj3C,EAAAE,KAAA,YAsBL+2C,EAAW1oD,EAAKrC,MAAM+qD,UACPv5C,IAAci4C,QAAQY,UAAUU,SACpCC,aAAgBD,EAASqmE,SAAY3B,GAxB3C,CAAA37G,EAAAE,KAAA,gBAyBTy7G,IAA0B,EAC1B1kE,EAAS61D,MAAMmH,EAAQv+G,QAAS,SAACmS,EAAO2qE,GAGtC,GAAI3qE,EACF,OAAOtZ,EAAKzB,SAAS,CACnBmqD,UAAS,GACT,WACA1oD,EAAK6oH,YAAYnD,EAAQv+G,WAI7BimH,IAA0B,EAEtBnpC,EAASjzD,gBACXhxB,EAAK6oH,YAAYnD,EAAQv+G,SACjB88E,EAAS+qC,cACjBhvH,EAAK6oH,YAAYnD,EAAQv+G,WA1CpBsK,EAAAuJ,OAAA,UA6CF,GA7CE,eAAAvJ,EAAAE,KAAA,GAiDP3R,EAAK6oH,YAAYnD,EAAQv+G,SAjDlB,QAAAsK,EAAAE,KAAA,wBAAAF,EAAAE,KAAA,GAmDP3R,EAAKzB,SAAS,CAClB0tH,oBAAoB,EACpB9kH,QAASnH,EAAKxE,MAAM60E,gBArDT,QAAA5+D,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAsjD,GAAAtjD,EAAA,SA2DjBzR,EAAK4sH,yBAAyB,KAAKn7G,EAAAsjD,GAAM1oB,SA3DxB,yBAAA56B,EAAAU,SAAAd,EAAA9V,KAAA,aAlKZ,yBAAA6vC,EAAA/4B,MAAA9W,KAAA8E,YAAA,GAkOHiuH,EAAe3zG,EACfgjE,EAAexuE,IAAci4C,QAAQY,UAAUU,SAC/Cm9D,EAAiB7lH,EAAKnC,cAAcm2E,sBAEpB,WAAlBrhD,GAA8BgrD,GAAgBA,EAAajxD,SAAWixD,EAAax1B,kBAAkBhjD,SAASmkD,KAAgBu8D,GAAmBloC,EAAa/0B,gBAAgBzjD,SAAS0gH,EAAe/gH,eAkDpM6V,IAAS3a,EAAKrC,MAAMgd,KACtB3a,EAAKzB,SAAS,CACZoc,OACA8wG,cACC4C,IACM3I,EAAQv+G,SAAWinH,IAC5BC,IAtD0B,OAAxBruH,EAAKrC,MAAM+qD,WACP6lE,EAAuBJ,GAA8BD,GAErDxlE,EAAW,IAAIumE,YAASV,EAAqB5wC,EAAarsD,UAEpB,oBAArBo3B,EAASwmE,SAC9Bv0G,EAAO,IAAI8zG,IAAK/lE,GAChBA,EAASwmE,QAAQxmE,EAASymE,MAAO,WAC/B,GAAInvH,EAAKgM,qBAA8C,IAAxBhM,EAAKrC,MAAM+qD,UAAsB1oD,EAAKrC,MAAM+qD,WAAaA,EACtF,OAAO,EAGT,IAAMgjE,EAAehjE,EAASgjE,aACxBnsC,EAAuB72B,EAAS62B,qBAEhCrzE,EAAW,CACfyO,OACA+tC,WACA+iE,aACAC,eACAnsC,wBAIE5kE,IAAS3a,EAAKrC,MAAMgd,MACtB3a,EAAKzB,SAAS2N,EAAUmiH,KAEzBa,QAAQxmE,EAAS0mE,MAAO,SAAC91G,EAAO+yB,GAEjC1xB,EAAO2zG,GAEqB,IAAxBtuH,EAAKrC,MAAM+qD,UACb1oD,EAAKzB,SAAS,CACZoc,OACA8wG,aACA/iE,UAAS,GACR2lE,MAIPruH,EAAKzB,SAAS,CACZoc,OACA8wG,aACA/iE,UAAS,GACR2lE,IApRA76G,EAAAwH,OAAA,SAkSFL,GAlSE,yBAAAnH,EAAArB,SAAAoB,EAAAhY,KAAA,gBAqSXgxB,mDAAe,SAAAjR,EAAO/Z,EAAMyN,EAASwd,GAAtB,IAAA6iG,EAAAjtD,EAAA/hE,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAAgK,GAAA,cAAAA,EAAA9J,KAAA8J,EAAA7J,MAAA,cAA2B09G,EAA3BjtD,EAAA9hE,OAAA,QAAAC,IAAA6hE,EAAA,IAAAA,EAAA,GACbpiE,EAAKnC,cAAc6c,UAAnB,kBAAA/Y,OAA+CJ,IADlCia,EAAA7J,KAAA,EAEA3R,EAAKwzE,eAAejyE,EAAMyN,EAASwd,EAAK6iG,GAFxC,cAAA7zG,EAAAR,OAAA,SAAAQ,EAAA9H,MAAA,wBAAA8H,EAAArJ,SAAAmJ,EAAA/f,qEAKfi4E,qDAAiB,SAAAr3D,EAAO5a,EAAMyN,EAASwd,GAAtB,IAAA6iG,EAAAlB,EAAA7hG,EAAAwuC,EAAAz6D,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAA8K,GAAA,cAAAA,EAAA5K,KAAA4K,EAAA3K,MAAA,UAA2B09G,EAA3Bv0D,EAAAx6D,OAAA,QAAAC,IAAAu6D,EAAA,IAAAA,EAAA,GACf96D,EAAKnC,cAAc6c,UAAnB,qBAAA/Y,OAAkDJ,EAAlD,aAAAI,OAAkEqN,IAE5Dm/G,EAAekB,GAAqBrvH,EAAKrC,MAAM8tH,WAAazrH,EAAKrC,MAAM8tH,WAAazrH,EAAKrC,MAAMgd,KAHtF,CAAA2B,EAAA3K,KAAA,eAAA2K,EAAAtB,OAAA,SAMN,MANM,cAAAsB,EAAA5K,KAAA,EAWP4a,EAAW,IAAI6hG,EAAavzG,IAAIg5D,SAASpnD,EAAKxd,GACpDhP,EAAKzB,SAAS,SAAAZ,GAAK,OAAAjB,OAAAuD,EAAA,EAAAvD,CAAA,GACdiB,EADc,CAEjBu5C,UAAUx6C,OAAAyoE,GAAA,EAAAzoE,CAAKiB,EAAMu5C,WAAZv1C,OAAA,CAAuB,CAACJ,OAAM+qB,kBAd5BhQ,EAAAtB,OAAA,SAgBN,CAACzZ,OAAM+qB,aAhBD,QAAAhQ,EAAA5K,KAAA,GAAA4K,EAAAy4C,GAAAz4C,EAAA,SAkBbtc,EAAKnC,cAAc8gE,eAAe,6BAA6Bp9D,EAAKyN,EAApEsN,EAAAy4C,IAlBa,eAAAz4C,EAAAtB,OAAA,SAqBR,MArBQ,yBAAAsB,EAAAnK,SAAAgK,EAAA5gB,KAAA,yEAwBjB64E,aAAe,WAEb,GAAIp0E,EAAKrC,MAAMyrD,SACb,OAAOppD,EAAKrC,MAAMyrD,SAGpB,IAAMkmE,EAAengH,IAAci4C,QAAQY,UAAUoB,SACjDA,EAAW,KACTE,EAAYtpD,EAAKrC,MAAMypD,QAAQ+Z,QAAQ54D,IAAMvI,EAAKrC,MAAMypD,QAAQl0B,SAAS3qB,GAE/E,GAAI+mH,GAAgBA,EAAa5iG,UAAkE,IAAvD4iG,EAAannE,kBAAkBlhC,QAAQqiC,GAAmB,CACpG,IAAMimE,EAAiBD,EAAah+F,OACpCi+F,EAAenoE,QAAUkoE,EAAajmE,WAAWrpD,EAAKrC,MAAMypD,QAAQ+Z,QAAQ54D,GAAG4G,IAAci4C,QAAQC,mBACrG+B,EAAW,IAAIomE,KAASD,GAS1B,OANApmH,OAAOigD,SAAWA,EAElBppD,EAAKzB,SAAS,CACZ6qD,aAGKA,KAGTy/D,iCAAc,SAAAjsG,IAAA,IAAAzV,EAAAkpE,EAAAw1C,EAAA4J,EAAArmE,EAAAS,EAAA6lE,EAAAC,EAAA7sD,EAAAziE,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAAyL,GAAA,cAAAA,EAAAvL,KAAAuL,EAAAtL,MAAA,UAAOxK,EAAP27D,EAAAxiE,OAAA,QAAAC,IAAAuiE,EAAA,IAAAA,EAAA,GAENuN,EAAgBrwE,EAAKxE,MAAM60E,cAC3Bw1C,EAAiB7lH,EAAKnC,cAAcm2E,kBAAkB,WAExD3D,EALQ,CAAApzD,EAAAtL,KAAA,eAOV3R,EAAKzB,SAAS,CACZ4I,QAAQkpE,EACR47C,oBAAmB,IAIrBjsH,EAAKg1D,oBAbK/3C,EAAAjC,OAAA,UAeH,GAfG,UAAAiC,EAAAvL,KAAA,EAmBLvK,EAnBK,CAAA8V,EAAAtL,KAAA,gBAAAsL,EAAAtL,KAAA,GAoBc3R,EAAKrC,MAAMgd,KAAKC,IAAIukG,cApBlC,SAoBFsQ,EApBExyG,EAAAvJ,OAqBO+7G,EAAQnvH,SACrB6G,EAAUsoH,EAAQ,IAtBZ,WA0BLtoH,GAAWnH,EAAKrC,MAAMwJ,UAAYA,EA1B7B,CAAA8V,EAAAtL,KAAA,gBA2BR3R,EAAKzB,SAAS,CACZ0tH,oBAAoB,IA5BdhvG,EAAAjC,OAAA,UA8BD,GA9BC,YAkCN7T,GAA8B,WAAnB0+G,EAlCL,CAAA5oG,EAAAtL,KAAA,YAoCe,WAAnBk0G,EApCI,CAAA5oG,EAAAtL,KAAA,gBAqCN3R,EAAKzB,SAAS,CACZ0tH,oBAAoB,EACpB9kH,QAAQnH,EAAKxE,MAAM60E,gBAvCfpzD,EAAAjC,OAAA,UAyCC,GAzCD,aA6CFouC,EAAWppD,EAAKo0E,gBA7Cd,CAAAn3D,EAAAtL,KAAA,gBAAAsL,EAAAtL,KAAA,GAiDsBy3C,EAASS,gBAjD/B,SAiDAA,EAjDA5sC,EAAAvJ,OAmDem2C,EAAcvpD,QAAU6I,OAAOymH,SAE9CF,EAAqB,GACrBxyG,eACFwyG,EAAqBxyG,aAAaC,QAAQ,uBAAyBrW,KAAKsW,MAAMF,aAAaC,QAAQ,uBAAyBrW,KAAKsW,MAAMF,aAAaC,QAAQ,uBAAyB,IAGvL0sC,EAAcpkD,QAAQ,SAAC0/B,EAAEz/B,GAEvB,IAAMmqH,EAAiB1qF,EAAE5jC,MAG2B,IAAhDmuH,EAAmBzoG,QAAQ4oG,KAC7B1mH,OAAOymH,OAAOnpH,KAAK,CAAC,KAAM,eAAgB,CAAC,OAAQzG,EAAKnC,cAAckhE,8BAA8B55B,EAAE2qF,YAGtGJ,EAAmBjpH,KAAKopH,MAKxB3yG,cACFld,EAAKnC,cAAc0f,gBAAgB,qBAAqBzW,KAAKC,UAAU2oH,KAzErE,QA+ER1vH,EAAKnC,cAAciwB,yBAAyB,CAC1CC,cAAe,UACfC,YAAa,YACbC,WAAY43F,IAmMd7lH,EAAKzB,SAAS,CACZ4I,UAEA8kH,oBAAoB,IAItBjsH,EAAKg1D,oBA5RG,QAAA/3C,EAAAtL,KAAA,oBAAAsL,EAAAvL,KAAA,GAAAuL,EAAA83C,GAAA93C,EAAA,SAoSVjd,EAAKzB,SAAS,CACZ0tH,oBAAoB,IAItBjsH,EAAKnC,cAAc6c,UAAU,yCAA7BuC,EAAA83C,MAKI93C,EAAA83C,IAAS93C,EAAA83C,GAAM1oB,SAAWpvB,EAAA83C,GAAM1oB,QAAQlnC,SAAS,yCA9S3C,CAAA8X,EAAAtL,KAAA,gBAAAsL,EAAAjC,OAAA,kBAmTJ20G,EAAU1yG,EAAA83C,cAAiBkoB,MAC7Bj9E,EAAKnC,cAAcm0E,kBAAoB29C,GACzCI,KAAA9yG,EAAA83C,IArTQ,yBAAA93C,EAAA9K,SAAAyK,EAAArhB,KAAA,eA8Td8wH,qBAAuB,SAAA/yG,GACrB,IAAI2kC,EAAMvhD,OAAAuD,EAAA,EAAAvD,CAAA,GAAQsD,EAAKrC,MAAMsgD,QAC7BA,EAAO3yC,KAAK++G,0BAA2B,EACvCpsE,EAAO3yC,KAAKk/G,qBAAsB,EAClCxqH,EAAKzB,SAAS,CAAE0/C,cAGlB+W,wDAAoB,SAAAx3C,EAAOwyG,GAAP,IAAAhzG,EAAAw+C,EAAAmwD,EAAAG,EAAA33G,EAAA,OAAAiZ,EAAAzyB,EAAA6W,KAAA,SAAAiM,GAAA,cAAAA,EAAA/L,KAAA+L,EAAA9L,MAAA,cAElBq+G,EAAiBA,EAAiBhwH,EAAKnC,cAAc+T,MAAMo+G,GAAkB,KAF3DvyG,EAAA/L,KAAA,EAAA+L,EAAA9L,KAAA,EAM+CwI,QAAQkD,IAAI,CACzErd,EAAKrC,MAAMgd,KAAKC,IAAIm/C,WAAW/5D,EAAKrC,MAAMwJ,SAC1CnH,EAAKu4B,gBAAgBv4B,EAAKrC,MAAMwJ,SAChCnH,EAAKi1D,qBATS,OAAAj4C,EAAAS,EAAA/J,KAAA8nD,EAAA9+D,OAAA8qC,GAAA,EAAA9qC,CAAAsgB,EAAA,GAMX2uG,EANWnwD,EAAA,GAMIswD,EANJtwD,EAAA,GAMwBrnD,EANxBqnD,EAAA,GAYZmwD,IAGEA,EAAenvG,WAAWrX,SAAS,OACrCwmH,EAAiB3rH,EAAKrC,MAAMgd,KAAKgjD,MAAMK,MAAM2tD,IAI/CA,EAAiB3rH,EAAKrC,MAAMgd,KAAKgjD,MAAMI,QACrC4tD,EACA,SAGFA,EAAiB3rH,EAAKnC,cAAc+T,MAAM+5G,GAAgBnvG,WAE1Dxc,EAAKzB,SAAS,CACZotH,mBAGF3rH,EAAKnC,cAAc6c,UAAU,oBAAqBixG,IAKhDG,GAEFA,EAAsB9rH,EAAKnC,cAAc+T,MAAMk6G,GAG3CkE,GAAkBhwH,EAAKrC,MAAMmuH,qBAAuB9rH,EAAKnC,cAAc8zB,qBAAqB3xB,EAAKrC,MAAMmuH,oBAAoB33G,GAAeqI,aAAesvG,EAAoBtvG,aAC/KsvG,EAAsBA,EAAoBj6G,KAAKm+G,IAGjDlE,EAAsB9rH,EAAKnC,cAAc0W,iBAAiBu3G,EAAoB33G,GAAeqI,WAK7Fxc,EAAKzB,SAAL7B,OAAAwD,EAAA,EAAAxD,CAAA,CACEovH,uBADF,iBAAAnqH,OAEoB3B,EAAKxE,MAAMmK,eAAiBmmH,KAIhD9rH,EAAKnC,cAAc6c,UAAU,kCAAkCoxG,GAxDjDruG,EAAA9L,KAAA,iBAAA8L,EAAA/L,KAAA,GAAA+L,EAAAs3C,GAAAt3C,EAAA,SA2DhBzd,EAAKnC,cAAc8gE,eAAe,iCAAlClhD,EAAAs3C,IA3DgB,yBAAAt3C,EAAAtL,SAAAqL,EAAAjiB,KAAA,qEA+DpB6wH,yCAAsB,SAAAjmD,IAAA,IAAAjvB,EAAApL,EAAA,OAAA1e,EAAAzyB,EAAA6W,KAAA,SAAA60D,GAAA,cAAAA,EAAA30D,KAAA20D,EAAA10D,MAAA,cAEdulC,EAAYl3C,EAAKnC,cAAcwJ,gBAAgB,CAAC,cAFlCg/D,EAAA10D,KAAA,EAGd3R,EAAKnC,cAAcmT,aAAatU,OAAOqF,KAAKm1C,GAA5C,eAAA+kB,EAAAv/D,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAAuD,SAAA8qD,EAAO7qC,GAAP,IAAAlF,EAAA,OAAAiB,EAAAzyB,EAAA6W,KAAA,SAAAgrD,GAAA,cAAAA,EAAA9qD,KAAA8qD,EAAA7qD,MAAA,UAE9B,QADvBwa,EAAe+qB,EAAU7lB,IACdriB,SAAyC,OAArBmd,EAAaK,IAFS,CAAAgwC,EAAA7qD,KAAA,eAGzD3R,EAAKnC,cAAc6c,UAAU,qCAAsC2W,EAAclF,EAAand,SAHrCwtD,EAAA7qD,KAAA,EAInD3R,EAAKusB,aAAa8E,EAAclF,EAAand,QAASmd,EAAaK,KAJhB,wBAAAgwC,EAAArqD,SAAA+pD,EAAA3gE,SAAvD,gBAAAswE,GAAA,OAAA5P,EAAA5pD,MAAA9W,KAAA8E,YAAA,IAHc,cAWdyrC,EAAY9rC,EAAKnC,cAAcwJ,gBAAgB,CAAC,cAXlCg/D,EAAA10D,KAAA,EAYd3R,EAAKnC,cAAcmT,aAAatU,OAAOqF,KAAK+pC,GAA5C,eAAAqwB,EAAAz/D,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAAuD,SAAAwqD,EAAO12D,GAAP,IAAAikF,EAAA,OAAA/7D,EAAAzyB,EAAA6W,KAAA,SAAAwqD,GAAA,cAAAA,EAAAtqD,KAAAsqD,EAAArqD,MAAA,WACrDw3E,EAAiBr9C,EAAU5mC,IACbwnB,QAFuC,CAAAsvC,EAAArqD,KAAA,eAAAqqD,EAAAhhD,OAAA,oBAM/Bhb,EAAKrC,MAAMu5C,UAAUzwB,KAAK,SAAA4jB,GAAC,OAAIA,EAAE9oC,OAAS2D,IANX,CAAA82D,EAAArqD,KAAA,eAQzD3R,EAAKnC,cAAc6c,UAAU,qCAAsCxV,EAAOikF,EAAen6E,SARhCgtD,EAAArqD,KAAA,EASnD3R,EAAKusB,aAAarnB,EAAOikF,EAAen6E,QAASm6E,EAAe38D,KATb,wBAAAwvC,EAAA7pD,SAAAypD,EAAArgE,SAAvD,gBAAAuwE,GAAA,OAAA3P,EAAA9pD,MAAA9W,KAAA8E,YAAA,IAZc,WAyBhBL,EAAKxE,MAAM2oC,oBAzBK,CAAAkiC,EAAA10D,KAAA,eAAA00D,EAAA10D,KAAA,EA2BZ3R,EAAKnC,cAAcmT,aAAatU,OAAOqF,KAAK/B,EAAKxE,MAAM2oC,qBAAvD,eAAAi4B,EAAA1/D,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAA4E,SAAAw0D,EAAO/6B,GAAP,IAAAhlC,EAAA,OAAAunB,EAAAzyB,EAAA6W,KAAA,SAAAw0D,GAAA,cAAAA,EAAAt0D,KAAAs0D,EAAAr0D,MAAA,cAE1E9L,EAAkB7F,EAAKxE,MAAM2oC,oBAAoB0G,GAFyBm7B,EAAAr0D,KAAA,EAI1E3R,EAAKnC,cAAcmT,aAAatU,OAAOqF,KAAK8D,GAA5C,eAAAoqH,EAAAvzH,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAA6D,SAAAi0D,EAAOngE,GAAP,IAAAU,EAAAorC,EAAAtB,EAAA,OAAAtiB,EAAAzyB,EAAA6W,KAAA,SAAA+zD,GAAA,cAAAA,EAAA7zD,KAAA6zD,EAAA5zD,MAAA,UAC3D/L,EAAcC,EAAgBX,GAEXlF,EAAKrC,MAAMu5C,UAAUzwB,KAAK,SAAA4jB,GAAC,OAAIA,EAAE9oC,OAAS2D,IAHF,CAAAqgE,EAAA5zD,KAAA,eAK/D3R,EAAKnC,cAAc6c,UAAU,qCAAqCxV,EAAOU,EAAYoJ,SALtBu2D,EAAA5zD,KAAA,EAMzD3R,EAAKusB,aAAarnB,EAAOU,EAAYoJ,QAASpJ,EAAY4mB,KAND,UAUpCxsB,EAAKrC,MAAMu5C,UAAUzwB,KAAK,SAAA4jB,GAAC,OAAIA,EAAE9oC,OAASqE,EAAY08B,KAAKp9B,QAVvB,CAAAqgE,EAAA5zD,KAAA,gBAY/D3R,EAAKnC,cAAc6c,UAAU,qCAAqC9U,EAAY08B,KAAKp9B,MAAOU,EAAY08B,KAAKtzB,SAZ5Cu2D,EAAA5zD,KAAA,GAazD3R,EAAKusB,aAAa3mB,EAAY08B,KAAKp9B,MAAOU,EAAY08B,KAAKtzB,QAASpJ,EAAY08B,KAAK9V,KAb5B,WAiBjE5mB,EAAYgJ,UAAUnJ,QAAtB,eAAAu3D,EAAAtgE,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAA8B,SAAA6rD,EAAOtyD,EAAEjF,GAAT,OAAA0nB,EAAAzyB,EAAA6W,KAAA,SAAA6rD,GAAA,cAAAA,EAAA3rD,KAAA2rD,EAAA1rD,MAAA,UACA3R,EAAKrC,MAAMu5C,UAAUzwB,KAAK,SAAA4jB,GAAC,OAAIA,EAAE9oC,OAASoJ,EAAEzF,QAD5C,CAAAm4D,EAAA1rD,KAAA,eAG1B3R,EAAKnC,cAAc6c,UAAU,6BAA6B/P,EAAEzF,MAAM,YAAYyF,GAHpD0yD,EAAA1rD,KAAA,EAIpB3R,EAAKusB,aAAa5hB,EAAEzF,MAAOyF,EAAEqE,QAASrE,EAAE6hB,KAJpB,wBAAA6wC,EAAAlrD,SAAA8qD,EAAA1hE,SAA9B,gBAAAowE,EAAAC,GAAA,OAAA5O,EAAA3qD,MAAA9W,KAAA8E,YAAA,KASIuF,EAAYsrC,UA1BiD,CAAAq0B,EAAA5zD,KAAA,aA4B3D/L,EAAYsrC,UAAUF,YA5BqC,CAAAu0B,EAAA5zD,KAAA,gBA6BvDq/B,EAAcprC,EAAYsrC,UAAUF,YAC1ChxC,EAAKnC,cAAc6c,UAAU,6BAA6Bs2B,EAAYzvC,KAAK,YAAYyvC,GA9B1Bu0B,EAAA5zD,KAAA,GA+BvD3R,EAAKusB,aAAaykB,EAAYzvC,KAAMyvC,EAAYhiC,QAASgiC,EAAYxkB,KA/Bd,WAmC3D5mB,EAAYsrC,UAAUmjE,cACxBzuG,EAAYsrC,UAAUmjE,aAAa5uG,QAAnC,eAAAy3D,EAAAxgE,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAA2C,SAAAyrD,EAAOlyD,EAAEjF,GAAT,OAAA0nB,EAAAzyB,EAAA6W,KAAA,SAAAurD,GAAA,cAAAA,EAAArrD,KAAAqrD,EAAAprD,MAAA,UACb3R,EAAKrC,MAAMu5C,UAAUzwB,KAAK,SAAA4jB,GAAC,OAAIA,EAAE9oC,OAASoJ,EAAEzF,QAD/B,CAAA63D,EAAAprD,KAAA,eAGvC3R,EAAKnC,cAAc6c,UAAU,6BAA6B/P,EAAEzF,MAAM,YAAYyF,GAHvCoyD,EAAAprD,KAAA,EAIjC3R,EAAKusB,aAAa5hB,EAAEzF,MAAOyF,EAAEqE,QAASrE,EAAE6hB,KAJP,wBAAAuwC,EAAA5qD,SAAA0qD,EAAAthE,SAA3C,gBAAA00E,EAAAD,GAAA,OAAA9S,EAAA7qD,MAAA9W,KAAA8E,YAAA,KASEuF,EAAYsrC,UAAUxB,kBA7CqC,CAAA61B,EAAA5zD,KAAA,gBA8CvD+9B,EAAoB9pC,EAAYsrC,UAAUxB,kBAChD1vC,EAAKnC,cAAc6c,UAAU,6BAA6Bg1B,EAAkBnuC,KAAK,YAAYmuC,GA/ChC61B,EAAA5zD,KAAA,GAgDvD3R,EAAKusB,aAAamjB,EAAkBnuC,KAAMmuC,EAAkB1gC,QAAS0gC,EAAkBljB,KAhDhC,yBAAA+4C,EAAApzD,SAAAkzD,EAAA9pE,SAA7D,gBAAA8vE,GAAA,OAAA4kD,EAAA59G,MAAA9W,KAAA8E,YAAA,IAJ0E,wBAAA2lE,EAAA7zD,SAAAyzD,EAAArqE,SAA5E,gBAAA6vE,GAAA,OAAAhP,EAAA/pD,MAAA9W,KAAA8E,YAAA,IA3BY,cAAAgmE,EAAArrD,OAAA,SAsFbhb,EAAKzB,SAAS,CACnB2lC,sBAAqB,KAvFH,yBAAAmiC,EAAAl0D,SAAAg0D,EAAA5qE,WA2FtB6zB,wDAAoB,SAAAm3C,EAAOl1C,GAAP,IAAA/E,EAAA1mB,EAAA,OAAAwnB,EAAAzyB,EAAA6W,KAAA,SAAAu1D,GAAA,cAAAA,EAAAr1D,KAAAq1D,EAAAp1D,MAAA,WACd2a,EAAWtsB,EAAKrC,MAAMu5C,UAAUzwB,KAAK,SAAA4jB,GAAC,OAAIA,EAAE9oC,OAAS8vB,OAExCrxB,EAAKxE,MAAMoK,YAHV,CAAAmhE,EAAAp1D,KAAA,eAIV/L,EAAc5F,EAAKxE,MAAMoK,YAJfmhE,EAAAp1D,KAAA,EAKC3R,EAAKusB,aAAa8E,EAAczrB,EAAYoJ,QAASpJ,EAAY4mB,KALlE,OAKhBF,EALgBy6C,EAAArzD,KAAA,cAAAqzD,EAAA/rD,OAAA,SAQXsR,EAAWA,EAASA,SAAW,MARpB,wBAAAy6C,EAAA50D,SAAAo0D,EAAAhrE,iEAWpB05D,sCAAmB,SAAAwW,IAAA,IAAAt3D,EAAA,OAAAiZ,EAAAzyB,EAAA6W,KAAA,SAAAk6D,GAAA,cAAAA,EAAAh6D,KAAAg6D,EAAA/5D,MAAA,UACbwC,EAAgB,KAEfnU,EAAKrC,MAAMwW,cAHC,CAAAu3D,EAAA/5D,KAAA,eAAA+5D,EAAA/5D,KAAA,EAKO3R,EAAKnC,cAAco3D,iBAAiBj1D,EAAKxE,MAAMmK,eALtD,OAKfwO,EALeu3D,EAAAh4D,KAOf1T,EAAKzB,SAAS,CACZ4V,kBARau3D,EAAA/5D,KAAA,uBAAA+5D,EAAA/5D,KAAA,GAWQ,IAAIwI,QAAJ,eAAA+rD,EAAAxpE,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAAa,SAAA65D,EAAO1wD,EAASC,GAAhB,OAAA4S,EAAAzyB,EAAA6W,KAAA,SAAA05D,GAAA,cAAAA,EAAAx5D,KAAAw5D,EAAAv5D,MAAA,OAClC4I,EAAQva,EAAKrC,MAAMwW,eADe,wBAAA+2D,EAAA/4D,SAAA84D,EAAA1vE,SAAb,gBAAAw0E,EAAAhB,GAAA,OAAA7I,EAAA7zD,MAAA9W,KAAA8E,YAAA,IAXR,QAWf8T,EAXeu3D,EAAAh4D,KAAA,eAAAg4D,EAAA1wD,OAAA,SAgBV7G,GAhBU,yBAAAu3D,EAAAv5D,SAAAs5D,EAAAlwE,WAmBnBg9B,sDAAkB,SAAA2xC,EAAO/iE,GAAP,IAAAmlB,EAAA,OAAAc,EAAAzyB,EAAA6W,KAAA,SAAAq5D,GAAA,cAAAA,EAAAn5D,KAAAm5D,EAAAl5D,MAAA,cAAAk5D,EAAAl5D,KAAA,EACO3R,EAAKovB,kBAAkBpvB,EAAKxE,MAAMmK,eADzC,UACV2mB,EADUu+C,EAAAn3D,KAAA,CAAAm3D,EAAAl5D,KAAA,eAId3R,EAAKnC,cAAc8gE,eAAe,sBAAuB3+D,EAAKxE,MAAMmK,eAJtDklE,EAAA7vD,OAAA,SAKP,MALO,UAQXsR,EAAS4jB,QAAT,UARW,CAAA26B,EAAAl5D,KAAA,eASd3R,EAAK2+D,eAAe,+BATNkM,EAAA7vD,OAAA,SAUP,MAVO,cAAA6vD,EAAAl5D,KAAA,GAaH2a,EAAS4jB,QAAQggF,UAAU/oH,GAASk6E,OAAO1Q,MAAM,SAAAr3D,GAC5DtZ,EAAKnC,cAAc6c,UAAnB,iBAAA/Y,OAA8C3B,EAAKxE,MAAMmK,cAAzD,YAAkF2T,KAdpE,eAAAuxD,EAAA7vD,OAAA,SAAA6vD,EAAAn3D,MAAA,yBAAAm3D,EAAA14D,SAAA+3D,EAAA3uE,iEAkBlB40H,2BAA6B,WAE3B,IAAMpoE,EACyB,qBAAtB/nD,EAAKxE,MAAMmoD,QACiC,qBAA5C3jD,EAAKxE,MAAMmoD,OAAOoE,sBACrB/nD,EAAKxE,MAAMmoD,OAAOoE,sBAClB,EAEA8jE,EACJ7rH,EAAKrC,MAAMguH,eAAiB5jE,EAE9B/nD,EAAKzB,SAAS,CACZstH,yBAIJ/qF,gEAA4B,SAAAgpC,EAAO+kD,GAAP,OAAAzhG,EAAAzyB,EAAA6W,KAAA,SAAAw4D,GAAA,cAAAA,EAAAt4D,KAAAs4D,EAAAr4D,MAAA,OAErB3R,EAAKrC,MAAMwJ,UACdnH,EAAKxE,MAAMszH,sBAAsBD,GAEjC7uH,EAAKowH,uBALmB,wBAAApmD,EAAA73D,SAAA23D,EAAAvuE,iEAS5B80H,mBAAqB,WAEnB,IAAM/mE,EACyB,qBAAtBtpD,EAAKxE,MAAMmoD,QAC2B,qBAAtC3jD,EAAKxE,MAAMmoD,OAAO+D,gBACrB1nD,EAAKxE,MAAMmoD,OAAO+D,gBAClBv4C,IAAci4C,QAAQM,gBAIxBA,EAAkB,CACpBnmD,KAHgB4N,IAAci4C,QAAQC,kBAAkBiC,GAAan6C,IAAci4C,QAAQC,kBAAkBiC,GAAa,UAI1H/gD,GAAI+gD,GAGFlC,EAAU1qD,OAAOC,OAAO,GAAGqD,EAAKrC,MAAMypD,SAC1CA,EAAQl0B,SAAWw0B,EAEnB1nD,EAAKzB,SAAS,CAAE6oD,eAGlBkpE,kCAAe,SAAAjnD,IAAA,OAAAj8C,EAAAzyB,EAAA6W,KAAA,SAAAm4D,GAAA,cAAAA,EAAAj4D,KAAAi4D,EAAAh4D,MAAA,cAAAg4D,EAAAj4D,KAAA,EAAAi4D,EAAA3uD,OAAA,SAEJhb,EAAKrC,MAAMgd,KAAKC,IAAIkpE,IAAIC,MAAM,SAACzqE,EAAOgwC,GAC3C,IAAI6X,EAAOzkE,OAAAuD,EAAA,EAAAvD,CAAA,GAAQsD,EAAKrC,MAAMypD,QAAQ+Z,SACtCA,EAAQ54D,GAAK+gD,EACb,IAAIlC,EAAU1qD,OAAOC,OAAO,GAAGqD,EAAKrC,MAAMypD,SAC1CA,EAAQ+Z,QAAUA,EAClB/Z,EAAQm8D,iBAAmBp0G,IAAci4C,QAAQU,gBAAgB3iD,SAASmkD,GAC1EtpD,EAAKzB,SAAS,CAAE6oD,eARP,OAAAuiB,EAAAj4D,KAAA,EAAAi4D,EAAA5U,GAAA4U,EAAA,SAWX3pE,EAAKnC,cAAc6c,UAAU,6BAA7BivD,EAAA5U,IAXW,wBAAA4U,EAAAx3D,SAAAk3D,EAAA9tE,KAAA,cAefg1H,oCAAiB,SAAA1hD,IAAA,OAAAzhD,EAAAzyB,EAAA6W,KAAA,SAAAs9D,GAAA,cAAAA,EAAAp9D,KAAAo9D,EAAAn9D,MAAA,cAAAm9D,EAAAp9D,KAAA,EAAAo9D,EAAA9zD,OAAA,SAENhb,EAAKrC,MAAMgd,KAAKC,IAAIkpE,IAAI0sC,eAAe,SAACl3G,EAAOiwC,GACpD,IAAI4X,EAAOzkE,OAAAuD,EAAA,EAAAvD,CAAA,GAAQsD,EAAKrC,MAAMypD,QAAQ+Z,SACtCA,EAAQ5/D,KAAOgoD,EACf,IAAInC,EAAU1qD,OAAOC,OAAO,GAAGqD,EAAKrC,MAAMypD,SAC1CA,EAAQ+Z,QAAUA,EAClBnhE,EAAKzB,SAAS,CAAE6oD,eAPL,OAAA0nB,EAAAp9D,KAAA,EAAAo9D,EAAA/Z,GAAA+Z,EAAA,SAUb9uE,EAAKnC,cAAc6c,UAAU,+BAA7Bo0D,EAAA/Z,IAVa,wBAAA+Z,EAAA38D,SAAA08D,EAAAtzE,KAAA,cAcjBywH,kCAAe,SAAA98C,IAAA,IAAA9nB,EAAA,OAAAh6B,EAAAzyB,EAAA6W,KAAA,SAAA29D,GAAA,cAAAA,EAAAz9D,KAAAy9D,EAAAx9D,MAAA,cACb3R,EAAKqwH,qBADQlhD,EAAAx9D,KAAA,EAGPwI,QAAQkD,IAAI,CAChBrd,EAAKswH,eACLtwH,EAAKuwH,mBALM,QAQTnpE,EAAU1qD,OAAOC,OAAO,GAAGqD,EAAKrC,MAAMypD,UAClCm8D,kBAAoBvjH,EAAKrC,MAAMypD,QAAQ+Z,QAAQ54D,IAAM4G,IAAci4C,QAAQU,gBAAgB3iD,SAASnF,EAAKrC,MAAMypD,QAAQ+Z,QAAQ54D,IAGvIvI,EAAKzB,SAAS,CAAE6oD,YAZH,wBAAA+nB,EAAAh9D,SAAA+8D,EAAA3zE,WAefy2B,gEAA4B,SAAAw9C,EAAOn+C,EAAco/F,GAArB,IAAAn/F,EAAAh1B,EAAA6P,EAAAgwE,EAAAX,EAAA2L,EAAAj+E,EAAAwnH,EAAAvpH,EAAA+vC,EAAA5qB,EAAAqkG,EAAAr1C,EAAAc,EAAArgE,EAAA60G,EAAAC,EAAAC,EAAAC,EAAApB,EAAAqB,EAAA3wH,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAAi+D,GAAA,cAAAA,EAAA/9D,KAAA+9D,EAAA99D,MAAA,UAAqC2f,EAArC0/F,EAAA1wH,OAAA,QAAAC,IAAAywH,EAAA,GAAAA,EAAA,GAA8C,GAAI10H,EAAlD00H,EAAA1wH,OAAA,QAAAC,IAAAywH,EAAA,GAAAA,EAAA,GAA0D,KAAM7kH,EAAhE6kH,EAAA1wH,OAAA,QAAAC,IAAAywH,EAAA,GAAAA,EAAA,GAA2E,KAAM70C,EAAjF60C,EAAA1wH,OAAA,QAAAC,IAAAywH,EAAA,GAAAA,EAAA,GAAoG,KAAMx1C,EAA1Gw1C,EAAA1wH,OAAA,QAAAC,IAAAywH,EAAA,GAAAA,EAAA,GAAqH,KAAM7pC,EAA3H6pC,EAAA1wH,OAAA,QAAAC,IAAAywH,EAAA,GAAAA,EAAA,GAAoI,KAEzJhxH,EAAKrC,MAAMypD,QAAQm8D,iBAFE,CAAA9zC,EAAA99D,KAAA,eAIxB3R,EAAKrC,MAAMsgD,OAAO/N,QAAQw8E,wBAJFj9C,EAAAz0D,OAAA,UAKjB,GALiB,UASrBhb,EAAKrC,MAAMwJ,QATU,CAAAsoE,EAAA99D,KAAA,gBAUxB3R,EAAKowH,sBACmB,oBAAbjkH,GACTA,EAAS,KAAK,yBAZQsjE,EAAAz0D,OAAA,UAcjB,GAdiB,YAkBtBhb,EAAKrC,MAAMkuH,kBAlBW,CAAAp8C,EAAA99D,KAAA,gBAmBxB3R,EAAKysH,oBACmB,oBAAbtgH,GACTA,EAAS,KAAK,uBArBQsjE,EAAAz0D,OAAA,UAuBjB,GAvBiB,YA8BtB9R,EAAclJ,EAAKwtH,kBAAkBrmC,IAC7BzY,OAAS+hD,EAErBzwH,EAAKytH,eAAevkH,GAGpBA,EAAYmB,KAAO,WACnBnB,EAAYvJ,OAAS,UACrBuJ,EAAYooB,OAASA,EAGrBtxB,EAAK0gF,kBAAkBx3E,GAzCGwnH,EA2CK1wH,EAAKrC,MAA5BwJ,EA3CkBupH,EA2ClBvpH,QAAS+vC,EA3CSw5E,EA2CTx5E,UACb5qB,EAAW4qB,EAAUzwB,KAAK,SAAA4jB,GAAC,OAAIA,EAAE9oC,OAAS8vB,IA5CpB,CAAAo+C,EAAA99D,KAAA,eA8CA,oBAAbxF,GACTA,EAAS,KAAK,sBA/CQsjE,EAAAz0D,OAAA,SAiDjBhb,EAAKnC,cAAc6c,UAAnB,yBAAA/Y,OAAsD0vB,KAjDrC,eAoD1B/E,EAAWA,EAASA,SAOhBqkG,EAA8B,KA3DRlhD,EAAA/9D,KAAA,GA+DnBpV,IACHA,EAAQ0D,EAAKnC,cAAc+T,MAAM,IAGnC5R,EAAKnC,cAAc6c,UAAU,4BAA4B2W,EAAa/E,EAASkyD,SAASr3E,EAAQspH,EAAen/F,EAAQh1B,EAAQ,CAAEgS,KAAMnH,EAAS7K,SAAU,CAAEgS,KAAMnH,IAnE1IsoE,EAAA99D,KAAA,IAsER2pE,EAAAhvD,EAAS4jB,SAAQugF,GAAjBp+G,MAAAipE,EAAA5+E,OAAAyoE,GAAA,EAAAzoE,CAAoC40B,IACjDwqD,YAAYx/E,EAAQ,CAAEgS,KAAMnH,EAAS7K,SAAU,CAAEgS,KAAMnH,IACvDwpE,MAAM,SAAA5tE,GAAC,OAAIs0B,QAAQ/d,MAAMvW,KAxEJ,eAsEpBgZ,EAtEoB0zD,EAAA/7D,QA6EtBqI,GADAA,EAAM/b,EAAKnC,cAAc+T,MAAMmK,IACrBlK,KAAKkK,EAAI7M,MAAMlP,EAAKnC,cAAc+T,MAAM,SAG9C4pE,GAAYz/D,EAAIhK,GAAG/R,EAAKnC,cAAc+T,MAAM4pE,MAC9Cz/D,EAAM/b,EAAKnC,cAAc+T,MAAM4pE,IAIjCz/D,EAAM/b,EAAKrC,MAAMgd,KAAKgjD,MAAMpoC,KAAKxZ,EAAI4Z,aAAa0oC,KAAUyZ,eAGxD84C,EAAuB,SAACr0C,EAAoBC,GAI5Cm0C,GACFxnH,OAAOuU,aAAaizG,GAKtBznH,EAAY+nH,mBAAqB,EAEjC,IAAMhhG,GAAiB9gB,IAAci4C,QAAQK,UAAgC,oBAAbt7C,GAA2D,IAAhCjD,EAAY+nH,kBAGjGC,EAAsBlxH,EAAKxE,MAAMmoD,OAAOkE,uBAAyB,EAEjC,IAAlC3+C,EAAY+nH,kBAEd/nH,EAAYvJ,OAAS,YACZuJ,EAAY+nH,kBAInB/nH,EAAY+nH,oBAAsBC,EAGhC10C,EAAQ78E,OACVuJ,EAAYvJ,OAAS,UACX68E,EAAQ78E,SAClBuJ,EAAYvJ,OAAS,SAEduJ,EAAY+nH,kBAKnBhhG,IAEEusD,IACFtzE,EAAYsuB,UAAYglD,GAE1BtzE,EAAYioH,YAAc,eAC1BnxH,EAAK0gF,kBAAkBx3E,GAEvBiD,EAASjD,GAETlJ,EAAKnC,cAAc6c,UAAU,YAAa6hE,EAAoBC,EAAStzE,KAIrE2nH,EAAqB,SAArBA,EAAsB7/F,EAAgBogG,GAC1C,IAAKpgG,EACH,OAAO,EAEThxB,EAAKrC,MAAMgd,KAAKC,IAAIuwD,sBAAsBn6C,EAAgB,SAACnW,EAAI2c,GACzDA,GAAaA,EAAU73B,QACzBK,EAAKnC,cAAc6c,UAAU,wBAAyB8c,GACtDo5F,EAAqB,EAAEp5F,IAEvBm5F,EAA8BxnH,OAAOsT,WAAY,kBAAMo0G,EAAmB7/F,EAAgBogG,IAAWA,MAKrGN,EAAkB,SAAAt0C,GAIlBm0C,GACFxnH,OAAOuU,aAAaizG,GAIlBn0C,IACFtzE,EAAYsuB,UAAYglD,GAE1BtzE,EAAYioH,YAAc,UAGtBhiH,IAAci4C,QAAQK,UACxBv+C,EAAYvJ,OAAS,UACG,oBAAbwM,GACTA,EAASjD,KAGXlJ,EAAK0gF,kBAAkBx3E,GAGnBszE,EAAQ78E,SACVgxH,EAA8BxnH,OAAOsT,WAAY,kBAAMo0G,EAAmBr0C,EAAQxrD,gBAAgB,MAAO,QAlLvFy+C,EAAAz0D,OAAA,UA0LjBohE,EAAA9vD,EAAS4jB,SAAQugF,GAAjBp+G,MAAA+pE,EAAA1/E,OAAAyoE,GAAA,EAAAzoE,CAAoC40B,IACxCvtB,KAAKzH,EAAQ,CAAEgS,KAAMnH,EAAS7K,QAAOyf,OAAoB,CAAEzN,KAAMnH,EAAS4U,QAC1E2nB,GAAG,kBAAmB,SAAAtlC,GAGrB,GAFA4B,EAAKnC,cAAc6c,UAAU,sBAAuBtc,IAE/CA,EAEH,OADA4B,EAAKnC,cAAc6c,UAAU,yCAA0Ctc,IAChE,EAGT8K,EAAY8nB,gBAAkB5yB,EAC9B8K,EAAYvJ,OAAS,UACrBuJ,EAAYioH,YAAc,kBAC1BnxH,EAAK0gF,kBAAkBx3E,GAEnBizE,GACFA,EAAiBjzE,GAIflJ,EAAKxE,MAAM8F,WACTqvH,GACFxnH,OAAOuU,aAAaizG,GAEtBA,EAA8BxnH,OAAOsT,WAAY,kBAAMo0G,EAAmBzyH,EAAK,MAAQ,QAG1FslC,GAAG,UAAWotF,GACdptF,GAAG,eAAgBktF,GACnBltF,GAAG,QAAS,SAAApqB,GAEX+d,QAAQC,IAAI,WAAWhe,GAEvB,IAAMy3G,KAAaz3G,IAASA,EAAM+yB,SAA6C,oBAA3B/yB,EAAM+yB,QAAQlnC,WAA0BmU,EAAM+yB,QAAQlnC,SAAS,qCASnH,GANA+D,EAAYvJ,OAAS,QACrBuJ,EAAYioH,YAAc,QAC1BnxH,EAAK0gF,kBAAkBx3E,IAIlB6nH,EAAW,CACd5nH,OAAOisD,cAAcC,WAAW,uBAAwB,CACtD5lD,KAAM,QACN+lD,WAAY,GACZC,WAAY,GACZd,QAAS,UACTY,WAAY,QACZD,iBAAkB,iBAGpB,IAAMq6D,EAAUr2G,aAAiB2jE,MAEJ,qBAAlB3jE,EAAM+yB,QACfrsC,EAAK6sH,0BAA0B,KAAKvzG,EAAM+yB,SACjCrsC,EAAKnC,cAAcm0E,kBAAoB29C,GAChDI,KAAwBz2G,GAIJ,oBAAbnN,GACTA,EAASjD,EAAYoQ,MAxPH,eAAAm2D,EAAA/9D,KAAA,GAAA+9D,EAAA1a,GAAA0a,EAAA,UA6PxBp4C,QAAQC,IAAI,iBAAZm4C,EAAA1a,IAEA7rD,EAAYvJ,OAAS,QACrBK,EAAK0gF,kBAAkBx3E,GAIvBC,OAAOisD,cAAcC,WAAW,4CAA6C,CAC3E5lD,KAAM,QACN+lD,WAAY,GACZC,WAAY,GACZd,QAAS,UACTY,WAAY,QACZD,iBAAkB,+BAGdy7D,KAAathD,EAAA1a,KAAS0a,EAAA1a,GAAM1oB,UAAUojC,EAAA1a,GAAM1oB,QAAQlnC,SAAS,qCAE7DwqH,EAAUlgD,EAAA1a,cAAiBkoB,MAC5Bj9E,EAAKnC,cAAcm0E,kBAAoB29C,IAAYoB,GACtDhB,KAAAtgD,EAAA1a,IAGsB,oBAAb5oD,GAETA,EAASjD,EAADumE,EAAA1a,IAtRc0a,EAAAz0D,OAAA,UAyRjB,GAzRiB,yBAAAy0D,EAAAt9D,SAAAq9D,EAAAj0E,KAAA,wEA8R5BiyH,kBAAoB,WAAiB,IAAhBrmC,EAAgB9mF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAT,KACtB6I,EAAWxM,OAAAuD,EAAA,EAAAvD,CAAA,GACVyqF,GAUL,OARAj+E,EAAYsuB,UAAY,GACxBtuB,EAAYylE,QAAU1oE,KAAKwwB,MAC3BvtB,EAAY+nH,kBAAoB,EAChC/nH,EAAYvJ,OAAS,cACrBuJ,EAAYmoH,YAAcprH,KAAKwwB,MAC/BvtB,EAAYhE,MAAQlF,EAAKxE,MAAMmK,cAC/BuD,EAAY2hC,SAAW7qC,EAAKxE,MAAM6X,iBAClCnK,EAAYogD,UAAYtpD,EAAKnC,cAAcwJ,gBAAgB,CAAC,UAAU,oBAC/D6B,KAGTukH,eAAiB,SAAAvkH,GACf,IAAMlC,EAAYtK,OAAAuD,EAAA,EAAAvD,CAAA,GAAQsD,EAAKrC,MAAMqJ,cACrCA,EAAY,KAAArF,OAAMuH,EAAYylE,UAAazlE,EAC3ClJ,EAAKzB,SAAS,CAAEyI,oBAIlB05E,kBAAoB,SAAA4wC,GAClB,IAAMtqH,EAAYtK,OAAAuD,EAAA,EAAAvD,CAAA,GAAQsD,EAAKrC,MAAMqJ,cAC/BkC,EAAWxM,OAAAuD,EAAA,EAAAvD,CAAA,GAAQ40H,GAezB,OAdApoH,EAAYmoH,YAAcprH,KAAKwwB,MAC/BzvB,EAAY,KAAArF,OAAM2vH,EAAmB3iD,UAAazlE,EAClDlJ,EAAKzB,SAAS,CAAEyI,iBAIZkC,EAAY8nB,kBAEdhxB,EAAKnC,cAAcwxF,kBAGnBrvF,EAAKnC,cAAcgrE,qBAAnB,KAAAlnE,OAA6CuH,EAAYylE,SAAUzlE,IAG9DA,KAIT8gH,qBAAuB,SAAAjnH,GACJ,qBAANA,GACTA,EAAE2D,iBAGJ,IAAIu3C,EAAMvhD,OAAAuD,EAAA,EAAAvD,CAAA,GAAQsD,EAAKrC,MAAMsgD,QAC7BA,EAAO3yC,KAAK2+G,uBAAwB,EAEpCjqH,EAAKzB,SAAS,CAAE0/C,cAGlBmyE,oBAAsB,SAAArtH,GACH,qBAANA,GACTA,EAAE2D,iBAGJ,IAAIu3C,EAAMvhD,OAAAuD,EAAA,EAAAvD,CAAA,GAAQsD,EAAKrC,MAAMsgD,QAC7BA,EAAO3yC,KAAK2+G,uBAAwB,EACpCjqH,EAAKzB,SAAS,CAAE0/C,OAAQA,OAG1BmsE,4BAA8B,SAAArnH,GACX,qBAANA,GACTA,EAAE2D,iBAGJ,IAAIu3C,EAAMvhD,OAAAuD,EAAA,EAAAvD,CAAA,GAAQsD,EAAKrC,MAAMsgD,QAC7BA,EAAO3yC,KAAK++G,0BAA2B,EACvCrqH,EAAKzB,SAAS,CAAE0/C,cAGlB6uE,2BAA6B,SAAA/pH,GACV,qBAANA,GACTA,EAAE2D,iBAGJ,IAAIu3C,EAAMvhD,OAAAuD,EAAA,EAAAvD,CAAA,GAAQsD,EAAKrC,MAAMsgD,QAC7BA,EAAO3yC,KAAK++G,0BAA2B,EACvCpsE,EAAO3yC,KAAKkhH,kCAAmC,EAC/CvuE,EAAO3yC,KAAK2+G,uBAAwB,EAEpCjqH,EAAKzB,SAAS,CAAE0/C,cAGlBitE,2BAA6B,SAAAnoH,GACV,qBAANA,GACTA,EAAE2D,iBAGJ,IAAIu3C,EAAMvhD,OAAAuD,EAAA,EAAAvD,CAAA,GAAQsD,EAAKrC,MAAMsgD,QAC7BA,EAAO3yC,KAAK8/G,kBAAmB,EAC/BprH,EAAKzB,SAAS,CAAE0/C,cAGlB4uE,0BAA4B,SAAC9pH,EAAEuW,GACZ,qBAANvW,GAAqBA,GAC9BA,EAAE2D,iBAGJ,IAAIu3C,EAAMvhD,OAAAuD,EAAA,EAAAvD,CAAA,GAAQsD,EAAKrC,MAAMsgD,QAC7BA,EAAO3yC,KAAK8/G,iBAAmB9xG,EAE/BtZ,EAAKzB,SAAS,CAAE0/C,cAGlB6sE,0BAA4B,SAAA/nH,GAM1B,GALiB,qBAANA,GACTA,EAAE2D,kBAIC1G,EAAKrC,MAAMsgD,OAAO3yC,KAAK0/G,gBAC1B,OAAO,EAGT,IAAI/sE,EAAMvhD,OAAAuD,EAAA,EAAAvD,CAAA,GAAQsD,EAAKrC,MAAMsgD,QAC7BA,EAAO3yC,KAAK0/G,iBAAkB,EAC9BhrH,EAAKzB,SAAS,CAAE0/C,cAGlB2uE,yBAA2B,SAAC7pH,EAAEuW,GACX,qBAANvW,GAAqBA,GAC9BA,EAAE2D,iBAGJ,IAAIu3C,EAAMvhD,OAAAuD,EAAA,EAAAvD,CAAA,GAAQsD,EAAKrC,MAAMsgD,QAGjB,oBAAR3kC,IACFA,EAAQ,mCAGNtZ,EAAKrC,MAAMsgD,OAAO3yC,KAAK0/G,kBAAoB1xG,IAE7C2kC,EAAO3yC,KAAK0/G,gBAAkB1xG,EAC9BtZ,EAAKzB,SAAS,CAAE0/C,eAIpBssE,iCAAmC,SAAAxnH,GAChB,qBAANA,GACTA,EAAE2D,iBAGJ,IAAIu3C,EAAMvhD,OAAAuD,EAAA,EAAAvD,CAAA,GAAQsD,EAAKrC,MAAMsgD,QAC7BA,EAAO3yC,KAAKk/G,qBAAsB,EAClCxqH,EAAKzB,SAAS,CAAE0/C,cAGlB8uE,gCAAkC,SAAAhqH,GACf,qBAANA,GACTA,EAAE2D,iBAGJ,IAAIu3C,EAAMvhD,OAAAuD,EAAA,EAAAvD,CAAA,GAAQsD,EAAKrC,MAAMsgD,QAC7BA,EAAO3yC,KAAKk/G,qBAAsB,EAClCxqH,EAAKzB,SAAS,CAAE0/C,cAGlBqrE,wBAA0B,SAAAvmH,GACP,qBAANA,GACTA,EAAE2D,iBAGJ,IAAIu3C,EAAMvhD,OAAAuD,EAAA,EAAAvD,CAAA,GAAQsD,EAAKrC,MAAMsgD,QAC7BA,EAAO3yC,KAAKi+G,0BAA2B,EACvCvpH,EAAKzB,SAAS,CAAE0/C,cAGlB0uE,uBAAyB,SAAA5pH,GACN,qBAANA,GACTA,EAAE2D,iBAGJ,IAAIu3C,EAAMvhD,OAAAuD,EAAA,EAAAvD,CAAA,GAAQsD,EAAKrC,MAAMsgD,QAC7BA,EAAO3yC,KAAKi+G,0BAA2B,EACvCvpH,EAAKzB,SAAS,CAAE0/C,cAGlBwrE,mBAAqB,SAAA1mH,GACF,qBAANA,GACTA,EAAE2D,iBAGJ,IAAIu3C,EAAMvhD,OAAAuD,EAAA,EAAAvD,CAAA,GAAQsD,EAAKrC,MAAMsgD,QAC7BA,EAAO3yC,KAAKo+G,qBAAsB,EAClC1pH,EAAKzB,SAAS,CAAE0/C,cAGlBszE,kBAAoB,SAAAxuH,GACD,qBAANA,GACTA,EAAE2D,iBAGJ,IAAIu3C,EAAMvhD,OAAAuD,EAAA,EAAAvD,CAAA,GAAQsD,EAAKrC,MAAMsgD,QAC7BA,EAAO3yC,KAAKo+G,qBAAsB,EAClC1pH,EAAKzB,SAAS,CAAE0/C,cAGlB2rE,uBAAyB,SAAA7mH,GACN,qBAANA,GACTA,EAAE2D,iBAGJ,IAAIu3C,EAAMvhD,OAAAuD,EAAA,EAAAvD,CAAA,GAAQsD,EAAKrC,MAAMsgD,QAC7BA,EAAO3yC,KAAKu+G,yBAA0B,EACtC7pH,EAAKzB,SAAS,CAAE0/C,cAGlByuE,sBAAwB,SAAA3pH,GACL,qBAANA,GACTA,EAAE2D,iBAGJ,IAAIu3C,EAAMvhD,OAAAuD,EAAA,EAAAvD,CAAA,GAAQsD,EAAKrC,MAAMsgD,QAC7BA,EAAO3yC,KAAKu+G,yBAA0B,EACtC7pH,EAAKzB,SAAS,CAAE0/C,cAGlBysE,mBAAqB,SAAA3nH,GACF,qBAANA,GACTA,EAAE2D,iBAGJ,IAAIu3C,EAAMvhD,OAAAuD,EAAA,EAAAvD,CAAA,GAAQsD,EAAKrC,MAAMsgD,QAC7BA,EAAO3yC,KAAKq/G,qBAAsB,EAClC3qH,EAAKzB,SAAS,CAAE0/C,cAGlBwuE,kBAAoB,SAAA1pH,GACD,qBAANA,GACTA,EAAE2D,iBAGJ,IAAIu3C,EAAMvhD,OAAAuD,EAAA,EAAAvD,CAAA,GAAQsD,EAAKrC,MAAMsgD,QAC7BA,EAAO3yC,KAAKq/G,qBAAsB,EAClC3qH,EAAKzB,SAAS,CAAE0/C,cAGlBtgD,MAAQ,CACNgd,KAAM,KACN+qG,QAAQ,KACRv+G,QAAS,KACT+vC,UAAW,GACXwR,SAAU,KACVU,SAAU,KACVqiE,WAAW,KACXzkH,aAAc,GACdwqH,YAAa,KACb9F,aAAa,KACbv3G,cAAc,KACdw3G,eAAgB,KAChB3zD,iBAAkB,KAClBkyD,iBAAkB,KAClB4D,kBAAiB,EACjB2D,kBAAmB,KACnB7F,SAAU5rH,EAAK4rH,SACfC,kBAAmB,KACnBI,oBAAmB,EACnB1sC,qBAAqB,KACrBmyC,uBAAuB,GACvBxtF,sBAAqB,EACrB2kF,YAAa7oH,EAAK6oH,YAClBsD,yBAA0B,KAC1B/3C,aAAcp0E,EAAKo0E,aACnB7nD,aAAcvsB,EAAKusB,aACnBw/F,eAAgB/rH,EAAK+rH,eACrBhC,gBAAiB/pH,EAAK+pH,gBACtBmC,iBAAkBlsH,EAAKksH,iBACvBj3D,iBAAkBj1D,EAAKi1D,iBACvBD,kBAAmBh1D,EAAKg1D,kBACxBo3D,oBAAqBpsH,EAAKosH,oBAC1BC,qBAAsBrsH,EAAKqsH,qBAC3Br6F,0BAA2BhyB,EAAKgyB,0BAChC8O,0BAA2B9gC,EAAK8gC,0BAChCwrF,yBAA0BtsH,EAAKxE,MAAM8wH,yBACrCllE,QAAS,CACP+Z,QAAS,GACTjuC,SAAU,GACVqwF,iBAAkB,KAClByI,aAAchsH,EAAKgsH,cAErB/tE,OAAQ,CACN3yC,KAAM,CACJ0/G,gBAAiB,KACjBL,oBAAqB,KACrBH,oBAAqB,KACrBP,sBAAuB,KACvBsC,uBAAwB,KACxB1C,wBAAyB,KACzBQ,yBAA0B,KAC1B8B,yBAA0B,KAC1BK,iCAAkC,KAClC9C,oBAAqB1pH,EAAK0pH,oBAC1BH,yBAA0BvpH,EAAKupH,0BAEjCr5E,QAAS,CACPu8E,kBAAmBzsH,EAAKysH,kBACxB8E,kBAAmBvxH,EAAKuxH,kBACxB9H,mBAAoBzpH,EAAKypH,mBACzBiB,mBAAoB1qH,EAAK0qH,mBACzB0F,oBAAqBpwH,EAAKowH,oBAC1BpG,qBAAsBhqH,EAAKgqH,qBAC3B0C,sBAAuB1sH,EAAK0sH,sBAC5B9C,uBAAwB5pH,EAAK4pH,uBAC7B+C,uBAAwB3sH,EAAK2sH,uBAC7BrD,wBAAyBtpH,EAAKspH,wBAC9BsD,yBAA0B5sH,EAAK4sH,yBAC/B9B,0BAA2B9qH,EAAK8qH,0BAChC+B,0BAA2B7sH,EAAK6sH,0BAChC3B,2BAA4BlrH,EAAKkrH,2BACjC4B,2BAA4B9sH,EAAK8sH,2BACjC1C,4BAA6BpqH,EAAKoqH,4BAClC4C,gCAAiChtH,EAAKgtH,gCACtCD,gCAAiC/sH,EAAK+sH,gCACtCE,iCAAkCjtH,EAAKitH,iCACvC1C,iCAAkCvqH,EAAKuqH,mCAG3CrhH,YAAa,CACXoC,KAAM,CACJtE,aAAc,MAEhBkmH,KAAM,GACNh9E,QAAS,gFArtDX,IAAM10C,EAAQkB,OAAOC,OAAO,GAAGpB,KAAKC,OACpCA,EAAM07C,UAAY37C,KAAKoC,MAAMu5C,UACzB37C,KAAKsC,eACPrC,EAAM2L,QAAU5L,KAAKoC,MAAMwJ,QAC3B5L,KAAKsC,cAAcC,SAAStC,KAE5BA,EAAM2L,QAAU5L,KAAKoC,MAAMwJ,QAC3B5L,KAAKsC,cAAgB,IAAIE,KAAcvC,mDAKzCD,KAAKyQ,oBAAqB,+CAGR,IAAArL,EAAApF,KAClBA,KAAKyC,YACLzC,KAAKywH,eAGD7iH,OAAOuuD,UACTvuD,OAAOuuD,SAASh0B,GAAG,iBAAnB,eAAAsoC,EAAAtvE,OAAAyyB,EAAA,EAAAzyB,CAAA0wB,EAAAzyB,EAAAyW,KAAqC,SAAAq7D,EAAOnjB,GAAP,OAAAl8B,EAAAzyB,EAAA6W,KAAA,SAAAw8D,GAAA,cAAAA,EAAAt8D,KAAAs8D,EAAAr8D,MAAA,cAAAq8D,EAAAr8D,KAAA,EAC7BhR,EAAKnF,MAAM6zF,gBAAgB,WAC/B1uF,EAAKqrH,iBAF4B,wBAAAh+C,EAAA77D,SAAAs6D,EAAAlxE,SAArC,gBAAAo0E,GAAA,OAAA3D,EAAA35D,MAAA9W,KAAA8E,YAAA,IAOF8I,OAAOyiH,SAAWrwH,KAAKqwH,0CA8rDvB,IAAM+F,EAA+E,kBAA3Cp2H,KAAKoC,MAAMsgD,OAAO3yC,KAAK0/G,iBAAgCzvH,KAAKoC,MAAMsgD,OAAO3yC,KAAK0/G,gBAAgB1qH,OAAO,EACzIsxH,EAAiF,kBAA5Cr2H,KAAKoC,MAAMsgD,OAAO3yC,KAAK8/G,kBAAiC7vH,KAAKoC,MAAMsgD,OAAO3yC,KAAK8/G,iBAAiB9qH,OAAO,EAClJ,OACE1B,EAAAjE,EAAAC,cAAA,WACEgE,EAAAjE,EAAAC,cAAC2wH,GAAyBsG,SAA1Bn1H,OAAAC,OAAA,GACMpB,KAAKC,MADX,CAEEc,MAAOf,KAAKoC,SAEdiB,EAAAjE,EAAAC,cAACk3H,GAADp1H,OAAAC,OAAA,GACMpB,KAAKC,MADX,CAEEyiD,OAAQ1iD,KAAKoC,MAAMsgD,OACnBmJ,QAAS7rD,KAAKoC,MAAMypD,QACpBjgD,QAAS5L,KAAKoC,MAAMwJ,QACpB7F,SAAU/F,KAAKC,MAAM8F,SACrBunH,YAAattH,KAAKoC,MAAMkrH,YACxBjD,aAAcrqH,KAAKC,MAAMoqH,aACzBmE,gBAAiBxuH,KAAKoC,MAAMosH,gBAC5BG,iBAAkB3uH,KAAKoC,MAAMusH,iBAC7BG,yBAA0B9uH,KAAKoC,MAAM0sH,yBACrC8B,yBAA0B5wH,KAAKoC,MAAMwuH,4BAEvCvtH,EAAAjE,EAAAC,cAACm3H,GAAD,CACE9zE,OAAQ1iD,KAAKoC,MAAMsgD,OACnB92C,QAAS5L,KAAKoC,MAAMwJ,QACpBu+G,QAASnqH,KAAKC,MAAMkqH,QACpB5B,OAAQ8N,IAEVhzH,EAAAjE,EAAAC,cAACo3H,GAAD,CACE/zE,OAAQ1iD,KAAKoC,MAAMsgD,OACnB92C,QAAS5L,KAAKoC,MAAMwJ,QACpBu+G,QAASnqH,KAAKC,MAAMkqH,QACpB5B,OAAQ6N,EACR/L,aAAcrqH,KAAKC,MAAMoqH,eAE3BhnH,EAAAjE,EAAAC,cAACq3H,GAAD,CACEt3G,KAAMpf,KAAKoC,MAAMgd,KACjB/Y,MAAOrG,KAAKC,MAAMoG,MAClBwlD,QAAS7rD,KAAKoC,MAAMypD,kBAxwDEi8D,IAAM9mH,WAAhC8wH,GACG6E,SAAW3G,GAAyB2G,SA8wD9B7E,6BCzsDA/H,8MA/Jb3nH,MAAQ,KAKRE,cAAgB,gFAEVtC,KAAKsC,cACPtC,KAAKsC,cAAcC,SAASvC,KAAKC,OAEjCD,KAAKsC,cAAgB,IAAIE,KAAcxC,KAAKC,4JAK9CD,KAAKyC,kQAKLzC,KAAKyC,iMAGkBxD,EAAWC,sEAElCc,KAAKyC,aAEDzC,KAAKC,MAAM4rD,SAAY7rD,KAAKC,MAAM4rD,QAAQm8D,2DACrC,yIAIF,IAAA5iH,EAAApF,KAED42H,EAAoB52H,KAAKsC,cAAcwJ,gBAAgB,CAAC,aAAa,YAE3E,OACEzI,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE1D,MAAO,CACLkQ,KAAM,IACNqD,MAAO,IACP7N,OAAQ,GACRC,SAAU,aAGZlC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE8L,EAAG,EACH3P,WAAY,SACZM,eAAgB,SAChBO,gBAAiB,YACjBZ,cAAe,CAAC,SAAS,QAEzB2D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEpD,MAAO,QACPO,UAAW,UAFb,sCAMA4C,EAAAjE,EAAAC,cAACkP,GAAA,EAAD,CACE5O,GAAI,EACJ+F,GAAI,EACJQ,GAAI,CAAC,EAAE,GACPwB,GAAI,CAAC,EAAE,GACP6lC,GAAI,OACJrtC,MAAO,QACPN,MAAO,CACLuD,QAAQ,OACR9C,aAAa,MACbX,cAAc,MACdD,WAAW,YAEba,gBAAiB,UACjBmjB,KAAM,uEAdR,YAiBEpgB,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEoE,GAAI,EACJxE,KAAM,QACNhD,MAAO,QACP8F,KAAM,yBAKZ3C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE2J,GAAI,CAAC,EAAE,GACPxJ,GAAI,OACJ6mB,GAAI,cACJ9qB,MAAO,CAAC,MAAM,QACduE,SAAU,CAAC,OAAO,SAClBtE,WAAY,CAAC,SAAS,eAEtB4D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEoE,GAAI,CAAC,EAAG,GACRlI,MAAO,CAAC,GAAK,MAEb6D,EAAAjE,EAAAC,cAACstH,GAAA,EAAD,CACEzoD,GAAG,KAEH7gE,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEiC,SAAU,WACV6O,IAAK,kBACLhU,OAAQ,CAAC,OAAO,YAIpBiD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,CAAC,GAAI,EAAE,IACdC,WAAY,SACZC,cAAe,MACfK,eAAgB,YAGd62H,GACEvzH,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEnD,GAAI,EACJI,SAAU,EACVL,MAAO,QACP4H,WAAY,QACZwG,WAAY,YACZ7N,UAAW,CAAC,SAAS,QACrBgB,QAAU,SAAC+F,GAAD,OAAOoG,OAAOsgD,SAASrrD,KAAK,iBAPxC,eAaD7C,KAAKC,MAAM8F,UACV1C,EAAAjE,EAAAC,cAAAgE,EAAAjE,EAAAkpC,SAAA,KACEjlC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEnD,GAAI,EACJI,SAAU,EACVL,MAAO,QACP4H,WAAY,QACZwG,WAAY,YACZ7N,UAAW,CAAC,SAAS,QACrBgB,QAAS,SAAC+F,GAAOpC,EAAK9C,cAAc2hE,SAASt0C,SAASC,eAAe,YAAYinG,UAAU,OAP7F,cAWAxzH,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE/C,SAAU,EACVL,MAAO,QACP4H,WAAY,QACZwG,WAAY,YACZ7N,UAAW,CAAC,SAAS,QACrBgB,QAAS,SAAC+F,GAAOpC,EAAK9C,cAAc2hE,SAASt0C,SAASC,eAAe,OAAOinG,UAAU,OANxF,mBA7IC/O,IAAM9mH,sBCNZ,SAAS81H,KAAc,IAC5BC,EAAaC,eAAbD,SAMR,OAJAE,oBAAU,WACRrpH,OAAOq2D,SAAS,EAAG,IAClB,CAAC8yD,IAEG,+BCwCMG,8MAxCb90H,MAAQ,2EAGN,OACEiB,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,KACED,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAKC,UAAWC,KAAO1B,gBAAiB6D,GAAI,CAAC,EAAE,GAAIsH,GAAI,CAAC,MAAO,QAC7D5J,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAKC,UAAWC,KAAOzB,iBACvBsB,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAKiC,SAAU,WAAYD,OAAQ,IACjCjC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM5D,cAAe,SAAUD,WAAY,SAAUsE,SAAU,CAAC,OAAQ,QAASN,GAAI,OAAQhD,UAAW,SAAUwM,GAAI,CAAC,MAAO,QAC5H5J,EAAAjE,EAAAC,cAACiE,EAAA,EAAQ+rB,GAAT,CAAY/gB,WAAY,YAAa2gB,WAAY,QAAS1vB,GAAI,QAASgB,SAAU,CAAC,QAAQ,GAAIE,UAAW,SAAUP,MAAO,SAA1H,4BAGAmD,EAAAjE,EAAAC,cAACiE,EAAA,EAAQ+K,GAAT,CAAYC,WAAY,YAAa2gB,WAAY,QAAS1vB,GAAI,QAASiB,WAAY,EAAGD,SAAU,CAAC,QAAQ,GAAIE,UAAW,SAAUP,MAAO,SAAzI,wDAGAmD,EAAAjE,EAAAC,cAACstH,GAAA,EAAD,CAAYzoD,GAAG,IAAItkE,MAAO,CAAC0kC,eAAe,SACxCjhC,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEC,UAAW4zH,KAAc3sG,eACzBnqB,aAAc,EACd6C,MAAMlD,KAAKC,MAAM8F,SAAW,UAC5BzE,UAAW,OACXwrH,cAAe,QACftsH,WAAY,EACZD,SAAU,CAAC,EAAE,GACbkD,GAAI,OACJkC,GAAI,CAAC,EAAE,GACPO,GAAI,GAVN,sBAkBR7C,EAAAjE,EAAAC,cAAC+iH,EAAA,EAAD,cAnCmBphH,aCyCZo2H,8MA9CbC,sBAAwB,WACtB,IAAIC,EAAc,OAClB,GAAI7yH,EAAKxE,MAAM4rD,QACb,OAAQpnD,EAAKxE,MAAM4rD,QAAQ7+C,IACzB,KAAK,EACHsqH,EAAc,UACd,MACF,KAAK,EACHA,EAAc,OACd,MACF,KAAK,EACHA,EAAc,UACd,MACF,KAAK,EACHA,EAAc,UACd,MACF,KAAK,GACHA,EAAc,UACd,MACF,QACEA,EAAc,OAIpB,OAAOA,2EAIP,IAAMC,EAAgB,CACpBl3H,aAAc,MACdC,gBAAiBN,KAAKq3H,wBACtBj3H,OAAQ,MACRZ,MAAO,OAGT,OACE6D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM7D,WAAY,UAChB4D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAK1D,MAAO23H,EAAep3H,GAAI,IAC/BkD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM1D,MAAO,CAAEc,cAAe,eAC3BV,KAAKC,MAAM4rD,QAAQ7lD,cAxCA8hH,IAAM9mH,WCW9Bw2H,GAAkB,SAAAv3H,GAAK,OAC3BoD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAK4C,GAAI,EAAGC,UAAW,EAAG6M,YAAY,UAAU/F,GAAI,GAClD5J,EAAAjE,EAAAC,cAACiE,EAAA,EAAQouC,GAAT,CAAYjxC,UAAW,UAAvB,cACA4C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE7B,QAASxB,EAAMyiD,OAAO/N,QAAQw8E,sBAC9BjuH,KAAK,QACL/C,GAAI,EACJZ,GAAI,GAJN,0BASA8D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE7B,QAASxB,EAAMyiD,OAAO/N,QAAQkgF,oBAC9B3xH,KAAK,QACL/C,GAAI,EACJZ,GAAI,GAJN,cAQA8D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEJ,KAAK,QACLzB,QAASxB,EAAMyiD,OAAO/N,QAAQ48E,2BAC9BpxH,GAAI,EACJZ,GAAI,GAJN,sBAQA8D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEJ,KAAK,QACLzB,QAASxB,EAAMyiD,OAAO/N,QAAQ68E,gCAC9BrxH,GAAI,EACJZ,GAAI,GAJN,uBAQA8D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEJ,KAAK,QACLzB,QAAS,SAAA6/B,GACPrhC,EAAMyiD,OAAO/N,QAAQu8E,kBAAkB5vF,IAEzCnhC,GAAI,EACJZ,GAAI,GANN,aAUA8D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEJ,KAAK,QACLzB,QAASxB,EAAMyiD,OAAO/N,QAAQy8E,uBAC9BjxH,GAAI,EACJZ,GAAI,GAJN,oBAQA8D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEJ,KAAK,QACLzB,QAASxB,EAAMyiD,OAAO/N,QAAQqhF,kBAC9B71H,GAAI,EACJZ,GAAI,GAJN,eAuOWk4H,oLA1NX,OACEp0H,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM9D,MAAO,QAASiE,GAAI,OAAQkC,GAAI,GACpCtC,EAAAjE,EAAAC,cAACiE,EAAA,EAAQ+K,GAAT,CAAY5N,UAAW,UAAvB,iBAEA4C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,KACED,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM7D,WAAY,UAChB4D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM0C,KAAK,QAAQ9F,MAAO,QAASC,GAAI,IACvCkD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,wCAIJD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,KACED,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM7D,WAAY,UACfO,KAAKC,MAAMmf,KACV/b,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM0C,KAAK,QAAQ9F,MAAO,QAASC,GAAI,IAEvCkD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM0C,KAAK,QAAQ9F,MAAO,MAAOC,GAAI,IAEvCkD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,kCAGAtD,KAAKC,MAAMmf,KAgBT,KAfF/b,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMoE,GAAI,EAAGjI,WAAY,SAAUM,eAAgB,iBACjDsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM7D,WAAY,UAChB4D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM0C,KAAK,OAAO7F,GAAI,EAAGD,MAAM,SAC/BmD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMpD,MAAM,QAAZ,8BAGFmD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEmgB,KAAK,4FACLjV,OAAO,SAASC,IAAI,gCAEpBpL,EAAAjE,EAAAC,cAACiE,EAAA,EAAOwlH,QAAR,CAAgB5lH,KAAK,SAArB,6BAQPlD,KAAKC,MAAMmf,KACV/b,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEoC,GAAI,EACJ0B,GAAI,EACJjB,UAAW,EACX88B,aAAc,EACdjwB,YAAa,UACbvS,UAAW,SACXV,eAAgB,eAChBN,WAAY,UAEZ4D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEJ,KAAK,QACLzB,QAASzB,KAAKC,MAAMslC,0BACpBjgB,UAAWtlB,KAAKC,MAAMmf,MAHxB,sBAOA/b,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,eACAD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAQJ,KAAK,QAAQoiB,UAAQ,GAA7B,6BAIA,KAEJjiB,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,KACED,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM7D,WAAY,UACfO,KAAKC,MAAM4rD,QAAQm8D,iBAClB3kH,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM0C,KAAK,QAAQ9F,MAAO,QAASC,GAAI,IAEvCkD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM0C,KAAK,QAAQ9F,MAAO,MAAOC,GAAI,IAEvCkD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,yBAGDtD,KAAKC,MAAMmf,OAASpf,KAAKC,MAAM4rD,QAAQm8D,iBACtC3kH,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMoE,GAAI,EAAGjI,WAAY,SAAUM,eAAgB,iBACjDsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM7D,WAAY,UAChB4D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM0C,KAAK,OAAO7F,GAAI,EAAGD,MAAM,SAC/BmD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,KACED,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM7D,WAAY,UAChB4D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEnD,GAAI,EACJD,MAAM,OACNN,MAAO,CAAEc,cAAe,eAH1B,oBAOA2C,EAAAjE,EAAAC,cAACq4H,GAAD,CAAiB7rE,QAAS7rD,KAAKC,MAAM4rD,QAAQ+Z,WAE/CviE,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM7D,WAAY,UAChB4D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEnD,GAAI,EACJD,MAAM,OACNN,MAAO,CAAEc,cAAe,eAH1B,qBAOA2C,EAAAjE,EAAAC,cAACq4H,GAAD,CAAiB7rE,QAAS7rD,KAAKC,MAAM4rD,QAAQl0B,cAKnDt0B,EAAAjE,EAAAC,cAACiE,EAAA,EAAOwlH,QAAR,CAAgB5lH,KAAK,QAAQzB,QAASzB,KAAKC,MAAMwwH,cAAjD,kBAIA,KACHzwH,KAAKC,MAAMmf,MAAQpf,KAAKC,MAAM+nH,iBAC7B3kH,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMoE,GAAI,EAAGjI,WAAY,UACvB4D,EAAAjE,EAAAC,cAACq4H,GAAD,CAAiB7rE,QAAS7rD,KAAKC,MAAM4rD,QAAQ+Z,WAE7C,MAGNviE,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,KACED,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM7D,WAAY,UACfO,KAAKC,MAAM2L,SAAW5L,KAAKC,MAAM0uH,iBAChCtrH,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM0C,KAAK,QAAQ9F,MAAO,QAASC,GAAI,IAEvCkD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM0C,KAAK,QAAQ9F,MAAO,MAAOC,GAAI,IAEvCkD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,uCAGAtD,KAAKC,MAAM2L,UACb5L,KAAKC,MAAMmf,MACVpf,KAAKC,MAAMgvH,oBAWR,KAVF5rH,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMoE,GAAI,EAAGjI,WAAY,SAAUM,eAAgB,iBACjDsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM7D,WAAY,UAChB4D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM0C,KAAK,OAAO7F,GAAI,EAAGD,MAAM,SAC/BmD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMpD,MAAM,QAAZ,gCAGFmD,EAAAjE,EAAAC,cAACiE,EAAA,EAAOwlH,QAAR,CAAgB5lH,KAAK,QAAQzB,QAASzB,KAAKC,MAAMqtH,aAAjD,YAKHttH,KAAKC,MAAM2L,SAAW5L,KAAKC,MAAMmf,KAChC/b,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMoE,GAAI,EAAGjI,WAAY,UACvB4D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM0C,KAAK,QAAQ9F,MAAO,QAASC,GAAI,IACvCkD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,KACED,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMpD,MAAM,QAAZ,oBAAqCF,KAAKC,MAAM2L,SAChDvI,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMpD,MAAOF,KAAKC,MAAMqwH,kBAAoB,MAAQ,QAApD,mBACmBtwH,KAAKC,MAAMmwH,kBAIhC,KAEHpwH,KAAKC,MAAMgvH,oBACV5rH,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMoE,GAAI,EAAG3H,eAAgB,iBAC3BsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM7D,WAAY,UAChB4D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM0C,KAAK,QAAQ7F,GAAI,EAAGD,MAAM,QAChCmD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMpD,MAAM,OAAZ,kCAGFmD,EAAAjE,EAAAC,cAACiE,EAAA,EAAOwlH,QAAR,CAAgB5lH,KAAK,QAAQzB,QAASzB,KAAKC,MAAMqtH,aAAjD,YAIA,KAE8B,OAAhCttH,KAAKC,MAAM0uH,mBACqB,IAAhC3uH,KAAKC,MAAM0uH,mBACb3uH,KAAKC,MAAMmf,KAgBP,KAfF/b,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEoE,GAAI,EACJN,GAAI,EACJ3H,WAAY,SACZM,eAAgB,iBAEhBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM7D,WAAY,UAChB4D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM0C,KAAK,OAAO7F,GAAI,EAAGD,MAAM,SAC/BmD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMpD,MAAM,QAAZ,yBAGFmD,EAAAjE,EAAAC,cAACiE,EAAA,EAAOwlH,QAAR,CAAgB5lH,KAAK,QAAQzB,QAASzB,KAAKC,MAAMuuH,iBAAjD,cAM6B,IAAhCxuH,KAAKC,MAAM0uH,iBACVtrH,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACEoE,GAAI,EACJN,GAAI,EACJ3H,WAAY,SACZM,eAAgB,iBAEhBsD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM7D,WAAY,UAChB4D,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM0C,KAAK,QAAQ7F,GAAI,EAAGD,MAAM,QAChCmD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMpD,MAAM,OAAZ,yBAGFmD,EAAAjE,EAAAC,cAACiE,EAAA,EAAOwlH,QAAR,CAAgB5lH,KAAK,QAAQzB,QAASzB,KAAKC,MAAMuuH,iBAAjD,aAIA,MAEmC,IAAtCxuH,KAAKC,MAAM+wH,uBACV3tH,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMoE,GAAI,GACRrE,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM0C,KAAK,QAAQ7F,GAAI,EAAGD,MAAM,QAChCmD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMpD,MAAM,OAAZ,yBAEA,MAGNmD,EAAAjE,EAAAC,cAACs4H,GAAoB33H,KAAKC,OAE1BoD,EAAAjE,EAAAC,cAACiE,EAAA,EAAagzH,SAAd,CAAuBxsF,IAAK,SAAA8tF,GAAI,OAAKhqH,OAAOisD,cAAgB+9D,aAtNzC9P,IAAM9mH,+BCqoClByvD,GAAA,CAAEh9C,QAptCD,6CAotCUwd,IAntCd,CACV,CACE4mG,UAAY,EACZv8E,OAAU,GACVt1C,KAAQ,OACR8xH,QAAW,CACT,CACE9xH,KAAQ,GACR8I,KAAQ,WAGZipH,SAAW,EACXv2C,UAAa,aACbw2C,gBAAmB,OACnBlpH,KAAQ,YAEV,CACE+oH,UAAY,EACZv8E,OAAU,CACR,CACEt1C,KAAQ,UACR8I,KAAQ,WAEV,CACE9I,KAAQ,SACR8I,KAAQ,YAGZ9I,KAAQ,UACR8xH,QAAW,CACT,CACE9xH,KAAQ,GACR8I,KAAQ,SAGZipH,SAAW,EACXv2C,UAAa,aACbw2C,gBAAmB,aACnBlpH,KAAQ,YAEV,CACE+oH,UAAY,EACZv8E,OAAU,GACVt1C,KAAQ,wBACR8xH,QAAW,CACT,CACE9xH,KAAQ,GACR8I,KAAQ,YAGZipH,SAAW,EACXv2C,UAAa,aACbw2C,gBAAmB,OACnBlpH,KAAQ,YAEV,CACE+oH,UAAY,EACZv8E,OAAU,CACR,CACEt1C,KAAQ,UACR8I,KAAQ,YAGZ9I,KAAQ,uBACR8xH,QAAW,CACT,CACE9xH,KAAQ,GACR8I,KAAQ,YAGZipH,SAAW,EACXv2C,UAAa,aACbw2C,gBAAmB,aACnBlpH,KAAQ,YAEV,CACE+oH,UAAY,EACZv8E,OAAU,GACVt1C,KAAQ,cACR8xH,QAAW,CACT,CACE9xH,KAAQ,GACR8I,KAAQ,YAGZipH,SAAW,EACXv2C,UAAa,aACbw2C,gBAAmB,OACnBlpH,KAAQ,YAEV,CACE+oH,UAAY,EACZv8E,OAAU,GACVt1C,KAAQ,qBACR8xH,QAAW,CACT,CACE9xH,KAAQ,GACR8I,KAAQ,YAGZipH,SAAW,EACXv2C,UAAa,aACbw2C,gBAAmB,OACnBlpH,KAAQ,YAEV,CACE+oH,UAAY,EACZv8E,OAAU,CACR,CACEt1C,KAAQ,MACR8I,KAAQ,WAEV,CACE9I,KAAQ,MACR8I,KAAQ,WAEV,CACE9I,KAAQ,SACR8I,KAAQ,YAGZ9I,KAAQ,eACR8xH,QAAW,CACT,CACE9xH,KAAQ,GACR8I,KAAQ,SAGZipH,SAAW,EACXv2C,UAAa,aACbw2C,gBAAmB,aACnBlpH,KAAQ,YAEV,CACE+oH,UAAY,EACZv8E,OAAU,GACVt1C,KAAQ,eACR8xH,QAAW,CACT,CACE9xH,KAAQ,GACR8I,KAAQ,YAGZipH,SAAW,EACXv2C,UAAa,aACbw2C,gBAAmB,OACnBlpH,KAAQ,YAEV,CACE+oH,UAAY,EACZv8E,OAAU,GACVt1C,KAAQ,WACR8xH,QAAW,CACT,CACE9xH,KAAQ,GACR8I,KAAQ,YAGZipH,SAAW,EACXv2C,UAAa,aACbw2C,gBAAmB,OACnBlpH,KAAQ,YAEV,CACE+oH,UAAY,EACZv8E,OAAU,CACR,CACEt1C,KAAQ,QACR8I,KAAQ,YAGZ9I,KAAQ,sBACR8xH,QAAW,CACT,CACE9xH,KAAQ,GACR8I,KAAQ,YAGZipH,SAAW,EACXv2C,UAAa,aACbw2C,gBAAmB,aACnBlpH,KAAQ,YAEV,CACE+oH,UAAY,EACZv8E,OAAU,GACVt1C,KAAQ,UACR8xH,QAAW,CACT,CACE9xH,KAAQ,GACR8I,KAAQ,YAGZipH,SAAW,EACXv2C,UAAa,aACbw2C,gBAAmB,OACnBlpH,KAAQ,YAEV,CACE+oH,UAAY,EACZv8E,OAAU,CACR,CACEt1C,KAAQ,iBACR8I,KAAQ,YAGZ9I,KAAQ,kBACR8xH,QAAW,CACT,CACE9xH,KAAQ,GACR8I,KAAQ,YAGZipH,SAAW,EACXv2C,UAAa,aACbw2C,gBAAmB,aACnBlpH,KAAQ,YAEV,CACE+oH,UAAY,EACZv8E,OAAU,GACVt1C,KAAQ,eACR8xH,QAAW,CACT,CACE9xH,KAAQ,GACR8I,KAAQ,YAGZipH,SAAW,EACXv2C,UAAa,aACbw2C,gBAAmB,OACnBlpH,KAAQ,YAEV,CACE+oH,UAAY,EACZv8E,OAAU,GACVt1C,KAAQ,cACR8xH,QAAW,CACT,CACE9xH,KAAQ,GACR8I,KAAQ,YAGZipH,SAAW,EACXv2C,UAAa,aACbw2C,gBAAmB,OACnBlpH,KAAQ,YAEV,CACE+oH,UAAY,EACZv8E,OAAU,CACR,CACEt1C,KAAQ,eACR8I,KAAQ,YAGZ9I,KAAQ,kBACR8xH,QAAW,CACT,CACE9xH,KAAQ,GACR8I,KAAQ,YAGZipH,SAAW,EACXv2C,UAAa,aACbw2C,gBAAmB,aACnBlpH,KAAQ,YAEV,CACE+oH,UAAY,EACZv8E,OAAU,GACVt1C,KAAQ,8BACR8xH,QAAW,CACT,CACE9xH,KAAQ,GACR8I,KAAQ,YAGZipH,SAAW,EACXv2C,UAAa,aACbw2C,gBAAmB,OACnBlpH,KAAQ,YAEV,CACE+oH,UAAY,EACZv8E,OAAU,GACVt1C,KAAQ,qBACR8xH,QAAW,CACT,CACE9xH,KAAQ,GACR8I,KAAQ,YAGZipH,SAAW,EACXv2C,UAAa,aACbw2C,gBAAmB,OACnBlpH,KAAQ,YAEV,CACE+oH,UAAY,EACZv8E,OAAU,GACVt1C,KAAQ,aACR8xH,QAAW,CACT,CACE9xH,KAAQ,GACR8I,KAAQ,YAGZipH,SAAW,EACXv2C,UAAa,aACbw2C,gBAAmB,OACnBlpH,KAAQ,YAEV,CACE+oH,UAAY,EACZv8E,OAAU,CACR,CACEt1C,KAAQ,QACR8I,KAAQ,YAGZ9I,KAAQ,YACR8xH,QAAW,CACT,CACE9xH,KAAQ,GACR8I,KAAQ,YAGZipH,SAAW,EACXv2C,UAAa,aACbw2C,gBAAmB,OACnBlpH,KAAQ,YAEV,CACE+oH,UAAY,EACZv8E,OAAU,GACVt1C,KAAQ,sBACR8xH,QAAW,CACT,CACE9xH,KAAQ,GACR8I,KAAQ,YAGZipH,SAAW,EACXv2C,UAAa,aACbw2C,gBAAmB,aACnBlpH,KAAQ,YAEV,CACE+oH,UAAY,EACZv8E,OAAU,GACVt1C,KAAQ,gBACR8xH,QAAW,CACT,CACE9xH,KAAQ,GACR8I,KAAQ,YAGZipH,SAAW,EACXv2C,UAAa,aACbw2C,gBAAmB,OACnBlpH,KAAQ,YAEV,CACE+oH,UAAY,EACZv8E,OAAU,GACVt1C,KAAQ,SACR8xH,QAAW,CACT,CACE9xH,KAAQ,GACR8I,KAAQ,WAGZipH,SAAW,EACXv2C,UAAa,aACbw2C,gBAAmB,OACnBlpH,KAAQ,YAEV,CACE+oH,UAAY,EACZv8E,OAAU,CACR,CACEt1C,KAAQ,UACR8I,KAAQ,YAGZ9I,KAAQ,sBACR8xH,QAAW,CACT,CACE9xH,KAAQ,GACR8I,KAAQ,YAGZipH,SAAW,EACXv2C,UAAa,aACbw2C,gBAAmB,OACnBlpH,KAAQ,YAEV,CACE+oH,UAAY,EACZv8E,OAAU,GACVt1C,KAAQ,iBACR8xH,QAAW,CACT,CACE9xH,KAAQ,GACR8I,KAAQ,YAGZipH,SAAW,EACXv2C,UAAa,aACbw2C,gBAAmB,aACnBlpH,KAAQ,YAEV,CACE+oH,UAAY,EACZv8E,OAAU,CACR,CACEt1C,KAAQ,MACR8I,KAAQ,WAEV,CACE9I,KAAQ,SACR8I,KAAQ,YAGZ9I,KAAQ,WACR8xH,QAAW,CACT,CACE9xH,KAAQ,GACR8I,KAAQ,SAGZipH,SAAW,EACXv2C,UAAa,aACbw2C,gBAAmB,aACnBlpH,KAAQ,YAEV,CACE+oH,UAAY,EACZv8E,OAAU,GACVt1C,KAAQ,cACR8xH,QAAW,CACT,CACE9xH,KAAQ,GACR8I,KAAQ,YAGZipH,SAAW,EACXv2C,UAAa,aACbw2C,gBAAmB,OACnBlpH,KAAQ,YAEV,CACE+oH,UAAY,EACZv8E,OAAU,GACVt1C,KAAQ,qBACR8xH,QAAW,CACT,CACE9xH,KAAQ,GACR8I,KAAQ,YAGZipH,SAAW,EACXv2C,UAAa,aACbw2C,gBAAmB,OACnBlpH,KAAQ,YAEV,CACE+oH,UAAY,EACZv8E,OAAU,CACR,CACEt1C,KAAQ,aACR8I,KAAQ,WAEV,CACE9I,KAAQ,WACR8I,KAAQ,WAEV,CACE9I,KAAQ,cACR8I,KAAQ,YAGZ9I,KAAQ,QACR8xH,QAAW,CACT,CACE9xH,KAAQ,GACR8I,KAAQ,YAGZipH,SAAW,EACXv2C,UAAa,aACbw2C,gBAAmB,aACnBlpH,KAAQ,YAEV,CACE+oH,UAAY,EACZv8E,OAAU,CACR,CACEt1C,KAAQ,kBACR8I,KAAQ,YAGZ9I,KAAQ,mBACR8xH,QAAW,CACT,CACE9xH,KAAQ,GACR8I,KAAQ,YAGZipH,SAAW,EACXv2C,UAAa,aACbw2C,gBAAmB,aACnBlpH,KAAQ,YAEV,CACE+oH,UAAY,EACZv8E,OAAU,GACVt1C,KAAQ,sBACR8xH,QAAW,CACT,CACE9xH,KAAQ,GACR8I,KAAQ,YAGZipH,SAAW,EACXv2C,UAAa,aACbw2C,gBAAmB,aACnBlpH,KAAQ,YAEV,CACE+oH,UAAY,EACZv8E,OAAU,CACR,CACEt1C,KAAQ,UACR8I,KAAQ,YAGZ9I,KAAQ,qBACR8xH,QAAW,CACT,CACE9xH,KAAQ,GACR8I,KAAQ,WAEV,CACE9I,KAAQ,GACR8I,KAAQ,WAEV,CACE9I,KAAQ,GACR8I,KAAQ,WAEV,CACE9I,KAAQ,GACR8I,KAAQ,YAGZipH,SAAW,EACXv2C,UAAa,aACbw2C,gBAAmB,OACnBlpH,KAAQ,YAEV,CACE+oH,UAAY,EACZv8E,OAAU,CACR,CACEt1C,KAAQ,QACR8I,KAAQ,WAEV,CACE9I,KAAQ,UACR8I,KAAQ,YAGZ9I,KAAQ,YACR8xH,QAAW,CACT,CACE9xH,KAAQ,GACR8I,KAAQ,YAGZipH,SAAW,EACXv2C,UAAa,aACbw2C,gBAAmB,OACnBlpH,KAAQ,YAEV,CACE+oH,UAAY,EACZv8E,OAAU,GACVt1C,KAAQ,eACR8xH,QAAW,CACT,CACE9xH,KAAQ,GACR8I,KAAQ,YAGZipH,SAAW,EACXv2C,UAAa,aACbw2C,gBAAmB,aACnBlpH,KAAQ,YAEV,CACE+oH,UAAY,EACZv8E,OAAU,CACR,CACEt1C,KAAQ,uBACR8I,KAAQ,YAGZ9I,KAAQ,wBACR8xH,QAAW,CACT,CACE9xH,KAAQ,GACR8I,KAAQ,YAGZipH,SAAW,EACXv2C,UAAa,aACbw2C,gBAAmB,aACnBlpH,KAAQ,YAEV,CACE+oH,UAAY,EACZv8E,OAAU,GACVt1C,KAAQ,oBACR8xH,QAAW,CACT,CACE9xH,KAAQ,GACR8I,KAAQ,YAGZipH,SAAW,EACXv2C,UAAa,aACbw2C,gBAAmB,OACnBlpH,KAAQ,YAEV,CACE+oH,UAAY,EACZv8E,OAAU,GACVt1C,KAAQ,QACR8xH,QAAW,CACT,CACE9xH,KAAQ,GACR8I,KAAQ,YAGZipH,SAAW,EACXv2C,UAAa,aACbw2C,gBAAmB,OACnBlpH,KAAQ,YAEV,CACE+oH,UAAY,EACZv8E,OAAU,GACVt1C,KAAQ,qBACR8xH,QAAW,CACT,CACE9xH,KAAQ,GACR8I,KAAQ,YAGZipH,SAAW,EACXv2C,UAAa,aACbw2C,gBAAmB,OACnBlpH,KAAQ,YAEV,CACE+oH,UAAY,EACZv8E,OAAU,CACR,CACEt1C,KAAQ,2BACR8I,KAAQ,YAGZ9I,KAAQ,oBACR8xH,QAAW,CACT,CACE9xH,KAAQ,GACR8I,KAAQ,YAGZipH,SAAW,EACXv2C,UAAa,aACbw2C,gBAAmB,aACnBlpH,KAAQ,YAEV,CACE+oH,UAAY,EACZv8E,OAAU,GACVt1C,KAAQ,WACR8xH,QAAW,CACT,CACE9xH,KAAQ,GACR8I,KAAQ,SAGZipH,SAAW,EACXv2C,UAAa,aACbw2C,gBAAmB,OACnBlpH,KAAQ,YAEV,CACEwsC,OAAU,CACR,CACEt1C,KAAQ,cACR8I,KAAQ,WAEV,CACE9I,KAAQ,eACR8I,KAAQ,WAEV,CACE9I,KAAQ,qBACR8I,KAAQ,WAEV,CACE9I,KAAQ,+BACR8I,KAAQ,WAEV,CACE9I,KAAQ,QACR8I,KAAQ,UAEV,CACE9I,KAAQ,UACR8I,KAAQ,UAEV,CACE9I,KAAQ,YACR8I,KAAQ,YAGZipH,SAAW,EACXv2C,UAAa,cACbw2C,gBAAmB,aACnBlpH,KAAQ,eAEV,CACEmpH,WAAa,EACb38E,OAAU,CACR,CACE48E,SAAW,EACXlyH,KAAQ,sBACR8I,KAAQ,WAEV,CACEopH,SAAW,EACXlyH,KAAQ,cACR8I,KAAQ,WAEV,CACEopH,SAAW,EACXlyH,KAAQ,eACR8I,KAAQ,YAGZ9I,KAAQ,iBACRw7E,UAAa,qEACb1yE,KAAQ,SAEV,CACEmpH,WAAa,EACb38E,OAAU,CACR,CACE48E,SAAW,EACXlyH,KAAQ,SACR8I,KAAQ,WAEV,CACEopH,SAAW,EACXlyH,KAAQ,aACR8I,KAAQ,WAEV,CACEopH,SAAW,EACXlyH,KAAQ,aACR8I,KAAQ,YAGZ9I,KAAQ,OACRw7E,UAAa,qEACb1yE,KAAQ,SAEV,CACEmpH,WAAa,EACb38E,OAAU,CACR,CACE48E,SAAW,EACXlyH,KAAQ,WACR8I,KAAQ,WAEV,CACEopH,SAAW,EACXlyH,KAAQ,eACR8I,KAAQ,WAEV,CACEopH,SAAW,EACXlyH,KAAQ,eACR8I,KAAQ,YAGZ9I,KAAQ,SACRw7E,UAAa,qEACb1yE,KAAQ,SAEV,CACEmpH,WAAa,EACb38E,OAAU,CACR,CACE48E,SAAW,EACXlyH,KAAQ,WACR8I,KAAQ,WAEV,CACEopH,SAAW,EACXlyH,KAAQ,eACR8I,KAAQ,WAEV,CACEopH,SAAW,EACXlyH,KAAQ,iBACR8I,KAAQ,WAEV,CACEopH,SAAW,EACXlyH,KAAQ,eACR8I,KAAQ,YAGZ9I,KAAQ,SACRw7E,UAAa,qEACb1yE,KAAQ,SAEV,CACEmpH,WAAa,EACb38E,OAAU,CACR,CACE48E,SAAW,EACXlyH,KAAQ,QACR8I,KAAQ,WAEV,CACEopH,SAAW,EACXlyH,KAAQ,WACR8I,KAAQ,WAEV,CACEopH,SAAW,EACXlyH,KAAQ,cACR8I,KAAQ,WAEV,CACEopH,SAAW,EACXlyH,KAAQ,iBACR8I,KAAQ,WAEV,CACEopH,SAAW,EACXlyH,KAAQ,eACR8I,KAAQ,YAGZ9I,KAAQ,cACRw7E,UAAa,qEACb1yE,KAAQ,SAEV,CACEmpH,WAAa,EACb38E,OAAU,CACR,CACE48E,SAAW,EACXlyH,KAAQ,aACR8I,KAAQ,WAEV,CACEopH,SAAW,EACXlyH,KAAQ,WACR8I,KAAQ,WAEV,CACEopH,SAAW,EACXlyH,KAAQ,cACR8I,KAAQ,WAEV,CACEopH,SAAW,EACXlyH,KAAQ,mBACR8I,KAAQ,WAEV,CACEopH,SAAW,EACXlyH,KAAQ,cACR8I,KAAQ,YAGZ9I,KAAQ,kBACRw7E,UAAa,qEACb1yE,KAAQ,SAEV,CACEmpH,WAAa,EACb38E,OAAU,CACR,CACE48E,SAAW,EACXlyH,KAAQ,kBACR8I,KAAQ,WAEV,CACEopH,SAAW,EACXlyH,KAAQ,kBACR8I,KAAQ,YAGZ9I,KAAQ,kBACRw7E,UAAa,qEACb1yE,KAAQ,SAEV,CACEmpH,WAAa,EACb38E,OAAU,CACR,CACE48E,SAAW,EACXlyH,KAAQ,WACR8I,KAAQ,WAEV,CACEopH,SAAW,EACXlyH,KAAQ,WACR8I,KAAQ,YAGZ9I,KAAQ,WACRw7E,UAAa,qEACb1yE,KAAQ,SAEV,CACEmpH,WAAa,EACb38E,OAAU,CACR,CACE48E,SAAW,EACXlyH,KAAQ,iBACR8I,KAAQ,WAEV,CACEopH,SAAW,EACXlyH,KAAQ,iBACR8I,KAAQ,YAGZ9I,KAAQ,iBACRw7E,UAAa,qEACb1yE,KAAQ,SAEV,CACEmpH,WAAa,EACb38E,OAAU,CACR,CACE48E,SAAW,EACXlyH,KAAQ,uBACR8I,KAAQ,WAEV,CACEopH,SAAW,EACXlyH,KAAQ,uBACR8I,KAAQ,YAGZ9I,KAAQ,6BACRw7E,UAAa,qEACb1yE,KAAQ,SAEV,CACEmpH,WAAa,EACb38E,OAAU,CACR,CACE48E,SAAW,EACXlyH,KAAQ,2BACR8I,KAAQ,WAEV,CACEopH,SAAW,EACXlyH,KAAQ,2BACR8I,KAAQ,YAGZ9I,KAAQ,mBACRw7E,UAAa,qEACb1yE,KAAQ,SAEV,CACEmpH,WAAa,EACb38E,OAAU,CACR,CACE48E,SAAW,EACXlyH,KAAQ,QACR8I,KAAQ,WAEV,CACEopH,SAAW,EACXlyH,KAAQ,eACR8I,KAAQ,WAEV,CACEopH,SAAW,EACXlyH,KAAQ,mBACR8I,KAAQ,YAGZ9I,KAAQ,kBACRw7E,UAAa,qEACb1yE,KAAQ,SAEV,CACEmpH,WAAa,EACb38E,OAAU,CACR,CACE48E,SAAW,EACXlyH,KAAQ,QACR8I,KAAQ,WAEV,CACEopH,SAAW,EACXlyH,KAAQ,OACR8I,KAAQ,WAEV,CACEopH,SAAW,EACXlyH,KAAQ,SACR8I,KAAQ,YAGZ9I,KAAQ,UACRw7E,UAAa,qEACb1yE,KAAQ,SAEV,CACEmpH,WAAa,EACb38E,OAAU,CACR,CACE48E,SAAW,EACXlyH,KAAQ,OACR8I,KAAQ,WAEV,CACEopH,SAAW,EACXlyH,KAAQ,KACR8I,KAAQ,WAEV,CACEopH,SAAW,EACXlyH,KAAQ,SACR8I,KAAQ,YAGZ9I,KAAQ,WACRw7E,UAAa,qEACb1yE,KAAQ,SAEV,CACEmpH,WAAa,EACb38E,OAAU,CACR,CACE48E,SAAW,EACXlyH,KAAQ,QACR8I,KAAQ,WAEV,CACEopH,SAAW,EACXlyH,KAAQ,UACR8I,KAAQ,WAEV,CACEopH,SAAW,EACXlyH,KAAQ,SACR8I,KAAQ,YAGZ9I,KAAQ,WACRw7E,UAAa,qEACb1yE,KAAQ,SAEV,CACE+oH,UAAY,EACZv8E,OAAU,CACR,CACEt1C,KAAQ,aACR8I,KAAQ,YAGZ9I,KAAQ,OACR8xH,QAAW,CACT,CACE9xH,KAAQ,GACR8I,KAAQ,YAGZipH,SAAW,EACXv2C,UAAa,aACbw2C,gBAAmB,aACnBlpH,KAAQ,YAEV,CACE+oH,UAAY,EACZv8E,OAAU,CACR,CACEt1C,KAAQ,eACR8I,KAAQ,YAGZ9I,KAAQ,SACR8xH,QAAW,CACT,CACE9xH,KAAQ,GACR8I,KAAQ,YAGZipH,SAAW,EACXv2C,UAAa,aACbw2C,gBAAmB,aACnBlpH,KAAQ,YAEV,CACE+oH,UAAY,EACZv8E,OAAU,CACR,CACEt1C,KAAQ,eACR8I,KAAQ,YAGZ9I,KAAQ,mBACR8xH,QAAW,CACT,CACE9xH,KAAQ,GACR8I,KAAQ,YAGZipH,SAAW,EACXv2C,UAAa,aACbw2C,gBAAmB,aACnBlpH,KAAQ,YAEV,CACE+oH,UAAY,EACZv8E,OAAU,CACR,CACEt1C,KAAQ,eACR8I,KAAQ,YAGZ9I,KAAQ,SACR8xH,QAAW,CACT,CACE9xH,KAAQ,GACR8I,KAAQ,YAGZipH,SAAW,EACXv2C,UAAa,aACbw2C,gBAAmB,aACnBlpH,KAAQ,YAEV,CACE+oH,UAAY,EACZv8E,OAAU,CACR,CACEt1C,KAAQ,cACR8I,KAAQ,YAGZ9I,KAAQ,cACR8xH,QAAW,CACT,CACE9xH,KAAQ,GACR8I,KAAQ,YAGZipH,SAAW,EACXv2C,UAAa,aACbw2C,gBAAmB,aACnBlpH,KAAQ,YAEV,CACE+oH,UAAY,EACZv8E,OAAU,CACR,CACEt1C,KAAQ,WACR8I,KAAQ,WAEV,CACE9I,KAAQ,cACR8I,KAAQ,YAGZ9I,KAAQ,oBACR8xH,QAAW,CACT,CACE9xH,KAAQ,GACR8I,KAAQ,YAGZipH,SAAW,EACXv2C,UAAa,aACbw2C,gBAAmB,aACnBlpH,KAAQ,YAEV,CACE+oH,UAAY,EACZv8E,OAAU,CACR,CACEt1C,KAAQ,WACR8I,KAAQ,WAEV,CACE9I,KAAQ,cACR8I,KAAQ,WAEV,CACE9I,KAAQ,mBACR8I,KAAQ,YAGZ9I,KAAQ,kBACR8xH,QAAW,CACT,CACE9xH,KAAQ,GACR8I,KAAQ,YAGZipH,SAAW,EACXv2C,UAAa,aACbw2C,gBAAmB,aACnBlpH,KAAQ,kCC/sCGqpH,GAAA,CAAE1kH,QAFD,6CAEUwd,IADd,CAAC,CAAC4mG,UAAW,EAAKv8E,OAAS,GAAGt1C,KAAO,OAAO8xH,QAAU,CAAC,CAAC9xH,KAAO,GAAG8I,KAAO,YAAYipH,SAAU,EAAMC,gBAAkB,OAAOlpH,KAAO,YAAY,CAAC+oH,UAAW,EAAMv8E,OAAS,GAAGt1C,KAAO,OAAO8xH,QAAU,GAAGC,SAAU,EAAMC,gBAAkB,aAAalpH,KAAO,YAAY,CAAC+oH,UAAW,EAAMv8E,OAAS,CAAC,CAACt1C,KAAO,MAAM8I,KAAO,WAAW,CAAC9I,KAAO,MAAM8I,KAAO,YAAY9I,KAAO,UAAU8xH,QAAU,CAAC,CAAC9xH,KAAO,GAAG8I,KAAO,SAASipH,SAAU,EAAMC,gBAAkB,aAAalpH,KAAO,YAAY,CAAC+oH,UAAW,EAAMv8E,OAAS,CAAC,CAACt1C,KAAO,SAAS8I,KAAO,YAAY9I,KAAO,WAAW8xH,QAAU,GAAGC,SAAU,EAAMC,gBAAkB,aAAalpH,KAAO,YAAY,CAAC+oH,UAAW,EAAKv8E,OAAS,GAAGt1C,KAAO,cAAc8xH,QAAU,CAAC,CAAC9xH,KAAO,GAAG8I,KAAO,YAAYipH,SAAU,EAAMC,gBAAkB,OAAOlpH,KAAO,YAAY,CAAC+oH,UAAW,EAAMv8E,OAAS,CAAC,CAACt1C,KAAO,MAAM8I,KAAO,WAAW,CAAC9I,KAAO,MAAM8I,KAAO,WAAW,CAAC9I,KAAO,MAAM8I,KAAO,YAAY9I,KAAO,eAAe8xH,QAAU,CAAC,CAAC9xH,KAAO,GAAG8I,KAAO,SAASipH,SAAU,EAAMC,gBAAkB,aAAalpH,KAAO,YAAY,CAAC+oH,UAAW,EAAKv8E,OAAS,GAAGt1C,KAAO,WAAW8xH,QAAU,CAAC,CAAC9xH,KAAO,GAAG8I,KAAO,YAAYipH,SAAU,EAAMC,gBAAkB,OAAOlpH,KAAO,YAAY,CAAC+oH,UAAW,EAAMv8E,OAAS,CAAC,CAACt1C,KAAO,MAAM8I,KAAO,WAAW,CAAC9I,KAAO,MAAM8I,KAAO,YAAY9I,KAAO,OAAO8xH,QAAU,GAAGC,SAAU,EAAMC,gBAAkB,aAAalpH,KAAO,YAAY,CAAC+oH,UAAW,EAAMv8E,OAAS,CAAC,CAACt1C,KAAO,MAAM8I,KAAO,YAAY9I,KAAO,OAAO8xH,QAAU,GAAGC,SAAU,EAAMC,gBAAkB,aAAalpH,KAAO,YAAY,CAAC+oH,UAAW,EAAMv8E,OAAS,CAAC,CAACt1C,KAAO,QAAQ8I,KAAO,YAAY9I,KAAO,UAAU8xH,QAAU,GAAGC,SAAU,EAAMC,gBAAkB,aAAalpH,KAAO,YAAY,CAAC+oH,UAAW,EAAKv8E,OAAS,CAAC,CAACt1C,KAAO,MAAM8I,KAAO,YAAY9I,KAAO,YAAY8xH,QAAU,CAAC,CAAC9xH,KAAO,GAAG8I,KAAO,YAAYipH,SAAU,EAAMC,gBAAkB,OAAOlpH,KAAO,YAAY,CAAC+oH,UAAW,EAAKv8E,OAAS,GAAGt1C,KAAO,UAAU8xH,QAAU,CAAC,CAAC9xH,KAAO,GAAG8I,KAAO,SAASipH,SAAU,EAAMC,gBAAkB,OAAOlpH,KAAO,YAAY,CAAC+oH,UAAW,EAAMv8E,OAAS,CAAC,CAACt1C,KAAO,aAAa8I,KAAO,YAAY9I,KAAO,eAAe8xH,QAAU,GAAGC,SAAU,EAAMC,gBAAkB,aAAalpH,KAAO,YAAY,CAAC+oH,UAAW,EAAKv8E,OAAS,GAAGt1C,KAAO,QAAQ8xH,QAAU,CAAC,CAAC9xH,KAAO,GAAG8I,KAAO,YAAYipH,SAAU,EAAMC,gBAAkB,OAAOlpH,KAAO,YAAY,CAAC+oH,UAAW,EAAKv8E,OAAS,GAAGt1C,KAAO,SAAS8xH,QAAU,CAAC,CAAC9xH,KAAO,GAAG8I,KAAO,YAAYipH,SAAU,EAAMC,gBAAkB,OAAOlpH,KAAO,YAAY,CAAC+oH,UAAW,EAAMv8E,OAAS,CAAC,CAACt1C,KAAO,MAAM8I,KAAO,WAAW,CAAC9I,KAAO,MAAM8I,KAAO,YAAY9I,KAAO,OAAO8xH,QAAU,GAAGC,SAAU,EAAMC,gBAAkB,aAAalpH,KAAO,YAAY,CAAC+oH,UAAW,EAAMv8E,OAAS,CAAC,CAACt1C,KAAO,MAAM8I,KAAO,YAAY9I,KAAO,OAAO8xH,QAAU,GAAGC,SAAU,EAAMC,gBAAkB,aAAalpH,KAAO,YAAY,CAAC+oH,UAAW,EAAMv8E,OAAS,CAAC,CAACt1C,KAAO,MAAM8I,KAAO,WAAW,CAAC9I,KAAO,MAAM8I,KAAO,YAAY9I,KAAO,WAAW8xH,QAAU,CAAC,CAAC9xH,KAAO,GAAG8I,KAAO,SAASipH,SAAU,EAAMC,gBAAkB,aAAalpH,KAAO,YAAY,CAAC+oH,UAAW,EAAMv8E,OAAS,CAAC,CAACt1C,KAAO,MAAM8I,KAAO,WAAW,CAAC9I,KAAO,MAAM8I,KAAO,YAAY9I,KAAO,OAAO8xH,QAAU,GAAGC,SAAU,EAAMC,gBAAkB,aAAalpH,KAAO,YAAY,CAAC+oH,UAAW,EAAMv8E,OAAS,CAAC,CAACt1C,KAAO,MAAM8I,KAAO,WAAW,CAAC9I,KAAO,MAAM8I,KAAO,WAAW,CAAC9I,KAAO,MAAM8I,KAAO,YAAY9I,KAAO,OAAO8xH,QAAU,GAAGC,SAAU,EAAMC,gBAAkB,aAAalpH,KAAO,YAAY,CAAC+oH,UAAW,EAAMv8E,OAAS,GAAGt1C,KAAO,QAAQ8xH,QAAU,GAAGC,SAAU,EAAMC,gBAAkB,aAAalpH,KAAO,YAAY,CAAC+oH,UAAW,EAAKv8E,OAAS,GAAGt1C,KAAO,YAAY8xH,QAAU,CAAC,CAAC9xH,KAAO,GAAG8I,KAAO,YAAYipH,SAAU,EAAMC,gBAAkB,OAAOlpH,KAAO,YAAY,CAAC+oH,UAAW,EAAMv8E,OAAS,CAAC,CAACt1C,KAAO,MAAM8I,KAAO,YAAY9I,KAAO,UAAU8xH,QAAU,CAAC,CAAC9xH,KAAO,GAAG8I,KAAO,SAASipH,SAAU,EAAMC,gBAAkB,aAAalpH,KAAO,YAAY,CAAC+oH,UAAW,EAAKv8E,OAAS,CAAC,CAACt1C,KAAO,MAAM8I,KAAO,WAAW,CAAC9I,KAAO,MAAM8I,KAAO,YAAY9I,KAAO,YAAY8xH,QAAU,CAAC,CAAC9xH,KAAO,GAAG8I,KAAO,YAAYipH,SAAU,EAAMC,gBAAkB,OAAOlpH,KAAO,YAAY,CAAC+oH,UAAW,EAAMv8E,OAAS,CAAC,CAACt1C,KAAO,MAAM8I,KAAO,WAAW,CAAC9I,KAAO,MAAM8I,KAAO,YAAY9I,KAAO,OAAO8xH,QAAU,GAAGC,SAAU,EAAMC,gBAAkB,aAAalpH,KAAO,YAAY,CAACwsC,OAAS,CAAC,CAACt1C,KAAO,UAAU8I,KAAO,YAAYipH,SAAU,EAAMC,gBAAkB,aAAalpH,KAAO,eAAe,CAACmpH,WAAY,EAAM38E,OAAS,CAAC,CAAC48E,SAAU,EAAKlyH,KAAO,MAAM8I,KAAO,WAAW,CAACopH,SAAU,EAAMlyH,KAAO,MAAM8I,KAAO,YAAY9I,KAAO,OAAO8I,KAAO,SAAS,CAACmpH,WAAY,EAAM38E,OAAS,CAAC,CAAC48E,SAAU,EAAKlyH,KAAO,MAAM8I,KAAO,WAAW,CAACopH,SAAU,EAAMlyH,KAAO,MAAM8I,KAAO,YAAY9I,KAAO,OAAO8I,KAAO,SAAS,CAACmpH,WAAY,EAAM38E,OAAS,CAAC,CAAC48E,SAAU,EAAKlyH,KAAO,YAAY8I,KAAO,YAAY9I,KAAO,kBAAkB8I,KAAO,SAAS,CAACmpH,WAAY,EAAM38E,OAAS,CAAC,CAAC48E,SAAU,EAAKlyH,KAAO,QAAQ8I,KAAO,YAAY9I,KAAO,cAAc8I,KAAO,SAAS,CAACmpH,WAAY,EAAK38E,OAAS,CAAC,CAAC48E,SAAU,EAAKlyH,KAAO,MAAM8I,KAAO,UAAU,CAACopH,SAAU,EAAKlyH,KAAO,MAAM8I,KAAO,WAAW,CAACopH,SAAU,EAAKlyH,KAAO,MAAM8I,KAAO,WAAW,CAACopH,SAAU,EAAKlyH,KAAO,MAAM8I,KAAO,WAAW,CAACopH,SAAU,EAAMlyH,KAAO,MAAM8I,KAAO,WAAW,CAACopH,SAAU,EAAMlyH,KAAO,MAAM8I,KAAO,UAAU9I,KAAO,UAAU8I,KAAO,SAAS,CAACmpH,WAAY,EAAM38E,OAAS,CAAC,CAAC48E,SAAU,EAAKlyH,KAAO,MAAM8I,KAAO,WAAW,CAACopH,SAAU,EAAKlyH,KAAO,MAAM8I,KAAO,WAAW,CAACopH,SAAU,EAAMlyH,KAAO,MAAM8I,KAAO,YAAY9I,KAAO,WAAW8I,KAAO,SAAS,CAACmpH,WAAY,EAAM38E,OAAS,CAAC,CAAC48E,SAAU,EAAKlyH,KAAO,MAAM8I,KAAO,WAAW,CAACopH,SAAU,EAAKlyH,KAAO,MAAM8I,KAAO,WAAW,CAACopH,SAAU,EAAMlyH,KAAO,MAAM8I,KAAO,YAAY9I,KAAO,WAAW8I,KAAO,2FCsoElkLxE,GAxnES,CACtB0hD,GAAG,CACD7E,KAAK,CACHnC,IAAI,CACF/zB,IAAI+zB,GACJr7C,MAAM,MACNY,SAAS,GACT4mB,SAAQ,EACRinG,mBAAkB,EAClBl4H,MAAM,oBACNuT,QAAQ,6CACRnL,QAAQ,CACNuiD,iBAAiB,KAEnB4M,KAAK,CACHa,aAAa,OAEfQ,KAAK,CACHQ,UAAU,OAEZ++D,UAAU,CACR1uH,MAAM,OAERo9B,KAAK,CACH9V,IAAIqnG,GACJ3uH,MAAM,eACN8J,QAAQ,8CAEVJ,UAAU,CACR,CACE9I,SAAS,GACTZ,MAAM,OACNwnB,SAAQ,EACRF,IAAIsnG,GAAOtnG,IACXjrB,KAAK,WACLyN,QAAQ,6CACR8gC,UAAU,CACRmoC,aAAa,CACX12E,KAAK,qBACL+vB,OAAO,QAMjBmvB,KAAK,CACHj0B,IAAIi0B,GACJv7C,MAAM,OACNY,SAAS,EACT4mB,SAAQ,EACRinG,mBAAkB,EAClBl4H,MAAM,oBACNuT,QAAQ,6CACRnL,QAAQ,CACNuiD,iBAAiB,KAEnB4M,KAAK,CACHa,aAAa,QAEfQ,KAAK,CACHQ,UAAU,QAEZ++D,UAAU,CACR1uH,MAAM,QAERo9B,KAAK,CACH9V,IAAIqnG,GACJ3uH,MAAM,gBACN8J,QAAQ,8CAEVJ,UAAU,CACR,CACE9I,SAAS,GACT4mB,SAAQ,EACRxnB,MAAM,QACNsnB,IAAIsnG,GAAOtnG,IACXjrB,KAAK,WACLyN,QAAQ,6CACR8gC,UAAU,CACRmoC,aAAa,CACX12E,KAAK,qBACL+vB,OAAO,SAOnB+xB,KAAK,IAIPmE,KAAK,CACH9E,KAAK,CACHnC,IAAI,CACF/zB,IAAI+zB,GACJr7C,MAAM,MACNY,SAAS,GACT4mB,SAAQ,EACRinG,mBAAkB,EAClBl4H,MAAM,oBACNuT,QAAQ,6CACRnL,QAAQ,CACNuiD,iBAAiB,KAEnB4M,KAAK,CACHa,aAAa,OAEfQ,KAAK,CACHQ,UAAU,OAEZ++D,UAAU,CACR1uH,MAAM,OAERo9B,KAAK,CACH9V,IAAIqnG,GACJ3uH,MAAM,eACN8J,QAAQ,8CAEVkiC,UAAU,CACRxkB,SAAQ,EACR2f,QAAQ,gHACR2E,YAAY,CACVxkB,IAAI2+B,GACJjmD,MAAM,UACN3D,KAAK,iBACLyN,QAAQ,8CAEVqlG,aAAa,CACX,CACE9yG,KAAK,OACLmrB,SAAQ,EACRF,IAAIunG,GACJ/kH,QAAQ,6CACR9J,MAAM,WACNY,SAAS,GACTgqC,UAAU,CACRmoC,aAAa,CACX12E,KAAK,QACL+vB,OAAO,OAKfoe,kBAAkB,CAChBxqC,MAAM,UACNsnB,IAAIo/B,GACJrqD,KAAK,kBACLyN,QAAQ,6CACR68C,aAAa,GACb/b,UAAU,CACR,CACE5zC,MAAM,UACNqF,KAAK,wBAKbqN,UAAU,CACR,CACE8d,SAAQ,EACRF,IAAIsnG,GAAOtnG,IACXjrB,KAAK,WACLyN,QAAQ,6CACR9J,MAAM,OACNY,SAAS,GACTgqC,UAAU,CACRmoC,aAAa,CACX12E,KAAK,qBACL+vB,OAAO,MAIb,CACE9E,IAAIwnG,GACJtnG,SAAQ,EACRnrB,KAAK,UACLyN,QAAQ,6CACR9J,MAAM,OACNY,SAAS,GACTgqC,UAAU,CACRmoC,aAAa,CACX12E,KAAK,aACL+vB,OAAO,MAIb,CACE9E,IAAI60B,GACJ9/C,KAAK,OACLmrB,SAAQ,EACR1d,QAAQ,6CACR9J,MAAM,OACNY,SAAS,GACTgqC,UAAU,IAIZ,CACEtjB,IAAI60B,GACJ9/C,KAAK,SACLmrB,SAAQ,EACR1d,QAAQ,6CACR9J,MAAM,SACNY,SAAS,GACTgqC,UAAU,IAIZ,CACEtjB,IAAIynG,GACJ1yH,KAAK,MACLmrB,SAAQ,EACR1d,QAAQ,6CACR9J,MAAM,OACNY,SAAS,GACTgqC,UAAU,IAIZ,CACEtjB,IAAIunG,GACJxyH,KAAK,OACLmrB,SAAQ,EACR1d,QAAQ,6CACR9J,MAAM,QACNY,SAAS,GACTgqC,UAAU,CACRmoC,aAAa,CACX12E,KAAK,QACL+vB,OAAO,QAMjBmvB,KAAK,CACHj0B,IAAIi0B,GACJ36C,SAAS,EACTZ,MAAM,OACNwnB,SAAQ,EACRinG,mBAAkB,EAClBl4H,MAAM,qBACNuT,QAAQ,6CACRnL,QAAQ,CACNuiD,iBAAiB,KAEnB4M,KAAK,CACHa,aAAa,QAEf+/D,UAAU,CACR1uH,MAAM,QAERo9B,KAAK,CACH9V,IAAIqnG,GACJ3uH,MAAM,gBACN8J,QAAQ,8CAEVkiC,UAAU,CACRxkB,SAAQ,EACR2f,QAAQ,iHACR2E,YAAY,CACVxkB,IAAI2+B,GACJjmD,MAAM,WACN3D,KAAK,kBACLyN,QAAQ,8CAEVqlG,aAAa,CACX,CACE7nF,IAAIunG,GACJxyH,KAAK,OACLmrB,SAAQ,EACR1d,QAAQ,6CACR9J,MAAM,YACNY,SAAS,GACTgqC,UAAU,CACRmoC,aAAa,CACX12E,KAAK,QACL+vB,OAAO,OAKfoe,kBAAkB,CAChBljB,IAAIo/B,GACJ1mD,MAAM,WACN3D,KAAK,kBACLyN,QAAQ,6CACR68C,aAAa,GACb/b,UAAU,CACR,CACE5zC,MAAM,UACNqF,KAAK,wBAKbqN,UAAU,CACR,CACErN,KAAK,WACLmrB,SAAQ,EACRF,IAAIsnG,GAAOtnG,IACXxd,QAAQ,6CACR9J,MAAM,QACNY,SAAS,GACTgqC,UAAU,CACRmoC,aAAa,CACX12E,KAAK,qBACL+vB,OAAO,MAIb,CACE/vB,KAAK,UACLmrB,SAAQ,EACRF,IAAIwnG,GACJhlH,QAAQ,6CACR9J,MAAM,QACNY,SAAS,GACTgqC,UAAU,CACRmoC,aAAa,CACX12E,KAAK,aACL+vB,OAAO,MAIb,CACE/vB,KAAK,OACLmrB,SAAQ,EACRF,IAAI60B,GACJryC,QAAQ,6CACR9J,MAAM,QACNY,SAAS,GACTgqC,UAAU,IAIZ,CACEtjB,IAAI60B,GACJv7C,SAAS,GACT4mB,SAAQ,EACRnrB,KAAK,SACL2D,MAAM,UACN8J,QAAQ,6CACR8gC,UAAU,IAIZ,CACEvuC,KAAK,OACLmrB,SAAQ,EACRF,IAAIunG,GACJ/kH,QAAQ,6CACR9J,MAAM,SACNY,SAAS,GACTgqC,UAAU,CACRmoC,aAAa,CACX12E,KAAK,QACL+vB,OAAO,QAMjBwzB,KAAK,CACHh/C,SAAS,EACTZ,MAAM,OACNwnB,SAAQ,EACRF,IAAIknG,GAAMlnG,IACVmnG,mBAAkB,EAClBl4H,MAAM,qBACNuT,QAAQ,6CACRgkD,KAAK,CACHa,aAAa,QAEf+/D,UAAU,CACR1uH,MAAM,QAERo9B,KAAK,CACH9V,IAAIqnG,GACJ3uH,MAAM,gBACN8J,QAAQ,8CAEVkiC,UAAU,CACRxkB,SAAQ,EACR2f,QAAQ,iHACR2E,YAAY,CACVxkB,IAAI2+B,GACJjmD,MAAM,WACN3D,KAAK,kBACLyN,QAAQ,8CAEV0gC,kBAAkB,CAChBljB,IAAIo/B,GACJ1mD,MAAM,WACN3D,KAAK,kBACLyN,QAAQ,6CACR68C,aAAa,GACb/b,UAAU,CACR,CACE5zC,MAAM,UACNqF,KAAK,wBAKbqN,UAAU,CACR,CACErN,KAAK,WACLmrB,SAAQ,EACRF,IAAIsnG,GAAOtnG,IACXxd,QAAQ,6CACR9J,MAAM,QACNY,SAAS,GACTgqC,UAAU,CACRmoC,aAAa,CACX12E,KAAK,qBACL+vB,OAAO,MAIb,CACE/vB,KAAK,UACLmrB,SAAQ,EACRF,IAAIwnG,GACJhlH,QAAQ,6CACR9J,MAAM,QACNY,SAAS,GACTgqC,UAAU,CACRmoC,aAAa,CACX12E,KAAK,aACL+vB,OAAO,MAIb,CACE/vB,KAAK,OACLmrB,SAAQ,EACRF,IAAI60B,GACJryC,QAAQ,6CACR9J,MAAM,QACNY,SAAS,GACTgqC,UAAU,IAIZ,CACEtjB,IAAI60B,GACJv7C,SAAS,GACTvE,KAAK,SACLmrB,SAAQ,EACRxnB,MAAM,UACN8J,QAAQ,6CACR8gC,UAAU,MAMhBkV,KAAK,CACHl/C,SAAS,GACTZ,MAAM,OACNwnB,SAAQ,EACRF,IAAIknG,GAAMlnG,IACVmnG,mBAAkB,EAClBO,oBAAmB,EACnBz4H,MAAM,qBAENuT,QAAQ,6CACRgkD,KAAK,CACHa,aAAa,QAEf+/D,UAAU,CACR1uH,MAAM,QAERo9B,KAAK,CACH9V,IAAIqnG,GACJ3uH,MAAM,gBACN8J,QAAQ,8CAEVkiC,UAAU,CACRxkB,SAAQ,EACR2f,QAAQ,iHACR2E,YAAY,CACVxkB,IAAI2+B,GACJjmD,MAAM,WACN3D,KAAK,kBACLyN,QAAQ,8CAEV0gC,kBAAkB,CAChBljB,IAAIo/B,GACJ1mD,MAAM,WACN3D,KAAK,kBACLyN,QAAQ,6CACR68C,aAAa,GACb/b,UAAU,CACR,CACE5zC,MAAM,UACNqF,KAAK,wBAKbqN,UAAU,CACR,CACErN,KAAK,OACLmrB,SAAQ,EACRF,IAAI60B,GACJryC,QAAQ,6CACR9J,MAAM,QACNY,SAAS,GACTgqC,UAAU,IAIZ,CACEvuC,KAAK,SACLmrB,SAAQ,EACRF,IAAI60B,GACJryC,QAAQ,6CACR9J,MAAM,UACNY,SAAS,GACTgqC,UAAU,MAMhBiV,KAAK,CACHj/C,SAAS,GACTZ,MAAM,OACNwnB,SAAQ,EACRF,IAAIknG,GAAMlnG,IACVmnG,mBAAkB,EAClBO,oBAAmB,EACnBz4H,MAAM,sBACNuT,QAAQ,6CACRgkD,KAAK,CACHa,aAAa,QAEf+/D,UAAU,CACR1uH,MAAM,QAERo9B,KAAK,CACH9V,IAAIqnG,GACJ3uH,MAAM,gBACN8J,QAAQ,8CAEVkiC,UAAU,CACRxkB,SAAQ,EACR2f,QAAQ,iHACR2E,YAAY,CACVxkB,IAAI2+B,GACJjmD,MAAM,WACN3D,KAAK,kBACLyN,QAAQ,8CAEV0gC,kBAAkB,CAChBljB,IAAIo/B,GACJ1mD,MAAM,WACN3D,KAAK,kBACLyN,QAAQ,6CACR68C,aAAa,GACb/b,UAAU,CACR,CACE5zC,MAAM,UACNqF,KAAK,wBAKbqN,UAAU,CACR,CACErN,KAAK,OACLmrB,SAAQ,EACRF,IAAI60B,GACJryC,QAAQ,6CACR9J,MAAM,QACNY,SAAS,GACTgqC,UAAU,IAIZ,CACEtjB,IAAI60B,GACJ30B,SAAQ,EACRnrB,KAAK,SACL2D,MAAM,UACN8J,QAAQ,6CACRlJ,SAAS,GACTgqC,UAAU,MAMhBoV,KAAK,CACH14B,IAAI04B,GACJhgD,MAAM,OACNY,SAAS,GACT4mB,SAAQ,EACRinG,mBAAkB,EAClBl4H,MAAM,oBACNuT,QAAQ,6CACRnL,QAAQ,CACNuiD,iBAAiB,KAEnB4M,KAAK,CACHa,aAAa,QAEfQ,KAAK,CACHQ,UAAU,QAEZ++D,UAAU,CACR1uH,MAAM,QAERo9B,KAAK,CACH9V,IAAIqnG,GACJ3uH,MAAM,gBACN8J,QAAQ,8CAEVJ,UAAU,CACR,CACE8d,SAAQ,EACRF,IAAIsnG,GAAOtnG,IACXjrB,KAAK,WACLyN,QAAQ,6CACR9J,MAAM,OACNY,SAAS,GACTgqC,UAAU,CACRmoC,aAAa,CACX12E,KAAK,qBACL+vB,OAAO,MAIb,CACE9E,IAAI60B,GACJ9/C,KAAK,SACLmrB,SAAQ,EACR1d,QAAQ,6CACR9J,MAAM,QACNY,SAAS,GACTgqC,UAAU,MAMhBmV,KAAK,CACHn/C,SAAS,EACTZ,MAAM,OACNwnB,SAAQ,EACRF,IAAIknG,GAAMlnG,IACVmnG,mBAAkB,EAClBl4H,MAAM,oBACNuT,QAAQ,6CACRnL,QAAQ,CACNuiD,iBAAiB,KAEnB4M,KAAK,CACHa,aAAa,QAEf+/D,UAAU,CACR1uH,MAAM,QAERo9B,KAAK,CACH9V,IAAIqnG,GACJ3uH,MAAM,gBACN8J,QAAQ,8CAEVkiC,UAAU,CACRxkB,SAAQ,EACR2f,QAAQ,iHACR2E,YAAY,CACVxkB,IAAI2+B,GACJjmD,MAAM,WACN3D,KAAK,kBACLyN,QAAQ,8CAEV0gC,kBAAkB,CAChBljB,IAAIo/B,GACJ1mD,MAAM,WACN3D,KAAK,kBACLyN,QAAQ,6CACR68C,aAAa,GACb/b,UAAU,CACR,CACE5zC,MAAM,UACNqF,KAAK,wBAKbqN,UAAU,CACR,CACE8d,SAAQ,EACRxnB,MAAM,QACNsnB,IAAIsnG,GAAOtnG,IACXjrB,KAAK,WACLyN,QAAQ,6CACRlJ,SAAS,GACTgqC,UAAU,CACRmoC,aAAa,CACX12E,KAAK,qBACL+vB,OAAO,MAIb,CACE9E,IAAIwnG,GACJluH,SAAS,GACTZ,MAAM,QACNwnB,SAAQ,EACRnrB,KAAK,UACLyN,QAAQ,6CACR8gC,UAAU,CACRmoC,aAAa,CACX12E,KAAK,aACL+vB,OAAO,MAIb,CACE9E,IAAI60B,GACJ9/C,KAAK,OACLmrB,SAAQ,EACRxnB,MAAM,QACN8J,QAAQ,6CACRlJ,SAAS,GACTgqC,UAAU,IAIZ,CACEtjB,IAAI60B,GACJ30B,SAAQ,EACRnrB,KAAK,SACL2D,MAAM,UACN8J,QAAQ,6CACRlJ,SAAS,GACTgqC,UAAU,MAMhBqV,IAAI,CACFthD,QAAQ,GACRqB,MAAM,MACNY,SAAS,GACT4mB,SAAQ,EACRF,IAAIknG,GAAMlnG,IACV2nG,YAAY,CAAC,QACbR,mBAAkB,EAClBl4H,MAAM,mBACNgU,KAAK,wBACLT,QAAQ,6CACRszB,KAAK,CACH9V,IAAIqnG,GACJ3uH,MAAM,eACN8J,QAAQ,8CAEVJ,UAAU,CACR,CACE4d,IAAI4nG,GACJtuH,SAAS,GACT4mB,SAAQ,EACRnrB,KAAK,QACL2D,MAAM,QACN4qC,UAAU,CACRmoC,aAAa,CACX12E,KAAK,qBACL+vB,OAAO,KAGXtiB,QAAQ,8CAEV,CACEwd,IAAI6nG,GACJvuH,SAAS,GACTvE,KAAK,OACL2D,MAAM,OACNwnB,SAAQ,EACRojB,UAAU,CACRmoC,aAAa,CACX12E,KAAK,qBACL+vB,OAAO,KAGXtiB,QAAQ,iDAKhBq0C,KAAK,CACH9C,IAAI,CACF/zB,IAAI+zB,GACJz6C,SAAS,GACTZ,MAAM,MACNwnB,SAAQ,EACRinG,mBAAkB,EAClBl4H,MAAM,oBACNuT,QAAQ,6CACRgkD,KAAK,CACHa,aAAa,OAEfQ,KAAK,CACHQ,UAAU,OAEZ++D,UAAU,CACR1uH,MAAM,OAERo9B,KAAK,CACH9V,IAAIqnG,GACJ3uH,MAAM,cACN8J,QAAQ,8CAEVkiC,UAAU,CACRxkB,SAAQ,EACRskB,YAAY,CACVxkB,IAAI2+B,GACJjmD,MAAM,UACN3D,KAAK,gBACLyN,QAAQ,8CAEVqlG,aAAa,CACX,CACE9yG,KAAK,OACLmrB,SAAQ,EACRF,IAAIunG,GACJ/kH,QAAQ,6CACR9J,MAAM,WACNY,SAAS,GACTgqC,UAAU,CACRmoC,aAAa,CACX12E,KAAK,QACL+vB,OAAO,OAKfoe,kBAAkB,CAChBljB,IAAIo/B,GACJ1mD,MAAM,UACN3D,KAAK,kBACLyN,QAAQ,6CACR68C,aAAa,GACb/b,UAAU,CACR,CACE5zC,MAAM,UACNqF,KAAK,wBAKbqN,UAAU,CACR,CACErN,KAAK,WACLmrB,SAAQ,EACRF,IAAIsnG,GAAOtnG,IACXxd,QAAQ,6CACR9J,MAAM,OACNY,SAAS,GACTgqC,UAAU,CACRmoC,aAAa,CACX12E,KAAK,qBACL+vB,OAAO,MAIb,CACE/vB,KAAK,UACLmrB,SAAQ,EACRF,IAAIwnG,GACJhlH,QAAQ,6CACR9J,MAAM,OACNY,SAAS,GACTgqC,UAAU,CACRmoC,aAAa,CACX12E,KAAK,aACL+vB,OAAO,MAIb,CACE/vB,KAAK,OACLmrB,SAAQ,EACRF,IAAI60B,GACJryC,QAAQ,6CACR9J,MAAM,OACNY,SAAS,GACTgqC,UAAU,IAIZ,CACEvuC,KAAK,MACLmrB,SAAQ,EACRF,IAAIynG,GACJjlH,QAAQ,6CACR9J,MAAM,OACNY,SAAS,GACTgqC,UAAU,IAIZ,CACEvuC,KAAK,OACLmrB,SAAQ,EACRF,IAAIunG,GACJ/kH,QAAQ,6CACR9J,MAAM,QACNY,SAAS,GACTgqC,UAAU,CACRmoC,aAAa,CACX12E,KAAK,QACL+vB,OAAO,QAMjBmvB,KAAK,CACH36C,SAAS,EACTZ,MAAM,OACNwnB,SAAQ,EACRF,IAAIknG,GAAMlnG,IACVmnG,mBAAkB,EAClBl4H,MAAM,qBACNuT,QAAQ,6CACRnL,QAAQ,CACNuiD,iBAAiB,KAEnB4M,KAAK,CACHa,aAAa,QAEf+/D,UAAU,CACR1uH,MAAM,QAERo9B,KAAK,CACH9V,IAAIqnG,GACJ3uH,MAAM,eACN8J,QAAQ,8CAEVkiC,UAAU,CACRxkB,SAAQ,EACRskB,YAAY,CACVxkB,IAAI2+B,GACJjmD,MAAM,WACN3D,KAAK,iBACLyN,QAAQ,8CAEVqlG,aAAa,CACX,CACE9yG,KAAK,OACLmrB,SAAQ,EACRF,IAAIunG,GACJ/kH,QAAQ,6CACR9J,MAAM,YACNY,SAAS,GACTgqC,UAAU,CACRmoC,aAAa,CACX12E,KAAK,QACL+vB,OAAO,OAKfoe,kBAAkB,CAChBljB,IAAIo/B,GACJ1mD,MAAM,WACN3D,KAAK,kBACLyN,QAAQ,6CACR68C,aAAa,GACb/b,UAAU,CACR,CACE5zC,MAAM,UACNqF,KAAK,wBAKbqN,UAAU,CACR,CACErN,KAAK,WACLmrB,SAAQ,EACRF,IAAIsnG,GAAOtnG,IACXxd,QAAQ,6CACR9J,MAAM,QACNY,SAAS,GACTgqC,UAAU,CACRmoC,aAAa,CACX12E,KAAK,qBACL+vB,OAAO,MAIb,CACE/vB,KAAK,UACLmrB,SAAQ,EACRF,IAAIwnG,GACJhlH,QAAQ,6CACR9J,MAAM,QACNY,SAAS,GACTgqC,UAAU,CACRmoC,aAAa,CACX12E,KAAK,aACL+vB,OAAO,MAIb,CACE/vB,KAAK,OACLmrB,SAAQ,EACRF,IAAI60B,GACJryC,QAAQ,6CACR9J,MAAM,QACNY,SAAS,GACTgqC,UAAU,IAIZ,CACEvuC,KAAK,OACLmrB,SAAQ,EACRF,IAAIunG,GACJ/kH,QAAQ,6CACR9J,MAAM,SACNY,SAAS,GACTgqC,UAAU,CACRmoC,aAAa,CACX12E,KAAK,QACL+vB,OAAO,QAMjBwzB,KAAK,CACHh/C,SAAS,EACTZ,MAAM,OACNwnB,SAAQ,EACRF,IAAIknG,GAAMlnG,IACVmnG,mBAAkB,EAClBl4H,MAAM,qBACNuT,QAAQ,6CACRgkD,KAAK,CACHa,aAAa,QAEf+/D,UAAU,CACR1uH,MAAM,QAERo9B,KAAK,CACH9V,IAAIqnG,GACJ3uH,MAAM,eACN8J,QAAQ,8CAEVkiC,UAAU,CACRxkB,SAAQ,EACRskB,YAAY,CACVxkB,IAAI2+B,GACJjmD,MAAM,WACN3D,KAAK,iBACLyN,QAAQ,8CAEV0gC,kBAAkB,CAChBljB,IAAIo/B,GACJ1mD,MAAM,UACN3D,KAAK,kBACLyN,QAAQ,6CACR68C,aAAa,GACb/b,UAAU,CACR,CACE5zC,MAAM,UACNqF,KAAK,wBAKbqN,UAAU,CACR,CACErN,KAAK,WACLmrB,SAAQ,EACRF,IAAIsnG,GAAOtnG,IACXxd,QAAQ,6CACR9J,MAAM,QACNY,SAAS,GACTgqC,UAAU,CACRmoC,aAAa,CACX12E,KAAK,qBACL+vB,OAAO,MAIb,CACE/vB,KAAK,UACLmrB,SAAQ,EACRF,IAAIwnG,GACJhlH,QAAQ,6CACR9J,MAAM,QACNY,SAAS,GACTgqC,UAAU,CACRmoC,aAAa,CACX12E,KAAK,aACL+vB,OAAO,MAIb,CACE/vB,KAAK,OACLmrB,SAAQ,EACRF,IAAI60B,GACJryC,QAAQ,6CACR9J,MAAM,QACNY,SAAS,GACTgqC,UAAU,QAQpB1Q,EAAE,CACAsjB,KAAK,CACHnC,IAAI,CACF/zB,IAAI+zB,GACJr7C,MAAM,MACNY,SAAS,GACT4mB,SAAQ,EACRinG,mBAAkB,EAClBl4H,MAAM,oBACNuT,QAAQ,6CACRnL,QAAQ,CACNuiD,iBAAiB,KAEnB4M,KAAK,CACHa,aAAa,OAEfQ,KAAK,CACHQ,UAAU,OAEZ++D,UAAU,CACR1uH,MAAM,OAERo9B,KAAK,CACH9V,IAAIqnG,GACJ3uH,MAAM,eACN8J,QAAQ,8CAEVkiC,UAAU,CACRxkB,SAAQ,EACR2f,QAAQ,gHACR2E,YAAY,CACVxkB,IAAI2+B,GACJjmD,MAAM,UACN3D,KAAK,iBACLyN,QAAQ,8CAEVqlG,aAAa,CACX,CACE9yG,KAAK,OACLmrB,SAAQ,EACRF,IAAIunG,GACJ/kH,QAAQ,6CACR9J,MAAM,WACNY,SAAS,GACTgqC,UAAU,CACRmoC,aAAa,CACX12E,KAAK,QACL+vB,OAAO,OAKfoe,kBAAkB,CAChBxqC,MAAM,UACNsnB,IAAIo/B,GACJrqD,KAAK,kBACLyN,QAAQ,6CACR68C,aAAa,GACb/b,UAAU,CACR,CACE5zC,MAAM,UACNqF,KAAK,wBAKbqN,UAAU,CACR,CACE8d,SAAQ,EACRF,IAAIsnG,GAAOtnG,IACXjrB,KAAK,WACLyN,QAAQ,6CACR9J,MAAM,OACNY,SAAS,GACTgqC,UAAU,CACRmoC,aAAa,CACX12E,KAAK,qBACL+vB,OAAO,MAIb,CACE9E,IAAIwnG,GACJtnG,SAAQ,EACRnrB,KAAK,UACLyN,QAAQ,6CACR9J,MAAM,OACNY,SAAS,GACTgqC,UAAU,CACRmoC,aAAa,CACX12E,KAAK,aACL+vB,OAAO,MAIb,CACE9E,IAAI60B,GACJ9/C,KAAK,OACLmrB,SAAQ,EACR1d,QAAQ,6CACR9J,MAAM,OACNY,SAAS,GACTgqC,UAAU,IAIZ,CACEtjB,IAAI60B,GACJ9/C,KAAK,SACLmrB,SAAQ,EACR1d,QAAQ,6CACR9J,MAAM,SACNY,SAAS,GACTgqC,UAAU,IAIZ,CACEtjB,IAAIynG,GACJ1yH,KAAK,MACLmrB,SAAQ,EACR1d,QAAQ,6CACR9J,MAAM,OACNY,SAAS,GACTgqC,UAAU,IAIZ,CACEtjB,IAAIunG,GACJxyH,KAAK,OACLmrB,SAAQ,EACR1d,QAAQ,6CACR9J,MAAM,QACNY,SAAS,GACTgqC,UAAU,CACRmoC,aAAa,CACX12E,KAAK,QACL+vB,OAAO,QAMjBmvB,KAAK,CACHj0B,IAAIi0B,GACJ36C,SAAS,EACTZ,MAAM,OACNwnB,SAAQ,EACRinG,mBAAkB,EAClBl4H,MAAM,qBACNuT,QAAQ,6CACRnL,QAAQ,CACNuiD,iBAAiB,KAEnB4M,KAAK,CACHa,aAAa,QAEf+/D,UAAU,CACR1uH,MAAM,QAERo9B,KAAK,CACH9V,IAAIqnG,GACJ3uH,MAAM,gBACN8J,QAAQ,8CAEVkiC,UAAU,CACRxkB,SAAQ,EACR2f,QAAQ,iHACR2E,YAAY,CACVxkB,IAAI2+B,GACJjmD,MAAM,WACN3D,KAAK,kBACLyN,QAAQ,8CAEVqlG,aAAa,CACX,CACE7nF,IAAIunG,GACJxyH,KAAK,OACLmrB,SAAQ,EACR1d,QAAQ,6CACR9J,MAAM,YACNY,SAAS,GACTgqC,UAAU,CACRmoC,aAAa,CACX12E,KAAK,QACL+vB,OAAO,OAKfoe,kBAAkB,CAChBljB,IAAIo/B,GACJ1mD,MAAM,WACN3D,KAAK,kBACLyN,QAAQ,6CACR68C,aAAa,GACb/b,UAAU,CACR,CACE5zC,MAAM,UACNqF,KAAK,wBAKbqN,UAAU,CACR,CACErN,KAAK,WACLmrB,SAAQ,EACRF,IAAIsnG,GAAOtnG,IACXxd,QAAQ,6CACR9J,MAAM,QACNY,SAAS,GACTgqC,UAAU,CACRmoC,aAAa,CACX12E,KAAK,qBACL+vB,OAAO,MAIb,CACE/vB,KAAK,UACLmrB,SAAQ,EACRF,IAAIwnG,GACJhlH,QAAQ,6CACR9J,MAAM,QACNY,SAAS,GACTgqC,UAAU,CACRmoC,aAAa,CACX12E,KAAK,aACL+vB,OAAO,MAIb,CACE/vB,KAAK,OACLmrB,SAAQ,EACRF,IAAI60B,GACJryC,QAAQ,6CACR9J,MAAM,QACNY,SAAS,GACTgqC,UAAU,IAIZ,CACEtjB,IAAI60B,GACJv7C,SAAS,GACT4mB,SAAQ,EACRnrB,KAAK,SACL2D,MAAM,UACN8J,QAAQ,6CACR8gC,UAAU,IAIZ,CACEvuC,KAAK,OACLmrB,SAAQ,EACRF,IAAIunG,GACJ/kH,QAAQ,6CACR9J,MAAM,SACNY,SAAS,GACTgqC,UAAU,CACRmoC,aAAa,CACX12E,KAAK,QACL+vB,OAAO,QAMjBwzB,KAAK,CACHh/C,SAAS,EACTZ,MAAM,OACNwnB,SAAQ,EACRF,IAAIknG,GAAMlnG,IACVmnG,mBAAkB,EAClBl4H,MAAM,qBACNuT,QAAQ,6CACRgkD,KAAK,CACHa,aAAa,QAEf+/D,UAAU,CACR1uH,MAAM,QAERo9B,KAAK,CACH9V,IAAIqnG,GACJ3uH,MAAM,gBACN8J,QAAQ,8CAEVkiC,UAAU,CACRxkB,SAAQ,EACR2f,QAAQ,iHACR2E,YAAY,CACVxkB,IAAI2+B,GACJjmD,MAAM,WACN3D,KAAK,kBACLyN,QAAQ,8CAEV0gC,kBAAkB,CAChBljB,IAAIo/B,GACJ1mD,MAAM,WACN3D,KAAK,kBACLyN,QAAQ,6CACR68C,aAAa,GACb/b,UAAU,CACR,CACE5zC,MAAM,UACNqF,KAAK,wBAKbqN,UAAU,CACR,CACErN,KAAK,WACLmrB,SAAQ,EACRF,IAAIsnG,GAAOtnG,IACXxd,QAAQ,6CACR9J,MAAM,QACNY,SAAS,GACTgqC,UAAU,CACRmoC,aAAa,CACX12E,KAAK,qBACL+vB,OAAO,MAIb,CACE/vB,KAAK,UACLmrB,SAAQ,EACRF,IAAIwnG,GACJhlH,QAAQ,6CACR9J,MAAM,QACNY,SAAS,GACTgqC,UAAU,CACRmoC,aAAa,CACX12E,KAAK,aACL+vB,OAAO,MAIb,CACE/vB,KAAK,OACLmrB,SAAQ,EACRF,IAAI60B,GACJryC,QAAQ,6CACR9J,MAAM,QACNY,SAAS,GACTgqC,UAAU,IAIZ,CACEtjB,IAAI60B,GACJv7C,SAAS,GACTvE,KAAK,SACLmrB,SAAQ,EACRxnB,MAAM,UACN8J,QAAQ,6CACR8gC,UAAU,MAMhBkV,KAAK,CACHl/C,SAAS,GACTZ,MAAM,OACNwnB,SAAQ,EACRF,IAAIknG,GAAMlnG,IACVmnG,mBAAkB,EAClBO,oBAAmB,EACnBz4H,MAAM,qBAENuT,QAAQ,6CACRgkD,KAAK,CACHa,aAAa,QAEf+/D,UAAU,CACR1uH,MAAM,QAERo9B,KAAK,CACH9V,IAAIqnG,GACJ3uH,MAAM,gBACN8J,QAAQ,8CAEVkiC,UAAU,CACRxkB,SAAQ,EACR2f,QAAQ,iHACR2E,YAAY,CACVxkB,IAAI2+B,GACJjmD,MAAM,WACN3D,KAAK,kBACLyN,QAAQ,8CAEV0gC,kBAAkB,CAChBljB,IAAIo/B,GACJ1mD,MAAM,WACN3D,KAAK,kBACLyN,QAAQ,6CACR68C,aAAa,GACb/b,UAAU,CACR,CACE5zC,MAAM,UACNqF,KAAK,wBAKbqN,UAAU,CACR,CACErN,KAAK,OACLmrB,SAAQ,EACRF,IAAI60B,GACJryC,QAAQ,6CACR9J,MAAM,QACNY,SAAS,GACTgqC,UAAU,IAIZ,CACEvuC,KAAK,SACLmrB,SAAQ,EACRF,IAAI60B,GACJryC,QAAQ,6CACR9J,MAAM,UACNY,SAAS,GACTgqC,UAAU,MAMhBiV,KAAK,CACHj/C,SAAS,GACTZ,MAAM,OACNwnB,SAAQ,EACRF,IAAIknG,GAAMlnG,IACVmnG,mBAAkB,EAClBO,oBAAmB,EACnBz4H,MAAM,sBACNuT,QAAQ,6CACRgkD,KAAK,CACHa,aAAa,QAEf+/D,UAAU,CACR1uH,MAAM,QAERo9B,KAAK,CACH9V,IAAIqnG,GACJ3uH,MAAM,gBACN8J,QAAQ,8CAEVkiC,UAAU,CACRxkB,SAAQ,EACR2f,QAAQ,iHACR2E,YAAY,CACVxkB,IAAI2+B,GACJjmD,MAAM,WACN3D,KAAK,kBACLyN,QAAQ,8CAEV0gC,kBAAkB,CAChBljB,IAAIo/B,GACJ1mD,MAAM,WACN3D,KAAK,kBACLyN,QAAQ,6CACR68C,aAAa,GACb/b,UAAU,CACR,CACE5zC,MAAM,UACNqF,KAAK,wBAKbqN,UAAU,CACR,CACErN,KAAK,OACLmrB,SAAQ,EACRF,IAAI60B,GACJryC,QAAQ,6CACR9J,MAAM,QACNY,SAAS,GACTgqC,UAAU,IAIZ,CACEtjB,IAAI60B,GACJ30B,SAAQ,EACRnrB,KAAK,SACL2D,MAAM,UACN8J,QAAQ,6CACRlJ,SAAS,GACTgqC,UAAU,MAMhBoV,KAAK,CACH14B,IAAI04B,GACJhgD,MAAM,OACNY,SAAS,GACT4mB,SAAQ,EACRinG,mBAAkB,EAClBl4H,MAAM,oBACNuT,QAAQ,6CACRnL,QAAQ,CACNuiD,iBAAiB,KAEnB4M,KAAK,CACHa,aAAa,QAEfQ,KAAK,CACHQ,UAAU,QAEZ++D,UAAU,CACR1uH,MAAM,QAERo9B,KAAK,CACH9V,IAAIqnG,GACJ3uH,MAAM,gBACN8J,QAAQ,8CAEVJ,UAAU,CACR,CACE8d,SAAQ,EACRF,IAAIsnG,GAAOtnG,IACXjrB,KAAK,WACLyN,QAAQ,6CACR9J,MAAM,OACNY,SAAS,GACTgqC,UAAU,CACRmoC,aAAa,CACX12E,KAAK,qBACL+vB,OAAO,MAIb,CACE9E,IAAI60B,GACJ9/C,KAAK,SACLmrB,SAAQ,EACR1d,QAAQ,6CACR9J,MAAM,QACNY,SAAS,GACTgqC,UAAU,MAMhBmV,KAAK,CACHn/C,SAAS,EACTZ,MAAM,OACNwnB,SAAQ,EACRF,IAAIknG,GAAMlnG,IACVmnG,mBAAkB,EAClBl4H,MAAM,oBACNuT,QAAQ,6CACRnL,QAAQ,CACNuiD,iBAAiB,KAEnB4M,KAAK,CACHa,aAAa,QAEf+/D,UAAU,CACR1uH,MAAM,QAERo9B,KAAK,CACH9V,IAAIqnG,GACJ3uH,MAAM,gBACN8J,QAAQ,8CAEVkiC,UAAU,CACRxkB,SAAQ,EACR2f,QAAQ,iHACR2E,YAAY,CACVxkB,IAAI2+B,GACJjmD,MAAM,WACN3D,KAAK,kBACLyN,QAAQ,8CAEV0gC,kBAAkB,CAChBljB,IAAIo/B,GACJ1mD,MAAM,WACN3D,KAAK,kBACLyN,QAAQ,6CACR68C,aAAa,GACb/b,UAAU,CACR,CACE5zC,MAAM,UACNqF,KAAK,wBAKbqN,UAAU,CACR,CACE8d,SAAQ,EACRxnB,MAAM,QACNsnB,IAAIsnG,GAAOtnG,IACXjrB,KAAK,WACLyN,QAAQ,6CACRlJ,SAAS,GACTgqC,UAAU,CACRmoC,aAAa,CACX12E,KAAK,qBACL+vB,OAAO,MAIb,CACE9E,IAAIwnG,GACJluH,SAAS,GACTZ,MAAM,QACNwnB,SAAQ,EACRnrB,KAAK,UACLyN,QAAQ,6CACR8gC,UAAU,CACRmoC,aAAa,CACX12E,KAAK,aACL+vB,OAAO,MAIb,CACE9E,IAAI60B,GACJ9/C,KAAK,OACLmrB,SAAQ,EACRxnB,MAAM,QACN8J,QAAQ,6CACRlJ,SAAS,GACTgqC,UAAU,IAIZ,CACEtjB,IAAI60B,GACJ30B,SAAQ,EACRnrB,KAAK,SACL2D,MAAM,UACN8J,QAAQ,6CACRlJ,SAAS,GACTgqC,UAAU,MAMhBqV,IAAI,CACFthD,QAAQ,GACRqB,MAAM,MACNY,SAAS,GACT4mB,SAAQ,EACRF,IAAIknG,GAAMlnG,IACV2nG,YAAY,CAAC,QACbR,mBAAkB,EAClBl4H,MAAM,mBACNgU,KAAK,wBACLT,QAAQ,6CACRszB,KAAK,CACH9V,IAAIqnG,GACJ3uH,MAAM,eACN8J,QAAQ,8CAEVJ,UAAU,CACR,CACE4d,IAAI4nG,GACJtuH,SAAS,GACT4mB,SAAQ,EACRnrB,KAAK,QACL2D,MAAM,QACN4qC,UAAU,CACRmoC,aAAa,CACX12E,KAAK,qBACL+vB,OAAO,KAGXtiB,QAAQ,8CAEV,CACEwd,IAAI6nG,GACJvuH,SAAS,GACTvE,KAAK,OACL2D,MAAM,OACNwnB,SAAQ,EACRojB,UAAU,CACRmoC,aAAa,CACX12E,KAAK,qBACL+vB,OAAO,KAGXtiB,QAAQ,8CAEV,CACEwd,IAAI60B,GACJv7C,SAAS,GACTZ,MAAM,OACNwnB,SAAQ,EACRnrB,KAAK,SACLuuC,UAAU,GAEV9gC,QAAQ,iDAKhBq0C,KAAK,CACH9C,IAAI,CACF/zB,IAAI+zB,GACJz6C,SAAS,GACTZ,MAAM,MACNwnB,SAAQ,EACRinG,mBAAkB,EAClBl4H,MAAM,oBACNuT,QAAQ,6CACRgkD,KAAK,CACHa,aAAa,OAEfQ,KAAK,CACHQ,UAAU,OAEZ++D,UAAU,CACR1uH,MAAM,OAERo9B,KAAK,CACH9V,IAAIqnG,GACJ3uH,MAAM,cACN8J,QAAQ,8CAEVkiC,UAAU,CACRxkB,SAAQ,EACRskB,YAAY,CACVxkB,IAAI2+B,GACJjmD,MAAM,UACN3D,KAAK,gBACLyN,QAAQ,8CAEVqlG,aAAa,CACX,CACE9yG,KAAK,OACLmrB,SAAQ,EACRF,IAAIunG,GACJ/kH,QAAQ,6CACR9J,MAAM,WACNY,SAAS,GACTgqC,UAAU,CACRmoC,aAAa,CACX12E,KAAK,QACL+vB,OAAO,OAKfoe,kBAAkB,CAChBljB,IAAIo/B,GACJ1mD,MAAM,UACN3D,KAAK,kBACLyN,QAAQ,6CACR68C,aAAa,GACb/b,UAAU,CACR,CACE5zC,MAAM,UACNqF,KAAK,wBAKbqN,UAAU,CACR,CACErN,KAAK,WACLmrB,SAAQ,EACRF,IAAIsnG,GAAOtnG,IACXxd,QAAQ,6CACR9J,MAAM,OACNY,SAAS,GACTgqC,UAAU,CACRmoC,aAAa,CACX12E,KAAK,qBACL+vB,OAAO,MAIb,CACE/vB,KAAK,UACLmrB,SAAQ,EACRF,IAAIwnG,GACJhlH,QAAQ,6CACR9J,MAAM,OACNY,SAAS,GACTgqC,UAAU,CACRmoC,aAAa,CACX12E,KAAK,aACL+vB,OAAO,MAIb,CACE/vB,KAAK,OACLmrB,SAAQ,EACRF,IAAI60B,GACJryC,QAAQ,6CACR9J,MAAM,OACNY,SAAS,GACTgqC,UAAU,IAIZ,CACEvuC,KAAK,MACLmrB,SAAQ,EACRF,IAAIynG,GACJjlH,QAAQ,6CACR9J,MAAM,OACNY,SAAS,GACTgqC,UAAU,IAIZ,CACEvuC,KAAK,OACLmrB,SAAQ,EACRF,IAAIunG,GACJ/kH,QAAQ,6CACR9J,MAAM,QACNY,SAAS,GACTgqC,UAAU,CACRmoC,aAAa,CACX12E,KAAK,QACL+vB,OAAO,QAMjBmvB,KAAK,CACH36C,SAAS,EACTZ,MAAM,OACNwnB,SAAQ,EACRF,IAAIknG,GAAMlnG,IACVmnG,mBAAkB,EAClBl4H,MAAM,qBACNuT,QAAQ,6CACRnL,QAAQ,CACNuiD,iBAAiB,KAEnB4M,KAAK,CACHa,aAAa,QAEf+/D,UAAU,CACR1uH,MAAM,QAERo9B,KAAK,CACH9V,IAAIqnG,GACJ3uH,MAAM,eACN8J,QAAQ,8CAEVkiC,UAAU,CACRxkB,SAAQ,EACRskB,YAAY,CACVxkB,IAAI2+B,GACJjmD,MAAM,WACN3D,KAAK,iBACLyN,QAAQ,8CAEVqlG,aAAa,CACX,CACE9yG,KAAK,OACLmrB,SAAQ,EACRF,IAAIunG,GACJ/kH,QAAQ,6CACR9J,MAAM,YACNY,SAAS,GACTgqC,UAAU,CACRmoC,aAAa,CACX12E,KAAK,QACL+vB,OAAO,OAKfoe,kBAAkB,CAChBljB,IAAIo/B,GACJ1mD,MAAM,WACN3D,KAAK,kBACLyN,QAAQ,6CACR68C,aAAa,GACb/b,UAAU,CACR,CACE5zC,MAAM,UACNqF,KAAK,wBAKbqN,UAAU,CACR,CACErN,KAAK,WACLmrB,SAAQ,EACRF,IAAIsnG,GAAOtnG,IACXxd,QAAQ,6CACR9J,MAAM,QACNY,SAAS,GACTgqC,UAAU,CACRmoC,aAAa,CACX12E,KAAK,qBACL+vB,OAAO,MAIb,CACE/vB,KAAK,UACLmrB,SAAQ,EACRF,IAAIwnG,GACJhlH,QAAQ,6CACR9J,MAAM,QACNY,SAAS,GACTgqC,UAAU,CACRmoC,aAAa,CACX12E,KAAK,aACL+vB,OAAO,MAIb,CACE/vB,KAAK,OACLmrB,SAAQ,EACRF,IAAI60B,GACJryC,QAAQ,6CACR9J,MAAM,QACNY,SAAS,GACTgqC,UAAU,IAIZ,CACEvuC,KAAK,OACLmrB,SAAQ,EACRF,IAAIunG,GACJ/kH,QAAQ,6CACR9J,MAAM,SACNY,SAAS,GACTgqC,UAAU,CACRmoC,aAAa,CACX12E,KAAK,QACL+vB,OAAO,QAMjBwzB,KAAK,CACHh/C,SAAS,EACTZ,MAAM,OACNwnB,SAAQ,EACRF,IAAIknG,GAAMlnG,IACVmnG,mBAAkB,EAClBl4H,MAAM,qBACNuT,QAAQ,6CACRgkD,KAAK,CACHa,aAAa,QAEf+/D,UAAU,CACR1uH,MAAM,QAERo9B,KAAK,CACH9V,IAAIqnG,GACJ3uH,MAAM,eACN8J,QAAQ,8CAEVkiC,UAAU,CACRxkB,SAAQ,EACRskB,YAAY,CACVxkB,IAAI2+B,GACJjmD,MAAM,WACN3D,KAAK,iBACLyN,QAAQ,8CAEV0gC,kBAAkB,CAChBljB,IAAIo/B,GACJ1mD,MAAM,UACN3D,KAAK,kBACLyN,QAAQ,6CACR68C,aAAa,GACb/b,UAAU,CACR,CACE5zC,MAAM,UACNqF,KAAK,wBAKbqN,UAAU,CACR,CACErN,KAAK,WACLmrB,SAAQ,EACRF,IAAIsnG,GAAOtnG,IACXxd,QAAQ,6CACR9J,MAAM,QACNY,SAAS,GACTgqC,UAAU,CACRmoC,aAAa,CACX12E,KAAK,qBACL+vB,OAAO,MAIb,CACE/vB,KAAK,UACLmrB,SAAQ,EACRF,IAAIwnG,GACJhlH,QAAQ,6CACR9J,MAAM,QACNY,SAAS,GACTgqC,UAAU,CACRmoC,aAAa,CACX12E,KAAK,aACL+vB,OAAO,MAIb,CACE/vB,KAAK,OACLmrB,SAAQ,EACRF,IAAI60B,GACJryC,QAAQ,6CACR9J,MAAM,QACNY,SAAS,GACTgqC,UAAU,SC7kELwkF,GAhDgB,CAC7B36G,YAAa,CACX0yB,QAAS,+BACTipB,iBAAkB,oCAClBE,WAAY,GACZC,WAAY,GACZd,QAAS,UACTllD,KAAM,eAER8kH,QAAS,CACPloF,QAAS,6BACTipB,iBAAkB,oCAClBE,WAAY,GACZC,WAAY,GACZd,QAAS,UACTllD,KAAM,eAERnL,QAAS,CACP+nC,QAAS,iCACTipB,iBAAkB,8BAClBE,WAAY,GACZC,WAAY,GACZd,QAAS,aACTllD,KAAM,eAER+kH,UAAW,CACTnoF,QAAS,wBACTipB,iBAAkB,uCAClBE,WAAY,GACZC,WAAY,GACZd,QAAS,aACTllD,KAAM,eAERoV,QAAS,CACPwnB,QAAS,6BACTsoB,QAAS,UACTllD,KAAM,eAER6J,MAAO,CACL+yB,QAAS,0BACTipB,iBAAkB,kCAClBE,WAAY,GACZC,WAAY,GACZd,QAAS,UACTllD,KAAM,UCoJGglH,8MA1LbC,uBAAyB,SAACC,EAAgBC,GACxC,MAC4B,qBAAnBD,GACPj4H,OAAOqF,KAAK4yH,GAAgBr0H,SAC1B5D,OAAOqF,KAAK6yH,GAAmBt0H,UAKrCu0H,2BAA6B,SAACF,EAAgBC,GAC5C,GAA8B,qBAAnBD,EAAgC,CACzC,IAAMG,EAAYp4H,OAAOqF,KAAK6yH,GAAmB70H,OAAO,SAAAqC,GACtD,OAAQ1F,OAAOqF,KAAK4yH,GAAgBxvH,SAAS/C,KAE/C,OAAOwyH,EAAkBE,GAEzB,OAAOp4H,OAAOqF,KAAK6yH,GAAmB3yH,IAAI,SAAAG,GACxC,OAAOwyH,EAAkBxyH,QAM/B2yH,+BAAiC,SAACJ,EAAgBC,GAYhD,OAX2Bl4H,OAAOqF,KAAK4yH,GACpC1yH,IAAI,SAAAG,GACH,OACEuyH,EAAevyH,GAAKivH,cAAgBuD,EAAkBxyH,GAAKivH,YAEpDuD,EAAkBxyH,GAElB,OAGVrC,OAAO,SAAAi1H,GAAM,OAAe,OAAXA,IACM,MAI5BC,6BAA+B,SAACC,EAAYC,GAE1C,OADeA,EAAU,KAAAxzH,OAAMuzH,OAKjCE,sBAAwB,SAACT,EAAgBC,GACvC,IAAI5vH,EAAK,KACLqwH,EAAY,GACZC,EAAS,GAEb,GAAIt1H,EAAK00H,uBAAuBC,EAAgBC,GAC9C5vH,EAAKhF,EAAK60H,2BAA2BF,EAAgBC,OAChD,CAKL,KAJAS,EAAYr1H,EAAK+0H,+BACfJ,EACAC,IAQA,OAAO,EALPU,EAASt1H,EAAKi1H,6BACZI,EAAU1mD,QACVgmD,GAMAU,EAAU11H,SAAW21H,EAAO31H,SAC9BqF,EAAKqwH,GAGT,OAAOrwH,KAITuwH,0BAA4B,SAAA/6H,GAC1B,IAAIwK,EAAK,KACLtI,OAAOqF,KAAK/B,EAAKxE,MAAMwL,cAAc1G,SACvC0E,EAAKhF,EAAKo1H,sBACR56H,EAAUwM,aACVhH,EAAKxE,MAAMwL,eAIXhC,GACFhF,EAAKw1H,qBAAqBxwH,MAI9BwwH,qBAAuB,SAAAtsH,GAGrB,IAAIusH,EAAYz1H,EAAK01H,wBAAwBxsH,GAC7CusH,EAAUlgE,WAAav1D,EAAKxE,MAAMqV,UAClC4kH,EAAUE,WAAY,EAItBxsH,OAAOisD,cAAcC,WAAW,IAAKogE,MAGvCC,wBAA0B,SAAAxsH,GACxB,IAAI0sH,EAAuB,GAG3B,OAFa1sH,EAAYvJ,QAGvB,IAAK,cACHi2H,EAAuBtB,GAAyB36G,YAChD,MACF,IAAK,UACHi8G,EAAuBtB,GAAyBC,QAChD,MACF,IAAK,UACHqB,EAAuBtB,GAAyBhwH,QAChD,MACF,IAAK,YACHsxH,EAAuBtB,GAAyBE,UAChD,MACF,IAAK,UACHoB,EAAuBtB,GAAyBzvG,QAChD,MACF,IAAK,QACH+wG,EAAuBtB,GAAyBh7G,MAOpD,IAAIu8G,EAAoB,GACxB,OAAQ3sH,EAAYwlE,QAClB,IAAK,kBACHmnD,EAAoB,SACtB,MACA,IAAK,kBACHA,EAAoB,sBACtB,MACA,IAAK,gBACL,IAAK,sBACHA,EAAoB,UACtB,MACA,IAAK,oBACL,IAAK,4BACL,IAAK,2BACL,IAAK,wBACL,IAAK,yBACL,IAAK,uBACHA,EAAoB,YACtB,MACA,IAAK,yBACHA,EAAoB,UACtB,MACA,IAAK,UACHA,EAAoB,UACtB,MACA,IAAK,YACHA,EAAoB,YACtB,MACA,QACEA,EAAoB3sH,EAAYwlE,OAAOonD,OAAO,GAAGvzH,cAAgB2G,EAAYwlE,OAAOtwD,OAAO,GAM/F,IAAI23G,GAFJH,EAAuB9uH,KAAKsW,MAAMtW,KAAKC,UAAU6uH,KAEXvpF,QAAQxU,QAAQ,WAAWg+F,GAMjE,OALAE,EAAaA,EAAWD,OAAO,GAAGvzH,cAAgBwzH,EAAWv9G,MAAM,GACnEo9G,EAAqBvpF,QAAU0pF,EAC/BH,EAAqBD,WAAY,EACjCC,EAAqBrgE,WAAav1D,EAAKxE,MAAMqV,UAEtC+kH,qFAGUp7H,EAAWC,GAC5Bc,KAAKg6H,0BAA0B/6H,oCAI/B,OACEoE,EAAAjE,EAAAC,cAAA,WACEgE,EAAAjE,EAAAC,cAACiE,EAAA,EAAagzH,SAAd,CAAuBxsF,IAAK,SAAA8tF,GAAI,OAAKhqH,OAAOisD,cAAgB+9D,aAtLjC9P,IAAM9mH,WCqBnCy5H,GAAU3S,IAAM4S,KAAK,kBAAM52G,EAAAtc,EAAA,GAAAmzH,KAAA72G,EAAA3W,KAAA,cAC3BytH,GAAY9S,IAAM4S,KAAK,kBAAM97G,QAAAkD,IAAA,CAAAgC,EAAAtc,EAAA,GAAAsc,EAAAtc,EAAA,GAAAsc,EAAAtc,EAAA,KAAAmzH,KAAA72G,EAAA3W,KAAA,cAC7B0tH,GAAa/S,IAAM4S,KAAK,kBAAM97G,QAAAkD,IAAA,CAAAgC,EAAAtc,EAAA,GAAAsc,EAAAtc,EAAA,KAAAmzH,KAAA72G,EAAA3W,KAAA,cAq7BrB2tH,8MAl7Bb14H,MAAQ,CACNypD,QAAQ,KACRvgC,WAAW,GACX0uB,SAAU,KACV+gF,WAAW,KACXC,YAAa,IACbvpF,MAAO,UACPn8B,UAAU,QACV2lH,YAAY,EACZ5wH,YAAa,KACb6wH,aAAc,KACdpmD,cAAe,KACf19C,cAAe,KACfhtB,cAAe,KACf+wH,cAAc90H,IACdolH,eAAe,KACfnB,eAAgB,KAChBhgH,gBAAiB,KACjB8wH,gBAAgB,EAChBtjH,iBAAkB,KAClBujH,kBAAmB,KACnB/H,mBAAoB,KACpB9zH,MAAOoO,OAAO0tH,WACd1yF,oBAAqB,KACrBxoC,OAAQwN,OAAO2tH,YACfC,uBAAwB,KACxBzK,0BAA0B,KAI5BzuH,cAAgB,OAShBm5H,kBAAoB,SAACj0H,GACfA,GACFA,EAAE2D,iBAEJ1G,EAAKzB,SAAS,CACZq4H,kBAAkB,UAItBK,iBAAmB,SAACz7H,GAClBwE,EAAKzB,SAAS,CACZq4H,kBAAkBp7H,OAItB07H,mBAAqB,SAAC17H,EAAMhB,OAyB5B60F,qCAAkB,SAAAv1E,IAAA,IAAA3N,EAAAgrH,EAAA92H,UAAA,OAAA+sB,EAAAzyB,EAAA6W,KAAA,SAAAwI,GAAA,cAAAA,EAAAtI,KAAAsI,EAAArI,MAAA,cAAOxF,EAAPgrH,EAAA72H,OAAA,QAAAC,IAAA42H,EAAA,GAAAA,EAAA,GAAgB,KAChCn3H,EAAKnC,cAAc0f,gBAAgB,aAAa,IAAG,GADnCvD,EAAArI,KAAA,EAEV3R,EAAKzB,SAAS,CAClBsoB,WAAW,IACX,WACwB,oBAAb1a,GACTA,MANY,cAAA6N,EAAAgB,OAAA,UAST,GATS,wBAAAhB,EAAA7H,SAAA2H,EAAAve,WAYlBurB,cAAgB,SAAC1kB,EAAIkJ,GAAwC,IAAnCi4C,EAAmCljD,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA/B,KAAKivF,EAA0BjvF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAE3D+B,EAAMA,EAAI0C,cACV,IAAMsyH,EAAiBp3H,EAAKrC,MAAMkpB,WAAWzkB,GACvCw9D,EAAc/3D,SAAS5B,KAAKwwB,MAAM,KAIpCrN,GAAS,EAEb,IAJoBguG,IAAsBA,EAAeviF,gBAAkBuiF,EAAeviF,gBAAgB+qB,GAAgB94D,KAAKC,UAAUqwH,EAAe9rH,QAAUxE,KAAKC,UAAUuE,GAIlK,CACb,IAAMupC,EAAiB0O,EAAMqc,EAAarc,EAAO,KAGjD,GAAI+rC,EAAgB,CAClB,IAAI+nC,EAAmBr3H,EAAKnC,cAAcsrE,cAAc,cACnDkuD,IACHA,EAAmB,IAErBA,EAAgB36H,OAAAuD,EAAA,EAAAvD,CAAA,GACX26H,EADW36H,OAAAwD,EAAA,EAAAxD,CAAA,GAEb0F,EAAK,CACJkJ,OACAupC,oBAIJ70C,EAAKnC,cAAc0f,gBAAgB,aAAa85G,GAAiB,GAInEr3H,EAAKzB,SAAS,SAAC9D,GAAD,MAAgB,CAC5BosB,WAAWnqB,OAAAuD,EAAA,EAAAvD,CAAA,GACNjC,EAAUosB,WADLnqB,OAAAwD,EAAA,EAAAxD,CAAA,GAEP0F,EAAK,CACJkJ,OACAupC,uBAKNzrB,GAAS,EAGX,OAAOA,KAGT0lG,sBAAwB,SAACD,GACvB7uH,EAAKzB,SAAS,CACZswH,0BAIJz+C,iBAAmB,SAACC,GAEdA,IAAkBA,EAAcvrE,cAAc0zC,MAAM,gBACtD63B,EAAgB,MAGdA,IAAkBrwE,EAAKrC,MAAM0yE,eAC/BrwE,EAAKzB,SAAS,CACZ8xE,gBACAi8C,0BAAyB,OA2O/BvhG,uBAAyB,WACvB,IAAM7e,EAAW,CACfnR,MAAMiF,EAAKrC,MAAM5C,MACjBY,OAAOqE,EAAKrC,MAAMhC,QAGd27H,EAAenuH,OAAO0tH,aAAe72H,EAAKrC,MAAM5C,MAChDw8H,EAAgBpuH,OAAO2tH,cAAgB92H,EAAKrC,MAAMhC,OAExD,OAAI27H,GAAgBC,GACdD,IACFprH,EAASnR,MAAQoO,OAAO0tH,YAEtBU,IACFrrH,EAASvQ,OAASwN,OAAO2tH,aAEpB92H,EAAKzB,SAAS2N,IAGhB,QAITy3C,OAASx0C,IAAci4C,mFA3XjB7rD,KAAKsC,cACPtC,KAAKsC,cAAcC,SAASvC,KAAKC,OAEjCD,KAAKsC,cAAgB,IAAIE,KAAcxC,KAAKC,iFA2HhCuH,EAAGy0H,4FACVj8H,KAAKgD,SAAS,SAAAZ,GAAK,OAAAjB,OAAAuD,EAAA,EAAAvD,CAAA,GAASiB,EAAT,CAAgB44H,YAAaiB,8RAIjDtrH,EAAW,GACXi4B,EAAsB,GACtBujB,EAAkBnsD,KAAKoC,MAAMypD,SAAW7rD,KAAKoC,MAAMypD,QAAQm8D,iBAAoBhoH,KAAKoC,MAAMypD,QAAQ+Z,QAAQ54D,IAAMhN,KAAKoC,MAAMypD,QAAQl0B,SAAS3qB,GAAM4G,IAAci4C,QAAQM,gBAK9KhrD,OAAOqF,KAAK8D,GAAgB6hD,IAAkBjiD,QAAQ,SAAColC,GACrD1G,EAAoB0G,GAAYnuC,OAAOqF,KAAK8D,GAAgB6hD,GAAiB7c,IAAWpe,OAAQ,SAACxlB,EAAc/B,GAC7G,IAAMU,EAAcC,GAAgB6hD,GAAiB7c,GAAU3lC,GACzDuyH,GAAc7xH,EAAYuuH,cAAgBvuH,EAAYuuH,YAAY7zH,QAAUsF,EAAYuuH,YAAYhvH,SAASxE,EAAKhD,MAAM24H,YAI9H,OAHI1wH,EAAY8mB,SAAW+qG,IACzBxwH,EAAc/B,GAASU,GAElBqB,GACP,MAGJiF,EAASi4B,oBAAsBA,GAGzB9wB,EAAmB9X,KAAKoC,MAAM0V,mBACZ8wB,EAAoB9wB,KAC1CnH,EAASrG,gBAAkBs+B,EAAoB9wB,IAGzC1N,EAAgBpK,KAAKoC,MAAMgI,gBACZuG,EAASrG,gBAAgBF,KAC5CuG,EAAStG,YAAcsG,EAASrG,gBAAgBF,cAM9CpK,KAAKgD,SAAS2N,sLAGCmH,EAAiB1N,yFAEhCwG,EAAW,WACfrE,EAAK4vH,uBAGDxrH,EAAW,CACftG,YAAaD,EAAuBpK,KAAKoC,MAAMiI,YAAlB,KAC7BC,gBAAiBF,EAAuBpK,KAAKoC,MAAMkI,gBAAlB,KACjCF,cAAeA,EAA+BpK,KAAKoC,MAAMgI,cAA1BA,EAC/B0N,iBAAkBA,EAAqC9X,KAAKoC,MAAM0V,iBAA7BA,GAGnCA,GAAoB9X,KAAKoC,MAAMwmC,qBAAuB9wB,IAAqB9X,KAAKoC,MAAM0V,kBAAoB3W,OAAOqF,KAAKxG,KAAKoC,MAAMwmC,qBAAqBh/B,SAASkO,EAAiBvO,iBAClLoH,EAASmH,iBAAmBA,EAAiBvO,eAG3Ca,GAAiBA,IAAkBpK,KAAKoC,MAAMgI,gBAC3CpK,KAAKoC,MAAMkI,iBAAmBnJ,OAAOqF,KAAKxG,KAAKoC,MAAMkI,iBAAiBV,SAASQ,EAAcpD,gBAChG2J,EAASvG,cAAgBA,EAAcpD,cACvC2J,EAAStG,YAAcrK,KAAKoC,MAAMkI,gBAAgBF,IACzCpK,KAAKoC,MAAMwmC,qBAAuBznC,OAAOqF,KAAKxG,KAAKoC,MAAMwmC,oBAAoB9wB,IAAmBlO,SAASQ,EAAcpD,iBAChI2J,EAASvG,cAAgBA,EAAcpD,cACvC2J,EAAStG,YAAcrK,KAAKoC,MAAMwmC,oBAAoB9wB,GAAkBnH,EAASvG,eACjFuG,EAASrG,gBAAkBtK,KAAKoC,MAAMwmC,oBAAoB9wB,cAMxD9X,KAAKgD,SAAS2N,EAASC,oLAGbkH,mFAEVlH,EAAW,WACfpE,EAAK2vH,wBAGHrkH,GAAoBA,IAAqB9X,KAAKoC,MAAM0V,mBAAoB3W,OAAOqF,KAAKxG,KAAKoC,MAAMwmC,qBAAqBh/B,SAASkO,EAAiBvO,sCAChJuO,EAAmBA,EAAiBvO,uBAC9BvJ,KAAKgD,SAAS,CAClB8U,oBACAlH,oCACQkH,oCACJ9X,KAAKgD,SAAS,CAClB8U,oBACAlH,gLAISxG,qFAEPwG,EAAW,WACfurB,EAAKggG,wBAGH/xH,GAAiBA,IAAkBpK,KAAKoC,MAAMgI,gBAAiBjJ,OAAOqF,KAAKxG,KAAKoC,MAAMkI,iBAAiBV,SAASQ,EAAcpD,sCAChIoD,EAAgBA,EAAcpD,eACxB2J,EAAW,CACfvG,kBAEOC,YAAcrK,KAAKoC,MAAMkI,gBAAgBF,YAC5CpK,KAAKgD,SAAS2N,EAASC,oCACpBxG,oCACHpK,KAAKgD,SAAS,CAClBoH,gBACAC,YAAY,MACZuG,kQAMJ5Q,KAAKyC,YAELmL,OAAOyI,MAAQrW,KAAKsC,cAAc+T,MAGbzI,OAAOsgD,SAASC,OAAO5kD,cAAcK,SAASgK,IAAcqrC,QAAQ11C,iBAEvFqE,OAAOkuB,QAAQ/d,MAAQ,aACvBnQ,OAAOkuB,QAAQsgG,KAAO,cAGxBxuH,OAAOyuH,OAASA,IAEZzuH,OAAO+T,eACT3hB,KAAKsC,cAAci7E,iBAAiB,WAGpBv9E,KAAKsC,cAAcsrE,cAAc,WAAU,KAC3Ch6D,IAAcorC,UAC5Bh/C,KAAKsC,cAAc46E,gBAAgB,CAAC,iBAAiB,gBAAgB,cACrEl9E,KAAKsC,cAAc0f,gBAAgB,UAAUpO,IAAcorC,YAIzD1pC,EAAYtV,KAAKsC,cAAcsrE,cAAc,aAAY,KAE7D5tE,KAAKs8H,aAAahnH,GAGpB1H,OAAO2uH,YAAc,SAACC,GAEpB,IADA,IAAMC,EAAU9sG,SAAS+sG,qBAAqB,UACrCvyH,EAAE,EAAEA,EAAEsyH,EAAQ13H,OAAOoF,IAAI,CAChC,IAAMwyH,EAASF,EAAQtyH,GACnBwyH,EAAOC,gBAAkBJ,GAC3B5uH,OAAOyuH,OAAOM,GAAQE,QAAQ,qBAAqB,GAAG9/D,WAK5DnvD,OAAO2hB,iBAAiB,SAAUvvB,KAAKwvB,wBAEvCxvB,KAAK88H,oBACL98H,KAAK+8H,6KAGiB,IAAA1/F,EAAAr9B,KAEhB+6H,EADS/6H,KAAKsC,cAAcm0E,iBACN,OAAS,OACrCz2E,KAAKgD,SAAS,CACZ+3H,cACA,WACA19F,EAAK8+F,oEAKP,IAAKn8H,KAAKoC,MAAM0yE,eAES,WADA90E,KAAKsC,cAAcm2E,kBAAkB,UAC5B,CAC9B,IAAM3D,EAAgB90E,KAAKsC,cAAcsyE,mBACrCE,GAAiBA,IAAkB90E,KAAKoC,MAAM0yE,eAChD90E,KAAKgD,SAAS,CACZ8xE,kEAQRlnE,OAAO6hB,oBAAoB,SAAUzvB,KAAKwvB,mEAGzBvwB,EAAUC,GAI3B,GAHAc,KAAKyC,YAEyBvD,EAAUusH,iBAAmBzrH,KAAKoC,MAAMqpH,eAEpE,GAAkC,YAA9BzrH,KAAKoC,MAAMqpH,eACbzrH,KAAKs8H,aAAa,SAAQ,OACrB,CAEL,IAAMhnH,EAAYtV,KAAKsC,cAAcsrE,cAAc,aAAY,IAAU5tE,KAAKsC,cAAcwJ,gBAAgB,CAAC,YAAY,QAAQ,SACjI9L,KAAKs8H,aAAahnH,GAItB,IAAM+8G,EAAenzH,EAAUkL,gBAAkBpK,KAAKoC,MAAMgI,cACtD4yH,EAAkB99H,EAAU4Y,mBAAqB9X,KAAKoC,MAAM0V,iBAC5DmlH,EAAiB1xH,KAAKC,UAAUtM,EAAU2sD,WAAatgD,KAAKC,UAAUxL,KAAKoC,MAAMypD,UAEnFwmE,GAAgB2K,GAAmBC,IACrCj9H,KAAKm8H,kEAcP,GAHAvuH,OAAO8tH,iBAAmB17H,KAAK07H,iBAC/B9tH,OAAO6tH,kBAAoBz7H,KAAKy7H,kBAE5B95G,aAAa,CACf,IAAMyV,EAAgBzV,aAAaC,QAAQ,iBAAmBD,aAAaC,QAAQ,iBAAmB,SAChG0oG,EAAiB3oG,aAAaC,QAAQ,kBAAoBD,aAAaC,QAAQ,kBAAoB,SAEzG5hB,KAAKqqH,aAAajzF,EAAckzF,sCA6B1B74E,GACR,OAAOzxC,KAAKgD,SAAS,CAAEyuC,gDAGXjqC,GAIZ,OAHIA,GACFA,EAAE2D,iBAEGnL,KAAKgD,SAAS,CACnBg3C,SAAS,KACTohF,gBAAe,yCAIN5zH,EAAEwyC,GAGb,OAFAxyC,EAAE2D,iBAEKnL,KAAKgD,SAAS,CACnBg3C,WACAohF,gBAAe,6IAMjBp7H,KAAKgD,SAAS,CACZ8xE,cAAc,OAGhB90E,KAAKsC,cAAc46E,gBAAgB,CAAC,UAAU,YAAY,mJAGjDrxB,GACT7rD,KAAKgD,SAAS,CACZ6oD,iDAISz0B,EAAckzF,GAAe,IAAA/sF,EAAAv9B,KAEpCorH,EAAgBx3G,IAAcysC,WAAWjpB,EAAc7tB,eAK3D,IAJK6hH,GAAiBd,IACpBc,EAAgBx3G,IAAcysC,WAAWiqE,EAAe/gH,gBAGpD6hH,IAAkBA,EAAcj6F,SAA+B,aAAlBiG,IAAiCj2B,OAAOqF,KAAKoN,IAAcysC,YAAYz2C,SAASwtB,EAAc7tB,gBAAoB+gH,IAAmBnpH,OAAOqF,KAAKoN,IAAcysC,YAAYz2C,SAAS0gH,EAAe/gH,eACpP6tB,EAAgB,SAChBkzF,EAAiB,cACZ,GAAuB,aAAlBlzF,EAA8B,CACxC,IAAM8lG,EAAcnU,GAAYC,cAC1BK,EAAYN,GAAYM,YAG9B,OAAQiB,GACN,IAAK,YACE4S,GAAe7T,IAClBiB,EAAiB,UAErB,MACA,IAAK,UACEjB,GAAa6T,IAChB5S,EAAiB,aAWzB,OAHAtqH,KAAKsC,cAAc0f,gBAAgB,gBAAiBoV,GACpDp3B,KAAKsC,cAAc0f,gBAAgB,iBAAkBsoG,GAE9CtqH,KAAKgD,SAAS,CACnBo0B,gBACAkzF,kBACA,WACA/sF,EAAKu/F,2DAIIxnH,GAAqB,IAAX6nH,IAAWr4H,UAAAC,OAAA,QAAAC,IAAAF,UAAA,KAAAA,UAAA,GAC5Bq2H,EAAgB,KAGdh8E,EAAkBn/C,KAAKsC,cAAcwJ,gBAAgB,CAAC,YAAY,QAAQ,oBAKhF,OAJkB,SAAdwJ,GAAyB6pC,IAC3B7pC,EAAY,SAGNA,GACN,QACA,IAAK,QACH6lH,EAAgB90H,IAClB,MACA,IAAK,OACH80H,EAAgBiC,EAIhBD,GACFn9H,KAAKsC,cAAc0f,gBAAgB,YAAY1M,GAGjDtV,KAAKgD,SAAS,CACZsS,YACA6lH,4DAIc1P,GAChBzrH,KAAKgD,SAAS,CACZyoH,oDAIK,IAAA7oF,EAAA5iC,KACD+F,EAAW/F,KAAKoC,MAAM5C,OAAS,IAC/Bo3H,EAAoB52H,KAAKsC,cAAcwJ,gBAAgB,CAAC,aAAa,YAIrEuxH,EACJh6H,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE9D,MAAO,EACPqN,UAAW,QACXpN,WAAY,SACZC,cAAe,SACfK,eAAgB,SAChBO,gBAAiB,YAEjB+C,EAAAjE,EAAAC,cAACsN,GAAA,EAAD,CACEI,UAAW,CACTulC,SAAS,EACT9xC,WAAW,GAEbsM,YAAa,CACXvN,GAAG,EACH2D,KAAK,OACLhD,MAAM,WAER0M,UAAW,CACTxF,GAAG,EACH1H,cAAc,UAEhB2C,KAAM,MAKZ,OACEgB,EAAAjE,EAAAC,cAACstH,GAAA,EAAD,KACEtpH,EAAAjE,EAAAC,cAACy3H,GAAD,MACAzzH,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CACE+C,MAAOrG,KAAKoC,MAAM+4H,eAElB93H,EAAAjE,EAAAC,cAACi+H,EAAAl+H,EAAD,CACEm+H,QAASrK,IACT7yE,WAAYA,GACZm9E,YAAa,WAEbn6H,EAAAjE,EAAAC,cAACo+H,EAAA,aAAD,KACG,SAAAtT,GACC,OACE9mH,EAAAjE,EAAAC,cAACq+H,GAAD,CACEvT,QAASA,EACTpkH,SAAUA,EACVqiD,OAAQxlB,EAAKwlB,OACb/H,WAAYA,GACZh6C,MAAOu8B,EAAKxgC,MAAM+4H,cAClB7vG,WAAYsX,EAAKxgC,MAAMkpB,WACvBjhB,YAAau4B,EAAKxgC,MAAMiI,YACxBmoH,WAAY5vF,EAAK4vF,WAAWrlH,KAAKy1B,GACjCkyC,cAAelyC,EAAKxgC,MAAM0yE,cAC1B1qE,cAAew4B,EAAKxgC,MAAMgI,cAC1BgtB,cAAewL,EAAKxgC,MAAMg1B,cAC1BkzF,eAAgB1nF,EAAKxgC,MAAMkoH,eAC3BD,aAAcznF,EAAKynF,aAAal9G,KAAKy1B,GACrCt4B,gBAAiBs4B,EAAKxgC,MAAMkI,gBAC5BihB,cAAeqX,EAAKrX,cAAcpe,KAAKy1B,GACvCkxD,gBAAiBlxD,EAAKkxD,gBAAgB3mF,KAAKy1B,GAC3C0wF,mBAAoB1wF,EAAKxgC,MAAMkxH,mBAC/B1qF,oBAAqBhG,EAAKxgC,MAAMwmC,oBAChC2qF,sBAAuB3wF,EAAK2wF,sBAAsBpmH,KAAKy1B,GACvDmuF,yBAA0BnuF,EAAKxgC,MAAM2uH,0BAErC1tH,EAAAjE,EAAAC,cAACq+H,GAAW/G,SAAZ,KACG,SAAA5+G,GAmCK,IAlCJqH,EAkCIrH,EAlCJqH,KACAsjC,EAiCI3qC,EAjCJ2qC,OACAmJ,EAgCI9zC,EAhCJ8zC,QACAjgD,EA+BImM,EA/BJnM,QACAykH,EA8BIt4G,EA9BJs4G,SACAxiE,EA6BI91C,EA7BJ81C,SACAV,EA4BIp1C,EA5BJo1C,SACAxR,EA2BI5jC,EA3BJ4jC,UACAhuC,EA0BIoK,EA1BJpK,YACA2/G,EAyBIv1G,EAzBJu1G,YACAt8F,EAwBIjZ,EAxBJiZ,aACAvlB,EAuBIsM,EAvBJtM,aACAotE,EAsBI9gE,EAtBJ8gE,aACAs3C,EAqBIp4G,EArBJo4G,aAEAC,GAmBIr4G,EApBJa,cAoBIb,EAnBJq4G,gBAEA5B,GAiBIz2G,EAlBJ4lH,eAkBI5lH,EAjBJy2G,iBACAmC,EAgBI54G,EAhBJ44G,iBACAhC,EAeI52G,EAfJ42G,iBACAj1D,EAcI3hD,EAdJ2hD,iBACAD,EAaI1hD,EAbJ0hD,kBACA62D,EAYIv4G,EAZJu4G,kBACAI,EAWI34G,EAXJ24G,mBACAH,EAUIx4G,EAVJw4G,oBACAtB,EASIl3G,EATJk3G,oBACA4B,EAQI94G,EARJ84G,oBACA7sC,EAOIjsE,EAPJisE,qBACA8sC,EAMI/4G,EANJ+4G,qBACAnoF,EAKI5wB,EALJ4wB,qBACAqoF,EAIIj5G,EAJJi5G,uBACAJ,EAGI74G,EAHJ64G,yBACArrF,EAEIxtB,EAFJwtB,0BACA9O,EACI1e,EADJ0e,0BAEA,OACApzB,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,KACED,EAAAjE,EAAAC,cAACu+H,GAAA,EAAD,KACEv6H,EAAAjE,EAAAC,cAACu+H,GAAA,EAAD,CACE93F,KAAK,yCACLxT,OACE,SAACryB,GAAD,OACEoD,EAAAjE,EAAAC,cAACw+H,EAAA,SAAD,CACEC,SAAUT,GAEVh6H,EAAAjE,EAAAC,cAACu7H,GAADz5H,OAAAC,OAAA,GACMnB,EADN,CAEEmf,KAAMA,EACNsjC,OAAQA,EACRmJ,QAASA,EACTs+D,QAASA,EACTv+G,QAASA,EACTmyH,aAAa,EACb1N,SAAUA,EACVljE,SAAUA,EACVpnD,SAAUA,EACV8nD,SAAUA,EACVlS,UAAWA,EACX2xE,YAAaA,EACb6C,aAAcA,EACdt3C,aAAcA,EACd7nD,aAAcA,EACdvlB,aAAcA,EACduuC,SAAUpX,EAAKxgC,MAAM43C,SACrBqpE,OAAQzgF,EAAKygF,OAAOl2G,KAAKy1B,GACzBwtF,eAAgBA,EAChB96G,UAAWstB,EAAKxgC,MAAMkT,UACtBjP,MAAOu8B,EAAKxgC,MAAM+4H,cAClB3M,gBAAiBA,EACjByM,WAAYr4F,EAAKxgC,MAAM64H,WACvB3vG,WAAYsX,EAAKxgC,MAAMkpB,WACvB0yG,SAAUp7F,EAAKo7F,SAAS7wH,KAAKy1B,GAC7B+rF,iBAAkBA,EAClBj1D,iBAAkBA,EAClBi3D,iBAAkBA,EAClBtmH,YAAau4B,EAAKxgC,MAAMiI,YACxBovD,kBAAmBA,EACnB62D,kBAAmBA,EACnBI,mBAAoBA,EACpBtmH,cAAew4B,EAAKxgC,MAAMgI,cAC1BgtB,cAAewL,EAAKxgC,MAAMg1B,cAC1B6mG,YAAar7F,EAAKq7F,YAAY9wH,KAAKy1B,GACnCqsF,oBAAqBA,EACrBsB,oBAAqBA,EACrBM,oBAAqBA,EACrBvG,eAAgB1nF,EAAKxgC,MAAMkoH,eAC3B8Q,eAAgBx4F,EAAKxgC,MAAMg5H,eAC3Bp3C,qBAAsBA,EACtBr7C,qBAAsBA,EACtBu1F,aAAct7F,EAAKs7F,aAAa/wH,KAAKy1B,GACrCkuF,qBAAsBA,EACtBqN,gBAAiBv7F,EAAKw7F,UAAUjxH,KAAKy1B,GACrCynF,aAAcznF,EAAKynF,aAAal9G,KAAKy1B,GACrC05F,aAAc15F,EAAK05F,aAAanvH,KAAKy1B,GACrCt4B,gBAAiBs4B,EAAKxgC,MAAMkI,gBAC5B+zH,cAAez7F,EAAKy7F,cAAclxH,KAAKy1B,GACvCrX,cAAeqX,EAAKrX,cAAcpe,KAAKy1B,GACvC9qB,iBAAkB8qB,EAAKxgC,MAAM0V,iBAC7Bk5G,uBAAwBA,EACxBl9B,gBAAiBlxD,EAAKkxD,gBAAgB3mF,KAAKy1B,GAC3CgT,iBAAkBhT,EAAKgT,iBAAiBzoC,KAAKy1B,GAC7CguF,yBAA0BA,EAC1BhoF,oBAAqBhG,EAAKxgC,MAAMwmC,oBAChC0jF,kBAAmB1pF,EAAK0pF,kBAAkBn/G,KAAKy1B,GAC/C2C,0BAA2BA,EAC3B9O,0BAA2BA,EAC3B88F,sBAAuB3wF,EAAK2wF,sBAAsBpmH,KAAKy1B,UAQ/Dg0F,GACEvzH,EAAAjE,EAAAC,cAACu+H,GAAA,EAAD,CACE93F,KAAK,kCACLxT,OACE,SAACryB,GAAD,OACEoD,EAAAjE,EAAAC,cAACw+H,EAAA,SAAD,CACEC,SAAUT,GAEVh6H,EAAAjE,EAAAC,cAACw7H,GAAD15H,OAAAC,OAAA,GACMnB,EADN,CAEEmf,KAAMA,EACNsjC,OAAQA,EACRmJ,QAASA,EACTs+D,QAASA,EACTv+G,QAASA,EACTykH,SAAUA,EACVljE,SAAUA,EACVpnD,SAAUA,EACV8nD,SAAUA,EACVywE,cAAc,EACd3iF,UAAWA,EACX2xE,YAAaA,EACbz0C,aAAcA,EACd7nD,aAAcA,EACdvlB,aAAcA,EACduuC,SAAUpX,EAAKxgC,MAAM43C,SACrBqpE,OAAQzgF,EAAKygF,OAAOl2G,KAAKy1B,GACzBwtF,eAAgBA,EAChB96G,UAAWstB,EAAKxgC,MAAMkT,UACtBjP,MAAOu8B,EAAKxgC,MAAM+4H,cAClB3M,gBAAiBA,EACjByM,WAAYr4F,EAAKxgC,MAAM64H,WACvB3vG,WAAYsX,EAAKxgC,MAAMkpB,WACvB0yG,SAAUp7F,EAAKo7F,SAAS7wH,KAAKy1B,GAC7B+rF,iBAAkBA,EAClBj1D,iBAAkBA,EAClBi3D,iBAAkBA,EAClBtmH,YAAau4B,EAAKxgC,MAAMiI,YACxBovD,kBAAmBA,EACnB62D,kBAAmBA,EACnBI,mBAAoBA,EACpBtmH,cAAew4B,EAAKxgC,MAAMgI,cAC1BgtB,cAAewL,EAAKxgC,MAAMg1B,cAC1B6mG,YAAar7F,EAAKq7F,YAAY9wH,KAAKy1B,GACnCqsF,oBAAqBA,EACrBsB,oBAAqBA,EACrBM,oBAAqBA,EACrBvG,eAAgB1nF,EAAKxgC,MAAMkoH,eAC3B8Q,eAAgBx4F,EAAKxgC,MAAMg5H,eAC3BzyF,qBAAsBA,EACtBu1F,aAAct7F,EAAKs7F,aAAa/wH,KAAKy1B,GACrCkuF,qBAAsBA,EACtBqN,gBAAiBv7F,EAAKw7F,UAAUjxH,KAAKy1B,GACrCynF,aAAcznF,EAAKynF,aAAal9G,KAAKy1B,GACrC05F,aAAc15F,EAAK05F,aAAanvH,KAAKy1B,GACrCt4B,gBAAiBs4B,EAAKxgC,MAAMkI,gBAC5B+zH,cAAez7F,EAAKy7F,cAAclxH,KAAKy1B,GACvCrX,cAAeqX,EAAKrX,cAAcpe,KAAKy1B,GACvC9qB,iBAAkB8qB,EAAKxgC,MAAM0V,iBAC7Bk5G,uBAAwBA,EACxBl9B,gBAAiBlxD,EAAKkxD,gBAAgB3mF,KAAKy1B,GAC3CgT,iBAAkBhT,EAAKgT,iBAAiBzoC,KAAKy1B,GAC7CguF,yBAA0BA,EAC1BhoF,oBAAqBhG,EAAKxgC,MAAMwmC,oBAChC0jF,kBAAmB1pF,EAAK0pF,kBAAkBn/G,KAAKy1B,GAC/C2C,0BAA2BA,EAC3B9O,0BAA2BA,EAC3B88F,sBAAuB3wF,EAAK2wF,sBAAsBpmH,KAAKy1B,UAOrEv/B,EAAAjE,EAAAC,cAACu+H,GAAA,EAAD,KACEv6H,EAAAjE,EAAAC,cAACk/H,GAAD,CACE77E,OAAQA,EACRmJ,QAASA,EACTs+D,QAASA,EACTv+G,QAASA,EACTykH,SAAUA,EACVtqH,SAAUA,EACV41C,UAAWA,EACX2xE,YAAaA,EACbt8F,aAAcA,EACdgpB,SAAUpX,EAAKxgC,MAAM43C,SACrBo2E,eAAgBA,EAChB/M,OAAQzgF,EAAKygF,OAAOl2G,KAAKy1B,GACzB4rF,gBAAiBA,EACjByM,WAAYr4F,EAAKxgC,MAAM64H,WACvBtM,iBAAkBA,EAClBj1D,iBAAkBA,EAClBi3D,iBAAkBA,EAClBtmH,YAAau4B,EAAKxgC,MAAMiI,YACxBovD,kBAAmBA,EACnB62D,kBAAmBA,EACnBlmH,cAAew4B,EAAKxgC,MAAMgI,cAC1BgtB,cAAewL,EAAKxgC,MAAMg1B,cAC1B63F,oBAAqBA,EACrBsB,oBAAqBA,EACrBjG,eAAgB1nF,EAAKxgC,MAAMkoH,eAC3B8Q,eAAgBx4F,EAAKxgC,MAAMg5H,eAC3BzyF,qBAAsBA,EACtBu1F,aAAct7F,EAAKs7F,aAAa/wH,KAAKy1B,GACrCkuF,qBAAsBA,EACtBqN,gBAAiBv7F,EAAKw7F,UAAUjxH,KAAKy1B,GACrCynF,aAAcznF,EAAKynF,aAAal9G,KAAKy1B,GACrCt4B,gBAAiBs4B,EAAKxgC,MAAMkI,gBAC5B+zH,cAAez7F,EAAKy7F,cAAclxH,KAAKy1B,GACvCouF,uBAAwBA,EACxBJ,yBAA0BA,EAC1BrrF,0BAA2BA,EAC3By4F,SAAW,SAAAx2H,GAAOo7B,EAAKo7F,SAASx2H,MAGZ,eAArBo7B,EAAKxgC,MAAMqvC,MACVpuC,EAAAjE,EAAAC,cAACm/H,GAAD,CACEp/G,KAAMA,EACNxT,QAASA,EACTwkH,eAAgBA,EAChBG,oBAAqBA,EACrBD,kBAAmBA,EACnBhD,YAAaA,EACbwD,qBAAsBA,EACtB7B,oBAAqBA,EACrBN,iBAAkBA,EAClBiC,yBAA0BA,EAC1BD,iBAAkBA,EAClBK,uBAAwBA,EACxBxC,gBAAiBA,EACjBjpF,0BAA2BA,EAC3Bmd,OAAQA,EACRmJ,QAASA,EACTl+C,YAAaA,IAEb,KAEkB,YAArBi1B,EAAKxgC,MAAMqvC,MACVpuC,EAAAjE,EAAAC,cAACu+H,GAAA,EAAD,KACEv6H,EAAAjE,EAAAC,cAACu+H,GAAA,EAAD,CAAOa,OAAK,EAAC34F,KAAK,IAChBxT,OAAS,SAACryB,GAAD,OACPoD,EAAAjE,EAAAC,cAACw+H,EAAA,SAAD,CACEC,SAAUT,GAEVh6H,EAAAjE,EAAAC,cAACo7H,GAADt5H,OAAAC,OAAA,GACMnB,EADN,CAEEmf,KAAMA,EACNysC,QAASA,EACTjgD,QAASA,EACT7F,SAAUA,EACV8nD,SAAUA,EACVlS,UAAWA,EACX3qB,aAAcA,EACdsqG,WAAY14F,EAAKxgC,MAAM5C,MACvB6jH,OAAQzgF,EAAKygF,OAAOl2G,KAAKy1B,GACzB24F,YAAa34F,EAAKxgC,MAAMhC,OACxBgwH,eAAgBA,EAChB96G,UAAWstB,EAAKxgC,MAAMkT,UACtBjP,MAAOu8B,EAAKxgC,MAAM+4H,cAClB7vG,WAAYsX,EAAKxgC,MAAMkpB,WACvB2vG,WAAYr4F,EAAKxgC,MAAM64H,WACvBD,YAAap4F,EAAKxgC,MAAM44H,YACxB3wH,YAAau4B,EAAKxgC,MAAMiI,YACxBimH,kBAAmBA,EACnB72D,kBAAmBA,EACnBqb,cAAelyC,EAAKxgC,MAAM0yE,cAC1B1qE,cAAew4B,EAAKxgC,MAAMgI,cAC1BmmH,oBAAqBA,EACrBkL,kBAAmB74F,EAAK64F,kBACxB9yF,qBAAsBA,EACtBu1F,aAAct7F,EAAKs7F,aAAa/wH,KAAKy1B,GACrC05F,aAAc15F,EAAK05F,aAAanvH,KAAKy1B,GACrC+4F,mBAAoB/4F,EAAK+4F,mBACzBrxH,gBAAiBs4B,EAAKxgC,MAAMkI,gBAC5BihB,cAAeqX,EAAKrX,cAAcpe,KAAKy1B,GACvC87F,kBAAmB97F,EAAKw7F,UAAUjxH,KAAKy1B,GACvCy4F,kBAAmBz4F,EAAKxgC,MAAMi5H,kBAC9BvnC,gBAAiBlxD,EAAKkxD,gBAAgB3mF,KAAKy1B,GAC3CgG,oBAAqBhG,EAAKxgC,MAAMwmC,oBAChC0jF,kBAAmB1pF,EAAK0pF,kBAAkBn/G,KAAKy1B,GAC/C2C,0BAA2BA,EAC3By4F,SAAW,SAAAx2H,GAAOo7B,EAAKo7F,SAASx2H,OAElCnE,EAAAjE,EAAAC,cAAC8pC,GAAA/pC,EAAD,CACEu/H,QAAS,IACT96H,WAAY,KACZqqD,SAAU,SACV0wE,gBAAgB,EAChBC,WAAY,iBACZC,yBAA0B,EAC1Bl/H,MAAO,CAACkS,WAAY,yBAAyBxM,OAAO,WACpDgmH,YAAa,CAACnoH,QAAS4C,EAAW,QAAU,OAAQzF,gBAAgB,UAAWJ,MAAO,QAAS6+H,UAAWh5H,EAAW,MAAQ,SAE7H1C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAM5D,cAAe,MAAOD,WAAY,CAAC,aAAa,UAAWM,eAAgB,aAAckE,UAAW,CAAC,QAAQ,WAAYrE,MAAQmG,EAAW,CAACi5H,UAAU,UAAY,MACvK37H,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAOH,QAAS,CAAC,OAAO,SAAUiR,IAAK,oBAAqB5U,MAAO,OAAQY,OAAQ,SACnFiD,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMiqC,GAAI,CAAC,EAAE,GAAIrtC,MAAO,YAAaK,SAAU,EAAGE,UAAW,WAA7D,4RAC2R4C,EAAAjE,EAAAC,cAACiE,EAAA,EAAD,CAAMmgB,KAAM,gEAAiEjV,OAAQ,SAAUC,IAAI,+BAA+B3G,WAAY,QAA9I,iBAD3R,+LASVzE,EAAAjE,EAAAC,cAACu+H,GAAA,EAAD,CAAOa,OAAK,EAAC34F,KAAK,qBAChBziC,EAAAjE,EAAAC,cAAC4/H,EAAD,OAEF57H,EAAAjE,EAAAC,cAACu+H,GAAA,EAAD,KACEv6H,EAAAjE,EAAAC,cAAC6/H,GAAD,QAGF,OAGR77H,EAAAjE,EAAAC,cAAC8/H,GAAD,CACE1zH,aAAcA,EACd6J,UAAWstB,EAAKxgC,MAAMkT,4BAn6BhCtU,aCjBEo+H,QACW,cAA7BxxH,OAAOsgD,SAASmxE,UAEe,UAA7BzxH,OAAOsgD,SAASmxE,UAEhBzxH,OAAOsgD,SAASmxE,SAASpiF,MACvB,2DCX2B,cAA7BrvC,OAAOsgD,SAASmxE,UAClB7K,IAAY,CACV8K,IAAK,6DACLC,WAFU,SAECj+F,EAAOk+F,GAChB,IAAI3xG,EAASyT,EACPvjB,EAAQyhH,EAAKC,kBAMnB,OALI1hH,GAASA,EAAM+yB,SACb/yB,EAAM+yB,QAAQmM,MAAM,iDACtBpvB,GAAS,GAGNA,KAKb6xG,IAASptG,OAAOjvB,EAAAjE,EAAAC,cAACsgI,GAAD,MAAShwG,SAASC,eAAe,SD0G3C,kBAAmB4rC,WACrBA,UAAUokE,cAAcC,MAAMlF,KAAK,SAAAmF,GACjCA,EAAaC,wHE/HbtyH,mLACK,IAAAhJ,EAAAzE,KACDggI,EAAiBhgI,KAAKC,MAAMgO,eAC5BpI,EAAkD,oBAA3B7F,KAAKC,MAAMyB,YACxC,OACEH,EAAAnC,EAAAC,cAACuQ,EAAA,EAADzO,OAAAC,OAAA,CACEqE,UAAW,CACTlG,GAAG,EACHC,MAAM,EACNmG,GAAG,CAAC,EAAE,GACND,GAAG,CAAC,EAAE,SAERsH,GAAIhN,KAAKC,MAAM+N,QACXhO,KAAKC,MAAMyN,SARjB,CASEnK,UAAWvD,KAAKC,MAAM0J,MACtB9D,cAAeA,EACfnE,YAAcmE,EAAgB,SAAA2B,GAAC,OAAI/C,EAAKxE,MAAMyB,YAAY+C,EAAKxE,QAAS,OAExEsB,EAAAnC,EAAAC,cAACmC,EAAA,EAAD,CACE9B,cAAe,MACfsN,GAAIhN,KAAKC,MAAM8N,OAGb/N,KAAKC,MAAMoN,KAAK3G,IAAI,SAACu5H,EAAQC,GAC3B,OAAwB,IAApBD,EAAQlxE,UAAyC,IAAnBkxE,EAAQ1uF,QAAoB9sC,EAAKxE,MAAM8F,SAChE,KAGPxE,EAAAnC,EAAAC,cAACmC,EAAA,EAADL,OAAAC,OAAA,CACEyF,IAAG,OAAAT,OAAS85H,IACRD,EAAQhgI,OAEZsB,EAAAnC,EAAAC,cAACmC,EAAA,EAADL,OAAAC,OAAA,CACE5B,MAAO,EACPC,WAAY,SACZC,cAAe,OACXugI,EAAQ18F,aAGV08F,EAAQ3uF,OAAO5qC,IAAI,SAAC0kB,EAAU+0G,GAC5B,OAA0B,IAAtB/0G,EAAU2jC,UAA2C,IAArB3jC,EAAUmmB,QAAoB9sC,EAAKxE,MAAM8F,SACpE,KAGPxE,EAAAnC,EAAAC,cAACmC,EAAA,EAADL,OAAAC,OAAA,CACEhB,OAAQ,OACRV,cAAe,SACfD,WAAY,aACZM,eAAgB,UACZqrB,EAAUmY,YALhB,CAME3jC,MAAOwrB,EAAUxrB,OAAS,CACxBqG,SAAS,UAEXzG,MAAOygI,EAAQ3uF,OAAOvsC,OAAO,EAAI,OAAS,EAC1CiI,GAAE,SAAA5G,OAAW85H,EAAX,KAAA95H,OAAuB+5H,EAAvB,KAAA/5H,OAAqCglB,EAAUplB,MACjDa,IAAG,SAAAT,OAAW85H,EAAX,KAAA95H,OAAuB+5H,EAAvB,KAAA/5H,OAAqCglB,EAAUplB,QAElDzE,EAAAnC,EAAAC,cAAC2gI,EAAD7+H,OAAAC,OAAA,GACMqD,EAAKxE,MADX,CAEEmrB,UAAWA,EACXg1G,SAAUH,EAAQhgI,MAClByd,SAAQ,SAAAtX,OAAW85H,EAAX,KAAA95H,OAAuB+5H,EAAvB,KAAA/5H,OAAqCglB,EAAUplB,yBA7D9DhF,aA8ERyM,gHC9ETL,mLACK,IAAA3I,EAAAzE,KACP,OACEuB,EAAAnC,EAAAC,cAACmC,EAAA,EAAD,CACEhC,MAAO,EACPmG,GAAI,CAAC,EAAE,GACPoB,GAAI,CAAC,EAAE,GACPrH,cAAe,OAGbM,KAAKC,MAAMoN,KAAK3G,IAAI,SAACu5H,EAAQC,GAE3B,OAAwB,IAApBD,EAAQlxE,UAAyC,IAAnBkxE,EAAQ1uF,QAAoB9sC,EAAKxE,MAAM8F,SAChE,KAGDk6H,EAAQ17G,OAAS07G,EAAQ17G,MAAMxf,OACrCxD,EAAAnC,EAAAC,cAACghI,EAAA,EAADl/H,OAAAC,OAAA,GACMqD,EAAKxE,MACLggI,EAAQhgI,MAFd,CAGE0xC,KAAMsuF,EAAQtuF,KACdptB,MAAO07G,EAAQ17G,MACf1d,IAAG,cAAAT,OAAgB85H,KAElBD,EAAQ17G,OAGXhjB,EAAAnC,EAAAC,cAACmC,EAAA,EAADL,OAAAC,OAAA,CAAMyF,IAAG,cAAAT,OAAgB85H,IAAgBD,EAAQhgI,kBA3BrCe,aAoCXoM,+GCpCTiqB,mLAGF,IAAM5xB,EAAYtE,OAAOC,OAAO,CAC9BgO,EAAE,GACFpP,KAAKC,MAAMwF,WACb,OACEiP,EAAAtV,EAAAC,cAACuQ,EAAA,EAAD,CACEnK,UAAWA,GAEXiP,EAAAtV,EAAAC,cAACsV,EAAA,EAAD,CACElV,WAAY,SACZC,cAAe,UAEfgV,EAAAtV,EAAAC,cAACsV,EAAA,EAADxT,OAAAC,OAAA,CACE8B,KAAM,QACNhD,MAAO,WACP8F,KAAMhG,KAAKC,MAAMiU,KAAOlU,KAAKC,MAAMiU,KAAO,eACtClU,KAAKC,MAAM6uB,YAGf9uB,KAAKC,MAAMoC,MACTqS,EAAAtV,EAAAC,cAACsV,EAAA,EAADxT,OAAAC,OAAA,CACE8E,GAAI,EACJ3F,SAAU,EACVL,MAAO,WACPO,UAAW,SACXI,wBAAyB,CACvBC,OAAOd,KAAKC,MAAMoC,OAEhBrC,KAAKC,MAAM8M,YAInB/M,KAAKC,MAAM0B,kBAlCDX,aA0CPq2B,8OCnCT+e,6MAEJh0C,MAAQ,CACNy/E,MAAM,EACN15E,SAAQ,EACRmB,OAAO,UACP4U,WAAW,CACTiX,QAAQ,CACN5nB,OAAO,KACPpF,SAAQ,GAEVO,QAAQ,CACN6E,OAAO,KACPpF,SAAQ,GAEVI,OAAO,CACLgF,OAAO,KACPpF,SAAQ,IAGZ+rB,WAAW,GACX2e,WAAU,EACVytF,aAAa,KACbC,cAAc,KACdC,eAAc,EACdlsG,gBAAe,EACfgf,iBAAiB,KACjB9e,oBAAoB,GACpBsqD,mBAAmB,KACnB2hD,sBAAqB,EACrB91E,yBAAwB,EACxBo0B,yBAAyB,KACzBtrC,0BAA0B,QAI5BnxC,cAAgB,OAUhB87B,UAAY,SAAC90B,GACI,OAAXA,GACF7E,EAAKzB,SAAS,CACZsG,cAKNo3H,oBAAsB,SAACF,GACrB/7H,EAAKzB,SAAS,CACZw9H,kBAG4C,oBAAnC/7H,EAAKxE,MAAMygI,qBACpBj8H,EAAKxE,MAAMygI,oBAAoBF,MAInC/rG,iBAAmB,SAACjtB,GAClB,IAAK/C,EAAKrC,MAAMkH,OACd,OAAO,EAET,IAAMwB,EAAStD,EAAEgH,OAAOzN,MAAMgE,SAAW8J,MAAMrH,EAAEgH,OAAOzN,OAAS0D,EAAKnC,cAAc+T,MAAM7O,EAAEgH,OAAOzN,OAAS0D,EAAKnC,cAAc+T,MAAM,GAErI5R,EAAKzB,SAAS,SAAC9D,GAAD,MAAgB,CAC5Bs1B,oBAAoBrzB,OAAAw/H,EAAA,EAAAx/H,CAAA,GACfjC,EAAUs1B,oBADIrzB,OAAAy/H,EAAA,EAAAz/H,CAAA,GAEhBsD,EAAKrC,MAAMkH,OAAS,OAEvB4qB,WAAW/yB,OAAAw/H,EAAA,EAAAx/H,CAAA,GACNjC,EAAUg1B,WADL/yB,OAAAy/H,EAAA,EAAAz/H,CAAA,GAEPsD,EAAKrC,MAAMkH,OAASwB,UAK3BmqB,oBAAsB,WAAiB,IAAhBnqB,EAAgBhG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAT,KAC5B,IAAKL,EAAKrC,MAAMkH,OACd,OAAO,EAEJwB,IACHA,EAASrG,EAAKrC,MAAM8xB,WAAWzvB,EAAKrC,MAAMkH,SAE5C,IAAIgrB,GAAiB,EACrB,GAAIxpB,EAEF,OADAwpB,EAAiBxpB,EAAOoqB,IAAI,GACpBzwB,EAAKrC,MAAMkH,QACjB,IAAK,UACL,IAAK,SACHgrB,EAAiBA,GAAkBxpB,EAAOqO,GAAG1U,EAAKrC,MAAMm+H,eAM9D97H,EAAKzB,SAAS,CACZsxB,sBAIJM,cAAgB,WACd,IAAKnwB,EAAKrC,MAAMkH,QAAgE,OAAtD7E,EAAKrC,MAAMoyB,oBAAoB/vB,EAAKrC,MAAMkH,QAClE,OAAO,EAGT,IAAIwB,EAAS,KACP+pB,EAAqBpwB,EAAKnC,cAAc+T,MAAM5R,EAAKrC,MAAMoyB,oBAAoB/vB,EAAKrC,MAAMkH,SAAS0X,IAAI,KAE3G,OAAOvc,EAAKrC,MAAMkH,QAChB,IAAK,UACL,IAAK,SACHwB,EAASrG,EAAKrC,MAAMm+H,cAAgB97H,EAAKnC,cAAc+T,MAAM5R,EAAKrC,MAAMm+H,eAAe5sH,MAAMkhB,GAAsB,KAMvHpwB,EAAKzB,SAAS,SAAC9D,GAAD,MAAgB,CAC5Bg1B,WAAW/yB,OAAAw/H,EAAA,EAAAx/H,CAAA,GACNjC,EAAUg1B,WADL/yB,OAAAy/H,EAAA,EAAAz/H,CAAA,GAEPsD,EAAKrC,MAAMkH,OAASwB,UAK3BkqB,uBAAyB,SAAC/W,GACxB,IAAKxZ,EAAKrC,MAAMkH,OACd,OAAO,EAET7E,EAAKzB,SAAS,SAAC9D,GAAD,MAAgB,CAC5Bs1B,oBAAoBrzB,OAAAw/H,EAAA,EAAAx/H,CAAA,GACfjC,EAAUs1B,oBADIrzB,OAAAy/H,EAAA,EAAAz/H,CAAA,GAEhBsD,EAAKrC,MAAMkH,OAAS2U,UAK3B4iH,mCAAgB,SAAAtiH,IAAA,IAAA2V,EAAA/rB,EAAA82E,EAAA6hD,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA1iH,EAAApf,EAAA6W,KAAA,SAAAwI,GAAA,cAAAA,EAAAtI,KAAAsI,EAAArI,MAAA,UAER8d,EAAazvB,EAAKrC,MAAM8xB,WAAWzvB,EAAKrC,MAAMkH,SAEhD7E,EAAKrC,MAAMkyB,gBAAmBJ,IAAczvB,EAAKnC,cAAc+T,MAAM6d,GAAYgB,IAAI,GAJ3E,CAAAzW,EAAArI,KAAA,eAAAqI,EAAAgB,OAAA,UAKL,GALK,OAQRtX,GAAU,EARFsW,EAAA+6C,GAUN/0D,EAAKrC,MAAMkH,OAVLmV,EAAArI,KAWP,WAXOqI,EAAA+6C,GAAA,qBAaL/0D,EAAKxE,MAAMoK,YAAYsrC,WAAclxC,EAAKxE,MAAMoK,YAAYsrC,UAAUF,YAbjE,CAAAh3B,EAAArI,KAAA,eAAAqI,EAAAgB,OAAA,UAcD,GAdC,cAiBJw/D,EAAkBx6E,EAAKxE,MAAMoK,YAAYsrC,UAAUF,YAAYzvC,KAE/D86H,EAAoBr8H,EAAKnC,cAAc8zB,qBAAqBlC,EAAW,KAGtD,EACD,KAUhB8sG,GADAD,EAAgG,IAClDh8H,SAAyD,IAA/Cg8H,EAA6Br1G,QAAQ,KAAcjnB,EAAKnC,cAAc+T,MAAM,MAAW5R,EAAKnC,cAAc+T,MAAM,KAExK4qH,EAAiB,SAACx3H,EAAGsU,GACzB,IAAMoW,EAA4B,YAAd1qB,EAAGrF,OAGjBmxB,EAAY,CAChB/C,cAAa,aACbC,YAAahuB,EAAKxE,MAAMmK,cACxBsoB,WAAYjpB,EAAGrF,OACfiyB,WAAY/pB,SAAS4nB,IAGnBnW,IACFwX,EAAU7C,WAAajuB,EAAKnC,cAAckzB,oBAAoBzX,KAI5DA,GAA8B,UAArBwX,EAAUnxB,SACrBK,EAAKnC,cAAciwB,yBAAyBgD,GAG9C9wB,EAAKzB,SAAS,SAAC9D,GAAD,MAAgB,CAC5Bgf,WAAW/c,OAAAw/H,EAAA,EAAAx/H,CAAA,GACNjC,EAAUgf,WADL/c,OAAAy/H,EAAA,EAAAz/H,CAAA,GAEPsD,EAAKrC,MAAMkH,OAAQ,CAClBiE,OAAO,KACPpF,SAAQ,QAKVgsB,GACF1vB,EAAKzB,SAAS,SAAC9D,GAAD,MAAgB,CAC5Bg1B,WAAW/yB,OAAAw/H,EAAA,EAAAx/H,CAAA,GACNjC,EAAUg1B,WADL/yB,OAAAy/H,EAAA,EAAAz/H,CAAA,GAEPsD,EAAKrC,MAAMkH,OAAS7E,EAAKnC,cAAc+T,MAAM,SAMhD6qH,EAAwB,SAACz3H,GAC7B,IAAM8D,EAAS9D,EAAGgsB,gBAClBhxB,EAAKzB,SAAS,SAAC9D,GAAD,MAAgB,CAC5Bgf,WAAW/c,OAAAw/H,EAAA,EAAAx/H,CAAA,GACNjC,EAAUgf,WADL/c,OAAAy/H,EAAA,EAAAz/H,CAAA,GAEPsD,EAAKrC,MAAMkH,OAFJnI,OAAAw/H,EAAA,EAAAx/H,CAAA,GAGHjC,EAAUgf,WAAWzZ,EAAKrC,MAAMkH,QAH7B,CAINiE,iBAMR9I,EAAKxE,MAAMw2B,0BAA0BwoD,EAAiB,kBAAmB,CACvE6hD,GAnEqB,EAmEcC,GAClC,KAAME,EAAgBC,EAAuBF,GA1FtCviH,EAAAgB,OAAA,2BAAAhB,EAAAgB,OAAA,oBAgGdhb,EAAKzB,SAAS,SAAC9D,GAAD,MAAgB,CAC5Bgf,WAAW/c,OAAAw/H,EAAA,EAAAx/H,CAAA,GACNjC,EAAUgf,WADL/c,OAAAy/H,EAAA,EAAAz/H,CAAA,GAEPsD,EAAKrC,MAAMkH,OAFJnI,OAAAw/H,EAAA,EAAAx/H,CAAA,GAGHjC,EAAUgf,WAAWzZ,EAAKrC,MAAMkH,QAH7B,CAINnB,iBArGQ,yBAAAsW,EAAA7H,SAAA2H,EAAAve,WAoJhBmhI,8BAAgC,SAACx2E,GAC/BlmD,EAAKzB,SAAS,CACZ2nD,+BAIJy2E,oDAAiC,SAAAriH,IAAA,IAAAq1B,EAAAitF,EAAApiD,EAAAqiD,EAAA,OAAA9iH,EAAApf,EAAA6W,KAAA,SAAAiJ,GAAA,cAAAA,EAAA/I,KAAA+I,EAAA9I,MAAA,WAC3B3R,EAAKxE,MAAMoK,YAAYsrC,YAAalxC,EAAKxE,MAAMoK,YAAYsrC,UAAUxB,kBAD1C,CAAAj1B,EAAA9I,KAAA,YAEvBg+B,EAAwB3vC,EAAKxE,MAAMoK,YAAYsrC,UAAUxB,kBACzDktF,EAAwBjtF,EAAsBpuC,MAC1BvB,EAAKnC,cAAcuxB,kBAAkBwtG,GAJlC,CAAAniH,EAAA9I,KAAA,gBAMrB6oE,EAAkBx6E,EAAKxE,MAAMoK,YAAYsrC,UAAUF,YAAYzvC,KAN1CkZ,EAAA9I,KAAA,EAOC3R,EAAKnC,cAAc40B,mBAAmB+nD,EAAgB7qC,EAAsB3gC,QAAQhP,EAAKxE,MAAM2L,SAPhG,cAOrB01H,EAPqBpiH,EAAA/G,KAAA+G,EAAAO,OAAA,SAQpB6hH,GARoB,eAAApiH,EAAAO,OAAA,UAWxB,GAXwB,yBAAAP,EAAAtI,SAAAmI,EAAA/e,WAcjC2+E,oCAAiB,SAAA7oE,IAAA,IAAA3N,EAAAmrC,EAAAgtF,EAAAiB,EAAAxiD,EAAAtrC,EAAA0kE,EAAAooB,EAAAzhD,EAAAxoC,EAAAkrF,EAAAC,EAAAxiD,EAAAxpC,EAAAtB,EAAAtE,EAAAC,EAAA+C,EAAAliC,EAAA+wH,EAAA,OAAAljH,EAAApf,EAAA6W,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UAEV3R,EAAKxE,MAAMoK,aAAgB5F,EAAKxE,MAAM2L,QAF5B,CAAAsK,EAAAE,KAAA,eAAAF,EAAAuJ,OAAA,UAGN,GAHM,UAMXtX,GAAU,EACd1D,EAAKzB,SAAS,CACZmF,UACA+V,WAAW,CACTiX,QAAQ,CACN5nB,OAAO,KACPpF,SAAQ,GAEVO,QAAQ,CACN6E,OAAO,KACPpF,SAAQ,GAEVI,OAAO,CACLgF,OAAO,KACPpF,SAAQ,MAKVmrC,GAAmB,EACnBgtF,EAAe,aACfiB,EAAyB,KACzBxiD,EAA2B,KAC3BtrC,GAA4B,EAC5B0kE,EAAgB1zG,EAAKnC,cAAc+T,MAAM,GACzCkqH,EAAgB97H,EAAKnC,cAAc+T,MAAM,GACzCyoE,EAAqBr6E,EAAKnC,cAAc+T,MAAM,GAC5CigC,OAA6CtxC,IAA7BP,EAAKxE,MAAMq2C,eAA8B7xC,EAAKxE,MAAMq2C,eAGtE7xC,EAAKxE,MAAMoK,YAAYsrC,YAAalxC,EAAKxE,MAAMoK,YAAYsrC,UAAUxkB,QApC1D,CAAAjb,EAAAE,KAAA,YAqCPorH,EAAkB/8H,EAAKxE,MAAMoK,YAAYsrC,UAAUF,YACnDgsF,EAAiBD,EAAgBvwG,IACjCguD,EAAkBuiD,EAAgBx7H,MACpCyvC,EAAchxC,EAAKnC,cAAcuxB,kBAAkBorD,MAGnCwiD,EA3CP,CAAAvrH,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GA4CS3R,EAAKxE,MAAM+wB,aAAaiuD,EAAgBuiD,EAAgB/tH,QAAQguH,GA5CzE,QA4CXhsF,EA5CWv/B,EAAAiC,KAAA,YA+CTg8B,EAAoB1vC,EAAKnC,cAAcuxB,kBAAkBpvB,EAAKxE,MAAMoK,YAAYsrC,UAAUxB,kBAAkBnuC,SAEtFvB,EAAKxE,MAAMoK,YAAYsrC,UAAUxB,kBAAkBljB,IAjDhE,CAAA/a,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GAkDe3R,EAAKxE,MAAM+wB,aAAavsB,EAAKxE,MAAMoK,YAAYsrC,UAAUxB,kBAAkBnuC,KAAKvB,EAAKxE,MAAMoK,YAAYsrC,UAAUxB,kBAAkB1gC,QAAQhP,EAAKxE,MAAMoK,YAAYsrC,UAAUxB,kBAAkBljB,KAlD7M,QAkDXkjB,EAlDWj+B,EAAAiC,KAAA,YAqDTs9B,IAAetB,EArDN,CAAAj+B,EAAAE,KAAA,gBAuDXkqH,EAAe77H,EAAKxE,MAAMoK,YAAYsrC,UAAUF,YAAY9rC,MAvDjDuM,EAAAE,KAAA,GA8DDwI,QAAQkD,IAAI,CAEpBrd,EAAKnC,cAAco3D,iBAAiBulB,GAEpCx6E,EAAK28H,iCAEL38H,EAAKnC,cAAcg+B,mBAAmB2+C,EAAgBx6E,EAAKxE,MAAM2L,SAEhE0qC,EAAgB7xC,EAAKnC,cAAcw3B,oBAAoBmlD,EAAgB,cAAgB,OAtE/E,QAAApvC,EAAA35B,EAAAiC,KAAA23B,EAAA3uC,OAAA4gB,EAAA,EAAA5gB,CAAA0uC,EAAA,GA0DTkvC,EA1DSjvC,EAAA,GA2DT2D,EA3DS3D,EAAA,GA4DTgvC,EA5DShvC,EAAA,GA6DTqoE,EA7DSroE,EAAA,GA2EPgvC,IAEFyhD,EAAgB97H,EAAKnC,cAAc0W,iBAAiB8lE,EAAmBC,GACnEo5B,IACFA,EAAgB1zG,EAAKnC,cAAc0W,iBAAiBm/F,EAAc1zG,EAAKxE,MAAMoK,YAAYE,UACzFg3H,EAAyB98H,EAAKnC,cAAc+T,MAAMkqH,GAAe5sH,MAAMlP,EAAKnC,cAAc+T,MAAM8hG,KAGlG7kE,EAAmB7uC,EAAKnC,cAAc+T,MAAMyoE,GAAoB3lE,GAAG,IAnF1D,WAwFfhR,GAAU,EAGJ0qC,EAAYpuC,EAAKxE,MAAM4yC,UAEvBliC,EAAW,CACfxI,UACA0qC,YACAytF,eACAC,gBACAjtF,mBACAwrC,qBACAyiD,yBACAxiD,2BACAtrC,8BAGEhvC,EAAKxE,MAAMktD,SAzGA,CAAAj3C,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GA0GgB3R,EAAKnC,cAAc2/E,oBAAoBx9E,EAAKxE,MAAM2L,SA1GlE,SA0GP81H,EA1GOxrH,EAAAiC,QA2GUupH,EAAej5C,UACpC93E,EAAS8vH,sBAAuB,GA5GrB,cAgHoC,oBAAxCh8H,EAAKxE,MAAMyzC,0BACpBjvC,EAAKxE,MAAMyzC,yBAAyBJ,GAjHvBp9B,EAAAuJ,OAAA,SAuHRhb,EAAKzB,SAAS2N,IAvHN,yBAAAuF,EAAAU,SAAAd,EAAA9V,WA0HjB2hI,0DAAsB,SAAA3pH,EAAOxQ,GAAP,IAAA4sC,EAAA,OAAA51B,EAAApf,EAAA6W,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,OAChB5O,GACFA,EAAE2D,iBAEEipC,EAAwB3vC,EAAKxE,MAAMoK,YAAYsrC,UAAUxB,kBACrC1vC,EAAKnC,cAAcuxB,kBAAkBugB,EAAsBpuC,OAEnFvB,EAAKonF,aAAa,KAAKpnF,EAAKxE,MAAMoK,YAAYsrC,UAAUF,YAAYzvC,KAAKouC,EAAsB3gC,SAP7E,wBAAAwE,EAAArB,SAAAoB,EAAAhY,iEAWtB0jB,uCAAoB,SAAA3D,IAAA,OAAAvB,EAAApf,EAAA6W,KAAA,SAAAgK,GAAA,cAAAA,EAAA9J,KAAA8J,EAAA7J,MAAA,OAClB3R,EAAKzB,SAAS,CACZkb,WAAY,CACViX,QAAQ,CACN5nB,OAAO,KACPpF,SAAQ,GAEVO,QAAQ,CACN6E,OAAO,KACPpF,SAAQ,GAEVI,OAAO,CACLgF,OAAO,KACPpF,SAAQ,MAbI,wBAAA8X,EAAArJ,SAAAmJ,EAAA/f,WAmBpB4hI,uDAAmB,SAAAhhH,EAAOpZ,GAAP,IAAA4sC,EAAAhf,EAAAC,EAAA,OAAA7W,EAAApf,EAAA6W,KAAA,SAAA8K,GAAA,cAAAA,EAAA5K,KAAA4K,EAAA3K,MAAA,UACb5O,GACFA,EAAE2D,iBAEEipC,EAAwB3vC,EAAKxE,MAAMoK,YAAYsrC,UAAUxB,mBACrC1vC,EAAKnC,cAAcuxB,kBAAkBugB,EAAsBpuC,MALpE,CAAA+a,EAAA3K,KAAA,eAAA2K,EAAA3K,KAAA,EASyB3R,EAAK28H,iCAT9B,OAAArgH,EAAA5I,KA8Eb1T,EAAKzB,SAAS,CACZywC,2BAA0B,KAlEtBre,EAAkB,SAAC3rB,EAAGsU,GAE1B,IAAMwX,EAAY,CAChB/C,cAAe,UACfC,YAAa,UACbC,WAAYjpB,EAAKA,EAAGrF,OAAS,MAGzB+vB,EAAc1qB,GAAoB,YAAdA,EAAGrF,OAIzB2Z,IACFwX,EAAU7C,WAAajuB,EAAKnC,cAAckzB,oBAAoBzX,KAI5DA,GAA8B,UAArBwX,EAAUnxB,SACrBK,EAAKnC,cAAciwB,yBAAyBgD,GAG9C9wB,EAAKzB,SAAS,SAAC9D,GAAD,MAAgB,CAC5Bu0C,0BAA2Btf,EAC3BjW,WAAW/c,OAAAw/H,EAAA,EAAAx/H,CAAA,GACNjC,EAAUgf,WADL,CAERiX,QAAQ,CACN5nB,OAAO,KACPpF,SAAQ,QAK4B,oBAA/B1D,EAAKxE,MAAMm1B,iBAAkCjB,GACtD1vB,EAAKxE,MAAMm1B,gBAAgB3rB,GAG7BhF,EAAKk6E,kBAGDtpD,EAAyB,SAAC5rB,GAC9B,IAAM8D,EAAS9D,EAAGgsB,gBAClBhxB,EAAKzB,SAAS,SAAC9D,GAAD,MAAgB,CAC5Bgf,WAAW/c,OAAAw/H,EAAA,EAAAx/H,CAAA,GACNjC,EAAUgf,WADL,CAERiX,QAAQh0B,OAAAw/H,EAAA,EAAAx/H,CAAA,GACHjC,EAAUgf,WAAWiX,QADnB,CAEL5nB,iBAMR9I,EAAKnC,cAAcozB,YAAYjxB,EAAKxE,MAAMoK,YAAYsrC,UAAUF,YAAYzvC,KAAKouC,EAAsB3gC,QAAQ2hB,EAAgBC,GAE/H5wB,EAAKzB,SAAS,SAAC9D,GAAD,MAAgB,CAC5Bgf,WAAW/c,OAAAw/H,EAAA,EAAAx/H,CAAA,GACNjC,EAAUgf,WADL,CAERiX,QAAQ,CACN5nB,OAAO,KACPpF,SAAQ,KAGZsrC,2BAA0B,MA3Ef,wBAAA1yB,EAAAnK,SAAAgK,EAAA5gB,iEAqFnB0I,8CAAU,SAAA2Y,EAAO7Z,EAAEq6H,GAAT,IAAAztF,EAAAD,EAAA2tF,EAAAC,EAAAnrF,EAAAorF,EAAAzB,EAAA5pF,EAAAsrF,EAAAz2E,EAAA9U,EAAAwrF,EAAApgD,EAAAptC,EAAAF,EAAA,OAAAh2B,EAAApf,EAAA6W,KAAA,SAAAyL,GAAA,cAAAA,EAAAvL,KAAAuL,EAAAtL,MAAA,UACR5O,EAAE2D,iBAEIipC,EAAwB3vC,EAAKxE,MAAMoK,YAAYsrC,UAAUxB,oBACzDA,EAAoB1vC,EAAKnC,cAAcuxB,kBAAkBugB,EAAsBpuC,OAJ7E,CAAA0b,EAAAtL,KAAA,YAaE0rH,EAAkB,SAACr4H,EAAGsU,IAErBA,GAAStU,GAAoB,UAAdA,EAAGrF,OACrB2Z,EAAQ,CACN+yB,QAAQ,kBAEArnC,GAAMsU,IAChBtU,EAAK,CACHrF,OAAO,UAIX,IAAM+vB,EAAc1qB,GAAoB,YAAdA,EAAGrF,OAGvBmxB,EAAY,CAChB/C,cAAe,UACfC,YAAaovG,EACbnvG,WAAYjpB,EAAKA,EAAGrF,OAAS,KAC7BiyB,WAAY/pB,SAASi0H,IAGnBxiH,IACFwX,EAAU7C,WAAajuB,EAAKnC,cAAckzB,oBAAoBzX,KAI5DA,GAA8B,UAArBwX,EAAUnxB,SACrBK,EAAKnC,cAAciwB,yBAAyBgD,GAK1CpB,GAEFvmB,OAAOisD,cAAcC,WAArB,sBAAuD,CACrDC,iBAAgB,+BAChBC,WAAY,QACZC,WAAY,GACZC,WAAY,GACZd,QAAS,YAGP30D,EAAKxE,MAAM0zC,mBAA6D,oBAAjClvC,EAAKxE,MAAM0zC,mBACpDlvC,EAAKxE,MAAM0zC,kBAAkBlqC,KAI/BmE,OAAOisD,cAAcC,WAArB,kBAAmD,CACjDC,iBAAgB,yCAChBC,WAAY,QACZC,WAAY,GACZC,WAAY,GACZd,QAAS,YAIX30D,EAAKk6E,kBAGPl6E,EAAKzB,SAAS,SAAC9D,GAAD,MAAgB,CAC5Bo0C,kBAAiBnf,EACjBjW,WAAW/c,OAAAw/H,EAAA,EAAAx/H,CAAA,GACNjC,EAAUgf,WADL,CAERxV,QAAQ,CACN6E,OAAO,KACPpF,SAAQ,SAMV45H,EAAyB,SAACt4H,GAC9B,IAAM8D,EAAS9D,EAAGgsB,gBAClBhxB,EAAKzB,SAAS,SAAC9D,GAAD,MAAgB,CAC5Bgf,WAAW/c,OAAAw/H,EAAA,EAAAx/H,CAAA,GACNjC,EAAUgf,WADL,CAERxV,QAAQvH,OAAAw/H,EAAA,EAAAx/H,CAAA,GACHjC,EAAUgf,WAAWxV,QADnB,CAEL6E,iBAMFqpC,EAAiB,WACoB,oBAA9BnyC,EAAKxE,MAAM22C,gBACpBnyC,EAAKxE,MAAM22C,kBAITorF,EAAYv9H,EAAKxE,MAAMktD,UAAY1oD,EAAKrC,MAAMuoD,0BAA4BlmD,EAAKrC,MAAMq+H,qBAGrFF,EAAgB97H,EAAKrC,MAAMm+H,cAC3B5pF,EAAYlyC,EAAKxE,MAAMu2C,oBAAsB/xC,EAAKnC,cAAc83B,aAAa31B,EAAKnC,cAAc8zB,qBAAqB3xB,EAAKrC,MAAM8xB,WAAWzvB,EAAKrC,MAAMkH,QAAQ7E,EAAKrC,MAAM28E,2BAA6Bt6E,EAAKnC,cAAc83B,aAAa31B,EAAKrC,MAAM08E,oBAGnPmjD,EAAsE,qBAA9Cx9H,EAAKxE,MAAMoK,YAAYsuH,mBAAqCl0H,EAAKxE,MAAMoK,YAAYsuH,mBAAqBl0H,EAAKnC,cAAcwJ,gBAAgB,CAAC,WAAW,UAAU,UAAU,kBAGnM0/C,EAAwB,MAExBy2E,EApHA,CAAAvgH,EAAAtL,KAAA,cAwHAo1C,EADEw2E,EACsBv9H,EAAKnC,cAAcwJ,gBAAgB,CAAC,WAAW,UAAU,UAAU,gCAEnErH,EAAKnC,cAAcwJ,gBAAgB,CAAC,WAAW,UAAU,UAAU,2BA1H3F,CAAA4V,EAAAtL,KAAA,gBAAAsL,EAAAtL,KAAA,GA8H8B3R,EAAKnC,cAAc2kC,oBAAoBs5F,EAAc97H,EAAKxE,MAAMmK,cAAc3F,EAAKxE,MAAMoK,aAAY,GA9HnI,QAAAqX,EAAAvJ,KA+HoBm1B,IAAI7oC,EAAKnC,cAAc+T,MAAMm1C,MAC/Cy2E,GAAiB,GAhInB,QAuI2B,oBAF3BvrF,EAAkBjyC,EAAKxE,MAAMy2C,gBAAkBjyC,EAAKxE,MAAMy2C,gBAAkB,CAACC,EAAUlyC,EAAKxE,MAAMoK,YAAYsrC,UAAUF,YAAYhiC,QAAQhP,EAAKxE,MAAMoK,YAAY08B,KAAKtzB,QAAQhP,EAAKxE,MAAMoK,YAAYoJ,QAAQwuH,MAGjNvrF,EAAkBA,EAAgBC,IAIhCqrF,GACIlgD,GAAoBogD,EAAA/tF,EAAkBQ,SAAQktF,GAA1B/qH,MAAAorH,EAAA/gI,OAAAghI,EAAA,EAAAhhI,CAA8Cu1C,IAAiBssC,YACzFv+E,EAAKnC,cAAckjF,+BAA+BpxC,EAAsBpuC,KAAM87E,EAAmBggD,EAAiBC,KAG5GrtF,EAAiBjwC,EAAKnC,cAAcuxB,kBAAkBpvB,EAAKxE,MAAMoK,YAAYrE,MAC7EwuC,EAAeJ,EAAsBG,UAAUrpB,KAAM,SAAAo+D,GAAC,OAAIA,EAAEtjF,OAAS67H,IACvEp9H,EAAKxE,MAAM4yC,WAAa6B,EAC1BjwC,EAAKnC,cAAcmgF,iBAAiBh+E,EAAKxE,MAAMoK,YAAYrE,KAAMvB,EAAKxE,MAAM2L,QAASwoC,EAAsBpuC,KAAMwuC,EAAakb,WAAYhZ,EAAiBorF,EAAiBC,EAAwBnrF,GAGpMnyC,EAAKnC,cAAcm0B,0BAA0B2d,EAAsBpuC,KAAM67H,EAAiBnrF,EAAiBorF,EAAiBC,IAMhIt9H,EAAKzB,SAAS,SAAC9D,GAAD,MAAgB,CAC5Bgf,WAAW/c,OAAAw/H,EAAA,EAAAx/H,CAAA,GACNjC,EAAUgf,WADL,CAERxV,QAAQ,CACN6E,OAAO,KACPpF,SAAQ,QAlKV,eAAAuZ,EAAAjC,OAAA,UAyKD,GAzKC,yBAAAiC,EAAA9K,SAAAyK,EAAArhB,4IA7fJA,KAAKsC,cACPtC,KAAKsC,cAAcC,SAASvC,KAAKC,OAEjCD,KAAKsC,cAAgB,IAAIE,IAAcxC,KAAKC,oDAiN9CD,KAAKyC,YACLzC,KAAK2+E,yGAOY1/E,EAAUC,GAC3Bc,KAAKyC,YAEL,IAAMmrB,EAAiB3uB,EAAU2M,UAAY5L,KAAKC,MAAM2L,QAClDw2H,EAAkBnjI,EAAUkuD,WAAantD,KAAKC,MAAMktD,SACpDk1E,EAAmBpjI,EAAU4zC,YAAc7yC,KAAKC,MAAM4yC,WACvC5zC,EAAUmL,gBAAkBpK,KAAKC,MAAMmK,gBAAmBnL,EAAUoL,aAAerK,KAAKC,MAAMoK,aAE/FujB,GAAkBw0G,GAAmBC,IACvDriI,KAAK2+E,iBAGP,IAAMhoD,EAAgB32B,KAAKoC,MAAMkH,SAAWpK,EAAUoK,OAChDg5H,EAA6BtiI,KAAKoC,MAAMoyB,oBAAoBx0B,KAAKoC,MAAMkH,UAAYpK,EAAUs1B,oBAAoBx0B,KAAKoC,MAAMkH,SAC9HqtB,GAAiB2rG,IACnBtiI,KAAK40B,gBAGmB11B,EAAUg1B,aAAel0B,KAAKoC,MAAM8xB,YAE5Dl0B,KAAKi1B,sBAGyB/1B,EAAUu0C,4BAA8BzzC,KAAKoC,MAAMqxC,2BAGvC,oBAA/BzzC,KAAKC,MAAMm1B,iBACpBp1B,KAAKC,MAAMm1B,gBAAgBp1B,KAAKoC,MAAMqxC,4DAkbnC,IAAAruC,EAAApF,KAEP,IAAKA,KAAKC,MAAMoK,cAAgBrK,KAAKC,MAAMmK,cACzC,OAAO,KAGT,IAAMmqB,EAAmBv0B,KAAKC,MAAM4yC,WAAa7yC,KAAKoC,MAAMqxC,0BACtD8G,EAAqBv6C,KAAKsC,cAAcwJ,gBAAgB,CAAC,QAAQ,mBACjEy2H,EAAwBhoF,EAAmBppB,SAAkG,qBAAhFopB,EAAmBt6C,MAAMqK,gBAAgBtK,KAAKC,MAAMoK,YAAY08B,KAAKp9B,OAClI6wC,EAA+BD,EAAmBtF,eAIlDutF,EAAyB,SAACviI,GAAD,OAC7BwiI,EAAArjI,EAAAC,cAACqjI,EAAA,EAAD,CACEj9H,UAAW,CACTwH,GAAG,EACHlG,GAAG,EACHpB,GAAG,EACHpG,GAAG,EACH4D,QAAQ,OACR1D,WAAW,SACXC,cAAc,SACdK,eAAe,SACfmG,GAAGd,EAAKhD,MAAMo+H,cAAgB,EAAI,IAGpCiC,EAAArjI,EAAAC,cAACsjI,EAAA,EAAD,CACEnjI,MAAO,EACPC,WAAY,SACZC,cAAe,SACfK,eAAgB,UAEhB0iI,EAAArjI,EAAAC,cAACsjI,EAAA,EAAD,CACEz/H,KAAM,QACNhD,MAAO,WACP8F,KAAM,iBAGVy8H,EAAArjI,EAAAC,cAACsjI,EAAA,EAAD,CACEhrG,UAAU,EACVtwB,QAASjC,EAAKhD,MAAMo+H,cACpB7/H,MAAK,wCACL4G,SAAW,SAAAC,GAAC,OAAIpC,EAAKs7H,oBAAoBl5H,EAAEgH,OAAOnH,cAKlDu7H,EAAkB5iI,KAAKsC,cAAcwJ,gBAAgB,CAAC,UAAU,YAAY,WAAW,cAAgB9L,KAAKoC,MAAMq+H,qBAExH,OACEzgI,KAAKoC,MAAM+F,SAAWnI,KAAKC,MAAM2L,QAC/B62H,EAAArjI,EAAAC,cAACqjI,EAAA,EAAD,CACEj9H,UAAW,CACT2J,EAAE,EACFlJ,GAAG,EACH2G,UAAU,QACVjN,MAAM,CACJuD,QAAQ,OACR1D,WAAW,SACXM,eAAe,YAInB0iI,EAAArjI,EAAAC,cAACwjI,EAAA,EAAD,CACEj2H,UAAW,CACTlN,cAAc,OAEhBoN,YAAa,CACX5J,KAAK,QAEP6J,UAAW,CACTrF,GAAG,GAELrF,KAAM,2BAITrC,KAAKoC,MAAMkxC,mBAAqBtzC,KAAKoC,MAAMo+H,cAC1CiC,EAAArjI,EAAAC,cAACsjI,EAAA,EAAD,CAAKnjI,MAAO,IAEPQ,KAAKC,MAAMs2C,iBACZksF,EAAArjI,EAAAC,cAACsjI,EAAA,EAAD,CACEz8H,GAAI,EACJxG,cAAe,UAEf+iI,EAAArjI,EAAAC,cAACqjI,EAAA,EAAD,CACEj9H,UAAW,CACT2J,EAAE,IAGJqzH,EAAArjI,EAAAC,cAACsjI,EAAA,EAAD,CACEljI,WAAY,SACZC,cAAe,UAEf+iI,EAAArjI,EAAAC,cAACsjI,EAAA,EAAD,CACEz/H,KAAM,QACNhD,MAAO,WACP8F,KAAOhG,KAAKC,MAAMs2C,gBAAkB,YAAc,YAEpDksF,EAAArjI,EAAAC,cAACsjI,EAAA,EAAD,CACEz8H,GAAI,EACJ3F,SAAU,EACVL,MAAO,WACPO,UAAW,UAEwB,OAAjCT,KAAKC,MAAM6iI,kBAA6B9iI,KAAKC,MAAM6iI,kBAAoB,KACtC,OAAjC9iI,KAAKC,MAAM6iI,mBACXL,EAAArjI,EAAAC,cAAA,WARJ,OAUSW,KAAKC,MAAMs2C,gBAA4B,GAAV,QAVtC,SAU0DksF,EAAArjI,EAAAC,cAAA,cAASW,KAAKoC,MAAMm+H,cAAcx1H,QAAQ,GAA1C,IAA+C/K,KAAKoC,MAAMk+H,aAA1D,IAAyEtgI,KAAKoC,MAAMm/H,uBAAX,IAAAn7H,OAAwCpG,KAAKoC,MAAMm/H,uBAAuBx2H,QAAQ,GAAlF,KAAA3E,OAAwFpG,KAAKC,MAAMmK,cAAnG,KAAsH,IAVzP,eAUiRq4H,EAAArjI,EAAAC,cAAA,WAClP,OAA3BW,KAAKC,MAAM8iI,YAAuB/iI,KAAKC,MAAM8iI,YAAc,+EAOzC/9H,IAA3BhF,KAAKC,MAAMo2C,aAA6Br2C,KAAKC,MAAMo2C,cAClDosF,EAAArjI,EAAAC,cAACsjI,EAAA,EAAD,CACEz8H,GAAI,EACJxG,cAAe,WAGZM,KAAKC,MAAMs2C,iBACVksF,EAAArjI,EAAAC,cAACmjI,EAAD,MAEJC,EAAArjI,EAAAC,cAACsjI,EAAA,EAAD,CAAMpjI,GAAI,GAAV,sBAGAkjI,EAAArjI,EAAAC,cAACsjI,EAAA,EAAD,CACEljI,WAAY,SACZC,cAAe,MACfK,eAAgB,iBAEhB0iI,EAAArjI,EAAAC,cAACqjI,EAAA,EAAD,CACEj9H,UAAW,CACT2J,EAAE,EACF5P,MAAM,IACNgxB,YAAY,WACVprB,EAAKg5B,UAAU,aAGnBv4B,eAAe,EACf4oB,SAAiC,YAAtBzuB,KAAKoC,MAAMkH,QAEtBm5H,EAAArjI,EAAAC,cAACsjI,EAAA,EAAD,CACEv7H,GAAI,EACJ3H,WAAY,SACZC,cAAe,MACfK,eAAgB,UAEhB0iI,EAAArjI,EAAAC,cAAC2jI,EAAA,EAAD,CACEr1H,YAAa,CACXrE,OAAO,WAET8hB,UAAW,CACTplB,KAAK,OACL/F,MAAM,CACJE,GAAG,MAITsiI,EAAArjI,EAAAC,cAACsjI,EAAA,EAAD,CACEpiI,SAAU,EACVC,WAAY,GAFd,aAQJiiI,EAAArjI,EAAAC,cAACqjI,EAAA,EAAD,CACEj9H,UAAW,CACT2J,EAAE,EACF5P,MAAM,IACNgxB,YAAY,WACVprB,EAAKg5B,UAAU,YAGnBv4B,eAAe,EACf4oB,SAAiC,WAAtBzuB,KAAKoC,MAAMkH,QAEtBm5H,EAAArjI,EAAAC,cAACsjI,EAAA,EAAD,CACEv7H,GAAI,EACJ3H,WAAY,SACZC,cAAe,MACfK,eAAgB,UAEhB0iI,EAAArjI,EAAAC,cAAC2jI,EAAA,EAAD,CACEr1H,YAAa,CACXrE,OAAO,UAET8hB,UAAW,CACTplB,KAAK,OACL/F,MAAM,CACJE,GAAG,MAITsiI,EAAArjI,EAAAC,cAACsjI,EAAA,EAAD,CACEpiI,SAAU,EACVC,WAAY,GAFd,cAYY,YAAtBR,KAAKoC,MAAMkH,OACTm5H,EAAArjI,EAAAC,cAACsjI,EAAA,EAAD,CACEz8H,GAAI,EACJ3G,GAAI,EACJG,cAAe,UAGZ6iI,GAAyB/nF,IAAiCx6C,KAAKC,MAAMs2C,iBACpEksF,EAAArjI,EAAAC,cAACsjI,EAAA,EAAD,CACEpjI,GAAI,EACJC,MAAO,EACPC,WAAY,SACZC,cAAe,MACfK,eAAgB,UAEhB0iI,EAAArjI,EAAAC,cAACsjI,EAAA,EAAD,CACEliI,UAAW,SACXqH,WAAY,UACZ2b,KAAI,sBAAArd,OAAwBm0C,EAAmB9I,MAA3C,KAAArrC,OAAoDpG,KAAKC,MAAMoK,YAAY08B,KAAKp9B,QAHtF,wDAOA84H,EAAArjI,EAAAC,cAACsjI,EAAA,EAAD,CACEj7H,GAAI,EACJxE,KAAM,MACNhD,MAAO,UACP8F,KAAM,qBAKZuuB,EACEv0B,KAAKoC,MAAM8b,WAAWxV,QAAQP,QAC5Bs6H,EAAArjI,EAAAC,cAACsjI,EAAA,EAAD,CACEz8H,GAAI,EACJxG,cAAe,UAEf+iI,EAAArjI,EAAAC,cAAC4jI,EAAA,EAAD9hI,OAAAC,OAAA,GACMpB,KAAKC,MADX,CAEE4C,KAAM7C,KAAKoC,MAAM8b,WAAWxV,QAAQ6E,OACpC4V,WAAU,kCACVO,kBAAmB1jB,KAAK0jB,kBAAkBvW,KAAKnN,MAC/CojB,SAAWpjB,KAAKC,MAAMmjB,SAAWpjB,KAAKC,MAAMmjB,SAAW,yBACvDI,eAAiBxjB,KAAKC,MAAMktD,UAAYntD,KAAKoC,MAAMuoD,wBAA0B,8BAAgC,6BAG/G3qD,KAAKC,MAAMu2C,oBACbisF,EAAArjI,EAAAC,cAACsjI,EAAA,EAAD,CACEz8H,GAAI,EACJxG,cAAe,UAEf+iI,EAAArjI,EAAAC,cAACsjI,EAAA,EAAD,CACEpjI,GAAI,EACJC,MAAO,EACPE,cAAe,UAEf+iI,EAAArjI,EAAAC,cAACsjI,EAAA,EAAD,CACEpjI,GAAI,EACJE,WAAY,SACZC,cAAe,MACfK,eAAgBC,KAAKC,MAAM43B,oBAAsB,gBAAkB,YAGjE73B,KAAKC,MAAM43B,qBACT4qG,EAAArjI,EAAAC,cAACsjI,EAAA,EAAD,CACEnjI,MAAO,EACPuE,SAAU,MACVtE,WAAY,SACZC,cAAe,OAEf+iI,EAAArjI,EAAAC,cAACsjI,EAAA,EAAD,CACEpiI,SAAU,EACVC,WAAY,EACZC,UAAW,OACXb,MAAO,CACLmE,SAAS,OACTkC,SAAS,SACTrF,WAAW,SACXotB,aAAa,YAEf9tB,MAAOF,KAAKC,MAAM43B,oBAAoB33B,MAAQF,KAAKC,MAAM43B,oBAAoB33B,MAAQ,aAEpFF,KAAKC,MAAM43B,oBAAoBx1B,OAMtCrC,KAAKoC,MAAMm+H,eACTkC,EAAArjI,EAAAC,cAACsjI,EAAA,EAAD,CACEnjI,MAAO,EACPuE,SAAU,MACVtE,WAAY,SACZC,cAAe,MACfK,eAAgB,YAEhB0iI,EAAArjI,EAAAC,cAACsjI,EAAA,EAAD,CACEpiI,SAAU,EACVC,WAAY,EACZN,MAAO,YACPO,UAAW,QACXqH,WAAY,YACZrG,QAAU,SAAC+F,GAAD,OAAOpC,EAAK4vB,uBAAuB,OAN/C,YAQYh1B,KAAKoC,MAAMm+H,cAAcx1H,QAAQ,GAR7C,IAQkD/K,KAAKC,MAAMmK,iBAMrEq4H,EAAArjI,EAAAC,cAACsjI,EAAA,EAAD,CACEn4H,IAAK,EACLsE,KAAM,SACN6oB,UAAU,EACVv3B,OAAQ,QACRC,aAAc,EACdG,WAAY,IACZwS,YAAa,aACb1S,gBAAiB,SACjBe,UAAW,kBACXy2B,YAAa,gBACbvwB,SAAUvH,KAAKy0B,iBAAiBtnB,KAAKnN,MACrCouB,OAAM,aAAAhoB,OAAepG,KAAKC,MAAMoG,MAAMC,OAAOC,SAC7CxF,MAAOf,KAAKoC,MAAM8xB,WAAWl0B,KAAKoC,MAAMkH,QAAUtJ,KAAKsC,cAAc+T,MAAMrW,KAAKoC,MAAM8xB,WAAWl0B,KAAKoC,MAAMkH,SAASyB,UAAY,KAEnI03H,EAAArjI,EAAAC,cAACsjI,EAAA,EAAD,CACEz8H,GAAI,EACJzG,WAAY,SACZC,cAAe,MACfK,eAAgB,iBAGd,CAAC,GAAG,GAAG,GAAG,KAAK2G,IAAK,SAAAuX,GAAU,OAC5BwkH,EAAArjI,EAAAC,cAAC6jI,EAAA,EAAD,CACEjlH,WAAYA,EACZpX,IAAG,YAAAT,OAAc6X,GACjBuS,YAAa,kBAAIprB,EAAK4vB,uBAAuB/W,IAC7CwQ,SAAUrpB,EAAKhD,MAAMoyB,oBAAoBpvB,EAAKhD,MAAMkH,UAAYgD,SAAS2R,SAMnFwkH,EAAArjI,EAAAC,cAACsjI,EAAA,EAAD,CACEz8H,GAAI,EACJ1G,MAAO,EACPC,WAAY,SACZM,eAAgB,UAGdC,KAAKC,MAAMoK,YAAYsrC,UAAUxB,kBAAkBI,UAAU7tC,IAAI,SAAC8tC,EAAarqC,GAC7E,IAAMg5H,EAAe3uF,EAAaxuC,KAClC,OACEy8H,EAAArjI,EAAAC,cAAC+jI,EAAA,EAAD,CACEliI,YAAa,CACX1B,MAAM,CAAC,EAAE,IACT8lB,SAASlgB,EAAKhD,MAAMkyB,eACpBhzB,UAAU8D,EAAKnF,MAAMoG,MAAMC,OAAOoC,SAEpC7B,IAAG,WAAAT,OAAa+D,GAChBzI,YAAc,SAAA8F,GAAC,OAAIpC,EAAKsD,QAAQlB,EAAE27H,KAEhC3uF,EAAa7zC,WAQ3B8hI,EAAArjI,EAAAC,cAACqjI,EAAA,EAAD,CACEj9H,UAAW,CACT2J,EAAE,EACFlJ,GAAG,IAGLu8H,EAAArjI,EAAAC,cAACsjI,EAAA,EAAD,CACEljI,WAAY,SACZC,cAAe,UAGbM,KAAKC,MAAMojI,eACTZ,EAAArjI,EAAAC,cAACsjI,EAAA,EACK3iI,KAAKC,MAAMojI,gBAGjBZ,EAAArjI,EAAAC,cAACsjI,EAAA,EAAD,CACEz/H,KAAM,QACNhD,MAAO,WACP8F,KAAOhG,KAAKC,MAAMw2C,cAAgBz2C,KAAKC,MAAMw2C,cAAiBz2C,KAAKC,MAAMs2C,gBAAkB,YAAc,WAI/GksF,EAAArjI,EAAAC,cAACsjI,EAAA,EAAD,CACEz8H,GAAI,EACJ3F,SAAU,EACVL,MAAO,WACPO,UAAW,UAGTT,KAAKC,MAAM42C,cACT4rF,EAAArjI,EAAAC,cAACsjI,EAAA,EAAKt/G,KAAN,CACEigH,mBAAoBtjI,KAAKC,MAAMqjI,mBAC/BziI,wBAAyB,CACvBC,OAAOd,KAAKC,MAAM42C,iBAKtB4rF,EAAArjI,EAAAC,cAACsjI,EAAA,EAAKt/G,KAAN,CACEnjB,MAAO,YADT,oDAGqDF,KAAKC,MAAMs2C,gBAAkBv2C,KAAKoC,MAAMm+H,cAAcx1H,QAAQ,GAAK,MAHxH,IAGiI/K,KAAKoC,MAAMk+H,aAAetgI,KAAKC,MAAMs2C,gBAAX,kBAAAnwC,OAA+CpG,KAAKC,MAAMoK,YAAYV,MAAtE,KAAAvD,OAA+EpG,KAAKC,MAAM6X,iBAA1F,aAAwH,GAHnR,MAQN2qH,EAAArjI,EAAAC,cAACsjI,EAAA,EAAD,CACEnjI,MAAO,EACPC,WAAY,SACZC,cAAe,SACfK,eAAgB,iBAGhB6iI,GACEH,EAAArjI,EAAAC,cAACsjI,EAAA,EAAD,CACEj9H,GAAI,EACJC,GAAI,EACJO,GAAI,EACJ1G,MAAO,EACPa,aAAc,EACdZ,WAAY,SACZC,cAAe,SACfK,eAAgB,SAChBO,gBAAiB,cACjB8tB,OAAM,aAAAhoB,OAAepG,KAAKC,MAAMoG,MAAMC,OAAOshB,YAE7C66G,EAAArjI,EAAAC,cAACsjI,EAAA,EAAD,CACEz8H,GAAI,EACJ3F,SAAU,EACVL,MAAO,WACPO,UAAW,UAGTT,KAAKC,MAAMktD,SAAX,0HAGE,4GAINntD,KAAKC,MAAMktD,UACTs1E,EAAArjI,EAAAC,cAACsjI,EAAA,EAAD,CACEz8H,GAAI,EACJyxB,UAAU,EACVh3B,MAAO,gCACP0G,QAASrH,KAAKoC,MAAMuoD,wBACpBpjD,SAAW,SAAAC,GAAC,OAAIpC,EAAK+7H,8BAA8B35H,EAAEgH,OAAOnH,aAMpErH,KAAKC,MAAMoK,YAAYsrC,UAAUxB,kBAAkBI,UAAU7tC,IAAI,SAAC8tC,EAAarqC,GAC7E,IAAMg5H,EAAe3uF,EAAaxuC,KAClC,OACEy8H,EAAArjI,EAAAC,cAAC+jI,EAAA,EAAD,CACEliI,YAAa,CACXgF,GAAG,EACH1G,MAAM,CAAC,EAAE,IACT8B,UAAU8D,EAAKnF,MAAMoG,MAAMC,OAAOoC,SAEpC7B,IAAG,WAAAT,OAAa+D,GAChBzI,YAAc,SAAA8F,GAAC,OAAIpC,EAAKsD,QAAQlB,EAAE27H,KAEhC3uF,EAAa7zC,YAS3BX,KAAKoC,MAAM8b,WAAWiX,QAAQhtB,QAChCs6H,EAAArjI,EAAAC,cAACsjI,EAAA,EAAD,CACEz8H,GAAI,EACJxG,cAAe,UAEf+iI,EAAArjI,EAAAC,cAAC4jI,EAAA,EAAD9hI,OAAAC,OAAA,GACMpB,KAAKC,MADX,CAEEmjB,SAAQ,uBACRvgB,KAAM7C,KAAKoC,MAAM8b,WAAWiX,QAAQ5nB,OACpC4V,WAAU,gCACVO,kBAAmB1jB,KAAK0jB,kBAAkBvW,KAAKnN,UAInDyiI,EAAArjI,EAAAC,cAACqjI,EAAA,EAAD,CACEj9H,UAAW,CACT2J,EAAE,EACFlJ,GAAG,IAGLu8H,EAAArjI,EAAAC,cAACsjI,EAAA,EAAD,CACEljI,WAAY,SACZC,cAAe,UAEf+iI,EAAArjI,EAAAC,cAACsjI,EAAA,EAAD,CACEz/H,KAAM,QACN8C,KAAM,WACN9F,MAAO,aAETuiI,EAAArjI,EAAAC,cAACsjI,EAAA,EAAD,CACEz8H,GAAI,EACJ3F,SAAU,EACVL,MAAO,WACPO,UAAW,UAGTT,KAAKC,MAAMsjI,YAAcvjI,KAAKC,MAAMsjI,YAApC,mBAAAn9H,OAAuEpG,KAAKC,MAAMs2C,gBAA0B,GAAR,MAApG,KAAAnwC,OAAmHpG,KAAKoC,MAAMk+H,aAA9H,mDAGJmC,EAAArjI,EAAAC,cAAC+jI,EAAA,EAAD,CACEliI,YAAa,CACXgF,GAAG,EACH1G,MAAM,CAAC,EAAE,KAEXkC,YAAa1B,KAAK4hI,iBAAiBz0H,KAAKnN,OAL1C,cAeTA,KAAKoC,MAAM8b,WAAWle,KAAKoC,MAAMkH,QAAQnB,QAmExCs6H,EAAArjI,EAAAC,cAACsjI,EAAA,EAAD,CACEz8H,GAAI,EACJxG,cAAe,UAEf+iI,EAAArjI,EAAAC,cAAC4jI,EAAA,EAAD9hI,OAAAC,OAAA,GACMpB,KAAKC,MADX,CAEEyjB,kBAAmB1jB,KAAK0jB,kBAAkBvW,KAAKnN,MAC/C6C,KAAM7C,KAAKoC,MAAM8b,WAAWle,KAAKoC,MAAMkH,QAAQiE,OAC/C4V,WAAU,cAAA/c,OAAgBpG,KAAKoC,MAAMkH,OAA3B,eACV8Z,SAAQ,GAAAhd,OAAKpG,KAAKsC,cAAc0R,WAAWhU,KAAKoC,MAAMkH,QAA9C,qBA3EZm5H,EAAArjI,EAAAC,cAACsjI,EAAA,EAAD,CACEz8H,GAAI,EACJxG,cAAe,UAEf+iI,EAAArjI,EAAAC,cAACsjI,EAAA,EAAD,CACEn4H,IAAK,EACLsE,KAAM,SACN6oB,UAAU,EACVv3B,OAAQ,QACRC,aAAc,EACdG,WAAY,IACZ+C,UAAWC,IAAOonB,MAClB5X,YAAa,aACb1S,gBAAiB,SACjBe,UAAW,kBACXkG,SAAUvH,KAAKy0B,iBAAiBtnB,KAAKnN,MACrCouB,OAAM,aAAAhoB,OAAepG,KAAKC,MAAMoG,MAAMC,OAAOC,SAC7CuxB,YAAW,UAAA1xB,OAAYpG,KAAKoC,MAAMk+H,aAAvB,WACXv/H,MAAoD,OAA7Cf,KAAKoC,MAAM8xB,WAAWl0B,KAAKoC,MAAMkH,QAAmBtJ,KAAKsC,cAAc+T,MAAMrW,KAAKoC,MAAM8xB,WAAWl0B,KAAKoC,MAAMkH,SAAS2X,WAAa,KAE7IwhH,EAAArjI,EAAAC,cAACsjI,EAAA,EAAD,CACEz8H,GAAI,EACJzG,WAAY,SACZC,cAAe,MACfK,eAAgB,iBAEhB0iI,EAAArjI,EAAAC,cAAC6jI,EAAA,EAAD,CACEjlH,WAAY,GACZuS,YAAa,kBAAIprB,EAAK4vB,uBAAuB,KAC7CvG,SAAUzuB,KAAKoC,MAAMoyB,oBAAoBx0B,KAAKoC,MAAMkH,UAAYgD,SAAS,MAE3Em2H,EAAArjI,EAAAC,cAAC6jI,EAAA,EAAD,CACEjlH,WAAY,GACZuS,YAAa,kBAAIprB,EAAK4vB,uBAAuB,KAC7CvG,SAAUzuB,KAAKoC,MAAMoyB,oBAAoBx0B,KAAKoC,MAAMkH,UAAYgD,SAAS,MAE3Em2H,EAAArjI,EAAAC,cAAC6jI,EAAA,EAAD,CACEjlH,WAAY,GACZuS,YAAa,kBAAIprB,EAAK4vB,uBAAuB,KAC7CvG,SAAUzuB,KAAKoC,MAAMoyB,oBAAoBx0B,KAAKoC,MAAMkH,UAAYgD,SAAS,MAE3Em2H,EAAArjI,EAAAC,cAAC6jI,EAAA,EAAD,CACEjlH,WAAY,IACZuS,YAAa,kBAAIprB,EAAK4vB,uBAAuB,MAC7CvG,SAAUzuB,KAAKoC,MAAMoyB,oBAAoBx0B,KAAKoC,MAAMkH,UAAYgD,SAAS,QAG7Em2H,EAAArjI,EAAAC,cAACsjI,EAAA,EAAD,CACEz8H,GAAI,EACJnG,eAAgB,UAEhB0iI,EAAArjI,EAAAC,cAAC+jI,EAAA,EAAD,CACEliI,YAAa,CACX1B,MAAM,CAAC,EAAE,IACT8lB,SAAStlB,KAAKoC,MAAMkyB,eACpB10B,MAAM,CACJc,cAAc,eAGlBgB,YAAa1B,KAAKoC,MAAMkyB,eAAiB,KAAOt0B,KAAK6gI,cAAc1zH,KAAKnN,OAEvEA,KAAKoC,MAAMkH,WAsB1Bm5H,EAAArjI,EAAAC,cAACsjI,EAAA,EAAD,CACEnjI,MAAO,EACPC,WAAY,SACZC,cAAe,SACfK,eAAgB,WAGZC,KAAKC,MAAMs2C,iBAAmBv2C,KAAKoC,MAAMkxC,kBACzCmvF,EAAArjI,EAAAC,cAACmjI,EAAD,MAGFxiI,KAAKC,MAAM0B,SAAW3B,KAAKC,MAAM0B,SAAW,aAp1CpCX,aA61CPo1C,uJCn2CT9S,6MAEJlhC,MAAQ,CACNohI,SAAS,KACTtlH,WAAW,CACT3Q,OAAO,KACPpF,SAAQ,MAKZ7F,cAAgB,gFAGVtC,KAAKsC,cACPtC,KAAKsC,cAAcC,SAASvC,KAAKC,OAEjCD,KAAKsC,cAAgB,IAAIE,IAAcxC,KAAKC,4JAK9CD,KAAKyC,iMAGkBxD,EAAUC,mEACjCc,KAAKyC,qQAILzC,KAAKgD,SAAS,CACZkb,WAAY,CACV3Q,OAAO,KACPpF,SAAQ,qQAONyI,EAAW,SAACnH,EAAGsU,GAEnB,IAAMwX,EAAY,CAChB/C,cAAe,cACfE,WAAYttB,EAAKnF,MAAMi2B,WACvBzD,YAAartB,EAAKnF,MAAM61B,cAGtB/X,IACFwX,EAAU7C,WAAattB,EAAK9C,cAAckzB,oBAAoBzX,KAI5DA,GAA8B,UAArBwX,EAAUnxB,SACrBgB,EAAK9C,cAAciwB,yBAAyBgD,GAGZ,YAAd9rB,EAAGrF,QAEc,oBAAxBgB,EAAKnF,MAAM2Q,UACpBxL,EAAKnF,MAAM2Q,SAASnH,GAIxBrE,EAAKpC,SAAS,CACZwgI,SAAS/5H,EAAGrF,OACZ8Z,WAAY,CACV3Q,OAAO,KACPpF,SAAQ,MAKR0tB,EAAkB,SAACpsB,GACvB,IAAM8D,EAAS9D,EAAGgsB,gBAClBrwB,EAAKpC,SAAS,SAAC9D,GAAD,MAAgB,CAC5BskI,SAAS,aACTtlH,WAAW/c,OAAA+hB,EAAA,EAAA/hB,CAAA,GACNjC,EAAUgf,WADL,CAER3Q,eAKNvN,KAAKgD,SAAS,SAAC9D,GAAD,MAAgB,CAC5BskI,SAAS,UACTtlH,WAAW/c,OAAA+hB,EAAA,EAAA/hB,CAAA,GACNjC,EAAUgf,WADL,CAER/V,SAAQ,OAIR4tB,EAAS/1B,KAAKC,MAAM81B,OACuB,oBAApC/1B,KAAKC,MAAMu2B,qCACpBT,EAAS/1B,KAAKC,MAAMu2B,iDACqC,oBAAzCx2B,KAAKC,MAAMwjI,4DACZzjI,KAAKC,MAAMwjI,oCAA1B1tG,oBAGGA,0BACH/1B,KAAKgD,SAAS,SAAC9D,GAAD,MAAgB,CAC5BskI,SAAS,KACTtlH,WAAW/c,OAAA+hB,EAAA,EAAA/hB,CAAA,GACNjC,EAAUgf,WADL,CAER/V,SAAQ,0BAGL,WAKLnI,KAAKC,MAAMyjI,mBACb1jI,KAAKsC,cAAcm0B,0BAA0Bz2B,KAAKC,MAAM61B,aAAa91B,KAAKC,MAAMi2B,WAAWH,EAAOnlB,EAASilB,EAAgB,MAAK,EAAKE,GAErI/1B,KAAKsC,cAAcm0B,0BAA0Bz2B,KAAKC,MAAM61B,aAAa91B,KAAKC,MAAMi2B,WAAWH,EAAOnlB,EAASilB,uIAK7G,IAAM8tG,EAAmB3jI,KAAKC,MAAMe,UACpC,OACE4iI,EAAAxkI,EAAAC,cAACC,EAAA,EACKU,KAAKC,MAAMsjC,YAGW,YAAxBvjC,KAAKoC,MAAMohI,UAA0BxjI,KAAKC,MAAM0B,SAC9C3B,KAAKC,MAAM0B,SACX3B,KAAKoC,MAAM8b,YAAcle,KAAKoC,MAAM8b,WAAW/V,QAC/Cy7H,EAAAxkI,EAAAC,cAACwkI,EAAA,EAAD1iI,OAAAC,OAAA,CACEge,KAAMpf,KAAKC,MAAMmf,KACjBysC,QAAS7rD,KAAKC,MAAM4rD,SAChB7rD,KAAKC,MAAM6jI,iBAHjB,CAIEjhI,KAAM7C,KAAKoC,MAAM8b,WAAW3Q,OAC5BmW,kBAAmB1jB,KAAK0jB,kBAAkBvW,KAAKnN,MAC/CmjB,WAAU,cAAA/c,OAAgBpG,KAAKC,MAAMqJ,OAA3B,eACV8Z,SAAQ,GAAAhd,OAAKpG,KAAKsC,cAAc0R,WAAWhU,KAAKC,MAAMqJ,QAA9C,oBAGVs6H,EAAAxkI,EAAAC,cAACskI,EAADxiI,OAAAC,OAAA,CACEK,QAASzB,KAAK2yC,QAAQxlC,KAAKnN,OACvBA,KAAKC,MAAMwjC,gBAEdzjC,KAAKC,MAAMwjC,eAAe1iC,eA/IRC,aAwJlBsiC,gKCtJT+N,6MAEJjvC,MAAQ,KAGRE,cAAgB,gFAGVtC,KAAKsC,cACPtC,KAAKsC,cAAcC,SAASvC,KAAKC,OAEjCD,KAAKsC,cAAgB,IAAIE,IAAcxC,KAAKC,2JAK9CD,KAAKyC,iMAGkBxD,EAAWC,mEAClCc,KAAKyC,kJAGE,IAAA2C,EAAApF,KAEH0L,EAAgB1L,KAAKC,MAAMyL,cAK/B,OAJKA,GAAkBA,EAAc3G,SACnC2G,EAAgBvK,OAAOqF,KAAKxG,KAAKC,MAAMqK,kBAIvCiF,EAAAnQ,EAAAC,cAACmQ,EAAA,EAAD,CAAMxC,GAAG,wBAAwBxN,MAAO,EAAGE,cAAe,UACxD6P,EAAAnQ,EAAAC,cAAC0kI,EAAA,EAAD5iI,OAAAC,OAAA,GACMpB,KAAKC,MADX,CAEEoN,KAAMrN,KAAKC,MAAMoN,KACjBtH,SAAU/F,KAAKC,MAAM8F,YAEvBwJ,EAAAnQ,EAAAC,cAACmQ,EAAA,EAAD,CAAMxC,GAAG,cAActN,cAAe,UAElCgM,EAAchF,IAAI,SAAAiD,GAChB,IAAMU,EAAcjF,EAAKnF,MAAMqK,gBAAgBX,GAC/C,OAAKU,EAIHkF,EAAAnQ,EAAAC,cAAC2kI,EAAA,EAAD7iI,OAAAC,OAAA,CACEuI,MAAOA,GACHvE,EAAKnF,MAFX,CAGE4G,IAAG,SAAAT,OAAWuD,GACdU,YAAaA,EACb0D,MAAK,aAAA3H,OAAeuD,GACpBqE,OAAM,cAAA5H,OAAgBuD,GACtBsE,eAAgB7I,EAAKnF,MAAMgO,gBAAkBojB,OAVxC,gBA1CErwB,aA+DVqwC,2BCrEfzvC,EAAAC,QAAA,CAAkBoiI,OAAA,uBAAAl8G,KAAA,+9KCDlBjE,EAAAzS,EAAA2S,EAAA,sBAAAwB,IAAA1B,EAAAzS,EAAA2S,EAAA,sBAAAuF,IAAAzF,EAAAzS,EAAA2S,EAAA,sBAAAyF,IAAA3F,EAAAzS,EAAA2S,EAAA,sBAAA2F,IAAA,IAAAu6G,EAAApgH,EAAA,IAGMwC,EAAa,CACjBD,MAAO,UACPY,MAAO,OACPzB,KAAM,UACN2+G,SAAU,UACV56G,MAAO,UACPE,OAAQ,UACRE,IAAK,UACLy6G,QAAS,UACTC,cAAe,WAIX/9H,EAAS,CACb89H,QAAS,CACP3+G,KAAMa,EAAW89G,QACjB/hI,KAAMiiI,YAAch+G,EAAW89G,SAC/Bx+G,MAAO,CAAC,KAAMyD,YAAK,GAAK/C,EAAW89G,UACnCt+G,KAAM,CAAC,KAAMsD,YAAM,GAAK9C,EAAW89G,WAErC5+G,KAAM,CACJC,KAAMa,EAAWd,KACjBnjB,KAAMiiI,YAAch+G,EAAWd,MAC/BI,MAAO,CAAC,KAAMyD,YAAK,GAAK/C,EAAWd,OACnCM,KAAM,CAAC,KAAMsD,YAAM,GAAK9C,EAAWd,QAErC+D,MAAO,CACL9D,KAAMa,EAAWiD,MACjBlnB,KAAMikB,EAAWW,MACjBrB,MAAO,CAAC,KAAMyD,YAAK,GAAK/C,EAAWiD,QACnCzD,KAAM,CAAC,KAAMsD,YAAM,GAAK9C,EAAWiD,SAErCE,OAAQ,CACNhE,KAAMa,EAAWmD,OACjBpnB,KAAMiiI,YAAch+G,EAAWmD,QAC/B7D,MAAO,CAAC,KAAMyD,YAAK,GAAK/C,EAAWmD,SACnC3D,KAAM,CAAC,KAAMsD,YAAM,GAAK9C,EAAWmD,UAErCE,IAAK,CACHlE,KAAMa,EAAWqD,IACjBtnB,KAAMiiI,YAAch+G,EAAWqD,KAC/B/D,MAAO,CAAC,KAAMyD,YAAK,GAAK/C,EAAWqD,MACnC7D,KAAM,CAAC,KAAMsD,YAAM,GAAK9C,EAAWqD,QAKjCnE,EAAOlf,EAAOkf,KACd+D,EAAQjjB,EAAOijB,MACfE,EAASnjB,EAAOmjB,OAChBE,EAAMrjB,EAAOqjB,IAOJrD,uGCzDTi+G,mLAEK,IAAA9/H,EAAAzE,KAEDwkI,EAAgB,kBACpBjjI,EAAAnC,EAAAC,cAACmC,EAAA,EAAD,CACEtB,MAAiC,OAAzBuE,EAAKxE,MAAM8nC,UAAsB,UAAY,UACrD/hC,KAAgC,OAAzBvB,EAAKxE,MAAM8nC,UAAsB,cAAgB,gBACxD7kC,KAAOuB,EAAKxE,MAAMwkI,SAAWhgI,EAAKxE,MAAMwkI,SAAahgI,EAAKxE,MAAM8F,SAAW,QAAU,SAIzF,OACExE,EAAAnC,EAAAC,cAACmC,EAAA,EAAD,CACE/B,WAAY,SACZC,cAAe,MACfF,MAAQQ,KAAKC,MAAMT,MAAQQ,KAAKC,MAAMT,MAAQ,EAC9CO,eAAgBC,KAAKC,MAAMF,eAAiBC,KAAKC,MAAMF,eAAiB,YAGpEC,KAAKC,MAAMykI,SAAgC,SAArB1kI,KAAKC,MAAMykI,UACjCnjI,EAAAnC,EAAAC,cAACmlI,EAAD,MAEHxkI,KAAKC,MAAM0B,SAEW,UAArB3B,KAAKC,MAAMykI,SACTnjI,EAAAnC,EAAAC,cAACmlI,EAAD,cA1BkBxjI,aAiCfujI,6yECnCf3iI,EAAAC,QAAA,CAAkB8qB,YAAA,qCAAAK,gBAAA,yCAAAlH,KAAA,8BAAA8G,kBAAA,iECAlBhrB,EAAAC,QAAA,CAAkB8iI,eAAA,qCAAAC,oBAAA,0CAAAC,gBAAA,ywgBCeZhrF,6MAEJz3C,MAAQ,CACN81D,eAAe,KACfne,iBAAiB,GACjB0gB,gBAAgB,KAChBqqE,iBAAiB,KACjBC,mBAAmB,KACnB36H,cAAc3F,EAAKxE,MAAM+5C,YAkF3B13C,cAAgB,OA+ChB0iI,0DAAsB,SAAAlvH,EAAOtO,EAAEk5B,EAASy3B,GAAlB,IAAA0D,EAAAC,EAAA9pC,EAAAI,EAAA6yG,EAAA,OAAAC,EAAA9lI,EAAA6W,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEdylD,EAFc,eAAA9jD,EAAA5W,OAAAgkI,EAAA,EAAAhkI,CAAA+jI,EAAA9lI,EAAAyW,KAEF,SAAA0I,EAAO9U,GAAP,OAAAy7H,EAAA9lI,EAAA6W,KAAA,SAAAwI,GAAA,cAAAA,EAAAtI,KAAAsI,EAAArI,MAAA,OAEhBxI,OAAOisD,cAAcC,WAArB,oBAAqD,CACnDC,iBAAgB,QAAA3zD,OAAU3B,EAAKrC,MAAMgI,cAArB,wBAChB4vD,WAAY,QACZC,WAAY,GACZC,WAAY,GACZd,QAAS,YAGX30D,EAAKxE,MAAMw5D,oBAVK,wBAAAh7C,EAAA7H,SAAA2H,EAAAve,SAFE,gBAAAoY,GAAA,OAAAL,EAAAjB,MAAA9W,KAAA8E,YAAA,GAedg3D,EAfc,eAAAj9C,EAAA1d,OAAAgkI,EAAA,EAAAhkI,CAAA+jI,EAAA9lI,EAAAyW,KAeJ,SAAAkJ,EAAOvX,GAAP,OAAA09H,EAAA9lI,EAAA6W,KAAA,SAAAiJ,GAAA,cAAAA,EAAA/I,KAAA+I,EAAA9I,MAAA,cAAA8I,EAAAO,OAAA,UACP,GADO,wBAAAP,EAAAtI,SAAAmI,EAAA/e,SAfI,gBAAAggE,GAAA,OAAAnhD,EAAA/H,MAAA9W,KAAA8E,YAAA,GAmBdktB,EAAkBpe,IAAcujD,SAAS1K,UAAU/rB,GACnDtO,EAAaJ,GAAmBA,EAAgBK,cAAgBL,EAAgBK,cAAc5tB,EAAKxE,MAAM2T,IAAcukD,EAAU0D,EAAUC,GAAW,KApBxI5lD,EAAAsjD,GAuBZ94B,EAvBYxqB,EAAAE,KAAA,qBAyBsB,oBAA3B4b,EAAgBM,SACnB2yG,EAAe9jI,OAAOC,OAAO,GAAGqD,EAAKrC,OAC3C4vB,EAAgBM,OAAOF,EAAW,KAAK6yG,EAAarxH,MA3BtCsC,EAAAuJ,OAAA,sBAiChB7L,IAAcyuC,UAAUC,OAAO9E,OAAOrsB,QAjCtB,CAAAjb,EAAAE,KAAA,gBAAAF,EAAAE,KAAA,GAkCZ3R,EAAKnC,cAAciwB,yBAAyB,CAChDC,cAAe,MACfC,YAAa,kBACbC,WAAYgO,IArCI,QAwClBj8B,EAAKikH,WAAWlhH,GAxCE0O,EAAAE,KAAA,iBA0ClB3R,EAAKikH,WAAWlhH,GA1CE,yBAAA0O,EAAAU,SAAAd,EAAA9V,qEA8CtBolI,OAAS,SAAC59H,GACRA,EAAE2D,iBAEE1G,EAAKrC,MAAM0iI,iBACbrgI,EAAKzB,SAAS,CACZ8hI,iBAAiB,OAEVrgI,EAAKrC,MAAM81D,eACpBzzD,EAAKzB,SAAS,CACZk1D,eAAe,KACfuC,gBAAgB,KAChBqqE,iBAAiB,OAEVrgI,EAAKrC,MAAMgI,cACpB3F,EAAKzB,SAAS,CACZk1D,eAAe,KACfuC,gBAAgB,KAChBqqE,iBAAiB,KACjB16H,cAAc3F,EAAKxE,MAAM+5C,WAG3Bv1C,EAAKynH,gBAITA,WAAa,WACXznH,EAAKzB,SAAS,CACZk1D,eAAe,KACfuC,gBAAgB,KAChBqqE,iBAAiB,KACjBC,mBAAmB,KACnB36H,cAAc3F,EAAKxE,MAAM+5C,WAG3Bv1C,EAAK4gI,wBAGP3c,WAAa,SAAClhH,GACZ/C,EAAKynH,aACAznH,EAAKxE,MAAM65C,YAA+C,oBAA1Br1C,EAAKxE,MAAMyoH,YAC9CjkH,EAAKxE,MAAMyoH,gBAIf4c,gBAAkB,SAAC5kG,GACjB,IAAK9sB,IAAcujD,SAAS1K,UAAU/rB,GACpC,OAAO,EAET,IAAIzO,EAAere,IAAcujD,SAAS1K,UAAU/rB,GACpD,GAAoC,oBAAzBzO,EAAagmC,QAAuB,CAC7C,IAAMstE,EAAkBtzG,EAAagmC,QAAQxzD,EAAKrC,OAC9CmjI,GAAmBpkI,OAAOqF,KAAK++H,GAAiBxgI,SAClDktB,EAAe9wB,OAAOC,OAAO6wB,EAAaszG,IAG9C,OAAOtzG,KAGTuzG,0BAA4B,SAACttE,GAC3B,IAAMutE,EAAgBhhI,EAAKrC,MAAM23C,iBAAiBme,GAClD,OAAIutE,GAAiBA,EAAcpuE,gBAC1BouE,EAAcpuE,gBAEhB,QAGTquE,6BAA+B,SAACxtE,EAAe9tD,GAC7C,IAAM26H,EAAqB,GAE3B5jI,OAAOqF,KAAKoN,IAAcujD,SAAS1K,WAAW/lD,IAAI,SAACg6B,EAASv2B,GAC1D,IAAM8nB,EAAere,IAAcujD,SAAS1K,UAAU/rB,GAChDilG,GAAmF,IAA3D1zG,EAAa0lC,iBAAiBjsC,QAAQwsC,GAC9D0tE,EAAuBx7H,GAAyE,IAAzD6nB,EAAa4lC,gBAAgBnsC,QAAQthB,IAA6F,IAApE6nB,EAAa4lC,gBAAgBnsC,QAAQjnB,EAAKxE,MAAMmK,iBAA4F,IAAnE6nB,EAAa4lC,gBAAgBnsC,QAAQ9X,IAAcge,WAIvO,OAHIK,EAAad,SAAWw0G,GAAyBC,GACnDb,EAAmB75H,KAAKw1B,GAEnBA,IAGT,IAAMmlG,EAAyBphI,EAAK+gI,0BAA0BttE,GAE9D,OAAI2tE,GAA0BphI,EAAKrC,MAAM23C,iBAAiBme,GAAgBZ,kBAA2E,IAAxDytE,EAAmBr5G,QAAQm6G,GAC/G,CAACA,GAGHd,KAGTe,eAAiB,SAACt+H,EAAEs9H,GAKlB,GAJIt9H,GACFA,EAAE2D,kBAGC25H,IAAqBlxH,IAAcujD,SAAS1K,UAAUq4E,GACzD,OAAOrgI,EAAKzB,SAAS,CACnB8hI,iBAAiB,OAIrB,IAAM7yG,EAAere,IAAcujD,SAAS1K,UAAUq4E,GACtD,GAAI7yG,EAAa,CAEf,GAAIxtB,EAAKrC,MAAMgI,cAEb,YADA3F,EAAKugI,oBAAoBx9H,EAAEs9H,EAAiBrgI,EAAKrC,OAInD,IAAM2jI,GAAkF,IAAnE9zG,EAAa4lC,gBAAgBnsC,QAAQ9X,IAAcge,WAClEo0G,GAAqF,IAApE/zG,EAAa4lC,gBAAgBnsC,QAAQjnB,EAAKxE,MAAMmK,eAGjEE,EAAkB,GACxB,KAAMy7H,GAAgBC,IAAoBA,GASxC,YADAvhI,EAAKugI,oBAAoBx9H,EAAEs9H,EAAiBrgI,EAAKrC,OAP7C2jI,GACFz7H,EAAgBY,KAAK0I,IAAcge,WAEjCo0G,GACF17H,EAAgBY,KAAKzG,EAAKxE,MAAMmK,eAOpC3F,EAAKzB,SAAS,CACZsH,kBACAw6H,yBAKNmB,aAAe,SAACz+H,EAAE0wD,GAKhB,GAJI1wD,GACFA,EAAE2D,kBAGsE,IAAtEhK,OAAOqF,KAAK/B,EAAKrC,MAAM23C,kBAAkBruB,QAAQwsC,GAAuB,CAC1E,IAAM6sE,EAAqBtgI,EAAKihI,6BAA6BxtE,EAAezzD,EAAKrC,MAAMgI,eAGvF3F,EAAKnC,cAAciwB,yBAAyB,CAC1CC,cAAe,MACfC,YAAa,gBACbC,WAAYwlC,IAGdzzD,EAAKzB,SAAS,CACZ+hI,qBACA7sE,uBAKN5mC,YAAc,SAAC9pB,EAAE4C,GACX5C,GACFA,EAAE2D,iBAIJ1G,EAAKnC,cAAciwB,yBAAyB,CAC1CC,cAAe,MACfC,YAAa,eACbC,WAAYtoB,IAGd3F,EAAKzB,SAAS,CAAEoH,iBAAhBjJ,OAAAgkI,EAAA,EAAAhkI,CAAA+jI,EAAA9lI,EAAAyW,KAAiC,SAAAmC,IAAA,OAAAktH,EAAA9lI,EAAA6W,KAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,WAC3B3R,EAAKrC,MAAM0iI,iBADgB,CAAA7sH,EAAA7B,KAAA,eAAA6B,EAAAwH,OAAA,SAEtBhb,EAAKugI,oBAAoBx9H,EAAE/C,EAAKrC,MAAM0iI,iBAAiBrgI,EAAKrC,QAFtC,OAI7BqC,EAAKyhI,sBAJwB,wBAAAjuH,EAAArB,SAAAoB,EAAAhY,aASnCmmI,oBAAsB,SAAA1rE,GAGhB7mD,IAAcyuC,UAAUC,OAAO9E,OAAOrsB,SAAWspC,GACnDh2D,EAAKnC,cAAciwB,yBAAyB,CAC1CC,cAAe,MACfC,YAAa,iBACbC,WAAY+nC,EAAgB15D,QAIhC0D,EAAKzB,SAAS,CACZy3D,uBAIJ2rE,sBAAwB,WACtB,IAAMC,EAAqB,GAwB3B,OAvBA5hI,EAAKrC,MAAM2iI,mBAAmB76H,QAAQ,SAACw2B,EAASv2B,GAC9C,IAAM8nB,EAAextB,EAAK6gI,gBAAgB5kG,GACpCilG,GAA8F,IAAtE1zG,EAAa0lC,iBAAiBjsC,QAAQjnB,EAAKrC,MAAM81D,gBACzE0tE,EAAuBnhI,EAAKrC,MAAMgI,eAAoF,IAApE6nB,EAAa4lC,gBAAgBnsC,QAAQjnB,EAAKrC,MAAMgI,gBAA6F,IAApE6nB,EAAa4lC,gBAAgBnsC,QAAQjnB,EAAKxE,MAAMmK,iBAA4F,IAAnE6nB,EAAa4lC,gBAAgBnsC,QAAQ9X,IAAcge,WAGxPK,EAAad,SAAYw0G,GAA0BC,GAKxD3zG,EAAa2lC,mBAAmB1tD,QAAQ,SAACo8H,EAAYzzG,GAC9CwzG,EAAmBC,KACtBD,EAAmBC,GAAe,CAChC75E,UAAU,GACV9rD,MAAMiT,IAAcyrC,UAAUinF,GAC9BvlI,MAAMulI,IAGVD,EAAmBC,GAAa75E,UAAUvhD,KAAKw1B,OAI5Cv/B,OAAOwG,OAAO0+H,+MAjYhBrmI,KAAKoC,MAAMgI,wDACP,UAITjJ,OAAOqF,KAAKoN,IAAcujD,SAAS1K,WAAWviD,QAAQ,SAACw2B,EAASv2B,GAE9D,IAAM8nB,EAAere,IAAcujD,SAAS1K,UAAU/rB,GACtD,GAAIzO,EAAad,SAAWc,EAAaU,mBAAwF,IAApEV,EAAa4lC,gBAAgBnsC,QAAQtmB,EAAKhD,MAAMgI,iBAA4F,IAAnE6nB,EAAa4lC,gBAAgBnsC,QAAQ9X,IAAcge,YAAmB,CAE1M,IAAMe,EAAkBV,EAAaU,gBAErCxxB,OAAOqF,KAAKmsB,GAAiBzoB,QAAQ,SAAC0oB,EAAIC,GAIxC,OAFqBD,EAAIE,MAAM,KAAK1mB,MAAM7C,eAGxC,IAAK,KACH,IAAMwpB,EAAQ,UAAA3sB,OAAas6B,EAAb,KAAAt6B,OAAyBysB,EAAzB,KAAAzsB,OAA8BhB,EAAKhD,MAAMgI,eAEvD,IAAKulB,SAASC,eAAemD,GAAU,CACrC,IAAMC,EAASrD,SAAStwB,cAAc,UAChC4zB,EAAuBN,EAAgBC,GACvChiB,EAAWqiB,GAAwBA,EAAqBriB,SAAWqiB,EAAqBriB,SAAW,KACnGsiB,EAAUD,GAAwBA,EAAqBC,QAAUD,EAAqBC,QAAU,KAElGA,GAA8B,oBAAZA,GACpBA,EAAQ9tB,EAAKhD,MAAMwR,IAAcqe,GAG/BrhB,GAAgC,oBAAbA,IACjBoiB,EAAOG,WACTH,EAAOI,mBAAqB,WACC,WAAtBJ,EAAOG,YAAiD,aAAtBH,EAAOG,aAC5CH,EAAOI,mBAAqB,KAC5BxiB,MAIJoiB,EAAOK,OAASziB,GAIpBoiB,EAAOhmB,GAAK+lB,EACZC,EAAOzvB,UAAP,UAAA6C,OAA6Bs6B,GAC7B1N,EAAO5e,IAAMwe,EACbI,EAAOM,OAAQ,EAEXL,GAAwBA,EAAqBM,cAC/CN,EAAqBM,cAAcC,YAAYR,GAE/CrD,SAAS8D,KAAKD,YAAYR,GAGhC,MACA,IAAK,MACH,IAAMU,EAAY,cAAAttB,OAAiBs6B,EAAjB,KAAAt6B,OAA6BysB,GAE/C,IAAKlD,SAASC,eAAe8D,GAAc,CACzC,IAAM9zB,EAAQ+vB,SAAStwB,cAAc,QAErCO,EAAMoN,GAAK0mB,EACX9zB,EAAM6O,IAAM,aACZ7O,EAAM6jB,KAAOmP,EAEbjD,SAAS8D,KAAKD,YAAY5zB,gJAclCI,KAAKsC,cACPtC,KAAKsC,cAAcC,SAASvC,KAAKC,OAEjCD,KAAKsC,cAAgB,IAAIE,IAAcxC,KAAKC,sDAI1B,IAAAsM,EAAAvM,KACd+5C,EAAmB,IACI/5C,KAAKC,MAAM85C,kBAAoB/5C,KAAKC,MAAM85C,iBAAiBh1C,OAAS/E,KAAKC,MAAM85C,iBAAmB54C,OAAOqF,KAAKoN,IAAcujD,SAASxiB,UAE7IzqC,QAAQ,SAAAipE,GAC3B,IAAM4xD,EAAqBx4H,EAAKm5H,6BAA6BvyD,EAAO5mE,EAAKnK,MAAMgI,eAC/E,GAAI26H,GAAsBA,EAAmBhgI,OAAO,EAAE,CACpD,IAAMwhI,EAAa3yH,IAAcujD,SAASxiB,QAAQw+B,GAClDozD,EAAWxB,mBAAqBA,EAChChrF,EAAiBo5B,GAAUozD,KAI/BvmI,KAAKgD,SAAS,CACZ+2C,kEAKF/5C,KAAKyC,YAELzC,KAAKwmI,uBACLxmI,KAAKkmI,0KAILlmI,KAAKyC,iMAGkBxD,mEAEvBe,KAAKyC,YAEAzC,KAAKC,MAAM+5C,UAAY/6C,EAAU+6C,WAAah6C,KAAKC,MAAM+5C,UAC5Dh6C,KAAKsxB,YAAY,KAAKtxB,KAAKC,MAAM+5C,8IA4Q5B,IAAAxtC,EAAAxM,KAEHukB,EAAQ,KACqB,OAA7BvkB,KAAKoC,MAAMgI,cACbma,EAAQ,aAERA,EAAQ,OAAOvkB,KAAKoC,MAAMgI,cACQ,OAA9BpK,KAAKoC,MAAM81D,iBACb3zC,GAAS,MAAMvkB,KAAKoC,MAAM23C,iBAAiB/5C,KAAKoC,MAAM81D,gBAAgBj4D,MAAMi+B,UAIhF,IAAI5zB,EAAkBtK,KAAKC,MAAMqK,iBAAmBnJ,OAAOqF,KAAKxG,KAAKC,MAAMqK,iBAAiBvF,OAAO,EAA7E,CAAkF6O,IAAcge,WAAhGxrB,OAAAjF,OAAAghI,EAAA,EAAAhhI,CAA6GA,OAAOqF,KAAKxG,KAAKC,MAAMqK,mBAAoB,CAACsJ,IAAcge,WAGzL5xB,KAAKC,MAAMmyD,gBACb9nD,EAAkB,GAClBnJ,OAAOqF,KAAKoN,IAAcujD,SAAS1K,WAAWviD,QAAS,SAAAw2B,GACrD,IAAMzO,EAAere,IAAcujD,SAAS1K,UAAU/rB,GAClDzO,EAAa4lC,iBACf5lC,EAAa4lC,gBAAgB3tD,QAAQ,SAAAP,GAC9BW,EAAgBV,SAASD,IAC5BW,EAAgBY,KAAKvB,QAO/B,IAAM88H,EAAiB,SAAAxmI,GAAK,OAC1BsP,EAAAnQ,EAAAC,cAAC8U,EAAA,EAAD,CAAKnQ,SAAWwI,EAAKvM,MAAM65C,WAAa,OAAS,CAAC,OAAO,SAE1B,OAA7BttC,EAAKpK,MAAMgI,cACTmF,EAAAnQ,EAAAC,cAAC8U,EAAA,EAAD,CAAK5U,GAAI,GACPgQ,EAAAnQ,EAAAC,cAAC8U,EAAA,EAAD,CACE5U,GAAI,CAAC,EAAE,GACPiB,WAAY,EACZC,UAAW,SACXF,SAAU,CAAC,EAAGiM,EAAKvM,MAAM65C,WAAa,EAAI,IAJ5C,mCAQAvqC,EAAAnQ,EAAAC,cAAC8U,EAAA,EAAD,CACE5U,GAAI,EACJK,MAAO,CACL0+B,SAAS,QAEX7+B,WAAY,SACZM,eAAgB,SAChBL,cAAe,CAAC,SAAS,QAGzB4K,EAAgB5D,IAAI,SAACiD,EAAMQ,GACzB,OACEoF,EAAAnQ,EAAAC,cAACqnI,EAAA,EAAD,CACExoG,QAASv0B,EACT9C,IAAG,SAAAT,OAAWuD,GACd5D,SAAUyG,EAAKvM,MAAM8F,SACrBo4B,SAAQ,iBAAA/3B,OAAmBuD,EAAnB,QACRjI,YAAc,SAAA8F,GAAOgF,EAAK8kB,YAAY9pB,EAAEmC,IACxCglB,WAAaniB,EAAKvM,MAAM8F,SAAW,CAAC3F,OAAO,QAAU,CAACgP,EAAE,CAAC,EAAE,GAAGhP,OAAO,QACrEc,YAAesL,EAAKvM,MAAM8F,SAItB,KAJiC,CACnCnG,MAAM,CACJE,KAAO,oBASW,OAA9B0M,EAAKpK,MAAM81D,eACb3oD,EAAAnQ,EAAAC,cAAC8U,EAAA,EAAD,KACE5E,EAAAnQ,EAAAC,cAAC8U,EAAA,EAAD,CAAM5U,GAAI,EAAGG,cAAe,SAAUK,eAAgB,SAAUN,WAAY,WAEvE+M,EAAKvM,MAAM65C,YACVvqC,EAAAnQ,EAAAC,cAAC8U,EAAA,EAAD,CAAO/T,OAAQ,EAAGb,GAAI,EAAG6U,IAAG,iBAAAhO,OAAmBoG,EAAKpK,MAAMgI,cAA9B,UAEhCmF,EAAAnQ,EAAAC,cAAC8U,EAAA,EAAD,CAAM1T,UAAW,SAAUD,WAAY,IAAKD,SAAU,CAAC,EAAGiM,EAAKvM,MAAM65C,WAAa,EAAI,GAAI1yC,GAAI,GAE1FoF,EAAKvM,MAAM65C,YAActtC,EAAKvM,MAAM+5C,SAApC,6BAAA5zC,OAA4EoG,EAAKvM,MAAM+5C,SAAvF,+EAAA5zC,OAA+KoG,EAAKpK,MAAMgI,cAA1L,OAINmF,EAAAnQ,EAAAC,cAAC8U,EAAA,EAAD,CAAM5U,GAAIiN,EAAKvM,MAAM65C,WAAa,EAAI,EAAGp6C,cAAe,CAAC,SAAS,OAAQD,WAAY,SAAUM,eAAgB,UAE5GoB,OAAOqF,KAAKgG,EAAKpK,MAAM23C,kBAAkBrzC,IAAI,SAACysE,EAAOhpE,GACnD,IAAMo8H,EAAa/5H,EAAKpK,MAAM23C,iBAAiBo5B,GAC3CxkD,EAAa43G,EAAWtmI,OAASsmI,EAAWtmI,MAAM0uB,WAAa43G,EAAWtmI,MAAM0uB,WAAa,GAC3Fg4G,EAAqBn6H,EAAKvM,MAAM8F,SAAW,CAAC3F,OAAO,QAAU,CAACA,OAAO,QAG3E,OAFAuuB,EAAaxtB,OAAOC,OAAOutB,EAAWg4G,GAGpCp3H,EAAAnQ,EAAAC,cAACqnI,EAAA,EAADvlI,OAAAC,OAAA,GACMmlI,EAAWtmI,MADjB,CAEEiB,YAAa,CACXktB,OAAO,GAETvnB,IAAG,UAAAT,OAAY+sE,GACfxkD,WAAaA,EACb5oB,SAAWyG,EAAKvM,MAAM8F,SACtBrE,YAAc,SAAA8F,GAAC,OAAIgF,EAAKy5H,aAAaz+H,EAAE2rE,WAOnB,WAA9B3mE,EAAKpK,MAAM81D,eACT3oD,EAAAnQ,EAAAC,cAAC8U,EAAA,EAAD,CAAKjO,GAAI,EAAG3G,GAAI,GACdgQ,EAAAnQ,EAAAC,cAAC8U,EAAA,EAAD,CAAM1T,UAAW,SAAUD,WAAY,EAAGD,SAAU,EAAG6G,GAAI,GACzDmI,EAAAnQ,EAAAC,cAAC8U,EAAA,EAAD,CAAK3U,MAAO,QACR+P,EAAAnQ,EAAAC,cAAC8U,EAAA,EAAD,CAAM5U,GAAIiN,EAAKvM,MAAM65C,WAAa,EAAI,EAAGp6C,cAAe,CAAC,SAAS,OAAQD,WAAY,SAAUM,eAAgB,UAE9GyM,EAAKpK,MAAM2iI,mBAAmBhgI,OAAS,EAEnCwK,EAAAnQ,EAAAC,cAAC8U,EAAA,EAAD,KACE5E,EAAAnQ,EAAAC,cAAC8U,EAAA,EAAD,CAAM1T,UAAW,SAAUD,WAAY,EAAGD,SAAU,EAAGhB,GAAI,CAAC,EAAE,IAA9D,2CAIEiN,EAAKpK,MAAM2iI,mBAAmBr+H,IAAI,SAACg6B,EAASv2B,GAC1C,IAAM8nB,EAAezlB,EAAK84H,gBAAgB5kG,GAC1C,OACEnxB,EAAAnQ,EAAAC,cAACqnI,EAAA,EAADvlI,OAAAC,OAAA,CAAayF,IAAG,oBAAAT,OAAsBs6B,IAAgBzO,EAAtD,CAAoEvwB,YAAc,SAAA8F,GAAOgF,EAAKw4H,oBAAoBx9H,EAAEk5B,EAASl0B,EAAKpK,cAO5ImN,EAAAnQ,EAAAC,cAAC8U,EAAA,EAAD,CAAM1T,UAAW,SAAUD,WAAY,EAAGD,SAAU,EAAG6G,GAAI,GAA3D,wEAUdmI,EAAAnQ,EAAAC,cAAC8U,EAAA,EAAD,CACE3U,MAAO,EACPC,WAAY,SACZC,cAAe,SACfK,eAAgB,eAGbyM,EAAKpK,MAAM0iI,kBACZv1H,EAAAnQ,EAAAC,cAAC8U,EAAA,EAAD,CACE5U,GAAI,EACJwE,SAAWyI,EAAKvM,MAAM65C,WAAa,OAAS,UAC5Ct6C,MAASgN,EAAKvM,MAAM65C,aAAettC,EAAKvM,MAAM8F,SAAY,IAAO,IAG9DyG,EAAKvM,MAAM65C,YACVvqC,EAAAnQ,EAAAC,cAAC8U,EAAA,EAAD,CAAMzU,cAAe,SAAUK,eAAgB,SAAUN,WAAY,UACnE8P,EAAAnQ,EAAAC,cAAC8U,EAAA,EAAD,CAAO/T,OAAQ,EAAGb,GAAI,EAAG6U,IAAG,iBAAAhO,OAAmBoG,EAAKpK,MAAMgI,cAA9B,WAGlCmF,EAAAnQ,EAAAC,cAAC8U,EAAA,EAAD,CAAM1T,UAAW,SAAUD,WAAagM,EAAKvM,MAAM65C,WAAa,EAAI,EAAIv5C,SAAU,EAAGhB,GAAI,GAAzF,wBAGAgQ,EAAAnQ,EAAAC,cAACunI,EAAA,EAAD,CACEt8G,GAAI,UACJhqB,gBAAiB,UACjBS,MAAOyL,EAAKpK,MAAMq4D,gBAClB3iC,YAAa,sBACbvwB,SAAUiF,EAAK25H,oBACfr7G,QAASte,EAAK45H,wBACdriI,SAAWyI,EAAKvM,MAAM65C,aAAettC,EAAKvM,MAAM8F,SAAW,OAAS,OACpE8gI,iBAAmB,SAAC3yG,GAAD,MAAgB,wCACnC3wB,UAAoC,UAAzBiJ,EAAKvM,MAAMqV,UAAwB9R,IAAOknB,OAASlnB,IAAOmnB,cAI3Epb,EAAAnQ,EAAAC,cAAC8U,EAAA,EAAD,CAAMzU,cAAe,SAAUK,eAAgB,SAAUN,WAAY,SAAUoN,UAAW,UAErFL,EAAKpK,MAAM0iI,mBACqB,OAA/Bt4H,EAAKpK,MAAMq4D,gBACTlrD,EAAAnQ,EAAAC,cAAC8U,EAAA,EAAD,CAAK3U,MAAO,QACV+P,EAAAnQ,EAAAC,cAAC8U,EAAA,EAAD,CAAM1T,UAAW,SAAUD,WAAY,EAAGD,SAAU,EAAGhB,GAAI,CAAC,EAAE,IAA9D,2CAGAgQ,EAAAnQ,EAAAC,cAAC8U,EAAA,EAAD,CAAM5U,GAAIiN,EAAKvM,MAAM65C,WAAa,EAAI,EAAGp6C,cAAe,CAAC,SAAS,OAAQD,WAAY,SAAUM,eAAgB,UAE9GyM,EAAKpK,MAAMq4D,gBAAgBhO,UAAU1nD,OAAS,EAC5CyH,EAAKpK,MAAMq4D,gBAAgBhO,UAAU/lD,IAAI,SAACg6B,EAASv2B,GACjD,IAAM8nB,EAAezlB,EAAK84H,gBAAgB5kG,GAC1C,OACEnxB,EAAAnQ,EAAAC,cAACqnI,EAAA,EAADvlI,OAAAC,OAAA,CAAayF,IAAG,oBAAAT,OAAsBs6B,IAAgBzO,EAAtD,CAAoEvwB,YAAc,SAAA8F,GAAMgF,EAAKs5H,eAAet+H,EAAEk5B,SAIlHnxB,EAAAnQ,EAAAC,cAAC8U,EAAA,EAAD,CAAM1T,UAAW,SAAUD,WAAY,EAAGD,SAAU,EAAGhB,GAAI,GAA3D,sEAQNgQ,EAAAnQ,EAAAC,cAAC8U,EAAA,EAAD,CAAM1T,UAAW,SAAUD,WAAY,EAAGD,SAAU,EAAGhB,GAAI,GAA3D,wDA6BZiN,EAAKvM,MAAM65C,YAA2C,OAA7BttC,EAAKpK,MAAMgI,gBAAoD,OAAxBoC,EAAKvM,MAAM+5C,UAAmD,OAA9BxtC,EAAKpK,MAAM81D,iBACzG3oD,EAAAnQ,EAAAC,cAAC8U,EAAA,EAAD,CACE1U,WAAY,SACZM,eAAgB,UAEhBwP,EAAAnQ,EAAAC,cAAC8U,EAAA,EAAD,CACE/M,GAAI,EACJ3D,GAAI,CAAC,EAAG,GACRP,KAAM,SACN7C,aAAc,EACdiB,UAAW,OACXG,QAAU,SAAA+F,GAAC,OAAIgF,EAAK44H,OAAO59H,KAN7B,cAgBV,OAAIxH,KAAKC,MAAM65C,WAEXvqC,EAAAnQ,EAAAC,cAAConI,EACKzmI,KAAKC,OAMbsP,EAAAnQ,EAAAC,cAAC8U,EAAA,EAAD,CAAOo0G,OAAQvoH,KAAKC,MAAMsoH,QACxBh5G,EAAAnQ,EAAAC,cAACynI,EAAA,EAAD,CAAWre,UAAWzoH,KAAK0oH,YACzBn5G,EAAAnQ,EAAAC,cAACynI,EAAA,EAAU/c,OAAX,CAAkBxlG,MAAOA,IAEzBhV,EAAAnQ,EAAAC,cAACynI,EAAA,EAAUne,KAAX,KACEp5G,EAAAnQ,EAAAC,cAAConI,EAAD,OAEFl3H,EAAAnQ,EAAAC,cAACynI,EAAA,EAAU1kB,OAAX,KACE7yG,EAAAnQ,EAAAC,cAAC8U,EAAA,EAAD,CAAMxO,GAAI,CAAC,EAAE,GAAIjG,cAAe,CAAC,SAAU,OAAQF,MAAO,EAAGO,eAAgB,UAC3EwP,EAAAnQ,EAAAC,cAAC8U,EAAA,EAAD,CACE/M,GAAI,EACJ3D,GAAI,CAAC,EAAG,GACRpD,aAAc,EACdiB,UAAW,OACXG,QAAU,SAAA+F,GAAC,OAAIgF,EAAKk8G,WAAWlhH,IAC/BtE,KAAMlD,KAAKC,MAAM8F,SAAW,QAAU,UANxC,SAW+B,OAA7B/F,KAAKoC,MAAMgI,gBAAmD,OAAxBpK,KAAKC,MAAM+5C,UAAmD,OAA9Bh6C,KAAKoC,MAAM81D,iBAC/E3oD,EAAAnQ,EAAAC,cAAC8U,EAAA,EAAD,CACE/M,GAAI,EACJ3D,GAAI,CAAC,EAAG,GACRpD,aAAc,EACdoB,QAAU,SAAA+F,GAAC,OAAIgF,EAAK44H,OAAO59H,IAC3BjE,UAAWC,IAAOgnB,eAClBtnB,KAAMlD,KAAKC,MAAM8F,SAAW,QAAU,UANxC,sBA5qBK+hH,IAAM9mH,WAgsBd64C,uJC1sBT7hB,6MAGJ11B,cAAgB,gFAGVtC,KAAKsC,cACPtC,KAAKsC,cAAcC,SAASvC,KAAKC,OAEjCD,KAAKsC,cAAgB,IAAIE,IAAcxC,KAAKC,4JAK9CD,KAAKyC,iMAGkBxD,EAAUC,mEACjCc,KAAKyC,kJAIL,OACEtD,EAAAC,EAAAC,cAAC0nI,EAAA,EAAD,CACEthI,UAAW,CACT2J,EAAE,EACFlJ,GAAG,IAGL/G,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEG,WAAY,SACZC,cAAe,UAEfP,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE4D,KAAM,QACN8C,KAAM,QACN9F,MAAO,aAETf,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACE4G,GAAI,EACJ3F,SAAU,EACVL,MAAO,WACPO,UAAW,UAJb,uDAQAtB,EAAAC,EAAAC,cAAC2nI,EAAA,EAAD,CACE9lI,YAAa,CACXgF,GAAG,EACH1G,MAAM,CAAC,EAAE,KAEXkC,YAAa1B,KAAKC,MAAMslC,2BAL1B,oBA9CevkC,aA6DVg3B,8FC/DTwwF,EAAY,SAAA9yG,GAAA,IAAE/T,EAAF+T,EAAE/T,SAAU8mH,EAAZ/yG,EAAY+yG,UAAcxoH,EAA1BkB,OAAA8lI,EAAA,EAAA9lI,CAAAuU,EAAA,iCAChBwxH,EAAA9nI,EAAAC,cAAC8nI,EAAA,EAAD,CACE/3H,EAAG,EACHgf,OAAQ,EACR3qB,GAAI,OACJ2D,GAAI,OACJhH,OAAQ,OACRC,aAAc,EACd4F,SAAU,OACVzG,MAAQS,EAAMT,MAAQS,EAAMT,MAAQ,OACpCwE,SAAW/D,EAAM+D,SAAW/D,EAAM+D,SAAW,OAC7CD,SAAW9D,EAAM8D,SAAW9D,EAAM8D,SAAW,SAE7CmjI,EAAA9nI,EAAAC,cAAC8nI,EAAA,EAAD,CACE9hI,IAAK,IACLC,OAAQ,EACR6N,MAAO,IACP5N,SAAU,YAEV2hI,EAAA9nI,EAAAC,cAAC8nI,EAAA,EAAO1/H,KAAR,CACEohH,UAAQ,EACR30G,KAAM,QACNhR,KAAM,QACNzB,QAASgnH,EACTnnH,UAAYrB,EAAMqB,UAAYrB,EAAMqB,UAAa,eAGrD4lI,EAAA9nI,EAAAC,cAAC8nI,EAAA,EAAD,CACE/mI,OAAQ,OACRN,KAAM,WACNJ,cAAe,SACf6D,UAAW,CAAEtD,EAAMmnI,QAAU5jI,IAAO8mB,GAAK,MACzC1qB,MAAO,CACLqG,SAAU,OACVohI,iBAAiB,YACjBC,mBAAmB,eACnBC,eAAiBtnI,EAAM6R,WAAqB,KAAR,MACpC01H,gBAAgB,mCAChB11H,WAAY7R,EAAM6R,WAAa7R,EAAM6R,WAAa,MAEpDxR,gBAAiB,UAEhBqB,KAKP6mH,EAAUuB,OAAS,SAAC9pH,GAAD,OACjBinI,EAAA9nI,EAAAC,cAAC8nI,EAAA,EAAD,CACE3nI,MAAO,EACPD,GAAI,CAAC,EAAE,GACPwH,GAAI,CAAC,EAAE,GACPkG,GAAKhN,EAAMgN,GAAKhN,EAAMgN,GAAMhN,EAAMiU,KAAO,EAAI,CAAC,EAAE,GAChD+uB,aAAehjC,EAAMgjC,aAAehjC,EAAMgjC,aAAe,kBAEzDikG,EAAA9nI,EAAAC,cAAC8nI,EAAA,EAAD,CACExhI,GAAI,CAAC,EAAE,GACPlG,WAAY,SACZC,cAAe,UAEbO,EAAMiU,MAAQgzH,EAAA9nI,EAAAC,cAAC8nI,EAAA,EAAD,CAAO3nI,MAAQS,EAAMwnI,WAAaxnI,EAAMwnI,WAAa,OAASrzH,IAAKnU,EAAMiU,OACzFgzH,EAAA9nI,EAAAC,cAAC8nI,EAAA,EAAQ94H,GAATlN,OAAAC,OAAA,CACE7B,GAAI,EACJgB,SAAU,CAAC,EAAE,GACbL,MAAO,YACPO,UAAW,SACXyF,GAAIjG,EAAMiU,KAAO,EAAI,EACrB5F,WAAY,aACRrO,EAAMw9B,YAETx9B,EAAMskB,OAGPtkB,EAAM+pH,UACNkd,EAAA9nI,EAAAC,cAAC8nI,EAAA,EAAQz1F,GAATvwC,OAAAC,OAAA,CACE6L,GAAI,CAAC,EAAE,GACPzM,WAAY,EACZD,SAAU,CAAC,EAAE,GACb0uB,WAAY,IACZ/uB,MAAO,YACPO,UAAW,UACPR,EAAMynI,eAETznI,EAAM+pH,UAIT/pH,EAAMgqH,WACNid,EAAA9nI,EAAAC,cAAC8nI,EAAA,EAAQz1F,GAAT,CAAYzkC,GAAI,EAAG1M,SAAU,CAAC,EAAE,GAAIE,UAAW,SAAUD,WAAY,EAAGyuB,WAAY,IAAK/uB,MAAO,aAC7FD,EAAMgqH,cAOjBzB,EAAUG,KAAO,SAAA5wG,GAAA,IAAEpW,EAAFoW,EAAEpW,SAAa1B,EAAfkB,OAAA8lI,EAAA,EAAA9lI,CAAA4W,EAAA,qBACfmvH,EAAA9nI,EAAAC,cAAC8nI,EAAA,EAADhmI,OAAAC,OAAA,CACE5B,MAAO,EACPmG,GAAI,CAAC,EAAE,IACH1F,GAEH0B,IAaL6mH,EAAUpG,OAAS,SAAAvjG,GAAA,IAAEld,EAAFkd,EAAEld,SAAFR,OAAA8lI,EAAA,EAAA9lI,CAAA0d,EAAA,qBACjBqoH,EAAA9nI,EAAAC,cAAC8nI,EAAA,EAAD,CACErnI,KAAM,WACNC,eAAgB,SAChBoG,UAAW,EACX6M,YAAa,aACbrN,GAAI,CAAC,EAAE,GACPD,GAAI,GAEH/D,IAKL6mH,EAAUmf,WAAa,SAAA93F,GAAA,IAAEpuC,EAAFouC,EAAEpuC,QAAFN,OAAA8lI,EAAA,EAAA9lI,CAAA0uC,EAAA,oBACrBq3F,EAAA9nI,EAAAC,cAAC8nI,EAAA,EAAD,CACE5hI,SAAU,WACVF,IAAK,IACLyK,KAAM,IACNpD,EAAG,EACH4d,GAAI,SAEJ48G,EAAA9nI,EAAAC,cAAC8nI,EAAA,EAAOre,QAAR,CACErnH,QAASA,EACTonH,UAAQ,EACR30G,KAAM,YACNhR,KAAM,YAKGslH,2sTC7ITpG,6MAGJ9/G,cAAgB,gFAEVtC,KAAKsC,cACPtC,KAAKsC,cAAcC,SAASvC,KAAKC,OAEjCD,KAAKsC,cAAgB,IAAIE,IAAcxC,KAAKC,4JAK9CD,KAAKyC,+IAIL,IAAMmlI,GAAW,IAAIl9H,MAAOm9H,cACtBjR,EAAoB52H,KAAKsC,cAAcwJ,gBAAgB,CAAC,aAAa,YACrEg8H,EAAclR,EAAoB,IAAM,EAAE,EAChD,OACEgN,EAAAxkI,EAAAC,cAAC0oI,EAAA,EAAD,CACEx6F,GAAI,EACJvgC,GAAI,SACJvN,WAAY,SACZC,cAAe,SACf6D,UAAWC,IAAOygI,OAClB3jI,gBAAiB,QACjBP,eAAgB,cAEhB6jI,EAAAxkI,EAAAC,cAAC0oI,EAAA,EAAD,CACEvoI,MAAO,EACPmG,GAAI,CAAC,EAAE,GACP5F,eAAgB,UAEhB6jI,EAAAxkI,EAAAC,cAAC0oI,EAAA,EAAD,CACEvoI,MAAO,EACPY,OAAQ,CAAC,OAAO,QAChBX,WAAY,aACZsE,SAAU,CAAC,OAAO,QAClBhE,eAAgB,aAChBL,cAAe,CAAC,SAAS,QAEzBkkI,EAAAxkI,EAAAC,cAAC0oI,EAAA,EAAD,CAAMvoI,MAAO,CAAC,EAAEsoI,GAAcpoI,cAAe,SAAUU,OAAQ,CAAC,OAAO,SACrEwjI,EAAAxkI,EAAAC,cAAC0oI,EAAA,EAAQ15H,GAAT,CAAY5N,UAAW,CAAC,SAAS,QAAS6N,WAAY,YAAa/N,SAAU,CAAC,EAAE,GAAI6G,GAAI,EAAGlH,MAAO,aAAlG,aAGA0jI,EAAAxkI,EAAAC,cAAC0oI,EAAA,EAAD,CAAMvoI,MAAO,EAAGE,cAAe,UAC7BkkI,EAAAxkI,EAAAC,cAAC2oI,EAAA,EAAD,CACEjhI,GAAI,CAAC,EAAE,GACP7G,MAAO,OACPK,SAAU,CAAC,EAAE,GACbuH,WAAY,OACZwG,WAAY,YACZ7N,UAAW,CAAC,SAAS,QACrBgjB,KAAM,mCAENmgH,EAAAxkI,EAAAC,cAAA,QAAM4oI,KAAK,MAAMC,aAAW,iBAA5B,gBATF,kBAWAtE,EAAAxkI,EAAAC,cAAC2oI,EAAA,EAAD,CACEjhI,GAAI,CAAC,EAAE,GACP7G,MAAO,OACPK,SAAU,CAAC,EAAE,GACbuH,WAAY,OACZwG,WAAY,YACZ7N,UAAW,CAAC,SAAS,QACrBgjB,KAAM,6FAENmgH,EAAAxkI,EAAAC,cAAA,QAAM4oI,KAAK,MAAMC,aAAW,gBAA5B,gBATF,iBAWAtE,EAAAxkI,EAAAC,cAAC0oI,EAAA,EAAD,CAAMhhI,GAAI,CAAC,EAAE,GAAIvH,MAAO,EAAGO,eAAgB,CAAC,SAAS,eACnD6jI,EAAAxkI,EAAAC,cAAC8oI,EAAA,EAAD,CACEjoI,MAAO,OACPgkE,GAAG,oBACH3gE,UAAWC,IAAOukB,MAElB67G,EAAAxkI,EAAAC,cAAC0oI,EAAA,EAAD,CACEvnI,WAAY,EACZN,MAAO,OACPK,SAAU,CAAC,EAAE,GACbuH,WAAY,OACZwG,WAAY,YACZ7N,UAAW,CAAC,SAAS,SAErBmjI,EAAAxkI,EAAAC,cAAA,QAAM4oI,KAAK,MAAMC,aAAW,oBAA5B,gBARF,uBAYJtE,EAAAxkI,EAAAC,cAAC2oI,EAAA,EAAD,CACEjhI,GAAI,CAAC,EAAE,GACP7G,MAAO,OACPK,SAAU,CAAC,EAAE,GACbuH,WAAY,OACZwG,WAAY,YACZ7N,UAAW,CAAC,SAAS,QACrBgjB,KAAM,mDAENmgH,EAAAxkI,EAAAC,cAAA,QAAM4oI,KAAK,MAAMC,aAAW,kBAA5B,wCATF,mBAWAtE,EAAAxkI,EAAAC,cAAC2oI,EAAA,EAAD,CACEjhI,GAAI,CAAC,EAAE,GACP7G,MAAO,OACPK,SAAU,CAAC,EAAE,GACbuH,WAAY,OACZwG,WAAY,YACZ7N,UAAW,CAAC,SAAS,QACrBgjB,KAAM,iEAENmgH,EAAAxkI,EAAAC,cAAA,QAAM4oI,KAAK,MAAMC,aAAW,iBAA5B,gBATF,oBAcFtR,GACEgN,EAAAxkI,EAAAC,cAAC0oI,EAAA,EAAD,CAAMvoI,MAAO,CAAC,EAAEsoI,GAAcpoI,cAAe,SAAUU,OAAQ,CAAC,OAAO,SACrEwjI,EAAAxkI,EAAAC,cAAC0oI,EAAA,EAAQ15H,GAAT,CAAY5N,UAAW,CAAC,SAAS,QAAS6N,WAAY,YAAa/N,SAAU,CAAC,EAAE,GAAI6G,GAAI,EAAGlH,MAAO,aAAlG,cAGA0jI,EAAAxkI,EAAAC,cAAC0oI,EAAA,EAAD,CAAMvoI,MAAO,EAAGE,cAAe,UAC7BkkI,EAAAxkI,EAAAC,cAAC0oI,EAAA,EAAD,CAAMhhI,GAAI,CAAC,EAAE,GAAIvH,MAAO,EAAGO,eAAgB,CAAC,SAAS,eACnD6jI,EAAAxkI,EAAAC,cAAC8oI,EAAA,EAAD,CACEjoI,MAAO,OACPgkE,GAAI,cACJ3gE,UAAWC,IAAOukB,MAElB67G,EAAAxkI,EAAAC,cAAC0oI,EAAA,EAAD,CAAMtnI,UAAW,CAAC,SAAS,QAAS6N,WAAY,YAAa/N,SAAU,CAAC,EAAE,GAAIC,WAAY,EAAGN,MAAO,OAAQ4H,WAAY,QACtH87H,EAAAxkI,EAAAC,cAAA,QAAM4oI,KAAK,MAAMC,aAAW,uBAA5B,gBADF,eAKJtE,EAAAxkI,EAAAC,cAAC0oI,EAAA,EAAD,CAAMhhI,GAAI,CAAC,EAAE,GAAIvH,MAAO,EAAGO,eAAgB,CAAC,SAAS,eACnD6jI,EAAAxkI,EAAAC,cAAC8oI,EAAA,EAAD,CACEjoI,MAAO,OACPqD,UAAWC,IAAOukB,KAClBm8C,GAAI,yBAEJ0/D,EAAAxkI,EAAAC,cAAC0oI,EAAA,EAAD,CAAMtnI,UAAW,CAAC,SAAS,QAAS6N,WAAY,YAAa/N,SAAU,CAAC,EAAE,GAAIC,WAAY,EAAGN,MAAO,OAAQ4H,WAAY,QACtH87H,EAAAxkI,EAAAC,cAAA,QAAM4oI,KAAK,MAAMC,aAAW,wBAA5B,gBADF,gBAKJtE,EAAAxkI,EAAAC,cAAC0oI,EAAA,EAAD,CAAMhhI,GAAI,CAAC,EAAE,GAAIvH,MAAO,EAAGO,eAAgB,CAAC,SAAS,eACnD6jI,EAAAxkI,EAAAC,cAAC8oI,EAAA,EAAD,CACEjoI,MAAO,OACPqD,UAAWC,IAAOukB,KAClBm8C,GAAI,2BAEJ0/D,EAAAxkI,EAAAC,cAAC0oI,EAAA,EAAD,CAAMtnI,UAAW,CAAC,SAAS,QAAS6N,WAAY,YAAa/N,SAAU,CAAC,EAAE,GAAIC,WAAY,EAAGN,MAAO,OAAQ4H,WAAY,QACtH87H,EAAAxkI,EAAAC,cAAA,QAAM4oI,KAAK,MAAMC,aAAW,0BAA5B,gBADF,kBAKJtE,EAAAxkI,EAAAC,cAAC0oI,EAAA,EAAD,CAAMhhI,GAAI,CAAC,EAAE,GAAIvH,MAAO,EAAGO,eAAgB,CAAC,SAAS,eACnD6jI,EAAAxkI,EAAAC,cAAC2oI,EAAA,EAAD,CAASvkH,KAAK,6BACZmgH,EAAAxkI,EAAAC,cAAC0oI,EAAA,EAAD,CAAMtnI,UAAW,CAAC,SAAS,QAAS6N,WAAY,YAAa/N,SAAU,CAAC,EAAE,GAAIC,WAAY,EAAGN,MAAO,OAAQ4H,WAAY,QACtH87H,EAAAxkI,EAAAC,cAAA,QAAM4oI,KAAK,MAAMC,aAAW,oBAA5B,gBADF,YAKJtE,EAAAxkI,EAAAC,cAAC0oI,EAAA,EAAD,CAAMhhI,GAAI,CAAC,EAAE,GAAIvH,MAAO,EAAGO,eAAgB,CAAC,SAAS,eACnD6jI,EAAAxkI,EAAAC,cAAC2oI,EAAA,EAAD,CAASvkH,KAAK,sGACZmgH,EAAAxkI,EAAAC,cAAC0oI,EAAA,EAAD,CAAMtnI,UAAW,CAAC,SAAS,QAAS6N,WAAY,YAAa/N,SAAU,CAAC,EAAE,GAAIC,WAAY,EAAGN,MAAO,OAAQ4H,WAAY,QACtH87H,EAAAxkI,EAAAC,cAAA,QAAM4oI,KAAK,MAAMC,aAAW,oBAA5B,gBADF,aAQZtE,EAAAxkI,EAAAC,cAAC0oI,EAAA,EAAD,CAAMvoI,MAAO,CAAC,EAAEsoI,GAAcpoI,cAAe,SAAUU,OAAQ,CAAC,OAAO,SACrEwjI,EAAAxkI,EAAAC,cAAC0oI,EAAA,EAAQ15H,GAAT,CAAY5N,UAAW,CAAC,SAAS,QAAS6N,WAAY,YAAa/N,SAAU,CAAC,EAAE,GAAI6G,GAAI,EAAGlH,MAAO,aAAlG,wBAGA0jI,EAAAxkI,EAAAC,cAAC0oI,EAAA,EAAD,CAAMtnI,UAAW,CAAC,SAAS,QAAS6N,WAAY,YAAa/N,SAAU,CAAC,EAAE,GAAIL,MAAO,OAAQ4H,WAAY,QACvG87H,EAAAxkI,EAAAC,cAAA,QAAM4oI,KAAK,MAAMC,aAAW,SAA5B,gBADF,uBAIFtE,EAAAxkI,EAAAC,cAAC0oI,EAAA,EAAD,CAAMvoI,MAAO,CAAC,EAAEsoI,GAAcpoI,cAAe,UAC3CkkI,EAAAxkI,EAAAC,cAAC0oI,EAAA,EAAQ15H,GAAT,CAAY5N,UAAW,CAAC,SAAS,QAAS6N,WAAY,YAAa/N,SAAU,CAAC,EAAE,GAAI6G,GAAI,EAAGlH,MAAO,aAAlG,WAGA0jI,EAAAxkI,EAAAC,cAAC0oI,EAAA,EAAD,CAAMroI,cAAe,MAAOK,eAAgB,CAAC,eAAe,eAC1D6jI,EAAAxkI,EAAAC,cAAC2oI,EAAA,EAAD,CAASvkH,KAAK,mCACZmgH,EAAAxkI,EAAAC,cAAC0oI,EAAA,EAAD,CAAO3zH,IAAI,4BAA4BhU,OAAQ,QAASD,GAAI,CAAC,OAAO,GAAIiH,GAAI,CAAC,EAAE,GAAI/F,UAAW,EAAGhB,aAAc,SAEjHujI,EAAAxkI,EAAAC,cAAC2oI,EAAA,EAAD,CAASvkH,KAAK,4BACZmgH,EAAAxkI,EAAAC,cAAC0oI,EAAA,EAAD,CAAO3zH,IAAI,6BAA6BhU,OAAQ,QAASD,GAAI,CAAC,OAAO,GAAIiH,GAAI,CAAC,EAAE,GAAI/F,UAAW,EAAGhB,aAAc,SAElHujI,EAAAxkI,EAAAC,cAAC2oI,EAAA,EAAD,CAASvkH,KAAK,8BACZmgH,EAAAxkI,EAAAC,cAAC0oI,EAAA,EAAD,CAAO3zH,IAAI,4BAA4BhU,OAAQ,QAASD,GAAI,CAAC,OAAO,GAAIiH,GAAI,CAAC,EAAE,GAAI/F,UAAW,EAAGhB,aAAc,SAEjHujI,EAAAxkI,EAAAC,cAAC2oI,EAAA,EAAD,CAASvkH,KAAK,mCACZmgH,EAAAxkI,EAAAC,cAAC0oI,EAAA,EAAD,CAAO3zH,IAAI,2BAA2BhU,OAAQ,QAASD,GAAI,CAAC,OAAO,GAAIiH,GAAI,CAAC,EAAE,GAAI/F,UAAW,EAAGhB,aAAc,SAEhHujI,EAAAxkI,EAAAC,cAAC2oI,EAAA,EAAD,CAASvkH,KAAK,iCACZmgH,EAAAxkI,EAAAC,cAAC0oI,EAAA,EAAD,CAAO3zH,IAAI,2BAA2BhU,OAAQ,QAASD,GAAI,CAAC,OAAO,GAAIiH,GAAI,CAAC,EAAE,GAAI/F,UAAW,EAAGhB,aAAc,SAEhHujI,EAAAxkI,EAAAC,cAAC2oI,EAAA,EAAD,CAASvkH,KAAK,gDACZmgH,EAAAxkI,EAAAC,cAAC0oI,EAAA,EAAD,CAAO3zH,IAAI,6BAA6BhU,OAAQ,QAASD,GAAI,CAAC,OAAO,GAAIiH,GAAI,CAAC,EAAE,GAAI/F,UAAW,EAAGhB,aAAc,SAElHujI,EAAAxkI,EAAAC,cAAC2oI,EAAA,EAAD,CAASvkH,KAAK,mCACZmgH,EAAAxkI,EAAAC,cAAC0oI,EAAA,EAAD,CAAO3zH,IAAI,+BAA+BhU,OAAQ,QAASD,GAAI,CAAC,OAAO,GAAIiH,GAAI,CAAC,EAAE,GAAI/F,UAAW,EAAGhB,aAAc,aAM5HujI,EAAAxkI,EAAAC,cAAC0oI,EAAA,EAAD,CACEvoI,MAAO,EACPY,OAAQ,CAAC,OAAO,QAChBV,cAAe,SACfD,WAAY,CAAC,SAAS,YACtBM,eAAgB,CAAC,SAAS,aAE1B6jI,EAAAxkI,EAAAC,cAAC0oI,EAAA,EAAD,CACE34H,EAAG,EACH5P,MAAO,EACPC,WAAY,SACZM,eAAgB,SAChBO,gBAAiB,YACjBZ,cAAe,CAAC,SAAS,QAEzBkkI,EAAAxkI,EAAAC,cAAC0oI,EAAA,EAAD,CACE7nI,MAAO,QACPO,UAAW,CAAC,SAAS,aAFvB,QAIUmnI,EAJV,qBAMAhE,EAAAxkI,EAAAC,cAAC8oI,EAAA,EAAD,CACEjoI,MAAO,OACPgkE,GAAI,oBACJtkE,MAAO,CAAC0kC,eAAe,SAEvBs/F,EAAAxkI,EAAAC,cAAC0oI,EAAA,EAAD,CACEx6F,GAAI,EACJrtC,MAAO,OACPO,UAAW,CAAC,SAAS,aAHvB,+BAzOOO,aAwPNohH,0HC7PTt7G,mLACK,IAAArC,EAAAzE,KAEDooI,EAAW,SAACnoI,GAAD,OACfyU,EAAAtV,EAAAC,cAACmQ,EAAA,EAAQkiC,GAATvwC,OAAAC,OAAA,CACEZ,WAAY,CAAC,EAAE,GACfN,MAAO,YACPN,MAAO,CACLJ,MAAM,OACNoB,WAAW,UAEbL,SAAU,CAAC,OAAO,GAClB0uB,WAAY,WACRhvB,GAEHA,EAAM0B,WAIX,OACE+S,EAAAtV,EAAAC,cAACmQ,EAAA,EAAD,CACEhQ,MAAOQ,KAAKC,MAAMT,OAGfQ,KAAKC,MAAM0xC,MAAQ3xC,KAAKC,MAAM0xC,KAAK5sC,OAAO,EACzC2P,EAAAtV,EAAAC,cAACmQ,EAAA,EAAD,CACE/P,WAAY,UAEZiV,EAAAtV,EAAAC,cAAC+oI,EACKpoI,KAAKC,OAEXyU,EAAAtV,EAAAC,cAACmQ,EAAA,EAAD,CACE5P,MAAO,CACLkG,OAAO,WAETrE,QAAU,SAAA+F,GAAC,OAAI/C,EAAKxE,MAAMi2C,iBAAiBzxC,EAAKxE,MAAMskB,MAAM9f,EAAKxE,MAAM0xC,QAEvEj9B,EAAAtV,EAAAC,cAACmQ,EAAA,EAAD,CACEqhC,UAAW,MACXC,QAAS,iCAETp8B,EAAAtV,EAAAC,cAACmQ,EAAA,EAAD,CACE9H,GAAI,EACJ1B,KAAM,OACN9F,MAAO,YACPqD,UAAWC,IAAOmO,QAClBzO,KAAOlD,KAAKC,MAAM8F,SAAW,MAAQ,aAM7C2O,EAAAtV,EAAAC,cAAC+oI,EACKpoI,KAAKC,eArDOe,aA8Df8F,2+nBC/DTm3B,mLAIF,IAAMl4B,EAA0C,qBAAxB/F,KAAKC,MAAM8F,UAA2B/F,KAAKC,MAAM8F,SACnE2oB,EAAQ1uB,KAAKC,MAAMk+B,SAAYzpB,EAAAtV,EAAAC,cAACsV,EAAA,EAADxT,OAAAC,OAAA,CAAO5B,MAAO,OAAQ4U,IAAKpU,KAAKC,MAAMk+B,UAAcn+B,KAAKC,MAAM0uB,aAAoB3uB,KAAKC,MAAMsnD,SAAY7yC,EAAAtV,EAAAC,cAACsV,EAAA,EAADxT,OAAAC,OAAA,CAAM4E,KAAMhG,KAAKC,MAAMsnD,UAAcvnD,KAAKC,MAAM6uB,YAAiB,KAC1MoP,EAAWxpB,EAAAtV,EAAAC,cAACsV,EAAA,EAAD,CAAMlU,UAAYsF,EAAW,OAAS,SAAUxF,SAAU,EAAGC,WAAY,EAAGN,MAAO,aAAcF,KAAKC,MAAMi+B,SAE7H,OACIxpB,EAAAtV,EAAAC,cAACsV,EAAA,EAADxT,OAAAC,OAAA,CACElB,MAAO,QACPG,aAAc,EACdsF,GAAKI,EAAW,CAAC,EAAE,GAAK,EACxBL,GAAKK,EAAW,EAAI,CAAC,EAAE,GACvBqB,GAAKrB,EAAW,EAAI,CAAC,EAAE,GACvBtC,GAAKsC,EAAW,EAAI,CAAC,EAAE,GACvBtE,QAAUzB,KAAKC,MAAMyB,YACrBtB,OAAS2F,EAAW,OAAS,CAAC,QAAQ,SACtCzE,UAAWtB,KAAKC,MAAMwuB,SAAW,cAAgB,SACjDq+F,cAAe9sH,KAAKC,MAAMwuB,SAAW,cAAgB,SACrDjvB,MAAOQ,KAAKC,MAAMT,MAAQQ,KAAKC,MAAMT,MAASuG,EAAW,OAAS,CAAC,QAAQ,SAC3EnG,MAAOI,KAAKC,MAAMqrH,YAActrH,KAAKC,MAAMqrH,YAAevlH,EAAW,CAAChG,eAAe,cAAgB,MACjGC,KAAKC,MAAMiB,aAEfwT,EAAAtV,EAAAC,cAAAqV,EAAAtV,EAAAkpC,SAAA,KAEItoC,KAAKC,MAAM84D,OACTrkD,EAAAtV,EAAAC,cAACsV,EAAA,EAAD,CACEpP,SAAU,WACVlF,aAAc,OACdC,gBAAkBN,KAAKC,MAAM84D,MAAMjrC,QAAU9tB,KAAKC,MAAM84D,MAAMjrC,QAAU,OACxEluB,MAAQmG,EAAW,CAACoN,MAAM,QAAQ9N,IAAI,SAAW,CAAC8N,MAAM,QAAQ9N,IAAI,SACpEM,GAAI,CAAC,MAAM,OACXD,GAAI,CAAC,MAAM,QAEXgP,EAAAtV,EAAAC,cAACsV,EAAA,EAAD,CACEnU,WAAY,EACZD,SAAU,OACVL,MAAQF,KAAKC,MAAM84D,MAAM74D,MAAQF,KAAKC,MAAM84D,MAAM74D,MAAQ,QAE3DF,KAAKC,MAAM84D,MAAM12D,OAKxBqS,EAAAtV,EAAAC,cAACsV,EAAA,EAAD,CAAMjV,cAAgBqG,EAAW,MAAQ,SAAUhG,eAAiBgG,EAAW,aAAe,SAAUtG,WAAY,UAClHiV,EAAAtV,EAAAC,cAACsV,EAAA,EAAD,CAAMnV,MAAQuG,EAAW,OAAS,EAAI5F,GAAK4F,EAAW,EAAI,EAAIhG,eAAiBgG,EAAW,aAAe,UACrG/F,KAAKC,MAAMy3D,YAAwC,QAA1B13D,KAAKC,MAAMy3D,WAAuBx5B,EAAUxP,GAEzEha,EAAAtV,EAAAC,cAACsV,EAAA,EAAD,CAAMnV,MAAQuG,EAAW,OAAS,EAAIrG,cAAe,SAAUK,eAAiBgG,EAAW,aAAe,UACtG/F,KAAKC,MAAMy3D,YAAwC,QAA1B13D,KAAKC,MAAMy3D,WAAuBhpC,EAAQwP,EAEnEl+B,KAAKC,MAAM25C,YAAc55C,KAAKC,MAAM25C,WAAW9mB,MAAM,MAAMpsB,IAAI,SAACkB,EAAEuC,GAKhE,OAHIA,IACFvC,EAAK8M,EAAAtV,EAAAC,cAAA,aAAQuI,IAGb8M,EAAAtV,EAAAC,cAACsV,EAAA,EAAD,CAAM9N,IAAG,cAAAT,OAAgB+D,GAAK8kB,WAAY,MAAOxuB,UAAYsF,EAAW,OAAS,SAAU7F,MAAO,WAAYM,WAAY,EAAGD,SAAU,GAAIqH,gBA1DvI5G,aAqEXi9B,0HCrETtxB,mLAEF,OACE+H,EAAAtV,EAAAC,cAACsV,EAAA,EAADxT,OAAAC,OAAA,CACE5B,MAAO,EACPC,WAAY,SACZM,eAAgB,UACZC,KAAKC,MAAM2M,WAEf8H,EAAAtV,EAAAC,cAACsV,EAAA,EAAW3U,KAAKC,MAAM6M,aAErB9M,KAAKC,MAAMoC,MACTqS,EAAAtV,EAAAC,cAACsV,EAAA,EAAS3U,KAAKC,MAAM8M,UAAY/M,KAAKC,MAAMoC,cAZ/BrB,aAmBV2L,6QCTT0kB,6MAEJjvB,MAAQ,CACNy9H,OAAM,KAIRv9H,cAAgB,OAChBmO,oBAAqB,IAwDrBid,+BAAY,SAAAnP,IAAA,IAAA8pH,EAAAxwH,EAAA7U,EAAAooB,EAAA2C,EAAAxjB,EAAA88C,EAAAx5B,EAAA0iB,EAAA8gE,EAAA36F,EAAAqB,EAAAinE,EAAAngE,EAAAwuE,EAAAD,EAAAv9C,EAAAo/C,EAAAD,EAAAl/C,EAAAqF,EAAAmzF,EAAArhF,EAAAshF,EAAAC,EAAA/tF,EAAAj5B,EAAA0rE,EAAAu7C,EAAAt7C,EAAAu7C,EAAAjnH,EAAAw+C,EAAA0oE,EAAAlgG,EAAAsmD,EAAAvmD,EAAAuH,EAAA64F,EAAA5wB,EAAAtsE,EAAA2mE,EAAAw2B,EAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAjqE,GAAA3zC,GAAAs9B,GAAA5uC,GAAA7P,GAAAs1B,GAAA1lB,GAAAH,GAAAuvH,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAC,GAAAvkG,GAAA81F,GAAA92H,UAAA,OAAA8Q,EAAAxW,EAAA6W,KAAA,SAAAwI,GAAA,cAAAA,EAAAtI,KAAAsI,EAAArI,MAAA,UAAMiyH,EAANzM,GAAA72H,OAAA,QAAAC,IAAA42H,GAAA,GAAAA,GAAA,GAAgB,MAItBn3H,EAAKgM,oBAAuBhM,EAAKxE,MAAM0J,OAAUlF,EAAKxE,MAAMoK,YAJtD,CAAAoU,EAAArI,KAAA,eAAAqI,EAAAgB,OAAA,UAKD,GALC,UAQJ5H,EAAyC,SAAhCpT,EAAKxE,MAAM6X,iBAEpB9U,EAAyB,OAAdqlI,EACXj9G,EAAY3mB,EAAKxE,MAAMmrB,UACxBi9G,IACHA,EAAYj9G,EAAUplB,MAGlB+nB,EAAa3C,EAAUnrB,MACvBsK,EAAWwjB,GAAcA,EAAWxjB,SAAWwjB,EAAWxjB,SAAa9F,EAAKxE,MAAM8F,SAAW,EAAI,EAEjGshD,EAAkD,qBAA5B5iD,EAAKxE,MAAMonD,cAA+B5iD,EAAKxE,MAAMonD,aAE7Ex5B,EAAS,MACTppB,EAAKxE,MAAM0J,MAtBL,CAAA8U,EAAArI,KAAA,UAAAqI,EAAA+6C,GAuBA6uE,EAvBA5pH,EAAArI,KAwBD,iBAxBCqI,EAAA+6C,GAAA,GAgCD,cAhCC/6C,EAAA+6C,GAAA,GAwCD,eAxCC/6C,EAAA+6C,GAAA,GAoDD,QApDC/6C,EAAA+6C,GAAA,GA4DD,oBA5DC/6C,EAAA+6C,GAAA,GAwED,eAxEC/6C,EAAA+6C,GAAA,GAgFD,qBAhFC/6C,EAAA+6C,GAAA,GAwFD,kCAxFC/6C,EAAA+6C,GAAA,GA6GD,6BA7GC/6C,EAAA+6C,GAAA,GAkID,aAlIC/6C,EAAA+6C,GAAA,GA0ID,gBA1IC/6C,EAAA+6C,GAAA,GAmKD,yBAnKC/6C,EAAA+6C,GAAA,GA2LD,oBA3LC/6C,EAAA+6C,GAAA,GAoND,sBApNC/6C,EAAA+6C,GAAA,GA4ND,UA5NC/6C,EAAA+6C,GAAA,IAqOD,SArOC/6C,EAAA+6C,GAAA,IA6OD,sBA7OC/6C,EAAA+6C,GAAA,IAsPD,iBAtPC/6C,EAAA+6C,GAAA,IA+PD,QA/PC/6C,EAAA+6C,GAAA,IA2QD,WA3QC/6C,EAAA+6C,GAAA,IAiTD,aAjTC/6C,EAAA+6C,GAAA,IAgUD,aAhUC/6C,EAAA+6C,GAAA,IA+UD,qBA/UC/6C,EAAA+6C,GAAA,IA+VD,QA/VC/6C,EAAA+6C,GAAA,IAkXD,oBAlXC/6C,EAAA+6C,GAAA,IAyZD,aAzZC/6C,EAAA+6C,GAAA,IAgkBD,qBAhkBC/6C,EAAA+6C,GAAA,IAgrBD,WAhrBC/6C,EAAA+6C,GAAA,6BAAA/6C,EAAArI,KAAA,GAyBW3R,EAAKnC,cAAcypF,eAAes8C,EAAU5jI,EAAKxE,MAAM0J,MAAMlF,EAAKxE,MAAMoK,YAAY5F,EAAKxE,MAAM2L,QAAQy7C,GAzBlH,eAyBJx5B,EAzBIpP,EAAAtG,OA0BUnV,GACZyB,EAAKiM,aAAa,CAChBokB,aAAajH,EAAO5M,aA5BpBxC,EAAAgB,OAAA,4BAiCE8wB,EAAY9rC,EAAKnC,cAAc6tG,kBAAkB1rG,EAAKxE,MAAMoK,aAjC9DoU,EAAArI,KAAA,GAkCwC3R,EAAKnC,cAAc+uG,8BAA8B5sG,EAAKxE,MAAMoK,aAlCpG,eAkCEgnG,EAlCF5yF,EAAAtG,KAmCJ1T,EAAKiM,aAAa,CAChB6/B,YACA8gE,kCArCE5yF,EAAAgB,OAAA,4BAAAhB,EAAArI,KAAA,GAyCW3R,EAAKnC,cAAcypF,eAAes8C,EAAU5jI,EAAKxE,MAAM0J,MAAMlF,EAAKxE,MAAMoK,YAAY5F,EAAKxE,MAAM2L,QAAQy7C,GAzClH,eAyCJx5B,EAzCIpP,EAAAtG,OA0CUnV,IACR0T,EAAa,KAC+B,qBAArCjS,EAAKxE,MAAMoK,YAAYk7C,WAA6B9gD,EAAKxE,MAAMoK,YAAYk7C,aACpF7uC,EAAamX,EAAO5M,YAEtBxc,EAAKiM,aAAa,CAChBgG,gBAhDA+H,EAAAgB,OAAA,4BAAAhB,EAAArI,KAAA,GAqDW3R,EAAKnC,cAAcypF,eAAes8C,EAAU5jI,EAAKxE,MAAM0J,MAAMlF,EAAKxE,MAAMoK,YAAY5F,EAAKxE,MAAM2L,QAAQy7C,GArDlH,eAqDJx5B,EArDIpP,EAAAtG,OAsDUnV,GACZyB,EAAKiM,aAAa,CAChB8pD,IAAI3sC,EAAO5M,aAxDXxC,EAAAgB,OAAA,4BAAAhB,EAAArI,KAAA,GA+DM3R,EAAKnC,cAAcq8E,eAAel6E,EAAKxE,MAAMoK,YAAY5F,EAAKxE,MAAM2L,QAAQy7C,GA/DlF,eAAAtvC,EAAA0G,EAAAtG,KA8DF6mE,EA9DEjnE,EA8DFinE,4BAGEh8E,GAAYg8E,IACdv6E,EAAKiM,aAAa,CAChB45H,gBAAgBtrD,EAA4B/9D,aAE9C4M,EAASmxD,GArEPvgE,EAAAgB,OAAA,4BAAAhB,EAAArI,KAAA,GAyEW3R,EAAKnC,cAAcypF,eAAes8C,EAAU5jI,EAAKxE,MAAM0J,MAAMlF,EAAKxE,MAAMoK,YAAY5F,EAAKxE,MAAM2L,QAAQy7C,GAzElH,eAyEJx5B,EAzEIpP,EAAAtG,OA0EUnV,GACZyB,EAAKiM,aAAa,CAChBsF,WAAW6X,EAAO5M,aA5ElBxC,EAAAgB,OAAA,4BAAAhB,EAAArI,KAAA,GAiFW3R,EAAKnC,cAAcypF,eAAes8C,EAAU5jI,EAAKxE,MAAM0J,MAAMlF,EAAKxE,MAAMoK,YAAY5F,EAAKxE,MAAM2L,QAAQy7C,GAjFlH,eAiFJx5B,EAjFIpP,EAAAtG,OAkFUnV,GACZyB,EAAKiM,aAAa,CAChB2H,iBAAiBwV,EAAO5M,aApFxBxC,EAAAgB,OAAA,4BAAAhB,EAAArI,KAAA,GA4FM3R,EAAKnC,cAAcypF,eAAes8C,EAAU5jI,EAAKxE,MAAM0J,MAAMlF,EAAKxE,MAAMoK,YAAY5F,EAAKxE,MAAM2L,QAAQy7C,GA5F7G,eAAAxoC,EAAAJ,EAAAtG,KA0FFk1E,EA1FExuE,EA0FFwuE,2BACAD,EA3FEvuE,EA2FFuuE,8BAGiCC,IAC7BrqF,GACFyB,EAAKiM,aAAa,CAChBmvH,OAAM,EACNxyC,4BACAD,gCAIJv/D,EAAS,CACPw/D,4BACAD,gCAzGA3uE,EAAAgB,OAAA,4BAAAhB,EAAArI,KAAA,GAiHM3R,EAAKnC,cAAcypF,eAAes8C,EAAU5jI,EAAKxE,MAAM0J,MAAMlF,EAAKxE,MAAMoK,YAAY5F,EAAKxE,MAAM2L,QAAQy7C,GAjH7G,eAAAxX,EAAApxB,EAAAtG,KA+GF82E,EA/GEp/C,EA+GFo/C,sBACAD,EAhHEn/C,EAgHFm/C,yBAG4BC,IACxBjsF,GACFyB,EAAKiM,aAAa,CAChBmvH,OAAM,EACN5wC,uBACAD,2BAIJnhE,EAAS,CACPohE,uBACAD,2BA9HAvwE,EAAAgB,OAAA,4BAAAhB,EAAArI,KAAA,GAmIW3R,EAAKnC,cAAcypF,eAAes8C,EAAU5jI,EAAKxE,MAAM0J,MAAMlF,EAAKxE,MAAMoK,YAAY5F,EAAKxE,MAAM2L,QAAQy7C,GAnIlH,eAmIJx5B,EAnIIpP,EAAAtG,OAoIUnV,GACZyB,EAAKiM,aAAa,CAChB06B,SAASvd,EAAO5M,aAtIhBxC,EAAAgB,OAAA,4BAAAhB,EAAArI,KAAA,GA2I0CwI,QAAQkD,IAAI,CACxDrd,EAAKipB,UAAU,mBACfjpB,EAAKnC,cAAcwzG,aAAarxG,EAAKxE,MAAMoK,eA7IzC,eAAAylC,EAAArxB,EAAAtG,KAAAg9B,EAAAh0C,OAAAopI,EAAA,EAAAppI,CAAA2uC,EAAA,GA2IGw4F,EA3IHnzF,EAAA,GA2ImB8R,EA3InB9R,EAAA,GAgJAmzF,GAAmBA,EAAgB7/F,eAAiB6/F,EAAgB9/F,aAAeye,IAE/EshF,EAAYD,EAAgB7/F,cAAc90B,MAAMszC,GAChDuhF,EAAUF,EAAgB9/F,YAAY70B,MAAMszC,GAE9CjkD,GACFyB,EAAKiM,aAAa,CAChBmvH,OAAM,EACN2I,UACAD,cAIJ16G,EAAS,CACP26G,UACAD,cA/JA9pH,EAAAgB,OAAA,4BAAAhB,EAAArI,KAAA,GAoKwDwI,QAAQkD,IAAI,CACtErd,EAAKnC,cAAc+tF,cACnB5rF,EAAKnC,cAAcypF,eAAe,gBAAgBtnF,EAAKxE,MAAM0J,MAAMlF,EAAKxE,MAAMoK,YAAY5F,EAAKxE,MAAM2L,QAAQy7C,GAC7G5iD,EAAKnC,cAAcypF,eAAe,kBAAkBtnF,EAAKxE,MAAM0J,MAAMlF,EAAKxE,MAAMoK,YAAY5F,EAAKxE,MAAM2L,QAAQy7C,KAvK7G,eAAA5M,EAAAh8B,EAAAtG,KAAAqJ,EAAArgB,OAAAopI,EAAA,EAAAppI,CAAAs5C,EAAA,GAoKGyyC,EApKH1rE,EAAA,GAoKYinH,EApKZjnH,EAAA,IAoK+B2rE,EApK/B3rE,EAAA,KA0KmBinH,GAAsBv7C,IACrCw7C,EAAmBv7C,EAAgBh0E,GAAG,GAAKg0E,EAAgBx5E,MAAMu5E,EAASlsE,IAAI,MAAM1K,KAAKmyH,GAAsB,EAEjHzlI,GACFyB,EAAKiM,aAAa,CAChBmvH,OAAM,EACN6I,mBACAD,uBAIJ56G,EAAS,CACP66G,mBACAD,uBAvLAhqH,EAAAgB,OAAA,4BAAAhB,EAAArI,KAAA,GA4L8CwI,QAAQkD,IAAI,CAC5Drd,EAAKnC,cAAcypF,eAAe,MAAMtnF,EAAKxE,MAAM0J,MAAMlF,EAAKxE,MAAMoK,YAAY5F,EAAKxE,MAAM2L,QAAQy7C,GACnG5iD,EAAKnC,cAAcypF,eAAe,WAAWtnF,EAAKxE,MAAM0J,MAAMlF,EAAKxE,MAAMoK,YAAY5F,EAAKxE,MAAM2L,QAAQy7C,GACxG5iD,EAAKnC,cAAcypF,eAAe,aAAatnF,EAAKxE,MAAM0J,MAAMlF,EAAKxE,MAAMoK,YAAY5F,EAAKxE,MAAM2L,QAAQy7C,KA/LxG,eAAA5lC,EAAAhD,EAAAtG,KAAA8nD,EAAA9+D,OAAAopI,EAAA,EAAAppI,CAAAsgB,EAAA,GA4LCknH,EA5LD1oE,EAAA,GA4LWx3B,EA5LXw3B,EAAA,IA4LyB8uB,EA5LzB9uB,EAAA,KAmMex3B,GAAiBkgG,IAC5BngG,EAAcumD,EAAY51E,GAAG,GAAK41E,EAAYp7E,MAAMg1H,EAAU3nH,IAAI,MAAM1K,KAAKmyB,GAAiB,EAEhGzlC,GACFyB,EAAKiM,aAAa,CAChBmvH,OAAM,EACNr3F,cACAC,kBAIJ5a,EAAS,CACP2a,cACAC,kBAhNAhqB,EAAAgB,OAAA,4BAAAhB,EAAArI,KAAA,GAqNW3R,EAAKnC,cAAcypF,eAAes8C,EAAU5jI,EAAKxE,MAAM0J,MAAMlF,EAAKxE,MAAMoK,YAAY5F,EAAKxE,MAAM2L,QAAQy7C,GArNlH,eAqNJx5B,EArNIpP,EAAAtG,OAsNUnV,GACZyB,EAAKiM,aAAa,CAChBg/E,kBAAkB7hE,EAAO5M,aAxNzBxC,EAAAgB,OAAA,6BAAAhB,EAAArI,KAAA,IA6NqB3R,EAAKnC,cAAc4tC,cAAczrC,EAAKxE,MAAMoK,YAAYwN,GA7N7E,gBA6NEk4B,EA7NFtxB,EAAAtG,KA8NAnV,GACFyB,EAAKiM,aAAa,CAChBs+F,MAAMj/D,IAA0B,IAGpCliB,EAASkiB,EAnOLtxB,EAAAgB,OAAA,6BAAAhB,EAAArI,KAAA,IAsOW3R,EAAKnC,cAAcypF,eAAes8C,EAAU5jI,EAAKxE,MAAM0J,MAAMlF,EAAKxE,MAAMoK,YAAY5F,EAAKxE,MAAM2L,QAAQy7C,GAtOlH,gBAsOJx5B,EAtOIpP,EAAAtG,OAuOUnV,GACZyB,EAAKiM,aAAa,CAChB85H,SAAS38G,EAAO5M,aAzOhBxC,EAAAgB,OAAA,6BAAAhB,EAAArI,KAAA,IA8OW3R,EAAKnC,cAAcypF,eAAes8C,EAAU5jI,EAAKxE,MAAM0J,MAAMlF,EAAKxE,MAAMoK,YAAY5F,EAAKxE,MAAM2L,QAAQy7C,GA9OlH,gBA8OJx5B,EA9OIpP,EAAAtG,OA+OUnV,GACZyB,EAAKiM,aAAa,CAChB+5H,2BAA2B/gI,WAAWmkB,GAAQ,EAAI,KAAO,OACzD68G,kBAAkBhhI,WAAWmkB,GAAQ9iB,QAAQR,KAlP7CkU,EAAAgB,OAAA,6BAAAhB,EAAArI,KAAA,IAuPW3R,EAAKnC,cAAcypF,eAAes8C,EAAU5jI,EAAKxE,MAAM0J,MAAMlF,EAAKxE,MAAMoK,YAAY5F,EAAKxE,MAAM2L,QAAQy7C,GAvPlH,gBAuPJx5B,EAvPIpP,EAAAtG,OAwPUnV,GACZyB,EAAKiM,aAAa,CAChB+6B,aAAa/hC,WAAWmkB,GAAQ9iB,QAAQR,GACxCogI,sBAAsBjhI,WAAWmkB,GAAQ,EAAI,KAAO,SA3PpDpP,EAAAgB,OAAA,6BAAAhB,EAAArI,KAAA,IAgQW3R,EAAKnC,cAAcypF,eAAes8C,EAAU5jI,EAAKxE,MAAM0J,MAAMlF,EAAKxE,MAAMoK,YAAY5F,EAAKxE,MAAM2L,QAAQy7C,GAhQlH,gBAgQJx5B,EAhQIpP,EAAAtG,OAiQUnV,IACR4lI,EAAW,KAC+B,qBAAnCnkI,EAAKxE,MAAMoK,YAAYg7C,SAA2B5gD,EAAKxE,MAAMoK,YAAYg7C,WAClFujF,EAAWl/H,WAAWmkB,GAAQ9iB,QAAQR,IAExC9F,EAAKiM,aAAa,CAChBk4H,cAvQAnqH,EAAAgB,OAAA,0BA4QAhb,EAAKxE,MAAMoK,YAAYsrC,YAAalxC,EAAKxE,MAAMoK,YAAYsrC,UAAUF,YA5QrE,CAAAh3B,EAAArI,KAAA,iBA6QI4hG,EAAiB72G,OAAOC,OAAO,GAAGqD,EAAKxE,MAAMoK,cACpC08B,KAAO5lC,OAAOC,OAAO,GAAGqD,EAAKxE,MAAMoK,YAAYsrC,UAAUF,aACxEuiE,EAAe3kG,UAAYlS,OAAOwG,OAAOlD,EAAKxE,MAAMoK,YAAYgJ,WAGhE2kG,EAAejxE,KAAKp9B,MAAQquG,EAAejxE,KAAK/gC,KAG5CgyG,EAAeriE,UAAUmjE,cAC3Bd,EAAeriE,UAAUmjE,aAAa5uG,QAAS,SAAA6uG,GAC7C,IAAMnK,EAAgBoJ,EAAe3kG,UAAU6X,KAAM,SAAA9b,GAAC,OAAKA,EAAEpJ,OAAS+yG,EAAY/yG,OAClF,GAAI4oG,EAAc,CAChB,IAAMoK,EAAchB,EAAe3kG,UAAUqY,QAAQkjF,GACrDoJ,EAAe3kG,UAAU2lG,GAAeD,KA1R5Ct6F,EAAArI,KAAA,IA+Ra3R,EAAKnC,cAAcypF,eAAe,MAAMtnF,EAAKxE,MAAM0J,MAAMquG,EAAevzG,EAAKxE,MAAM2L,SAAQ,GA/RxG,SA+RFiiB,EA/REpP,EAAAtG,KAAAsG,EAAArI,KAAA,0BAAAqI,EAAArI,KAAA,IAkSa3R,EAAKipB,UAAU,YAlS5B,SAkSFG,EAlSEpP,EAAAtG,KAAA,gBAqSA0V,GAAU7qB,IACP6qB,EAAOhf,QAKVpK,EAAKiM,aAAa,CAChBk6H,QAAO,IALTnmI,EAAKiM,aAAa,CAChBk6H,OAAOlhI,WAAWmkB,GAAQ9iB,QAAQR,MAxSpCkU,EAAAgB,OAAA,6BAAAhB,EAAArI,KAAA,IAkTW3R,EAAKnC,cAAcypF,eAAe,MAAMtnF,EAAKxE,MAAM0J,MAAMlF,EAAKxE,MAAMoK,YAAY5F,EAAKxE,MAAM2L,SAAQ,GAlT9G,gBAkTJiiB,EAlTIpP,EAAAtG,OAoTUnV,IACP6qB,EAAOhf,QAKVpK,EAAKiM,aAAa,CAChBm6H,eAAc,IALhBpmI,EAAKiM,aAAa,CAChBm6H,cAAcnhI,WAAWmkB,GAAQ9iB,QAAQR,MAvT3CkU,EAAAgB,OAAA,6BAAAhB,EAAArI,KAAA,IAiUW3R,EAAKnC,cAAcypF,eAAes8C,EAAU5jI,EAAKxE,MAAM0J,MAAMlF,EAAKxE,MAAMoK,YAAY5F,EAAKxE,MAAM2L,QAAQy7C,GAjUlH,gBAiUJx5B,EAjUIpP,EAAAtG,OAmUUnV,IACP6qB,EAAOhf,QAKVpK,EAAKiM,aAAa,CAChBw8E,UAAS,IALXzoF,EAAKiM,aAAa,CAChBw8E,SAASxjF,WAAWmkB,GAAQ9iB,QAAQR,MAtUtCkU,EAAAgB,OAAA,6BAAAhB,EAAArI,KAAA,IAgVW3R,EAAKnC,cAAcypF,eAAes8C,EAAU5jI,EAAKxE,MAAM0J,MAAMlF,EAAKxE,MAAMoK,YAAY5F,EAAKxE,MAAM2L,QAAQy7C,GAhVlH,gBAgVJx5B,EAhVIpP,EAAAtG,OAkVUnV,IACP6qB,EAAOhf,QAKVpK,EAAKiM,aAAa,CAChB+7E,kBAAiB,IALnBhoF,EAAKiM,aAAa,CAChB+7E,kBAAqC,IAAnB/iF,WAAWmkB,IAAa9iB,QAAQR,MArVpDkU,EAAAgB,OAAA,6BAAAhB,EAAArI,KAAA,IAgWW3R,EAAKnC,cAAcypF,eAAes8C,EAAU5jI,EAAKxE,MAAM0J,MAAMlF,EAAKxE,MAAMoK,YAAY5F,EAAKxE,MAAM2L,QAAQy7C,GAhWlH,cAgWJx5B,EAhWIpP,EAAAtG,QAkWUnV,EAlWV,CAAAyb,EAAArI,KAAA,aAmWGyX,EAAOhf,QAnWV,CAAA4P,EAAArI,KAAA,aAoWMs1B,EAAWhiC,WAAWmkB,GAAQ9iB,QAAQR,MACvB9F,EAAKxE,MAAM8F,eAAuCf,IAA1BomB,EAAUwmB,aAA6BxmB,EAAUwmB,aArW9F,CAAAnzB,EAAArI,KAAA,iBAAAqI,EAAArI,KAAA,IAsW0C3R,EAAKnC,cAAc4vG,iBAAiBztG,EAAKxE,MAAM0J,MAAMlF,EAAKxE,MAAMoK,aAtW1G,SAAAoU,EAAA+wD,GAAA/wD,EAAAtG,KAAAsG,EAAArI,KAAA,mBAAAqI,EAAA+wD,GAsWyH,KAtWzH,SAsWM6iC,EAtWN5zF,EAAA+wD,GAuWA/qE,EAAKiM,aAAa,CAChBg7B,WACA2mE,kBAzWF5zF,EAAArI,KAAA,mBA4WA3R,EAAKiM,aAAa,CAChBg7B,UAAS,IA7WX,gBAAAjtB,EAAAgB,OAAA,6BAmXAopH,EAAuB,EACvBC,GAAwB,GAEtBC,GAAwB,WAC5B,IAAM+B,EAA4Bn7G,SAASC,eAAenrB,EAAKxE,MAAMyd,UAAYiS,SAASC,eAAenrB,EAAKxE,MAAMyd,UAAYiS,SAASC,eAAenrB,EAAKxE,MAAM8N,OACnK,GAAI+8H,EAA0B,CAC5B,IAAMC,EAA6Bn9H,OAAOyuH,OAAOyO,GACjDjC,EAAuBkC,EAA2BzP,aAAa5xH,WAAWqhI,EAA2BC,IAAI,kBAAkBthI,WAAWqhI,EAA2BC,IAAI,iBACrKlC,GAAwBiC,EAA2BxP,cAGnDsN,EAAuBv8H,SAASu8H,GAAsB,EAAI7+H,KAAKQ,IAAIq+H,EAAqBC,IAAyBA,GACjHA,GAAwBD,EAGpBA,IAAyBpkI,EAAKrC,MAAMymI,sBAClC7lI,GACFyB,EAAKiM,aAAa,CAChBm4H,uBACAC,gCASVl7H,OAAO6hB,oBAAoB,SAAUs5G,GAAsB57H,KAAtBhM,OAAA8pI,EAAA,EAAA9pI,QAAA8pI,EAAA,EAAA9pI,CAAAsD,MACrCmJ,OAAO2hB,iBAAiB,SAAUw5G,GAAsB57H,KAAtBhM,OAAA8pI,EAAA,EAAA9pI,QAAA8pI,EAAA,EAAA9pI,CAAAsD,MAE9BzB,GACFyB,EAAKiM,aAAa,CAChBm4H,uBACAC,2BArZArqH,EAAAgB,OAAA,yBA2ZEupH,GAAuBnxH,EAASpT,EAAKnC,cAAcwJ,gBAAgB,CAAC,QAAQ,WAAW,KAAK,iBAAmB,KAC/Gm9H,GAAyBpxH,EAASmxH,GAAsB,OAAch/H,KAAKoB,IAAI3G,EAAKnC,cAAcwJ,gBAAgB,CAAC,QAAQ,WAAW,KAAK,mBAAmBQ,SAAS7H,EAAKnC,cAAc2I,YAAYxG,EAAKnC,cAAc2I,YAAY,IAAIP,MAAQiP,OAAO,uBAAuB,uBAAuB1C,SAAS,EAAE,QAAQ8oB,GAAGpoB,UAAU,MAGxUuxH,GAAe,KACbjqE,GAhaF,YAAA74D,OAga8B3B,EAAKxE,MAAMoK,YAAYoJ,QAharD,KAAArN,OAgagEyR,GAC9DyT,GAAa7mB,EAAKnC,cAAcq3E,cAAc1a,IAEpDiqE,GAAe,CAAC,CACdl8H,GAAGvI,EAAKxE,MAAM0J,MACdzJ,MAAOuE,EAAKxE,MAAMC,MAAQuE,EAAKxE,MAAMC,MAAQ,OAAOuE,EAAKnC,cAAcwJ,gBAAgB,CAAC,QAAQ,SAASrH,EAAKxE,MAAM0J,MAAM,QAAQ,QAAQoK,KAAK,KAAK,IACpJhE,KAAM,KAGW,OAAfub,GAzaA,CAAA7M,EAAArI,KAAA,UA0aF8yH,GAAe59G,GA1ab7M,EAAArI,KAAA,sBA8auB,SAArB3R,EAAKxE,MAAM0J,MA9ab,CAAA8U,EAAArI,KAAA,UAkbA,IAHA8yH,GAAa,GAAGn5H,KAAO,GACjB64C,IAAiB,IAAIl+C,MAAOiN,UAC9BqC,GAAI,GACC7P,GAAE,EAAGA,IAAG,GAAIA,KACbs1B,GAAQh7B,EAAKnC,cAAc2I,YAAY29C,IAAgBppB,IAAIr1B,GAAE,OAC7D4P,GAAI0lB,GAAM9lB,OAAO,oBAElBxP,IAAG,GAAKA,IAAG,IAAQA,IAAG,GACzB6P,IAAiB,EAAdhQ,KAAKkhI,SAAW,EAInBlxH,IAAiB,EAAdhQ,KAAKkhI,SAAW,EAGrBhC,GAAa,GAAGn5H,KAAK7E,KAAK,CAAC6O,KAAEC,OA9b/ByE,EAAArI,KAAA,0BAicMwD,GAAmBnV,EAAKnC,cAAc8uC,oBAAoB,OAAO,IAjcvE3yB,EAAArI,KAAA,IAkciC3R,EAAKnC,cAAc4V,gBAAgBzT,EAAKxE,MAAMoK,YAAYoJ,QAAQoE,EAAOoxH,GAAuBD,IAAqB,EAAMpvH,IAlc5J,SAAA6E,EAAAtG,KAwcmBjO,QAAQ,SAACmH,EAAElH,GAC5B,IAAM4P,EAAItV,EAAKnC,cAAc2I,YAAwB,IAAZoG,EAAEsH,WAAgBgB,OAAO,oBAC5DK,EAAItQ,WAAWjF,EAAKnC,cAAc0W,iBAAiB3H,EAAE09F,SAAS,KACpEm6B,GAAa,GAAGn5H,KAAK7E,KAAK,CAAE6O,IAAGC,QA3cjC,SA+cFvV,EAAKnC,cAAcipB,cAAc0zC,GAAciqE,IA/c7C,gBAodgC,IAAhCA,GAAa,GAAGn5H,KAAKhL,UACjBokI,GAAWhoI,OAAOC,OAAO,GAAG8nI,GAAa,GAAGn5H,KAAK,KAC9CgK,EAAItV,EAAKnC,cAAc2I,YAAYk+H,GAAS,oBAAoB3pG,IAAI,EAAE,SAAS7lB,OAAO,oBAC/FuvH,GAAa,GAAGn5H,KAAK7E,KAAKi+H,KAGxBC,GAAgB,EAChBC,GAAiB,GAEfC,GAAiB,WACrB,IAAM6B,EAAqBx7G,SAASC,eAAenrB,EAAKxE,MAAMyd,UAAYiS,SAASC,eAAenrB,EAAKxE,MAAMyd,UAAYiS,SAASC,eAAenrB,EAAKxE,MAAM8N,OAC5J,GAAIo9H,EAAmB,CACrB,IAAMC,EAAsBx9H,OAAOyuH,OAAO8O,GAC1C/B,GAAgBgC,EAAoB9P,aAAa5xH,WAAW0hI,EAAoBJ,IAAI,kBAAkBthI,WAAW0hI,EAAoBJ,IAAI,iBACzI3B,GAAiB+B,EAAoB7P,cACjC6N,KAAkB3kI,EAAKrC,MAAMgnI,eAAkB3kI,EAAKrC,MAAMinI,gBAC5D5kI,EAAKiM,aAAa,CAChB04H,iBACAC,eAAgB5kI,EAAKrC,MAAMinI,eAAiB5kI,EAAKrC,MAAMinI,eAAiBA,UAQhFz7H,OAAO6hB,oBAAoB,SAAU65G,GAAen8H,KAAfhM,OAAA8pI,EAAA,EAAA9pI,QAAA8pI,EAAA,EAAA9pI,CAAAsD,MACrCmJ,OAAO2hB,iBAAiB,SAAU+5G,GAAen8H,KAAfhM,OAAA8pI,EAAA,EAAA9pI,QAAA8pI,EAAA,EAAA9pI,CAAAsD,MAG5B8kI,GAAe9rH,IAEf+rH,GAAgB,CACpBhuH,UAAU,EACV6vH,UAAU,EACV5vH,SAAQ,EACRC,SAAS,KACT3K,SAAQ,EACRiK,WAAW,KACXa,YAAW,EACXS,YAAY,GACZN,MAAM,YACNC,aAAY,EACZF,aAAY,EACZG,iBAAiB,EACjBrW,eAAc,EACdS,OAAO,SAAA+K,GAAC,OAAIA,EAAEnR,OACdorI,KAAK,CACHC,YAAkB,eAAgB,CAC9B,CAAEC,OAAQ,EAAGtrI,MAAO,WACpB,CAAEsrI,OAAQ,GAAItrI,MAAO,cAG3B4b,cAAarX,EAAKxE,MAAM8F,UAAmB,IAC3CgV,QAAQ,SAAAha,GAAK,OAAI2I,WAAW3I,GAAOgK,QAAQ,GAAG,KAC9C0R,KAAK,CACH,CAAEwgC,MAAO,CAAEjwC,GAAIvI,EAAKxE,MAAM0J,OAAUqD,GAAI,iBAE1CkG,OAAQ,CAAE7N,IAAK,GAAI8N,MAAO,EAAGC,OAAQ,EAAGtD,KAAM,GAC9CiN,aAAa,SAACC,GAAc,IAClBC,EAAUD,EAAVC,MACFpN,EAAQoN,EAAMC,OAAO,GAC3B,OACEuuH,EAAArsI,EAAAC,cAACqsI,EAAA,EAAD,CACE77H,MAAOA,GAGiB,kBAAjBoN,EAAMC,QAAuBD,EAAMC,OAAOnY,QAC/CkY,EAAMC,OAAOxW,IAAI,SAAAmJ,GACf,IAAM0D,EAAe1D,EAAMwN,QACrBsuH,EAAkB97H,EAAME,KAAKuN,WAEnC,OACEmuH,EAAArsI,EAAAC,cAACusI,EAAA,EAAD,CACE/kI,IAAKgJ,EAAM7C,GACX9M,MAAO2P,EAAM3P,MACbS,MAAO4S,EACPxS,MAAO4qI,SAUnBlnI,EAAKxE,MAAMmQ,YAET3L,EAAKxE,MAAMmQ,YAAcjP,OAAOqF,KAAK/B,EAAKxE,MAAMmQ,YAAYrL,QAC9D5D,OAAOqF,KAAK/B,EAAKxE,MAAMmQ,YAAYlG,QAAQ,SAAAkF,GACzCo6H,GAAcp6H,GAAK3K,EAAKxE,MAAMmQ,WAAWhB,KAK3CpM,GACFyB,EAAKiM,aAAa,CAChBmvH,OAAM,EACN0J,gBACAL,gBACAM,iBACAJ,iBACAC,oBAGJx7G,EAASq7G,GA9jBLzqH,EAAAgB,OAAA,6BAikBAgqH,GAAkB,KAClBC,GAAiB,KAYjBC,GAAwB,EACxBC,GAAyB,GAEvBC,GAAyB,WAC7B,IAAMgC,EAA6Bl8G,SAASC,eAAenrB,EAAKxE,MAAMyd,UAAYiS,SAASC,eAAenrB,EAAKxE,MAAMyd,UAAYiS,SAASC,eAAenrB,EAAKxE,MAAM8N,OACpK,GAAI89H,EAA2B,CAC7B,IAAMC,EAA8Bl+H,OAAOyuH,OAAOwP,GAClDlC,GAAwBmC,EAA4BxQ,aAAa5xH,WAAWoiI,EAA4Bd,IAAI,kBAAkBthI,WAAWoiI,EAA4Bd,IAAI,iBACzKpB,GAAyBkC,EAA4BvQ,cACjDoO,KAA0BllI,EAAKrC,MAAMunI,uBAA0BllI,EAAKrC,MAAMwnI,wBAC5EnlI,EAAKiM,aAAa,CAChBi5H,yBACAC,uBAAwBnlI,EAAKrC,MAAMwnI,uBAAyBnlI,EAAKrC,MAAMwnI,uBAAyBA,UAQxGh8H,OAAO6hB,oBAAoB,SAAUo6G,GAAuB18H,KAAvBhM,OAAA8pI,EAAA,EAAA9pI,QAAA8pI,EAAA,EAAA9pI,CAAAsD,MACrCmJ,OAAO2hB,iBAAiB,SAAUs6G,GAAuB18H,KAAvBhM,OAAA8pI,EAAA,EAAA9pI,QAAA8pI,EAAA,EAAA9pI,CAAAsD,MAE5BqlI,GAAerlI,EAAKnC,cAAc2I,YAAYxG,EAAKnC,cAAc2I,YAAY,IAAIP,MAAQuM,SAAS,EAAE,OAAO0C,OAAO,oBAAoB,oBACtIowH,GAAiBD,GAAa9yH,QAAQC,SAAS,EAAE,QAGjD+yH,GAAuBhgI,KAAKoB,IAAI3G,EAAKnC,cAAcwJ,gBAAgB,CAAC,QAAQ,WAAW,KAAK,mBAAmBQ,SAASy9H,GAAehqG,GAAGpoB,UAAU,MAzmBtJ8G,EAAArI,KAAA,IA4mBmC3R,EAAKnC,cAAc4V,gBAAgBzT,EAAKxE,MAAMoK,YAAYoJ,QAAQoE,EAAOmyH,GAAoB,MAAK,EAAM,OA5mB3I,gBA4mBAC,GA5mBAxrH,EAAAtG,KA8mBE+xH,GAAuBD,GAA2BvjI,IAAI,SAAC2K,EAAElH,GAC7D,IAAI6P,EAAI,EACFD,EAAItV,EAAKnC,cAAc2I,YAAwB,IAAZoG,EAAEsH,WAAgBgB,OAAO,oBAC5DjD,EAAajS,EAAKnC,cAAc0W,iBAAiB3H,EAAE0H,UAAUtU,EAAKxE,MAAMoK,YAAYE,UAY1F,OAVKk/H,GAGHzvH,EAAItQ,WAAWgN,EAAWsK,IAAIyoH,IAAiBlzH,MAAM,GAAG5C,MAAM,MAF9D81H,GAAkB/yH,EAKG,OAAnBgzH,KACFA,GAAiBp9H,SAAS+E,EAAE06H,cAGvB,CAAEhyH,IAAGC,OAGRmwH,GAAuB,CAAC,CAC5Bn9H,GAAG,OACH9M,MAAO,OAAOuE,EAAKnC,cAAcwJ,gBAAgB,CAAC,QAAQ,SAASrH,EAAKxE,MAAM0J,MAAM,QAAQ,QAAQoK,KAAK,KAAK,IAC9GhE,KAAMm6H,KAIFE,GAAuB3sH,IAEvB4sH,GAAwB,CAC5B7uH,UAAU,EACV6vH,UAAU,EACV5vH,SAAQ,EACR1K,SAAQ,EACR2K,SAAS,KACTV,WAAW,KACXa,YAAW,EACXI,aAAY,EACZF,aAAY,EACZC,MAAM,YACNF,cAAa,EACbI,iBAAiB,EACjB5V,OAAO,SAAA+K,GAAC,OAAIA,EAAEnR,OACdic,mBAAmB,GACnBjJ,OAAQ,CAAE7N,IAAK,EAAG8N,MAAO,EAAGC,OAAQ,EAAGtD,KAAM,IAG3CrL,EAAKxE,MAAMmQ,YAET3L,EAAKxE,MAAMmQ,YAAcjP,OAAOqF,KAAK/B,EAAKxE,MAAMmQ,YAAYrL,QAC9D5D,OAAOqF,KAAK/B,EAAKxE,MAAMmQ,YAAYlG,QAAQ,SAAAkF,GACzCi7H,GAAsBj7H,GAAK3K,EAAKxE,MAAMmQ,WAAWhB,KAKnDpM,GACFyB,EAAKiM,aAAa,CAChBmvH,OAAM,EACNuK,wBACAD,wBACAE,yBACAV,yBACAC,4BAGJ/7G,EAASs8G,GA9qBL1rH,EAAAgB,OAAA,6BAirBEqmB,GAAO1a,EAAU0a,MACvBjY,EAASppB,EAAKnC,cAAc0jC,aAAaF,GAAKrhC,EAAKxE,MAAMoK,eAEvD5F,EAAKiM,aAALvP,OAAA6qI,EAAA,EAAA7qI,CAAA,GACGknI,EAAWx6G,IArrBZpP,EAAAgB,OAAA,6BAAAhB,EAAArI,KAAA,IA0rBW3R,EAAKnC,cAAcypF,eAAes8C,EAAU5jI,EAAKxE,MAAM0J,MAAMlF,EAAKxE,MAAMoK,YAAY5F,EAAKxE,MAAM2L,QAAQy7C,GA1rBlH,gBA0rBJx5B,EA1rBIpP,EAAAtG,OA2rBUnV,GACZyB,EAAKiM,aAALvP,OAAA6qI,EAAA,EAAA7qI,CAAA,CACE0+H,OAAM,GACLwI,EAAWx6G,IA9rBZpP,EAAAgB,OAAA,6BAAAhB,EAAAgB,OAAA,SAqsBHoO,GArsBG,0BAAApP,EAAA7H,SAAA2H,EAAAve,oFArDNA,KAAKsC,cACPtC,KAAKsC,cAAcC,SAASvC,KAAKC,OAEjCD,KAAKsC,cAAgB,IAAIE,IAAcxC,KAAKC,8JAK9CD,KAAKyQ,oBAAqB,yPAI1BzQ,KAAKyC,kQAILzC,KAAK0tB,2LAGY/c,wFAASC,iCAAS,KAC9B5Q,KAAKyQ,4DACDzQ,KAAKgD,SAAS2N,EAASC,oCAEzB,4LAGgB3R,EAAWC,8FAClCc,KAAKyC,YAEC4vH,EAAepzH,EAAU0K,QAAU3J,KAAKC,MAAM0J,MAC9CikB,EAAiB3uB,EAAU2M,UAAY5L,KAAKC,MAAM2L,QAClDwJ,EAAgBnW,EAAU8G,WAAa/F,KAAKC,MAAM8F,SAClDsP,EAAmBpW,EAAUqW,YAActV,KAAKC,MAAMqV,UACtD22H,EAAehtI,EAAUmsB,UAAUplB,OAAShG,KAAKC,MAAMmrB,UAAUplB,KACjEkmI,EAAsBjtI,EAAU0pC,uBAAyB3oC,KAAKC,MAAM0oC,sBAAwB3oC,KAAKC,MAAM0oC,qBACvGr9B,EAAsBrM,EAAUwM,cAAgBzL,KAAKC,MAAMwL,cAAgBtK,OAAOwG,OAAO1I,EAAUwM,cAAcjH,OAAO,SAAAiF,GAAE,MAAiB,YAAZA,EAAGrF,SAAqBW,SAAW5D,OAAOwG,OAAO3H,KAAKC,MAAMwL,cAAcjH,OAAO,SAAAiF,GAAE,MAAiB,YAAZA,EAAGrF,SAAqBW,OAEjPknI,GAAgB5Z,GAAgBzkG,GAAkBtiB,GAAwB4gI,IAAwBlsI,KAAKoC,MAAMy9H,MAC/G7/H,KAAK0Q,aAAa,CAChBmvH,OAAM,GACN,WACAz6H,EAAKsoB,eAEEtY,GAAiBC,KACpByzB,EAAW3nC,OAAOC,OAAO,GAAGpB,KAAKoC,OACvCpC,KAAK0Q,aAAa,CAChBmvH,OAAM,GACN,WACAz6H,EAAKpC,SAAS8lC,4IA6sBZ,IAAAv8B,EAAAvM,KACAorB,EAAYprB,KAAKC,MAAMmrB,UACzByC,EAAS,KAGP5qB,OADsC+B,IAAzBomB,EAAU5W,YAA4B4W,EAAU5W,WACtCi3H,EAAArsI,EAAAC,cAAC8sI,EAAA,EAAD,CAAQjpI,KAAK,SAAa,KAEjD6qB,EAAa,CACjBvtB,WAAW,EACXD,SAAS,CAAC,EAAE,GACZL,MAAM,WACN0M,UAAU,CACR7M,eAAe,eAKfqrB,EAAUnrB,OAASkB,OAAOqF,KAAK4kB,EAAUnrB,OAAO8E,QAClD5D,OAAOqF,KAAK4kB,EAAUnrB,OAAOiK,QAAQ,SAAAkF,GACnC2e,EAAW3e,GAAKgc,EAAUnrB,MAAMmP,KAKhCgc,EAAUqa,WAAatkC,OAAOqF,KAAK4kB,EAAUqa,WAAW1gC,QAC1D5D,OAAOqF,KAAK4kB,EAAUqa,WAAWv7B,QAAQ,SAAAkF,GACH,oBAAzBgc,EAAUqa,UAAUr2B,KAC7B2e,EAAW3e,GAAKgc,EAAUqa,UAAUr2B,GAAG7C,EAAKtM,UAKlD,IAAMoK,EAAcrK,KAAKC,MAAMoK,aAAerK,KAAKsC,cAAcwJ,gBAAgB,CAAC,QAAQ,SAAS9L,KAAKC,MAAM0J,QAExGuF,EAAe6e,GAAcA,EAAW7e,aAAe6e,EAAW7e,aAAe,EACjF3E,EAAWwjB,GAAcA,EAAWxjB,SAAWwjB,EAAWxjB,SAAavK,KAAKC,MAAM8F,SAAW,EAAI,EACjGoJ,EAAe4e,GAAcA,EAAW5e,aAAe4e,EAAW5e,aAAiBnP,KAAKC,MAAM8F,SAAW,EAAI,EAEnH,OAAQqlB,EAAUplB,MAChB,IAAK,cACH,IAAMomI,EAAQ/hI,GAAeA,EAAY6J,KAAO7J,EAAY6J,KAA9C,iBAAA9N,OAAsEpG,KAAKC,MAAM0J,MAAjF,QACdkkB,EACE49G,EAAArsI,EAAAC,cAAC8sI,EAAA,EAADhrI,OAAAC,OAAA,CACEyvC,UAAW,MACXC,QAAS9wC,KAAKC,MAAM0J,OAChByhB,EAAUihH,cAEdZ,EAAArsI,EAAAC,cAAC8sI,EAAA,EAADhrI,OAAAC,OAAA,CAAOgT,IAAKg4H,GAAWr+G,KAG7B,MACA,IAAK,OACH,IAAMu+G,EAAQjiI,GAAeA,EAAY6J,KAAO7J,EAAY6J,KAA9C,iBAAA9N,OAAsEpG,KAAKC,MAAM0J,MAAjF,QACdkkB,EACE49G,EAAArsI,EAAAC,cAAC8sI,EAAA,EAADhrI,OAAAC,OAAA,CAAOgT,IAAKk4H,GAAWv+G,IAE3B,MACA,IAAK,YACHF,EACE49G,EAAArsI,EAAAC,cAAC8sI,EAAA,EAASp+G,EAAa/tB,KAAKC,MAAM0J,OAEtC,MACA,IAAK,eACH,IAAMy+B,EAAepoC,KAAKsC,cAAcwJ,gBAAgB,CAAC,aAAa9L,KAAKC,MAAMoK,YAAYilC,SAAS,SAClGlH,IACFva,EACE49G,EAAArsI,EAAAC,cAAC8sI,EAAA,EAADhrI,OAAAC,OAAA,CAAOgT,IAAKg0B,GAAkBra,KAGpC,MACA,IAAK,eACH,IAAMw+G,EAAevsI,KAAKsC,cAAcwJ,gBAAgB,CAAC,aAAa9L,KAAKC,MAAMoK,YAAYilC,SAAS,UACtGzhB,EACE49G,EAAArsI,EAAAC,cAAC8sI,EAAA,EAASp+G,EAAaw+G,GAE3B,MACA,IAAK,eACH1+G,EAAS7tB,KAAKoC,MAAM0yB,aAClB22G,EAAArsI,EAAAC,cAACmtI,EAAA,EAADrrI,OAAAC,OAAA,GAAiB2sB,EAAjB,CAA6B5e,aAAcA,EAAcP,OAAQ5O,KAAKoC,MAAM0yB,gBAC1E7xB,EACN,MACA,IAAK,MACH4qB,EAAS7tB,KAAKoC,MAAMo4D,IAClBixE,EAAArsI,EAAAC,cAACmtI,EAAA,EAADrrI,OAAAC,OAAA,GAAiB2sB,EAAjB,CAA6B5e,aAAcA,EAAcP,OAAQ5O,KAAKoC,MAAMo4D,OAC1Ev3D,EACN,MACA,IAAK,aACH4qB,EAAS7tB,KAAKoC,MAAMsU,WAClB+0H,EAAArsI,EAAAC,cAACmtI,EAAA,EAADrrI,OAAAC,OAAA,GAAiB2sB,EAAjB,CAA6B5e,aAAcA,EAAcP,OAAQ5O,KAAKoC,MAAMsU,cAC1EzT,EACN,MACA,IAAK,kBACH4qB,EAAS7tB,KAAKoC,MAAMkoI,gBAClBmB,EAAArsI,EAAAC,cAACmtI,EAAA,EAADrrI,OAAAC,OAAA,GAAiB2sB,EAAjB,CAA6B5e,aAAcA,EAAcP,OAAQ5O,KAAKoC,MAAMkoI,mBAC1ErnI,EACN,MACA,IAAK,mBACH4qB,EAAS7tB,KAAKoC,MAAMiW,iBAClBozH,EAAArsI,EAAAC,cAACmtI,EAAA,EAADrrI,OAAAC,OAAA,GAAiB2sB,EAAjB,CAA6B5e,aAAcA,EAAcP,OAAQ5O,KAAKoC,MAAMiW,oBAC1EpV,EACN,MACA,IAAK,gCACH4qB,EAAS7tB,KAAKoC,MAAMy9H,OAAS7/H,KAAKoC,MAAMgrF,6BAA+BptF,KAAKoC,MAAMirF,0BAChFo+C,EAAArsI,EAAAC,cAACotI,EAAArtI,EAAD,CACEgqC,MAAO,EACPC,QAAS,IACTC,UAAW,GACXC,WAAW,EACXC,SAAU,QACVj/B,SAAUA,EACVk/B,IAAK//B,WAAW1J,KAAKoC,MAAMirF,2BAC3B3jD,MAAOhgC,WAAW1J,KAAKoC,MAAMgrF,6BAC7BzjD,aAAe,SAAAC,GAAC,OAAIr9B,EAAKjK,cAAc2M,iBAAiB26B,EAAEr/B,EAAS2E,EAAaC,KAE/E,SAAAu9H,GAAA,IAAG7iG,EAAH6iG,EAAG7iG,WAAH6iG,EAAehjG,MAAf,OACC+hG,EAAArsI,EAAAC,cAAA,QAAMO,MAAOmuB,EAAWnuB,MAAOkqC,IAAKD,MAGtC5mC,EACN,MACA,IAAK,2BACH4qB,EAAS7tB,KAAKoC,MAAMy9H,OAAS7/H,KAAKoC,MAAM4sF,wBAA0BhvF,KAAKoC,MAAM6sF,qBAC3Ew8C,EAAArsI,EAAAC,cAACotI,EAAArtI,EAAD,CACEgqC,MAAO,EACPC,QAAS,IACTC,UAAW,GACXC,WAAW,EACXC,SAAU,QACVj/B,SAAUA,EACVk/B,IAAK//B,WAAW1J,KAAKoC,MAAM6sF,sBAC3BvlD,MAAOhgC,WAAW1J,KAAKoC,MAAM4sF,wBAC7BrlD,aAAe,SAAAC,GAAC,OAAIr9B,EAAKjK,cAAc2M,iBAAiB26B,EAAEr/B,EAAS2E,EAAaC,KAE/E,SAAAuxD,GAAA,IAAG72B,EAAH62B,EAAG72B,WAAH62B,EAAeh3B,MAAf,OACC+hG,EAAArsI,EAAAC,cAAA,QAAMO,MAAOmuB,EAAWnuB,MAAOkqC,IAAKD,MAGtC5mC,EACN,MACA,IAAK,cACH4qB,EAAS7tB,KAAKoC,MAAMy9H,OAAS7/H,KAAKoC,MAAMmmI,WAAavoI,KAAKoC,MAAMomI,QAC9DiD,EAAArsI,EAAAC,cAACotI,EAAArtI,EAAD,CACEgqC,MAAO,EACPC,QAAS,IACTC,UAAW,GACXC,WAAW,EACXC,SAAU,QACVj/B,SAAUA,EACVk/B,IAAK//B,WAAW1J,KAAKoC,MAAMomI,SAC3B9+F,MAAOhgC,WAAW1J,KAAKoC,MAAMmmI,WAC7B5+F,aAAe,SAAAC,GAAC,OAAIr9B,EAAKjK,cAAc2M,iBAAiB26B,EAAEr/B,EAAS2E,EAAaC,KAE/E,SAAAyxD,GAAA,IAAG/2B,EAAH+2B,EAAG/2B,WAAH+2B,EAAel3B,MAAf,OACC+hG,EAAArsI,EAAAC,cAAA,QAAMO,MAAOmuB,EAAWnuB,MAAOkqC,IAAKD,MAGtC5mC,EACN,MACA,IAAK,uBACH4qB,EAAS7tB,KAAKoC,MAAMy9H,OAAS7/H,KAAKoC,MAAMqmI,oBAAsBzoI,KAAKoC,MAAMsmI,iBACvE+C,EAAArsI,EAAAC,cAACotI,EAAArtI,EAAD,CACEgqC,MAAO,EACPC,QAAS,IACTC,UAAW,GACXC,WAAW,EACXC,SAAU,QACVj/B,SAAUA,EACVk/B,IAAK//B,WAAW1J,KAAKoC,MAAMsmI,kBAC3Bh/F,MAAOhgC,WAAW1J,KAAKoC,MAAMqmI,oBAC7B9+F,aAAe,SAAAC,GAAC,OAAIr9B,EAAKjK,cAAc2M,iBAAiB26B,EAAEr/B,EAAS2E,EAAaC,KAE/E,SAAA0xD,GAAA,IAAGh3B,EAAHg3B,EAAGh3B,WAAHg3B,EAAen3B,MAAf,OACC+hG,EAAArsI,EAAAC,cAAA,QAAMO,MAAOmuB,EAAWnuB,MAAOkqC,IAAKD,MAGtC5mC,EACN,MACA,IAAK,kBACH4qB,EAAS7tB,KAAKoC,MAAMy9H,OAAS7/H,KAAKoC,MAAMqmC,eAAiBzoC,KAAKoC,MAAMomC,YAClEijG,EAAArsI,EAAAC,cAACotI,EAAArtI,EAAD,CACEgqC,MAAO,EACPC,QAAS,IACTC,UAAW,GACXC,WAAW,EACXC,SAAU,QACVj/B,SAAUA,EACVk/B,IAAK//B,WAAW1J,KAAKoC,MAAMomC,aAC3BkB,MAAOhgC,WAAW1J,KAAKoC,MAAMqmC,eAC7BkB,aAAe,SAAAC,GAAC,OAAIr9B,EAAKjK,cAAc2M,iBAAiB26B,EAAEr/B,EAAS2E,EAAaC,KAE/E,SAAAulH,GAAA,IAAG7qF,EAAH6qF,EAAG7qF,WAAH6qF,EAAehrF,MAAf,OACC+hG,EAAArsI,EAAAC,cAAA,QAAMO,MAAOmuB,EAAWnuB,MAAOkqC,IAAKD,MAGtC5mC,EACN,MACA,IAAK,oBACH4qB,EAAS7tB,KAAKoC,MAAMstF,kBAClB+7C,EAAArsI,EAAAC,cAACmtI,EAAA,EAADrrI,OAAAC,OAAA,GAAiB2sB,EAAjB,CAA6BxjB,SAAUA,EAAU4E,aAAcA,EAAcD,aAAcA,EAAcN,OAAQ5O,KAAKoC,MAAMstF,qBAC1HzsF,EACN,MACA,IAAK,YACH4qB,EAAS7tB,KAAKoC,MAAMmuC,WAAapvC,OAAOqF,KAAKxG,KAAKoC,MAAMmuC,WAAWxrC,OAAO,EACxE0mI,EAAArsI,EAAAC,cAAC8sI,EAAA,EAAD,CACE3sI,MAAO,EACPC,WAAY,SACZC,cAAe,MACfK,eAAgB,cAGdoB,OAAOwG,OAAO3H,KAAKoC,MAAMmuC,WAAW7pC,IAAK,SAACknF,EAAe8mB,GAAhB,OACvC+2B,EAAArsI,EAAAC,cAACgyB,EAAD,CACE1nB,MAAOikF,EAAejkF,MACtBU,YAAaujF,EACb/mF,IAAG,SAAAT,OAAWsuG,GACdtpF,UAAW,CACTplB,KAAK,cACLqmI,aAAa,CACXv7F,QAAQ,GAAA1qC,OAAGwnF,EAAejkF,QAAS4C,EAAKnK,MAAMivG,+BAAiC9kG,EAAKnK,MAAMivG,8BAA8BzjB,EAAejkF,OAApG,KAAAvD,OAAkHmG,EAAKnK,MAAMivG,8BAA8BzjB,EAAejkF,OAAOoB,QAAQR,GAAzL,KAAAnE,OAAsMwnF,EAAeloC,sBAArN,yBAAoQ,KAEzSzlD,MAAM,CACJI,aAAa,MACbkF,SAAS,WACTnF,OAAO,CAAC,QAAQ,OAChBsH,GAAGgtG,EAAgB,QAAU,EAC7BpvG,OAAOnE,OAAOwG,OAAO4E,EAAKnK,MAAMmuC,WAAWxrC,OAAO2vG,EAClDrzG,UAAU,CAAC,kCAAkC,0CAOvDrB,KAAKoC,MAAMmuC,UACbk7F,EAAArsI,EAAAC,cAAC8sI,EAAA,EAASp+G,EAAV,KACE9qB,EACN,MACA,IAAK,kBACH4qB,EAAS7tB,KAAKoC,MAAM+qF,gBAClBs+C,EAAArsI,EAAAC,cAACmtI,EAAA,EAADrrI,OAAAC,OAAA,GAAiB2sB,EAAjB,CAA6BxjB,SAAUA,EAAU4E,aAAcA,EAAcD,aAAcA,EAAcN,OAAQ5O,KAAKoC,MAAM+qF,mBAC1HlqF,EACN,MACA,IAAK,aACH4qB,EAAS7tB,KAAKoC,MAAM4T,WAClBy1H,EAAArsI,EAAAC,cAACmtI,EAAA,EAADrrI,OAAAC,OAAA,GAAiB2sB,EAAjB,CAA6BxjB,SAAUA,EAAU4E,aAAcA,EAAcD,aAAcA,EAAcN,OAAQ5O,KAAKoC,MAAM4T,cAC1H/S,EACN,MACA,IAAK,OACH4qB,EAAS7tB,KAAKoC,MAAMooI,SAClBiB,EAAArsI,EAAAC,cAACmtI,EAAA,EAADrrI,OAAAC,OAAA,GAAiB2sB,EAAjB,CAA6BxjB,SAAUA,EAAU4E,aAAcA,EAAcD,aAAcA,EAAcN,OAAQ5O,KAAKoC,MAAMooI,YAC1HvnI,EACN,MACA,IAAK,QACH4qB,OAA8B7oB,IAArBhF,KAAKoC,MAAM4sG,OAA4C,OAArBhvG,KAAKoC,MAAM4sG,OAAkBhvG,KAAKsC,cAAc+T,MAAMrW,KAAKoC,MAAM4sG,OAAO71F,GAAG,GACpHsyH,EAAArsI,EAAAC,cAACmtI,EAAA,EAADrrI,OAAAC,OAAA,GAAiB2sB,EAAjB,CAA6BxjB,SAAU,EAAGqE,OAAQ5O,KAAKoC,MAAM4sG,SAC3DhvG,KAAKsC,cAAc+T,MAAMrW,KAAKoC,MAAM4sG,OAAO95E,IAAI,GAAK,IAAMjyB,EAChE,MACA,IAAK,eACH4qB,EAAS7tB,KAAKoC,MAAMqpC,aACkB,qBAA5BrgB,EAAUymB,eAAiCzmB,EAAUymB,cAC3D45F,EAAArsI,EAAAC,cAACstI,EAAA,EAAD,CACE5mI,SAAU/F,KAAKC,MAAM8F,SACrBgiC,UAAW/nC,KAAKoC,MAAMuoI,uBAEtBc,EAAArsI,EAAAC,cAAC8sI,EAAA,EAASp+G,EAAa/tB,KAAKoC,MAAMqpC,aAAlC,MAGFggG,EAAArsI,EAAAC,cAAC8sI,EAAA,EAASp+G,EAAa/tB,KAAKoC,MAAMqpC,aAAlC,KAEFxoC,EACJ,MACA,IAAK,oBACH4qB,EAAS7tB,KAAKoC,MAAMsoI,kBACkB,qBAA5Bt/G,EAAUymB,eAAiCzmB,EAAUymB,cAC3D45F,EAAArsI,EAAAC,cAACstI,EAAA,EAAD,CACE5mI,SAAU/F,KAAKC,MAAM8F,SACrBgiC,UAAW/nC,KAAKoC,MAAMqoI,4BAEtBgB,EAAArsI,EAAAC,cAAC8sI,EAAA,EAASp+G,EAAa/tB,KAAKoC,MAAMsoI,kBAAlC,MAGFe,EAAArsI,EAAAC,cAAC8sI,EAAA,EAASp+G,EAAa/tB,KAAKoC,MAAMsoI,kBAAlC,KAEFznI,EACJ,MACA,IAAK,gBACH4qB,EAAS7tB,KAAKoC,MAAMwqI,cAClBnB,EAAArsI,EAAAC,cAACstI,EAAA,EAAD,CACE5kG,UAAW,KACXhiC,SAAU/F,KAAKC,MAAM8F,UAErB0lI,EAAArsI,EAAAC,cAACmtI,EAAA,EAADrrI,OAAAC,OAAA,GACM2sB,EADN,CAEExjB,SAAUA,EACV4E,aAAcA,EACdP,OAAQ5O,KAAKoC,MAAMwqI,kBAGrB3pI,EACN,MACA,IAAK,WACH4qB,EAAS7tB,KAAKoC,MAAMgpC,SAClBqgG,EAAArsI,EAAAC,cAACstI,EAAA,EAAD,CACE5kG,UAAW,KACXhiC,SAAU/F,KAAKC,MAAM8F,UAErB0lI,EAAArsI,EAAAC,cAACmtI,EAAA,EAADrrI,OAAAC,OAAA,GACM2sB,EADN,CAEExjB,SAAUA,EACV4E,aAAcA,EACdP,OAAQ5O,KAAKoC,MAAMgpC,aAGrBnoC,EACN,MACA,IAAK,mBACH,IAAM4pI,EAAsB7sI,KAAKsC,cAAcwJ,gBAAgB,CAAC,aAAa,QAAQ,cAC/EowE,EAAkBl8E,KAAKsC,cAAcwJ,gBAAgB,CAAC,YAAY+gI,IACxEh/G,EAAS7tB,KAAKoC,MAAM+8D,iBAClBssE,EAAArsI,EAAAC,cAAC8sI,EAAA,EAASp+G,EAAV,IAAwB/tB,KAAKoC,MAAM+8D,iBAAiBp0D,QAAQR,GAA5D,SAA6E2xE,EAAgBx2B,uBAC3FziD,EACN,MACA,IAAK,wBACH4qB,EAAS7tB,KAAKoC,MAAMu5B,sBAClB8vG,EAAArsI,EAAAC,cAAC8sI,EAAA,EAASp+G,EAAa/tB,KAAKoC,MAAMu5B,sBAAsB5wB,QAAQR,GAAhE,IAA4EvK,KAAKC,MAAMoK,YAAYq7C,uBACjGziD,EACN,MACA,IAAK,oBACH4qB,EAAS7tB,KAAKoC,MAAMy2B,kBAClB4yG,EAAArsI,EAAAC,cAAC8sI,EAAA,EAASp+G,EAAa/tB,KAAKoC,MAAMy2B,kBAAkB9tB,QAAQR,IAC1DtH,EACN,MACA,IAAK,MACH4qB,EAAS7tB,KAAKoC,MAAMwmI,SAClB6C,EAAArsI,EAAAC,cAAC8sI,EAAA,EAASp+G,EAAa/tB,KAAKoC,MAAMwmI,SAAW/5H,MAAMnF,WAAW1J,KAAKoC,MAAMwmI,WAAmB,GAAN,KACpF3lI,EACN,MACA,IAAK,SACH4qB,OAA+B7oB,IAAtBhF,KAAKoC,MAAMwoI,OAClBa,EAAArsI,EAAAC,cAAC8sI,EAAA,EAASp+G,GAAmC,IAAtB/tB,KAAKoC,MAAMwoI,OAAmB5qI,KAAKoC,MAAMwoI,OAAS,IAAKa,EAAArsI,EAAAC,cAAA,mBAC5E4D,EACN,MACA,IAAK,WACH4qB,OAAsC7oB,IAA7BhF,KAAKoC,MAAMyoI,cAClBY,EAAArsI,EAAAC,cAAC8sI,EAAA,EAASp+G,GAA0C,IAA7B/tB,KAAKoC,MAAMyoI,cAA0B7qI,KAAKoC,MAAMyoI,cAAgB,IAAKY,EAAArsI,EAAAC,cAAA,mBAC1F4D,EACN,MACA,IAAK,WACH4qB,OAAiC7oB,IAAxBhF,KAAKoC,MAAM8qF,SAClBu+C,EAAArsI,EAAAC,cAAC8sI,EAAA,EAASp+G,GAAqC,IAAxB/tB,KAAKoC,MAAM8qF,SAAqBltF,KAAKoC,MAAM8qF,SAAW,IAAKu+C,EAAArsI,EAAAC,cAAA,mBAChF4D,EACN,MACA,IAAK,mBACH4qB,OAAyC7oB,IAAhChF,KAAKoC,MAAMqqF,iBAClBg/C,EAAArsI,EAAAC,cAAC8sI,EAAA,EAASp+G,GAA6C,IAAhC/tB,KAAKoC,MAAMqqF,iBAA6BzsF,KAAKoC,MAAMqqF,iBAAmB,IAAKg/C,EAAArsI,EAAAC,cAAA,mBAChG4D,EACN,MACA,IAAK,MACH4qB,OAAiC7oB,IAAxBhF,KAAKoC,MAAMspC,SAClB+/F,EAAArsI,EAAAC,cAAC8sI,EAAA,EAAD,CACE1sI,WAAY,SACZC,cAAe,OAEf+rI,EAAArsI,EAAAC,cAAC8sI,EAAA,EAASp+G,GAAqC,IAAxB/tB,KAAKoC,MAAMspC,SAAqB1rC,KAAKoC,MAAMspC,SAAW,IAAK+/F,EAAArsI,EAAAC,cAAA,mBAEhFW,KAAKoC,MAAMiwG,eAAiBlxG,OAAOqF,KAAKxG,KAAKoC,MAAMiwG,eAAettG,OAAO,GACvE0mI,EAAArsI,EAAAC,cAACgyB,EAAD,CACEjG,UAAW,CACTplB,KAAK,UACL/F,MAAM,CACJ6uB,UAAU,CACRpnB,GAAG,GAELmpC,UAAU,MACVC,QAAQ3vC,OAAOqF,KAAKxG,KAAKoC,MAAMiwG,eAAe3rG,IAAK,SAAA0gC,GACjD,IAAMse,EAAwBn5C,EAAKjK,cAAcwJ,gBAAgB,CAAC,YAAYs7B,EAAS,0BACjF0lG,EAAcvgI,EAAKjK,cAAcwJ,gBAAgB,CAAC,YAAYs7B,EAAS,mBACzErmC,EAAQwL,EAAKnK,MAAMiwG,cAAcjrE,GAAUr8B,QAAQR,GACvD,OAAQuiI,GACN,QACA,IAAK,MACH/rI,GAAS,IACX,MACA,IAAK,eACHA,EAAK,GAAAqF,OAAMrF,EAAN,KAAAqF,OAAes/C,GAGxB,SAAAt/C,OAAUghC,EAAV,MAAAhhC,OAAuBrF,KACtBgT,KAAK,WAMlB9Q,EACN,MACA,IAAK,SACH,IAAM8pI,EAAyC,oBAApB3hH,EAAUzqB,MAAuByqB,EAAUzqB,MAAMX,KAAKC,OAASmrB,EAAUzqB,MACpGktB,EACE49G,EAAArsI,EAAAC,cAAC8sI,EAAA,EAADhrI,OAAAC,OAAA,GAAY2sB,EAAZ,CAAwBtsB,QAAS,kBAAMssB,EAAWrsB,YAAY6K,EAAKtM,UAAU8sI,GAEjF,MACA,IAAK,mBACHl/G,EAAS7tB,KAAKoC,MAAM+nI,qBAClBsB,EAAArsI,EAAAC,cAAC2tI,EAAA,EAAD7rI,OAAAC,OAAA,GACMpB,KAAKoC,MAAMioI,sBADjB,CAEEv7H,KAAM9O,KAAKoC,MAAMgoI,qBACjBr6H,KAAM/P,KAAKoC,MAAM+nI,qBACjB3qI,MAAOQ,KAAKoC,MAAMunI,sBAClBvpI,OAAQJ,KAAKoC,MAAMwnI,0BAEnB3mI,EACN,MACA,IAAK,kBACH4qB,EAAS7tB,KAAKoC,MAAMymI,sBAAwB7oI,KAAKoC,MAAM0mI,sBACrD2C,EAAArsI,EAAAC,cAAC4tI,EAAA,EAAD9rI,OAAAC,OAAA,GACMpB,KAAKC,MADX,CAEE6M,YAAa,CACX5J,KAAK,QAEPgtB,WAAY,GACZ9lB,cAAepK,KAAKC,MAAM0J,MAC1BnK,MAAOQ,KAAKoC,MAAMymI,qBAClBzoI,OAAQJ,KAAKoC,MAAM0mI,sBACnBj3H,OAAqC,qBAAtB7R,KAAKC,MAAM4R,QAAyB7R,KAAKC,MAAM4R,OAC9D2C,WAA6C,qBAA1BxU,KAAKC,MAAMuU,YAA6BxU,KAAKC,MAAMuU,cAEtEvR,EACN,MACA,IAAK,UACH4qB,EACE49G,EAAArsI,EAAAC,cAAC8sI,EAAA,EACKp+G,EAEJ09G,EAAArsI,EAAAC,cAAC8sI,EAAA,EAADhrI,OAAAC,OAAA,CACEsG,GAAI,EACJ1B,KAAM,OACN9C,KAAM,MACNhD,MAAO,aACH6tB,EAAWe,aAIvB,MACA,IAAK,WACHjB,EAAS7tB,KAAKoC,MAAM8mI,aAClBuC,EAAArsI,EAAAC,cAAC2tI,EAAA,EAAD7rI,OAAAC,OAAA,GACMpB,KAAKoC,MAAMonI,cADjB,CAEE16H,KAAM9O,KAAKoC,MAAMmnI,aACjBx5H,KAAM/P,KAAKoC,MAAM8mI,aACjB1pI,MAAOQ,KAAKoC,MAAMgnI,cAClBhpI,OAAQJ,KAAKoC,MAAMinI,kBAEnBpmI,EACN,MACA,IAAK,SACH,IAAIyiC,EAAkB,KAClBK,EAAc/lC,KAAKoC,MAAMgpB,EAAUplB,MACvC,OAAQolB,EAAUtc,MAChB,IAAK,SACHi3B,EAAc/lC,KAAKsC,cAAc+T,MAAM0vB,GAAa9kB,WACpDykB,EAAkBh3B,IAClBqf,EAAWnf,OAASm3B,EACtB,MACA,IAAK,OACHL,EAAkBS,IAClBpY,EAAW/nB,KAAO+/B,EAClB,IAAMK,EAAkBjlC,OAAOwG,OAAOyjB,EAAU0a,MAAM15B,MACtD,GAAIpM,KAAKC,MAAMoK,YAAX,GAAAjE,OAA0BggC,EAA1B,UAAkD,CACpD,IAAMC,EAAmBrmC,KAAKC,MAAMoK,YAAX,GAAAjE,OAA0BggC,EAA1B,UAErBC,GAAoBllC,OAAOqF,KAAK6/B,GAAkBthC,QACpD5D,OAAOqF,KAAK6/B,GAAkBn8B,QAAQ,SAAAkF,GACpC2e,EAAW3e,GAAKi3B,EAAiBj3B,KAIzC,MACA,QACEs2B,EAAkBj+B,IAGtBomB,EAASkY,EACP0lG,EAAArsI,EAAAC,cAACqmC,EAAoB3X,EAAagY,GAChC9iC,EACN,MACA,QACE,IAAIiqI,EAAiBltI,KAAKoC,MAAMgpB,EAAUplB,MACtChG,KAAKoC,MAAMgpB,EAAUplB,OAAShG,KAAKoC,MAAMgpB,EAAUplB,MAAMmnI,eAC3DD,EAAiBltI,KAAKoC,MAAMgpB,EAAUplB,MAAM+E,QAAQR,IAEtDsjB,EAAS7tB,KAAKoC,MAAMgpB,EAAUplB,MAC5BylI,EAAArsI,EAAAC,cAAC8sI,EAAA,EAASp+G,EAAam/G,GACrBjqI,EAGR,OAAO4qB,SAxvCc7sB,aA4vCVqwB","file":"static/js/main.b4eaac46.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontSize:3,\n      fontWeight:3,\n      height:'45px',\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    // console.log('ShortHash',resolveAddress,this.props.hash,ensName);\n    if (ensName){\n      text = ensName;\n    }\n    this.setState({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from 'react';\nimport {\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport LoadingSpinner from '../LoadingSpinner/LoadingSpinner.js';\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n       <Button\n        onClick={this.props.handleClick}\n         {...this.props.buttonProps}\n       >\n        <Flex flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n          <Flex width={1} display={ this.props.isLoading ? 'flex' : 'none' }>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={ this.props.isLoading ? 'none' : 'flex' }>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n       </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.status = tx.status ? tx.status : 'Completed';\n      tx.action = action;\n      tx.momentDate = momentDate;\n      tx.amount = amount;\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          this.props.unit && unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          this.props.unit && unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      tokensData[token] = await this.functionsUtil.getTokenApiData(this.props.availableTokens[token].address,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    // debugger;\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0 && timeStamp>firstTxTimestamp && lastTokenData){\n              const idleTokens = idleTokenBalance[token];\n              const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n              let newBalance = idleTokens.times(idlePrice);\n\n              // Set new balance and tokenPrice\n              lastFilteredTx.balance = newBalance;\n              lastFilteredTx.tokenPrice = idlePrice;\n              filteredBalances = [lastFilteredTx];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken,'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      this.functionsUtil.customLog('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    let prediction = null;\n    if (this.state.predictTable){\n      this.state.predictTable.forEach((p,i) => {\n        if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n          prediction = p;\n          return true;\n        }\n      });\n    }\n\n    if (this.state.blockTime && prediction){\n      const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n      const blocksWait = pdValues[0];\n      const blockInterval = this.state.blockTime.block_time;\n      let txMeanSecs = blocksWait * blockInterval;\n      txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n      this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n      return txMeanSecs; // Customized\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in Etherscan\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #eee','1px solid #b6c2ff'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgba(0,54,255,0.3)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: blue.base,\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#3F3D4B',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    alert:'#ff9900',\n    arrowActive:'#4f4f4f',\n    arrowInactive:'#d8d8d8',\n    selectBgFocused:'#fbfbfb',\n    selectBg:'#ffffff',\n    backButtonBg:'#ffffff',\n    lineChartStroke:'#dbdbdb',\n    wrongNetworkBannerBg:'#ffffff',\n    dashboardBg: '#f9fafd',\n    statValue: '#959595',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a3a4a5',\n    cellText: '#a6a6a6',\n    divider: '#d8d8d8',\n    counter: '#5d5d5d',\n    redeem: '#00a9fe',\n    link:'#0036ff',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    menuBg:'#fff',\n    menuHover:'#f3f6ff',\n    cardBg:'#fff',\n    flashColor:'#3f4e9a',\n    menuRightBorder:'#eee',\n    cardHoverShadow:'0px 0px 0px 1px rgba(0, 54, 255, 0.3)',\n    cardBgHover:'#f7f8ff',\n    cardBorder:'#eee',\n    pageActive:'#4f4f4f',\n    pageInactive:'#d8d8d8',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, '#AAA'),\n      backgroundColor: tint(0.9, '#AAA'),\n      borderColor: '#AAA',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: '#f3f6ff',\n      borderColor: '#b6c2ff',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged){\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents(){\n    \n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p:2,\n          width:1,\n          style:{cursor:'pointer'}\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen){\n        cardProps.boxShadow = 4;\n      }\n      return (\n        <DashboardCard\n          isInteractive={true}\n          cardProps={cardProps}\n        >\n          <Flex\n            width={1}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps,{\n        mt:2,\n        zIndex:1,\n        boxShadow:null,\n        position:'absolute'\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable){\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput,this.props.themeMode==='dark' ? styles.dark : null,!props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map( o => o.value ).indexOf(selectedValue) === -1 && this.props.defaultValue){\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value){\n        return null;\n      }\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{cursor:'pointer'}}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={ props.isFocused ? 'selectBgFocused' : 'selectBg' }\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={ v => this.props.onChange(v.value) }\n        components={{\n            Menu: this.state.CustomMenu,\n            Option: this.state.CustomOption,\n            Control: this.state.ControlComponent,\n            Input: this.state.CustomInputContainer,\n            SingleValue: this.state.CustomValueContainer,\n            IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\nimport ShortHash from \"../utilities/components/ShortHash\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={`https://etherscan.io/tx/${transaction.hash}`}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n        const tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{transaction.tokenSymbol.toUpperCase()}</Text>\n        );\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import React, { Component } from 'react';\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign({\n      py:1,\n      width:'auto',\n      px:['12px',3],\n    },this.props.cardProps);\n\n    return (\n       <DashboardCard\n         cardProps={cardProps}\n         isInteractive={true}\n         isActive={this.props.isActive}\n         handleClick={this.props.handleClick}\n       >\n         <Flex\n           my={1}\n           alignItems={'center'}\n           flexDirection={'row'}\n           justifyContent={'center'}\n         >\n          {\n            this.props.image ? (\n              <Image\n                align={'center'}\n                src={this.props.image}\n                height={ this.props.isMobile ? '1.2em' : '1.4em' }\n                width={ this.props.isMobile ? '1.2em' : '1.4em' }\n                {...this.props.imageProps}\n              />\n            ) : this.props.useIconOnly ? (\n              <Icon\n                align={'center'}\n                name={this.props.icon}\n                size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                {...this.props.iconProps}\n              />\n            ) : (\n             <Flex\n               mr={2}\n               p={['4px','7px']}\n               borderRadius={'50%'}\n               alignItems={'center'}\n               justifyContent={'center'}\n               backgroundColor={ this.props.iconBgColor ? this.props.iconBgColor : this.props.theme.colors.transactions.actionBg.redeem }\n             >\n               <Icon\n                 align={'center'}\n                 name={this.props.icon}\n                 size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                 color={ this.props.iconColor ? this.props.iconColor : 'redeem' }\n                 {...this.props.iconProps}\n               />\n             </Flex>\n            )\n          }\n           <Text\n             fontWeight={3}\n             fontSize={[1,3]}\n             {...this.props.textProps}\n           >\n             {this.props.text}\n           </Text>\n         </Flex>\n       </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox } from \"rimble-ui\";\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    await this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (actionChanged || accountChanged || tokenBalanceChanged || contractChanged || tokenConfigChanged || approveEnabledChanged || permitEnabledChanged){\n      await this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log(this.props.tokenConfig.token,this.props.contractInfo.address);\n\n      this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventLabel: tx.status,\n        eventCategory: `CurveDeposit`,\n        eventValue: inputValue.toFixed(),\n        eventAction: this.props.tokenConfig.token,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    const contractName = this.props.contractInfo.name;\n\n    let params = null;\n\n    // Check contract approved without permit\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      params = this.props.getTransactionParams(_amount);\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n\n    const contractInfo = await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    if (contractInfo){\n      const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n      return contractApproved;\n    }\n    \n    return false;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const contractApproved = await this.checkContractApproved();\n    this.setState({\n      inputValue,\n      contractApproved,\n      fastBalanceSelector\n    });\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                mt={2}\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.props.approveDescription}\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:3,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                              >\n                                {this.props.balanceSelectorInfo.text}\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          }}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },parseInt(Date.now()/1000)) : null;\n\n    const programDuration = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programDuration\n    });\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      totalRewards,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    console.log('updateData',this.state.selectedAction,newState);\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:7,\n        type:'day',\n        label:'1 week'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(7,'day') : this.functionsUtil.strToMoment().add(7,'day');\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    // console.log('checkButtonDisabled',this.state.selectedAction,this.state.increaseAction,buttonDisabled);\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}%).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n        // console.log('getTransactionParams',methodName,methodParams);\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    // const isDebug = window.location.hash.includes(\"debug=1\");\n\n    if (!this.props.account){\n      // if (isDebug){\n      //   alert(`loadStats: !account=${this.props.account}`)\n      // }\n      return false;\n    }\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      tokenTotalSupply,\n      totalSupply,\n      tokenUserBalance,\n      lockedInfo,\n      claimable,\n      claimableRewards,\n      claimEvents,\n      checkpointEvents,\n      depositEvents,\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.getTokenTotalSupply(this.props.contractInfo.name),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]),\n      this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',{fromBlock: this.props.contractInfo.fromBlock, toBlock:'latest',filter:{provider:this.props.account}})\n    ]);\n\n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    const distributedRewards = etherscanRewardsTxs.map( tx => (\n      {\n        hash:tx.hash,\n        amount:this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals),\n        date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).format('YYYY-MM-DD HH:mm')\n      }\n    ));\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Locked Funds',\n      value:this.functionsUtil.formatMoney(totalDeposits,4)+' '+this.props.selectedToken\n    });\n\n    tokenTotalSupply = this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.contractInfo.decimals);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.selectedToken\n    });\n\n    stats.push({\n      title:'Claimable Rewards',\n      value:this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n      const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n      totalClaimed = totalClaimed.plus(claimedAmount);\n      return totalClaimed;\n    },this.functionsUtil.BNify(0));\n    const totalRewards = totalClaimed.plus(claimableRewards);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.rewardToken}`,\n    });\n    \n    claimable = this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    let stakeStartTime = depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0));\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    const lastCheckpointTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const stakePeriod = lastCheckpointTime.minus(stakeStartTime);\n\n    const currentProfit = stakedBalance.gt(0) ? claimable.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const apr = stakePeriod.gt(0) ? currentProfit.times(this.functionsUtil.getGlobalConfig(['network','secondsPerYear'])).div(stakePeriod).times(100) : this.functionsUtil.BNify(0);\n    // console.log('APR',apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),claimable.toFixed(),stakedBalance.toFixed());\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    // if (isDebug){\n    //   alert(`loadStats: statsLoaded=${statsLoaded}`);\n    // }\n\n    this.setState({\n      stats,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  changelockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // console.log('changelockPeriodInput',lockPeriodTimestamp);\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      });\n    }\n  }\n\n  selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year');\n    let mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    // Check if after 4 years from now\n    if (mDate.isAfter(maxDate)){\n      mDate = maxDate;\n    }\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    const lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // console.log('selectLockPeriod',lockPeriodInput,lockPeriodTimestamp);\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    // const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.contractInfo.rewardToken]);\n\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDate = this.functionsUtil.strToMoment().add(4,'year').format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    // console.log('updateData',selectedAction,newState);\n    // const isDebug = window.location.hash.includes(\"debug=1\");\n    // if (isDebug){\n    //   alert(`updateData: action=${selectedAction}, balanceProp=${newState.balanceProp.toFixed()}, contractInfo=${this.props.contractInfo.name}`);\n    // }\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:1,\n                        display:'flex',\n                        alignItems:'center',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Flex\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              py={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                width={0.333}\n                                fontWeight={3}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                width={0.333}\n                                fontWeight={3}\n                              >\n                                Amount\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                width={0.333}\n                                fontWeight={3}\n                              >\n                                Hash\n                              </Text>\n                            </Flex>\n                            {\n                              this.state.distributedRewards.map( reward => (\n                                <Flex\n                                  py={1}\n                                  width={1}\n                                  flexDirection={'row'}\n                                  borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                >\n                                  <Text\n                                    fontSize={2}\n                                    width={0.333}\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                  >\n                                    {reward.date}\n                                  </Text>\n                                  <Text\n                                    fontSize={2}\n                                    width={0.333}\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                  >\n                                    {reward.amount}\n                                  </Text>\n                                  <Text\n                                    fontSize={2}\n                                    width={0.333}\n                                    fontWeight={2}\n                                    color={'statValue'}\n                                  >\n                                    {this.functionsUtil.shortenHash(reward.hash)}\n                                  </Text>\n                                </Flex>\n                              ))\n                            }\n                          </Flex>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    {\n                      (isIncrease && canIncrease) && (\n                        <Box\n                          mb={2}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Choose increase value:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'space-between'}\n                          >\n                            <CardIconButton\n                              {...this.props}\n                              textProps={{\n                                fontSize:[1,2]\n                              }}\n                              cardProps={{\n                                px:3,\n                                py:2,\n                                width:0.49\n                              }}\n                              icon={'AccessTime'}\n                              iconColor={'deposit'}\n                              iconBgColor={'#ced6ff'}\n                              isActive={ this.state.increaseAction === 'time' }\n                              handleClick={ e => this.setIncreaseAction('time') }\n                              text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                            />\n                            <CardIconButton\n                              {...this.props}\n                              textProps={{\n                                fontSize:[1,2]\n                              }}\n                              cardProps={{\n                                px:3,\n                                py:2,\n                                width:0.49\n                              }}\n                              icon={'AttachMoney'}\n                              iconColor={'redeem'}\n                              iconBgColor={'#ceeff6'}\n                              isActive={ this.state.increaseAction === 'amount' }\n                              handleClick={ e => this.setIncreaseAction('amount') }\n                              text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                            />\n                          </Flex>\n                        </Box>\n                      )\n                    }\n                    {\n                      ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                        <Box\n                          width={1}\n                        > \n                          {\n                            (isLock || this.state.increaseAction === 'time') && (\n                              <Box\n                                width={1}\n                              >\n                                <Text mb={1}>\n                                  Choose lock period:\n                                </Text>\n                                {\n                                  !this.state.lockEndDateIsMaxEndDate ? (\n                                    <Flex\n                                      width={1}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      flexDirection={'column'}\n                                    >\n                                      <Input\n                                        mb={2}\n                                        width={1}\n                                        type={\"date\"}\n                                        required={true}\n                                        height={'3.4em'}\n                                        borderRadius={2}\n                                        fontWeight={500}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        boxShadow={'none !important'}\n                                        value={this.state.lockPeriodInput || ''}\n                                        onChange={this.changelockPeriodInput.bind(this)}\n                                        border={`1px solid ${this.props.theme.colors.divider}`}\n                                      />\n                                      <Flex\n                                        mb={3}\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'row'}\n                                        justifyContent={'space-between'}\n                                      >\n                                        {\n                                          this.state.lockPeriods.map( (p,index) => {\n                                            const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                            return (\n                                              <DashboardCard\n                                                cardProps={{\n                                                  p:2,\n                                                  width:0.24,\n                                                }}\n                                                isActive={isActive}\n                                                isInteractive={true}\n                                                key={`lockPeriod_${index}`}\n                                                handleClick={e => this.selectLockPeriod(p)}\n                                              >\n                                                <Text \n                                                  fontWeight={3}\n                                                  fontSize={[1,2]}\n                                                  textAlign={'center'}\n                                                  color={isActive ? 'copyColor' : 'cellText'}\n                                                >\n                                                  {p.label}\n                                                </Text>\n                                              </DashboardCard>\n                                            );\n                                          })\n                                        }\n                                      </Flex>\n                                      {\n                                        isIncrease && (\n                                          <ExecuteTransaction\n                                            params={[]}\n                                            {...this.props}\n                                            parentProps={{\n                                              width:1,\n                                              alignItems:'center',\n                                              justifyContent:'center'\n                                            }}\n                                            Component={Button}\n                                            componentProps={{\n                                              fontSize:3,\n                                              fontWeight:3,\n                                              size:'medium',\n                                              width:[1,1/2],\n                                              borderRadius:4,\n                                              mainColor:'deposit',\n                                              value:'Increase Time',\n                                              disabled:this.state.buttonDisabled\n                                            }}\n                                            action={'Increase Time'}\n                                            methodName={'increase_unlock_time'}\n                                            contractName={this.props.contractInfo.name}\n                                            callback={this.transactionSucceeded.bind(this)}\n                                            getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                          />\n                                        )\n                                      }\n                                    </Flex>\n                                  ) : (\n                                    <IconBox\n                                      cardProps={{\n                                        mt:1,\n                                        mb:3\n                                      }}\n                                      icon={'Warning'}\n                                      iconProps={{\n                                        color:'cellText'\n                                      }}\n                                      text={`Your tokens are locked for the maxumum allowed period.`}\n                                    />\n                                  )\n                                }\n                              </Box>\n                            )\n                          }\n                        </Box>\n                      )\n                    }\n                    {\n                      (isLock || this.state.increaseAction==='amount') ? (\n                        <SendTxWithBalance\n                          error={null}\n                          {...this.props}\n                          action={txAction}\n                          steps={this.state.steps}\n                          infoBox={this.state.infoBox}\n                          tokenConfig={this.props.tokenConfig}\n                          tokenBalance={this.state.balanceProp}\n                          contractInfo={this.props.contractInfo}\n                          permitEnabled={this.state.permitEnabled}\n                          buttonDisabled={this.state.buttonDisabled}\n                          approveEnabled={this.state.approveEnabled}\n                          callback={this.transactionSucceeded.bind(this)}\n                          approveDescription={this.state.approveDescription}\n                          balanceSelectorInfo={this.state.balanceSelectorInfo}\n                          changeInputCallback={this.changeInputCallback.bind(this)}\n                          contractApproved={this.contractApprovedCallback.bind(this)}\n                          getTransactionParams={this.getTransactionParams.bind(this)}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              p:3\n                            }}\n                          >\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                {\n                                  (isLock || isIncrease) ? (\n                                    `You don't have any ${this.props.selectedToken} in your wallet.`\n                                  ) : isUnstake && (\n                                    `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                  )\n                                }\n                              </Text>\n                            </Flex>\n                          </DashboardCard>\n                        </SendTxWithBalance>\n                      ) : (isIncrease && !canIncrease) ? (\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'LockOpen'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You cannot increase an expired lock, please Withdraw.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : isUnstake ? (\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          {\n                            this.state.lockExpired ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'LockOpen'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  The lock has expired, you can withdraw your {this.props.selectedToken}.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                    value:'Withdraw',\n                                  }}\n                                  action={'Withdraw'}\n                                  methodName={'withdraw'}\n                                  contractName={this.props.contractInfo.name}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'LockOpen'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      ) : isClaim && (\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim {this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/3],\n                                    value:'Claim',\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      )\n                    }\n                  </Box>\n                ) : !this.props.account ? (\n                  <ConnectBox\n                    {...this.props}\n                  />\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport { Flex, Box, Text, Input, Link, Progress } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    steps:{\n      1:'Get Quote',\n      2:'Enable NXS',\n      3:'Buy Cover'\n    },\n    loading:false,\n    amountValue:'',\n    periodValue:'',\n    quoteResponse:null,\n    selectedToken:'DAI'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async changeSelectedToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      amountValue\n    });\n  }\n\n  changePeriod = (e) => {\n\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    this.setState({\n      periodValue\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    let quoteResponse = await this.functionsUtil.makeRequest(`https://api.nexusmutual.io/getQuote/${this.state.amountValue}/${this.state.selectedToken}/${this.state.periodValue}/0x78751B12Da02728F467A44eAc40F5cbc16Bd7934/M1`);\n\n    const newState = {\n      loading:false\n    };\n\n    if (quoteResponse){\n      newState.quoteResponse = quoteResponse.data;\n    }\n\n    this.setState({\n      quoteResponse\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Flex\n            mb={1}\n            width={1}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n          >\n            {\n              Object.keys(this.state.steps).map( stepIndex => (\n                <Link\n                  style={{\n                    flexBasis:'0',\n                    flex:'1 1 0px',\n                    textDecoration:'none',\n                    cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                  }}\n                  fontSize={2}\n                  textAlign={'center'}\n                  key={`step_${stepIndex}`}\n                  color={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  hoverColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                  activeColor={ this.state.step>=stepIndex ? 'blue' : 'cellText' }\n                >\n                  {this.state.steps[stepIndex]}\n                </Link>\n              ) )\n            }\n          </Flex>\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Progress\n              style={{\n                width:'100%',\n                height:'15px'\n              }}\n              value={(1/Object.keys(this.state.steps).length)*this.state.step}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}>\n              Select asset:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              selectedToken={this.state.selectedToken}\n              onChange={this.changeSelectedToken.bind(this)}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              How much do you want to cover?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.amountValue}\n              onChange={this.changeAmount.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n              placeholder={`Insert ${this.state.selectedToken.toUpperCase()} amount`}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              For how many days?\n            </Text>\n            <Input\n              min={0}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              boxShadow={'none !important'}\n              value={this.state.periodValue}\n              placeholder={'Insert days of coverage'}\n              onChange={this.changePeriod.bind(this)}\n              border={`1px solid ${this.props.theme.colors.divider}`}\n            />\n          </Box>\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <ButtonLoader\n              buttonProps={{\n                my:2,\n                mx:[0, 2],\n                size:'medium',\n                borderRadius:4,\n                mainColor:'blue',\n                disabled:(!this.state.amountValue || !this.state.selectedToken || !this.state.periodValue)\n              }}\n              buttonText={'GET QUOTE'}\n              isLoading={this.state.loading}\n              handleClick={ e => this.getQuote(e) }\n            />\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport { Text, Icon, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = this.functionsUtil.BNify(customValue).toString();\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue){\n      return null;\n    }\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : null;\n  }\n}\n\nexport default CustomField;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.props.rows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n          value:Math.round(tokenPercentage),\n          color:'hsl('+tokenColorHsl+')'\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsTextColor:'#333',\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken,'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = portfolio.totalAmountLent.times(portfolio.avgAPY.div(100));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings)));\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token,'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\nimport CustomList from '../CustomList/CustomList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    activeCoverages:null,\n    depositedTokens:null,\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      // console.log('StrategyPage - availableTokensChanged',availableTokensChanged);\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n\n    if (this.state.portfolioLoaded){\n      return false;\n    }\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load data\n      const [\n        activeCoverages,\n        batchedDeposits,\n        tokensToMigrate,\n        portfolio\n      ] = await Promise.all([\n        // Load active coverages\n        this.functionsUtil.getActiveCoverages(this.props.account),\n        // Load claimable batches\n        this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load tokens to be migrated\n        this.functionsUtil.getTokensToMigrate(this.props.selectedStrategy),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n        // Load and process Etherscan Txs\n        this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.activeCoverages = activeCoverages && activeCoverages.length>0 ? activeCoverages.map( c => {\n        const statusColors = this.props.theme.colors.transactions.status;\n        const statusIcon = c.status === 'Expired' ? 'Error' : 'VerifiedUser';\n        const statusColor = c.status === 'Expired' ? statusColors.failed : statusColors.completed;\n        const portfolioCoverage = portfolio.totalBalance.gt(0) ? c.balance.div(portfolio.totalBalance).times(100).toFixed(2)+'%' : 'N/A';\n        const statusIconProps = {\n          color:statusColor\n        };\n        return Object.assign(c,{\n          statusIcon,\n          statusIconProps,\n          portfolioCoverage\n        });\n      }) : null;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          if (!tokenScore.isNaN() && tokenScore.gt(0)){\n            avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n            totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n          avgScore = avgScore.div(totalBalanceWithScore);\n        }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        newState.avgScore = avgScore;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.tokensToMigrate = tokensToMigrate;\n      newState.portfolioLoaded = true;\n\n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const riskScore = this.functionsUtil.getGlobalConfig(['messages','riskScore']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const coverProtocolConfig = this.functionsUtil.getGlobalConfig(['tools','coverProtocol']);\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title'])} strategy\n        </Title>\n        {\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={4}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgScore ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgScore.toFixed(2) }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg Risk Score\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                /*\n                !this.state.activeCoverages && coverProtocolConfig.enabled && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    mt={[3,4]}\n                    alignItems={'center'}\n                    id={'no-active-cover'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:[3,4],\n                        width:[1,'auto'],\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Image\n                          mb={2}\n                          height={['1.8em','2.2em']}\n                          src={coverProtocolConfig.image}\n                        />\n                        <Text\n                          mb={1}\n                          fontSize={[2,4]}\n                          fontWeight={500}\n                          textAlign={'center'}\n                        >\n                          You don't have an active coverage\n                        </Text>\n                        <Text\n                          mb={2}\n                          color={'blue'}\n                          fontSize={[1,2]}\n                          fontWeight={500}\n                          hoverColor={'blue'}\n                          textAlign={'center'}\n                        >\n                          Cover Protocol provides coverage against Smart-Contract attacks\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:1,\n                            width:'auto',\n                            minHeight:'40px',\n                            mainColor:'redeem',\n                            size:this.props.isMobile ? 'small' : 'medium'\n                          }}\n                          handleClick={ e => this.props.goToSection(`tools/${coverProtocolConfig.route}`) }\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              color={'white'}\n                              fontSize={[1,2]}\n                              fontWeight={500}\n                            >\n                              Get Covered\n                            </Text>\n                            <Icon\n                              ml={1}\n                              size={'1.3em'}\n                              name={'KeyboardArrowRight'}\n                            />\n                          </Flex>\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                )\n                */\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.29,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:false,\n                            props:{\n                              width:[0.12,0.09],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.21,0.10],\n                            },\n                            parentProps:{\n                              alignItems:['center','flex-start'],\n                            },\n                            fields:[\n                              {\n                                name:'score',\n                              }\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.13],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.13],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.10],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,this.state.depositedTokens.length>0 ? 0.14 : 0.14],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'SCORE',\n                            desc:riskScore,\n                            props:{\n                              width:[0.22,0.10],\n                            },\n                            fields:[\n                              {\n                                name:'score'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.11],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                !viewOnly && this.props.account && coverProtocolConfig.enabled && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','coverProtocol','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              width={[1,1/3]}\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(govTokens).filter( govToken => govTokens[govToken].enabled )}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.activeCoverages && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Coverages</Title>\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <CustomList\n                        rows={this.state.activeCoverages}\n                        handleClick={ this.props.isMobile ? (props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl) : null }\n                        cols={[\n                          {\n                            title:'PROTOCOL',\n                            props:{\n                              width:[0.42,0.17]\n                            },\n                            fields:[\n                              {\n                                type:'image',\n                                path:['protocolImage'],\n                                props:{\n                                  mr:[1,2],\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                type:'text',\n                                path:['protocolName'],\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            props:{\n                              width:[0.34, 0.15],\n                            },\n                            fields:[\n                              {\n                                type:'number',\n                                path:['balance'],\n                                props:{\n                                  decimals: 4,\n                                }\n                              },\n                              {\n                                type:'text',\n                                path:['token'],\n                                props:{\n                                  ml:[1,2],\n                                  style:{\n                                    textTransform:'uppercase'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EXPIRATION DATE',\n                            props:{\n                              width:0.23,\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['expirationDate'],\n                                props:{\n                                  \n                                }\n                              },\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'COVERAGE',\n                            props:{\n                              width:0.15,\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'text',\n                                path:['portfolioCoverage'],\n                                props:{\n                                  \n                                }\n                              },\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.24,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:[1,2],\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                type:'button',\n                                name:'custom',\n                                label:'File Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.row.status==='Expired')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => props.row.status!=='Expired' && props.row.fileClaimUrl && this.functionsUtil.openWindow(props.row.fileClaimUrl)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() );\n    const claimContracts = this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() );\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import Staking from '../Staking/Staking';\nimport IDLE from '../contracts/IDLE.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from '../abis/curve/CurvePool.json';\nimport NexusMutual from '../NexusMutual/NexusMutual';\nimport CoverMint from '../abis/cover/CoverMint.json';\nimport LockedIDLE from '../contracts/LockedIDLE.json';\nimport LpStakingAbi from '../contracts/LpStaking.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport PriceOracle from '../contracts/PriceOracle.json';\nimport FeeTreasury from '../contracts/FeeTreasury.json';\nimport IdleTokenV2 from '../contracts/IdleTokenV2.json';\nimport StrategyPage from '../StrategyPage/StrategyPage';\nimport BuyModal from '../utilities/components/BuyModal';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport BatchDeposit from '../BatchDeposit/BatchDeposit';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport SushiV2Router02 from '../abis/sushiswap/SushiV2Router02.json';\nimport IdleBatchConverter from '../contracts/IdleBatchConverter.json';\nimport UniswapV2Router02 from '../abis/uniswap/UniswapV2Router02.json';\nimport IdleDepositForwarder from '../contracts/IdleDepositForwarder.json';\nimport SushiLiquidityPool from '../abis/sushiswap/SushiLiquidityPool.json';\nimport StakingFeeDistributor from '../contracts/StakingFeeDistributor.json';\nimport BalancerExchangeProxy from '../abis/balancer/BalancerExchangeProxy.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\nimport MinimalInitializableProxyFactory from '../contracts/MinimalInitializableProxyFactory.json';\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: 'Idle',\n  version: 'v5.9',\n  baseToken: 'ETH',\n  baseURL: 'https://idle.finance',\n  forumURL:'https://gov.idle.finance',\n  theme:{\n    darkModeEnabled:true\n  },\n  betaURL: 'https://beta.idle.finance',\n  countries:{\n    'USA':'United States of America',\n    'GBR':'United Kingdom',\n    'AUS':'Australia',\n    'BRA':'Brazil',\n    'CHN':'China',\n    'CAN':'Canada',\n    'EUR':'Europe',\n    'HKG':'Hong Kong',\n    'IND':'India',\n    'MEX':'Mexico',\n    'RUS':'Russia',\n    'ZAF':'South Africa',\n    'KOR':'South Korea'\n  },\n  logs:{ // Enable logs levels\n    errorsEnabled:false,\n    messagesEnabled:false,\n  },\n  connectors:{ // Connectors props\n    metamask:{\n      enabled:true,\n      subcaption:'Browser extension'\n    },\n    opera:{\n      enabled:true,\n      subcaption:'Opera injected wallet'\n    },\n    dapper:{\n      enabled:true,\n      icon:'dapper.png',\n      subcaption:'Browser extension',\n    },\n    coinbase:{\n      enabled:true,\n      icon:'coinbase.png',\n      subcaption:'Connect with Coinbase wallet'\n    },\n    trustwallet:{\n      enabled:true,\n      subcaption:'Connect with Trust Wallet'\n    },\n    walletconnect:{\n      enabled:true,\n      iconModal:'walletconnect.png',\n      subcaption:'Connect with QR code'\n    },\n    walletlink:{\n      enabled:true,\n      icon:'coinbase.png',\n      name:'Coinbase Wallet',\n      subcaption:'Connect with QR code'\n    },\n    gnosis:{\n      enabled:true,\n      // icon:'coinbase.png',\n      name:'Gnosis Safe App',\n      subcaption:'Connect with Gnosis Safe App'\n    },\n    fortmatic:{\n      enabled:true,\n      subcaption:'Login with phone-number'\n    },\n    portis:{\n      enabled:true,\n      subcaption:'Login with e-mail'\n    },\n    authereum:{\n      enabled:true,\n      subcaption:'Cross-device wallet'\n    },\n    torus:{\n      enabled:true,\n      icon:'torus.png',\n      subcaption:'One-Click login for Web 3.0'\n    },\n    trezor:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    ledger:{\n      enabled:true,\n      subcaption:'Hardware wallet'\n    },\n    custom:{\n      enabled:true,\n      subcaption:'Custom address'\n    }\n  },\n  newsletterSubscription:{\n    endpoint:'https://dev.lapisgroup.it/idle/newsletter.php'\n  },\n  messages:{\n    scoreShort:'Protocol Risk Score',\n    apyShort:'Annual Percentage Yield',\n    tokenPrice:'The token price is calculated using Uniswap spot prices.',\n    cheapRedeem:'Amount of unlent funds available for low gas fees redeem',\n    curveBonusSlippage:'Slippage or bonus depending on if the coin is low or high in the Curve Pool',\n    distributionSpeed:'The distribution indicates the amount of tokens distributed for the entire pool.',\n    directMint:'Pay an additional gas fee to rebalance the pool and help all users gain an additional APR',\n    performanceFee:'This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE',\n    userDistributionSpeed:'The distribution indicates the amount of tokens distributed for your account based on your current pool share.',\n    govTokenApr:'Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.',\n    govTokenRedeemableBalance:'The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.',\n    riskScoreShort:'It\\'s a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.',\n    redeemSkipGov:'This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool',\n    batchDepositExecutionSchedule:'Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.',\n    apyLong:'APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.',\n    yieldFarming:'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\">Read more here</a>.',\n    riskScore:`It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions:`<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`\n  },\n  analytics:{\n    google:{\n      events:{\n        enabled:true, // Enable Google Analytics events\n        debugEnabled:false, // Enable sending for test environments\n        addPostfixForTestnet:true // Append testnet to eventCategory\n      },\n      pageView:{\n        enabled:true\n      }\n    }\n  },\n  modals:{ // Enable modals\n    first_deposit_referral:false, // Referral share modal\n    first_deposit_share:true, // First deposit share modal\n    migrate:{\n      enabled:true\n    },\n    welcome:{ // Welcome modal\n      enabled:true,\n      frequency:604800 // One week\n    }\n  },\n  dashboard:{\n    baseRoute:'/dashboard',\n    theme:{\n      mode:'light',\n      darkModeEnabled:true\n    },\n  },\n  governance:{\n    test:false,\n    enabled:true,\n    startBlock:11333729,\n    baseRoute:'/governance',\n    props:{\n      tokenName:'IDLE',\n      availableContracts:{\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals:{\n      7:{\n        description:`Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>`\n      }\n    },\n    contracts:{\n      delegates:'IDLE',\n      governance:'GovernorAlpha',\n    }\n  },\n  curve:{\n    enabled:false,\n    params:{\n      n_coins:3,\n      label:'Curve',\n      route:'/dashboard/curve',\n      image:'images/protocols/curve.svg',\n      imageInactive:'images/protocols/curve-off.svg',\n    },\n    rates:{\n      path:['apy','day','idle'],\n      endpoint:'https://www.curve.fi/raw-stats/apys.json'\n    },\n    poolContract:{\n      decimals:18,\n      abi:CurvePool,\n      name:'idleDAI+idleUSDC+idleUSDT',\n      token:'idleDAI+idleUSDC+idleUSDT',\n      address:'0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05'\n    },\n    depositContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7'\n    },\n    gaugeContract:{\n      abi:LiquidityGaugeV2,\n      name:'LiquidityGaugeV2',\n      address:'0xd69ac8d9D25e99446171B5D0B3E4234dAd294890'\n    },\n    zapContract:{\n      abi:CurveZap,\n      name:'idleCurveZap',\n      address:'0x456974df1042ba7a46fd49512a8778ac3b840a21'\n    },\n    migrationContract:{\n      abi:CurveDeposit,\n      name:'idleCurveDeposit',\n      address:'0x83f252f036761a1e3d10daca8e16d7b21e3744d7',\n      functions:[\n        {\n          label:'Deposit',\n          name:'add_liquidity'\n        },\n      ]\n    },\n    availableTokens:{\n      idleDAIYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'DAI',\n        token:'idleDAIYield',\n        address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:0\n        },\n      },\n      idleUSDCYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDC',\n        token:'idleUSDCYield',\n        address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:1\n        },\n      },\n      idleUSDTYield:{\n        decimals:18,\n        enabled:true,\n        baseToken:'USDT',\n        token:'idleUSDTYield',\n        address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        migrationParams:{\n          n_coins:3,\n          coinIndex:2\n        },\n      },\n    }\n  },\n  permit:{\n    DAI:{\n      version:1,\n      EIPVersion:null,\n      nonceMethod:'nonces',\n      name:'Dai Stablecoin',\n      type:[\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" },\n      ]\n    },\n    USDC:{\n      version:2,\n      name:'USD Coin',\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    },\n    SLP:{\n      version:1,\n      EIPVersion:2612,\n      nonceMethod:'nonces',\n      name:'SushiSwap LP Token',\n      type:[\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" },\n      ]\n    }\n  },\n  govTokens:{\n    IDLE:{\n      abi:IDLE,\n      decimals:18,\n      token:'IDLE',\n      enabled:true,\n      showAUM:false, // Include IDLE balance in AUM\n      showAPR:false, // Include IDLE Apr\n      protocol:'idle',\n      showPrice:false, // Show price in Yield Farming section\n      showBalance:false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode:false,\n      distributionMode:'block',\n      distributionFrequency:'day', // Multiply distribution per block\n      color:'hsl(162, 100%, 41%)',\n      icon:'images/tokens/IDLE.png',\n      disabledTokens:['idleRAIYield'], // Disable IDLE distribution for idleToken\n      address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e' // MAIN\n      // address:'0xAB6Bdb5CCF38ECDa7A92d04E86f7c53Eb72833dF', // KOVAN\n      // address:'0xa85233C63b9Ee964Add6F2cffe00Fd84eb32338f' // Fork\n    },\n    COMP:{\n      abi:COMP,\n      decimals:18,\n      token:'COMP',\n      enabled:true,\n      showAUM:true, // Include IDLE balance in AUM\n      showAPR:true, // Include COMP Apr\n      showPrice:true,\n      showBalance:true, // Include COMP balance in Portfolio Donut\n      disabledTokens:[],\n      protocol:'compound',\n      aprTooltipMode:false,\n      distributionMode:'block',\n      distributionFrequency:'day',\n      color:'hsl(162, 100%, 41%)',\n      address:'0xc00e94cb662c3520282e6f5717214004a7f26888', // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE:{\n      abi:aToken,\n      decimals:18,\n      showAUM:true, // Include stkAAVE balance in AUM\n      showAPR:true, // Include stkAAVE Apr\n      enabled:true,\n      showPrice:true,\n      token:'stkAAVE',\n      showBalance:true, // Include stkAAVE balance in Portfolio Donut\n      protocol:'aavev2',\n      aprTooltipMode:false,\n      distributionMode:'second',\n      color:'hsl(314, 41%, 51%)',\n      distributionFrequency:'day',\n      address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice:'0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n      disabledTokens:['idleTUSDYield','idleSUSDYield','idleRAIYield']\n    }\n  },\n  contracts:{\n    ProxyFactory:{\n      abi:MinimalInitializableProxyFactory,\n      address:'0x91baced76e3e327ba7850ef82a7a8251f6e43fb8'\n    },\n    LockedIDLE:{\n      abi:LockedIDLE,\n      address:'0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n    },\n    FeeTreasury:{\n      abi:FeeTreasury,\n      address:'0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n    },\n    PriceOracle:{\n      abi:PriceOracle,\n      address:'0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n      // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n    },\n    Timelock:{\n      abi:Timelock,\n      address:'0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n      // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n    },\n    EcosystemFund:{\n      abi:EcosystemFund,\n      address:'0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n      // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n    },\n    VesterFactory:{\n      abi:VesterFactory,\n      address:'0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n      // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n    },\n    IdleController:{\n      abi:IdleController,\n      address:'0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n      // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n    },\n    EarlyRewards:{\n        abi:EarlyRewards,\n        address:'0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n    },\n    GovernorAlpha:{\n      abi:GovernorAlpha,\n      address:'0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n      // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n    },\n    Comptroller:{\n      abi:Comptroller,\n      address:'0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n      // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n    },\n    SushiswapRouter:{\n      abi:SushiV2Router02,\n      address:'0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n    },\n    UniswapRouter:{\n      abi:UniswapV2Router02,\n      address:'0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n    },\n    BalancerExchangeProxy:{\n      abi:BalancerExchangeProxy,\n      address:'0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n    }\n  },\n  tokens:{\n    DAI:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n    USDC:{\n      zeroExInstant:{\n        orderSource: 'https://api.0x.org/sra/',\n        assetData:'0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        affiliateInfo: {\n            feeRecipient: '0x4215606a720477178AdFCd5A59775C63138711e8',\n            feePercentage: 0.0025\n        },\n      },\n    },\n  },\n  strategies:{\n    best:{\n      token:'DAI',\n      color:'#f32121',\n      comingSoon:false,\n      addGovTokens:true,\n      titlePostfix:null,\n      title:'Best-Yield',\n      iconName:'Whatshot',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(40,95%,59%)',\n      icon:'images/strategies/best-on.svg',\n      iconInactive:'images/strategies/best-off.svg',\n      iconInactiveDark:'images/strategies/best-white.svg',\n      desc:'Maximize your returns across DeFi protocols',\n      descLong:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.',\n      descShort:'The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.'\n    },\n    risk:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:false,\n      titlePostfix:null,\n      addGovTokens:true,\n      iconName:'Security',\n      title:'Risk-Adjusted',\n      govTokensEnabled:true,\n      component: StrategyPage,\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/risk-on.svg',\n      iconInactive:'images/strategies/risk-off.svg',\n      iconInactiveDark:'images/strategies/risk-white.svg',\n      desc:'Optimize your risk exposure across DeFi protocols',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    },\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n  },\n  stats:{\n    enabled:true, // Enable endpoint\n    rates:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/rates/'\n    },\n    tvls:{\n      TTL:120,\n      endpoint:'https://api.idle.finance/tvls/'\n    },\n    substack:{\n      TTL:1800,\n      endpoint:'https://api.idle.finance/substack/'\n    },\n    scores:{\n      TTL:300, // 5 minutes\n      endpoint:'https://api.idle.finance/scores/'\n    },\n    config:{\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {}\n    },\n    versions:{\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3:{\n        label:'Idle V3',\n        additionalProtocols:[],\n        endTimestamp:1597237542,\n        startTimestamp:1589801874,\n        showPerformanceTooltip:false,\n        strategiesParams:{\n          risk:{\n            endTimestamp:1597233922,\n          }\n        },\n        enabledStrategies:['best','risk'],\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n      },\n      v4:{\n        label:'Idle V4',\n        endTimestamp:null,\n        startTimestamp:1597442400, // 1598220000\n        enabledStrategies:['best','risk'],\n        showPerformanceTooltip:true,\n        strategiesParams:{\n          risk:{\n            startTimestamp:1599183170,\n          }\n        },\n        enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH','RAI'],\n        additionalProtocols:[\n          {\n            decimals:16,\n            protocol:'compound',\n            name:'compoundWithCOMP',\n            enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH'],\n          },\n          {\n            decimals:18,\n            protocol:'aavev2',\n            name:'aavev2WithStkAAVE',\n            enabledTokens:['DAI','USDC','USDT','TUSD','SUSD','WBTC','WETH'],\n          }\n        ]\n      }\n    },\n    tokens:{\n      DAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          rgb:[250,184,51],\n          hex:'#F7B24A',\n          hsl:['40', '95%', '59%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 2]\n        },\n        startTimestamp:'2020-02-11',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USD:{\n        enabled:true,\n        color:{\n          hex:'#85bb65',\n          rgb:[133, 187, 101],\n          hsl:['98', '39%', '56%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        address:null,\n        startTimestamp:'2020-02-04',\n      },\n      USDC:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#2875C8',\n          rgb:[40,117,200],\n          hsl:['211', '67%', '47%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 2]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      USDT:{\n        decimals:6,\n        enabled:true,\n        color:{\n          hex:'#22a079',\n          rgb:[34, 160, 121],\n          hsl:['161', '65%', '38%']\n        },\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        startTimestamp:'2020-02-04',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      TUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'0340a1',\n          rgb:[3, 64, 161],\n          hsl:['217', '96%', '32%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n      },\n      SUSD:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#1e1a31',\n          rgb:[30, 26, 49],\n          hsl:['250', '31%', '15%']\n        },\n        chart:{\n          labelTextColorModifiers:['brighter', 5]\n        },\n        startTimestamp:'2020-06-22',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n      },\n      WBTC:{\n        decimals:8,\n        enabled:true,\n        color:{\n          hex:'#eb9444',\n          rgb:[235, 148, 68],\n          hsl:['29', '81%', '59%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'wbtcDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      WETH:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#ee1f79',\n          rgb:[238, 31, 121],\n          hsl:['334', '86%', '53%']\n        },\n        startTimestamp:'2021-02-16',\n        conversionRateField:'wethDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4],\n        },\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        performanceTooltip:'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      COMP:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#00d395',\n          rgb:[0, 211, 149],\n          hsl:['162', '100%', '41%']\n        },\n        startTimestamp:'2020-06-15',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0xc00e94cb662c3520282e6f5717214004a7f26888',\n      },\n      stkAAVE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#B6509E',\n          rgb:[182, 80, 158],\n          hsl:['314', '41%', '51%']\n        },\n        startTimestamp:'2021-04-30',\n        conversionRateField:'compDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x4da27a545c0c5b758a6ba100e3a049001de870f5',\n      },\n      IDLE:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#0d55bb',\n          rgb:[13, 85, 187],\n          hsl:['215', '87%', '39%']\n        },\n        startTimestamp:'2020-11-10',\n        icon:'images/tokens/IDLE.png',\n        conversionRateField:'idleDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e',\n      },\n      RAI:{\n        decimals:18,\n        enabled:true,\n        color:{\n          hex:'#378879',\n          rgb:[55, 136, 121],\n          hsl:['169', '42%', '37%']\n        },\n        startTimestamp:'2021-05-25',\n        icon:'images/tokens/RAI.png',\n        conversionRateField:'raiDAIPrice',\n        chart:{\n          labelTextColorModifiers:['darker', 4]\n        },\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n      },\n      'idleDAI+idleUSDC+idleUSDT':{\n        decimals:18,\n        enabled:false,\n        name:'Curve.fi',\n        color:{\n          hex:'#ff0000',\n          rgb:[255, 0, 0],\n          hsl:['0', '100%', '50%']\n        },\n        startTimestamp:'2020-06-15',\n      },\n    },\n    protocols:{\n      compound:{\n        legend:true,\n        enabled:true,\n        label:'Compound',\n        color:{\n          rgb:[0, 209, 146],\n          hsl:['162', '100%', '41%']\n        }\n      },\n      aavev2WithStkAAVE:{\n        enabled:true,\n        label:'Aave V2 + stkAAVE',\n        startTimestamp:'2021-05-08 14:30:00',\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color:{\n          hex:'#B6509E',\n          rgb:[182, 80, 158],\n          hsl:['314', '41%', '51%']\n        },\n        rateField:['rate','aaveAdditionalAPR']\n      },\n      compoundWithCOMP:{\n        enabled:true,\n        label:'Compound + COMP',\n        color:{\n          rgb:[0, 153, 107],\n          hsl:['162', '100%', '30%']\n        },\n        rateField:['rate','compoundAdditionalAPR']\n      },\n      fulcrum:{\n        legend:false,\n        enabled:false,\n        label:'Fulcrum',\n        color:{\n          rgb:[2, 138, 192],\n          hsl:['197', '98%', '38%']\n        }\n      },\n      dsr:{\n        label:'DSR',\n        enabled:false,\n        icon:'CHAI.png',\n        color:{\n          rgb:[222, 52, 67],\n          hsl:['355', '72%', '54%']\n        }\n      },\n      dydx:{\n        legend:true,\n        label:'DyDx',\n        enabled:true,\n        color:{\n          rgb:[87, 87, 90],\n          hsl:['240', '2%', '35%']\n        }\n      },\n      iearn:{\n        label:'Yearn',\n        enabled:true,\n      },\n      aave:{\n        label:'Aave V1',\n        legend:true,\n        enabled:true,\n        color:{\n          rgb:[230, 131, 206],\n          hsl:['315', '66%', '71%']\n        }\n      },\n      aavev2:{\n        legend:true,\n        enabled:true,\n        icon:'aave.svg',\n        label:'Aave V2',\n        color:{\n          rgb:[151, 79, 141],\n          hsl:['308', '31%', '45%']\n        }\n      },\n      cream:{\n        legend:true,\n        enabled:true,\n        label:'Cream',\n        icon:'cream.svg',\n        color:{\n          rgb:[105, 226, 220],\n          hsl:['177', '68%', '65%']\n        }\n      },\n      fuse:{\n        legend:true,\n        enabled:true,\n        label:'Fuse',\n        icon:'fuse.png',\n        color:{\n          rgb:[0, 0, 0],\n          hsl:['0', '0%', '0%']\n        }\n      },\n      curve:{\n        label:'',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      },\n      idle:{\n        label:'Idle',\n        enabled:true,\n        color:{\n          rgb:[0, 55, 255],\n          hsl:['227', '100%', '50%']\n        }\n      }\n    }\n  },\n  contract:{\n    methods:{\n      redeem:{\n        skipRebalance:true,\n        metaTransactionsEnabled:false\n      },\n      deposit:{\n        skipMint:true,\n        minAmountForMint:100000,\n        erc20ForwarderEnabled:true,\n        skipMintCheckboxEnabled:true,\n        metaTransactionsEnabled:false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract:{\n          forwarder:{\n            enabled:true,\n            abi:erc20Forwarder,\n            name:'erc20Forwarder',\n            function:'emitMessage',\n            address:'0x84a0856b038eaAd1cC7E297cF34A7e72685A8693', // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens:{\n            DAI:{\n              enabled:true,\n              permitType:'DAI_Permit',\n              abi:IdleDepositForwarder,\n              function:'permitAndDeposit', // foo\n              name:'IdleDepositForwarderDAI',\n              address:'0xDe3c769cCD1878372864375e9f89956806B86daA', // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC:{\n              enabled:true,\n              permitType:'USDC_Permit',\n              abi:IdleDepositForwarder,\n              name:'IdleDepositForwarderUSDC',\n              function:'permitEIP2612AndDeposit',\n              address:'0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761', // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            },\n          }\n        },\n        proxyContract:{\n          enabled:false,\n          abi:IdleProxyMinter,\n          name:'IdleProxyMinter',\n          function:'mintIdleTokensProxy',\n          address:'0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a',\n        }\n      },\n      migrate:{\n        skipRebalance:true,\n        minAmountForRebalance:10000,\n        minAmountForRebalanceMetaTx:10000\n      },\n      redeemGovTokens:{\n        enabled:true\n      },\n      redeemSkipGov:{\n        enabled:true,\n        disabledTokens:['idleDAISafe','idleUSDCSafe','idleUSDTSafe']\n      },\n      rebalance:{\n        enabled:true,\n        abi:IdleRebalancerV3\n      }\n    }\n  },\n  network:{ // Network configurations\n    availableNetworks:{\n      1:'Mainnet',\n      3:'Ropsten',\n      4:'Rinkeby',\n      42:'Kovan',\n      1337:'Hardhat'\n    },\n    isForked:false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork:1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear:2371428,\n    secondsPerYear:31536000,\n    firstBlockNumber:8119247,\n    requiredConfirmations: 1,\n    enabledNetworks:[1,42,1337],\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers:{\n      infura:{\n        42: 'https://kovan.infura.io/v3/',\n        1: 'https://mainnet.infura.io/v3/',\n        1337: 'https://mainnet.infura.io/v3/'\n      },\n      ens:{\n        enabled:true,\n        supportedNetworks:[1]\n      },\n      etherscan:{\n        enabled:true, // False for empty txs list (try new wallet)\n        endpoints:{\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl:{\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      snapshot:{\n        whitelist:[\n          '0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa',\n          '0xf12ce5807e3d3128B876aa1Cec0632D63547E22E'\n        ],\n        endpoints:{\n          proposals:'https://hub.snapshot.page/api/idlefinance.eth/proposals'\n        },\n        urls:{\n          proposals:'https://signal.idle.finance/#/idlefinance.eth/proposal/'\n        }\n      },\n      biconomy:{\n        enabled:false,\n        enableLogin:false,\n        supportedNetworks:[1,42],\n        disabledWallets:['authereum'],\n        endpoints:{\n          limits:'https://api.biconomy.io/api/v1/dapp/checkLimits'\n        },\n        params:{\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: '36572ec9-ae5c-4c4a-9530-f3ae7c7ac829',\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID:{\n        enabled:false,\n        supportedNetworks:[1],\n        getNetwork:(networkId,availableNetworks) => {\n          let networkName = null;\n          switch (networkId){\n            case 1:\n              networkName = 'mainnet';\n            break;\n            default:\n              networkName = availableNetworks[networkId] ? availableNetworks[networkId].toLowerCase() : 'mainnet';\n            break;\n          }\n          return networkName;\n        },\n        params:{\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: 'mainnet'\n        }\n      }\n    }\n  },\n  notifications:[\n    {\n      enabled:false,\n      end:1612282726374,\n      start:1611677841027,\n      date:'Jan 26, 2021 16:18 UTC',\n      title:'Cover Protocol Available',\n      hash:'/dashboard/tools/cover-protocol',\n      image:'/images/protocols/cover-logo.svg',\n      text:'Protect your portfolio with Cover Protocol',\n    }\n  ],\n  tools:{\n    stake:{\n      enabled:true,\n      icon:'Layers',\n      label:'Staking',\n      route:'staking',\n      subComponent:Staking,\n      desc:'Stake your IDLE / Sushi Swap LP tokens and earn $IDLE rewards',\n      props:{\n        availableTokens:{\n          IDLE:{\n            component:IdleStaking,\n            contract:{\n              abi:stkIDLE,\n              decimals:18,\n              name:'stkIDLE',\n              fromBlock:12561464,\n              rewardToken:'IDLE',\n              address:'0xaac13a116ea7016689993193fce4badc8038136f' // Mainnet\n            },\n            feeDistributor:{\n              fromBlock:12649361,\n              abi:StakingFeeDistributor,\n              name:'StakingFeeDistributor',\n              address:'0xbabb82456c013fd7e3f25857e0729de8207f80e2' // Mainnet\n            },\n            abi:IDLE,\n            name:'IDLE',\n            token:'IDLE',\n            decimals:18,\n            enabled:true,\n            label:'IDLE Token',\n            icon:'images/tokens/IDLE.png',\n            address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            poolLink:'https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e',\n          },\n          SLP:{\n            component:LpStaking,\n            contract:{\n              decimals:24,\n              name:'LpStaking',\n              maxMultiplier:3,\n              abi:LpStakingAbi,\n              maxBonusDays:120,\n              rewardToken:'IDLE',\n              address:'0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d' // Mainnet\n            },\n            name:'SLP',\n            token:'SLP',\n            decimals:18,\n            enabled:true,\n            abi:SushiLiquidityPool,\n            label:'SushiSwap IDLE/ETH LP Token',\n            icon:'images/protocols/sushiswap.png',\n            address:'0xa7f11e026a0af768d285360a855f2bded3047530', // Mainnet\n            poolLink:'https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530',\n          }\n        }\n      }\n    },\n    b2bVesting:{\n      enabled:true,\n      visible:true,\n      icon:'CloudUpload',\n      label:'B2B Vesting',\n      route:'b2b-vesting-contract',\n      subComponent:DeployB2BVesting,\n      desc:'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props:{\n        contracts:{\n          vesterImplementation:{\n            abi:B2BVester,\n            address:'0x3024656ae91d7bf724f613c314bc56030ba2344c'\n          }\n        }\n      }\n    },\n    ethWrapper:{\n      enabled:true,\n      label:'ETH Wrapper',\n      route:'eth-wrapper',\n      subComponent:TokenWrapper,\n      image:'images/tokens/WETH.svg',\n      desc:'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props:{\n        startContract:{\n          name:'ETH',\n          token:'ETH',\n          decimals:18,\n          wrapMethod:'deposit',\n        },\n        destContract:{\n          abi:WETH,\n          name:'WETH',\n          decimals:18,\n          token:'WETH',\n          unwrapMethod:'withdraw',\n          address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol:{\n      enabled:false,\n      label:'Cover Protocol',\n      route:'cover-protocol',\n      subComponent:CoverProtocol,\n      image:'images/protocols/cover-logo.svg',\n      desc:'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl:'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props:{\n        contract:{\n          decimals:18,\n          abi:CoverMint,\n          name:'CoverMint',\n          address:'0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages:[\n          {\n            collateral:'DAI',\n            expirationTimestamp:1614470400,\n            tokens:{\n              Claim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                address:'0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM',\n                  address:'0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c',\n                }\n              },\n              NoClaim:{\n                abi:CovToken,\n                name:'COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                address:'0x53df0bfa014b7522299c129c5a7b318f02adb469',\n                balancerPool:{\n                  decimals:18,\n                  abi:BalancerPool,\n                  name:'BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM',\n                  address:'0xce0e9e7a1163badb7ee79cfe96b5148e178cab73',\n                }\n              }\n            }\n          },\n        ],\n      }\n    },\n    batchDeposit:{\n      enabled:true,\n      icon:'Storage',\n      claimEnabled:true,\n      depositEnabled:true,\n      route:'batch-deposit',\n      label:'Batch Deposit',\n      subComponent:BatchDeposit,\n      desc:'Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            strategy:'best',\n            baseToken:'DAI',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAI',\n              address:'0x633fb4d38B24dC890b11Db2AE2B248D13F996A79', // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  usePermit:true,\n                  label:'Deposit',\n                  permitName:'permitAndDeposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:6,\n            strategy:'best',\n            baseToken:'USDC',\n            minPoolSize:20000,\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDC',\n              address:'0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B', // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                  permitName:'permitEIP2612AndDepositUnlimited'\n                },\n              ]\n            },\n          },\n          /*\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  usePermit:true,\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  name:'deposit',\n                  label:'Deposit',\n                  usePermit:true,\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            migrationContract:{\n              abi:IdleBatchedMint,\n              name:'IdleBatchedMintUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n          */\n        }\n      }\n    },\n    batchMigration:{\n      enabled:true,\n      claimEnabled:true,\n      depositEnabled:false,\n      icon:'FileDownload',\n      route:'batch-migration',\n      label:'Batch Migration',\n      subComponent:BatchMigration,\n      desc:'Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4',\n      props:{\n        availableTokens:{\n          idleDAIYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'DAI',\n            name:'idleDAIYieldV3',\n            token:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAI',\n              address:'0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDC',\n            name:'idleUSDCYieldV3',\n            token:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDC',\n              address:'0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'USDT',\n            name:'idleUSDTYieldV3',\n            token:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDT',\n              address:'0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleSUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'SUSD',\n            name:'idleSUSDYieldV3',\n            token:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterSUSD',\n              address:'0xE2eE519399a49f1A2004a25DA61e82867A69b9b1',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleTUSDYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'TUSD',\n            name:'idleTUSDYieldV3',\n            token:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterTUSD',\n              address:'0x174a273f0ea28e55b6dd13259aa43d262b863a86',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleWBTCYield:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'best',\n            baseToken:'WBTC',\n            name:'idleWBTCYieldV3',\n            token:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterWBTC',\n              address:'0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleDAISafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'DAI',\n            name:'idleDAISafeV3',\n            token:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterDAISafe',\n              address:'0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDCSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDC',\n            name:'idleUSDCSafeV3',\n            token:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDCSafe',\n              address:'0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          },\n          idleUSDTSafe:{\n            decimals:18,\n            abi:IdleTokenV3,\n            strategy:'risk',\n            baseToken:'USDT',\n            name:'idleUSDTSafeV3',\n            token:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b',\n            migrationContract:{\n              abi:IdleBatchConverter,\n              name:'IdleBatchConverterUSDTSafe',\n              address:'0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619',\n              functions:[\n                {\n                  label:'Deposit',\n                  name:'deposit'\n                },\n              ]\n            },\n          }\n        }\n      }\n    },\n    tokenMigration:{\n      enabled:true,\n      icon:'SwapHoriz',\n      route:'convert',\n      label:'Token Migration',\n      desc:'Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle',\n      subComponent:TokenMigration,\n      props:{\n        migrationContract:{\n          name:'IdleConverterV4',\n          abi:IdleConverterPersonalSignV4,\n          address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n          oldAddresses:[],\n          functions:[\n            {\n              label:'Migrate',\n              name:'migrateFromToIdle'\n            },\n          ]\n        },\n        availableStrategies:['best','risk'],\n        availableTokens:{\n          idleDAIv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            baseToken:'DAI',\n            abi:IdleTokenV2,\n            token:'idleDAIOld',\n            icon:'images/tokens/idleDAI.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0x10eC0D497824e342bCB0EDcE00959142aAa766dD',\n          },\n          cDAI:{\n            decimals:8,\n            enabled:true,\n            token:\"cDAI\",\n            baseToken:'DAI',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\",\n          },\n          iDAI:{\n            decimals:18,\n            enabled:false,\n            token:\"iDAI\",\n            baseToken:'DAI',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x493c57c4763932315a328269e1adad09653b9081\",\n          },\n          aDAI:{\n            decimals:18,\n            enabled:true,\n            token:\"aDAI\",\n            protocol:\"aave\",\n            baseToken:'DAI',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\",\n          },\n          yDAIv3:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv3\",\n            abi:yDAIv3.abi,\n            baseToken:'DAI',\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xC2cB1040220768554cf699b0d863A3cd4324ce32\",\n          },\n          yDAIv2:{\n            decimals:18,\n            enabled:true,\n            token:\"yDAIv2\",\n            baseToken:'DAI',\n            abi:yDAIv3.abi,\n            protocol:\"iearn\",\n            icon:'images/tokens/yDAI.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\",\n          },\n          idleUSDCv2:{\n            decimals:18,\n            enabled:true,\n            protocol:'idle',\n            abi:IdleTokenV2,\n            baseToken:'USDC',\n            token:'idleUSDCOld',\n            icon:'images/tokens/idleUSDC.svg',\n            migrateFunction:'migrateFromToIdle',\n            address:'0xeB66ACc3d011056B00ea521F8203580C2E5d3991',\n          },\n          cUSDC:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDC\",\n            baseToken:'USDC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0x39aa39c021dfbae8fac545936693ac917d5e7563\",\n          },\n          iUSDC:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDC\",\n            baseToken:'USDC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\",\n          },\n          aUSDC:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDC\",\n            protocol:\"aave\",\n            baseToken:'USDC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\",\n          },\n          yUSDCv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv3\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x26EA744E5B887E5205727f55dFBE8685e3b21951\",\n          },\n          yUSDCv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDCv2\",\n            protocol:\"iearn\",\n            abi:yUSDCv3.abi,\n            baseToken:'USDC',\n            icon:'images/tokens/yUSDC.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\",\n          },\n          cUSDT:{\n            decimals:8,\n            enabled:true,\n            token:\"cUSDT\",\n            baseToken:'USDT',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\",\n          },\n          iUSDT:{\n            decimals:6,\n            enabled:false,\n            token:\"iUSDT\",\n            baseToken:'USDT',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0x8326645f3aa6de6420102fdb7da9e3a91855045b\",\n          },\n          aUSDT:{\n            decimals:6,\n            enabled:true,\n            token:\"aUSDT\",\n            protocol:\"aave\",\n            baseToken:'USDT',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\",\n          },\n          yUSDTv3:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv3\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\",\n          },\n          yUSDTv2:{\n            decimals:6,\n            enabled:true,\n            token:\"yUSDTv2\",\n            abi:yUSDTv3.abi,\n            protocol:\"iearn\",\n            baseToken:'USDT',\n            icon:'images/tokens/yUSDT.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\",\n          },\n          idleSUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'SUSD',\n            token:'idleSUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleSUSDYield.svg',\n            address:'0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5',\n          },\n          aSUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aSUSD\",\n            protocol:\"aave\",\n            baseToken:'SUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x625aE63000f46200499120B906716420bd059240\",\n          },\n          ySUSDv3:{\n            decimals:18,\n            enabled:true,\n            token:\"ySUSDv3\",\n            abi:ySUSDv3,\n            baseToken:'SUSD',\n            protocol:\"iearn\",\n            availableStrategies:['best'],\n            icon:'images/tokens/ySUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0xf61718057901f84c4eec4339ef8f0d86d2b45600\",\n          },\n          idleTUSDv2:{\n            decimals:18,\n            enabled:true,\n            abi:IdleTokenV2,\n            protocol:'idle',\n            baseToken:'TUSD',\n            token:'idleTUSDYieldOld',\n            availableStrategies:['best'],\n            migrateFunction:'migrateFromToIdle',\n            icon:'images/tokens/idleTUSDYield.svg',\n            address:'0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6',\n          },\n          aTUSD:{\n            decimals:6,\n            enabled:true,\n            token:\"aTUSD\",\n            protocol:\"aave\",\n            baseToken:'TUSD',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0x4DA9b813057D04BAef4e5800E36083717b4a0341\",\n          },\n          yTUSDv3:{\n            decimals:18,\n            enabled:true,\n            abi:yTUSDv3,\n            token:\"yTUSDv3\",\n            baseToken:'TUSD',\n            protocol:\"iearn\",\n            icon:'images/tokens/yTUSDv3.png',\n            migrateFunction:'migrateFromIearnToIdle',\n            address:\"0x73a052500105205d34daf004eab301916da8190f\",\n          },\n          cWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"cWBTC\",\n            baseToken:'WBTC',\n            protocol:\"compound\",\n            migrateFunction:'migrateFromCompoundToIdle',\n            address:\"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\",\n          },\n          iWBTC:{\n            decimals:8,\n            enabled:false,\n            token:\"iWBTC\",\n            baseToken:'WBTC',\n            protocol:\"fulcrum\",\n            migrateFunction:'migrateFromFulcrumToIdle',\n            address:\"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\",\n          },\n          aWBTC:{\n            decimals:8,\n            enabled:true,\n            token:\"aWBTC\",\n            protocol:\"aave\",\n            baseToken:'WBTC',\n            migrateFunction:'migrateFromAaveToIdle',\n            address:\"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\",\n          },\n        }\n      }\n    },\n    addFunds:{\n      enabled:true,\n      icon:'AddCircleOutline',\n      route:'add-funds',\n      label:'Add Funds',\n      desc:'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent:BuyModal,\n      directProps:{\n        showInline:true,\n        showAllTokens:true\n      }\n    },\n    insurance:{\n      enabled:false,\n      icon:'Security',\n      route:'nexus-mutual',\n      label:'Nexus Mutual',\n      desc:'Buy tokens with Bank account or Credit card',\n      subComponent:NexusMutual,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n        }\n      },\n      directProps:{\n        ens:'idlefinancev3.nexusmutual.eth',\n        address:'0x78751B12Da02728F467A44eAc40F5cbc16Bd7934'\n      }\n    },\n    tokenSwap:{\n      enabled:true,\n      icon:'Sync',\n      route:'token-swap',\n      label:'Token Swap',\n      desc:'Easily swap your tokens using Kyber Swap widget',\n      subComponent:TokenSwap,\n      props:{\n        availableTokens:{\n          \"ETH\":{\"token\":\"ETH\"},\n          \"DAI\":{\"token\":\"DAI\"},\n          \"SUSD\":{\"token\":\"SUSD\"},\n          \"TUSD\":{\"token\":\"TUSD\"},\n          \"USDC\":{\"token\":\"USDC\"},\n          \"USDS\":{\"token\":\"USDS\"},\n          \"USDT\":{\"token\":\"USDT\"},\n          \"WBTC\":{\"token\":\"WBTC\"},\n          \"WETH\":{\"token\":\"WETH\"},\n          \"BUSD\":{\"token\":\"BUSD\"},\n          \"EURS\":{\"token\":\"EURS\"},\n          \"2KEY\":{\"token\":\"2KEY\"},\n          \"ABT\":{\"token\":\"ABT\"},\n          \"ABYSS\":{\"token\":\"ABYSS\"},\n          \"AMPL\":{\"token\":\"AMPL\"},\n          \"ANT\":{\"token\":\"ANT\"},\n          \"BAM\":{\"token\":\"BAM\"},\n          \"BAND\":{\"token\":\"BAND\"},\n          \"BAT\":{\"token\":\"BAT\"},\n          \"BLZ\":{\"token\":\"BLZ\"},\n          \"BNT\":{\"token\":\"BNT\"},\n          \"BQX\":{\"token\":\"BQX\"},\n          \"BTU\":{\"token\":\"BTU\"},\n          \"CDT\":{\"token\":\"CDT\"},\n          \"CVC\":{\"token\":\"CVC\"},\n          \"DAT\":{\"token\":\"DAT\"},\n          \"DGX\":{\"token\":\"DGX\"},\n          \"EKG\":{\"token\":\"EKG\"},\n          \"ELF\":{\"token\":\"ELF\"},\n          \"ENJ\":{\"token\":\"ENJ\"},\n          \"EQUAD\":{\"token\":\"EQUAD\"},\n          \"FXC\":{\"token\":\"FXC\"},\n          \"GDC\":{\"token\":\"GDC\"},\n          \"GEN\":{\"token\":\"GEN\"},\n          \"GHT\":{\"token\":\"GHT\"},\n          \"GNO\":{\"token\":\"GNO\"},\n          \"IOST\":{\"token\":\"IOST\"},\n          \"KEY\":{\"token\":\"KEY\"},\n          \"KNC\":{\"token\":\"KNC\"},\n          \"LEND\":{\"token\":\"LEND\"},\n          \"LINK\":{\"token\":\"LINK\"},\n          \"LOOM\":{\"token\":\"LOOM\"},\n          \"LRC\":{\"token\":\"LRC\"},\n          \"MANA\":{\"token\":\"MANA\"},\n          \"MCO\":{\"token\":\"MCO\"},\n          \"MET\":{\"token\":\"MET\"},\n          \"MFG\":{\"token\":\"MFG\"},\n          \"MKR\":{\"token\":\"MKR\"},\n          \"MLN\":{\"token\":\"MLN\"},\n          \"MTL\":{\"token\":\"MTL\"},\n          \"MYB\":{\"token\":\"MYB\"},\n          \"NEXXO\":{\"token\":\"NEXXO\"},\n          \"NPXS\":{\"token\":\"NPXS\"},\n          \"OGN\":{\"token\":\"OGN\"},\n          \"OMG\":{\"token\":\"OMG\"},\n          \"OST\":{\"token\":\"OST\"},\n          \"PAX\":{\"token\":\"PAX\"},\n          \"PBTC\":{\"token\":\"PBTC\"},\n          \"PLR\":{\"token\":\"PLR\"},\n          \"PNK\":{\"token\":\"PNK\"},\n          \"POLY\":{\"token\":\"POLY\"},\n          \"POWR\":{\"token\":\"POWR\"},\n          \"PT\":{\"token\":\"PT\"},\n          \"QKC\":{\"token\":\"QKC\"},\n          \"QNT\":{\"token\":\"QNT\"},\n          \"RAE\":{\"token\":\"RAE\"},\n          \"REN\":{\"token\":\"REN\"},\n          \"REP\":{\"token\":\"REP\"},\n          \"REQ\":{\"token\":\"REQ\"},\n          \"RLC\":{\"token\":\"RLC\"},\n          \"RSR\":{\"token\":\"RSR\"},\n          \"RSV\":{\"token\":\"RSV\"},\n          \"SAN\":{\"token\":\"SAN\"},\n          \"SNT\":{\"token\":\"SNT\"},\n          \"SNX\":{\"token\":\"SNX\"},\n          \"SPIKE\":{\"token\":\"SPIKE\"},\n          \"SPN\":{\"token\":\"SPN\"},\n          \"TKN\":{\"token\":\"TKN\"},\n          \"TKX\":{\"token\":\"TKX\"},\n          \"TRYB\":{\"token\":\"TRYB\"},\n          \"UBT\":{\"token\":\"UBT\"},\n          \"UPP\":{\"token\":\"UPP\"},\n          \"ZRX\":{\"token\":\"ZRX\"}\n        }\n      },\n      directProps:{\n      }\n    }\n  },\n  payments: { // Payment methods & providers\n    methods:{\n      bank:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/bank.png',\n          caption:'Bank Account'\n        }\n      },\n      card:{\n        defaultProvider:null,\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/debit-card.png',\n          caption:'Credit Card'\n        }\n      },\n      wallet:{\n        defaultProvider:'zeroExInstant',\n        showDefaultOnly:false,\n        props:{\n          imageSrc:'images/ethereum-wallet.svg',\n          caption:'Ethereum Wallet',\n          imageProps:{\n            padding:['0','5px']\n          }\n        }\n      },\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: 'images/payments/wyre.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.75% fee ~',\n        supportedMethods:['card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        remoteResources:{},\n        env:'prod',\n        envParams:{\n          test:{\n            accountId:'AC_Q2Y4AARC3TP'\n          },\n          prod:{\n            accountId:'AC_PQQBX33XVEQ'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n              break;\n              case 'card':\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = 'https://pay.sendwyre.com/purchase';\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken ),\n            referrerAccountId,\n            redirectUrl:globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const wyreWidget = document.getElementById('wyre-widget');\n          if (!wyreWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById('wyreWidget_style')){\n              const wyreStyle = document.createElement('style');\n              wyreStyle.id = 'wyreWidget_style';\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        },\n      },\n      ramp: {\n        enabled:true,\n        imageSrc: 'images/payments/ramp.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods:['bank','card'],\n        badge: {\n          text:'NO ID REQUIRED',\n          color:'#fff',\n          bgColor:'#0cade4'\n        },\n        supportedTokens:['ETH','DAI','USDC'],\n        supportedCountries:['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'],\n        getInfo: (props) => {\n          const info = {};\n            switch (props.selectedMethod){\n              case 'bank':\n                info.supportedCountries = ['GBR','EUR'];\n                info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n              case 'card':\n                info.supportedCountries = ['USA','GBR','AUS','BRA','CAN','EUR','HKG','IND','MEX','RUS','ZAF','KOR'];\n                info.subcaption = `~ 2.90% fee ~`;\n              break;\n              default:\n              break;\n            }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n        \treturn {\n\t          hostAppName: 'Idle',\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? 'mobile' : 'desktop',\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken ? buyParams.selectedToken : ( props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset ? props.tokenConfig.ramp.swapAsset : props.selectedToken )\n        \t};\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on('*', async (event) => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type){\n                case 'PURCHASE_SUCCESSFUL':\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil.BNify(tokenAmount.toString()).div(functionsUtil.BNify(Math.pow(10,parseInt(tokenDecimals)).toString())).toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: 'light',\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\",\n                  });\n\n                break;\n                default:\n                break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled:true,\n        imageSrc: 'images/payments/transak.png',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption:`~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods:['bank','card'],\n        supportedCountries:['USA','GBR','AUS','BRA','CHN','MEX','EUR','IND'],\n        supportedTokens:['ETH','DAI','USDC','USDT','TUSD','SUSD','WBTC'],\n        remoteResources:{'https://global.transak.com/v1/widget.js':{}},\n        env:'prod',\n        badge:{\n          text:'INSTANT',\n          bgColor:'#0069ee'\n        },\n        envParams:{\n          test:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_TEST,\n            url:'https://global.transak.com'\n          },\n          prod:{\n            apiKey:env.REACT_APP_TRANSAK_KEY_PROD,\n            url:'https://global.transak.com'\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === 'bank' ? '1.5%' : '4.5%';\n\n          if (props.selectedCountry && props.selectedCountry.value){\n            switch (props.selectedCountry.value.toUpperCase()){\n              case 'GBR':\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n              break;\n              case 'IND':\n                fee = '1.0%';\n                info.badge = {\n                  text:'INSTANT',\n                  bgColor:'#0069ee'\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n              break;\n              case 'EUR':\n                if (selectedMethod === 'bank'){\n                  info.badge = {\n                    text:'SEPA',\n                    color:'#f7cb05 ',\n                    bgColor:'#10288a'\n                  };\n                } else {\n                  info.badge = {\n                    text:'INSTANT',\n                    bgColor:'#0069ee'\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams = globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value){\n            switch (buyParams.selectedCountry.value.toUpperCase()){\n              case 'IND':\n                fiatCurrency = 'INR';\n              break;\n              case 'GBR':\n                fiatCurrency = 'GBP';\n              break;\n              case 'EUR':\n                fiatCurrency = 'EUR';\n              break;\n              case 'USA':\n                fiatCurrency = 'USD';\n              break;\n              default:\n                fiatCurrency = 'GBP';\n              break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.transak && props.tokenConfig.transak.currencyCode ? props.tokenConfig.transak.currencyCode : props.selectedToken);\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width:'100%',\n            height:'100%'\n            // email,\n          };\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          if (window.transakGlobal){\n\n            const transakWidget = document.getElementById('transak-widget');\n            if (!transakWidget){\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById('transakWidget_style')){\n                const transakStyle = document.createElement('style');\n                transakStyle.id = 'transakWidget_style';\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, 'transak-widget-container');\n          }\n        }\n      },\n      moonpay: {\n        enabled:true,\n        imageSrc: 'images/payments/moonpay.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 4.5% fee ~',\n        supportedMethods:['card','bank'],\n        supportedCountries:['GBR','EUR','AUS','BRA','CHN','MEX','CAN','HKG','RUS','ZAF','KOR'],\n        supportedTokens:['USDC','DAI','ETH'],\n        env:'prod',\n        envParams:{\n          test:{\n            url:'https://buy-staging.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod:{\n            url:'https://buy.moonpay.io',\n            apiKey:env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: (props) => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod){\n            switch (props.selectedMethod){\n              case 'bank':\n                if (props.selectedCountry && props.selectedCountry.value){\n                  switch (props.selectedCountry.value.toUpperCase()){\n                    case 'EUR':\n                      info.badge = {\n                        text:'SEPA',\n                        color:'#f7cb05 ',\n                        bgColor:'#10288a'\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                    break;\n                    case 'GBR':\n                      info.badge = {\n                        text:'GBP',\n                      }\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                    break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                    break;\n                  }\n                }\n              break;\n              case 'card':\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n              break;\n              default:\n              break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props,globalConfigs,buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams = globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken ? buyParams.selectedToken.toLowerCase() : ( props.tokenConfig.moonpay && props.tokenConfig.moonpay.currencyCode ? props.tokenConfig.moonpay.currencyCode : props.selectedToken.toLowerCase()),\n            walletAddress:props.account,\n            baseCurrencyCode:'USD',\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            'bank':{\n              'GBR':'gbp_bank_transfer',\n              'EUR':'sepa_bank_transfer'\n            },\n            'card':'credit_debit_card'\n          };\n\n          const selectedCountry = buyParams.selectedCountry && buyParams.selectedCountry.value ? buyParams.selectedCountry.value.toUpperCase() : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod){\n            switch (buyParams.selectedMethod){\n              case 'bank':\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod]['EUR'];\n                switch (selectedCountry){\n                  case 'GBR':\n                  case 'EUR':\n                    params.enabledPaymentMethods = methods[buyParams.selectedMethod][selectedCountry];\n                  break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(methods[buyParams.selectedMethod]).join(',');\n                  break;\n                }\n              break;\n              case 'card':\n              default:\n                params.enabledPaymentMethods = methods[buyParams.selectedMethod];\n              break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry){\n            case 'GBR':\n              params.baseCurrencyCode = 'GBP';\n            break;\n            case 'EUR':\n              params.baseCurrencyCode = 'EUR';\n            break;\n            default:\n              params.baseCurrencyCode = 'USD';\n            break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (!document.cookie.match(/^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/)) {\n              document.cookie = \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props,globalConfigs) => {\n          const moonpayWidget = document.getElementById('moonpay-widget');\n          if (!moonpayWidget){\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById('moonpayWidget_style')){\n              const moonpayStyle = document.createElement('style');\n              moonpayStyle.id = 'moonpayWidget_style';\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: 'images/payments/zeroexinstant.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        remoteResources:{'https://instant.0x.org/v3/instant.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onSuccess,onClose) => {\n\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context ? window.RimbleWeb3_context.connectorName : null;\n\n          if (!tokenParams.zeroExInstant){\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider: connectorName && connectorName!=='Injected' && window.RimbleWeb3_context.connector[connectorName.toLowerCase()] ? window.RimbleWeb3_context.connector[window.RimbleWeb3_context.connectorName.toLowerCase()].provider : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount) => {\n          if (window.zeroExInstant && initParams){\n            if (amount){\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, 'body');\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: 'images/payments/kyber.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Swap with',\n        captionPos: 'top',\n        subcaption: '~ 0.25% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['WETH','USDC','DAI','USDT','TUSD','SUSD','WBTC','RAI'],\n        web3Subscription:{ // Data for web3 subscription\n          enabled: true,\n          contractAddress: '0x818e6fecd516ecc3849daf6845e3ec868087b755',\n          decodeLogsData: [\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_startAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"address\",\n              \"name\": \"_tokenAddress\",\n              \"type\": \"address\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_startAmount\",\n              \"type\": \"uint256\"\n            },\n            {\n              \"internalType\": \"uint256\",\n              \"name\": \"_tokenAmount\",\n              \"type\": \"uint256\"\n            },\n          ],\n        },\n        remoteResources:{\n          'https://widget.kyber.network/v0.7.5/widget.css':{},\n          'https://widget.kyber.network/v0.7.5/widget.js':{\n            parentElement:document.body,\n            precall: (props,globalConfigs,providerInfo) => {\n\n              // Remove previous elements\n              const buttons = document.querySelectorAll('.kyber-widget-button');\n              for (let i=0;i<buttons.length;i++){\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll('.script_kyberSwap');\n              for (let i=0;i<scripts.length;i++){\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId ? props.buttonId : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)){\n                const a = document.createElement('a');\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props,globalConfigs);\n                a.target = '_blank';\n                a.rel = 'nofollow noopener noreferrer';\n                a.className = 'kyber-widget-button theme-ocean theme-supported';\n                a.title = 'Swap with Kyber';\n                a.style = 'display:none;';\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props,globalConfigs,buyParams=null) => {\n          const baseToken = props.baseToken ? props.baseToken : 'ETH';\n          const params = {\n            lang:'en',\n            type:'swap',\n            mode:'iframe',\n            theme:'theme-ocean',\n            paramForwarding:true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens:`${baseToken}_${props.selectedToken}`,\n            title:`Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair:`${baseToken}_${props.selectedToken}`,\n            commissionId:'0x4215606a720477178AdFCd5A59775C63138711e8',\n            network: globalConfigs.network.requiredNetwork === 1 ? 'mainnet' : 'test',\n          };\n\n          const url  = 'https://widget.kyber.network/v0.7.5/';\n\n          return `${url}?`+Object.keys(params)\n              .map(k => encodeURIComponent(k) + '=' + encodeURIComponent(params[k]))\n              .join('&');\n        },\n        render: (initParams,amount,props) => {\n          const buttonId = props.buttonId ? props.buttonId :`kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a){\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n                      \n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: 'images/payments/airswap.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://cdn.airswap.io/airswap-instant-widget.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            env: 'production',\n            mode: 'buy',\n            token: props.tokenConfig.address,\n            baseToken: 'ETH',\n            onComplete: onComplete ? onComplete : () => {},\n            onClose: onClose ? onClose : () => {}\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.AirSwapInstant){\n            if (amount){\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams,'body');\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: 'images/payments/totle.svg',\n        imageProps: {\n          width: ['100%','auto'],\n          height: ['auto','35px'],\n          my: '8px'\n        },\n        caption: 'Buy with',\n        captionPos: 'top',\n        subcaption: '~ 0% fee ~',\n        supportedMethods:['wallet'],\n        supportedTokens:['USDC','DAI'],\n        env:'production',\n        remoteResources:{'https://widget.totle.com/latest/dist.js':{}},\n        getInitParams: (props,globalConfigs,buyParams,onComplete,onClose) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null,\n          };\n        },\n        render: (initParams,amount,props) => {\n          if (window.TotleWidget){\n            const nodeId = 'totle-widget';\n            if (!document.getElementById(nodeId)){\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(initParams,document.getElementById(nodeId));\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      if (this.tokenConfig && this.tokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\n\nconst ethereumjsABI = require('ethereumjs-abi');\nconst env = process.env;\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3){\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber( typeof s === 'object' ? s : String(s) )\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'),...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'),...props); }\n  getContractByName = (contractName) => {\n    const contract = this.props.contracts.find(c => c.name === contractName);\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g,\"\\n\")\n            .replace(/<p>/g,\"\")\n            .replace(/<br>/g,\"\")\n            .replace(/&nbsp;/g,\" \")\n            .replace(/<\\/p>/g,\"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0,1).toUpperCase()+str.substr(1) : '';\n  }\n  strToMoment = (date,format=null) => {\n    return moment(date,format);\n  }\n  replaceArrayProps = (arr1,arr2) => {\n    if (arr2 && Object.keys(arr2).length){\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  stripHtml = (html) => {\n     var tmp = document.createElement(\"DIV\");\n     tmp.innerHTML = html;\n     return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d/2;\n      if (t < 1) return c/2*t*t + b;\n      t--;\n      return -c/2 * (t*(t-2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n        currentTime += increment;\n        var val = Math.easeInOutQuad(currentTime, start, change, duration);\n        window.scrollTo(0,val);\n        if(currentTime < duration) {\n          window.setTimeout(animateScroll, increment);\n        }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n        results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx,tokenConfig) => {\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();    \n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1 ) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx){\n      action = 'Deposit';\n    } else if (isRedeemTx){\n      action = 'Redeem';\n    } else if (isMigrationTx){\n      action = 'Migrate';\n    } else if (isSendTransferTx){\n      action = 'Send';\n    } else if (isReceiveTransferTx){\n      action = 'Receive';\n    } else if (isSwapTx){\n      action = 'Swap';\n    } else if (isSwapTx){\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = hash => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, 7);\n    const txEnd = shortHash.substr(shortHash.length - 4);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const ensConfig = this.getGlobalConfig(['network','providers','ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)){\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3){\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1){\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name){\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,ensName.name,TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolio = async (availableTokens=null,account=null) => {\n    const portfolio = {\n      tokensBalance:{},\n      avgAPY:this.BNify(0),\n      totalBalance:this.BNify(0),\n      totalEarnings:this.BNify(0),\n      totalAmountLent:this.BNify(0),\n      totalEarningsPerc:this.BNify(0),\n      totalBalanceConverted:this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens){\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const idleTokenBalance = await this.getTokenBalance(tokenConfig.idle.token,account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance,token,tokenConfig,isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()){\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach( token => {\n      if (portfolio.tokensBalance[token]){\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens,async (token) => {\n      const tokenConfig = availableTokens[token];\n      const amountDeposited = await this.getAmountDeposited(tokenConfig,account);\n\n      // console.log(token,'amountDeposited',amountDeposited.toString(),'amountLent',amountLents[token].toString());\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n      const [\n        tokenAprs\n        // tokenEarnings\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig)\n        // this.loadAssetField('earnings',token,tokenConfig,this.props.account,false),\n      ]);\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings){\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY){\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken){\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)){\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // debugger;\n\n    return portfolio;\n  }\n  getCurveAvgSlippage = async (enabledTokens=[],account=null,fixDecimals=true) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]){\n              processedTxs[tx.hash] = {\n                price:null,\n                received:null,\n                slippage:null,\n                deposited:this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null){\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]){\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)){\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach( tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens=[],account=null) => {\n    account = account ? account : this.props.account;\n\n    if (!account){\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length){\n\n      curveTxs.forEach((tx,index) => {\n\n        if (!processedTxs[tx.hash]){\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)){\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice){\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action){\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn'){\n              if (index>0 && curveTokensBalance.gt(0)){\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n          break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n          // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n          break;\n          default:\n          break;\n        }\n        \n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)){\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    enabledTokens.forEach( selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance= this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice){\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action){\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n            break;\n            default:\n            break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)){\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens=[],account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx){\n                firstDepositTx = tx;\n              }\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens=[],account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens,account);\n    if (firstDepositTxs){\n      return Object.keys(firstDepositTxs).reduce( (acc,token) => {\n        if (firstDepositTxs[token]){\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      },{});\n    }\n\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig,account) => {\n    let [tokenBalance,userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,account),\n      this.genericContractCall(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice){\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice,tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return amountDeposited;\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens=[],account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens){\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account,0,'latest',enabledTokens,false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        filteredTxs.forEach((tx,index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount){\n            return false;\n          }\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getEtherscanBaseTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network','firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber,firstBlockNumber);\n\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n\n    let results = [];\n    let etherscanBaseTxs = null;\n    let etherscanBaseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      etherscanBaseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      etherscanBaseTxs = this.getCachedRequest(etherscanBaseEndpoint);\n\n      if (debug){\n        console.log('DEBUG - CACHED - etherscanBaseTxs',etherscanBaseTxs);\n      }\n\n      // Check if the latest blockNumber is actually the latest one\n      if (etherscanBaseTxs && etherscanBaseTxs.data.result && Object.values(etherscanBaseTxs.data.result).length){\n\n        const lastCachedTx = Object.values(etherscanBaseTxs.data.result).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.blockNumber ? parseInt(lastCachedTx.blockNumber)+1 : firstBlockNumber;\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        let latestTxs = await this.makeCachedRequest(etherscanEndpointLastBlock,15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length){\n          \n          latestTxs = await this.filterEtherscanTxs(latestTxs.data.result,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length){\n\n            const latestBlockNumbers = Object.values(latestTxs).map( lastTx => (parseInt(lastTx.blockNumber)) );\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber>=lastCachedBlockNumber){\n              // Merge latest Txs with etherscanBaseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(etherscanBaseTxs.data.result).includes(tx.hashKey);\n                if (!txFound){\n                  etherscanBaseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanBaseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        etherscanBaseTxs = null;\n      }\n\n      let txs = etherscanBaseTxs;\n\n      if (debug){\n        console.log('DEBUG - txs',txs);\n      }\n\n      if (!txs){\n        // Make request\n        txs = await this.makeRequest(etherscanBaseEndpoint);\n\n        // console.log('makeRequest 1',account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status)===0){\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(etherscanBaseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,etherscanBaseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount<5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status)>0){\n          const timestamp = parseInt(Date.now()/1000);\n          const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          cachedRequests[etherscanBaseEndpoint] = {\n            data:txs,\n            timestamp\n          };\n          this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n      }\n\n      if (txs && txs.data && txs.data.result){\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    };\n  }\n  getCurveTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[]) => {\n    const results = await this.getEtherscanTxs(account,firstBlockNumber,endBlockNumber,enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results,enabledTokens);\n  }\n  saveEtherscanTxs = (endpoint,txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')){\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data:{\n        result:txsToStore\n      }\n    };\n    this.saveCachedRequest(endpoint,false,cachedRequest);\n  }\n  getEtherscanTxs = async (account=false,firstBlockNumber=0,endBlockNumber='latest',enabledTokens=[],debug=false) => {\n    const {\n      results,\n      etherscanBaseTxs,\n      etherscanBaseEndpoint\n    } = await this.getEtherscanBaseTxs(account,firstBlockNumber,endBlockNumber,enabledTokens,debug);\n\n    // Initialize prevTxs\n    let etherscanTxs = {};\n    if (etherscanBaseTxs){\n      // Filter txs for token\n      etherscanTxs = await this.processStoredTxs(results,enabledTokens);\n    } else {\n      const allAvailableTokens = Object.keys(this.props.availableTokens);\n      // Save base endpoint with all available tokens\n      etherscanTxs = await this.filterEtherscanTxs(results,allAvailableTokens);\n\n      // Store filtered txs\n      if (etherscanTxs && Object.keys(etherscanTxs).length){\n        this.saveEtherscanTxs(etherscanBaseEndpoint,etherscanTxs);\n      }\n    }\n\n    if (debug){\n      console.log('DEBUG - getEtherscanTxs -',etherscanTxs);\n    }\n\n    return Object\n            .values(etherscanTxs)\n            .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n            .sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  filterCurveTxs = async (results,enabledTokens=[]) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter( tx => (enabledTokens.includes(tx.token) && ['CurveIn','CurveOut','CurveZapIn','CurveZapOut','CurveTransferIn','CurveTransferOut','CurveDepositIn','CurveDepositOut'].includes(tx.action)) );\n\n    if (curveTxs.length){\n      curveTxs.sort((a,b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  filterEtherscanTxs = async (results,enabledTokens=[],processTxs=true,processStoredTxs=true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function'){\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract','methods','deposit','proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools','tokenMigration','props','migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools','batchMigration','props','availableTokens',tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',tokenConfig.idle.token]);\n\n      results.forEach( tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length>1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length>0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find( iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 )) );\n        const isRedeemInternalTx = isRightToken && internalTxs.find( iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase() );\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase()) ) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length>0 ));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length>1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase()) ).length>0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find( tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase()) ) );\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut){\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx){\n            action = 'Deposit';\n          } else if (isRedeemTx){\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx){\n            action = 'Migrate';\n          } else if (isSendTransferTx){\n            action = 'Send';\n          } else if (isReceiveTransferTx){\n            action = 'Receive';\n          } else if (isSwapTx){\n            action = 'Swap';\n          } else if (isSwapOutTx){\n            action = 'SwapOut';\n          } else if (isWithdrawTx){\n            action = 'Withdraw';\n          } else if (isCurveDepositTx){\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx){\n            action = 'CurveOut';\n          } else if (isCurveZapIn){\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut){\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn){\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut){\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn){\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut){\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx){\n            hashKey += '_'+tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value,curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)){\n              hashKey+='_'+action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()){\n            tokenDecimals = 18;\n          } else if (isCurveTx){\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]){\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action){\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx){\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value,tokenDecimals);\n                }\n              break;\n              default:\n                if (!curveTx){\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value,tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n              break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut){\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTokens = this.fixTokenDecimals(tx.value,curvePoolContract.decimals);\n                curveTransfersTxs.push({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n              }\n            } else {\n              etherscanTxs[hashKey] = ({...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value,tokenDecimals)});\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action){\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length>0){\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value,iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                break;\n                default:\n                break;\n              }\n            }   \n          }\n        }\n      });\n    });\n    \n    curveTransfersTxs.forEach( tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())){\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n  \n    if (processTxs){\n      etherscanTxs = await this.processEtherscanTransactions(etherscanTxs,enabledTokens,processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey,transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]){\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]){\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]){\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions',JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account=null,tokenKey=null,selectedToken=null) => {\n    const storedTxs = this.getStoredItem('transactions',true,{});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account){\n      if (storedTxs[account]){\n        output = storedTxs[account];\n        if (tokenKey){\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken){\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()){\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processEtherscanTransactions = async (etherscanTxs,enabledTokens=[],processStoredTxs=true) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object'){\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n    Object.keys(curveAvailableTokens).forEach( token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats','tokens',curveTokenConfig.baseToken]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve','zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object'){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = {...storedTxs[this.props.account][tokenKey]};\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        await this.asyncForEach(filteredTxs,async (tx,index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n          \n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()){\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig,tx.blockNumber,tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash){\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action){\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n            break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount){\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n            break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount){\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n            break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n            break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n            break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount){\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length-1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x','').toLowerCase()}` ) );\n\n                  this.customLog('filteredLogs',filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length){\n                    filteredLogs.forEach( log => {\n                      let tokenAmount = parseInt(log.data,16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount ('+tx.hash+')',baseTokensConfig.token,tokenAmount.toFixed(5),storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n            break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice){\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens){\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise( async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n                    if (err){\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt){\n                  const curveTokenConfig = this.getGlobalConfig(['curve','availableTokens',idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]){\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter( log => (log.address.toLowerCase()===idleTokenAddress ) );\n                  if (filteredLogs && filteredLogs.length){\n                    idleTokens = parseInt(filteredLogs[0].data,16);\n                    idleTokens = this.fixTokenDecimals(idleTokens,idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n            break;\n            default:\n            break;\n          }\n            \n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs){\n        etherscanTxs = await this.processStoredTxs(etherscanTxs,[selectedToken],this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs,enabledTokens=[],txsToProcess=null) => {\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions',true,{})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]){\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({},etherscanTxs);\n\n    const networkId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]){\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account,tokenKey,selectedToken);\n      \n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess),async (txKey,i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))){\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken:'Deposit',\n          redeemIdleToken:'Redeem',\n          migrateFromToIdle:'Migrate',\n          mintIdleTokensProxy:'Deposit',\n          migrateFromAaveToIdle:'Migrate',\n          migrateFromIearnToIdle:'Migrate',\n          executeMetaTransaction:'Migrate',\n          migrateFromFulcrumToIdle:'Migrate',\n          migrateFromCompoundToIdle:'Migrate',\n        };\n        const pendingStatus = ['pending','started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice){\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length){\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status:'Pending',\n            token:selectedToken,\n            action:allowedMethods[tx.method],\n            timeStamp:parseInt(tx.created/1000),\n            hash:txHash ? tx.transactionHash : null,\n            tokenSymbol:isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0],decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed){\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx){\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise( async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash,(err,txReceipt)=>{\n              if (err){\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())){\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig,realTx.blockNumber,realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created/1000);\n\n        let txValue = null;\n        switch (tx.method){\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()){\n              // Remove wrong contract tx\n              if (isStoredTx){\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0],tokenConfig.decimals).toString() : 0;\n            if (!txValue){\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n          break;\n          case 'redeemIdleToken':\n            if (!tx.params){\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice){\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0],18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n          break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt){\n              executeMetaTransactionReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract','deposit','proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length){\n              if (executeMetaTransactionReceipt.logs){\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x','').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo){\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x','').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events){\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase()===tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length){\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length){\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data,16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data,16) : null;\n\n            if (!metaTxValue){\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue,tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n          break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract){\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt){\n              migrationTxReceipt = await (new Promise( async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash,(err,tx)=>{\n                  if (err){\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt){\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt){\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx){\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x','');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x','');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length>=3 && tx.topics[tx.topics.length-2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length){\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ],migrationInternalTransfer.data,migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token){\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue,tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n          break;\n          default:\n          break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx){\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs){\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint,alias=false,data) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    const timestamp = parseInt(Date.now()/1000);\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress',false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress',customAddress);\n  }\n  getCachedRequest = (endpoint,alias=false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]){\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  makeRequest = async(endpoint,error_callback=false,config=null) => {\n    const data = await axios\n                  .get(endpoint,config)\n                  .catch(err => {\n                    if (typeof error_callback === 'function'){\n                      error_callback(err);\n                    }\n                  });\n    return data;\n  }\n  makeEtherscanApiRequest = async (endpoint,keys=[],TTL=120,apiKeyIndex=0) => {\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp-cachedRequests[endpoint].timestamp<TTL){\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint+'&apikey='+apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint,apiKeyIndex+'/'+keys.length,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && data.data.message === 'OK'){\n      cachedRequests[endpoint] = {\n        data,\n        timestamp\n      };\n      this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n      return data;\n    } else if (apiKeyIndex<keys.length-1) {\n      return await this.makeEtherscanApiRequest(endpoint,keys,TTL,apiKeyIndex+1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint,TTL=60,return_data=false,alias=false,config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now()/1000);\n    \n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp-cachedRequests[key].timestamp<TTL){\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makeRequest(endpoint,false,config);\n\n    cachedRequests[key] = {\n      data,\n      timestamp\n    };\n    this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)){\n      const errorCode = parseInt(error.code);\n      switch (errorCode){\n        case 4001:\n          output = 'denied';\n        break;\n        default:\n          output = `error_${errorCode}`;\n        break;\n      }\n    } else if (error.message){\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path,array) => {\n    path = Object.assign([],path);\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path,array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path,configs=false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length>0){\n      const prop = path.shift();\n      if (!path.length){\n        return configs[prop] ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path,configs[prop]);\n      }\n    }\n    return null;\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page=null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics','google','pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga){\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData,callback=null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && ( debugEnabled || originOk)){\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet){\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1){\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n        // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise( async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function'){\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function'){\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\",name,address,error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider=null) => {\n    return this.getStoredItem('walletProvider',false,defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo,simpleID) => {\n    if (!userInfo.address && this.props.account){\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider){\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email){\n      delete userInfo.email;\n    }\n    if (!userInfo.address){\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID){\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const baseurl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',requiredNetwork]);\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const baseurl = this.getGlobalConfig(['network','providers','etherscan','baseUrl',requiredNetwork]);\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly=false) => {\n\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network','providers','snapshot','whitelist']).map( addr => addr.toLowerCase() );\n    const endpoint = this.getGlobalConfig(['network','providers','snapshot','endpoints','proposals']);\n    let proposals = await this.makeCachedRequest(endpoint,1440,true);\n\n    if (proposals){\n      proposals = Object.values(proposals);\n\n      const currTime = parseInt(Date.now()/1000);\n      if (activeOnly){\n        proposals =  proposals.filter( p => (p.msg.payload.start<=currTime && p.msg.payload.end>currTime) );\n      }\n\n      // console.log(proposals);\n\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        // Add proposal if ended\n        if (p.msg.payload.end<=currTime || whitelist.includes(p.address.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.msg.payload.snapshot;\n\n          let checkedStrategies = false;\n          await this.asyncForEach( p.msg.payload.metadata.strategies, async (s) => {\n            if (checkedStrategies){\n              return;\n            }\n            if (s.name==='erc20-balance-of'){\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract){\n                const tokenBalance = await this.getTokenBalance(tokenName,p.address,true,blockNumber);\n                // console.log(p.relayerIpfsHash,p.address,s.name,tokenBalance ? tokenBalance.toFixed() : null);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)){\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n\n            // console.log(p.relayerIpfsHash,p.address,s.name,checkedStrategies);\n          });\n          \n          // Add proposal is passed token balances check\n          if (checkedStrategies){\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey,validProposals);\n    }\n\n  }\n  getTokenApiData = async (address,isRisk=null,startTimestamp=null,endTimestamp=null,forceStartTimestamp=false,frequency=null,order=null,limit=null) => {\n    if (globalConfigs.network.requiredNetwork!==1 || !globalConfigs.stats.enabled){\n      return [];\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData){\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter( c => ( (c.startTimestamp===null || (startTimestamp && c.startTimestamp<=startTimestamp)) && (c.endTimestamp===null || (endTimestamp && c.endTimestamp>=endTimestamp)) ) )\n\n      if (filteredCachedData && filteredCachedData.length>0){\n        const filteredData = filteredCachedData.pop().data;\n        if (filteredData){\n          return filteredData.filter( d => ((!startTimestamp || d.timestamp>=startTimestamp) && (!endTimestamp || d.timestamp<=endTimestamp)) );\n        }\n        return null;\n      }\n    // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    let endpoint = `${apiInfo.endpoint}${address}`;\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null){\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)){\n        if (forceStartTimestamp){\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp-(60*60*24*2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)){\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null){\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)){\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null){\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)){\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length){\n        endpoint += '?'+params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    let output = await this.makeRequest(endpoint,false,config);\n    if (!output){\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null){\n      filteredData = data.filter( d => ( d.isRisk === isRisk ) );\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data:filteredData,\n    });\n\n    this.setCachedData(cachedDataKey,cachedData);\n\n    return data;\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName ? contractName : this.props.selectedToken;\n    return await this.genericContractCall(contractName,'decimals');\n  }\n  getAvgApr = (aprs,allocations,totalAllocation) => {\n    if (aprs && allocations && totalAllocation){\n      let avgApr = Object.keys(aprs).reduce((aprWeighted,protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      },0);\n\n      if (avgApr){\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency,quantity=1) => {\n    const frequency_seconds = {\n      hour:3600,\n      day:86400,\n      week:604800\n    };\n    return frequency_seconds[frequency]*quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens','IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint,etherscanInfo.keys,3600);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function'){\n      return etherscanTxlist.data.result.filter( tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0) ));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance,tokenDecimals,round=true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed();\n  }\n  fixTokenDecimals = (tokenBalance,tokenDecimals,exchangeRate=null) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()){\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName=null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCall(contractName, 'paused', [], {}).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key,parse_json=true,return_default=null) => {\n    let output = return_default;\n    if (window.localStorage){\n      const item = localStorage.getItem(key);\n      if (item){\n        output = item;\n        if (parse_json){\n          output = JSON.parse(item);\n        }\n      }\n    }\n    if (!output){\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys=[]) => {\n    if (window.localStorage){\n\n      if (!excludeKeys || !excludeKeys.length){\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i=0;i<window.localStorage.length;i++){\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)){\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage){\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key,value,stringify=false) => {\n    if (window.localStorage){\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key,value);\n        return true;\n      } catch (error) {\n        // this.customLog('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig){\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length){\n      return false;\n    }\n\n    for (let protocolIndex=0;protocolIndex<allocations.length;protocolIndex++){\n      const lastAllocationsPromise = new Promise( async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations',[protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations){\n      return true;\n    }\n\n    const diff = allocations.filter( (alloc,index) => alloc !== newAllocations[index] );\n\n    return diff.length>0;\n  }\n  checkMigration = async (tokenConfig,account) => {\n\n    if (!tokenConfig || !account){\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled){\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract){\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName,account);\n\n        if (oldContractBalance){\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  getContractEvents = async (contractName, eventName, params = {}) => {\n    return await this.getContractPastEvents(contractName, eventName, params);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]){\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n      \n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({from: account})\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit){\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice,9).times(gasLimit),9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function(hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function(confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\",receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null,error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\",\"address\",\"uint256\",\"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network','providers','biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`,null,{\n      headers:{\n        'x-api-key':biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data){\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName,methodName,methodParams,nonce,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]){\n      callback(null,'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try{\n      const userAddress = this.props.account;\n      const chainId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null,error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName,tokenAddress,permitType,callData,gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      return false;\n    }\n\n    console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx({\n      permitType,\n      data:callData,\n      token:tokenAddress,\n      to:contract._address,\n      txGas:Number(gasLimit)\n    });\n\n    return tx;\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req,metaInfo,callback,callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({req,metaInfo});\n      transactionHash = txResponse.txHash;\n      console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null,true);\n      return false;\n    }\n\n    if (!transactionHash){\n      console.log('!transactionHash ERROR');\n      callback(null,true);\n      return false;\n    }\n    \n    const tx = {\n      method:'mintIdleToken',\n      transactionHash\n    };\n    console.log('sendBiconomyTxWithErc20Forwarder',transactionHash);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(()=> {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt)=> {\n        console.log('sendBiconomyTxWithErc20Forwarder',transactionHash,err,receipt);\n        if(!err && receipt){\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx,err);\n\n          if (typeof window.updateTransaction === 'function'){\n            window.updateTransaction(tx,transactionHash,tx.status,null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName,functionSignature,callback,callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    try{\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null,error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce=0) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit',baseContractName]);\n\n    // console.log('permitConfig',permitConfig);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce>0){\n      nonce = parseInt(nonce)+parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion){\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        const value = this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n      break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n      break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit=null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract){\n      callback(null,'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters){\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find( f => f.name === methodName );\n      const useNonce = methodAbi ? methodAbi.inputs.find( i => i.name === 'nonce' ) : true;\n      if (!isNaN(parseInt(nonce)) && useNonce){\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null,'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName,contractAddress,functionSignature,callback,callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract){\n      callback(null,'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null,error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n            \n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName,contractAddr,walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName,walletAddr,false),\n      this.getAllowance(contractName,contractAddr,walletAddr)\n    ]);\n    this.customLog('checkTokenApproved',contractName,this.BNify(allowance).toFixed(),this.BNify(balance).toFixed(),(allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName,contractAddr,walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr){\n      return false;\n    }\n    this.customLog('getAllowance',contractName,contractAddr,walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapper = (contractName,methodName,params,callback,callback_receipt,txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  disableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName,address,callback,callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ],null,(tx)=>{\n      if (typeof callback === 'function'){\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function'){\n        callback_receipt(tx);\n      }\n    });\n  }\n  loadAssetField = async (field,token,tokenConfig,account,addGovTokens=true,addCurveApy=false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies',this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined'){\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken){\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig){\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)){\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field){\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([],account),\n          this.getCurveTokenBalance(account,true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance){\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage){\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n      break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1,redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)){\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n      break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n      break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n      break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n      break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy',token,tokenConfig,account),\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve){\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n      break;\n      case 'earningsPerc':\n        let [amountLent1,redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)){\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n      break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp',token,tokenConfig,account);\n        if (depositTimestamp){\n          const currTimestamp = parseInt(Date.now()/1000);\n          output = (currTimestamp-depositTimestamp)/86400;\n        }\n      break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig,addGovTokens);\n        }\n      break;\n      case 'userDistributionSpeed':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account,govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account,govTokenAvailableTokens);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n          if (output){\n            output = this.fixDistributionSpeed(output,tokenConfig.distributionFrequency,tokenConfig.distributionMode);\n          }\n        }\n      break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance','props','tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens',tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output){\n\n          output = this.fixTokenDecimals(output,govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency){\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n            break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n            break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n            break;\n            case 'year':\n              output = output.times(blocksPerYear);\n            break;\n            default:\n            break;\n          }\n        }\n      break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token){\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n          break;\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n          break;\n          default:\n          break;\n        }\n        if (output && !this.BNify(output).isNaN()){\n          output = this.BNify(output).div(1e18);\n        }\n      break;\n      case 'apr':\n        switch (token){\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n          break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n          break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n            if (tokenAprs && tokenAprs.avgApr !== null){\n              output = tokenAprs.avgApr;\n            }\n          break;\n        }\n      break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig,false,addGovTokens);\n\n        // console.log('apr',token,tokenApys.avgApr ? tokenApys.avgApr.toFixed() : null,tokenApys.avgApy ? tokenApys.avgApy.toFixed() : null);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()){\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy){\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY){\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n      break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token],account),\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]){\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig,firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n      break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit',token,tokenConfig,account),\n          this.loadAssetField('earningsPerc',token,tokenConfig,account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc){\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n      break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token],account) : false;\n        if (depositTimestamps && depositTimestamps[token]){\n          output = depositTimestamps[token];\n        }\n      break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig,account) : false;\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n      break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig,govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()){\n            output = '-';\n          }\n        } else {\n          output = await this.genericContractCall(tokenConfig.idle.token, 'tokenPrice');\n        }\n      break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig,account);\n      break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)){\n          output = await this.getTokenBalance(token,account);\n          if (!output || output.isNaN()){\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token,account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()){\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n      break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token,account) : false;\n        if (idleTokenBalance){\n          output = idleTokenBalance;\n        }\n      break;\n      case 'redeemableBalanceCounter':\n        let [tokenAPY1,amountLent2,redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy',token,tokenConfig,account,false),\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false),\n        ]);\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2){\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        // this.customLog('redeemableBalanceCounter',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd));\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n      break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)){\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig,account,govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance',token,tokenConfig,account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account,govTokenAvailableTokens,token) : null,\n          ]);\n\n          if (idleTokenBalance2 && idleTokenPrice1){\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()){\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n        }\n      break;\n      case 'earningsCurve':\n        let [amountLentCurve2,redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve',token,tokenConfig,account),\n          this.loadAssetField('redeemableBalanceCurve',token,tokenConfig,account)\n        ]);\n\n        if (!amountLentCurve2){\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1){\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n      break;\n      case 'earnings':\n        let [amountLent,redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent',token,tokenConfig,account,false),\n          this.loadAssetField('redeemableBalance',token,tokenConfig,account,false)\n        ]);\n\n        if (!amountLent){\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2){\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))){\n          output = this.BNify(0);\n        }\n      break;\n      default:\n      break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken,blockNumber='latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.genericContractCall(idleToken,'totalSupply',[],{},blockNumber);\n    if (idleTokenSupply){\n      idleTokenSupply = this.BNify(idleTokenSupply);\n      return this.setCachedDataWithLocalStorage(cachedDataKey,idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig,account,blockNumber='latest') => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCall(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCall(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCall(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n    \n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))){\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig,blockNumber='latest',timestamp=false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    // if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    // }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCall(tokenConfig.idle.token,'tokenPrice',[],{},blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp){\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp)-(60*60);\n      const endTimestamp = parseInt(timestamp)+(60*60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,endTimestamp,true);\n\n      let beforePrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      let afterPrice = {\n        data:null,\n        timeDiff:null\n      };\n\n      tokenData.forEach( d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp)-parseInt(timestamp));\n        if (parseInt(d.timestamp)<parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff<beforePrice.timeDiff)){\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp)>parseInt(timestamp) && !afterPrice.timeDiff){\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data){\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()){\n      tokenPrice = this.fixTokenDecimals(tokenPrice,decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)){\n      tokenPrice = this.BNify(1);\n    }\n\n    // if (blockNumber !== 'latest'){\n      this.setCachedDataWithLocalStorage(cachedDataKey,tokenPrice);\n    // }\n\n    // this.customLog('getIdleTokenPrice',tokenPrice.toString());\n\n    return tokenPrice;\n  }\n  clearCachedData = () => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function'){\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData();\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key,data,TTL=180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function'){\n      this.props.setCachedData(key,data,TTL,true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key,defaultValue=null) => {\n    return this.getCachedData(key,defaultValue,true);\n  }\n  getCachedData = (key,defaultValue=null,useLocalStorage=false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[key]){\n      cachedData = this.props.cachedData[key];\n    // Get cache from local storage\n    } else if (useLocalStorage) {\n      cachedData = this.getStoredItem('cachedData');\n      if (cachedData && cachedData[key]){\n        cachedData = cachedData[key];\n      } else {\n        cachedData = null;\n      }\n    }\n\n    if (cachedData && cachedData.data && (!cachedData.expirationDate || cachedData.expirationDate>=parseInt(Date.now()/1000))){\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr,tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token,walletAddr,false),\n      this.genericContractCall(tokenConfig.idle.token,'totalSupply')\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)){\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url,'_blank','noopener');\n  }\n  getActiveCoverages = async (account=null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account){\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now()/1000);\n    const coverProtocolConfig = this.getGlobalConfig(['tools','coverProtocol']);\n    if (coverProtocolConfig.enabled){\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name,tokenConfig.address,tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name,account);\n        if (balance && balance.gt(0)){\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const fileClaimUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp<=currTimestamp ? 'Expired' : 'Active';\n          const expirationDate = moment(coverage.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            collateral,\n            protocolName,\n            fileClaimUrl,\n            protocolImage,\n            expirationDate\n          });\n        }\n      });\n    }\n\n    return activeCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.props.network.current.id || this.getGlobalConfig(['network','requiredNetwork']);\n    const etherscanInfo = this.getGlobalConfig(['network','providers','etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]){\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${env.REACT_APP_ETHERSCAN_KEY}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint,1800,true);\n      if (transactions && typeof transactions.result === 'object'){\n        return transactions.result.filter( tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase() );\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account=null,filter_by_status=null) => {\n    account = account || this.props.account;\n    if (!account){\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools','batchDeposit']);\n    if (!batchDepositConfig.enabled){\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name,migrationContract.address,migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name,'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name,'batchTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n          this.genericContractCall(migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null){\n          batchTotals = this.fixTokenDecimals(batchTotal,tokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchRedeem = this.fixTokenDecimals(batchRedeem,18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit,tokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)){\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status){\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,batchedDeposits);\n  }\n  getETHBalance = async (walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName,walletAddr,fixDecimals=true,blockNumber='latest') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest'){\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()){\n        return this.BNify(cachedData);\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName,walletAddr,blockNumber)\n    ]);\n\n    if (tokenBalance){\n      if (fixDecimals){\n        tokenBalance = this.fixTokenDecimals(tokenBalance,tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()){\n        if (blockNumber !== 'latest'){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ',contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function'){\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url,props,callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props){\n      Object.keys(props).forEach((attr,i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function'){\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function() {\n          if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)){\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName,blockNumber='latest') => {\n    return await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n  }\n  getContractBalance = async (contractName,address,blockNumber='latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    return await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n  }\n  getProtocolBalance = async (contractName,address) => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    return await this.genericContractCall(contractName, 'balanceOf', [address]);\n  }\n  getAprs = async (contractName) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs){\n      return {\n        aprs:aprs[1],\n        addresses:aprs[0]\n      };\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxDecodedLogs = async (tx,logAddr,decodeLogs,storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt){\n      txReceipt = await (new Promise( async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash,(err,tx)=>{\n          if (err){\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt){\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length-1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length){\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs,internalTransfers[0].data,internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getContractPastEvents = async (contractName,methodName,params = {}) => {\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.getPastEvents(methodName, params);\n  }\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName){\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try{\n      this.customLog(`genericContractCall - ${contractName} - ${methodName}`);\n      const value = await contract.methods[methodName](...params).call(callParams,blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      this.customLog(`genericContractCall - ${contractName} - ${methodName} : ${value}`);\n      return value;\n    } catch (error) {\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async=true) => {\n    if (async){\n      await Promise.all(array.map( (c,index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        await callback(array[index], index, array);\n      }\n    }\n  }\n  apr2apy = (apr) => {\n    return (this.BNify(1).plus(this.BNify(apr).div(12))).pow(12).minus(1);\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token,tokenConfig.idle.address);\n    if (unlentBalance){\n      unlentBalance = this.fixTokenDecimals(unlentBalance,tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig,addGovTokens=true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN() ) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent){\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()){\n        return this.setCachedDataWithLocalStorage(cachedDataKey,tokenPool);\n      }\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken allocation between protocols\n  */\n  getTokenAllocation = async (tokenConfig,protocolsAprs=false,addGovTokens=true) => {\n\n    if (!tokenConfig.idle){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    let totalAllocation = this.BNify(0);\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance:null,\n      totalAllocation:null,\n      protocolsBalances:{},\n      protocolsAllocations:null,\n      protocolsAllocationsPerc:null,\n      totalAllocationConverted:null,\n      totalAllocationWithUnlent:null,\n      totalAllocationWithUnlentConverted:null,\n    };\n\n    const exchangeRates = {};\n    const protocolsBalances = {};\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const contractName = protocolInfo.token;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n\n      let [\n        tokenDecimals,\n        protocolBalance,\n        exchangeRate\n      ] = await Promise.all([\n        this.getTokenDecimals(contractName),\n        this.getProtocolBalance(contractName,tokenConfig.idle.address),\n        ( protocolInfo.functions.exchangeRate ? this.genericContractCall(contractName,protocolInfo.functions.exchangeRate.name,protocolInfo.functions.exchangeRate.params) : null )\n      ]);\n\n      if (!protocolBalance){\n        return;\n      }\n\n      if (exchangeRate && protocolInfo.decimals){\n        exchangeRates[protocolAddr] = exchangeRate;\n        exchangeRate = this.fixTokenDecimals(exchangeRate,protocolInfo.decimals);\n      }\n\n      let protocolAllocation = this.fixTokenDecimals(protocolBalance,tokenDecimals,exchangeRate);\n\n      if (protocolAllocation.lt(this.BNify(0.00000001))){\n        protocolBalance = this.BNify(0);\n        protocolAllocation = this.BNify(0);\n      }\n\n      protocolsBalances[protocolAddr] = protocolBalance;\n      protocolsAllocations[protocolAddr] = protocolAllocation;\n      totalAllocation = totalAllocation.plus(protocolAllocation);\n\n      // console.log('getTokenAllocation',contractName,protocolAddr,protocolAllocation.toFixed(5),exchangeRate ? exchangeRate.toFixed(5) : null,totalAllocation.toFixed(5));\n    });\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = this.BNify(totalAllocation);\n\n    // Add unlent balance to the pool\n    let unlentBalance = await this.getUnlentBalance(tokenConfig);\n    if (unlentBalance){\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    // console.log('totalAllocationWithUnlent 1',addGovTokens,tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n\n    Object.keys(protocolsAllocations).forEach((protocolAddr,i) => {\n      const protocolAllocation = protocolsAllocations[protocolAddr];\n      const protocolAllocationPerc = protocolAllocation.div(totalAllocation);\n      protocolsAllocationsPerc[protocolAddr] = protocolAllocationPerc;\n    });\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    if (addGovTokens){\n      const govTokensBalances = await this.getGovTokensBalances(tokenConfig.idle.address);\n\n      // Sum gov tokens balances\n      if (govTokensBalances.total){\n        const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,false);\n        if (tokenUsdConversionRate){\n          govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n        }\n\n        tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n\n        // console.log('totalAllocationWithUnlent 2',govTokensBalances.total.toFixed(5),tokenAllocation.totalAllocationWithUnlent.toFixed(5));\n      }\n    }\n\n    tokenAllocation.totalAllocationConverted = await this.convertTokenBalance(tokenAllocation.totalAllocation,tokenConfig.token,tokenConfig);\n    tokenAllocation.totalAllocationWithUnlentConverted = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,tokenConfig.token,tokenConfig);\n\n    if (protocolsAprs){\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs,protocolsAllocations,totalAllocation);\n    }\n\n    return this.setCachedData(cachedDataKey,tokenAllocation);\n  }\n  getUniswapConversionRate_path = async (path) => {\n    const one = this.normalizeTokenDecimals(18);\n    const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n    return unires;\n  }\n  getSushiswapPoolTokenPrice = async (contractName,pairAddresses) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCall(contractName,'token0'),\n      this.genericContractCall(contractName,'token1'),\n      this.genericContractCall(contractName,'getReserves'),\n      this.genericContractCall(contractName,'totalSupply')\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply){\n      const token0_config = {\n        address:token0_address\n      };\n      const token1_config = {\n        address:token1_address\n      };\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig,token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig,token1_config)\n      ]);\n\n      if (token0_price && token1_price){\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0],18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1],18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply,18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCall('SushiswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      if (res){\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom,tokenConfigDest) => {\n\n    if (tokenConfigDest.addressForPrice){\n      tokenConfigDest = Object.assign({},tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log('getUniswapConversionRate - CACHED',cachedDataKey,cachedData);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getGlobalConfig(['stats','tokens','WETH','address']);\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()){\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCall('UniswapRouter','getAmountsIn',[one.toFixed(),path]);\n\n      if (unires){\n        const price = this.BNify(unires[0]).div(one);\n        // console.log('getUniswapConversionRate',path,price.toFixed());\n        return this.setCachedDataWithLocalStorage(cachedDataKey,price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account,enabledTokens=[]) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length){\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account,0,'latest',enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach( tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]){\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action){\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n        break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])){\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)){\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n        break;\n        default:\n        break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)){\n        Object.keys(idleTokensBalances).forEach( token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)){\n            if (tokenBalance.gt(remainingCurveTokens)){\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts,max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve','rates']);\n    if (curveRatesInfo){\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data){\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path,results.data);\n        if (curveApy){\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()){\n            return this.setCachedDataWithLocalStorage(cachedDataKey,curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies){\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve','availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce( (availableTokens,token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled){\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    },{});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract){\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber){\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice,prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price'),\n          this.genericContractCall(curveSwapContract.name,'get_virtual_price',[],{},blockNumber-blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice){\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network','blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      return await this.genericContractCall(curvePoolContract.name,'totalSupply');\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account=null,fixDecimals=true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract){\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name,account,fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber='latest',fixDecimals=true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCall(migrationContract.name,'get_virtual_price',[],{},blockNumber);\n    if (curveTokenPrice){\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals){\n        const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice,curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice,curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice){\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve','depositContract']);\n    if (depositContractInfo){\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi){\n        curveDepositContract = await this.props.initContract(depositContractInfo.name,depositContractInfo.address,depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve','zapContract']);\n    if (zapContractInfo){\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi){\n        curveZapContract = await this.props.initContract(zapContractInfo.name,zapContractInfo.address,zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve','poolContract']);\n    if (poolContractInfo){\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi){\n        curvePoolContract = await this.props.initContract(poolContractInfo.name,poolContractInfo.address,poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve','migrationContract']);\n    if (migrationContractInfo){\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi){\n        migrationContract = await this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account=null,curveTokenBalance=null,max_slippage=null) => {\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage){\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]);\n        if (curveIdleTokens){\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage){\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account=null,curveTokenBalance=null,fixDecimals=false,useCoinIndex=false) => {\n\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account){\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance){\n      curveTokenBalance = await this.getCurveTokenBalance(account,false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply){\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name,'balances',[coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals){\n          tokenBalance = this.fixTokenDecimals(tokenBalance,18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token,amount,deposit=false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve','availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount)>0){\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount,18);\n        if (!deposit){\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount,curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts,deposit=true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract){\n      return await this.genericContractCall(migrationContract.name,'calc_token_amount',[amounts,deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token,amount,deposit=true,uneven_amounts=null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract){\n\n      const n_coins = this.getGlobalConfig(['curve','params','n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)){\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins){\n        amounts = await this.getCurveAmounts(token,amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name,'get_virtual_price'),\n        this.genericContractCall(depositContract.name,'calc_token_amount',[amounts,deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount){\n        amount = this.fixTokenDecimals(amount,18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice,18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount,18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit){\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit){\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig,aTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find( p => p.name === stkAAVETokenConfig.protocol );\n\n    if (!aTokenConfig || stkAAVETokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCall(aTokenConfig.token,'getIncentivesController');\n\n    // console.log('getStkAaveDistribution',tokenConfig.idle.token,aTokenConfig.token,aaveIncentivesController_address);\n\n    if (!aaveIncentivesController_address){\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aTokenConfig.token}`;\n    await this.props.initContract(IAaveIncentivesController_name,aaveIncentivesController_address,stkAAVETokenConfig.abi);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig,false,false),\n      this.genericContractCall(IAaveIncentivesController_name,'getAssetData',[aTokenConfig.address]),\n    ]);\n\n    if (assetData && tokenAllocation){\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)){\n        if (!aTokenIdleSupply){\n          aTokenIdleSupply = await this.genericContractCall(aTokenConfig.token,'balanceOf',[tokenConfig.idle.address]);\n        }\n\n        const aaveSpeed = this.BNify(assetData[1]);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network','secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize){\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        // console.log('getStkAaveDistribution',tokenConfig.idle.token,aTokenIdleSupply.toFixed(),aTokenTotalSupply.toFixed(),aavePoolShare.toFixed(),aaveSpeed.toFixed(),aaveDistribution.toFixed());\n\n        if (!this.BNify(aaveDistribution).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find( p => (p.name === stkAAVETokenConfig.protocol) );\n      if (aTokenInfo){\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getStkAaveDistribution(tokenConfig,null,false),\n        ]);\n\n        if (aaveDistribution && userPoolShare){\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getStkAaveApr = async (token,tokenConfig,aaveConversionRate=null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens','stkAAVE']);\n    if (!stkAAVETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)){\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate){\n        const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        try {\n          const destTokenConfig = {\n            address:stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig,destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()){\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token,tokenConfig,cTokenIdleSupply=null,compConversionRate=null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens','COMP']);\n    if (!COMPTokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig,cTokenIdleSupply);\n\n    if (compDistribution){\n\n      const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get COMP conversion rate\n      if (!compConversionRate){\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig,COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()){\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n\n      if (tokenAllocation){\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()){\n          this.setCachedDataWithLocalStorage(cachedDataKey,compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCall('Comptroller','compSpeeds',[cTokenAddress]);\n    if (compSpeed){\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig,cTokenIdleSupply=null,annualize=true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n    if (cTokenInfo){\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)){\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.genericContractCall(cTokenInfo.token,'totalSupply'),\n        ]);\n\n        if (compSpeed && cTokenTotalSupply){\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply){\n            cTokenIdleSupply = await this.genericContractCall(cTokenInfo.token,'balanceOf',[tokenConfig.idle.address]);\n          }\n\n          if (cTokenIdleSupply){\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network','blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize){\n              compDistribution = compDistribution.div(1e18).times(this.BNify(blocksPerYear));\n            }\n\n            if (!this.BNify(compDistribution).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account=null,availableTokens=null) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find( p => (p.name === 'compound') );\n      if (cTokenInfo){\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account,tokenConfig,false),\n          this.getCompDistribution(tokenConfig,null,false),\n        ]);\n\n        if (compDistribution && userPoolShare){\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens=null) => {\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr,tokenAllocation] = await Promise.all([\n        this.getCompAPR(token,tokenConfig),\n        this.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (compApr && tokenAllocation){\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function() {\n      return this.reduce(function(pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function() {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function() {\n      return this.sum()/this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,7200,'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length-1];\n\n        rates.forEach( r => {\n          if (!protocols){\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach( p1 => {\n              const foundProtocol = tokenConfig.protocols.find( p2 => ( p2.address.toLowerCase() === p1.protocolAddr.toLowerCase() ) );\n              if (foundProtocol){\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach( p => {\n              header.push('APR '+p.name);\n              header.push('SCORE '+p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp*1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach( pInfo => {\n            const pData = r.protocolsData.find( p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()) );\n            let pRate = '';\n            let pScore = '';\n            if (pData){\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined'){\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()){\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date>='2020-09-15'/* && date<='2020-11-09'*/){\n                if (!isNaN(parseFloat(pRate))){\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))){\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach( p => {\n          const avgRate = aprAvg[p].sum()/aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach( p => {\n          const avgScore = scoreAvg[p].sum()/scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken=null,availableTokens=null,convertToken=null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address,convertToken,enabledTokens);\n      if (compTokenBalance && compTokenBalance.total){\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken){\n      this.idleGovToken = new IdleGovToken(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach( govToken => {\n      const govTokenConfig = govTokens[govToken];\n      if (!govTokenConfig.enabled || govTokenConfig.disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n      if (govTokenConfig.protocol === 'idle'){\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find( p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()) )\n        if (foundProtocol){\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed,frequency='day',mode='block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network','blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network','secondsPerYear']));\n    const multipliers = {\n      'day':{\n        'block':blocksPerYear.div(365.242199),\n        'second':secondsPerYear.div(365.242199)\n      },\n      'week':{\n        'block':blocksPerYear.div(52.1429),\n        'second':secondsPerYear.div(52.1429)\n      },\n      'month':{\n        'block':blocksPerYear.div(12),\n        'second':secondsPerYear.div(12)\n      },\n      'year':{\n        'block':blocksPerYear.div(1),\n        'second':secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()){\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account,tokenConfig=null,enabledTokens=null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken){\n        case 'COMP':\n          output = await this.getCompUserDistribution(account,availableTokens);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account,availableTokens);\n        break;\n        default:\n        break;\n      }\n\n      if (output){\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency){\n          output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig,enabledTokens=null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n    \n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken){\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig,null,false);\n        break;\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig,null,false);\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n        break;\n        default:\n        break;\n      }\n\n      if (govSpeed){\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode){\n          govSpeed = this.fixDistributionSpeed(govSpeed,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token,tokenConfig,enabledTokens=null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)){\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false){\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken){\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation){\n                const aTokenConfig = tokenConfig.protocols.find( p => (p.name === govTokenConfig.protocol) );\n                if (aTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]){\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode){\n            default:\n            case 'apr':\n              [output,tokenAllocation] = await Promise.all([\n                this.getCompAPR(token,tokenConfig),\n                this.getTokenAllocation(tokenConfig,false,false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation){\n                const cTokenConfig = tokenConfig.protocols.find( p => (p.name === 'compound') );\n                if (cTokenConfig){\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]){\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n            break;\n          }\n        break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode){\n            case 'apr':\n              output = await idleGovToken.getAPR(token,tokenConfig);\n            break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output){\n                output = this.fixTokenDecimals(output,18);\n                output = this.fixDistributionSpeed(output,govTokenConfig.distributionFrequency,govTokenConfig.distributionMode);\n              }\n            break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n            break;\n            default:\n            break;\n          }\n        break;\n        default:\n        break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)){\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address=null,convertToken='DAI',enabledTokens=null) => {\n    if (!address){\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens),async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)){\n        return;\n      }\n      \n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled){\n        return;\n      }\n\n      const destTokenConfig = {\n        address:govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token,address);\n\n      if (govTokenBalance){\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken){\n          const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance,govTokens[token].decimals,tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total){\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey,govTokensBalances);\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address){\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find( tokenConfig => (tokenConfig.enabled && tokenConfig.address.toLowerCase() === address.toLowerCase()) );\n  }\n  getGovTokensUserTotalBalance = async (account=null,availableTokens=null,convertToken=null,checkShowBalance=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${JSON.stringify(availableTokens)}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,null,checkShowBalance);\n    if (govTokensUserBalances){\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce( (acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account,tokenConfig) => {\n    if (!account){\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.genericContractCall(tokenConfig.idle.token,'getGovTokensAmounts',[account]);\n    if (govTokensAmounts){\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.genericContractCall(tokenConfig.idle.token,'govTokens',[govTokenIndex]);\n\n        if (govTokenAddress){\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n\n          if (govTokenConfig){\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokensUserBalances = async (account=null,availableTokens=null,convertToken=null,govTokenConfigForced=null,checkShowBalance=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.genericContractCall(idleTokenConfig.token,'getGovTokensAmounts',[account]);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts){\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount,govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.genericContractCall(idleTokenConfig.token,'govTokens',[govTokenIndex]);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress){\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()){\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken){\n                const fromTokenConfig = this.getGlobalConfig(['stats','tokens',convertToken]);\n                if (fromTokenConfig){\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig,govTokenConfig);\n                  } catch (error) {\n                    \n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount,govTokenConfig.decimals,tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]){\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCall(tokenConfig.idle.token, 'fee');\n    if (fee){\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig=null,account=null) => {\n    if (!tokenConfig && this.props.tokenConfig){\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account){\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig){\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent',tokenConfig.token,tokenConfig,account),\n      this.loadAssetField('redeemableBalance',tokenConfig.token,tokenConfig,account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance){\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig,account=null,availableTokens=null,convertToken=null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account,availableTokens,convertToken,govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce( (totalTVL,tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()){\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    },this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens:{},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(tokenConfig)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply,18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL,token,tokenConfig,isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (govTokenBalance && govTokenConversionRate){\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance,govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()){\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply){\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply,18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL,token,oldTokenConfig,isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()){\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData){\n      return cachedData;\n    }\n\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint,false,config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length>0){\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey,latestFeed,endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAggregatedStats = async (addGovTokens=true) => {\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpointInfo = this.getGlobalConfig(['stats','tvls']);\n    const tvls = await this.makeCachedRequest(endpointInfo.endpoint,endpointInfo.TTL,true,false,config);\n\n    if (tvls){\n      const avgAPY = this.BNify(tvls.avgAPY);\n      const totalAUM = this.BNify(tvls.totalTVL);\n      return {\n        avgAPY,\n        totalAUM\n      };\n    } else {\n      return await this.getAggregatedStats_chain();\n    }\n  }\n  getAggregatedStats_chain = async (addGovTokens=true) => {\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())){\n      return {\n        avgAPR:this.BNify(cachedData.avgAPR),\n        avgAPY:this.BNify(cachedData.avgAPY),\n        totalAUM:this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAllocation = await this.getTokenAllocation(tokenConfig,false,addGovTokens);\n        const tokenAprs = await this.getTokenAprs(tokenConfig,tokenAllocation,addGovTokens);\n        if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()){\n          const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig,isRisk);\n          totalAUM = totalAUM.plus(tokenAUM);\n          // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n          if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()){\n            avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n            avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n          }\n        }\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens){\n          await this.asyncForEach(Object.keys(govTokens).filter( govToken => (govTokens[govToken].showAUM) ), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              tokenBalance,\n              tokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken,tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig,govTokenConfig)\n            ]);\n            \n            if (tokenBalance && tokenConversionRate){\n              const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance,govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n              if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()){\n                // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                totalAUM = totalAUM.plus(tokenBalanceConverted);\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract){\n          const oldTokenConfig = Object.assign({},tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({},tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols){\n            oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n              if (foundProtocol){\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig,false,false);\n          if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()){\n            const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation,token,oldTokenConfig,isRisk);\n            totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n            // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n          }\n        }\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null){\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy=null) => {\n\n    if (!this.props.availableStrategies || !this.props.account){\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy){\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig,this.props.account);\n        \n        if (migrationEnabled){\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol=null) => {\n    if (!this.props.account){\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools','tokenMigration','props','availableTokens']);\n    if (protocolsTokens){\n      await this.asyncForEach(Object.keys(protocolsTokens),async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase() ){\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi){\n          tokenContract = await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n        }\n        if (tokenContract){\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token,this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)){\n            tokenBalances[token] = {\n              tokenConfig,\n              balance:tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance,token,tokenConfig,isRisk=false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig,isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate){\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n\n  getAvgAPYStats = async (address,isRisk,startTimestamp=null,endTimestamp=null) => {\n\n    const apiResults = await this.getTokenApiData(address,isRisk,startTimestamp,endTimestamp,true,7200);\n\n    if (apiResults && apiResults.length){\n      const apr = apiResults.reduce( (sum,r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate,18);\n        return sum.plus(idleRate);\n      },this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig,isRisk,conversionRateField=null,count=0) => {\n\n    if (!conversionRateField){\n      conversionRateField = this.getGlobalConfig(['stats','tokens',tokenConfig.token,'conversionRateField']);\n      if (!conversionRateField){\n        return null;\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,null,null,false,null,'desc',1);\n\n    if (tokenData && tokenData.length){\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()){\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField],18);\n        if (!this.BNify(conversionRate).isNaN()){\n          return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = this.getGlobalConfig(['stats','tokens','DAI']);\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig,tokenConfig);\n    if (!this.BNify(conversionRate).isNaN()){\n      return this.setCachedDataWithLocalStorage(cachedDataKey,conversionRate);\n    }\n\n    if (count<3){\n      return await this.getTokenConversionRate(tokenConfig,isRisk,conversionRateField,count+1); \n    }\n\n    return null;\n  }\n\n  getTokenScore = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.rates;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config),\n      this.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenData && tokenAllocation){\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach( protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001) && tokenData.length>0){\n          const protocolInfo = tokenData[0].protocolsData.find( p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase()) );\n          if (protocolInfo){\n            const protocolScore = this.BNify(protocolInfo.defiScore);\n            if (!protocolScore.isNaN()){\n              tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n            }\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)){\n      tokenScore = await this.getTokenScoreApi(tokenConfig,isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig,isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return this.BNify(cachedData);\n    }\n\n    const apiInfo = globalConfigs.stats.scores;\n    const config = this.getGlobalConfig(['stats','config']);\n    const endpoint = `${apiInfo.endpoint}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint,apiInfo.TTL,true,false,config);\n\n    if (scores && scores.length>0){\n      let tokenData = scores.find( s => s.address.toLowerCase() === tokenConfig.address.toLowerCase() );\n      if (tokenData){\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)){\n          // Set cached data\n          return this.setCachedData(cachedDataKey,tokenScore);\n        // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now()/1000);\n          const startTimestamp = parseInt(timestamp)-(60*60*24);\n          tokenData = await this.getTokenApiData(tokenConfig.address,isRisk,startTimestamp,null,true,null,'DESC');\n\n          const filteredTokenData = tokenData.filter( d => (this.BNify(d.idleScore).gt(0)) );\n          if (filteredTokenData.length){\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()){\n              return this.setCachedDataWithLocalStorage(cachedDataKey,tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig,tokenAllocation=false,addGovTokens=true) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle){\n      // console.log('getTokenAprs - !tokenConfig.idle',tokenConfig);\n      return tokenAprs;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgApr && !this.BNify(cachedData.avgApr).isNaN()) && (cachedData.avgApy && !this.BNify(cachedData.avgApy).isNaN()) ){\n      // console.log('getTokenAprs - CACHED',tokenConfig.idle.token,cachedData);\n      return {\n        avgApr:this.BNify(cachedData.avgApr),\n        avgApy:this.BNify(cachedData.avgApy)\n      };\n    }\n\n    const Aprs = await this.getAprs(tokenConfig.idle.token);\n\n    if (!Aprs){\n      // console.log('getTokenAprs - !Aprs',Aprs);\n      return tokenAprs;\n    }\n\n    if (!tokenAllocation){\n      tokenAllocation = await this.getTokenAllocation(tokenConfig);\n    }\n\n    if (!tokenAllocation){\n      // console.log('getTokenAprs - !tokenAllocation',tokenAllocation);\n      return tokenAprs;\n    }\n\n    const addresses = Aprs.addresses.map((addr,i) => { return addr.toString().toLowerCase() });\n    const aprs = Aprs.aprs;\n\n    const govTokensAprs = {};\n    const protocolsAprs = {};\n    const protocolsApys = {};\n\n    await this.asyncForEach(tokenConfig.protocols,async (protocolInfo,i) => {\n      const protocolAddr = protocolInfo.address.toString().toLowerCase();\n      const addrIndex = addresses.indexOf(protocolAddr);\n      if ( addrIndex !== -1 ) {\n        let protocolApr = this.BNify(+this.toEth(aprs[addrIndex]));\n        let protocolApy = this.apr2apy(protocolApr.div(100)).times(100);\n\n        if (addGovTokens){\n          let govTokenAPR = null;\n          const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n          await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n            switch (govToken){\n              case 'COMP':\n                govTokenAPR = await this.getCompAPR(tokenConfig.token,tokenConfig);\n              break;\n              case 'stkAAVE':\n                govTokenAPR = await this.getStkAaveApr(tokenConfig.token,tokenConfig);\n              break;\n              default:\n              break;\n            }\n            if (govTokenAPR){\n              govTokensAprs[govToken] = govTokenAPR;\n            }\n          });\n          \n        }\n\n        protocolsApys[protocolAddr] = protocolApy;\n        protocolsAprs[protocolAddr] = protocolApr;\n      }\n    });\n\n    if (tokenAllocation){\n      tokenAprs.avgApr = this.getAvgApr(protocolsAprs,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n      tokenAprs.avgApy = this.getAvgApr(protocolsApys,tokenAllocation.protocolsAllocations,tokenAllocation.totalAllocation);\n\n      Object.values(govTokensAprs).forEach( govTokenAPR => {\n        tokenAprs.avgApr = tokenAprs.avgApr.plus(govTokenAPR);\n        tokenAprs.avgApy = tokenAprs.avgApy.plus(govTokenAPR);\n      });\n\n      // console.log('getTokenAprs',tokenConfig.idle.token,tokenConfig,aprs,protocolsAprs,tokenAllocation,tokenAprs,govTokensAprs);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = this.getGlobalConfig(['govTokens','IDLE','showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens','IDLE','enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR){\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token,tokenConfig);\n        if (idleAPR){\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()){\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()){\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey,tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber(value,decimals=3,maxPrecision=5,minPrecision=0){\n\n    const isNegative = parseFloat(value)<0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\",\"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1,maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value>=1000){\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2,decimals) : null;\n      newValue = parseInt(newValue).toString()+( decimalPart ? '.'+decimalPart : '' );\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue>=1 && (newValue.length-1)>maxPrecision){\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length-1)<minPrecision) {\n      const difference = minPrecision-(newValue.length-1);\n      const append = this.BNify(value).abs().toString().replace('.','').substr((newValue.length-1),difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative){\n      newValue = '-'+newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance,label,decimals,maxLen,highlightedDecimals){\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.','').length;\n    if (numLen>maxLen){\n      decimals = Math.max(0,decimals-(numLen-maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance%1).toPrecision(decimals).substr(2,decimals);;\n    decPart = (decPart+(\"0\".repeat(decimals))).substr(0,decimals);\n\n    if (highlightedDecimals){\n      const highlightedDec = decPart.substr(0,highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? ( <>{highlightedIntPart}<small style={{fontSize:'70%'}}>{decPart}</small> <Text.span fontSize={[1,2]}>{label}</Text.span></> ) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? ( <>{intPart}<small>.{decPart}</small>{ label !== '%' ? ' ' : null }{ label ? <Text.span fontSize={[1,2]}>{label}</Text.span> : null }</> ) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver:false\n  }\n\n  setMouseOver(mouseOver){\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p:0,\n      border:1,\n      boxShadow:1,\n      borderRadius:2,\n      borderColor:null,\n      position:'relative',\n      minHeight:'initial',\n      backgroundColor:'cardBg'\n    };\n\n    if (isActive || (isInteractive && this.state.mouseOver)){\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length){\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]){\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length>0 &&\n            <Flex\n              mt={[3,4]}\n              ml={[3,4]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              {...this.props.titleParentProps}\n            >\n              <Heading.h4\n                fontWeight={4}\n                fontSize={[2,3]}\n                textAlign={'left'}\n                color={'dark-gray'}\n                lineHeight={'initial'}\n                {...this.props.titleProps}\n              >\n                {this.props.title}\n              </Heading.h4>\n              {\n                this.props.description && this.props.description.length>0 &&\n                  <Tooltip\n                    placement={'top'}\n                    message={this.props.description}\n                  >\n                    <Icon\n                      ml={2}\n                      name={\"Info\"}\n                      size={'1em'}\n                      color={'cellTitle'}\n                    />\n                  </Tooltip>\n              }\n            </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.5,\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034','1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    /*\n    NEW COLORS\n    */\n    alert:'#ff9900',\n    arrowActive:'#d8d8d8',\n    arrowInactive:'#4f4f4f',\n    selectBgFocused:'#1e3657',\n    selectBg:'#162e4d',\n    backButtonBg:'#162e4d',\n    lineChartStroke:'#a4aec6',\n    wrongNetworkBannerBg:'#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link:'#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg:'#162e4d',\n    menuBg:'#162e4d',\n    menuHover:'#1e3657',\n    flashColor:'#bac5ff',\n    cardBgHover:'#1e3657',\n    cardBorder:'#0d2034',\n    pageActive:'#d8d8d8',\n    pageInactive:'#4f4f4f',\n    menuRightBorder:'#0d2034',\n    cardHoverShadow:'0px 0px 0px 1px rgb(45 74 114)',\n    transactions:{\n      action:{\n        send:'#10a0dd',\n        swap:'#3d53c0',\n        boost:'#ffff00',\n        redeem:'#10a0dd',\n        swapout:'#10a0dd',\n        deposit:'#3d53c0',\n        curvein:'#10a0dd',\n        receive:'#3d53c0',\n        migrate:'#3d53c0',\n        default:'#4f4f4f',\n        curveout:'#3d53c0',\n        withdraw:'#10a0dd',\n        curvedepositin:'#10a0dd',\n        curvedepositout:'#3d53c0'\n      },\n      actionBg:{\n        send:'#ceeff6',\n        swap:'#ced6ff',\n        boost:'#ff7979',\n        redeem:'#ceeff6',\n        swapout:'#ceeff6',\n        deposit:'#ced6ff',\n        curvein:'#ceeff6',\n        default:'#dadada',\n        receive:'#ced6ff',\n        migrate:'#ced6ff',\n        withdraw:'#ceeff6',\n        curveout:'#ced6ff',\n        curvedepositin:'#ceeff6',\n        curvedepositout:'#ced6ff'\n      },\n      status:{\n        completed:'#00b84a',\n        pending:'#a5a5a5',\n        failed:'#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura).forEach((networkId,index) => {\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: globalConfigs.network.providers.infura[defaultNetwork]+env.REACT_APP_INFURA_KEY\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              You should be on the {this.props.network.required.name} Ethereum\n              network. You are currently connected to the{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                {this.props.network.current.name}\n              </Text.span>{\" \"}\n              Network - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isCorrectNetwork === false && this.props.web3\n          ?\n            <WrongNetworkBanner\n              network={this.props.network}\n            />\n          :\n            null\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      await this.props.context.setFirstValidConnector(['Infura']);\n      this.props.setConnector('Infura',null);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\nconst INFURA_KEY = process.env[\"REACT_APP_INFURA_KEY\"];\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  accountBalance: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      props.account = this.state.account;\n      this.functionsUtil.setProps(props);\n    } else {\n      props.account = this.state.account;\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        await this.props.clearCachedData(() => {\n          this.checkNetwork();\n        });\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n  }\n\n  componentDidMount = async () => {\n    this.initSimpleID();\n\n    // this.functionsUtil.customLog('RimbleWeb3 componentDidMount');\n    this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe);\n      if (isGnosisSafe){\n        this.props.setConnector('gnosis','gnosis');\n      } else if (walletProvider === 'gnosis') {\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // this.functionsUtil.customLog('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    // console.log('gnosisSafeLoaded',this.state.gnosisSafeLoaded,this.props.connectors.gnosis.safeLoaded,gnosisSafeLoaded);\n    if (gnosisSafeLoaded){\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if (prevProps.connectorName !== this.props.connectorName && this.props.connectorName){\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect') {\n        this.initWeb3();\n      }\n    } else if ( (this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      this.initWeb3();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    if (customAddressChanged){\n      this.initAccount();\n    }\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n    const availableStrategiesChanged = prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies));\n\n    // Reset tokenDecimals if token is changed\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    if (tokenChanged || availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n    // console.log('networkChanged',JSON.stringify(prevState.network),JSON.stringify(this.state.network),networkChanged);\n    if (networkChanged){\n      this.setState({\n        contracts:[],\n        contractsInitialized:false\n      }, () => {\n        this.initWeb3();\n        if (typeof this.props.setNetwork === 'function'){\n          this.props.setNetwork(this.state.network);\n        }\n      });\n    }\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    const metamaskProvider = await detectEthereumProvider();\n    if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n      window.ethereum = metamaskProvider;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (!networkId){\n      return false;\n    }\n\n    // console.log('initWeb3',this.state.network.current.id,this.state.network.required.id,networkId);\n\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(globalConfigs.network.providers.infura[networkId]+INFURA_KEY));\n\n    let web3 = context.library;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorNameChanged,context.connectorName,connectorName,setConnectorName);\n\n    if (!context.active || connectorNameChanged) {\n      // Select preferred web3 provider\n      if (connectorName && connectorNameChanged){\n\n        if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n          return false;\n        }\n\n        // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n        setConnectorName = connectorName;\n        await context.setConnector(connectorName);\n        // await context.setFirstValidConnector([connectorName, 'Infura']);\n        return web3;\n      }\n      /*\n      else if (setConnectorName){\n        // Catch WalletConnect unexpected disconnect and fallback to Infura\n        if (connectorName === 'WalletConnect' && connectorName === setConnectorName && last_context && last_context.active && last_context.connectorName==='WalletConnect' && !context.connectorName){\n          this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          this.functionsUtil.removeStoredItem('walletProvider');\n          this.functionsUtil.removeStoredItem('connectorName');\n          this.functionsUtil.setLocalStorage('context',JSON.stringify({active:context.active,connectorName:context.connectorName}));\n          setConnectorName = null;\n          await context.setConnector('Infura');\n          if (context.connector && typeof context.connector.disable === 'function'){\n            await context.connector.disable();\n          }\n        }\n\n        this.functionsUtil.customLog('initWeb3 skip due to setConnectorName ('+setConnectorName+') already set');\n        return web3;\n      }\n      */\n    }\n    /* else if (context.connectorName === \"WalletConnect\") {\n      if (!context.account) {\n\n        // WalletConnect already opened\n        if (document.getElementById('walletconnect-wrapper')){\n          return web3;\n        }\n\n        WalletConnectQRCodeModal.open(\n          context.connector.walletConnector.uri,\n          async () => {\n            document.getElementById('walletconnect-wrapper').remove();\n            this.props.setConnector('Infura',null);\n            await context.setConnector('Infura');\n            setConnectorName = null;\n          }\n        );\n      } else {\n        try {\n          WalletConnectQRCodeModal.close();\n        } catch {}\n      }\n    // Reset web3 if Infura\n    } */\n    /*\n    else if (context.active && (connectorName === 'Infura' || context.connectorName === \"Infura\")){\n      if (typeof web3.currentProvider.disable === 'function'){\n        await web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        await context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n    */\n\n    let web3Host = null;\n    let web3Provider = null;\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = globalConfigs.network.providers.infura[networkId]+INFURA_KEY;\n        forceCallback = true;\n      }\n    }\n\n    // Injected web3 provider\n    if (web3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = new Web3(new Web3.providers.HttpProvider(web3Host));\n      if (connectorName !== 'Infura'){\n        this.props.setConnector('Infura',null);\n      }\n    }\n\n    const web3Callback = async () => {\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      // After setting the web3 provider, check network\n      try {\n        await this.checkNetwork();\n        if (this.state.network.isCorrectNetwork){\n\n          if (!this.state.contractsInitialized){\n            await this.initializeContracts();\n          }\n\n          if (context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.setState({\n              accountInizialized: true,\n              account: this.props.customAddress\n            });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(networkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      if (this.state.biconomy === null){\n        const biconomyWeb3Provider = web3Provider ? web3Provider : web3Host;\n\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || this.state.biconomy === biconomy){\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, web3Callback);\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            // console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                web3Infura,\n                biconomy:false\n              }, web3Callback);\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            web3Infura,\n            biconomy:false\n          }, web3Callback);\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3,\n          web3Infura,\n        }, web3Callback);\n      } else if (context.account || forceCallback){\n        web3Callback();\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`Init contract: ${name}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n    this.functionsUtil.customLog(`creating contract ${name} - addr: ${address}`);\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : this.state.web3;\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      this.setState(state => ({\n        ...state,\n        contracts: [...state.contracts, {name, contract}]\n      }));\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      });\n\n      // After account is complete, get the balance\n      this.getAccountBalance();\n\n      return false;\n    }\n\n    try {\n      if (!account){\n        const wallets = await this.state.web3.eth.getAccounts();\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account || this.state.account === account){\n        this.setState({\n          accountInizialized: true\n        });\n        return false;\n      }\n\n      // Request account access if needed\n      if (account && walletProvider !== 'Infura'){\n\n        if (walletProvider === 'Infura'){\n          this.setState({\n            accountInizialized: true,\n            account:this.props.customAddress\n          });\n          return false;\n        }\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        /*\n        // Unsubscribes to all subscriptions\n        if (this.state.web3SocketProvider && typeof this.state.web3SocketProvider.clearSubscriptions === 'function'){\n          this.functionsUtil.customLog('Clear all web3SocketProvider subscriptions');\n          this.state.web3SocketProvider.clearSubscriptions();\n        }\n\n        const networkName = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork].toLowerCase();\n        const web3SocketProvider = new Web3(new Web3.providers.WebsocketProvider(`wss://${networkName}.infura.io/ws/v3/${INFURA_KEY}`));\n\n        // Subscribe to logs\n        const addressTopic = '0x00000000000000000000000'+account.toLowerCase().replace('x','');\n\n        // Subscribe for payment methods\n        const paymentProviders = Object.keys(globalConfigs.payments.providers).filter((providerName,i) => { const providerInfo = globalConfigs.payments.providers[providerName]; return providerInfo.enabled && providerInfo.web3Subscription && providerInfo.web3Subscription.enabled  })\n        if (paymentProviders && paymentProviders.length){\n          paymentProviders.forEach((providerName,i) => {\n            const providerInfo = globalConfigs.payments.providers[providerName];\n\n            this.functionsUtil.customLog(`Subscribe to ${providerName} logs`);\n\n            // Subscribe for deposit transactions\n            web3SocketProvider.eth.subscribe('logs', {\n                address: [account,providerInfo.web3Subscription.contractAddress],\n                topics: [null,[addressTopic]]\n            }, function(error, result){\n              \n            })\n            .on(\"data\", async (log) => {\n              this.functionsUtil.customLog(providerName,'logs',log);\n\n              if (log){\n                const txHash = log.transactionHash;\n                const subscribedTransactions = this.state.subscribedTransactions;\n                const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n                this.functionsUtil.customLog(providerName,txHash,walletAddressFound);\n\n                if (!subscribedTransactions[txHash] && walletAddressFound.length){\n                  const decodedLogs = web3SocketProvider.eth.abi.decodeLog(providerInfo.web3Subscription.decodeLogsData,log.data,log.topics);\n\n                  this.functionsUtil.customLog(providerName,txHash,decodedLogs);\n\n                  if (decodedLogs && decodedLogs._tokenAmount && decodedLogs._tokenAddress && decodedLogs._tokenAddress.toLowerCase() === this.props.tokenConfig.address.toLowerCase()){\n\n                    const receiptCallback = async (tx,decodedLogs) => {\n                      const tokenDecimals = await this.getTokenDecimals();\n                      const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                      const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                      const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                      const isProviderTx = tx.from.toLowerCase() === account.toLowerCase() && tx.to.toLowerCase() === providerInfo.web3Subscription.contractAddress.toLowerCase();\n\n                      if (isProviderTx){\n\n                        // Mined\n                        if (tx.blockNumber && tx.status){\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'success',\n                            message:'Deposit completed',\n                            secondaryMessage:`${providerName} sent you ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n\n                          // Update User Balance\n                          this.getAccountBalance(tokenAmount);\n                        } else {\n                          // Toast message\n                          window.showToastMessage({\n                            variant:'processing',\n                            message:'Deposit pending',\n                            secondaryMessage:`${providerName} is sending ${tokenAmountFormatted} ${this.props.selectedToken}`,\n                          });\n                        }\n                      }\n                    }\n\n                    let checkTransactionReceiptTimeoutID = null;\n\n                    const checkTransactionReceipt = (txHash,decodedLogs) => {\n                      if (checkTransactionReceiptTimeoutID){\n                        window.clearTimeout(checkTransactionReceiptTimeoutID);\n                      }\n                      web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                        if (!err){\n                          if (txReceipt){\n                            receiptCallback(txReceipt,decodedLogs);\n                          } else{\n                            checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                          }\n                        }\n                      });\n                    }\n\n                    checkTransactionReceipt(txHash,decodedLogs);\n\n                    subscribedTransactions[txHash] = log;\n                    this.setState({subscribedTransactions});\n                  }\n                }\n              }\n            });\n          })\n        }\n\n        // Subscribe for deposit transactions\n        web3SocketProvider.eth.subscribe('logs', {\n            address: [account,this.props.tokenConfig.address],\n            topics: [null,null,[addressTopic]]\n        }, function(error, result){\n\n        })\n        .on(\"data\", async (log) => {\n          if (log){\n            const txHash = log.transactionHash;\n            const subscribedTransactions = this.state.subscribedTransactions;\n            const walletAddressFound = log.topics.filter((addr,i) => { return addr.toLowerCase().includes(addressTopic); });\n\n            if (!subscribedTransactions[txHash] && walletAddressFound.length){\n              const decodedLogs = web3SocketProvider.eth.abi.decodeLog([\n                {\n                  \"internalType\": \"uint256\",\n                  \"name\": \"_tokenAmount\",\n                  \"type\": \"uint256\"\n                },\n              ],log.data,log.topics);\n\n              if (decodedLogs && decodedLogs._tokenAmount){\n\n                const receiptCallback = async (tx,decodedLogs) => {\n                  const tokenDecimals = await this.getTokenDecimals();\n                  const tokenAmount = this.functionsUtil.BNify(decodedLogs._tokenAmount);\n                  const tokenAmountFixed = this.functionsUtil.fixTokenDecimals(tokenAmount,tokenDecimals);\n                  const tokenAmountFormatted = parseFloat(tokenAmountFixed.toString()).toFixed(2);\n                  const isDepositTokenTx = tx.to.toLowerCase() === this.props.tokenConfig.address.toLowerCase();\n\n                  if (isDepositTokenTx){\n\n                    // Mined\n                    if (tx.blockNumber && tx.status){\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit completed',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} has been deposited`,\n                        variant: \"success\",\n                      });\n\n                      // Update User Balance\n                      this.getAccountBalance(tokenAmount);\n                    } else {\n                      // Toast message\n                      window.showToastMessage({\n                        message:'Deposit pending',\n                        secondaryMessage: `${tokenAmountFormatted} ${this.props.selectedToken} are on the way`,\n                        variant: \"processing\",\n                      });\n                    }\n                  }\n                }\n\n                let checkTransactionReceiptTimeoutID = null;\n\n                const checkTransactionReceipt = (txHash,decodedLogs) => {\n                  if (checkTransactionReceiptTimeoutID){\n                    window.clearTimeout(checkTransactionReceiptTimeoutID);\n                  }\n                  web3SocketProvider.eth.getTransactionReceipt(txHash,(err,txReceipt)=>{\n                    if (!err){\n                      if (txReceipt){\n                        receiptCallback(txReceipt,decodedLogs);\n                      } else{\n                        checkTransactionReceiptTimeoutID = window.setTimeout(() => { checkTransactionReceipt(txHash,decodedLogs) },3000);\n                      }\n                    }\n                  });\n                }\n\n                checkTransactionReceipt(txHash,decodedLogs);\n\n                subscribedTransactions[txHash] = log;\n                this.setState({subscribedTransactions});\n              }\n            }\n          }\n        })\n        .on(\"changed\", log => {\n          \n        });\n        */\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        });\n\n        // After account is complete, get the balance\n        this.getAccountBalance();\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // this.functionsUtil.customLog(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [accountBalance,accountBalanceToken,tokenDecimals] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    const contracts = this.functionsUtil.getGlobalConfig(['contracts']);\n    await this.functionsUtil.asyncForEach(Object.keys(contracts),async (contractName) => {\n      const contractInfo = contracts[contractName];\n      if (contractInfo.address !== null && contractInfo.abi !== null){\n        this.functionsUtil.customLog('initializeContracts, init contract', contractName, contractInfo.address);\n        await this.initContract(contractName, contractInfo.address, contractInfo.abi);\n      }\n    });\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    await this.functionsUtil.asyncForEach(Object.keys(govTokens),async (token) => {\n      const govTokenConfig = govTokens[token];\n      if (!govTokenConfig.enabled){\n        return;\n      }\n      // Initialize govToken contracts\n      let foundGovTokenContract = this.state.contracts.find(c => c.name === token);\n      if (!foundGovTokenContract) {\n        this.functionsUtil.customLog('initializeContracts, init contract', token, govTokenConfig.address);\n        await this.initContract(token, govTokenConfig.address, govTokenConfig.abi);\n      }\n    });\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      await this.functionsUtil.asyncForEach(Object.keys(this.props.availableStrategies),async (strategy) => {\n        \n        const availableTokens = this.props.availableStrategies[strategy];\n\n        await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          let foundTokenContract = this.state.contracts.find(c => c.name === token);\n          if (!foundTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            await this.initContract(token, tokenConfig.address, tokenConfig.abi);\n          }\n\n          // Initialize idleTokens contracts\n          let foundIdleTokenContract = this.state.contracts.find(c => c.name === tokenConfig.idle.token);\n          if (!foundIdleTokenContract) {\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            await this.initContract(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi);\n          }\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n            if (!foundProtocolContract) {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              await this.initContract(p.token, p.address, p.abi);\n            }\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              await this.initContract(oldContract.name, oldContract.address, oldContract.abi);\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                let foundProtocolContract = this.state.contracts.find(c => c.name === p.token);\n                if (!foundProtocolContract) {\n                  this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                  await this.initContract(p.token, p.address, p.abi);\n                }\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              await this.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n            }\n          }\n        })\n      });\n    }\n\n    return this.setState({\n      contractsInitialized:true\n    });\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n\n    const networkId =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.requiredNetwork !== \"undefined\"\n        ? this.props.config.requiredNetwork\n        : globalConfigs.network.requiredNetwork;\n\n    let networkName = globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId] : 'unknown';\n\n    let requiredNetwork = {\n      name: networkName,\n      id: networkId\n    };\n\n    let network = Object.assign({},this.state.network);\n    network.required = requiredNetwork;\n\n    this.setState({ network });\n  }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  getNetworkName = async () => {\n    try {\n      return this.state.web3.eth.net.getNetworkType((error, networkName) => {\n        let current = { ...this.state.network.current };\n        current.name = networkName;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network Name: \", error);\n    }\n  }\n\n  checkNetwork = async () => {\n    this.getRequiredNetwork();\n\n    await Promise.all([\n      this.getNetworkId(),\n      this.getNetworkName()\n    ]);\n\n    let network = Object.assign({},this.state.network);\n    network.isCorrectNetwork = !this.state.network.current.id || globalConfigs.network.enabledNetworks.includes(this.state.network.current.id);\n    // console.log('checkNetwork',this.state.network.current.id,network.isCorrectNetwork);\n\n    this.setState({ network });\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    transactions: {},\n    CrispClient: null,\n    permitClient:null,\n    tokenDecimals:null,\n    accountBalance: null,\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            IDLE Governance Token is now live!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://idlefinance.medium.com/idle-governance-is-live-9b55e8f407d7'}\n          >\n            Read More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                position={'relative'}\n                src={'images/logo.svg'}\n                height={['35px','48px']}\n              />\n            </RouterLink>\n          </Flex>\n            <Flex\n              width={[0.5,8/12]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={\"flex-end\"}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    mr={4}\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile &&\n                  <>\n                    <Link\n                      mr={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n              }\n            </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  1337:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:['beta'],\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  },\n  1:{ // Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAIYieldV3',\n            address:'0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            token:'idleDAI',\n            abi:IdleConverterPersonalSignV4,\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            enabled:false,\n            name:'fulcrum',\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token:'aDAIv2',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:CHAI,\n            name:'dsr',\n            enabled:true,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            abi:yToken,\n            name:'dydx',\n            enabled:true,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCYieldV3',\n            address:'0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols:[\n            {\n              abi:yToken,\n              name:'dydx',\n              enabled:true,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            name:'aavev2',\n            token:'aUSDCv2',\n            address:'0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTYield',\n          address:'0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTYieldV3',\n            address:'0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDT',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            name:'aavev2',\n            enabled:true,\n            token:'aUSDTv2',\n            address:'0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      SUSD:{\n        decimals:18,\n        token:'SUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address:'0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre:{\n          destCurrency:'SUSD'\n        },\n        defiPrime:{\n          token:'susd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleSUSDYield',\n          address:'0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleSUSD',\n            name:'idleSUSDYieldV3',\n            address:'0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleSUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x625aE63000f46200499120B906716420bd059240',\n            token:'aSUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'aavev2',\n            enabled:true,\n            abi:aToken,\n            address:'0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token:'aSUSDv2',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      TUSD:{\n        decimals:18,\n        token:'TUSD',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        skipMintForDeposit:false,\n        color:'hsl(217, 100%, 20%)',\n        address:'0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre:{\n          destCurrency:'TUSD'\n        },\n        defiPrime:{\n          token:'tusd'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleTUSDYield',\n          address:'0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleTUSD',\n            name:'idleTUSDYieldV3',\n            address:'0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleTUSD',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token:'aTUSD',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aTUSDv2',\n            address:'0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols:[\n          {\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token:'cETH',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            address:'0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token:'aWETH',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WBTC:{\n        decimals:8,\n        token:'WBTC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(29, 81%, 59%)',\n        address:'0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WBTC'\n        },\n        defiPrime:{\n          token:'wbtc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWBTCYield',\n          address:'0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration:{\n          enabled:true,\n          message:'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleWBTC',\n            name:'idleWBTCYieldV3',\n            address:'0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleWBTC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            enabled:true,\n            token:'cWBTC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:iToken,\n            decimals:18,\n            token:'iWBTC',\n            enabled:false,\n            name:'fulcrum',\n            address:'0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'aWBTC',\n            address:'0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            abi:aToken,\n            enabled:true,\n            name:'aavev2',\n            token:'aWBTCv2',\n            address:'0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      },\n      RAI:{\n        deposit:{},\n        token:'RAI',\n        decimals:18,\n        enabled:true,\n        abi:ERC20.abi,\n        enabledEnvs:['beta'],\n        govTokensDisabled:false,\n        color:'hsl(169,42%,37%)',\n        icon:'images/tokens/RAI.png',\n        address:'0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleRAIYield',\n          address:'0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            enabled:true,\n            name:'cream',\n            token:'crRAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi:fToken,\n            decimals:28,\n            name:'fuse',\n            token:'fRAI',\n            enabled:true,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            token:'aRAI',\n            enabled:true,\n            name:'aavev2',\n            functions:{\n            },\n            address:'0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n    },\n    risk:{\n      DAI:{\n        abi:DAI,\n        decimals:18,\n        token:'DAI',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAISafe',\n          address:'0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleDAI',\n            name:'idleDAISafeV3',\n            address:'0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token:'yxDAIOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token:'cDAI',\n            decimals:28,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x493c57c4763932315a328269e1adad09653b9081',\n            token:'iDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token:'aDAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dsr',\n            enabled:true,\n            abi:CHAI,\n            address:'0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token:'CHAI',\n            decimals:18,\n            functions:{\n\n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token:'yxDAI',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDC:{\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCSafe',\n          address:'0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDC',\n            name:'idleUSDCSafeV3',\n            address:'0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols:[\n            {\n              name:'dydx',\n              enabled:true,\n              abi:yToken,\n              address:'0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token:'yxUSDCOld',\n              decimals:18,\n              functions:{\n                exchangeRate:{\n                  name:'price',\n                  params:[]\n                }\n              }\n            }\n          ],\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleUSDC',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token:'cUSDC',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token:'iUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token:'aUSDC',\n            decimals:18,\n            functions:{\n              \n            }\n          },\n          {\n            name:'dydx',\n            enabled:true,\n            abi:yToken,\n            address:'0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token:'yxUSDC',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'price',\n                params:[]\n              }\n            }\n          }\n        ]\n      },\n      USDT:{\n        decimals:6,\n        token:'USDT',\n        enabled:true,\n        abi:ERC20.abi,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre:{\n          destCurrency:'USDT'\n        },\n        defiPrime:{\n          token:'usdt'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDTSafe',\n          address:'0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration:{\n          enabled:true,\n          oldContract:{\n            abi:IdleTokenV3,\n            token:'idleUSDT',\n            name:'idleUSDTSafeV3',\n            address:'0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract:{\n            abi:IdleConverterPersonalSignV4,\n            token:'idleDAI',\n            name:'IdleConverterV4',\n            address:'0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses:[],\n            functions:[\n              {\n                label:'Migrate',\n                name:'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols:[\n          {\n            name:'compound',\n            enabled:true,\n            abi:cToken.abi,\n            address:'0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token:'cUSDT',\n            decimals:16,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'fulcrum',\n            enabled:false,\n            abi:iToken,\n            address:'0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token:'iUSDT',\n            decimals:18,\n            functions:{\n              exchangeRate:{\n                name:'tokenPrice',\n                params:[]\n              }\n            },\n          },\n          {\n            name:'aave',\n            enabled:true,\n            abi:aToken,\n            address:'0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token:'aUSDT',\n            decimals:18,\n            functions:{\n              \n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from 'jquery';\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from './connectors';\nimport Web3Provider from 'web3-react';\nimport { Web3Consumer } from 'web3-react';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from '../configs/globalConfigs';\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from '../configs/availableTokens';\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from 'rimble-ui';\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import('../Dashboard/Dashboard'));\nconst Governance = React.lazy(() => import('../Governance/Governance'));\n\nclass App extends Component {\n  state = {\n    network:null,\n    cachedData:{},\n    buyToken: null,\n    currentEnv:null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode:'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme:theme,\n    currentSection:null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  closeToastMessage = (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps:null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps:props\n    });\n  }\n\n  processCustomParam = (props,prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback=null) => {\n    this.functionsUtil.setLocalStorage('cachedData',{},true);\n    await this.setState({\n      cachedData:{}\n    },() => {\n      if (typeof callback === 'function'){\n        callback();\n      }\n    });\n    return true;\n  }\n\n  setCachedData = (key,data,TTL=null,useLocalStorage=false) => {\n\n    key = key.toLowerCase();\n    const cachedKeyFound = this.state.cachedData[key];\n    const currentTime = parseInt(Date.now()/1000);\n\n    const update_key = !cachedKeyFound || ( (!cachedKeyFound.expirationDate || cachedKeyFound.expirationDate>=currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data));\n\n    let output = false;\n\n    if (update_key){\n      const expirationDate = TTL ? currentTime+(TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage){\n        let storedCachedData = this.functionsUtil.getStoredItem('cachedData');\n        if (!storedCachedData){\n          storedCachedData = {};\n        }\n        storedCachedData = {\n          ...storedCachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        };\n        // console.log('STORED CACHE - INSERT KEY',key,data);\n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [key]:{\n            data,\n            expirationDate\n          }\n        }\n      }));\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)){\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress){\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw:false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({...state, selectedTab: tabIndex}));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : globalConfigs.network.requiredNetwork;\n\n    // console.log('loadAvailableTokens',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens[requiredNetwork]).forEach((strategy) => {\n      availableStrategies[strategy] = Object.keys(availableTokens[requiredNetwork][strategy]).reduce( (enabledTokens,token) => {\n        const tokenConfig = availableTokens[requiredNetwork][strategy][token];\n        const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n        if (tokenConfig.enabled && envEnabled){\n          enabledTokens[token] = tokenConfig;\n        }\n        return enabledTokens;\n      },{});\n    });\n\n    newState.availableStrategies = availableStrategies;\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]){\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]){\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy,selectedToken){\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    const newState = {\n      tokenConfig:!selectedToken ? null : this.state.tokenConfig,\n      availableTokens:!selectedToken ? null : this.state.availableTokens,\n      selectedToken:!selectedToken ? selectedToken :this.state.selectedToken,\n      selectedStrategy:!selectedStrategy ? selectedStrategy :this.state.selectedStrategy,\n    };\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken) {\n      if ( this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase()) ){\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',newState);\n\n    await this.setState(newState,callback);\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())){\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      },callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      },callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())){\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState,callback);\n    } else if(!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig:null\n      },callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction){\n      window.console.error = () => {};\n      window.console.warn = () => {};\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage){\n      this.functionsUtil.removeStoredItem('context');\n\n      // Clear all localStorage data except walletProvider and connectorName if version has changed\n      const version = this.functionsUtil.getStoredItem('version',false);\n      if (version !== globalConfigs.version){\n        this.functionsUtil.clearStoredData(['walletProvider','connectorName','themeMode']);\n        this.functionsUtil.setLocalStorage('version',globalConfigs.version);\n      }\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode',false);\n    if (themeMode){\n      this.setThemeMode(themeMode);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i=0;i<iFrames.length;i++){\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w){\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCustomAddress();\n    this.loadCurrentEnvironment();\n  }\n\n  loadCurrentEnvironment(){\n    const isLive = this.functionsUtil.checkUrlOrigin();\n    const currentEnv = isLive ? 'live' : 'beta';\n    this.setState({\n      currentEnv\n    },() => {\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress(){\n    if (!this.state.customAddress){\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom'){\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress){\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged){\n      if (this.state.currentSection === 'landing'){\n        this.setThemeMode('light',false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode',false) || this.functionsUtil.getGlobalConfig(['dashboard','theme','mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged){\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage){\n      const connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      const walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      this.setConnector(connectorName,walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width:this.state.width,\n      height:this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged){\n      if (widthChanged){\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged){\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  // Optional parameters to pass into RimbleWeb3\n  config = globalConfigs.network;\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e){\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken:null,\n      buyModalOpened:false\n    });\n  }\n\n  openBuyModal(e,buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened:true\n    });\n  }\n\n  async logout(){\n    // Reset Custom Address\n    this.setState({\n      customAddress:null\n    });\n    // Reset Localstorage\n    this.functionsUtil.clearStoredData(['version','themeMode','lastLogin']);\n  }\n\n  setNetwork(network){\n    this.setState({\n      network\n    });\n  }\n\n  setConnector(connectorName,walletProvider){\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider){\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    if ( (connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if ( connectorName === 'Injected' ){\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider){\n        case 'Metamask':\n          if (!hasMetamask && hasDapper){\n            walletProvider = 'Dapper';\n          }\n        break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask){\n            walletProvider = 'Metamask';\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    },() => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode,store=true){\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard','theme','darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled){\n      themeMode = 'light';\n    }\n\n    switch (themeMode){\n      default:\n      case 'light':\n        selectedTheme = theme;\n      break;\n      case 'dark':\n        selectedTheme = themeDark;\n      break;\n    }\n\n    if (store){\n      this.functionsUtil.setLocalStorage('themeMode',themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection){\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize:4,\n            fontWeight:2\n          }}\n          loaderProps={{\n            mb:3,\n            size:'80px',\n            color:'primary'\n          }}\n          flexProps={{\n            my:3,\n            flexDirection:'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer>\n              {context => {\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    config={this.config}\n                    connectors={connectors}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        accountBalanceLow,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper\n                      }) => {\n                        return (\n                        <Box>\n                          <Switch>\n                            <Route\n                              path=\"/dashboard/:section?/:param1?/:param2?\"\n                              render={\n                                (props) => \n                                  <Suspense\n                                    fallback={SuspenseLoader}\n                                  >\n                                    <Dashboard\n                                      {...props}\n                                      web3={web3}\n                                      modals={modals}\n                                      network={network}\n                                      context={context}\n                                      account={account}\n                                      isDashboard={true}\n                                      initWeb3={initWeb3}\n                                      biconomy={biconomy}\n                                      isMobile={isMobile}\n                                      simpleID={simpleID}\n                                      contracts={contracts}\n                                      initAccount={initAccount}\n                                      permitClient={permitClient}\n                                      initSimpleID={initSimpleID}\n                                      initContract={initContract}\n                                      transactions={transactions}\n                                      buyToken={this.state.buyToken}\n                                      logout={this.logout.bind(this)}\n                                      accountBalance={accountBalance}\n                                      themeMode={this.state.themeMode}\n                                      theme={this.state.selectedTheme}\n                                      validateAccount={validateAccount}\n                                      connecting={this.state.connecting}\n                                      cachedData={this.state.cachedData}\n                                      setToken={this.setToken.bind(this)}\n                                      accountValidated={accountValidated}\n                                      getTokenDecimals={getTokenDecimals}\n                                      rejectValidation={rejectValidation}\n                                      tokenConfig={this.state.tokenConfig}\n                                      getAccountBalance={getAccountBalance}\n                                      accountBalanceLow={accountBalanceLow}\n                                      accountInizialized={accountInizialized}\n                                      selectedToken={this.state.selectedToken}\n                                      connectorName={this.state.connectorName}\n                                      setStrategy={this.setStrategy.bind(this)}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountBalanceToken={accountBalanceToken}\n                                      initializeContracts={initializeContracts}\n                                      walletProvider={this.state.walletProvider}\n                                      buyModalOpened={this.state.buyModalOpened}\n                                      erc20ForwarderClient={erc20ForwarderClient}\n                                      contractsInitialized={contractsInitialized}\n                                      openBuyModal={this.openBuyModal.bind(this)}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      handleMenuClick={this.selectTab.bind(this)}\n                                      setConnector={this.setConnector.bind(this)}\n                                      setThemeMode={this.setThemeMode.bind(this)}\n                                      availableTokens={this.state.availableTokens}\n                                      closeBuyModal={this.closeBuyModal.bind(this)}\n                                      setCachedData={this.setCachedData.bind(this)}\n                                      selectedStrategy={this.state.selectedStrategy}\n                                      userRejectedValidation={userRejectedValidation}\n                                      clearCachedData={this.clearCachedData.bind(this)}\n                                      setStrategyToken={this.setStrategyToken.bind(this)}\n                                      accountValidationPending={accountValidationPending}\n                                      availableStrategies={this.state.availableStrategies}\n                                      setCurrentSection={this.setCurrentSection.bind(this)}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      contractMethodSendWrapper={contractMethodSendWrapper}\n                                      setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                    />\n                                  </Suspense>\n\n                              }\n                            >\n                            </Route>\n                            {\n                              governanceEnabled && \n                                <Route\n                                  path=\"/governance/:section?/:item_id?\"\n                                  render={\n                                    (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Governance\n                                          {...props}\n                                          web3={web3}\n                                          modals={modals}\n                                          network={network}\n                                          context={context}\n                                          account={account}\n                                          initWeb3={initWeb3}\n                                          biconomy={biconomy}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          isGovernance={true}\n                                          contracts={contracts}\n                                          initAccount={initAccount}\n                                          initSimpleID={initSimpleID}\n                                          initContract={initContract}\n                                          transactions={transactions}\n                                          buyToken={this.state.buyToken}\n                                          logout={this.logout.bind(this)}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          validateAccount={validateAccount}\n                                          connecting={this.state.connecting}\n                                          cachedData={this.state.cachedData}\n                                          setToken={this.setToken.bind(this)}\n                                          accountValidated={accountValidated}\n                                          getTokenDecimals={getTokenDecimals}\n                                          rejectValidation={rejectValidation}\n                                          tokenConfig={this.state.tokenConfig}\n                                          getAccountBalance={getAccountBalance}\n                                          accountBalanceLow={accountBalanceLow}\n                                          accountInizialized={accountInizialized}\n                                          selectedToken={this.state.selectedToken}\n                                          connectorName={this.state.connectorName}\n                                          setStrategy={this.setStrategy.bind(this)}\n                                          userRejectedConnect={userRejectedConnect}\n                                          accountBalanceToken={accountBalanceToken}\n                                          initializeContracts={initializeContracts}\n                                          walletProvider={this.state.walletProvider}\n                                          buyModalOpened={this.state.buyModalOpened}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          rejectAccountConnect={rejectAccountConnect}\n                                          handleMenuClick={this.selectTab.bind(this)}\n                                          setConnector={this.setConnector.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          availableTokens={this.state.availableTokens}\n                                          closeBuyModal={this.closeBuyModal.bind(this)}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          selectedStrategy={this.state.selectedStrategy}\n                                          userRejectedValidation={userRejectedValidation}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          setStrategyToken={this.setStrategyToken.bind(this)}\n                                          accountValidationPending={accountValidationPending}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          contractMethodSendWrapper={contractMethodSendWrapper}\n                                          setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        />\n                                      </Suspense>\n                                  }\n                                >\n                                </Route>\n                            }\n                            <Route>\n                              <Header\n                                modals={modals}\n                                network={network}\n                                context={context}\n                                account={account}\n                                initWeb3={initWeb3}\n                                isMobile={isMobile}\n                                contracts={contracts}\n                                initAccount={initAccount}\n                                initContract={initContract}\n                                buyToken={this.state.buyToken}\n                                accountBalance={accountBalance}\n                                logout={this.logout.bind(this)}\n                                validateAccount={validateAccount}\n                                connecting={this.state.connecting}\n                                accountValidated={accountValidated}\n                                getTokenDecimals={getTokenDecimals}\n                                rejectValidation={rejectValidation}\n                                tokenConfig={this.state.tokenConfig}\n                                getAccountBalance={getAccountBalance}\n                                accountBalanceLow={accountBalanceLow}\n                                selectedToken={this.state.selectedToken}\n                                connectorName={this.state.connectorName}\n                                userRejectedConnect={userRejectedConnect}\n                                accountBalanceToken={accountBalanceToken}\n                                walletProvider={this.state.walletProvider}\n                                buyModalOpened={this.state.buyModalOpened}\n                                contractsInitialized={contractsInitialized}\n                                openBuyModal={this.openBuyModal.bind(this)}\n                                rejectAccountConnect={rejectAccountConnect}\n                                handleMenuClick={this.selectTab.bind(this)}\n                                setConnector={this.setConnector.bind(this)}\n                                availableTokens={this.state.availableTokens}\n                                closeBuyModal={this.closeBuyModal.bind(this)}\n                                userRejectedValidation={userRejectedValidation}\n                                accountValidationPending={accountValidationPending}\n                                connectAndValidateAccount={connectAndValidateAccount}\n                                setToken={ e => { this.setToken(e) } }\n                              />\n\n                              {this.state.route === \"onboarding\" ? (\n                                <Web3Debugger\n                                  web3={web3}\n                                  account={account}\n                                  accountBalance={accountBalance}\n                                  accountBalanceToken={accountBalanceToken}\n                                  accountBalanceLow={accountBalanceLow}\n                                  initAccount={initAccount}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountValidated={accountValidated}\n                                  accountValidationPending={accountValidationPending}\n                                  rejectValidation={rejectValidation}\n                                  userRejectedValidation={userRejectedValidation}\n                                  validateAccount={validateAccount}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  modals={modals}\n                                  network={network}\n                                  transaction={transaction}\n                                />\n                              ) : null}\n\n                              {this.state.route === \"default\" ? (\n                                <Switch>\n                                  <Route exact path=\"/\"\n                                    render={ (props) =>\n                                      <Suspense\n                                        fallback={SuspenseLoader}\n                                      >\n                                        <Landing\n                                          {...props}\n                                          web3={web3}\n                                          network={network}\n                                          account={account}\n                                          isMobile={isMobile}\n                                          simpleID={simpleID}\n                                          contracts={contracts}\n                                          initContract={initContract}\n                                          innerWidth={this.state.width}\n                                          logout={this.logout.bind(this)}\n                                          innerHeight={this.state.height}\n                                          accountBalance={accountBalance}\n                                          themeMode={this.state.themeMode}\n                                          theme={this.state.selectedTheme}\n                                          cachedData={this.state.cachedData}\n                                          connecting={this.state.connecting}\n                                          selectedTab={this.state.selectedTab}\n                                          tokenConfig={this.state.tokenConfig}\n                                          accountBalanceLow={accountBalanceLow}\n                                          getAccountBalance={getAccountBalance}\n                                          customAddress={this.state.customAddress}\n                                          selectedToken={this.state.selectedToken}\n                                          accountBalanceToken={accountBalanceToken}\n                                          closeToastMessage={this.closeToastMessage}\n                                          contractsInitialized={contractsInitialized}\n                                          openBuyModal={this.openBuyModal.bind(this)}\n                                          setThemeMode={this.setThemeMode.bind(this)}\n                                          processCustomParam={this.processCustomParam}\n                                          availableTokens={this.state.availableTokens}\n                                          setCachedData={this.setCachedData.bind(this)}\n                                          updateSelectedTab={this.selectTab.bind(this)}\n                                          toastMessageProps={this.state.toastMessageProps}\n                                          clearCachedData={this.clearCachedData.bind(this)}\n                                          availableStrategies={this.state.availableStrategies}\n                                          setCurrentSection={this.setCurrentSection.bind(this)}\n                                          connectAndValidateAccount={connectAndValidateAccount}\n                                          setToken={ e => { this.setToken(e) } }\n                                        />\n                                        <CookieConsent\n                                          expires={365}\n                                          buttonText={\"Ok\"}\n                                          location={\"bottom\"}\n                                          acceptOnScroll={true}\n                                          cookieName={\"cookieAccepted\"}\n                                          acceptOnScrollPercentage={5}\n                                          style={{background: \"rgba(255,255,255,0.95)\",zIndex:'9999999'}}\n                                          buttonStyle={{display: isMobile ? \"block\" : \"none\", backgroundColor:'#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\"}}\n                                        >\n                                          <Flex flexDirection={'row'} alignItems={['flex-start','center']} justifyContent={'flex-start'} maxHeight={['150px','initial']} style={ isMobile ? {overflowY:'scroll'} : null }>\n                                            <Image display={['none','block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                            <Text pl={[0,3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                              This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                              You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                            </Text>\n                                          </Flex>\n                                        </CookieConsent>\n                                      </Suspense>\n                                    }\n                                  ></Route>\n                                  <Route exact path=\"/terms-of-service\">\n                                    <Tos />\n                                  </Route>\n                                  <Route>\n                                    <PageNotFound />\n                                  </Route>\n                                </Switch>\n                              ) : null}\n                            </Route>\n                          </Switch>\n                          <TransactionToastUtil\n                            transactions={transactions}\n                            themeMode={this.state.themeMode}\n                          />\n                        </Box>\n                      )}}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={ isInteractive ? e => this.props.handleClick(this.props) : null }\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            <FieldComponent\n                              {...this.props}\n                              fieldInfo={fieldInfo}\n                              colProps={colInfo.props}\n                              parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            />\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,migrationContractApproved,this.props.selectedToken,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        txStatus:tx.status,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    }\n\n    if (!params){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    // console.log('ExecuteTransaction',this.props.contractName,this.props.methodName,params);\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens[token];\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                return (\n                  <ImageButton\n                    caption={token}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    imageSrc={`images/tokens/${token}.svg`}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} my={0}>\n                {\n                  this.props.showInline && this.props.buyToken ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `How do you prefer to buy ${this.state.selectedToken}?`\n                }\n              </Text>\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  maxWidth={ this.props.showInline ? '35em' : 'initial' }\n                  width={ (this.props.showInline && !this.props.isMobile) ? 0.72 : 1 }\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={`images/tokens/${token}.svg`} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.notion.so/idlelabs/Idle-Finance-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized && this.props.contractsInitialized;\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || (contractInitialized && !this.state.ready)){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig){\n      return false;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              // if (isRisk){\n              //   debugger;\n              // }\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                aprChartData[0].data.push({ x, y });\n              });\n            }\n\n            this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n          }\n\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'color','hsl']).join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfig = this.props.tokenConfig || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        const icon1 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={icon1} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        const icon2 = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={icon2} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        output = (\n          <Text {...fieldProps}>{this.props.token}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : this.functionsUtil.BNify(this.state.score).lte(0) ? '-' : loader\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            const customFieldName = Object.values(fieldInfo.path).pop();\n            if (this.props.tokenConfig[`${customFieldName}Props`]){\n              const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n              // Replace props\n              if (customFieldProps && Object.keys(customFieldProps).length){\n                Object.keys(customFieldProps).forEach(p => {\n                  fieldProps[p] = customFieldProps[p];\n                });\n              }\n            }\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n"],"sourceRoot":""}