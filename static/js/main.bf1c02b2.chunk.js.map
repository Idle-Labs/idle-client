{"version":3,"sources":["CardIconButton/CardIconButton.js","SmartNumber/SmartNumber.js","TrancheWelcome/TrancheWelcome.module.scss","PageNotFound/PageNotFound.module.scss","Breadcrumb/Breadcrumb.js","RoundIconButton/RoundIconButton.js","utilities/components/ShortHash.js","IconBox/IconBox.js","AllocationChart/AllocationChart.js","Faquestion/Faquestion.js","PortfolioEquity/PortfolioEquity.js","GenericSelector/GenericSelector.js","ExecuteTransaction/ExecuteTransaction.js","AssetSelector/AssetSelector.js","TxProgressBar/TxProgressBar.js","theme.js","GenericChart/GenericChart.js","TableCellHeader/TableCellHeader.module.scss","utilities/components/ModalCard.module.scss","TwitterShareButton/TwitterShareButton.module.scss","TransactionListFilters/TransactionListFilters.module.scss","Web3ConnectionButtons/Web3ConnectionButtons.module.scss","utilities/components/Header.module.scss","TooltipText/TooltipText.js","Tos/Tos.module.scss","TransactionField/TransactionField.js","utilities/IdleGovToken.js","utilities/FunctionsUtil.js","DashboardCard/DashboardCard.js","ConnectBox/ConnectBox.js","TableRow/TableRow.js","DashboardCard/DashboardCard.module.scss","utilities/components/BuyModal.js","TableHeader/TableHeader.js","FastBalanceSelector/FastBalanceSelector.js","configs/availableTranches.js","SendTxWithBalance/SendTxWithBalance.js","Gauges/Gauges.js","Staking/Staking.js","GenericFaqs/GenericFaqs.js","utilities/components/LimitReachedModal.js","TrancheDetails/TrancheDetails.js","TrancheDepositRedeem/TrancheDepositRedeem.js","PortfolioEquityTranches/PortfolioEquityTranches.js","FundsOverviewTranche/FundsOverviewTranche.js","StakingRewardsTranche/StakingRewardsTranche.js","TranchePage/TranchePage.js","TrancheBox/TrancheBox.js","TrancheFlash/TrancheFlash.js","TrancheWelcome/TrancheWelcome.js","GenericPieChart/GenericPieChart.js","TotalBalanceCounter/TotalBalanceCounter.js","TotalEarningsCounter/TotalEarningsCounter.js","Tranches/Tranches.js","TokenSwap/TokenSwap.js","LpStaking/LpStaking.js","StatsCardSmall/StatsCardSmall.js","IdleStakingDisapprove/IdleStakingDisapprove.js","IdleStaking/IdleStaking.js","NexusMutual/NexusMutual.js","TokenWrapper/TokenWrapper.js","PortfolioDonut/PortfolioDonut.js","EarningsEstimation/EarningsEstimation.js","DashboardIconButton/DashboardIconButton.js","PolygonBridgeTransactions/PolygonBridgeTransactions.js","StrategyPage/StrategyPage.js","BatchDeposit/BatchDeposit.js","PolygonBridge/PolygonBridge.js","CoverProtocol/CoverProtocol.js","TokenMigration/TokenMigration.js","BatchMigration/BatchMigration.js","DeployB2BVesting/DeployB2BVesting.js","GaugesBoostCalculator/GaugesBoostCalculator.js","configs/globalConfigs.js","TranchesList/TranchesList.js","abis/compound/cDAI.js","abis/tokens/ERC20.js","configs/availableTokens.js","Tos/Tos.js","theme-dark.js","App/connectors/TorusConnector.js","App/connectors/AuthereumConnector.js","App/connectors/GnosisSafeConnector.js","App/connectors/WalletLinkConnector.js","App/connectors/WalletConnectConnector.js","App/connectors.js","utilities/Multicall.js","utilities/components/WrongNetworkBanner.js","utilities/NetworkUtil.js","utilities/components/NoWeb3BrowserModal.js","utilities/components/NoWalletModal.js","utilities/GeneralUtil.js","utilities/components/WrongNetworkModal.js","utilities/components/TransactionFeeModal.js","Web3ConnectionButtons/Web3ConnectionButtons.js","utilities/components/ConnectionModal.js","utilities/components/ConnectionPendingModal.js","utilities/components/UserRejectedConnectionModal.js","utilities/components/LowFundsModal.js","utilities/ConnectionModalsUtil.js","utilities/components/ConnectionErrorModal.js","utilities/components/TransactionErrorModal.js","utilities/RimbleWeb3.js","utilities/components/Header.js","ScrollToTop/ScrollToTop.js","PageNotFound/PageNotFound.js","utilities/components/NetworkOverview.js","Web3Debugger/Web3Debugger.js","utilities/TransactionToastMessages.js","utilities/TransactionToastUtil.js","App/App.js","serviceWorker.js","index.js","TransactionListFilters/TransactionListFilters.js","TransactionsList/TransactionsList.js","Migrate/Migrate.js","ChartCustomTooltipRow/ChartCustomTooltipRow.js","AssetsList/AssetsList.js","Footer/Footer.module.scss","utilities/components/ModalCard.js","colors.js","AssetsUnderManagement/AssetsUnderManagement.js","VariationNumber/VariationNumber.js","GenericSelector/GenericSelector.module.scss","LoadingSpinner/LoadingSpinner.module.scss","FlexLoader/FlexLoader.js","LoadingSpinner/LoadingSpinner.js","ButtonLoader/ButtonLoader.js","TrancheField/TrancheField.js","RoundButton/RoundButton.js","ExtLink/ExtLink.js","Footer/Footer.js","TableCellHeader/TableCellHeader.js","CustomTooltip/CustomTooltip.js","CustomTooltip/CustomTooltipRow.js","Title/Title.js","ChartCustomTooltip/ChartCustomTooltip.js","CustomList/CustomList.js","TwitterShareButton/TwitterShareButton.js","utilities/components/ShareModal.js","CustomField/CustomField.js","AssetField/AssetField.js","ImageButton/ImageButton.js"],"names":["CardIconButton","cardProps","Object","assign","py","width","px","this","props","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_7__","isInteractive","isActive","isDisabled","handleClick","backgroundColor","rimble_ui__WEBPACK_IMPORTED_MODULE_6__","mx","margin","my","alignItems","flexDirection","justifyContent","align","image","iconBgColor","mr","isSidebar","p","borderRadius","theme","colors","transactions","actionBg","redeem","src","height","isMobile","imageProps","useIconOnly","name","icon","size","color","iconColor","iconProps","fontWeight","fontSize","textProps","text","Component","SmartNumber","functionsUtil","setProps","FunctionsUtil","loadUtils","_this2","formattedNumber","number","isNaN","type","formatMoney","precision","abbreviateNumber","decimals","maxPrecision","minPrecision","flexProps","keys","length","forEach","showUnit","unit","unitPos","react__WEBPACK_IMPORTED_MODULE_8___default","rimble_ui__WEBPACK_IMPORTED_MODULE_7__","unitProps","module","exports","trancheFlash","mobile","headerContainer","headerBgFiller","bgContainer","list","textContainer","Breadcrumb","_this","showPathMobile","id","_RoundIconButton_RoundIconButton__WEBPACK_IMPORTED_MODULE_7__","buttonProps","border","iconSize","iconName","ml","hoverColor","onClick","path","map","index","link","pathLink","Link","Text","pl","style","maxWidth","overflow","whiteSpace","textOverflow","borderLeft","concat","divider","key","e","goToSection","RoundIconButton","mainColor","disabled","minWidth","react__WEBPACK_IMPORTED_MODULE_6___default","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_7__","rimble_ui__WEBPACK_IMPORTED_MODULE_5__","ShortHash","state","componentUnmounted","loadData","prevProps","prevState","hash","newState","callback","setState","resolveAddress","shortenHash","getENSName","ensName","setStateSafe","loader","react__WEBPACK_IMPORTED_MODULE_7___default","rimble_ui__WEBPACK_IMPORTED_MODULE_8__","display","IconBox","isVisible","mt","textAlign","dangerouslySetInnerHTML","__html","children","AllocationChart","chartData","chartProps","selectedSlice","totalAllocation","protocolsAllocations","protocolsAllocationsPerc","selectedToken","getTokenAllocation","tokenConfig","padAngle","animate","borderWidth","cornerRadius","motionDamping","innerRadius","motionStiffness","d","onMouseEnter","data","_this3","onMouseLeave","tooltipFormat","v","sliceLabel","value","radialLabel","tooltip","container","inline","background","cardBg","labels","fontFamily","fonts","sansSerif","legends","slicesLabelsSkipAngle","radialLabelsSkipAngle","enableRadialLabels","radialLabelsTextXOffset","slicesLabelsTextColor","radialLabelsTextColor","radialLabelsLinkStrokeWidth","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","enableSlicesLabels","radialLabelsLinkColor","from","borderColor","modifiers","top","right","bottom","left","protocols","protocolInfo","i","protocolName","protocolAddr","address","toLowerCase","protocolAllocationPercParsed","parseFloat","times","toFixed","push","globalConfigs","stats","hsl","join","label","capitalize","protocolIcon","rimble_ui__WEBPACK_IMPORTED_MODULE_9__","position","zIndex","mb","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_10__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_13__","Pie","showLoader","Faquestion","isShowingAnswer","preventDefault","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","isOpened","boxShadow","cursor","h4","question","answer","PortfolioEquity","startDate","chartwidth","chartHeight","loadChartData","quickDateSelectionChanged","quickDateSelection","JSON","stringify","enabledTokens","componentDidMount","mobileChanged","themeModeChanged","themeMode","availableTokens","getEtherscanTxs","account","etherscanTxs","tokensBalance","firstTxTimestamp","asyncForEach","_ref","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee3","filteredTxs","amountLent","wrap","_context3","prev","next","values","filter","tx","token","BNify","action","status","Math","min","parseInt","timeStamp","tokenAmount","plus","minus","lt","balance","tokenPrice","idleTokens","stop","_x3","apply","arguments","currentDate","strToMoment","Date","clone","subtract","days","prevBalances","prevTimestamp","minChartValue","maxChartValue","aggregatedBalance","aggregatedBalancesKeys","tokensBalancesPerDate","currTimestamp","getTime","tokensData","isRisk","selectedStrategy","_ref2","_callee4","tokenAddress","_context4","getAvailableTokenAddress","getTokenApiData","sent","_x4","idleTokenBalance","foundBalances","tokensBalances","lastTokenData","lastTokenDataUnfiltered","pop","filteredTokenData","timestamp","tokenDecimals","filteredBalances","lastFilteredTx","idlePrice","fixTokenDecimals","newBalance","lastTx","lastTxBalance","gt","tokenUsdConversionRate","conversionRateField","getGlobalConfig","toUpperCase","chartToken","conversionRate","momentDate","isSameOrAfter","isSameOrBefore","formattedDate","format","max","frequencySeconds","_loop","aggregatedBalances","date","x","y","balances","itemIndex","item","itemPos","floor","yFormatDecimals","gridYStep","gridYValues","gridYValue","axisBottomIndex","daysCount","daysFrequency","ceil","xScale","yScale","stacked","xFormat","yFormat","axisBottom","legend","tickSize","tickPadding","orient","legendOffset","tickValues","legendPosition","pointSize","useMesh","axisLeft","tickRotation","pointLabel","enableArea","enableSlices","enableGridY","curve","enableGridX","pointBorderWidth","pointLabelYOffset","areaBaselineValue","pointColor","areaOpacity","axis","ticks","fill","grid","line","stroke","lineChartStroke","strokeDasharray","sliceTooltip","slideData","point","slice","points","_ChartCustomTooltip_ChartCustomTooltip__WEBPACK_IMPORTED_MODULE_11__","_ChartCustomTooltipRow_ChartCustomTooltipRow__WEBPACK_IMPORTED_MODULE_12__","serieId","yFormatted","formattedBalance","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_10__","Line","parentId","parentIdHeight","GenericSelector","loadComponents","selectedTokenChanged","optionsChanged","options","defaultValueChanged","defaultValue","componentsChanged","CustomOptionValue","CustomValueContainer","ControlComponent","innerProps","menuIsOpen","noShadow","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_12__","notInteractive","CustomIndicatorSeparator","CustomMenu","outerColor","selectProps","CustomInputContainer","isSearchable","fontSizes","copyColor","fontWeights","className","styles","searchInput","dark","searchInputHidden","CustomOption","selectedValue","o","indexOf","genericSelector","isDashboard","isFocused","react_select__WEBPACK_IMPORTED_MODULE_7__","onChange","components","Menu","Option","Control","Input","SingleValue","IndicatorSeparator","ExecuteTransaction","txStatus","processing","txHash","loading","error","eventData","eventCategory","eventLabel","methodName","eventAction","contractName","getTransactionError","sendGoogleAnalyticsEvent","callbackReceipt","transactionHash","params","getTransactionParams","getTransactionParamsAsync","transactionParams","sendRawTransaction","contractMethodSendWrapper","ExecuteComponent","react__WEBPACK_IMPORTED_MODULE_9___default","parentProps","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_12__","web3","network","progressBarProps","cancelTransaction","bind","endMessage","waitText","execute","componentProps","_ConnectBox_ConnectBox__WEBPACK_IMPORTED_MODULE_10__","AssetSelector","find","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_9__","fieldInfo","showCustomField","cachedData","setCachedData","showBalance","flex","_GenericSelector_GenericSelector__WEBPACK_IMPORTED_MODULE_11__","changeToken","TxProgressBar","txCount","ended","percentage","txTimestamp","initialized","estimatedTime","remainingTime","_callee","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default","_context","initProgressBar","getTransaction","transaction","Promise","_ref3","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__","_callee2","resolve","reject","_context2","eth","err","_x","_x2","abrupt","getBlockTime","pt","blockTime","axios","get","getPredictionTable","_callee5","predictTable","_context5","getTxEstimatedTime","gasPrice","getRequiredNetwork","provider","prediction","gasprice","pdValues","_estimateWait","gas","txMeanSecs","block_time","customLog","calculateRemainingTime","_callee6","secondsPassed","timePassed","_context6","blockNumber","div","toString","setTimeout","updateProgressBar","getTxInfo","_callee7","txProgressBarKey","txProgressBarData","_ref8","_ref9","_context7","localStorage","getItem","parse","all","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","setLocalStorage","_callee8","_context8","window","clearTimeout","gasoffered","minedProb","expectedWait","sum1","sum2","prob","exp","minutes","seconds","substr","currentNetwork","react__WEBPACK_IMPORTED_MODULE_10___default","rimble_ui__WEBPACK_IMPORTED_MODULE_13__","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_11__","textColor","loaderProps","span","renderRemainingTime","loadingMessage","sendingMessage","target","rel","href","getEtherscanTransactionUrl","explorer","cancelTextColor","cancelTextHoverColor","_colors__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","polished__WEBPACK_IMPORTED_MODULE_1__","__webpack_exports__","breakpoints","letterSpacings","lineHeights","solid","title","copy","serif","counter","space","radii","widths","minWidths","maxWidths","heights","minHeights","maxHeights","borders","borderWidths","shadows","opacity","primary","blue","base","gradient-bg","primary-light","light","primary-dark","bgBlue","tick","dark-blue","skyBlue","lightBlue","subColor","black","baseColors","near-black","dark-gray","mid-gray","gray","grey","silver","light-silver","moon-gray","light-gray","near-white","white","transparent","green","connect","newblue","alert","arrowActive","arrowInactive","selectBgFocused","selectBg","backButtonBg","wrongNetworkBannerBg","dashboardBg","statValue","boxBorder","cellTitle","cellText","divider2","deposit","migrate","menuBg","menuHover","flashColor","menuRightBorder","menuIconActive","cardBgContrast","cardHoverShadow","cardBgHover","cardBorder","pageActive","pageInactive","experimental","production","send","swap","boost","swapout","curvein","receive","default","curveout","withdraw","curvedepositin","curvedepositout","completed","pending","failed","blacks","whites","zIndices","messageStyle","shade","tint","success","warning","yellow","danger","red","info","buttons","--main-color","--contrast-color","normal","buttonSizes","small","padding","medium","large","GenericChart","addEventListener","handleWindowSizeChange","removeEventListener","chartContainer","document","getElementById","chartWidth","offsetWidth","chartContainerH","ChartType","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_7__","minHeight","undefined","loaderText","bg","twitterIcon","radioBtn","button","gradientButton","empty","select","selectDark","input","TooltipText","placement","message","tooltipProps","TransactionField","loadField","hashChanged","accountChanged","output","tokenSymbol","bgColor","fieldProps","rimble_ui__WEBPACK_IMPORTED_MODULE_12__","_utilities_components_ShortHash__WEBPACK_IMPORTED_MODULE_11__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_9__","amount","iconSrc","CustomComponent","customValue","getArrayPath","Image","Icon","IdleGovToken","classCallCheck","tokenName","getBalance","asyncToGenerator","regenerator_default","getTokenBalance","claimRewards","getPriorVotes","priorVotes","_args3","genericContractCall","refreshIdleSpeed","getUnclaimedTokens","getAPR","_ref6","IDLETokenConfig","cachedDataKey","APR","_ref7","idleDistribution","tokenAllocation","DAITokenConfig","tokenPool","idleDistributedPerYearUSD","_args6","enabled","idle","getDistribution","slicedToArray","getUniswapConversionRate","t0","lte","convertTokenBalance","totalAllocationWithUnlent","getSpeed","idleTokenAddress","idleSpeeds","getCachedDataWithLocalStorage","setCachedDataWithLocalStorage","_x5","_ref10","blocksPerYear","distribution","_x6","getUserDistribution","_callee10","fixByFrequency","currentNetworkId","totalSpeed","_args10","_context10","availableStrategies","getRequiredNetworkId","_ref12","_callee9","_ref13","_ref14","idleSpeed","userPoolShare","tokenSpeed","_context9","includes","getUserPoolShare","_x7","fixDistributionSpeed","distributionFrequency","getAvgApr","_callee12","_args12","_context12","_ref16","_callee11","_ref17","_ref18","idleApr","_context11","_x8","ethereumjsABI","require","profiler","idleGovToken","trimEth","toBN","n","utils","BN","toEth","wei","fromWei","toWei","htmlDecode","innerHTML","childNodes","nodeValue","BNify_obj","s","BigNumber","String","_len","Array","_key","logs","messagesEnabled","moment","customLogError","_console","_len2","_key2","errorsEnabled","console","getContractByName","networkId","required","contract","contracts","c","current","isCorrectNetwork","contractsNetworks","normalizeSimpleIDNotification","replace","str","replaceArrayProps","arr1","arr2","replaceArrayPropsRecursive","objectSpread","stripHtml","html","tmp","textContent","innerText","scrollTo","to","duration","start","scrollY","change","currentTime","easeInOutQuad","t","b","animateScroll","val","getQueryStringParameterByName","url","location","results","RegExp","exec","decodeURIComponent","getTxAction","depositProxyContractInfo","migrationContractAddr","migration","migrationContract","migrationContractOldAddrs","oldAddresses","batchMigration","batchMigrationContractAddr","isMigrationTx","contractAddress","isSendTransferTx","isReceiveTransferTx","isDepositTx","isRedeemTx","isSwapTx","startLen","endLen","shortHash","txStart","txEnd","switchEthereumChain","chainId","getInjectedWeb3","currentProvider","request","toHex","method","addEthereumChain","networkConfig","chainName","providerConfig","blockExplorerUrl","rpcUrls","publicRpc","rpc","nativeCurrency","baseToken","symbol","blockExplorerUrls","ensConfig","TTL","ens","addressCheck","supportedNetworks","checkAddress","ENS","ensAddress","getEnsAddress","getName","getAddress","getAccountPortfolioTranches","availableTranches","portfolio","tranches","userTransactions","avgAPY","totalBalance","totalEarnings","totalAmountLent","totalEarningsPerc","stakingRewards","tranchesBalance","getEtherscanUserTrancheTxs","protocol","protocolConfig","_ref4","_ref5","tranche","trancheConfig","gaugeConfig","trancheTokenBalance","trancheUserInfo","gaugeStakedBalance","trancheStakedBalance","tranchePrice","tranchePool","tokenBalance","_ref11","tokenBalanceConverted","trancheEarnings","trancheApy","poolShare","amountDeposited","trancheToken","getContractBalance","getTrancheUserInfo","getTrancheStakingRewards","functions","rewards","getTrancheStakedBalance","CDORewards","stakedBalance","toConsumableArray","rewardToken","tokenAmountConverted","loadTrancheFieldRaw","convertTrancheTokenBalance","amountDepositedConverted","trancheInfo","trancheWeight","rewardTokenConfig","rewardTokenConversionRate","getTokenConversionRateUniswap","getAccountPortfolio","orderedTokensBalance","depositedTokens","_args9","tokensToMigrate","totalBalanceConverted","_ref15","_ref16$","migrationEnabled","oldContractBalanceFormatted","tokenKey","checkMigration","strategy","getIdleTokenPrice","_ref19","tokenAprs","tokenAPY","tokenWeight","amountLentToken","tokenEarnings","getTokenAprs","getAmountDeposited","avgApy","currentWeb3","ethereum","Web3","getCurrentWeb3","requiredNetwork","web3RpcKey","web3Rpc","providers","HttpProvider","getCurveAvgSlippage","processedTxs","processedHashes","curveTokensBalance","curveTxs","avgSlippage","totalDeposited","getCurveAvailableTokens","getCurveTxs","curveTokens","curveTokenPrice","price","received","slippage","deposited","getCurveAvgBuyPrice","avgBuyPrice","_args11","prevAvgBuyPrice","getAvgBuyPrice","idleTokensBalance","getFirstDepositTx","_callee13","deposits","_args13","_context13","firstDepositTx","getDashboardSectionUrl","section","env","envUrl","baseUrl","origin","asyncTimeout","ms","getDepositTimestamp","_callee14","firstDepositTxs","_args14","_context14","reduce","acc","getTrancheUserTransactionsEvents","_ref25","_callee15","defaultEventsConfig","underlyingEventsConfig","underlyingEventsFilters_deposits","underlyingEventsFilters_redeems","_ref26","_ref27","underlying_redeems","underlying_deposits","trancheToken_redeems","trancheToken_deposits","_context15","CDO","getContractEvents","_x9","_x10","_ref28","_callee16","tokenConfig_filter","trancheConfig_filter","requiredNetworkId","etherscanInfo","etherscanApiUrl","tokenConfigs","firstTrancheBlock","tranchesConfig","endpoint","etherscanTxlist","_args16","_context16","endpoints","makeEtherscanApiRequest","result","some","trancheTokenAddresses","trancheType","isUnderlyingDeposit","isUnderlyingRedeem","isTrancheDeposit","isTrancheRedeem","returnValues","_x11","getEtherscanTokenTransfers","_ref29","_callee17","walletAddr","fromAddress","toAddress","fromBlock","toBlock","transferEvents","eventFilters","_args17","_context17","_x12","_x13","_x14","_x15","_x16","getTrancheStakingRewardsDistributions","_ref30","_callee19","stakingDistributions","_context19","_ref31","_callee18","transfers","_context18","_x19","_x17","_x18","getTrancheHarvests","_ref32","_callee21","_ref33","_ref34","stakingRewardsDistributions","autoFarming","harvestsList","_context21","_ref35","_callee20","_context20","_x22","_x20","_x21","getTrancheLastHarvest","_ref36","_callee22","strategyConfig","idleStrategyAddress","latestHarvestBlock","_ref37","_ref38","blockInfo","totalAmount","_context22","Strategy","genericContractCallCachedTTL","initContract","abi","getBlockInfo","log","_x23","getGovTokenApr","_ref39","_callee23","govToken","poolTokenConfig","poolSupply","tokensPerSecond","govTokenConfig","_ref40","_ref41","tokensPerYear","convertedTokensPerYear","tokenApr","tokenApy","_context23","getTokenConfig","_address","apr2apy","apr","apy","_x24","_x25","_x26","_x27","getTrancheRewardTokensInfo","_ref42","_callee25","tokensDistribution","_context25","_ref43","_callee24","firstHarvest","prevBlockInfo","lastBlockInfo","latestHarvest","distributionEnded","lastAmount","tokensPerDay","distributionSpeedUnit","tokensPerBlock","tranchePoolSize","lastBlockPoolSize","distributionSpeed","rewardsRateMethod","periodFinishMethod","periodFinish","_ref44","_ref45","_firstHarvest","_latestHarvest","firstBlock","_ref46","_ref47","poolSize","elapsedBlocks","elapsedSeconds","_context24","rewardsRate","now","genericContractCallCached","total","_x30","_x28","_x29","_ref48","_callee27","totalAmountDeposited","underlying_transfers","trancheToken_transfers","blocksInfo","_args27","_context27","sort","_ref49","_callee26","trancheTokenTransferEvent","tokenTransferEvent","_ref50","_ref51","tokenConversionRate","_context26","_x33","trancheTokenAmount","hashKey","trancheTokens","_x31","_x32","getTrancheUserTransactions","_ref52","_callee28","_context28","_x34","_x35","_x36","getTrancheFirstDepositTx","_ref53","_callee29","_context29","_x37","_x38","_x39","getAmountDepositedTranche","_ref54","_callee30","_context30","_x40","_x41","_x42","_ref55","_callee31","_ref56","_ref57","userAvgPrice","_context31","_x43","_x44","getAmountLent","_callee32","amountLents","_args32","_context32","getBaseToken","getCurrentNetwork","getCurrentNetworkId","defaultNetwork","getPolygonBridgeTxs","_callee38","txs","covalentInfo","stateSenderConfig","erc20PredicateConfig","etherPredicateConfig","depositManagerConfig","rootChainManagerConfig","polygonNetworkId","covalentApiUrl","polygonAvailableTokens","polygonEndpoint","ethereumNetworkId","etherscanEndpoint","etherscanTxlistEndpoint","etherscanTxlistInternalEndpoint","_ref60","_ref61","last_state_id","polygonTxs","etherscanTxlistInternal","rootTokensAddresses","childTokensAddresses","depositTxs","exitTxs","depositTxsHashes","depositETHInputRexExp","depositETHTxs","exitETHTxs","_args38","_context38","getCachedData","getPolygonCurrentLastStateId","makeCachedRequest","childToken","rootToken","_ref62","_callee33","ethereumTx","txReceipt","stateSenderLog","tx_state_id","_context33","bridgeType","getTxReceipt","web3Infura","hexToNumberString","topics","included","_x45","_ref63","_callee34","_context34","_x46","match","_ref64","_callee35","_context35","_x47","_ref65","_callee36","_context36","_x48","items","to_address","_ref66","_callee37","polygonTx","erc20RootToken","_context37","normalizePolygonTx","exited","maticPOSClient","isCheckPointed","erc20","isWithdrawExited","_x49","getPolygonBaseTxs","_callee39","debug","baseTxs","baseEndpoint","cachedRows","lastCachedTx","lastCachedBlockNumber","covalentEndpointLastBlock","latestTxs","latestBlockNumbers","requestCount","requestStatus","dataToCache","_args39","_context39","getCachedRequest","block_height","filterPolygonTxs","tx_hash","saveFetchedTransactions","makeRequest","addKeyToCachedDataWithLocalStorage","getEtherscanBaseTxs","_callee40","firstBlockNumber","endBlockNumber","firstIdleBlockNumber","cachedBlockNumbers","etherscanEndpointLastBlock","_args40","_context40","filterEthereumTxs","_callee41","_args41","_context41","filterCurveTxs","txsToStore","cachedRequest","saveCachedRequest","_callee42","resultData","_resultData","allAvailableTokens","_args42","_context42","processStoredTxs","t1","_callee43","contractInstance","_context43","web3Polygon","Contract","constant","inputs","outputs","internalType","payable","stateMutability","methods","lastStateId","call","checkPolygonTransactionIncluded","_ref72","_callee44","_ref73","_ref74","_context44","getTransactionReceipt","_x50","_ref75","_callee45","_args45","_context45","_x51","depositLogEvent","log_events","sender_address","decoded","param","redeemLogEvent","withdrawLogEvent","tokenDecimal","idleToken","block_signed_at","_d","logEvent","raw_log_topics","from_address","gasUsed","gas_spent","gas_price","_ref76","_callee46","processTransactions","idleTokensAddresses","_args46","_context46","mappedTx","_x52","_x53","filterEtherscanTxs","_ref77","_callee47","processTxs","_args47","_context47","_x54","_ref78","_callee48","curveTransfersTxs","curveTransfersTxsToDelete","curveZapContract","curvePoolContract","curveSwapContract","curveDepositContract","_args48","_context48","tokenMigrationToolParams","curveTokenConfig","internalTxs","r","isRightToken","iTx","isBatchMigrationTx","isDepositInternalTx","iTx2","isRedeemInternalTx","isConversionTx","isWithdrawTx","curveTx","isCurveTx","isCurveDepositTx","isCurveRedeemTx","isCurveDepositIn","isCurveDepositOut","isCurveZapIn","isCurveZapOut","isCurveTransferOut","isCurveTransferIn","isSwapOutTx","tokenValue","newValue","iTxs","withdrawnValue","_x55","addStoredTransaction","txKey","storedTxs","getStoredTransactions","updateStoredTransactions","getStoredItem","_ref79","_callee53","txReceipts","baseTokensConfigs","baseTokensAddresses","curveAvailableTokens","_args53","_context53","baseTokenConfig","baseTokenAddress","_ref80","_callee52","minedTxs","_context52","_ref81","_callee51","storedTx","tokensTransfered","_curveTokenPrice","_curveTokenPrice2","curveTxReceipt","filteredLogs","_curveTokenPrice3","_curveTxReceipt","idleTokenDecimals","_filteredLogs","_context51","getCurveTokenPrice","_ref82","_callee49","_context49","_x60","_x61","baseTokensConfig","t2","_ref83","_callee50","_context50","_x62","_x63","_x58","_x59","_x57","_x56","_ref84","_callee59","txsToProcess","_args59","_context59","_ref85","_callee58","_context58","_ref86","_callee57","isStoredTx","allowedMethods","pendingStatus","txSucceeded","txPending","isMetaTx","methodIsAllowed","realTx","txValue","redeemedValueFixed","executeMetaTransactionReceipt","executeMetaTransactionContractAddr","executeMetaTransactionInternalTransfers","IdleProxyMinterInfo","internalTransfer","metaTxValue","metaTxValueFixed","migrationTxReceipt","migrationTxInternalTransfers","migrationInternalTransfer","decodedLogs","migrationValue","migrationValueFixed","_context57","mintIdleToken","redeemIdleToken","migrateFromToIdle","mintIdleTokensProxy","migrateFromAaveToIdle","migrateFromIearnToIdle","executeMetaTransaction","migrateFromFulcrumToIdle","migrateFromCompoundToIdle","created","_ref87","_callee54","_context54","_x68","_x69","_ref88","_callee55","_context55","_x70","_x71","oldContract","events","raw","_ref89","_callee56","_context56","_x72","_x73","decodeLog","_token","_x66","_x67","_x65","_x64","alias","getCustomAddress","setCustomAddress","customAddress","cachedRequests","buildSubgraphQuery","entity","fields","getSubgraphTrancheInfo","_ref90","_callee60","trancheAddress","startTimestamp","endTimestamp","subgraphConfig","currTime","queryParams","subgraphQuery","postData","subgraphData","lastTimestamp","subgraphData_2","_args60","_context60","first","orderBy","orderDirection","where","Tranche","timeStamp_gte","timeStamp_lte","entities","trancheInfos","query","makePostRequest","_x74","getBestTranche","_callee61","maxApy","trancheTypes","trancheStrategyConfig","_args61","_context61","timetamp","splice","availableTrancheInfo","tInfo","_ref92","_callee62","error_callback","config","_args62","_context62","post","catch","_x75","_ref93","_callee63","_args63","_context63","_x76","_ref94","_callee64","apiKeyIndex","apiKey","_args64","_context64","_x77","_ref95","_callee65","return_data","_args65","_context65","_x78","makeCachedPostRequest","_ref96","_callee66","_args66","_context66","_x79","code","errorCode","split","getGlobalConfigs","array","prop","shift","configs","getAppUrl","baseURL","getCurrentEnvironment","environments","checkChristmas","checkUrlPolygon","polygonUrl","checkUrlOrigin","checkUrlBeta","betaURL","sendGoogleAnalyticsPageview","_callee67","page","googlePageviewInfo","isOrigin","_args67","_context67","ga","_ref98","_callee69","googleEventsInfo","debugEnabled","originOk","_args69","_context69","analytics","google","addPostfixForTestnet","availableNetworks","_ref99","_callee68","_context68","hitCallback","hitCallbackFail","_x81","_x82","_x80","createContract","_ref100","_callee70","_context70","_x83","_x84","_x85","getWalletProvider","defaultProvider","simpleIDPassUserInfo","userInfo","simpleID","email","initSimpleID","passUserInfo","defaultUrl","baseurl","getEtherscanAddressUrl","decimalCount","decimal","thousands","abs","negativeSign","Number","j","getSnapshotProposals","_callee73","activeOnly","whitelist","proposals","validProposals","_args73","_context73","addr","_ref102","_callee72","checkedStrategies","_context72","end","author","snapshot","strategies","_ref103","_callee71","tokenContract","_context71","_x87","_x86","getAprsFromApi","_callee74","endpointInfo","aprs","_args74","_context74","_ref105","_callee75","forceStartTimestamp","frequency","order","limit","filteredCachedData","_filteredData","apiInfo","filteredData","_args75","_context75","_x88","getTokenExchangeRate","_ref106","_callee76","exchangeRateParams","exchangeRate","_context76","_x89","_x90","getTokenDecimals","_ref107","_callee77","_context77","_x91","allocations","avgApr","aprWeighted","allocation","getFrequencySeconds","quantity","hour","day","week","getIdleStakingRewardsTxs","_callee78","idleTokenConfig","feeDistributorConfig","_context78","getProtocolInfoByAddress","integerValue","ROUND_FLOOR","normalizeTokenDecimals","normalizeTokenAmount","normalizedTokenDecimals","checkContractPaused","_callee79","contractPaused","_args79","_context79","parse_json","return_default","removeStoredItem","clearStoredData","excludeKeys","clear","storedKeysToRemove","storedKey","removeItem","setItem","checkRebalance","_ref110","_callee81","lastAllocationsPromises","protocolIndex","newAllocations","diff","_context81","lastAllocationsPromise","_ref111","_callee80","lastAllocations","_context80","_x93","_x94","alloc","_x92","_ref112","_callee82","oldContractBalance","oldContractTokenDecimals","oldContractName","_context82","_x95","_x96","_ref113","_callee83","eventName","startBlock","endBlock","blocksPerCall","lastBlockNumber","calls","all_past_events","_args83","_context83","getBlockNumber","getContractPastEvents","_x97","_x98","estimateMethodGasUsage","_ref114","_callee84","methodParams","_contract$methods","functionCall","gasLimit","_ref115","_ref116","_args84","_context84","getGasPrice","estimateGas","_x99","_x100","_ref117","_callee85","userAddress","signedParameters","callback_receipt","_contract$methods2","_context85","on","once","confirmationNumber","receipt","_x101","_x102","_x103","_x104","_x105","getSignatureParameters_v4","signature","isHexStrict","Error","hexToNumber","constructMetaTransactionMessage","nonce","functionSignature","soliditySHA3","toBuffer","checkBiconomyLimits","_ref118","_callee86","biconomyInfo","res","_context86","limits","apiId","headers","x-api-key","_x106","sendTxWithPermit","_ref119","_callee87","_contract$methods3","messageToSign","_this$getSignaturePar","_context87","encodeABI","personal","sign","_x107","_x108","_x109","_x110","_x111","_x112","buildBiconomyErc20ForwarderTx","_ref120","_callee88","permitType","callData","buildParams","_context88","txGas","erc20ForwarderClient","buildTx","_x113","_x114","_x115","_x116","_x117","_ref121","_callee90","_context90","_ref122","_callee89","_context89","_x119","_x120","_x118","sendBiconomyTxWithErc20Forwarder","_ref123","_callee91","req","metaInfo","txResponse","fetchReceiptIntervalId","_context91","permitAndSendTxEIP712","setInterval","clearInterval","updateTransaction","_x121","_x122","_x123","_x124","sendBiconomyTxWithPersonalSign","_ref124","_callee92","_this$getSignaturePar2","_context92","getNonce","_x125","_x126","_x127","_x128","signPermitEIP2612","_ref125","_callee93","erc20Name","owner","spender","deadline","domain","permit","domainData","_context93","getChainId","version","verifyingContract","types","EIP712Domain","Permit","primaryType","jsonrpc","substring","_x129","_x130","_x131","_x132","_x133","_x134","_x135","_x136","signPermit","_ref126","_callee94","baseContractName","holder","spenderContractName","addToNonce","baseContract","spenderContract","permitConfig","expiry","EIPVersion","permitName","_args94","_context94","net","getId","round","nonceMethod","pow","allowed","response","_x137","_x138","_x139","_ref127","_callee95","permitParams","methodAbi","useNonce","_args95","_context95","_jsonInterface","f","unshift","_x140","_x141","_x142","_x143","_x144","_x145","_x146","sendSignedTx","_ref128","_callee96","MetaTransaction","dataToSign","_context96","_x147","_x148","_x149","_x150","_x151","checkTokenApproved","_ref129","_callee97","contractAddr","_ref130","_ref131","allowance","_context97","getAllowance","gte","_x152","_x153","_x154","_ref132","_callee98","_context98","_x155","_x156","_x157","contractMethodSendWrapperWithValue","txData","send_raw","raw_tx_data","disableERC20","toTwosComplement","enableERC20MaxAllowance","enableERC20","getBestToken","_callee100","highestValue","_args100","_context100","lendRates","aprInfo","tokenAPR","_ref134","_callee99","_context99","_x158","_ref135","_callee101","_args101","_context101","_x159","_x160","calculateGaugeBoost","_ref136","_callee102","gaugeToken","veTokenBalance","veTokenConfig","aggcalls","l","voting_balance","voting_total","working_balances","working_supply","L","TOKENLESS_PRODUCTION","lim","old_bal","noboost_lim","noboost_supply","_working_supply","_args102","_context102","workingBalance","getTokenTotalSupply","_x161","_x162","getGaugeNextWeight","_ref137","_callee103","nextGaugeTimestamp","_ref138","_ref139","gaugeWeight","_context103","_x163","getGaugeRewardsTokens","_ref140","_callee105","rewardTokenInfo","rewardTokens","claimableTokens","rewardContractAddress","multiRewardsContractName","multiRewardsConfig","MultirewardsAbi","tokenIndexes","_args105","_context105","rate","maxRewards","_ref141","_callee104","tokenIndex","rewardTokenAddress","_ref142","_ref143","rewardData","rewardTokenBalance","cdoConfig","_ref144","_ref145","gaugeTotalSupply","trancheTokenPrice","gaugeUnderlyingTokenConfig","gaugeTotalSupplyUnderlying","rewardTokenApr","_context104","genericContractCallCachedNoMulticall","getTokenConfigByAddress","rewardRate","underlyingToken","AA","_x165","_x164","_ref146","_callee107","_args107","_context107","_ref147","_callee106","tokenGlobalConfig","stakingRewardsContract","_context106","_x168","_x166","_x167","_ref148","_callee108","field","addGovTokens","_args108","_context108","loadTrancheField","_x169","_x170","_x171","_x172","_x173","_x174","_x175","_x176","_ref149","_callee109","formatValue","addTokenName","rewardsTokensInfo","multiCallDisabled","internal_view","show_idle_apy","idleGovTokenConfig","_ref150","_ref151","totalSupply","virtualPrice","_ref152","_ref153","gaugeBalance","lastPrice1","staked1","totalStaked","_ref154","_ref155","deposited1","lastPrice","_ref156","_ref157","redeemable1","staked2","_ref158","_ref159","earningsStart","trancheApy2","deposited3","earningsEnd","_ref160","_ref161","trancheFee","earningsCounter","feesEnd","feesStart","_ref162","_ref163","deposited4","redeemable3","_ref164","_ref165","deposited2","redeemable2","tokensApy","trancheApyDecimals","baseApy","gaugeRewardsTokens","curveBaseApy","_ref166","_ref167","_ref168","_ref169","earningsPerc","secondsFromFirstTx","_ref170","_ref171","rewardsTokens","incentiveTokens","govTokens","_args109","_context109","BB","curveApyPath","getCurveAPYs","gaugeRewardTokenInfo","formattedApy","IDLE","rewardTokenAddr","stakingRewardsTokenConfig","_x177","_x178","_x179","_x180","_x181","_x182","_x183","loadAssetField","_ref172","_callee110","addCurveApy","showIdleAPR","strategyInfo","govTokenAvailableTokens","newTokenConfig","_ref173","_ref174","curveAvgSlippage","curveAvgBuyPrice","curveTokenBalance","_ref175","_ref176","amountLentCurve1","redeemableBalanceCurve","_ref177","_ref178","curveApy","amountLentCurve","redeemableBalanceCurveStart","redeemableBalanceCurveEnd","earningPerYear","_ref179","_ref180","amountLent1","redeemableBalance1","depositTimestamp","_idleGovToken","blocksPerDay","blocksPerWeek","blocksPerMonth","selectedTokenConfig","_idleGovToken2","_idleGovToken3","tokenApys","curveAPY","_ref181","_ref182","tokenPriceFirstDeposit","_ref183","_ref184","daysFirstDeposit","depositTimestamps","_govTokenConfig","_ref185","_ref186","tokenAPY1","amountLent2","redeemableBalanceStart","redeemableBalanceEnd","_earningPerYear","_govTokenConfig2","_ref187","_ref188","idleTokenPrice1","idleTokenBalance2","govTokensBalance","_tokenBalance","redeemableBalance","_ref189","_ref190","amountLentCurve2","redeemableBalanceCurve1","_ref191","_ref192","redeemableBalance2","_args110","_context110","getCurveTokenBalance","getCurveAPY","getCurveRedeemableIdleTokens","getGovTokenPool","getTokenPool","getCompUserDistribution","getStkAaveUserDistribution","getIdleGovToken","distributionMode","t3","getCompDistribution","getStkAaveDistribution","t4","getCompAvgApr","t5","t6","t7","getTokenPrice","getUserTokenFees","t8","t9","getGovTokenUserBalance","getGovTokensUserTotalBalance","_x184","_x185","_x186","_x187","getIdleTokenSupply","_ref193","_callee111","idleTokenSupply","_args111","_context111","_x188","getIdleTokenPriceWithFee","_ref194","_callee112","_ref195","_ref196","fee","priceWFee","_args112","_context112","eq","_x189","_x190","_ref197","_callee113","tokenData","beforePrice","afterPrice","tokenPriceBefore","tokenPriceAfter","timeBefore","timeAfter","timeDiff","priceDiff","priceAcceleration","timeDiffFromBeforePrice","_args113","_context113","_x191","clearCachedData","clear_all","parent_key","useLocalStorage","allCachedData","expirationDate","_ref198","_callee114","_ref199","_ref200","idleTokensTotalSupply","userShare","_context114","_x192","_x193","openWindow","open","getActiveCoverages","_callee116","activeCoverages","coverProtocolConfig","nexusMutualConfig","_args116","_context116","coverages","_ref202","_callee115","coverage","coverageTokens","collateral","protocolImage","actionUrl","actionDisabled","_context115","tokens","fileClaimUrl","expirationTimestamp","utc","actionLabel","_x194","getNexusMutualCoverages","sumAssured","coverAssetConfig","yieldTokenConfig","portfolioCoverage","collateralIcon","incident","claimId","protocolImageDark","coverDetails","validUntil","route","_ref203","_callee118","incidentsInfo","_ref204","_ref205","coverBoughtEvents","claimSubmittedEvents","nexusMutualCoverages","_context118","directProps","contractInfo","buyer","_ref206","_callee117","cover","coverId","claimSubmittedEvent","_ref207","_ref208","incidentEvents","matchedIncidents","matchedIncident","expiryDate","payoutOutcome","claimedAmount","claimTxReceipt","claimedAmountLog","claimableAmount","claimablePrice","maxCoveredAmount","coveredTokenAmount","_ref209","_ref210","_context117","claim","productId","incidentDate","yieldTokenCoverGracePeriod","curr","priceBefore","underlying","underlyingConfig","coverAsset","findIndex","_x196","_x195","getBatchedDepositExecutions","_ref211","_callee119","_context119","_x197","getBatchedDeposits","_callee121","filter_by_status","batchDepositConfig","batchedDeposits","_args121","_context121","_ref213","_callee120","currBatchIndex","batchIndex","_ref214","_ref215","batchExecutions","batchTotal","batchRedeem","batchDeposit","batchTotals","batchRedeems","batchDeposits","lastExecution","_context120","_x198","getETHBalance","_ref216","_callee122","fixDecimals","_args122","_context122","_x199","_ref217","_callee123","_ref218","_ref219","_args123","_context123","ERC20","_x200","_x201","copyToClipboard","copyText","setSelectionRange","execCommand","loadScript","script","attr","readyState","onreadystatechange","onload","body","appendChild","isValidJSON","_ref220","_callee124","_args124","_context124","_x202","_ref221","_callee125","_args125","_context125","_x203","_ref222","_callee126","_args126","_context126","_x204","_x205","getProtocolBalance","_ref223","_callee127","_context127","_x206","_x207","getAprs","_ref224","_callee128","_context128","addresses","_x208","genericIdleCall","_ref225","_callee129","callParams","_args129","_context129","_x209","_ref226","_callee130","_contract$methods4","_args130","_context130","_x210","_x211","_ref227","_callee132","_args132","_context132","_ref228","_callee131","_context131","_x213","_x214","_x212","getTxDecodedLogs","_ref229","_callee134","logAddr","decodeLogs","internalTransfers","_context134","_ref230","_callee133","_context133","_x219","_x220","_x215","_x216","_x217","_x218","blocksToSeconds","blocks","blocksPerSeconds","_callee135","_context135","_callee136","blockInfoToSave","_args136","_context136","getBlock","_ref233","_callee137","_args137","_context137","getPastEvents","_x221","_x222","genericContractCallCachedTTLNoMulticall","_ref234","_callee138","_args138","_context138","_x223","_x224","_ref235","_callee139","useMultiCall","_args139","_context139","_x225","_x226","_ref236","_callee140","_args140","_context140","_x227","_x228","_ref237","_callee141","_args141","_context141","_x229","_x230","cachedContractCall","_ref238","_callee142","_args142","_context142","_x231","_x232","prepareMulticallData","strip0x","_ref239","args","returnTypes","keccak256","encodeParameters","calldata","makeMulticall","_ref240","_callee143","decodedParams","_args143","_context143","decodeParameters","returnFields","_x233","testMulticall","_callee144","_context144","_ref242","_callee145","inputTypes","callHash","_args145","_context145","genericContractCallNoMulticall","inputType","multiCall","addResolvedHash","_x234","_x235","_ref243","_callee146","_contract$methods5","_args146","_context146","_x236","_x237","_ref244","_callee147","async","_args147","_context147","_x238","_x239","getUnlentBalance","_ref245","_callee148","unlentBalance","_context148","_x240","_ref246","_callee149","_args149","_context149","_x241","getLastAllocations","_ref247","_callee151","tokenAllocations","_context151","_ref248","_callee150","_context150","_x243","_x244","_x242","_ref249","_callee152","protocolsAprs","_ref250","_ref251","govTokensBalances","_args152","_context152","totalAllocationConverted","totalAllocationWithUnlentConverted","getTokenConversionRate","getGovTokensBalances","protocolAllocationPerc","protocolAllocation","_x245","getSushiswapPoolTokenPrice","_ref252","_callee153","_ref253","_ref254","token0_address","token1_address","poolReserves","token0_config","token1_config","_ref255","_ref256","token0_price","token1_price","token0_pool","token1_pool","totalPoolSize","poolTokenPrice","_context153","getSushiswapConversionRate","_x246","_ref257","_callee154","tokenConfigFrom","tokenConfigDest","WETHAddr","one","_context154","_x247","_x248","_ref258","_callee155","useWETH","unires","_args155","_context155","addressForPrice","_x249","_x250","getCurveDepositedTokens","_ref259","_callee156","idleTokensBalances","remainingCurveTokens","_args156","_context156","_x251","getCurveUnevenTokenAmounts","_ref260","_callee157","amounts","max_burn_amount","unevenAmounts","_context157","getCurveDepositContract","_x252","_x253","_callee158","curveRatesInfo","_args158","_context158","_callee159","_context159","strategyTokens","getCurveAPYContract","_callee160","blocksForPrevTokenPrice","_ref264","_ref265","prevTokenPrice","blocksMultiplier","curveAPR","_context160","getCurveTokenSupply","_callee161","_context161","getCurvePoolContract","_callee162","_args162","_context162","_callee163","_args163","_context163","_ref269","_callee164","_ref270","_ref271","_context164","_x254","_callee165","depositContractInfo","_context165","getCurveZapContract","_callee166","zapContractInfo","_context166","_callee167","poolContractInfo","_context167","getCurveSwapContract","_callee168","migrationContractInfo","_context168","getCurveIdleTokensAmounts","_callee170","max_slippage","curveTokenSupply","curveTokenShare","n_coins","_args170","_context170","_ref277","_callee169","coinIndex","curveIdleTokens","_context169","migrationParams","_x255","getCurveTokensAmounts","_callee172","useCoinIndex","_args172","_context172","_ref279","_callee171","_ref280","_ref281","idleTokenPrice","totalTokenSupply","_context171","_x256","getCurveAmounts","_ref282","_callee174","_args174","_context174","_ref283","_callee173","_context173","_x259","_x257","_x258","getCurveTokenAmount","_ref284","_callee175","_args175","_context175","_x260","getCurveSlippage","_ref285","_callee176","uneven_amounts","depositContract","_ref286","_ref287","Sv","_args176","_context176","_x261","_x262","_ref288","_callee177","aTokenIdleSupply","annualize","aaveDistribution","stkAAVETokenConfig","aTokenConfig","disabledTokens","aaveIncentivesController_address","IAaveIncentivesController_name","_ref289","_ref290","aTokenTotalSupply","assetData","aaveAllocationPerc","aaveSpeed","secondsPerYear","aavePoolShare","_args177","_context177","IAaveIncentivesController","emissionPerSecond","_x263","_callee179","_args179","_context179","_ref292","_callee178","_ref293","_ref294","_context178","_x264","getWMaticApr","_ref295","_callee180","maticConversionRate","wMaticTokenConfig","wMaticApr","destTokenConfig","wMaticValue","_args180","_context180","_x265","_x266","getStkAaveApr","_ref296","_callee181","aaveConversionRate","stkAaveAPR","stkAaveValue","_args181","_context181","_x267","_x268","getCompAPR","_ref297","_callee182","cTokenIdleSupply","compConversionRate","COMPTokenConfig","compAPR","compDistribution","compValue","_args182","_context182","_x269","_x270","getCompSpeed","_ref298","_callee183","cTokenAddress","compSpeed","_context183","_x271","_ref299","_callee184","cTokenInfo","compoundAllocationPerc","_ref300","_ref301","cTokenTotalSupply","compoundPoolShare","_args184","_context184","_x272","_callee186","_args186","_context186","_ref303","_callee185","_ref304","_ref305","_context185","_x273","_callee188","_args188","_context188","_ref307","_callee187","_ref308","_ref309","compApr","_context187","_x274","getTokensCsv","_callee191","csv","_context191","prototype","sum","pv","cv","avg","_ref311","_callee190","_context190","_ref312","_callee189","rates","header","rows","aprAvg","scoreAvg","lastRow","_context189","protocolsData","p1","foundProtocol","p2","idleRate","score","idleScore","row","pInfo","pData","pRate","pScore","defiScore","additionalRate","avgRate","avgScore","_x276","_x275","_callee193","convertToken","_args193","_context193","_ref314","_callee192","compTokenBalance","_context192","_x277","getGovTokensFarming","tokenGovTokens","getTokenGovTokens","speed","mode","multipliers","block","second","month","year","getGovTokensUserDistributionSpeed","_ref315","_callee195","govTokensUserDistribution","_args195","_context195","_ref316","_callee194","_context194","_x279","_x278","getGovTokensDistributionSpeed","_ref317","_callee197","govTokensDistribution","_args197","_context197","_ref318","_callee196","govSpeed","_context196","_x281","_x280","getGovTokensAprs","_ref319","_callee199","govTokensAprs","_args199","_context199","_ref320","_callee198","_ref321","_ref322","_ref323","_ref324","cTokenConfig","_context198","aprTooltipMode","_x284","_x282","_x283","_callee201","_args201","_context201","_ref326","_callee200","govTokenBalance","fromTokenConfig","_context200","_x285","getTokenIcon","tokenConfigStats","tokensConfigs","foundToken","foundTokenConfig","getGovTokenConfigByAddress","_callee202","checkShowBalance","govTokensUserBalances","govTokensEarnings","_args202","_context202","getGovTokensUserBalances","govTokenAmount","getGovTokensIndexes","_ref328","_callee204","govTokensAmounts","_context204","getGovTokensUserAmounts","_ref329","_callee203","govTokenIndex","govTokenAddress","_context203","getGovTokenAddessByIndex","_x288","_x289","_x286","_x287","_ref330","_callee205","_context205","_x290","_x291","_ref331","_callee206","_context206","_x292","_x293","_callee209","govTokenConfigForced","_args209","_context209","_ref333","_callee208","_context208","_ref334","_callee207","_context207","_x295","_x296","_x294","getTokenFees","_callee210","_args210","_context210","_callee211","_ref337","_ref338","feePercentage","gain","fees","_args211","_context211","_ref339","_callee212","_args212","_context212","_x297","getTotalTVL","_callee213","tokensTVL","_context213","getTokensTVL","totalTVL","tokenInfo","tokenTVL","_callee217","_context217","_ref342","_callee216","_context216","_ref343","_callee215","oldTokenTVL","idleTokenName","_ref344","_ref345","oldTokenConfig","_ref349","_ref350","oldTokenPrice","oldTotalSupply","_context215","showAUM","_ref346","_callee214","_ref347","_ref348","govTokenConversionRate","govTokenBalanceConverted","_context214","_x300","oldProtocols","oldProtocol","protocolPos","_x299","_x298","getSubstackLatestFeed","_callee218","idleSubstackFeed","latestFeed","_context218","getTrancheAggregatedStats","_callee222","totalAUM","_args222","_context222","_ref353","_callee221","_context221","_ref354","_callee220","_context220","_ref355","_callee219","_ref356","_ref357","_context219","_x303","_x302","_x301","getAggregatedStats","_callee224","allNetworks","networkIds","tvls","_args224","_context224","_ref359","_callee223","_context223","_x304","getAggregatedStats_chain","_callee229","avgAPR","_args229","_context229","availableStrategiesNetworks","_ref361","_callee228","_context228","_ref362","_callee227","_context227","_ref363","_callee226","tokenAUM","oldTokenAllocation","oldTokenTotalAllocation","_context226","_ref364","_callee225","_ref365","_ref366","_context225","_x308","_x307","_x306","_x305","getTokenApy","_ref367","_callee230","_context230","_x309","getTokensToMigrate","_callee233","_args233","_context233","_ref369","_callee232","_context232","_ref370","_callee231","_ref371","_context231","_x311","_x310","getProtocolsTokensBalances","_callee235","tokenBalances","minTokenBalance","protocolsTokens","_args235","_context235","_ref373","_callee234","_context234","_x312","getTokenConversionRateField","_ref374","_callee236","_args236","_context236","_x313","_x314","_ref375","_callee237","_args237","_context237","_x315","_x316","_x317","getAvgAPYStats","_ref376","_callee238","apiResults","_args238","_context238","_x318","_x319","_ref377","_callee239","statsTokenConfig","ToTokenConfig","_args239","_context239","addressForPriceFrom","_x320","_ref378","_callee240","count","_conversionRate","_args240","_context240","_x321","_x322","getTokenScore","_ref379","_callee241","_ref380","_ref381","tokenScore","_context241","protocolScore","getTokenScoreApi","_x323","_x324","_ref382","_callee242","scores","_context242","_x325","_x326","_ref383","_callee243","idleGovTokenShowAPR","idleAPR","_args243","_context243","_x327","isNegative","suffixNum","decimalPart","mod","toPrecision","difference","maxLen","highlightedDecimals","numLen","intPart","decPart","repeat","highlightedDec","highlightedIntPart","react_default","index_es","Fragment","DashboardCard","mouseOver","isRainbow","defaultOpacity","active","hidden","rainbow","interactive","onMouseOut","setMouseOver","onMouseOver","titleParentProps","lineHeight","titleProps","description","ConnectBox","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_10__","connectAndValidateAccount","TableRow","FieldComponent","fieldComponent","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_10__","cardId","rowProps","rowId","cols","colInfo","colIndex","visibleOnDesktop","visible","fieldIndex","funcProps","colProps","BuyModal","selectedMethod","availableMethods","selectedCountry","selectedProvider","availableProviders","buyToken","renderPaymentMethod","buyParams","onSuccess","onClose","paymentProvider","initParams","currentState","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","toastProvider","addMessage","secondaryMessage","colorTheme","actionHref","actionText","variant","getAccountBalance","payments","getInitParams","render","closeModal","goBack","resetModal","componentWillMount","showInline","getProviderInfo","providerInfo","getInfo","newProviderInfo","getDefaultPaymentProvider","paymentMethod","getAvailablePaymentProviders","providerSupportMethod","supportedMethods","providerSupportToken","supportedTokens","defaultPaymentProvider","showDefaultOnly","selectProvider","ethAvailable","tokenAvailable","selectMethod","selectToken","loadRemoteResources","handleCountryChange","getAvailableCountries","availableCountries","supportedCountries","countryCode","countries","remoteResources","scriptID","remoteResourceParams","precall","parentElement","head","stylesheetId","methodInfo","loadAvailableMethods","_this4","caption","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","showAllTokens","InnerComponent","flexWrap","imageSrc","_ImageButton_ImageButton__WEBPACK_IMPORTED_MODULE_12__","buyText","imagePropsExtended","react_select__WEBPACK_IMPORTED_MODULE_10__","placeholder","noOptionsMessage","inputValue","isOpen","_ModalCard__WEBPACK_IMPORTED_MODULE_11__","closeFunc","Header","Body","Footer","React","TableHeader","pb","_TableCellHeader_TableCellHeader__WEBPACK_IMPORTED_MODULE_7__","desc","FastBalanceSelector","onMouseDown","_contracts_ERC20_json__WEBPACK_IMPORTED_MODULE_0__","_contracts_IdleCDO_json__WEBPACK_IMPORTED_MODULE_1__","_contracts_IdleStrategy_json__WEBPACK_IMPORTED_MODULE_2__","_contracts_IdleCDOTrancheRewards_json__WEBPACK_IMPORTED_MODULE_3__","_contracts_TrancheStakingRewards_json__WEBPACK_IMPORTED_MODULE_4__","DAI","IdleCDO","IdleStrategy","messages","stake","unstake","unstakeWithBalance","IdleCDOTrancheRewards","FEI","lido","stETH","buyInstructions","TrancheStakingRewards","convex","FRAX3CRV","MIM3CRV","steCRV","ALUSD3CRV","3EUR","MUSD3CRV","PBTCCRV","SendTxWithBalance","permitEnabled","showPermitBox","approveEnabled","buttonDisabled","contractApproved","fastBalanceSelector","changeInputValue","call_callback","changeInputCallback","setInputValue","selectedPercentage","getFastBalanceSelector","setFastBalanceSelector","checkButtonDisabled","approve","callbackApprove","callbackReceiptApprove","checkContractApproved","approveMaxAllowance","executeTx","_amount","_params","checkLimit","eventValue","getPermitTransactionParams","getTransactionParams_async","approveCallback","tokenBalanceChanged","permitEnabledChanged","approveEnabledChanged","contractChanged","tokenConfigChanged","actionChanged","viewOnly","connectorName","infoBox","steps","step","stepIndex","ExtLink","checked","togglePermitEnabled","approveDescription","RoundButton","balanceSelectorInfo","textTransform","Gauges","canVote","claimText","unlockDate","balanceProp","noFundsText","lastUserVote","claimSucceded","claimToken","availableGauges","votingPowerUsed","stakeAction","selectedAction","distributionRate","gaugeWorkingSupply","veTokenTotalSupply","availableVotingPower","gaugePeriodTimestamp","gaugeWorkingBalances","claimableRewardsTokens","loadEmptyGauges","loadGaugeData","stakeActionChanged","loadTokenData","toolProps","obj","tokenUrlParam","urlParams","param2","param1","veToken","trancheTokenConfig","claimableRewards","loadGauges","veTokenBalanceUsed","nextUnlockTime","WEIGHT_VOTE_DELAY","_this5","_this6","weight","nextWeight","gaugesOrderKeys","gaugeNextWeight","userWorkingBalance","gaugeUserShare","userBoostedDistribution","gaugeDistributionRate","userBoostedShare","_this7","userDistributionRate","tokenDistributionRate","gaugesOrderedKeys","reverse","availableGaugesSorted","g","votingWeight","depositedAmount","withdrawnAmount","_this8","votingPowerPercentage","gaugeAddress","_this9","setSelectedAction","setStakeAction","setClaimToken","Button","transactionSucceeded","src_SendTxWithBalance_SendTxWithBalance","FlexLoader","borderBottom","TranchesList","enabledProtocols","colsProps","Staking","selectedOption","SelectedComponent","component","AssetField","GenericFaqs","openedAnswer","selectedSection","questions","setSection","showSections","isSelected","q","toggleAnswer","LimitReachedModal","possibleConstructorReturn","getPrototypeOf","componentDidUpdate","ModalCard","iconHeight","TrancheDetails","infoText","canUnstake","canWithdraw","activeModal","trancheBalance","userHasAvailableFunds","loadActionData","selectedProtocol","selectedTranche","trancheAPY","trancheDetails","cantUnstake","cantWithdraw","trancheLimit","otherTrancheType","otherTrancheDetails","showSelectButton","contrastColor","hex","selectTrancheType","flexBasis","TrancheField","components_LimitReachedModal","ShareModal","confettiEnabled","tweet","modalApy","modalAction","lastHarvest","stakeEnabled","unstakeEnabled","trancheBaseApy","stakingEnabled","selectedTrancheOption","selectedStakeAction","selectedActionChanged","selectedStakeActionChanged","trancheTokenToRedeem","isStake","isDeposit","isWithdraw","option","selectTranche","borderTop","ImageButton","contractApprovedCallback","PortfolioEquityTranches","transactionsList","walletProvider","delegateYield","tokenBalanceConfig","firstTokenTx","firstAATokenTx","firstBBTokenTx","lastConversionRate","trancheAAInfos","trancheBBInfos","timeStamp_start","conversionRatesTimestamps","blocksTimestamps","conversionRateBlocksCalls","distance","tokenDataAA","tokenDataBB","filteredTrancheBalances","_timeStamp","_loop2","ChartCustomTooltip","ChartCustomTooltipRow","FundsOverviewTranche","aggregatedValues","govTokensTotalApr","govTokensUserBalance","govTokensTotalBalance","govTokensTotalAprTooltip","idleTokenUserDistribution","govTokensDistributionTooltip","govTokensTotalBalanceTooltip","stakingRewardsEnabled","colWidth","src_PortfolioEquityTranches_PortfolioEquityTranches","Title","Heading","h3","StakingRewardsTranche","stakingRewardsRows","loadUserRewards","portfolioChanged","trancheConfigChanged","transactionsChanged","rewardTokensInfo","trancheStakedAmount","trancheBalanceInfo","staked","reedemable","tokenIcon","CustomList","claimCallback","TranchePage","userHasFunds","componentLoaded","trancheTypeChanged","balanceInfo","tranchesDetails","filteredTranchesTypes","TrancheDepositRedeem","loadPortfolio","src_TrancheDetails_TrancheDetails","src_FundsOverviewTranche_FundsOverviewTranche","src_StakingRewardsTranche_StakingRewardsTranche","TransactionsList","availableActions","src_GenericFaqs_GenericFaqs","","Base","contractsInitialized","bestTrancheInfo","alt","showTooltip","baseName","justifyItems","long","features","feature","TrancheFlash","flashData","bold","subtitle","openTooltipModal","msg","helpcircle","arrows","seniorinfo","juniorinfo","TrancheWelcome","AssetsUnderManagement","loaderAlign","aggregatedStatsMethod","src_TrancheFlash_TrancheFlash","TrancheBox","GenericPieChart","showLegend","itemWidth","itemHeight","symbolSize","anchor","direction","symbolShape","translateY","itemTextColor","effects","legendProps","valueHover","valueHoverProps","defaultImage","defaultLabel","TotalBalanceCounter","counterEnd","counterStart","loadTotalEarnings","counterStyle","oldState","build_default","delay","separator","useEasing","formattingFn","countUpRef","ref","TotalEarningsCounter","Tranches","trancheRoute","remainingTokens","useTrancheType","depositedTranches","remainingTranches","portfolioLoaded","allocationChartData","portfolioEquityQuickSelection","then","param3","availableTranchesChanged","tranchesTokens","tranchesBalances","portfolioDonutData","balanceValue","tokenPercentage","trancheName","breadcrumbPath","src_TranchePage_TranchePage","aligItems","pr","src_TotalBalanceCounter_TotalBalanceCounter","src_TotalEarningsCounter_TotalEarningsCounter","src_GenericPieChart_GenericPieChart","itemsSpacing","setPortfolioEquityQuickSelection","src_TrancheWelcome_TrancheWelcome","textSize","TokenSwap","selectedFromToken","selectedDestToken","availableDestinationTokens","selectFromToken","selectDestToken","initProps","buttonId","loadTokens","fromTokenChanged","destTokenChanged","loadKyberWidget","LpStaking","globalStats","statsLoaded","programEnded","rewardMultiplier","accountingData","programEndDate","successMessage","rewardTokenPrice","tokenWrapperProps","showTokenWrapperEnabled","updateData","contractApprovedChanged","contractInfoChanged","userStakedBalance","totalStakedBalance","totalStakingShares","userTotalStakingShare","rewardsPerDay","stakedBalanceUSD","rewardsPerYearUSD","normalizedInputValue","unstakeRewards","totalLocked","totalUnlocked","unlockScheduleCount","collectedRewards","unlockSchedulesPromises","unlockSchedules","totalRewards","totalDeposits","lockedRewards","unlockedRewards","programEndTime","endTime","endAtSec","initialLockedShares","durationSec","stakingShare","maxMultiplier","distributionSpeedMultiplier","userDistributionSpeed","maxBonusDays","currentRewards","stakedTokensLog","stakedTokens","unstakedTokensLog","unstakedTokens","receivedRewardsLog","receivedRewards","startContract","wrapMethod","destContract","unwrapMethod","loadStats","StatsCard","isUnstake","isStats","txAction","poolLink","statInfo","setAction","IdleStakingDisapprove","disapproveAllowance","requiredNetworkChanged","accountInizialized","governanceTokenName","stkIdleConfig","stkIdleBalance","idleBalance","idleAllowance","IdleStaking","maxApr","lockPeriods","lockedEnd","maxTime","lockExpired","claimedRewards","increaseAction","lockPeriodInput","internalInfoBox","distributedRewards","selectedLockPeriod","lockPeriodTimestamp","lockEndDateIsMaxEndDate","feeDistributor","lockPeriodChanged","increaseActionChanged","calculateStkIDLEAmount","minLockPeriod","maxLockPeriod","minDate","add","mDate","maxDate","isAfter","getMaxStakeTimestamp","maxStakeTimestamp","endDate","endDateTime","maxDateTime","stkIDLEAmount","_value","_unlock_time","etherscanRewardsTxs","tokenTotalSupply","lockedInfo","tokenUserBalance","claimable","claimEvents","depositEvents","totalRewardsDays","totalClaimedUser","recipient","totalLockedFunds","stkTokenTotalSupply","claimableRewardsFormatted","totalRewardsFormatted","userDeposited","totalCollectedRewards","stakeStartTime","stakedTime","event","ts","depositValue","stakePeriod","currentProfit","stakePeriodWeeks","lockEndDate","currDate","isValid","lockedTokensLog","lockedTokens","increaseAmountTokensLog","increaseTokens","maxDateTimestamp","isLock","isClaim","isIncrease","canIncrease","src_IdleStakingDisapprove_IdleStakingDisapprove","StatsCardSmall","maxHeight","reward","setIncreaseAction","changeLockPeriodInput","selectLockPeriod","getIncreaseTimeParams","NexusMutual","quote","1","2","periodOptions","30","60","90","365","capacity","coverCost","amountValue","periodValue","yearlyCost","maxCapacity","amountValid","periodValid","claimableCovers","tokenApproved","selectedPeriod","maxPriceWithFee","transactionValue","yieldTokenBalance","selectedUnderlying","yieldTokenApproved","claimButtonDisabled","selectedCoverToClaim","defaultClaimableCover","selectedUnderlyingConfig","changeAmount","changePeriod","selectPeriod","approveSucceeded","yieldTokenApproveSucceeded","claimInputChange","normalizedAmount","getClaimTransactionParams","realAddress","claimTransactionSucceeded","loadContracts","buyCoverTransactionSucceeded","validClaimableCoverFromParam","paramIsValidToken","changeSelectedToken","selectedUnderlyingChanged","isETH","getPoolCapacity","coverData","period","coverAmount","currency","asset","quoteURL","priceInNXM","expiresAt","generatedAt","COVER_TYPE","basePrice","priceWithFee","mul","divn","amountInWei","textDecoration","activeColor","reset","changeSelectedUnderlying","setMaxCoverAmount","borderStyle","periodInfo","ButtonLoader","buttonText","isLoading","getQuote","selectCoverToClaim","TokenWrapper","balanceDest","balanceStart","startContractChanged","destContractChanged","loadBalance","updateActionData","mintLog","mintedAmount","withdrawLog","fullWidth","PortfolioDonut","totalFunds","parentWidth","tokenColorHsl","radialLabelsLinkOffset","strategyIcon","EarningsEstimation","tokensEarnings","estimationStepsPerc","estimationStepsOptions","estimationStepsDefaultOption","estimationSteps","0","Month","perc","2 months","3 months","optionName","25","8 months","Year","2 Years","5 Years","loadEarnings","stepsCount","aggregatedEarnings","earnings","earningsYear","earningsPercStep","possibleSteps","maxPossibleStep","maxCountStep","orderedTokensEarnings","estimationStep","setEstimationStepsPerc","estimationStepPerc","finalEarnings","cursorPerc","tokenRGBColor","estimateIndex","estimationStepEarnings","estimationStepEarningsFormatted","borderRight","wordBreak","estimationLabel","DashboardIconButton","PolygonBridgeTransactions","loaded","bridgeEnabled","polygonTransactions","polygonTransactionsAvailableTokens","maticPOSClientChanged","polygonBridgeConfig","actionIcon","statusIcon","actionIconProps","statusIconProps","paginationEnabled","StrategyPage","portfolioLoading","availableGovTokens","portfolioEquityStartDate","batchedDepositsAvailableTokens","availableTokensChanged","batchInfo","redeemable","apyLong","yieldFarming","strategyName","toolsToShow","toolName","toolConfig","src_PortfolioDonut_PortfolioDonut","toolIndex","src_DashboardIconButton_DashboardIconButton","AssetsList","showDirection","src_EarningsEstimation_EarningsEstimation","src_PolygonBridgeTransactions_PolygonBridgeTransactions","BatchDeposit","canClaim","canDeposit","usePermit","hasDeposited","permitSigned","batchCompleted","claimSucceeded","executeSucceeded","migrationSucceeded","batchDepositEnabled","migrationContractApproved","migrationEnabledCallback","migrationCallback","checkBatchs","loadStrategies","executeSucceededChanged","callbackExecute","callbackReceiptExecute","functionInfo","permitContract","batchDepositInfo","depositEnabled","availableStrategiesKeys","selectStrategy","strategyAvailableTokens","migrateFunction","setStrategyToken","batchId","callbackClaim","callbackReceiptClaim","canExecuteBatch","strategyDefaultValue","Migrate","useMetaTx","showActions","isMigrationTool","showBalanceSelector","migrationIcon","toMigrate","callbackPermit","migrationText","minPoolSize","PolygonBridge","txsToExit","dataLoaded","defaultTransaction","selectedTransaction","selectedTransactionHash","rootTokenConfig","childTokenConfig","encodeParameter","depositData","sendValue","logEventSignature","genericParams","erc20LogEventSignature","exitUtil","buildPayloadForExit","exitCalldata","ERC20Predicate","DepositManager","depositedTokensLog","depositedTokensEvent","EtherPredicate","maticNetwork","mainNetworkId","mainNetworkName","withdrawnTokensEvent","withdrawnTokensLog","withdrawnTokens","Transfer","paramIsToken","defaultAction","loadPolygonTxs","isExit","selectTransaction","exitCallback","getExitTransactionParams","setRequiredNetwork","CoverProtocol","swapInfo","defaultCoverage","selectedCoverage","inputValueChanged","swapInfoChanged","swapFee","covTokens","tokenAmountOut","getSwapInfo","MAX_UINT256","balancerTokenConfig","dashboardUrl","fixedAmount","mintedClaimLog","mintedNoClaimLog","mintedClaimAmount","mintedNoClaimAmount","claimTokenConfig","claimTokensLog","receivedClaimAmount","balancerPool","noClaimTokenConfig","noClaimTokensLog","receivedNoClaimAmount","collateralAmount","balancerClaimConfig","balancerNoClaimConfig","claimTokenBalance","noClaimTokenBalance","balancerPoolClaimBalance","balancerPoolNoClaimBalance","hasMintedTokens","apyPrice","selectCoverage","isMint","isBuyClaim","isBuyNoClaim","subcaption","TokenMigration","changeFromToken","convertTool","BatchMigration","batchMigrationInfo","batchMigrationDepositEnabled","DeployB2BVesting","actions","actionIndex","validated","viewAction","editAction","newAction","maxContracts","actionValid","actionInputs","claimedTokens","deployedContracts","contractDeployed","validateForm","checkInputs","vesterImplementation","proxyCreated","deployedContractsAddresses","implementation","proxy","vestingPeriod","availableBalance","depositAmounts","claimedTokensLog","returnString","fieldPattern","inputIndex","inputInfo","getPatternByFieldType","inputValid","actionValue","defineProperty","txError","deployedContract","idleAddress","isLastAction","clonedVesterAddress","ProxyCreated","ownerAddress","recipientAddress","initData","depositContracts","claimContracts","onSubmit","handleSubmit","setEditAction","fieldType","pattern","inputChange","addAction","deleteAction","setNewAction","setViewAction","readOnly","depositCallback","GaugesBoostCalculator","730","1095","1460","idleAmount","depositAmount","stkIdleAmount","calculateStkIdleAmount","changeDepositAmount","changeIdleAmount","idleAmountChanged","periodValueChanged","dailyDistributionRate","gaugesConfigs","underlyingTokenConfig","trancheVirtualPrice","userBoostInfo","calculateGaugesData","process","appName","forumURL","telegramURL","discordURL","twitterURL","cache","clearAll","darkModeEnabled","live","beta","polygon","USA","GBR","AUS","BRA","CHN","CAN","EUR","HKG","IND","MEX","RUS","ZAF","KOR","connectors","metamask","opera","dapper","coinbase","trustwallet","walletconnect","iconModal","walletlink","gnosis","fortmatic","portis","authereum","torus","trezor","ledger","ledgerlive","custom","newsletterSubscription","scoreShort","apyShort","totalProfitPerc","cheapRedeem","aprRatio","gaugeBoost","curveBonusSlippage","directMint","performanceFee","govTokenApr","apyTranches","govTokenRedeemableBalance","riskScoreShort","redeemSkipGov","batchDepositExecutionSchedule","riskAdjustedDisabledMessageDeposit","riskScore","curveInstructions","riskAdjustedDisabledMessageRedeem","pageView","modals","first_deposit_referral","first_deposit_share","welcome","dashboard","baseRoute","governance","test","availableContracts","FeeTreasury","PriceOracle","GovernorAlpha","GovernorBravo","EcosystemFund","IdleController","18","12","7","delegates","v1","v2","imageInactive","poolContract","CurvePool","CurveDeposit","gaugeContract","LiquidityGaugeV2","zapContract","CurveZap","idleDAIYield","idleUSDCYield","idleUSDTYield","USDC","SLP","showAPR","showPrice","137","COMP","LDO","stkAAVE","aToken","WMATIC","ProtocolDataProvider","ChildChainManager","UniswapRouter","UniswapV2Router02","SushiswapRouter","SushiV2Router02","RootChainManager","ProxyFactory","MinimalInitializableProxyFactory","LockedIDLE","Timelock","VesterFactory","EarlyRewards","Comptroller","BalancerExchangeProxy","GaugeController","GaugeDistributor","GaugeDistributorProxy","Multicall","zeroExInstant","orderSource","affiliateInfo","feeRecipient","tranchflash","rgb","bubble","extraicons","best","iconDark","iconInactive","iconInactiveDark","gauges","risk","tools","forum","leaderboard","overview","delegate","landingStrategies","enabledEnvs","comingSoon","titlePostfix","govTokensEnabled","chartColor","descShort","descLong","substack","REACT_APP_IDLE_KEY","Authorization","versions","v3","additionalProtocols","showPerformanceTooltip","strategiesParams","enabledStrategies","v4","chart","labelTextColorModifiers","performanceTooltip","ETH","STETH","CVX","MTA","CRV","MUSD","ANGLE","STECRV","SPELL","MATIC","USD","USDT","TUSD","SUSD","WBTC","WETH","STKAAVE","RAI","disabledCharts","idleDAI+idleUSDC+idleUSDT","compound","aavev2WithStkAAVE","rateField","compoundWithCOMP","fulcrum","dsr","dydx","iearn","aave","aavev2","cream","mstable","fuse","skipRebalance","metaTransactionsEnabled","skipMint","minAmountForMint","erc20ForwarderEnabled","skipMintCheckboxEnabled","erc20ForwarderProxyContract","forwarder","erc20Forwarder","function","IdleDepositForwarder","proxyContract","IdleProxyMinter","minAmountForRebalance","minAmountForRebalanceMetaTx","redeemGovTokens","rebalance","IdleRebalancerV3","42","3","4","5","1337","80001","isForked","requiredConfirmations","enabledNetworks","accountBalanceMinimum","alchemy","REACT_APP_ALCHEMY_KEY","infura","REACT_APP_INFURA_KEY","networkPairs","nexus","covalent","REACT_APP_COVALENT_KEY","etherscan","REACT_APP_ETHERSCAN_KEY","REACT_APP_ETHERSCAN_KEY2","REACT_APP_ETHERSCAN_KEY3","REACT_APP_ETHERSCAN_KEY4","subgraph","urls","queries","proposalsActive","biconomy","enableLogin","disabledWallets","REACT_APP_BICONOMY_KEY","dappId","REACT_APP_BICONOMY_APPID","getNetwork","networkName","appOrigin","appId","renderNotifications","notifications","subComponent","stkIDLE","MultiRewards","LiquidityGauge","multiRewards","gaugesCalculator","StakingFeeDistributor","LpStakingAbi","SushiLiquidityPool","stakePolygon","nexusMutual","IdleTokenV4","NexusMutualDistributor","NexusMutualIncidents","b2bVesting","B2BVester","polygonBridge","StateSender","ChildERC20","ethWrapper","coverProtocol","CoverMint","Claim","CovToken","BalancerPool","NoClaim","claimEnabled","IdleBatchedMint","IdleTokenV3","IdleBatchConverter","idleSUSDYield","idleTUSDYield","idleWBTCYield","idleDAISafe","idleUSDCSafe","idleUSDTSafe","tokenMigration","IdleConverterPersonalSignV4","idleDAIv2","IdleTokenV2","cDAI","iDAI","aDAI","yDAIv3","yDAIv2","idleUSDCv2","cUSDC","iUSDC","aUSDC","yUSDCv3","yUSDCv2","cUSDT","iUSDT","aUSDT","yUSDTv3","yUSDTv2","idleSUSDv2","aSUSD","ySUSDv3","idleTUSDv2","aTUSD","yTUSDv3","cWBTC","iWBTC","aWBTC","addFunds","tokenSwap","USDS","BUSD","EURS","2KEY","ABT","ABYSS","AMPL","ANT","BAM","BAND","BAT","BLZ","BNT","BQX","BTU","CDT","CVC","DAT","DGX","EKG","ELF","ENJ","EQUAD","FXC","GDC","GEN","GHT","GNO","IOST","KEY","KNC","LEND","LINK","LOOM","LRC","MANA","MCO","MET","MFG","MKR","MLN","MTL","MYB","NEXXO","NPXS","OGN","OMG","OST","PAX","PBTC","PLR","PNK","POLY","POWR","PT","QKC","QNT","RAE","REN","REP","REQ","RLC","RSR","RSV","SAN","SNT","SNX","SPIKE","SPN","TKN","TKX","TRYB","UBT","UPP","ZRX","insurance","imageDark","bank","card","wallet","wyre","captionPos","envParams","accountId","prod","referrerAccountId","dest","destCurrency","redirectUrl","k","encodeURIComponent","iframeBox","wyreStyle","ramp","badge","hostAppName","hostApiKey","REACT_APP_RAMP_KEY","hostLogoUrl","swapAsset","RampInstantSDK","payload","purchase","show","transak","https://global.transak.com/v1/widget.js","REACT_APP_TRANSAK_KEY_TEST","REACT_APP_TRANSAK_KEY_PROD","fiatCurrency","cryptoCurrencyCode","currencyCode","walletAddress","partnerCustomerId","disableWalletAddressForm","transakGlobal","transakStyle","moonpay","REACT_APP_MOONPAY_KEY_TEST","REACT_APP_MOONPAY_KEY_PROD","baseCurrencyCode","showWalletAddressForm","enabledPaymentMethods","navigator","userAgent","cookie","moonpayStyle","https://instant.0x.org/v3/instant.js","tokenParams","RimbleWeb3_context","connector","defaultSelectedAssetData","availableAssetDatas","shouldDisableAnalyticsTracking","defaultAssetBuyAmount","kyberSwap","web3Subscription","decodeLogsData","https://widget.kyber.network/v0.7.5/widget.css","https://widget.kyber.network/v0.7.5/widget.js","querySelectorAll","remove","scripts","lang","paramForwarding","pinnedTokens","defaultPair","commissionId","click","airSwap","https://cdn.airswap.io/airswap-instant-widget.js","onComplete","AirSwapInstant","totle","https://widget.totle.com/latest/dist.js","sourceAssetAddress","sourceAmountDecimal","destinationAssetAddress","destinationAmountDecimal","partnerContractAddress","TotleWidget","nodeId","totleWidgetContainer","run","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_10__","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_9__","anonymous","indexed","govTokensDisabled","defiPrime","crToken","cToken","yToken","iToken","CHAI","skipMintForDeposit","fToken","defiScoreDisabled","disabledMessageRedeemKey","disabledMessageDepositKey","Tos","h1","h2","listStyle","theme_dark","exit","TorusConnector","kwargs","Torus","api","rest","objectWithoutProperties","buttonPosition","init","login","getUserInfo","getPublicAddress","verifier","verifierId","logout","updateNetworkId","Connector","AuthereumConnector","Authereum","getProvider","enable","getAccounts","accounts","disable","constructor","GnosisSafeConnector","SafeAppConnector","safeLoaded","checkSafeApp","activate","getAccount","getSafeInfo","isSafeApp","deactivate","WalletLinkConnector","WalletLink","infuraUrl","appLogoUrl","walletLink","darkMode","makeWeb3Provider","disconnect","close","WalletConnectConnector","WalletConnectProvider","infuraId","InjectedConnector","Connectors","NetworkOnlyConnector","TrezorConnector","LedgerConnector","FortmaticConnector","PortisConnector","manifestEmail","REACT_APP_TREZOR_MANIFEST_EMAIL","manifestAppUrl","REACT_APP_TREZOR_MANIFEST_URL","fortmaticApiKey","REACT_APP_FORTMATIC_KEY_MAINNET","portisDAppId","REACT_APP_PORTIS_DAPP_ID","portisNetwork","REACT_APP_PORTIS_NETWORK","supportedNetworkURLs","Injected","Infura","providerURL","Trezor","TrezorApi","Ledger","WalletConnect","bridge","Fortmatic","FortmaticApi","logoutOnDeactivation","Portis","PortisApi","dAppId","AuthereumApi","TorusApi","buildEnv","enableLogging","host","showTorusButton","selectedNetwork","multiCallsMax","multiCallsExecutionInterval","multiCalls","multiCallsStats","arrivedCount","rejectedCount","requestsTimes","missingHashes","processedCount","resolvedHashes","rejectedHashes","totalElapsedTime","maxProcessingBatches","processingBatches","networksContracts","multiCallsBatchId","multiCallsResults","multiCallsTimeoutIds","timeLog","callBatchId","callDataHash","checkMulticallData","checkRejectedHash","executeBatch","resultHash","attempt","maxCount","maxCountReached","resultIsDefined","addRejectedHash","checkResolvedHash","executeBatchId","timeStart","hashes","elapsedTime","requestsCount","avgResolveTime","executeMulticalls","_args4","setNetwork","setWeb3","WrongNetworkBanner","NetworkUtil","isSupportedNetwork","components_WrongNetworkBanner","NoWeb3BrowserModal","renderContent","RimbleUtil","isMobileDevice","NoWalletModal","icononly","Outline","GeneralUtil","hasMetaMask","isMetaMask","isTrustWallet","isTrust","isCoinbaseWallet","hasDapper","DapperEthereum","isDapper","isOpera","isAndroid","isIos","MSStream","WrongNetworkModal","RimbleUtils","TransactionFeeModal","subtitle2","Web3ConnectionButtons","context","useWeb3Context","setConnector","connectionCallback","unsetConnector","isMetamask","isGnosisSafe","safe","browserWalletDetected","allowedConnectors","registerPage","registerPageByDefault","basicConnectorsName","injectedIndex","gnosisIndex","connectorInfo","walletIcon","buttonStyle","ConnectionModal","showTxFees","currentSection","showInstructions","askCustomAddress","closeRemainingTime","customAddressError","newToEthereumChoice","toggleShowTxFees","setStoredSection","closeCountdown","setWalletChoice","choice","setCurrentSection","connectCustomAddress","updateCustomAddress","renderModalContent","TOSacceptance","react_router_dom","newToEthereum","showConnectionButtons","assertThisInitialized","marginBottom","renderFooter","components_TransactionFeeModal","ConnectionPendingModal","UserRejectedConnectionModal","sendMessageAgain","initAccount","LowFundsModal","showSecondary","toggleQRVisible","alignContent","as","h5","ConnectionModalUtil","components_NoWeb3BrowserModal","closeNoWeb3BrowserModal","noWeb3BrowserModalIsOpen","components_NoWalletModal","closeNoWalletModal","noWalletModalIsOpen","components_WrongNetworkModal","closeWrongNetworkModal","wrongNetworkModalIsOpen","components_ConnectionModal","validateAccount","closeConnectionModal","connectionModalIsOpen","accountValidated","components_ConnectionPendingModal","closeConnectionPendingModal","accountConnectionPending","components_UserRejectedConnectionModal","closeUserRejectedConnectionModal","userRejectedConnect","components_LowFundsModal","closeLowFundsModal","lowFundsModalIsOpen","ConnectionErrorModal","setFirstValidConnector","closeConnectionErrorModal","isLedger","connectionError","TransactionErrorModal","closeTransactionErrorModal","isLedgerError","transactionError","isSlowTxError","RimbleTransactionContext","createContext","permitClient","web3Providers","accountBalance","initWeb3","maticPlasmaClient","accountBalanceLow","accountBalanceToken","checkPreflight","checkNetwork","rejectValidation","accountValidationPending","initializeContracts","rejectAccountConnect","enableUnderlyingWithdraw","userRejectedValidation","transactionConnectionModalIsOpen","openLowFundsModal","openWrongNetworkModal","openNoWeb3BrowserModal","openConnectionErrorModal","openTransactionErrorModal","openConnectionPendingModal","openUserRejectedConnectionModal","openUserRejectedValidationModal","closeUserRejectedValidationModal","meta","setConnectorName","biconomyLoginProcessing","RimbleTransaction","handleNetworkChanged","_args2","reload","networkInitialized","connectGnosisSafe","testTransaction","createTransaction","addTransaction","errorMessage","isWalletConnectClosedModalError","customAddressChanged","contextAccountChanged","accountDisconnected","gnosisSafeLoaded","initMaticPosClient","polygonConfig","web3PolygonRpc","web3InfuraRpc","maticProvider","parentProvider","maticPOSClientConfig","use","Web3ClientPlugin","POSClient","parent","defaultConfig","child","useWeb3Provider","connectorNameChanged","web3Host","web3Provider","forceCallback","web3Callback","originalWeb3","initWeb3Index","biconomyWeb3Provider","_args7","netId","providerRpc","library","IFrameEthereumProvider","web3Injected","callbackAfterLogin","setCallbackAfterLogin","callbackWeb3","isLogin","userContract","Biconomy","onEvent","READY","ERROR","useInfuraProvider","_args8","initContractWithoutSet","simpleIDInfo","simpleIDParams","SimpleID","wallets","shownNotifications","isError","$crisp","notificationId","content","Sentry","increaseAmount","contractsToInitialize","gaugesAvailableNetworks","newContracts","contractFound","contractIndex","_ref20","balanceOf","determineAccountLowBalance","openConnectionModal","_args21","getNetworkType","getNetworkId","currentNetworkChanged","_args23","contractMethod","_this$state","manualConfirmationTimeoutId","confirmationCallback","manualConfirmation","receiptCallback","isDeniedTx","_args24","confirmationCount","confidenceThreshold","recentEvent","timeout","lastUpdated","updatedTransaction","openNoWalletModal","CrispClient","accountBalanceDAI","subscribedTransactions","connectionErrorModalOpened","transactionErrorModalOpened","Provider","ConnectionModalsUtil","components_TransactionErrorModal","components_ConnectionErrorModal","utilities_NetworkUtil","Consumer","logoSrc","logoHeight","governanceEnabled","offsetTop","ScrollToTop","pathname","useLocation","useEffect","PageNotFound","Header_styles","NetworkOverview","getNetworkCircleColor","circleColor","networkCircle","DebuggerButtons","Web3Debugger","components_NetworkOverview","Web3Debugger_DebuggerButtons","node","TransactionToastMessages","started","confirmed","TransactionToastUtil","collectionHasNewObject","prevCollection","currentCollection","getNewObjectFromCollection","objectKey","getUpdatedObjectFromCollection","object","getTransactionFromCollection","identifier","collection","getUpdatedTransaction","currentTx","prevTx","processTransactionUpdates","showTransactionToast","toastMeta","getTransactionToastMeta","closeElem","transactionToastMeta","transactionAction","charAt","newMessage","Landing","lazy","Dashboard","Governance","App","currentEnv","selectedTab","connecting","genericError","selectedTheme","buyModalOpened","toastMessageProps","innerWidth","innerHeight","unsubscribeFromHistory","closeToastMessage","showToastMessage","processCustomParam","storedCachedData","_args","cachedKeyFound","storedKeyFound","update_stored_key","widthChanged","heightChanged","newProps","tabIndex","envEnabled","loadAvailableTokens","forceChangeChain","warn","jQuery","setThemeMode","closeIframe","w","iFrames","getElementsByTagName","iframe","contentWindow","parents","loadCurrentEnvironment","loadCustomAddress","clearAllCache","checkClientVersion","tokenChanged","strategyChanged","networkChanged","_this10","_this11","hasMetamask","store","themeDark","_this12","SuspenseLoader","web3_react_dist_default","web3Api","libraryName","web3_react_dist","recreateOnNetworkChange","recreateOnAccountChange","RimbleWeb3","needsPreflight","initContractCustomProvider","react_router","react","fallback","setToken","setStrategy","openBuyModal","handleMenuClick","selectTab","closeBuyModal","isGovernance","components_Header","src_Web3Debugger_Web3Debugger","exact","updateSelectedTab","expires","acceptOnScroll","cookieName","acceptOnScrollPercentage","marginTop","overflowY","src_Tos_Tos","src_PageNotFound_PageNotFound","utilities_TransactionToastUtil","Boolean","hostname","dsn","beforeSend","hint","originalException","ReactDOM","src_App_App","serviceWorker","ready","registration","unregister","TransactionListFilters","activeFilters","assets","setFilter","applyFilters","toggle","toggleOpened","resetFilter","resetFilters","transition","filters","filterCategory","filterValues","TableCellHeader","filterValue","filterLabel","isChecked","filterName","prevTxs","txsPerPage","totalTxs","totalPages","renderedTxs","txsIndexes","parsedValue","loadTxs","enabledActions","hasActiveFilters","m","src_TransactionListFilters_TransactionListFilters","txHashKey","prevPage","nextPage","oldTokenName","oldIdleTokens","skipMigration","biconomyLimitReached","toggleSkipMigration","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_5__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_4__","executeAction","idleTokenToRedeem","_clientProtocolAmountsRedeem","gasLimitRedeem","callbackRedeem","callbackReceiptRedeem","toggleMetaTransactionsEnabled","checkMigrationContractApproved","migrationContractName","oldIdleTokensConverted","oldContractInfo","oldContractABI","biconomyLimits","disapproveMigration","approveMigration","migrationMethod","callbackMigrate","callbackReceiptMigrate","_skipRebalance","_migrationContract$me","biconomyChanged","usePermitChanged","fastBalanceSelectorChanged","batchMigrationEnabled","SkipMigrationComponent","react__WEBPACK_IMPORTED_MODULE_11___default","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_16__","rimble_ui__WEBPACK_IMPORTED_MODULE_20__","biconomyEnabled","_FlexLoader_FlexLoader__WEBPACK_IMPORTED_MODULE_13__","migrateTextBefore","migrateText","_TransactionField_TransactionField__WEBPACK_IMPORTED_MODULE_18__","_TxProgressBar_TxProgressBar__WEBPACK_IMPORTED_MODULE_17__","_FastBalanceSelector_FastBalanceSelector__WEBPACK_IMPORTED_MODULE_19__","functionName","_RoundButton_RoundButton__WEBPACK_IMPORTED_MODULE_14__","migrationImage","migrationTextProps","approveText","_TableHeader_TableHeader__WEBPACK_IMPORTED_MODULE_11__","footer","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","rimble_ui__WEBPACK_IMPORTED_MODULE_3__","bgLayer","backgroundRepeat","backgroundPosition","backgroundSize","backgroundImage","subtitleProps","BackButton","polished__WEBPACK_IMPORTED_MODULE_0__","darkBlue","blurple","consensysblue","readableColor","totalAUMEndOfYear","loadTotalAUM","aggregatedStatsMethodParams","_this$props","_this$functionsUtil","rimble_ui__WEBPACK_IMPORTED_MODULE_11__","react_countup__WEBPACK_IMPORTED_MODULE_9___default","_Title_Title__WEBPACK_IMPORTED_MODULE_8__","VariationNumber","IconDirection","iconPos","loading-dots","loading-dots--dot","dot-keyframes","LoadingSpinner","src_LoadingSpinner_LoadingSpinner","fieldName","seniorTrancheName","juniorTrancheName","aprChartData","apiResults_aa","apiResults_bb","totalItems_aa","totalItems_bb","newPoint","aprChartWidth","aprChartHeight","resizeAprChart","aprChartType","aprChartProps","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","aprChartRowElement","$aprChartRowElement","css","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_9__","lineWidth","react__WEBPACK_IMPORTED_MODULE_12___default","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_18__","protocolEarning","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_19__","_Users_samuelecester_Desktop_git_idle_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","trancheChanged","protocolChanged","fieldChanged","experimentalBadge","limitCap","badgeText","badgeColor","statusBadge","buttonLabel","_CustomField_CustomField__WEBPACK_IMPORTED_MODULE_14__","feesCounter","react_countup__WEBPACK_IMPORTED_MODULE_11___default","tooltipMessage","_TooltipText_TooltipText__WEBPACK_IMPORTED_MODULE_15__","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_17__","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_13__","formattedValue","_isBigNumber","currYear","getFullYear","columnWidth","_ExtLink_ExtLink__WEBPACK_IMPORTED_MODULE_8__","role","aria-label","react_router_dom__WEBPACK_IMPORTED_MODULE_7__","ColTitle","CustomTooltip","xFormatted","CustomTooltipRow","HeadingComponent","_DashboardCard_DashboardCard__WEBPACK_IMPORTED_MODULE_9__","rowsPerPage","processedRows","processRows","totalRows","rowIndex","_TableRow_TableRow__WEBPACK_IMPORTED_MODULE_8__","CustomField","TwitterShareButton","share","escape","customText","react_confetti_default","recycle","src_TwitterShareButton_TwitterShareButton","componentHasChildren","fieldPath","customFieldName","customFieldProps","_AssetField_AssetField__WEBPACK_IMPORTED_MODULE_8__","earningsCurveStart","earningsCurveEnd","tokenAPY2","allocationChartWidth","allocationChartHeight","resizeAllocationChart","aprChartEndTimestamp","aprChartStartTimestamp","apiResultsAprChart","totalItems","firstTokenPrice","firstIdleBlock","performanceChartWidth","performanceChartHeight","resizePerformanceChart","apr_end_date","apr_start_date","apr_start_timestamp","apiResultsPerformanceChart","idleTokenPerformance","performanceChartData","performanceChartType","performanceChartProps","amountToMigrate","earningsPercCurveDirection","earningsPercCurve","earningsPercDirection","oldAPY","tokenAPYNoGov","allocationChartRowElement","$allocationChartRowElement","random","defs","linearGradientDef","offset","_CustomTooltip_CustomTooltip__WEBPACK_IMPORTED_MODULE_17__","_CustomTooltip_CustomTooltipRow__WEBPACK_IMPORTED_MODULE_20__","PerformanceChartRowElement","$PerformanceChartRowElement","blocknumber","rimble_ui__WEBPACK_IMPORTED_MODULE_21__","_SmartNumber_SmartNumber__WEBPACK_IMPORTED_MODULE_14__","_VariationNumber_VariationNumber__WEBPACK_IMPORTED_MODULE_18__","earningsCurve","tooltipMode","_GenericChart_GenericChart__WEBPACK_IMPORTED_MODULE_16__","_AllocationChart_AllocationChart__WEBPACK_IMPORTED_MODULE_19__"],"mappings":"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","file":"static/js/main.bf1c02b2.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Flex, Text, Icon, Image } from \"rimble-ui\";\nimport DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass CardIconButton extends Component {\n  render() {\n    const cardProps = Object.assign(\n      {\n        py: 1,\n        width: \"auto\",\n        px: [\"12px\", 3]\n      },\n      this.props.cardProps\n    );\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isInteractive={true}\n        isActive={this.props.isActive}\n        isDisabled={this.props.isDisabled}\n        handleClick={this.props.handleClick}\n        backgroundColor={\"blue\"}\n      >\n        <Flex\n          mx={this.props.margin ? this.props.margin : 0}\n          my={1}\n          alignItems={\"center\"}\n          flexDirection={\"row\"}\n          justifyContent={this.props.align ? this.props.align : \"center\"}\n        >\n          {this.props.image ? this.props.iconBgColor ? (\n              <Flex\n                mr={this.props.isSidebar ? 0 : 2}\n                p={this.props.isSidebar ? 0 : [\"4px\", \"7px\"]}\n                borderRadius={\"50%\"}\n                alignItems={\"center\"}\n                justifyContent={\"center\"}\n                backgroundColor={\n                  this.props.iconBgColor\n                    ? this.props.iconBgColor\n                    : this.props.theme.colors.transactions.actionBg.redeem\n                }\n              >\n                <Image\n                  align={\"center\"}\n                  src={this.props.image}\n                  height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                  width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                  {...this.props.imageProps}\n                />\n              </Flex>\n            ) : (\n            <Image\n              align={\"center\"}\n              src={this.props.image}\n              height={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              width={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              {...this.props.imageProps}\n            />\n          ) : this.props.useIconOnly ? (\n            <Icon\n              align={\"center\"}\n              name={this.props.icon}\n              size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n              color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n              {...this.props.iconProps}\n            />\n          ) : (\n            <Flex\n              mr={this.props.isSidebar ? 0 : 2}\n              p={this.props.isSidebar ? 0 : [\"4px\", \"7px\"]}\n              borderRadius={\"50%\"}\n              alignItems={\"center\"}\n              justifyContent={\"center\"}\n              backgroundColor={\n                this.props.iconBgColor\n                  ? this.props.iconBgColor\n                  : this.props.theme.colors.transactions.actionBg.redeem\n              }\n            >\n              <Icon\n                align={\"center\"}\n                name={this.props.icon}\n                size={this.props.isMobile ? \"1.2em\" : \"1.4em\"}\n                color={this.props.iconColor ? this.props.iconColor : \"redeem\"}\n                {...this.props.iconProps}\n              />\n            </Flex>\n          )}\n          <Text fontWeight={3} fontSize={[1, 3]} {...this.props.textProps}>\n            {this.props.text}\n          </Text>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CardIconButton;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass SmartNumber extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  render() {\n    let formattedNumber = '-';\n    const number = typeof this.props.number !== 'undefined' && !isNaN(this.props.number) && this.props.number !== false && this.props.number !== null ? this.props.number : null;\n\n    if (number){\n      switch (this.props.type){\n        case 'money':\n          formattedNumber = this.functionsUtil.formatMoney(number,this.props.precision);\n        break;\n        default:\n          formattedNumber = this.functionsUtil.abbreviateNumber(number,this.props.decimals,this.props.maxPrecision,this.props.minPrecision);\n        break;\n      }\n    } else {\n      formattedNumber = '-';\n    }\n\n    const flexProps = {\n      width:1,\n      alignItems:'center',\n      flexDirection:'row',\n      justifyContent:'center'\n    };\n\n    // Replace props\n    if (this.props.flexProps && Object.keys(this.props.flexProps).length){\n      Object.keys(this.props.flexProps).forEach(p => {\n        flexProps[p] = this.props.flexProps[p];\n      });\n    }\n\n    const showUnit = this.props.unit && formattedNumber !== '-';\n    const unitPos = this.props.unitPos ? this.props.unitPos : 'right';\n\n    return (\n      <Flex\n        {...flexProps}\n      >\n        {\n          unitPos === 'left' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n        <Text {...this.props}>{formattedNumber}</Text>\n        {\n          unitPos === 'right' && showUnit &&\n            <Text {...this.props.unitProps}>{this.props.unit}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SmartNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"trancheFlash\":\"TrancheWelcome_trancheFlash__2aaz5\",\"mobile\":\"TrancheWelcome_mobile__fIBQP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"PageNotFound_headerContainer__Ly5Tz\",\"headerBgFiller\":\"PageNotFound_headerBgFiller__1NzlO\",\"bgContainer\":\"PageNotFound_bgContainer__1Racj\",\"list\":\"PageNotFound_list__Cnz-b\",\"textContainer\":\"PageNotFound_textContainer__g_kTm\"};","import React, { Component } from 'react';\nimport { Flex, Link, Text } from \"rimble-ui\";\nimport RoundIconButton from '../RoundIconButton/RoundIconButton';\n\nclass Breadcrumb extends Component {\n  render() {\n\n    const showPathMobile = !!this.props.showPathMobile;\n\n    return (\n      <Flex\n        width={1}\n        id={'breadcrumb'}\n        alignItems={'center'}\n      >\n        {\n          this.props.handleClick && \n           <RoundIconButton\n             buttonProps={{\n               border:2,\n               width:'35px',\n               height:'35px'\n             }}\n             iconSize={'1.2em'}\n             iconName={'ArrowBack'}\n             handleClick={this.props.handleClick}\n           />\n        }\n        {\n          this.props.text && this.props.text.length>0 &&\n           <Link\n             ml={[2,3]}\n             fontSize={[1,2]}\n             fontWeight={3}\n             color={'cellText'}\n             hoverColor={'copyColor'}\n             onClick={this.props.handleClick}\n           >\n            {this.props.text}\n           </Link>\n        }\n        {\n          (!this.props.isMobile || showPathMobile) && this.props.path && this.props.path.length>0 &&\n            this.props.path.map((path,index) => {\n              const link = this.props.pathLink ? (this.props.pathLink[index] || null) : null;\n              const Component = link ? Link : Text;\n              return (\n                <Component\n                  pl={[1,3]}\n                  ml={[1,3]}\n                  fontWeight={3}\n                  fontSize={[1,2]}\n                  hoverColor={'copyColor'}\n                  style={ !this.props.isMobile ? {\n                    maxWidth:'30%',\n                    overflow: 'hidden',\n                    whiteSpace: 'nowrap',\n                    textOverflow: 'ellipsis',\n                    borderLeft: `1px solid ${this.props.theme.colors.divider}`\n                  } : null }\n                  key={`breadcrumb_path_${index}`}\n                  color={link ? 'cellText' : 'statValue'}\n                  onClick={link ? e => this.props.goToSection(link) : null}\n                >\n                  {path}\n                </Component>\n              );\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Breadcrumb;","import { Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\n\nclass RoundIconButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      p:0,\n      border:1,\n      width:'40px',\n      height:'40px',\n      borderRadius:'50%',\n      mainColor:'backButtonBg',\n      disabled:this.props.disabled\n    },this.props.buttonProps);\n\n    buttonProps.minWidth = buttonProps.width;\n\n    return (\n       <RoundButton\n         buttonProps={buttonProps}\n         handleClick={this.props.handleClick}\n       >\n         <Icon\n           color={'copyColor'}\n           name={this.props.iconName}\n           size={ this.props.iconSize ? this.props.iconSize : '1.3em'}\n         />\n       </RoundButton>\n    );\n  }\n}\n\nexport default RoundIconButton;","import React, { Component } from 'react';\nimport { Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ShortHash extends Component {\n\n  state = {\n    text:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const hashChanged = prevProps.hash !== this.props.hash;\n    if (hashChanged){\n      this.loadData();\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const resolveAddress = this.props.resolveAddress !== false;\n    let text = this.functionsUtil.shortenHash(this.props.hash);\n    const ensName = resolveAddress ? await this.functionsUtil.getENSName(this.props.hash) : null;\n    if (ensName){\n      text = ensName;\n    }\n    this.setStateSafe({\n      text\n    });\n  }\n\n  render() {\n    const loader = (<Loader size=\"20px\" />);\n    return this.state.text ? <Text display={'inline'} {...this.props}>{this.state.text}</Text> : loader;\n  }\n}\n\nexport default ShortHash;","import React, { Component } from 'react';\nimport { Icon, Text, Flex } from \"rimble-ui\";\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass IconBox extends Component {\n\n  render() {\n    const cardProps = Object.assign({\n      p:3\n    },this.props.cardProps);\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n        isVisible={this.props.isVisible}\n        isInteractive={this.props.isInteractive}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={this.props.icon ? this.props.icon : 'InfoOutline'}\n            {...this.props.iconProps}\n          />\n          {\n            this.props.text && \n              <Text\n                mt={1}\n                fontSize={2}\n                color={'cellText'}\n                textAlign={'center'}\n                dangerouslySetInnerHTML={{\n                  __html:this.props.text\n                }}\n                {...this.props.textProps}\n              />\n          }\n          {\n            this.props.children\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default IconBox;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport globalConfigs from '../configs/globalConfigs';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass AllocationChart extends Component {\n  state = {\n    chartData:null,\n    chartProps:null,\n    selectedSlice:null,\n    totalAllocation:null,\n    protocolsAllocations:null,\n    protocolsAllocationsPerc:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setStateSafe({\n        chartData:null,\n        chartProps:null,\n        selectedSlice:null,\n        totalAllocation:null,\n        protocolsAllocations:null,\n        protocolsAllocationsPerc:null\n      },() => {\n        this.loadData();\n      });\n    } else if (prevProps.isMobile !== this.props.isMobile){\n      this.loadData()\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n    const {\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    } = await this.functionsUtil.getTokenAllocation(this.props.tokenConfig);\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => d.value+'%',\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n      margin: this.props.inline ? {top:0,right:15,bottom:0,left:1} : (this.props.isMobile ? { top: 10, right: 15, bottom: 0, left: 15 } : { top: 10, right: 35, bottom: 0, left: 35 }),\n    };\n\n    const chartData = [];\n\n    this.props.tokenConfig.protocols.forEach((protocolInfo,i)=>{\n      const protocolName = protocolInfo.name;\n      const protocolAddr = protocolInfo.address.toLowerCase();\n      if (protocolsAllocationsPerc[protocolAddr]){\n        const protocolAllocationPercParsed = parseFloat(protocolsAllocationsPerc[protocolAddr].times(100).toFixed(2));\n        chartData.push({\n          id:protocolAddr,\n          name:protocolName,\n          value:protocolAllocationPercParsed,\n          color:'hsl('+globalConfigs.stats.protocols[protocolName].color.hsl.join(',')+')',\n          label: globalConfigs.stats.protocols[protocolName].label ? globalConfigs.stats.protocols[protocolName].label : this.functionsUtil.capitalize(protocolName)\n        });\n      }\n    });\n\n    this.setStateSafe({\n      chartData,\n      chartProps,\n      totalAllocation,\n      protocolsAllocations,\n      protocolsAllocationsPerc\n    });\n  }\n\n  render() {\n    \n    const selectedSlice = this.state.selectedSlice !== null && this.state.protocolsAllocations[this.state.selectedSlice.id] ? this.state.protocolsAllocations[this.state.selectedSlice.id] : false;\n    const protocolIcon = this.state.selectedSlice !== null ? (globalConfigs.stats.protocols[this.state.selectedSlice.name] && globalConfigs.stats.protocols[this.state.selectedSlice.name].icon ? globalConfigs.stats.protocols[this.state.selectedSlice.name].icon : `${this.state.selectedSlice.name}.svg`) : null;\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n      >\n        {\n          this.state.totalAllocation && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/protocols/${protocolIcon}`}\n                    />\n                    <SmartNumber\n                      fontSize={[3,4]}\n                      decimals={3}\n                      fontWeight={4}\n                      maxPrecision={5}\n                      number={selectedSlice}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      Funds in {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={`/images/idle-mark.png`}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontWeight:3,\n                        fontSize:[3,4]\n                      }}\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.totalAllocation}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.state.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AllocationChart;","import React, { Component } from 'react';\nimport { Box, Flex, Icon, Text, Heading } from 'rimble-ui'\n// import styles from './Faquestion.module.scss';\n\nclass Faquestion extends Component {\n  state = {\n    isShowingAnswer: false\n  };\n  toggleAnswer(e) {\n    e.preventDefault();\n    this.setState(state => ({...state, isShowingAnswer: !state.isShowingAnswer}));\n  };\n  render() {\n    return (\n      <Flex\n        my={[3,3]}\n        py={[3,3]}\n        px={[4,4]}\n        flexDirection={'column'}\n        alignItems={'baseline'}\n        justifyContent={'center'}\n        backgroundColor={'cardBg'}\n        borderRadius={ this.props.isOpened ? '30px' : '50px' }\n        boxShadow={1}\n      >\n        <Flex flexDirection={'row'} alignItems={'center'} width={1} onClick={this.props.handleClick} style={{cursor: 'pointer'}}>\n          <Box width={4/5}>\n            <Heading.h4\n              my={0}\n              fontWeight={3}\n              fontSize={[1,2]}\n              fontFamily={'sansSerif'}\n              color={this.props.isOpened ? 'link' : 'dark-gray'}\n            >\n              {this.props.question}\n            </Heading.h4>\n          </Box>\n          <Flex\n            width={1/5}\n            justifyContent={'flex-end'}\n          >\n            <Icon\n              size={\"1.5em\"}\n              color={this.props.isOpened ? 'link' : 'copyColor'}\n              name={this.props.isOpened ? 'KeyboardArrowUp' : 'KeyboardArrowDown'}\n            />\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n        >\n          {this.props.isOpened &&\n            <Text.p\n              textAlign={'justify'}\n              fontSize={[1,2]}\n              dangerouslySetInnerHTML={{ __html: this.props.answer }}\n            >\n            </Text.p>\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Faquestion;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquity extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const etherscanTxs = await this.functionsUtil.getEtherscanTxs(this.props.account,0,'latest',enabledTokens);\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    const chartData = [];\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        filteredTxs.forEach((tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || !tx.action || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n          \n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const balance = amountLent;\n          const action = tx.action;\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenPrice = this.functionsUtil.BNify(tx.tokenPrice);\n          const idleTokens = this.functionsUtil.BNify(tx.idleTokens);\n\n          // console.log(selectedToken,this.functionsUtil.strToMoment(tx.timeStamp*1000).format(\"DD-MM-YYYY HH:mm:ss\"),tx.action,tokenAmount.toFixed(5),amountLent.toFixed(5),idleTokens.toFixed(5));\n\n          if (!tokenPrice.isNaN() && !tokenPrice.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              timeStamp,\n              tokenPrice,\n              idleTokens,\n              tokenAmount\n            });\n          }\n        });\n      }\n    });\n\n    // console.log('tokensBalance',tokensBalance);\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const aggregatedBalancesKeys = {};\n    const tokensBalancesPerDate = {};\n    const currTimestamp = parseInt(new Date().getTime()/1000)+86400;\n\n    const tokensData = {};\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      const tokenAddress = this.functionsUtil.getAvailableTokenAddress(token,this.props.selectedStrategy);\n      tokensData[token] = await this.functionsUtil.getTokenApiData(tokenAddress,isRisk,firstTxTimestamp,null,false,3600);\n    });\n\n    const idleTokenBalance = {};\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds){\n\n      const foundBalances = {};\n      const tokensBalances = {};\n      timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach(token => {\n\n        let lastTokenData = null;\n        const lastTokenDataUnfiltered = Object.values(tokensData[token]).pop();\n        const filteredTokenData = tokensData[token].filter(tx => (tx.timestamp>=prevTimestamp && tx.timestamp<=timeStamp));\n        if (filteredTokenData && filteredTokenData.length){\n          lastTokenData = filteredTokenData.pop();\n        }\n\n        if (!idleTokenBalance[token]){\n          idleTokenBalance[token] = this.functionsUtil.BNify(0);\n        }\n\n        const tokenConfig = this.props.availableTokens[token];\n        const tokenDecimals = tokenConfig.decimals;\n        let filteredBalances = tokensBalance[token].filter(tx => (tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n        \n        if (!filteredBalances.length){\n          if (prevBalances && prevBalances[token]){\n            filteredBalances = prevBalances[token];\n            const lastFilteredTx = Object.assign([],filteredBalances).pop();\n            const currentBalance = parseFloat(lastFilteredTx.balance);\n\n            // Take idleToken price from API and calculate new balance\n            if (currentBalance>0){\n              if (timeStamp>firstTxTimestamp && lastTokenData){\n                const idleTokens = idleTokenBalance[token];\n                const idlePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.idlePrice,tokenDecimals);\n                let newBalance = idleTokens.times(idlePrice);\n\n                // Set new balance and tokenPrice\n                lastFilteredTx.balance = newBalance;\n                lastFilteredTx.tokenPrice = idlePrice;\n                filteredBalances = [lastFilteredTx];\n              }\n            } else {\n              filteredBalances = [{\n                balance:this.functionsUtil.BNify(0),\n                tokenPrice:this.functionsUtil.BNify(0)\n              }];\n            }\n          } else {\n            filteredBalances = [{\n              balance:this.functionsUtil.BNify(0),\n              tokenPrice:this.functionsUtil.BNify(0)\n            }];\n          }\n        } else {\n          filteredBalances.forEach(tx => {\n            switch (tx.action){\n              case 'Swap':\n              case 'Deposit':\n              case 'Migrate':\n              case 'Receive':\n              case 'CurveOut':\n                idleTokenBalance[token] = idleTokenBalance[token].plus(tx.idleTokens);\n              break;\n              default:\n                idleTokenBalance[token] = idleTokenBalance[token].minus(tx.idleTokens);\n                if (idleTokenBalance[token].lt(0)){\n                  idleTokenBalance[token] = this.functionsUtil.BNify(0);\n                }\n              break;\n            }\n          });\n        }\n\n        const lastTx = Object.assign([],filteredBalances).pop();\n        // let lastTxBalance = this.functionsUtil.BNify(lastTx.balance);\n        let lastTxBalance = idleTokenBalance[token].times(lastTx.tokenPrice);\n\n        if (lastTxBalance.gt(0)){\n          // Convert token balance to USD\n          let tokenUsdConversionRate = null;\n          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n          if (!this.props.chartToken && conversionRateField){\n            const conversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n            if (conversionRate){\n              tokenUsdConversionRate = this.functionsUtil.fixTokenDecimals(conversionRate,18);\n              if (tokenUsdConversionRate.gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n          }\n          \n          tokensBalances[token] = lastTxBalance;\n          aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n        } else {\n          tokensBalances[token] = this.functionsUtil.BNify(0);\n        }\n\n        foundBalances[token] = filteredBalances;\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    // debugger;\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    let axisBottomIndex = 0;\n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        tickValues:'every day',\n        legendPosition: 'middle',\n        format: (value) => {\n          if (axisBottomIndex++ % daysFrequency === 0){\n            return this.functionsUtil.strToMoment(value,'YYYY/MM/DD HH:mm').format('MMM DD')\n          }\n        },\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquity;","import Select from 'react-select';\nimport React, { Component } from 'react';\nimport { Flex, Text, Input } from \"rimble-ui\";\nimport styles from './GenericSelector.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass GenericSelector extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    await this.loadComponents();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const optionsChanged = JSON.stringify(prevProps.options) !== JSON.stringify(this.props.options);\n    const defaultValueChanged = JSON.stringify(prevProps.defaultValue) !== JSON.stringify(this.props.defaultValue);\n    const componentsChanged = prevProps.CustomOptionValue !== this.props.CustomOptionValue || prevProps.CustomValueContainer !== this.props.CustomValueContainer;\n\n    if (optionsChanged || selectedTokenChanged || defaultValueChanged || componentsChanged) {\n      this.loadComponents();\n    }\n  }\n\n  async loadComponents() {\n\n    const ControlComponent = props => {\n      const cardProps = Object.assign(\n        props.innerProps,\n        {\n          p: 2,\n          width: 1,\n          style: { cursor: 'pointer' }\n        },\n        (this.props.innerProps ? this.props.innerProps : {})\n      );\n\n      if (props.menuIsOpen) {\n        cardProps.boxShadow = this.props.noShadow ? 0 : 4;\n      }\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n          isInteractive={this.props.notInteractive ? false : true}\n        >\n          <Flex\n            width={1}\n            height={'100%'}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            {props.children}\n          </Flex>\n        </DashboardCard>\n      );\n    };\n\n    const CustomIndicatorSeparator = props => null;\n\n    const CustomMenu = props => {\n      const cardProps = Object.assign(props.innerProps, {\n        mt: 2,\n        zIndex: 1,\n        boxShadow: null,\n        position: 'absolute',\n        backgroundColor: this.props.outerColor ? this.props.outerColor : \"cardBg\"\n      });\n      return (\n        <DashboardCard\n          cardProps={cardProps}\n        >\n          {props.children}\n        </DashboardCard>\n      );\n    }\n\n    const CustomValueContainer = this.props.CustomValueContainer ? this.props.CustomValueContainer : props => {\n      return (\n        <Flex\n          {...props.innerProps}\n        >\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text\n              fontWeight={3}\n            >\n              {props.selectProps.value.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomOptionValue = this.props.CustomOptionValue ? this.props.CustomOptionValue : (props) => {\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n        >\n          <Text>\n            {props.label}\n          </Text>\n        </Flex>\n      );\n    };\n\n    const CustomInputContainer = this.props.CustomInputContainer ? this.props.CustomInputContainer : (props) => {\n\n      if (!props.selectProps.isSearchable) {\n        return null;\n      }\n\n      return (\n        <Input\n          {...props}\n          fontSize={this.props.theme.fontSizes[2]}\n          color={this.props.theme.colors.copyColor}\n          fontWeight={this.props.theme.fontWeights[3]}\n          fontFamily={this.props.theme.fonts.sansSerif}\n          backgroundColor={this.props.theme.colors.cardBg}\n          className={[styles.searchInput, this.props.themeMode === 'dark' ? styles.dark : null, !props.selectProps.menuIsOpen ? styles.searchInputHidden : null]}\n        />\n      );\n    };\n\n    const CustomOption = (props) => {\n\n      const options = props.selectProps.options;\n      let selectedValue = props.selectProps && props.selectProps.value && props.selectProps.value.value;\n\n      // Check if the selectedValue is included in options\n      if (selectedValue && options.map(o => o.value).indexOf(selectedValue) === -1 && this.props.defaultValue) {\n        selectedValue = this.props.defaultValue.value;\n      }\n\n      // Don't show selected value\n      if (selectedValue && selectedValue === props.value) {\n        return null;\n      }\n\n      // console.log('CustomOption',this.props.customOptionProps);\n\n      return (\n        <Flex\n          px={3}\n          py={2}\n          width={1}\n          {...props.innerProps}\n          alignItems={'center'}\n          flexDirection={'row'}\n          style={{ cursor: 'pointer' }}\n          justifyContent={'flex-start'}\n          className={styles.genericSelector}\n          backgroundColor={this.props.isDashboard ? 'cardBg' : (props.isFocused ? 'selectBgFocused' : 'selectBg')}\n        >\n          <CustomOptionValue\n            {...props}\n          />\n        </Flex>\n      );\n    }\n\n    await this.setState({\n      CustomMenu,\n      CustomOption,\n      ControlComponent,\n      CustomValueContainer,\n      CustomInputContainer,\n      CustomIndicatorSeparator\n    });\n  }\n\n  render() {\n    const isSearchable = typeof this.props.isSearchable !== 'undefined' ? this.props.isSearchable : false;\n    return (\n      <Select\n        name={this.props.name}\n        isSearchable={isSearchable}\n        options={this.props.options}\n        defaultValue={this.props.defaultValue}\n        onChange={v => this.props.onChange(v.value)}\n        components={{\n          Menu: this.state.CustomMenu,\n          Option: this.state.CustomOption,\n          Control: this.state.ControlComponent,\n          Input: this.state.CustomInputContainer,\n          SingleValue: this.state.CustomValueContainer,\n          IndicatorSeparator: this.state.CustomIndicatorSeparator\n        }}\n      />\n    );\n  }\n}\n\nexport default GenericSelector;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\n\nclass ExecuteTransaction extends Component {\n\n  state = {\n    txStatus:null,\n    processing:{\n      txHash:null,\n      loading:false\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async execute(){\n\n    const callback = (tx,error) => {\n\n      // console.log('callback',tx,error);\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: 'Transaction',\n        eventLabel: this.props.methodName,\n        eventAction: this.props.contractName\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      const txSucceeded = tx && tx.status === 'success';\n      if (txSucceeded){\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx);\n        }\n      }\n\n      this.setState({\n        processing: {\n          txHash:null,\n          loading:false\n        },\n        txStatus:tx ? tx.status : null\n      });\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        txStatus:'processing',\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    this.setState((prevState) => ({\n      txStatus:'loading',\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    let params = this.props.params;\n    if (typeof this.props.getTransactionParams === 'function'){\n      params = this.props.getTransactionParams();\n    } else if (typeof this.props.getTransactionParamsAsync === 'function'){\n      params = await this.props.getTransactionParamsAsync();\n    } else if (typeof this.props.transactionParams === 'object'){\n      params = this.props.transactionParams;\n    }\n\n    // console.log('ExecuteTransaction',this.props.contractName,this.props.methodName,params);\n\n    if (!params || !this.props.contractName){\n      this.setState((prevState) => ({\n        txStatus:null,\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n      return false;\n    }\n\n    if (this.props.sendRawTransaction){\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt,null,true,params);\n    } else {\n      this.functionsUtil.contractMethodSendWrapper(this.props.contractName,this.props.methodName,params,callback,callbackReceipt);\n    }\n  }\n\n  render() {\n    const ExecuteComponent = this.props.Component;\n    return (\n      <Flex\n        {...this.props.parentProps}\n      >\n        {\n          !this.props.account ? (\n           <ConnectBox\n             {...this.props}\n           />\n         ) : this.state.txStatus === 'success' && this.props.children ?\n            this.props.children\n          : this.state.processing && this.state.processing.loading ? (\n            <TxProgressBar\n              web3={this.props.web3}\n              network={this.props.network}\n              {...this.props.progressBarProps}\n              hash={this.state.processing.txHash}\n              cancelTransaction={this.cancelTransaction.bind(this)}\n              endMessage={`Finalizing ${this.props.action} request...`}\n              waitText={`${this.functionsUtil.capitalize(this.props.action)} estimated in`}\n            />\n          ) : (\n            <ExecuteComponent\n              onClick={this.execute.bind(this)}\n              {...this.props.componentProps}\n            >\n              {this.props.componentProps.value}\n            </ExecuteComponent>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default ExecuteTransaction;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass AssetSelector extends Component {\n\n  state = {\n    options:null,\n    defaultValue:null,\n    CustomOptionValue:null,\n    CustomValueContainer:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadComponents(){\n    const options = Object.keys(this.props.availableTokens).map(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      return {\n        value:token,\n        label:token,\n        tokenConfig\n      };\n    });\n\n    const defaultValue = this.props.selectedToken ? options.find(v => (v.value.toUpperCase() === this.props.selectedToken.toUpperCase())) : null;\n\n    const CustomOptionValue = props => {\n      const token = props.value;\n      const tokenConfig = props.data.tokenConfig;\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n          {\n            this.state.props.showCustomField ? (\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:this.state.props.showCustomField,\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n            ) : this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : defaultValue;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const token = selectProps.value;\n      const tokenConfig = selectProps.tokenConfig;\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={token}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={token}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n\n          {\n            this.props.showBalance &&\n              <Flex\n                alignItems={'center'}\n                justifyContent={'flex-end'}\n              >\n                <AssetField\n                  token={token}\n                  {...this.state.props}\n                  fieldInfo={{\n                    name:'tokenBalance',\n                    props:{\n                      fontSize:[1,2],\n                      fontWeight:500,\n                      color:'cellText'\n                    }\n                  }}\n                  tokenConfig={tokenConfig}\n                  account={this.state.props.account}\n                  cachedData={this.props.cachedData}\n                  setCachedData={this.props.setCachedData}\n                />\n              </Flex>\n          }\n        </Flex>\n      );\n    }\n\n    this.setState({\n      options,\n      defaultValue,\n      CustomOptionValue,\n      CustomValueContainer\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadComponents();\n\n    this.setState({\n      props:this.props\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (availableTokensChanged || selectedTokenChanged){\n      this.loadComponents();\n    }\n  }\n\n  render() {\n    if (!this.state.options || !this.state.defaultValue || !this.state.CustomOptionValue || !this.state.CustomValueContainer || !this.props.availableTokens || !Object.keys(this.props.availableTokens).length){\n      return null;\n    }\n\n    return (\n      <GenericSelector\n        {...this.props}\n        name={'assets'}\n        options={this.state.options}\n        innerProps={this.props.innerProps}\n        isSearchable={this.props.isSearchable}\n        defaultValue={this.state.defaultValue}\n        selectedToken={this.props.selectedToken}\n        CustomOptionValue={this.state.CustomOptionValue}\n        CustomValueContainer={this.state.CustomValueContainer}\n        onChange={ this.props.onChange ? this.props.onChange : this.props.changeToken}\n      />\n    );\n  }\n}\n\nexport default AssetSelector;\n","import axios from 'axios';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Progress, Icon, Link } from 'rimble-ui'\n\nclass TxProgressBar extends Component {\n  state = {\n    txCount:0,\n    error:null,\n    ended:false,\n    percentage:0,\n    processing:true,\n    txTimestamp:null,\n    initialized:false,\n    estimatedTime:null,\n    remainingTime:null\n  };\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n\n    this.componentUnmounted = true;\n\n    var id = window.setTimeout(function() {}, 0);\n\n    while (id--) {\n        window.clearTimeout(id); // will do nothing if no timeout with id is present\n    }\n\n    window.initProgressBar = this.initProgressBar;\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps){\n    this.loadUtils();\n\n    if (!this.state.initialized && this.props.web3){\n      this.initProgressBar();\n    }\n  }\n\n  componentDidMount = async () => {\n    this.initProgressBar();\n  }\n\n  getTransaction = async () => {\n    const transaction = await (new Promise( async (resolve, reject) => {\n      // console.log('getTransaction',this.props.hash);\n      this.props.web3.eth.getTransaction(this.props.hash,(err,transaction) => {\n        resolve(transaction);\n      });\n    }));\n\n    // console.log('getTransaction',transaction);\n\n    const newState = {};\n    if (transaction){\n      newState.transaction = transaction;\n    } else {\n      newState.processing = false;\n      newState.error = 'Unable to find the transaction';\n    }\n\n    this.setState(newState);\n    return transaction;\n  }\n\n  /*\n  Taken from https://ethgasstation.info/calculatorTxV.php\n  */\n  _estimateWait (prediction, gasoffered) {\n    var minedProb;\n    var expectedWait;\n    var sum1, sum2;\n    var intercept = 4.2794;\n    var hpa = .0329;\n    var hgo = -3.2836;\n    var tx = -0.0004;\n    var intercept2 = 7.5375;\n    var hpa_coef = -0.0801;\n    var txatabove_coef= 0.0003;\n    var high_gas_coef = .3532;\n\n    if (gasoffered > 1000000) {    \n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + hgo  + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['hashpower_accepting'] * hpa_coef) + (prediction['tx_atabove'] * txatabove_coef) + high_gas_coef;\n    } else {\n      sum1 = intercept + (prediction['hashpower_accepting'] * hpa) + (prediction['tx_atabove'] * tx);\n      sum2 = intercept2 + (prediction['tx_atabove'] * txatabove_coef) + (prediction['hashpower_accepting'] * hpa_coef);\n    }\n\n    var factor = Math.exp(- 1 * sum1);\n    const prob = 1 / (1 + factor);\n\n    if (prob > .95) {\n      minedProb = 'Very High';\n    } else if (prob > .9 && prob <= .95) {\n      minedProb = 'Medium'\n    } else {\n      minedProb = 'Low';\n    }\n\n    expectedWait = Math.exp(sum2);\n    if (expectedWait < 2) {\n      expectedWait = 2;\n    }\n\n    if (gasoffered > 2000000) {\n      expectedWait += 100;\n    }\n\n    return [expectedWait, prediction['hashpower_accepting'], prediction['tx_atabove'], minedProb];\n  }\n\n  getBlockTime = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/ethgasAPI.json');\n    if (pt){\n      const blockTime = pt.data;\n      this.setState({\n        blockTime\n      });\n      return blockTime;\n    }\n    return null;\n  }\n\n  getPredictionTable = async () => {\n    const pt = await axios.get('https://ethgasstation.info/json/predictTable.json');\n    if (pt){\n      const predictTable = pt.data;\n      this.setState({\n        predictTable\n      });\n      return predictTable;\n    }\n    return null;\n  }\n\n  getTxEstimatedTime = (gasPrice) => {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    if (currentNetwork.provider === 'polygon'){\n      return 30;\n    } else {\n      let prediction = null;\n      if (this.state.predictTable){\n        this.state.predictTable.forEach((p,i) => {\n          if (!prediction && parseFloat(p.gasprice)>=parseFloat(gasPrice)){\n            prediction = p;\n            return true;\n          }\n        });\n      }\n\n      if (this.state.blockTime && prediction){\n        const pdValues = this._estimateWait(prediction,this.state.transaction.gas);\n        const blocksWait = pdValues[0];\n        const blockInterval = this.state.blockTime.block_time;\n        let txMeanSecs = blocksWait * blockInterval;\n        txMeanSecs = parseInt(txMeanSecs.toFixed(0));\n        this.functionsUtil.customLog('getTxEstimatedTime',prediction,this.state.transaction.gas,pdValues,txMeanSecs);\n        return txMeanSecs; // Customized\n      }\n    }\n\n    return null;\n  }\n\n  calculateRemainingTime = async () => {\n    let remainingTime = 0;\n    let estimatedTime = 0;\n\n    if (!this.state.transaction || this.componentUnmounted){\n      return false;\n    }\n\n    if (!this.state.transaction.blockNumber){\n      const gasPrice = parseFloat(this.functionsUtil.BNify(this.state.transaction.gasPrice).div(1e9).toString());\n      remainingTime = this.getTxEstimatedTime(gasPrice);\n    }\n\n    estimatedTime = remainingTime ? remainingTime : 0;\n\n    if (this.state.txTimestamp){\n      const currTimestamp = new Date().getTime();\n      const secondsPassed = parseInt((currTimestamp-parseInt(this.state.txTimestamp))/1000);\n      \n      // Calculate new remaining time\n      remainingTime -= secondsPassed;\n      remainingTime = Math.max(remainingTime,0);\n\n      this.functionsUtil.customLog('Estimated time',estimatedTime,'secondsPassed',secondsPassed,'New remaining time',remainingTime);\n    }\n\n    const timePassed = estimatedTime-remainingTime;\n    const percentage = estimatedTime>0 ? parseFloat(timePassed/estimatedTime) : 1;\n\n    this.setState({\n      estimatedTime,\n      remainingTime,\n      percentage\n    });\n\n    setTimeout(()=>{this.updateProgressBar()},1000);\n  }\n\n  updateProgressBar = () => {\n\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    let remainingTime = this.state.remainingTime;\n    if (remainingTime){\n      remainingTime--;\n      if (!remainingTime){\n        this.setState({\n          percentage:1,\n          ended:true\n        });\n      } else {\n        const timePassed = this.state.estimatedTime-remainingTime;\n        const percentage = parseFloat(timePassed/this.state.estimatedTime);\n        this.setState({\n          percentage,\n          remainingTime\n        });\n        setTimeout(()=>{this.updateProgressBar()},1000);\n      }\n    } else {\n      this.setState({\n        percentage:1,\n        ended:true\n      });\n    }\n  }\n\n  getTxInfo = async () => {\n\n    // Get tx timestamp\n    const txProgressBarKey = `txProgressBarData`;\n    const txHash = this.props.hash.toLowerCase();\n\n    let txProgressBarData = null;\n    let txTimestamp = null;\n    let newState = {};\n\n    if (localStorage){\n      txProgressBarData = localStorage.getItem(txProgressBarKey);\n      if (txProgressBarData){\n        txProgressBarData = JSON.parse(txProgressBarData);\n      }\n    }\n\n    if (!txProgressBarData || !txProgressBarData[txHash]){\n      txTimestamp = new Date().getTime();\n\n      const [predictTable,blockTime] = await Promise.all([\n        this.getPredictionTable(),\n        this.getBlockTime()\n      ]);\n\n      txProgressBarData = {};\n      txProgressBarData[txHash] = {\n        txTimestamp,\n        blockTime,\n        predictTable\n      };\n\n      // Save progress bar status in localStorage\n      this.functionsUtil.setLocalStorage(txProgressBarKey,JSON.stringify(txProgressBarData));\n\n      newState = txProgressBarData[txHash];\n\n      if (!predictTable || !blockTime){\n        newState.error = 'Processing transaction';\n      }\n    }\n\n    this.setState(newState);\n  }\n\n  initProgressBar = async () => {\n\n    if (!this.props.hash || !this.props.web3){\n      return false;\n    }\n\n    const newState = {\n      initialized:true\n    };\n    this.setState(newState);\n\n    // console.log('initProgressBar',this.state.txCount,this.props.hash);\n\n    const transaction = await this.getTransaction();\n\n    if (transaction){\n      await this.getTxInfo();\n      try{\n        this.calculateRemainingTime();\n      } catch (err) {\n        newState.error = 'Processing transaction';\n        // const errStringified = JSON.stringify(err);\n      }\n\n      this.setState(newState);\n    } else {\n      const txCount = this.state.txCount++;\n      if (txCount<5){\n        this.setState({\n          txCount\n        },() => {\n          window.setTimeout(() => {\n            this.initProgressBar();\n          },1000);\n        });\n      }\n    }\n  }\n\n  renderRemainingTime(){\n    // More than 60 seconds\n    if (this.state.remainingTime>60){\n      const minutes = Math.floor(this.state.remainingTime/60);\n      const seconds = this.state.remainingTime-(minutes*60);\n      return ('0'+minutes).substr(-2)+':'+('0'+seconds).substr(-2)+' min';\n    } else {\n      return this.state.remainingTime+'s';\n    }\n  }\n\n  render() {\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    return (\n      <Flex flexDirection={'column'} alignItems={'center'}>\n        {\n          this.state.remainingTime !== null ? (\n            this.state.ended ? (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={this.props.endMessage ? this.props.endMessage : 'Finalizing transaction...'}\n              />\n            ) : (\n              <Flex\n                mb={2}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Text mb={2} color={ this.props.textColor ? this.props.textColor : 'copyColor'}>{ this.props.waitText ? this.props.waitText : 'Remaining time:' } <Text.span color={ this.props.textColor ? this.props.textColor : 'copyColor'} fontWeight={3}>{ this.renderRemainingTime() }</Text.span></Text>\n                <Progress value={ this.state.percentage } />\n              </Flex>\n            )\n          ) : (\n            this.state.error !== null && !this.state.processing ? (\n              <Flex\n                alignItems={'center'}\n                flexDirection={'column'}\n              >\n                <Icon\n                  size={'2em'}\n                  name={'Warning'}\n                  color={'cellText'}\n                />\n                <Text\n                  mt={0}\n                  fontSize={2}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  {this.state.error}\n                </Text>\n              </Flex>\n            ) : (\n              <FlexLoader\n                textProps={{\n                  ml:2,\n                  color:this.props.textColor ? this.props.textColor : 'copyColor'\n                }}\n                loaderProps={{\n                  size:'25px',\n                  ...this.props.loaderProps\n                }}\n                flexProps={{\n                  textAlign:'center',\n                  alignItems:'center',\n                  justifyContent:'center',\n                }}\n                text={ this.state.error ? this.state.error : (this.props.hash ? (this.props.loadingMessage ? this.props.loadingMessage : 'Calculating estimated time...') : (this.props.sendingMessage ? this.props.sendingMessage : 'Sending transaction...') ) }\n              />\n            )\n          )\n        }\n        {\n          this.props.hash ? (\n            <Link\n              mt={0}\n              target={'_blank'}\n              hoverColor={'dark-gray'}\n              rel={\"nofollow noopener noreferrer\"}\n              color={this.props.textColor ? this.props.textColor : 'cellText'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(this.props.hash)}\n            >\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n                justifyContent={'center'}\n              >\n                <Text\n                  fontSize={0}\n                  textAlign={'center'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                >\n                  View in {this.functionsUtil.capitalize(currentNetwork.explorer)}\n                </Text>\n                <Icon\n                  ml={1}\n                  size={'0.75em'}\n                  name={'OpenInNew'}\n                  color={this.props.textColor ? this.props.textColor : 'cellText'}\n                />\n              </Flex>\n            </Link>\n          ) : typeof this.props.cancelTransaction === 'function' ? (\n              <Link\n                mt={0}\n                href={`javascript:void(0)`}\n                onClick={ e => this.props.cancelTransaction() }\n                color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                hoverColor={this.props.cancelTextHoverColor ? this.props.cancelTextHoverColor : 'dark-gray'}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'row'}\n                  justifyContent={'center'}\n                >\n                  <Text\n                    fontSize={0}\n                    textAlign={'center'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  >\n                    Cancel transaction\n                  </Text>\n                  <Icon\n                    ml={1}\n                    size={'0.85em'}\n                    name={'Cancel'}\n                    color={this.props.cancelTextColor ? this.props.cancelTextColor : 'cellText'}\n                  />\n                </Flex>\n              </Link>\n          ) : null\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TxProgressBar;","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from \"polished\";\n\n// theme.js\nexport default {\n  breakpoints: [\"52em\", \"64em\"],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.4\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: [\"0\", \"4px\", \"8px\", \"16px\", \"2rem\"],\n  widths: [0, 16, 32, 64, 128, 256, 550],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, \"1px solid #eee\", \"1px solid #b6c2ff\"],\n  borderWidths: [\"0\", \"1px\", \"2px\", \"4px\"],\n  shadows: [\n    \"0\",\n    \"0px 2px 4px rgba(0, 0, 0, 0.1)\",\n    \"0 7px 14px rgba(50,50,93,.1)\",\n    \"1px 1px 0px rgba(0,0,0,0.2)\",\n    \"0px 0px 16px 2px rgba(0,54,255,0.3)\"\n  ],\n  opacity: {\n    disabled: 0.4\n  },\n  colors: {\n    primary: blue.base,\n    \"gradient-bg\": \"linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)\",\n    \"primary-light\": blue.light[1],\n    \"primary-dark\": blue.dark[1],\n    bgBlue: \"#0030e0\",\n    blue: \"#0036ff\",\n    tick: \"#00b84a\",\n    \"dark-blue\": \"#00219a\",\n    skyBlue: \"#00abfe\",\n    lightBlue: \"#79f4e1\",\n    copyColor: \"#3F3D4B\",\n    subColor: \"#a7a7a7\",\n    black: baseColors.black,\n    'near-black': '#111',\n    'dark-gray': '#4e4e4e',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#f4f4f4',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    NEW COLORS\n    */\n    text: \"#000000\",\n    border: \"#EAEAEA\",\n    connect: \"#0042F5\",\n    newblue: \"#2B65D9\",\n    alert: \"#ff9900\",\n    arrowActive: \"#4f4f4f\",\n    arrowInactive: \"#d8d8d8\",\n    selectBgFocused: \"#fbfbfb\",\n    selectBg: \"#ffffff\",\n    backButtonBg: \"#ffffff\",\n    lineChartStroke: \"#dbdbdb\",\n    wrongNetworkBannerBg: \"#ffffff\",\n    dashboardBg: \"#f9fafd\",\n    statValue: \"#959595\",\n    boxBorder: \"#eeeeee\",\n    cellTitle: \"#a3a4a5\",\n    cellText: \"#8e8d8d\",\n    divider: \"#d8d8d8\",\n    divider2: \"#EBEBEB\",\n    counter: \"#5d5d5d\",\n    redeem: \"#00a9fe\",\n    link: \"#0036ff\",\n    deposit: \"#0239ff\",\n    migrate: \"#00a9fe\",\n    legend: \"#c9c9c9\",\n    menuBg: \"#fff\",\n    menuHover: \"#f3f6ff\",\n    cardBg: \"#fff\",\n    flashColor: \"#3f4e9a\",\n    menuRightBorder: \"#eee\",\n    menuIconActive: '#2a65d9',\n    cardBgContrast: \"#fafafa\",\n    cardHoverShadow: \"0px 0px 0px 1px rgba(0, 54, 255, 0.3)\",\n    cardBgHover: \"#f7f8ff\",\n    cardBorder: \"#eee\",\n    pageActive: \"#4f4f4f\",\n    pageInactive: \"#d8d8d8\",\n    experimental: \"#8500ff\",\n    production: \"#00b84a\",\n    transactions: {\n      action: {\n        send: \"#10a0dd\",\n        swap: \"#3d53c0\",\n        boost: \"#ffff00\",\n        redeem: \"#10a0dd\",\n        swapout: \"#10a0dd\",\n        deposit: \"#3d53c0\",\n        curvein: \"#10a0dd\",\n        receive: \"#3d53c0\",\n        migrate: \"#3d53c0\",\n        default: \"#4f4f4f\",\n        curveout: \"#3d53c0\",\n        withdraw: \"#10a0dd\",\n        curvedepositin: \"#10a0dd\",\n        curvedepositout: \"#3d53c0\"\n      },\n      actionBg: {\n        send: \"#ceeff6\",\n        swap: \"#ced6ff\",\n        boost: \"#ff7979\",\n        redeem: \"#ceeff6\",\n        swapout: \"#ceeff6\",\n        deposit: \"#ced6ff\",\n        curvein: \"#ceeff6\",\n        default: \"#dadada\",\n        receive: \"#ced6ff\",\n        migrate: \"#ced6ff\",\n        withdraw: \"#ceeff6\",\n        curveout: \"#ced6ff\",\n        curvedepositin: \"#ceeff6\",\n        curvedepositout: \"#ced6ff\"\n      },\n      status: {\n        completed: \"#00b84a\",\n        pending: \"#a5a5a5\",\n        failed: \"#fa0000\"\n      }\n    },\n    blacks: [\n      \"rgba(0,0,0,.0125)\",\n      \"rgba(0,0,0,.025)\",\n      \"rgba(0,0,0,.05)\",\n      \"rgba(0,0,0,.1)\",\n      \"rgba(0,0,0,.2)\",\n      \"rgba(0,0,0,.3)\",\n      \"rgba(0,0,0,.4)\",\n      \"rgba(0,0,0,.5)\",\n      \"rgba(0,0,0,.6)\",\n      \"rgba(0,0,0,.7)\",\n      \"rgba(0,0,0,.8)\",\n      \"rgba(0,0,0,.9)\"\n    ],\n    whites: [\n      \"rgba(255,255,255,.0125)\",\n      \"rgba(255,255,255,.025)\",\n      \"rgba(255,255,255,.05)\",\n      \"rgba(255,255,255,.1)\",\n      \"rgba(255,255,255,.2)\",\n      \"rgba(255,255,255,.3)\",\n      \"rgba(255,255,255,.4)\",\n      \"rgba(255,255,255,.5)\",\n      \"rgba(255,255,255,.6)\",\n      \"rgba(255,255,255,.7)\",\n      \"rgba(255,255,255,.8)\",\n      \"rgba(255,255,255,.9)\"\n    ]\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: shade(0.4, \"#AAA\"),\n      backgroundColor: tint(0.9, \"#AAA\"),\n      borderColor: \"#AAA\"\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base\n    },\n    info: {\n      color: shade(0.4, blue.base),\n      backgroundColor: \"#f3f6ff\",\n      borderColor: \"#b6c2ff\"\n    }\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      \"--main-color\": blue.base,\n      \"--contrast-color\": blue.text\n    },\n    normal: {\n      color: baseColors.black,\n      \"--contrast-color\": baseColors.black\n    },\n    success: {\n      \"--main-color\": green.base,\n      \"--contrast-color\": green.text\n    },\n    danger: {\n      \"--main-color\": red.base,\n      \"--contrast-color\": red.text\n    }\n  },\n  buttonSizes: {\n    small: {\n      fontSize: \"0.75rem\",\n      height: \"2rem\",\n      minWidth: \"2rem\",\n      padding: \"0 1rem\"\n    },\n    medium: {\n      fontSize: \"1rem\",\n      height: \"3rem\",\n      minWidth: \"3rem\"\n    },\n    large: {\n      fontSize: \"1.5rem\",\n      height: \"4rem\",\n      minWidth: \"4rem\",\n      borderRadius: \"2rem\"\n    }\n  }\n};\n","/*\nTheming: https://github.com/plouc/nivo/issues/308\n*/\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n\nclass GenericChart extends Component {\n  state = {\n    width:null,\n    height:null\n  };\n\n  componentUnmounted = false;\n\n  componentWillMount() {\n    window.addEventListener('resize', this.handleWindowSizeChange.bind(this));\n  }\n\n  componentWillUnmount() {\n    this.componentUnmounted = true;\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  componentDidMount(){\n    this.handleWindowSizeChange();\n  }\n\n  componentDidUpdate(prevProps){\n    if (prevProps.isMobile !== this.props.isMobile){\n      this.handleWindowSizeChange();\n    }\n  }\n\n  handleWindowSizeChange(){\n    if (this.componentUnmounted){\n      return false;\n    }\n\n    const newState = {...this.state};\n\n    if (this.props.parentId){\n      const chartContainer = document.getElementById(this.props.parentId);\n      if (chartContainer){\n        const chartWidth = parseFloat(chartContainer.offsetWidth)>0 ? chartContainer.offsetWidth : 0;\n\n        if (chartWidth && chartWidth !== newState.width){\n          newState.width = chartWidth;\n        }\n      }\n    }\n\n    if (!newState.width && this.props.width && this.props.width !== newState.width) {\n      newState.width = this.props.width;\n    }\n\n    if (this.props.parentIdHeight){\n      const chartContainerH = document.getElementById(this.props.parentIdHeight);\n      if (chartContainerH){\n        const chartHeight = parseFloat(chartContainerH.offsetWidth)>0 ? chartContainerH.offsetWidth : 0;\n        if (chartHeight && chartHeight !== newState.height){\n          newState.height = chartHeight;\n          if (!newState.width){\n            newState.width = chartHeight;\n          }\n        }\n      }\n    }\n\n    if (!newState.height && this.props.height && this.props.height !== newState.height) {\n      newState.height = this.props.height;\n    }\n\n    newState.height = newState.height || newState.width;\n\n    if (Object.keys(newState).length>0){\n      this.setState(newState);\n    }\n  };\n\n  render() {\n    const ChartType = this.props.type;\n\n    const height = this.state.height && !isNaN(this.state.height) ? parseInt(this.state.height) : 350;\n    const width = this.state.width && !isNaN(this.state.width) ? parseInt(this.state.width) : 0;\n\n    let chartProps = Object.assign({},this.props);\n    chartProps = {\n      ...chartProps,\n      height,\n      width\n    }\n\n    return chartProps.showLoader && (!chartProps.data || !width || !height) ? (\n      <FlexLoader\n        flexProps={{\n          flexDirection:'row',\n          minHeight:height\n        }}\n        loaderProps={ this.props.loaderProps ? this.props.loaderProps : {\n          size:'30px'\n        }}\n        textProps={{\n          ml:2\n        }}\n        text={ this.props.loaderText !== undefined ? this.props.loaderText : 'Loading graph data...'}\n      />\n    ) : this.props.data && (\n      <ChartType\n        {...chartProps}\n      />\n    )\n  }\n}\n\nexport default GenericChart;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tooltip\":\"TableCellHeader_tooltip__3xM3k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bg\":\"ModalCard_bg__3ocwQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"twitterIcon\":\"TwitterShareButton_twitterIcon__2QCmn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"radioBtn\":\"TransactionListFilters_radioBtn__1vgHa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Web3ConnectionButtons_button__1Wov0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gradientButton\":\"Header_gradientButton__2mrQl\",\"empty\":\"Header_empty__3fhiX\",\"select\":\"Header_select__27Xyx\",\"selectDark\":\"Header_selectDark__EHAAP\",\"input\":\"Header_input__3dr8P\"};","import React, { Component } from 'react';\nimport { Flex, Text, Tooltip, Icon } from \"rimble-ui\";\n\nclass TooltipText extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n        {...this.props.flexProps}\n      >\n        <Text\n          fontWeight={3}\n          fontSize={[1,2]}\n          color={'cellText'}\n          {...this.props.textProps}\n        >\n          {this.props.text}\n        </Text>\n        <Tooltip\n          placement={'top'}\n          message={this.props.message}\n          {...this.props.tooltipProps}\n        >\n          <Icon\n            ml={1}\n            style={{\n              cursor:'pointer'\n            }}\n            name={\"Info\"}\n            color={'cellTitle'}\n            size={ this.props.isMobile ? '0.8em' : '1em'}\n            {...this.props.iconProps}\n          />\n        </Tooltip>\n      </Flex>\n    );\n  }\n}\n\nexport default TooltipText;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"Tos_headerContainer__23W_f\",\"headerBgFiller\":\"Tos_headerBgFiller__36Nfk\",\"bgContainer\":\"Tos_bgContainer__rX7uJ\",\"list\":\"Tos_list__3bMLG\",\"textContainer\":\"Tos_textContainer__3hUuq\"};","import theme from '../theme';\nimport React, { Component } from 'react';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ShortHash from \"../utilities/components/ShortHash\";\nimport { Flex, Text, Icon, Link, Image } from \"rimble-ui\";\n\nclass TransactionField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const hashChanged = prevProps.hash !== this.props.hash;\n    const accountChanged = prevProps.account !== this.props.account;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    if (fieldChanged || hashChanged || accountChanged){\n      this.loadField();\n    }\n  }\n\n  async loadField(){\n    const fieldInfo = this.props.fieldInfo;\n    if (this.props.hash && this.props.account){\n      switch (fieldInfo.name){\n        case 'icon':\n        break;\n        case 'hash':\n          \n        break;\n        case 'action':\n          \n        break;\n        case 'date':\n        break;\n        case 'status':\n        break;\n        case 'amount':\n        break;\n        case 'asset':\n        break;\n        case 'custom':\n        break;\n        default:\n        break;\n      }\n    }\n  }\n\n  render(){\n    let icon = null;\n    let color = null;\n    let output = null;\n    let tokenSymbol = null;\n    let tokenConfig = null;\n    const fieldInfo = this.props.fieldInfo;\n    const transaction = this.props.transaction;\n    let bgColor = theme.colors.transactions.actionBg.default;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      style:{\n        maxWidth:'100%',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis'\n      },\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    switch (fieldInfo.name){\n      case 'icon':\n        if (transaction.action){\n          color = theme.colors.transactions.action[transaction.action.toLowerCase()] ? theme.colors.transactions.action[transaction.action.toLowerCase()] : color;\n          bgColor = theme.colors.transactions.actionBg[transaction.action.toLowerCase()] ? theme.colors.transactions.actionBg[transaction.action.toLowerCase()] : bgColor;\n        }\n        switch (transaction.action.toLowerCase()) {\n          case 'deposit':\n          case 'curveout':\n          case 'curvezapout':\n          case 'curvedepositout':\n            icon = \"ArrowDownward\";\n          break;\n          case 'boost':\n            icon = \"TrendingUp\";\n          break;\n          case 'redeem':\n          case 'curvein':\n          case 'curvezapin':\n          case 'curvedepositin':\n            icon = \"ArrowUpward\";\n          break;\n          case 'send':\n            icon = \"Send\";\n          break;\n          case 'receive':\n            icon = \"Redo\";\n          break;\n          case 'migrate':\n            // icon = \"Sync\";\n            icon = \"Repeat\";\n          break;\n          case 'swap':\n            icon = \"SwapHoriz\";\n          break;\n          case 'swapout':\n            icon = \"SwapHoriz\";\n          break;\n          case 'withdraw':\n            icon = \"ArrowUpward\";\n          break;\n          default:\n            icon = \"Refresh\";\n          break;\n        }\n        output = (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            backgroundColor={bgColor}\n            justifyContent={'center'}\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'hash':\n        if (transaction.hash){\n          output = (\n            <Link\n              target={'_blank'}\n              rel={'nofollow noopener noreferrer'}\n              href={this.functionsUtil.getEtherscanTransactionUrl(transaction.hash)}\n            >\n              <ShortHash\n                fontSize={1}\n                color={'white'}\n                {...fieldProps}\n                resolveAddress={false}\n                hash={transaction.hash}\n              />\n            </Link>\n          );\n        }\n      break;\n      case 'action':\n        let action = transaction.action;\n        switch (transaction.action) {\n          case 'Swap':\n            action = \"Swap In\";\n          break;\n          case 'SwapOut':\n            action = \"Swap Out\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Text {...fieldProps}>{action.toUpperCase()}</Text>\n        );\n      break;\n      case 'date':\n        const formattedDate = transaction.momentDate.format('DD MMM, YYYY');\n        output = (\n          <Text {...fieldProps}>{formattedDate}</Text>\n        );\n      break;\n      case 'statusIcon':\n        color = theme.colors.transactions.status[transaction.status.toLowerCase()];\n        switch (transaction.status) {\n          case 'Completed':\n            icon = \"Done\";\n          break;\n          case 'Pending':\n            icon = \"Timelapse\";\n          break;\n          case 'Failed':\n            icon = \"ErrorOutline\";\n          break;\n          default:\n          break;\n        }\n        output = (\n          <Flex\n            p={[0,'1px']}\n            borderRadius={'50%'}\n            {...fieldProps}\n            alignItems={'center'}\n            width={['24px','26px']}\n            height={['24px','26px']}\n            justifyContent={'center'}\n            border={ this.props.isMobile ? `1px solid ${color}` : `2px solid ${color}` }\n          >\n            <Icon\n              name={icon}\n              color={color}\n              align={'center'}\n              size={ this.props.isMobile ? '1em' : '1.2em'}\n            />\n          </Flex>\n        );\n      break;\n      case 'status':\n        output = (\n          <Text {...fieldProps}>{transaction.status}</Text>\n        );\n      break;\n      case 'amount':\n        output = (\n          <SmartNumber {...fieldProps} number={transaction.amount} />\n        );\n      break;\n      case 'tokenIcon':\n      tokenSymbol = transaction.tokenSymbol.toUpperCase();\n      tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        const iconSrc = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${tokenSymbol}.svg`;\n        output = (\n          <Image src={iconSrc} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        tokenSymbol = transaction.tokenSymbol.toUpperCase();\n        tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',tokenSymbol]);\n        output = (\n          <Text {...fieldProps}>{tokenConfig && tokenConfig.label ? tokenConfig.label : tokenSymbol}</Text>\n        );\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.functionsUtil.getArrayPath(fieldInfo.path,this.props.transaction);\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n            customValue = null;\n          break;\n          case 'image':\n            CustomComponent = Image;\n            fieldProps.src = customValue;\n            customValue = null;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n            customValue = null;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : <CustomComponent {...fieldProps} />\n      break;\n      default:\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TransactionField;\n","import FunctionsUtil from './FunctionsUtil';\n\nclass IdleGovToken{\n  // Attributes\n  props = {};\n  tokenName = null;\n  tokenConfig = null;\n  functionsUtil = null;\n\n  // Constructor\n  constructor(props){\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.tokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    this.tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n  }\n\n  getBalance = async () => {\n    let balance = await this.functionsUtil.getTokenBalance(this.tokenName,this.props.account);\n    if (!balance || this.functionsUtil.BNify(balance).isNaN()){\n      balance = this.functionsUtil.BNify(0);\n    }\n    return balance;\n  }\n\n  claimRewards = async (callback,callbackReceipt) => {\n    return this.functionsUtil.contractMethodSendWrapper('EarlyRewards', 'claim', [], callback, callbackReceipt);\n  }\n\n  getPriorVotes = async (account=null) => {\n    account = account ? account : this.props.account;\n    let priorVotes = await this.functionsUtil.genericContractCall(this.tokenName,'getPriorVotes',[account]);\n    if (priorVotes){\n      return this.functionsUtil.BNify(priorVotes);\n    }\n    return null;\n  }\n\n  refreshIdleSpeed = async () => {\n    return this.functionsUtil.genericContractCall('IdleController','refreshIdleSpeeds');\n  }\n\n  getUnclaimedTokens = async () => {\n    /*\n    let rewards =  await this.functionsUtil.genericContractCall('EarlyRewards','rewards',[this.props.account]);\n    if (rewards){\n      return this.functionsUtil.fixTokenDecimals(rewards,this.tokenConfig.decimals);\n    }\n    */\n    return this.functionsUtil.BNify(0);\n  }\n\n  getAPR = async (token,tokenConfig,conversionRate=null) => {\n    const IDLETokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.tokenName]);\n    if (!IDLETokenConfig.enabled){\n      return false;\n    }\n\n    const cachedDataKey = `getIdleAPR_${tokenConfig.idle.token}_${conversionRate}`;\n    /*\n    const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n    */\n\n    let APR = this.functionsUtil.BNify(0);\n\n    const [\n      idleDistribution,\n      tokenAllocation\n    ] = await Promise.all([\n      this.getDistribution(tokenConfig),\n      this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n    ]);\n\n    if (idleDistribution && tokenAllocation){\n\n      const DAITokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens','DAI']);\n        \n      // Get IDLE oconversion rate\n      if (!conversionRate){\n        try {\n          conversionRate = await this.functionsUtil.getUniswapConversionRate(DAITokenConfig,IDLETokenConfig);\n        } catch (error) {\n\n        }\n        if (!conversionRate || conversionRate.isNaN()){\n          conversionRate = this.functionsUtil.BNify(0);\n        }\n      }\n\n      if (!conversionRate || this.functionsUtil.BNify(conversionRate).lte(0)){\n        return this.functionsUtil.BNify(0);\n      }\n\n      const tokenPool = await this.functionsUtil.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent,token,tokenConfig);\n\n      const idleDistributedPerYearUSD = this.functionsUtil.BNify(conversionRate).times(idleDistribution);\n      APR = idleDistributedPerYearUSD.div(tokenPool).times(100);\n\n      // console.log(tokenConfig.idle.token,idleDistributedPerYearUSD.toFixed(5),conversionRate.toFixed(5),tokenPool.toFixed(5),APR.toFixed(5));\n\n      return this.functionsUtil.setCachedData(cachedDataKey,APR);\n    }\n\n    return APR;\n  }\n\n  // Get IDLE distribution speed\n  getSpeed = async (idleTokenAddress) => {\n\n    const cachedDataKey = `getIdleSpeed_${idleTokenAddress}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    let idleSpeeds = await this.functionsUtil.genericContractCall('IdleController','idleSpeeds',[idleTokenAddress]);\n\n    if (idleSpeeds && !this.functionsUtil.BNify(idleSpeeds).isNaN()){\n      idleSpeeds = this.functionsUtil.BNify(idleSpeeds);\n      return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,idleSpeeds,1800);\n    }\n    return null;\n  }\n\n  getDistribution = async (tokenConfig) => {\n\n    const cachedDataKey = `getIdleDistribution_${tokenConfig.idle.token}`;\n    const cachedData = this.functionsUtil.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null && !this.functionsUtil.BNify(cachedData).isNaN()){\n      return this.functionsUtil.BNify(cachedData);\n    }\n\n    // Get IDLE distribution speed and Total Supply\n    const idleSpeeds = await this.getSpeed(tokenConfig.idle.address);\n\n    if (idleSpeeds){\n\n      // Get IDLE distribution for Idle in a Year\n      const blocksPerYear = this.functionsUtil.getGlobalConfig(['network','blocksPerYear']);\n\n      // Take 50% of distrubution for lenders side\n      const distribution = this.functionsUtil.BNify(idleSpeeds).times(this.functionsUtil.BNify(blocksPerYear)).div(1e18);\n\n      if (!this.functionsUtil.BNify(distribution).isNaN()){\n        return this.functionsUtil.setCachedDataWithLocalStorage(cachedDataKey,distribution);\n      }\n    }\n\n    return null;\n  }\n\n  getUserDistribution = async (account=null,availableTokens=null,fixByFrequency=false) => {\n    if (!account){\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens){\n      return false;\n    }\n\n    const currentNetworkId = this.functionsUtil.getRequiredNetworkId();\n\n    let totalSpeed = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n\n      const disabledTokens = this.functionsUtil.getArrayPath(['disabledTokens',currentNetworkId],this.tokenConfig);\n\n      if (disabledTokens.includes(tokenConfig.idle.token)){\n        return;\n      }\n\n      const [\n        idleSpeed,\n        userPoolShare\n      ] = await Promise.all([\n        this.getSpeed(tokenConfig.idle.address),\n        this.functionsUtil.getUserPoolShare(account,tokenConfig)\n      ]);\n\n      if (idleSpeed && userPoolShare){\n        const tokenSpeed = idleSpeed.times(userPoolShare);\n        totalSpeed = totalSpeed.plus(tokenSpeed);\n      }\n    });\n\n    if (fixByFrequency){\n      totalSpeed = this.functionsUtil.fixTokenDecimals(totalSpeed,this.tokenConfig.decimals);\n      totalSpeed = this.functionsUtil.fixDistributionSpeed(totalSpeed,this.tokenConfig.distributionFrequency)\n    }\n\n    return totalSpeed;\n  }\n\n  getAvgApr = async (availableTokens=null) => {\n    if (!availableTokens){\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.functionsUtil.BNify(0);\n    let totalAllocation = this.functionsUtil.BNify(0);\n    await this.functionsUtil.asyncForEach(Object.keys(availableTokens),async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [idleApr,tokenAllocation] = await Promise.all([\n        this.getAPR(token,tokenConfig),\n        this.functionsUtil.getTokenAllocation(tokenConfig,false,false)\n      ]);\n      \n      if (idleApr && tokenAllocation){\n        output = output.plus(idleApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n\n}\n\nexport default IdleGovToken;","import Web3 from \"web3\";\nimport React from \"react\";\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Text } from \"rimble-ui\";\nimport BigNumber from 'bignumber.js';\nimport IdleGovToken from './IdleGovToken';\nimport { toBuffer } from \"ethereumjs-util\";\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport { id as keccak256 } from 'ethers/utils/hash';\nimport globalConfigs from '../configs/globalConfigs';\nimport ENS, { getEnsAddress } from '@ensdomains/ensjs';\nimport availableTokens from '../configs/availableTokens';\nimport IAaveIncentivesController from '../abis/aave/IAaveIncentivesController.json';\n\nconst ethereumjsABI = require('ethereumjs-abi');\n\nwindow.profiler = {};\n\nclass FunctionsUtil {\n\n  // Attributes\n  props = {};\n  idleGovToken = null;\n\n  // Constructor\n  constructor(props) {\n    this.setProps(props);\n  }\n\n  // Methods\n  setProps = props => {\n    this.props = props;\n  }\n  trimEth = eth => {\n    return this.BNify(eth).toFixed(6);\n  }\n  toBN = n => new this.props.web3.utils.BN(n)\n  toEth = wei => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.fromWei(\n      (wei || 0).toString(),\n      \"ether\"\n    );\n  }\n  toWei = eth => {\n    if (!this.props.web3) {\n      return null;\n    }\n    return this.props.web3.utils.toWei(\n      (eth || 0).toString(),\n      \"ether\"\n    );\n  }\n  htmlDecode = input => {\n    var e = document.createElement('textarea');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue;\n  }\n  BNify_obj = s => new BigNumber(s)\n  BNify = s => new BigNumber(typeof s === 'object' ? s : String(s))\n  customLog = (...props) => { if (globalConfigs.logs.messagesEnabled) this.customLog(moment().format('HH:mm:ss'), ...props); }\n  customLogError = (...props) => { if (globalConfigs.logs.errorsEnabled) console.error(moment().format('HH:mm:ss'), ...props); }\n  getContractByName = (contractName, networkId = null) => {\n    networkId = networkId || this.props.network.required.id;\n    let contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    if (this.props.network && this.props.network.required && this.props.network.current && (!this.props.network.isCorrectNetwork || networkId !== this.props.network.current.id) && this.props.contractsNetworks && this.props.contractsNetworks[networkId]) {\n      contract = this.props.contractsNetworks[networkId].find(c => c && c.name && c.name === contractName);\n    } else {\n      contract = this.props.contracts.find(c => c && c.name && c.name === contractName);\n    }\n    if (!contract) {\n      return false;\n    }\n    return contract.contract;\n  }\n  normalizeSimpleIDNotification = (n) => {\n    return n.replace(/<\\/p><p>/g, \"\\n\")\n      .replace(/<p>/g, \"\")\n      .replace(/<br>/g, \"\")\n      .replace(/&nbsp;/g, \" \")\n      .replace(/<\\/p>/g, \"\");\n  }\n  capitalize = (str) => {\n    return str ? str.substr(0, 1).toUpperCase() + str.substr(1) : '';\n  }\n  strToMoment = (date, format = null) => {\n    return moment(date, format);\n  }\n  replaceArrayProps = (arr1, arr2) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        arr1[p] = arr2[p];\n      });\n    }\n\n    return arr1;\n  }\n  replaceArrayPropsRecursive = (arr1, arr2, props = null) => {\n    if (arr2 && Object.keys(arr2).length) {\n      Object.keys(arr2).forEach(p => {\n        if (typeof arr2[p] === 'function') {\n          arr1[p] = arr2[p](props);\n        } else if (typeof arr2[p] === 'object') {\n          arr1[p] = { ...arr1[p], ...this.replaceArrayPropsRecursive(arr1, arr2[p], props) };\n        } else {\n          arr1[p] = arr2[p];\n        }\n      });\n    }\n    return arr1;\n  }\n  stripHtml = (html) => {\n    var tmp = document.createElement(\"DIV\");\n    tmp.innerHTML = html;\n    return tmp.textContent || tmp.innerText || \"\";\n  }\n  // VanillaJS function for smooth scroll\n  scrollTo = (to, duration) => {\n    const start = window.scrollY;\n    const change = to - start;\n    const increment = 20;\n    let currentTime = 0;\n\n    Math.easeInOutQuad = function (t, b, c, d) {\n      t /= d / 2;\n      if (t < 1) return c / 2 * t * t + b;\n      t--;\n      return -c / 2 * (t * (t - 2) - 1) + b;\n    };\n\n    const animateScroll = () => {\n      currentTime += increment;\n      var val = Math.easeInOutQuad(currentTime, start, change, duration);\n      window.scrollTo(0, val);\n      if (currentTime < duration) {\n        window.setTimeout(animateScroll, increment);\n      }\n    };\n\n    animateScroll();\n  }\n  getQueryStringParameterByName = (name, url = window.location.href) => {\n    // eslint-disable-next-line\n    name = name.replace(/[\\[\\]]/g, '\\\\$&');\n    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\n      results = regex.exec(url);\n    if (!results) return null;\n    if (!results[2]) return '';\n    return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n  }\n  getTxAction = (tx, tokenConfig) => {\n\n    if (!tokenConfig.idle) {\n      return null;\n    }\n\n    const idleTokenAddress = tokenConfig.idle.address;\n    const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n    const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n    const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n    const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n    const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n    const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).indexOf(tx.from.toLowerCase()) !== -1) && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase());\n    const isSendTransferTx = !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isReceiveTransferTx = !isMigrationTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n    const isDepositTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && (tx.to.toLowerCase() === idleTokenAddress.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase()));\n    const isRedeemTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && tx.to.toLowerCase() === this.props.account.toLowerCase();\n    const isSwapTx = !isMigrationTx && !isSendTransferTx && !isReceiveTransferTx && !isDepositTx && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase();\n\n    let action = null;\n\n    if (isDepositTx) {\n      action = 'Deposit';\n    } else if (isRedeemTx) {\n      action = 'Redeem';\n    } else if (isMigrationTx) {\n      action = 'Migrate';\n    } else if (isSendTransferTx) {\n      action = 'Send';\n    } else if (isReceiveTransferTx) {\n      action = 'Receive';\n    } else if (isSwapTx) {\n      action = 'Swap';\n    } else if (isSwapTx) {\n      action = 'SwapOut';\n    }\n\n    return action;\n  }\n  shortenHash = (hash, startLen = 7, endLen = 4) => {\n    let shortHash = hash;\n    const txStart = shortHash.substr(0, startLen);\n    const txEnd = shortHash.substr(shortHash.length - endLen);\n    shortHash = txStart + \"...\" + txEnd;\n    return shortHash;\n  }\n\n  switchEthereumChain = (chainId) => {\n    const web3 = this.getInjectedWeb3();\n\n    // console.log('switchEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    const params = [{\n      chainId: web3.utils.toHex(chainId)\n    }];\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_switchEthereumChain',\n    });\n  }\n\n  addEthereumChain = (chainId) => {\n    const web3 = this.getInjectedWeb3();\n\n    // console.log('addEthereumChain',chainId,web3.utils,typeof web3.currentProvider.request);\n\n    if (!web3 || !web3.utils || !web3.currentProvider || typeof web3.currentProvider.request !== 'function') {\n      return false;\n    }\n\n    chainId = parseInt(chainId);\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', chainId]);\n\n    if (!networkConfig) {\n      return false;\n    }\n\n    if (chainId === 1) {\n      return this.switchEthereumChain(chainId);\n    }\n\n    const chainName = networkConfig.chainName || networkConfig.name;\n    const providerConfig = this.getGlobalConfig(['network', 'providers', networkConfig.provider]);\n    const blockExplorerUrl = this.getGlobalConfig(['network', 'providers', networkConfig.explorer, 'baseUrl', chainId]);\n    const rpcUrl = (providerConfig.publicRpc && providerConfig.publicRpc[chainId]) || (providerConfig.rpc[chainId] + providerConfig.key);\n    const params = [{\n      chainName,\n      rpcUrls: [rpcUrl],\n      chainId: web3.utils.toHex(chainId),\n      nativeCurrency: {\n        decimals: 18,\n        name: networkConfig.baseToken,\n        symbol: networkConfig.baseToken\n      },\n      blockExplorerUrls: [blockExplorerUrl]\n    }];\n\n    // console.log('addEthereumChain',params);\n\n    return web3.currentProvider.request({\n      params,\n      method: 'wallet_addEthereumChain',\n    });\n  }\n  getENSName = async (address) => {\n\n    const networkId = this.getRequiredNetworkId();\n    const ensConfig = this.getGlobalConfig(['network', 'providers', 'ens']);\n\n    if (!ensConfig.enabled || !ensConfig.supportedNetworks.includes(networkId)) {\n      return null;\n    }\n\n    if (!this.checkAddress(address) || !this.props.web3) {\n      return null;\n    }\n\n    const cachedDataKey = `getENSName_${address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const TTL = 3600;\n    const provider = this.props.web3.currentProvider;\n    if (networkId === 1) {\n      const ens = new ENS({ provider, ensAddress: getEnsAddress(networkId.toString()) });\n      const ensName = await ens.getName(address);\n      if (ensName && ensName.name) {\n        const addressCheck = await ens.name(ensName.name).getAddress();\n        if (addressCheck && address.toLowerCase() === addressCheck.toLowerCase()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, ensName.name, TTL);\n        }\n      }\n    }\n\n    return null;\n  }\n  getAccountPortfolioTranches = async (availableTranches = null, account = null) => {\n    const portfolio = {\n      transactions: [],\n      stakingRewards: {},\n      tranchesBalance: [],\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n    };\n\n    availableTranches = availableTranches ? availableTranches : this.props.availableTranches;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTranches) {\n      return portfolio;\n    }\n\n    const tranches = this.getGlobalConfig(['tranches']);\n\n    // Load user transactions first\n    const userTransactions = await this.getEtherscanUserTrancheTxs(account);\n\n    await this.asyncForEach(Object.keys(availableTranches), async (protocol) => {\n      const protocolConfig = availableTranches[protocol];\n\n      await this.asyncForEach(Object.keys(protocolConfig), async (token) => {\n        const tokenConfig = protocolConfig[token];\n\n        await this.asyncForEach(Object.keys(tranches), async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          \n          let gaugeConfig = this.getGlobalConfig(['tools','gauges','props','availableGauges',token]);\n          if (gaugeConfig && gaugeConfig.trancheToken && gaugeConfig.trancheToken.token.toLowerCase() !== trancheConfig.token.toLowerCase()){\n            gaugeConfig = null;\n          }\n\n          let [\n            trancheTokenBalance,\n            trancheUserInfo,\n            gaugeStakedBalance,\n            stakingRewards,\n            trancheStakedBalance,\n          ] = await Promise.all([\n            this.getContractBalance(trancheConfig.name,account),\n            this.getTrancheUserInfo(tokenConfig, trancheConfig, account, userTransactions),\n            gaugeConfig ? this.getContractBalance(gaugeConfig.name, account) : this.BNify(0),\n            this.getTrancheStakingRewards(account,trancheConfig,trancheConfig.functions.rewards),\n            this.getTrancheStakedBalance(trancheConfig.CDORewards.name,account,null,trancheConfig.functions.stakedBalance),\n          ]);\n\n          if (trancheUserInfo && trancheUserInfo.transactions){\n            portfolio.transactions = [...portfolio.transactions, ...trancheUserInfo.transactions];\n          }\n\n          // Get staking rewards amounts\n          Object.keys(stakingRewards).forEach( rewardToken => {\n            if (!portfolio.stakingRewards[rewardToken]){\n              portfolio.stakingRewards[rewardToken] = {\n                tokenAmount:this.BNify(0),\n                conversionRate:this.BNify(0),\n                tokenAmountConverted:this.BNify(0)\n              }\n            }\n            const tokenAmount = !this.BNify(stakingRewards[rewardToken]).isNaN() ? this.BNify(stakingRewards[rewardToken]) : this.BNify(0);\n            portfolio.stakingRewards[rewardToken].tokenAmount = portfolio.stakingRewards[rewardToken].tokenAmount.plus(tokenAmount);\n          });\n\n          // console.log('trancheTokenBalance',trancheTokenBalance.toString(),'trancheStakedBalance',trancheStakedBalance.toString());\n\n          if ((trancheTokenBalance && this.BNify(trancheTokenBalance).gt(0)) || (trancheStakedBalance && this.BNify(trancheStakedBalance).gt(0)) || (gaugeStakedBalance && this.BNify(gaugeStakedBalance).gt(0))) {\n            gaugeStakedBalance = this.fixTokenDecimals(gaugeStakedBalance,trancheConfig.decimals);\n            trancheTokenBalance = this.fixTokenDecimals(trancheTokenBalance,trancheConfig.decimals);\n            trancheStakedBalance = this.fixTokenDecimals(trancheStakedBalance,trancheConfig.decimals).plus(gaugeStakedBalance);\n            trancheTokenBalance = trancheTokenBalance.plus(trancheStakedBalance);\n\n            // console.log(protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(5));\n\n            if (this.BNify(trancheTokenBalance).gt(0)) {\n              const [\n                tranchePrice,\n                tranchePool\n              ] = await Promise.all([\n                this.loadTrancheFieldRaw('tranchePrice', {}, protocol, token, tranche, tokenConfig, trancheConfig, account),\n                this.loadTrancheFieldRaw('tranchePoolConverted', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n              ]);\n\n              if (!this.BNify(tranchePrice).isNaN() && !this.BNify(tranchePool).isNaN()) {\n                const tokenBalance = trancheTokenBalance.times(tranchePrice);\n                const [\n                  tokenBalanceConverted,\n                  trancheEarnings,\n                  trancheApy\n                ] = await Promise.all([\n                  this.convertTrancheTokenBalance(tokenBalance,tokenConfig),\n                  this.convertTrancheTokenBalance(tokenBalance.minus(trancheUserInfo.amountDeposited),tokenConfig),\n                  this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, account)\n                ])\n\n                const poolShare = tokenBalanceConverted.div(tranchePool);\n                const amountDeposited = trancheUserInfo.amountDepositedConverted;\n\n                // console.log(protocol,token,tranche,'trancheTokenBalance',trancheTokenBalance.toFixed(5),'trancheStakedBalance',trancheStakedBalance.toFixed(5),'tranchePrice',tranchePrice.toFixed(5),'tokenBalance',tokenBalance.toFixed(5),'amountDeposited',trancheUserInfo.amountDeposited.toFixed(5),'tokenBalanceConverted',tokenBalanceConverted.toFixed(5),'amountDepositedConverted',amountDeposited.toFixed(5),'trancheEarnings',trancheEarnings.toFixed(5));\n\n                portfolio.tranchesBalance.push({\n                  token,\n                  tranche,\n                  protocol,\n                  poolShare,\n                  trancheApy,\n                  tranchePrice,\n                  trancheEarnings,\n                  amountDeposited,\n                  trancheTokenBalance,\n                  trancheStakedBalance,\n                  tokenBalance:tokenBalanceConverted\n                });\n\n                // console.log(protocol,token,tranche,amountDeposited.toFixed(),tokenBalance.toFixed(),trancheEarnings.toFixed());\n\n                // Increment total balance\n                portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalanceConverted);\n              }\n            }\n          }\n        });\n      });\n    });\n\n    let avgAPY = this.BNify(0);\n    let totalBalance = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n\n    // Calculate aggregated data\n    portfolio.tranchesBalance.forEach(trancheInfo => {\n      const trancheApy = this.BNify(trancheInfo.trancheApy);\n      const trancheWeight = trancheInfo.tokenBalance.div(portfolio.totalBalance);\n\n      // Add tranche weight\n      trancheInfo.trancheWeight = trancheWeight;\n\n      if (trancheInfo.trancheEarnings) {\n        totalEarnings = totalEarnings.plus(trancheInfo.trancheEarnings);\n      }\n\n      if (trancheApy) {\n        avgAPY = avgAPY.plus(trancheApy.times(trancheWeight));\n      }\n\n      if (trancheInfo.amountDeposited) {\n        totalAmountLent = totalAmountLent.plus(trancheInfo.amountDeposited);\n        // console.log(trancheInfo.protocol,trancheInfo.token,trancheInfo.tranche,trancheInfo.amountDeposited.toFixed(5),totalAmountLent.toFixed(5));\n      }\n\n      if (trancheInfo.tokenBalance){\n        totalBalance = totalBalance.plus(trancheInfo.tokenBalance);\n      }\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    // Get staking rewards conversion rates\n    await this.asyncForEach(Object.keys(portfolio.stakingRewards), async (rewardToken) => {\n      const rewardTokenConfig = this.getGlobalConfig(['govTokens',rewardToken]);\n      if (rewardTokenConfig.showBalance && portfolio.stakingRewards[rewardToken].tokenAmount.gt(0)){\n        const rewardTokenConversionRate = await this.getTokenConversionRateUniswap(rewardTokenConfig);\n        portfolio.stakingRewards[rewardToken].conversionRate = rewardTokenConversionRate;\n        portfolio.stakingRewards[rewardToken].tokenAmountConverted = portfolio.stakingRewards[rewardToken].tokenAmount.times(rewardTokenConversionRate);\n\n        // console.log(rewardToken,portfolio.stakingRewards[rewardToken].tokenAmountConverted.toFixed(5));\n\n        totalBalance = totalBalance.plus(portfolio.stakingRewards[rewardToken].tokenAmountConverted);\n      }\n    });\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalBalance = totalBalance;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n\n    // console.log('portfolio',portfolio);\n\n    return portfolio;\n  }\n  getAccountPortfolio = async (availableTokens = null, account = null) => {\n    const portfolio = {\n      tokensBalance: {},\n      tokensToMigrate: {},\n      avgAPY: this.BNify(0),\n      totalBalance: this.BNify(0),\n      totalEarnings: this.BNify(0),\n      totalAmountLent: this.BNify(0),\n      totalEarningsPerc: this.BNify(0),\n      totalBalanceConverted: this.BNify(0)\n    };\n\n    availableTokens = availableTokens ? availableTokens : this.props.availableTokens;\n    account = account ? account : this.props.account;\n\n    if (!account || !availableTokens) {\n      return portfolio;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        },\n        idleTokenBalance\n      ] = await Promise.all([\n        this.checkMigration(tokenConfig, this.props.account),\n        this.getTokenBalance(tokenConfig.idle.token, account)\n      ]);\n\n      if (migrationEnabled) {\n        const tokenKey = this.props.selectedStrategy ? token : tokenConfig.idle.token;\n        portfolio.tokensToMigrate[tokenKey] = {\n          token,\n          tokenConfig,\n          oldContractBalanceFormatted,\n          strategy: this.props.selectedStrategy\n        };\n      }\n\n      if (idleTokenBalance) {\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = idleTokenBalance.times(tokenPrice);\n        const tokenBalanceConverted = await this.convertTokenBalance(tokenBalance, token, tokenConfig, isRisk);\n\n        if (!tokenPrice.isNaN() && !tokenBalance.isNaN()) {\n          portfolio.tokensBalance[token] = {\n            tokenPrice,\n            tokenBalance,\n            idleTokenBalance,\n            tokenBalanceConverted\n          };\n\n          // Increment total balance\n          portfolio.totalBalance = portfolio.totalBalance.plus(tokenBalance);\n          portfolio.totalBalanceConverted = portfolio.totalBalanceConverted.plus(tokenBalanceConverted);\n        }\n      }\n    });\n\n    const orderedTokensBalance = {};\n    Object.keys(availableTokens).forEach(token => {\n      if (portfolio.tokensBalance[token]) {\n        orderedTokensBalance[token] = portfolio.tokensBalance[token];\n      }\n    });\n\n    portfolio.tokensBalance = orderedTokensBalance;\n\n    const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => (this.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0)));\n\n    let avgAPY = this.BNify(0);\n    let totalEarnings = this.BNify(0);\n    let totalAmountLent = this.BNify(0);\n    let totalEarningsPerc = this.BNify(0);\n    // const amountLents = await this.getAmountLent(depositedTokens,this.props.account);\n\n    await this.asyncForEach(depositedTokens, async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [\n        tokenAprs,\n        amountDeposited\n      ] = await Promise.all([\n        this.getTokenAprs(tokenConfig),\n        this.getAmountDeposited(tokenConfig, account)\n      ]);\n\n      const tokenBalanceConverted = portfolio.tokensBalance[token].tokenBalanceConverted;\n\n      const tokenAPY = this.BNify(tokenAprs.avgApy);\n      const tokenWeight = tokenBalanceConverted.div(portfolio.totalBalanceConverted);\n      const amountLentToken = await this.convertTokenBalance(amountDeposited, token, tokenConfig, isRisk);\n      const tokenEarnings = tokenBalanceConverted.minus(amountLentToken);\n\n      if (tokenEarnings) {\n        totalEarnings = totalEarnings.plus(tokenEarnings);\n      }\n\n      if (tokenAPY) {\n        avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n      }\n\n      if (amountLentToken) {\n        totalAmountLent = totalAmountLent.plus(amountLentToken);\n      }\n\n      // console.log(token,amountLentToken.toFixed(),tokenEarnings.toFixed(),tokenBalanceConverted.toFixed());\n    });\n\n    if (totalAmountLent.gt(0)) {\n      totalEarningsPerc = totalEarnings.div(totalAmountLent).times(100);\n    }\n\n    portfolio.avgAPY = avgAPY;\n    portfolio.totalEarnings = totalEarnings;\n    portfolio.totalAmountLent = totalAmountLent;\n    portfolio.totalEarningsPerc = totalEarningsPerc;\n    portfolio.totalBalance = totalAmountLent.plus(totalEarnings);\n\n    // debugger;\n\n    return portfolio;\n  }\n  getInjectedWeb3 = () => {\n    let currentWeb3 = null;\n    if (window.ethereum) {\n      currentWeb3 = new Web3(window.ethereum);\n    } else if (window.web3) {\n      currentWeb3 = new Web3(window.web3);\n    }\n\n    return currentWeb3;\n  }\n  getCurrentWeb3 = () => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const networkConfig = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork.id]);\n    const provider = networkConfig ? networkConfig.provider : 'infura';\n    const web3RpcKey = this.getGlobalConfig(['network', 'providers', provider, 'key']);\n    const web3Rpc = this.getGlobalConfig(['network', 'providers', provider, 'rpc', requiredNetwork.id]) + web3RpcKey;\n\n    let currentWeb3 = this.props.web3;\n    \n    if (!currentWeb3){\n      if (window.ethereum) {\n        currentWeb3 = new Web3(window.ethereum);\n      } else if (window.web3) {\n        currentWeb3 = new Web3(window.web3);\n      } else {\n        currentWeb3 = new Web3(new Web3.providers.HttpProvider(web3Rpc));\n      }\n    }\n\n    return currentWeb3;\n  }\n  getCurveAvgSlippage = async (enabledTokens = [], account = null, fixDecimals = true) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    let processedTxs = {};\n    const processedHashes = {};\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const tokenAmount = this.BNify(tx.tokenAmount);\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n\n            if (!processedTxs[tx.hash]) {\n              processedTxs[tx.hash] = {\n                price: null,\n                received: null,\n                slippage: null,\n                deposited: this.BNify(0),\n              };\n            }\n\n            processedTxs[tx.hash].deposited = processedTxs[tx.hash].deposited.plus(tokenAmount);\n            if (processedTxs[tx.hash].received === null) {\n              processedTxs[tx.hash].price = curveTokenPrice;\n              processedTxs[tx.hash].received = curveTokens.times(curveTokenPrice);\n            }\n\n            // this.customLog('getCurveAvgSlippage',tx.action,tx.hash,tx.blockNumber,curveTokens.toFixed(6),curveTokenPrice.toFixed(6),processedTxs[tx.hash].deposited.toFixed(6),processedTxs[tx.hash].received.toFixed(6));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        if (!processedHashes[tx.hash]) {\n          curveTokensBalance = curveTokensBalance.plus(curveTokens);\n          if (curveTokensBalance.lte(0)) {\n            curveTokensBalance = this.BNify(0);\n\n            // Reset processed transactions\n            // processedTxs = {};\n          }\n          processedHashes[tx.hash] = true;\n        }\n      });\n    }\n\n    // this.customLog('processedTxs',processedTxs);\n\n    let avgSlippage = this.BNify(0);\n    let totalDeposited = this.BNify(0);\n    Object.values(processedTxs).forEach(tx => {\n      const slippage = tx.received.div(tx.deposited).minus(1);\n      avgSlippage = avgSlippage.plus(slippage.times(tx.deposited));\n      totalDeposited = totalDeposited.plus(tx.deposited);\n    });\n\n    avgSlippage = avgSlippage.div(totalDeposited).times(-1);\n\n    // debugger;\n    // this.customLog('avgSlippage',avgSlippage.toString());\n\n    return avgSlippage;\n  }\n  getCurveAvgBuyPrice = async (enabledTokens = [], account = null) => {\n    account = account ? account : this.props.account;\n\n    if (!account) {\n      return [];\n    }\n\n    const availableTokens = this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const processedTxs = {};\n    let avgBuyPrice = this.BNify(0);\n    let curveTokensBalance = this.BNify(0);\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    // this.customLog('curveTxs',curveTxs);\n\n    if (curveTxs && curveTxs.length) {\n\n      curveTxs.forEach((tx, index) => {\n\n        if (!processedTxs[tx.hash]) {\n          processedTxs[tx.hash] = [];\n        }\n\n        if (processedTxs[tx.hash].includes(tx.action)) {\n          return;\n        }\n\n        // Skip transactions with no hash\n        if (!tx.hash || !tx.curveTokens || !tx.curveTokenPrice) {\n          return false;\n        }\n\n        const prevAvgBuyPrice = avgBuyPrice;\n        let curveTokens = this.BNify(tx.curveTokens);\n        const curveTokenPrice = this.BNify(tx.curveTokenPrice);\n\n        // Deposited\n        switch (tx.action) {\n          case 'CurveIn':\n          case 'CurveZapIn':\n          case 'CurveDepositIn':\n          case 'CurveTransferIn':\n            if (tx.action === 'CurveTransferIn') {\n              if (index > 0 && curveTokensBalance.gt(0)) {\n                return;\n              }\n            }\n            avgBuyPrice = curveTokens.times(curveTokenPrice).plus(prevAvgBuyPrice.times(curveTokensBalance)).div(curveTokensBalance.plus(curveTokens));\n            break;\n          case 'CurveOut':\n          case 'CurveZapOut':\n          case 'CurveDepositOut':\n            // case 'CurveTransferOut':\n            curveTokens = curveTokens.times(this.BNify(-1));\n            break;\n          default:\n            break;\n        }\n\n        // Update curveTokens balance\n        curveTokensBalance = curveTokensBalance.plus(curveTokens);\n        if (curveTokensBalance.lte(0)) {\n          avgBuyPrice = this.BNify(0);\n          curveTokensBalance = this.BNify(0);\n        }\n\n        processedTxs[tx.hash].push(tx.action);\n\n        // this.customLog('getCurveAvgBuyPrice',tx.action,tx.hash,tx.blockNumber,curveTokens.toString(),curveTokenPrice.toString(),curveTokensBalance.toString(),avgBuyPrice.toString());\n      });\n    }\n\n    // this.customLog('avgCurveBuyPrice',avgBuyPrice.toString());\n\n    return avgBuyPrice;\n  }\n  getAvgBuyPrice = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const output = {};\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    enabledTokens.forEach(selectedToken => {\n\n      output[selectedToken] = [];\n      let avgBuyPrice = this.BNify(0);\n\n      let idleTokensBalance = this.BNify(0);\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.idleTokens || !tx.tokenPrice) {\n            return false;\n          }\n\n          const prevAvgBuyPrice = avgBuyPrice;\n          let idleTokens = this.BNify(tx.idleTokens);\n          const tokenPrice = this.BNify(tx.tokenPrice);\n\n          // Deposited\n          switch (tx.action) {\n            case 'Deposit':\n            case 'Receive':\n            case 'Swap':\n            case 'Migrate':\n            case 'CurveOut':\n              avgBuyPrice = idleTokens.times(tokenPrice).plus(prevAvgBuyPrice.times(idleTokensBalance)).div(idleTokensBalance.plus(idleTokens));\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              idleTokens = idleTokens.times(this.BNify(-1));\n              break;\n            default:\n              break;\n          }\n\n          // Update idleTokens balance\n          idleTokensBalance = idleTokensBalance.plus(idleTokens);\n          if (idleTokensBalance.lte(0)) {\n            avgBuyPrice = this.BNify(0);\n            idleTokensBalance = this.BNify(0);\n          }\n\n        });\n      }\n\n      // Add token Data\n      output[selectedToken] = avgBuyPrice;\n    });\n\n    return output;\n  }\n  getFirstDepositTx = async (enabledTokens = [], account) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens);\n\n    const deposits = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      let firstDepositTx = null;\n      deposits[selectedToken] = firstDepositTx;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              if (!firstDepositTx) {\n                firstDepositTx = tx;\n              }\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n            firstDepositTx = null;\n          }\n        });\n      }\n\n      // Add token Data\n      deposits[selectedToken] = firstDepositTx;\n    });\n\n    return deposits;\n  }\n  getDashboardSectionUrl = (section, env = null) => {\n    const envUrl = this.getGlobalConfig(['environments', env, 'url']);\n    const baseUrl = env && envUrl ? envUrl : window.location.origin;\n    return `${baseUrl}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/${section}`;\n  }\n  asyncTimeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n  getDepositTimestamp = async (enabledTokens = [], account) => {\n    const firstDepositTxs = await this.getFirstDepositTx(enabledTokens, account);\n    if (firstDepositTxs) {\n      return Object.keys(firstDepositTxs).reduce((acc, token) => {\n        if (firstDepositTxs[token]) {\n          acc[token] = firstDepositTxs[token].timeStamp;\n        }\n        return acc;\n      }, {});\n    }\n    return null;\n  }\n\n  getTrancheUserTransactionsEvents = async (account, tokenConfig, trancheConfig) => {\n    const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n    const underlyingEventsConfig = this.getGlobalConfig(['events', tokenConfig.token, 'fields']) || defaultEventsConfig;\n\n    const underlyingEventsFilters_deposits = {};\n    underlyingEventsFilters_deposits[underlyingEventsConfig.to] = [tokenConfig.CDO.address];\n    underlyingEventsFilters_deposits[underlyingEventsConfig.from] = [this.props.account];\n\n    const underlyingEventsFilters_redeems = {};\n    underlyingEventsFilters_redeems[underlyingEventsConfig.to] = [this.props.account];\n    underlyingEventsFilters_redeems[underlyingEventsConfig.from] = [tokenConfig.CDO.address];\n\n    let [\n      underlying_redeems,\n      underlying_deposits,\n      trancheToken_redeems,\n      trancheToken_deposits\n    ] = await Promise.all([\n      this.getContractEvents(tokenConfig.token, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: underlyingEventsFilters_redeems }),\n      this.getContractEvents(tokenConfig.token, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: underlyingEventsFilters_deposits }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: { from: [this.props.account], to: ['0x0000000000000000000000000000000000000000'] } }),\n      this.getContractEvents(trancheConfig.name, 'Transfer', trancheConfig.blockNumber, 'latest', { filter: { from: ['0x0000000000000000000000000000000000000000'], to: [this.props.account] } })\n    ]);\n\n    if (underlying_redeems){\n      underlying_redeems.forEach( tx => {\n        tx.type = 'underlyingRedeem';\n        tx.contractAddress = tokenConfig.address.toLowerCase();\n      });\n    } else {\n      underlying_redeems = [];\n    }\n\n    if (underlying_deposits){\n      underlying_deposits.forEach( tx => {\n        tx.type = 'underlyingDeposit';\n        tx.contractAddress = tokenConfig.address.toLowerCase();\n      });\n    } else {\n      underlying_deposits = [];\n    }\n\n    if (trancheToken_deposits){\n      trancheToken_deposits.forEach( tx => {\n        tx.type = 'trancheDeposit';\n        tx.contractAddress = trancheConfig.address.toLowerCase();\n      });\n    } else {\n      trancheToken_deposits = [];\n    }\n\n    if (trancheToken_redeems){\n      trancheToken_redeems.forEach( tx => {\n        tx.type = 'trancheRedeem';\n        tx.contractAddress = trancheConfig.address.toLowerCase();\n      });\n    } else {\n      trancheToken_redeems = [];\n    }\n\n    return underlying_redeems.concat(underlying_deposits).concat(trancheToken_deposits).concat(trancheToken_redeems);\n  }\n\n  getEtherscanUserTrancheTxs = async (account,tokenConfig_filter=null,trancheConfig_filter=null) => {\n\n    account = account || this.props.account;\n    if (!account){\n      return false;\n    }\n\n    const requiredNetworkId = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[requiredNetworkId];\n\n    const tokenConfigs = [];\n    let firstTrancheBlock = null;\n\n    Object.keys(this.props.availableTranches).forEach( protocol => {\n      Object.keys(this.props.availableTranches[protocol]).forEach( token => {\n        const tokenConfig = this.props.availableTranches[protocol][token];\n        if (!tokenConfig_filter){\n          tokenConfigs.push(tokenConfig);\n        }\n        firstTrancheBlock = firstTrancheBlock ? Math.min(firstTrancheBlock,tokenConfig.blockNumber) : tokenConfig.blockNumber;\n      });\n    });\n\n    if (tokenConfig_filter){\n      tokenConfigs.push(tokenConfig_filter);\n    }\n\n    const tranchesConfig = trancheConfig_filter ? [trancheConfig_filter.tranche] : this.getGlobalConfig(['tranches']);\n\n    // console.log('getEtherscanUserTrancheTxs','firstTrancheBlock',firstTrancheBlock,tokenConfig_filter,trancheConfig_filter);\n\n    const endpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${account}&startblock=${firstTrancheBlock}&endblock=latest&sort=asc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(endpoint, etherscanInfo.keys);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n      return etherscanTxlist.data.result.filter(tx => {\n        return tokenConfigs.some( tokenConfig => {\n          const trancheTokenAddresses = Object.keys(tranchesConfig).map( trancheType => (tokenConfig[trancheType].address.toLowerCase()) );\n\n          const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n          const underlyingEventsConfig = this.getGlobalConfig(['events', tokenConfig.token, 'fields']) || defaultEventsConfig;\n          \n          const isUnderlyingDeposit = tx.from.toLowerCase() === account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === tokenConfig.CDO.address.toLowerCase();\n          const isUnderlyingRedeem = tx.from.toLowerCase() === tokenConfig.CDO.address.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === account.toLowerCase();\n          const isTrancheDeposit = tx.from.toLowerCase() === '0x0000000000000000000000000000000000000000' && trancheTokenAddresses.includes(tx.contractAddress.toLowerCase()) && tx.to.toLowerCase() === account.toLowerCase();\n          const isTrancheRedeem = tx.from.toLowerCase() === account.toLowerCase() && trancheTokenAddresses.includes(tx.contractAddress.toLowerCase()) && tx.to.toLowerCase() === '0x0000000000000000000000000000000000000000';\n\n          let type = null;\n          if (isUnderlyingDeposit){\n            type = 'underlyingDeposit';\n          } else if (isUnderlyingRedeem){\n            type = 'underlyingRedeem';\n          } else if (isTrancheDeposit){\n            type = 'trancheDeposit';\n          } else if (isTrancheRedeem){\n            type = 'trancheRedeem';\n          }\n\n          tx.type = type;\n          tx.returnValues = {};\n          tx.returnValues.to = tx.to;\n          tx.transactionHash = tx.hash;\n          tx.returnValues.from = tx.from;\n          tx.returnValues.value = tx.value;\n          tx.returnValues[underlyingEventsConfig.to] = tx.to;\n          tx.returnValues[underlyingEventsConfig.from] = tx.from;\n          tx.returnValues[underlyingEventsConfig.value] = tx.value;\n\n          return isUnderlyingDeposit || isUnderlyingRedeem || isTrancheDeposit || isTrancheRedeem;\n        });\n      });\n    }\n\n    return null;\n  }\n\n  getEtherscanTokenTransfers = async (tokenName,walletAddr,fromAddress,contractAddress,toAddress,fromBlock=0,toBlock='latest') => {\n    const requiredNetworkId = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[requiredNetworkId];\n    const endpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${walletAddr}&contractaddress=${contractAddress}&startblock=${fromBlock}&endblock=${toBlock}&sort=asc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(endpoint, etherscanInfo.keys, 0);\n\n    const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n    const underlyingEventsConfig = this.getGlobalConfig(['events', tokenName, 'fields']) || defaultEventsConfig;\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n\n      const transferEvents = etherscanTxlist.data.result.filter(tx => (tx.from.toLowerCase() === fromAddress.toLowerCase() && tx.to.toLowerCase() === toAddress.toLowerCase()));\n      \n      transferEvents.forEach( tx => {\n        tx.returnValues = {};\n        tx.returnValues.to = tx.to;\n        tx.transactionHash = tx.hash;\n        tx.returnValues.from = tx.from;\n        tx.returnValues.value = tx.value;\n        tx.returnValues[underlyingEventsConfig.to] = tx.to;\n        tx.returnValues[underlyingEventsConfig.from] = tx.from;\n        tx.returnValues[underlyingEventsConfig.value] = tx.value;\n      });\n\n      return transferEvents;\n    }\n\n    const eventFilters = {\n      from: fromAddress,\n      to: toAddress\n    }\n    return await this.getContractEvents(tokenName, 'Transfer', fromBlock, toBlock, { filter: eventFilters });\n  }\n\n  getTrancheStakingRewardsDistributions = async (tokenConfig,trancheConfig) => {\n    const stakingDistributions = {};\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig);\n    await this.asyncForEach(Object.keys(stakingRewards),async (token) => {\n      const eventFilters = {\n        from: tokenConfig.CDO.address,\n        to: trancheConfig.CDORewards.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer',tokenConfig.blockNumber,'latest', {filter: eventFilters });\n\n      if (transfers && transfers.length>0){\n        stakingDistributions[token] = transfers;\n      }\n    });\n\n    return stakingDistributions;\n  }\n  getTrancheHarvests = async (tokenConfig,trancheConfig) => {\n    const [\n      stakingRewardsDistributions,\n      autoFarming\n    ] = await Promise.all([\n      this.getTrancheStakingRewardsDistributions(tokenConfig,trancheConfig),\n      this.loadTrancheFieldRaw('autoFarming',{},tokenConfig.protocol,tokenConfig.token,trancheConfig.tranche,tokenConfig,trancheConfig)\n    ])\n\n    const harvestsList = stakingRewardsDistributions || {};\n    \n    await this.asyncForEach(Object.keys(autoFarming),async (token) => {\n      const eventFilters = {\n        to: tokenConfig.CDO.address\n      }\n      const transfers = await this.getContractEvents(token, 'Transfer',tokenConfig.blockNumber,'latest', {filter: eventFilters });\n\n      if (transfers && transfers.length > 0) {\n        harvestsList[token] = transfers;\n      }\n    });\n\n    return harvestsList;\n  }\n  getTrancheLastHarvest = async (tokenConfig) => {\n    const strategyConfig = tokenConfig.Strategy;\n    \n    // Create Tranche Strategy contract\n    const idleStrategyAddress = await this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'strategy', 3600);\n    if (idleStrategyAddress) {\n      await this.props.initContract(strategyConfig.name, idleStrategyAddress, strategyConfig.abi);\n      const latestHarvestBlock = await this.genericContractCall(strategyConfig.name,'latestHarvestBlock');\n      // console.log('getTrancheLastHarvest',tokenConfig.CDO.name,latestHarvestBlock);\n      if (parseInt(latestHarvestBlock)>0){\n        const eventFilters = {\n          to: idleStrategyAddress\n        };\n        const [\n          blockInfo,\n          transfers,\n        ] = await Promise.all([\n          this.getBlockInfo(latestHarvestBlock),\n          this.getContractEvents(tokenConfig.token, 'Transfer', parseInt(latestHarvestBlock), parseInt(latestHarvestBlock)+1, {filter: eventFilters })\n        ]);\n\n        console.log('getTrancheLastHarvest',tokenConfig.token,parseInt(latestHarvestBlock), parseInt(latestHarvestBlock)+1,eventFilters,transfers);\n\n        if (transfers && transfers.length) {\n          const totalAmount = transfers.reduce( (amount,t) => {\n            amount = amount.plus(this.BNify(t.returnValues.value));\n            return amount;\n          },this.BNify(0));\n\n          return {\n            amount:totalAmount,\n            timestamp:blockInfo.timestamp,\n            blockNumber:latestHarvestBlock,\n            transactionHash:transfers[0].transactionHash\n          };\n        }\n      }\n    }\n\n    return null;\n  }\n  getGovTokenApr = async (govToken, poolTokenConfig, poolSupply, tokensPerSecond) => {\n    const govTokenConfig = this.getTokenConfig(govToken);\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n\n    let conversionRate = this.BNify(1);\n\n    [\n      conversionRate,\n      poolSupply\n    ] = await Promise.all([\n      this.getUniswapConversionRate(DAITokenConfig, govTokenConfig),\n      this.convertTokenBalance(poolSupply,poolTokenConfig.token,poolTokenConfig)\n    ]);\n\n    const tokensPerYear = this.BNify(tokensPerSecond).times(this.getGlobalConfig(['network', 'secondsPerYear']));\n    const convertedTokensPerYear = tokensPerYear.times(conversionRate);\n    const tokenApr = convertedTokensPerYear.div(poolSupply).times(100);\n    const tokenApy = this.apr2apy(tokenApr.div(100)).times(100);\n    \n    return {\n      apr:tokenApr,\n      apy:tokenApy,\n    };\n  }\n  getTrancheRewardTokensInfo = async (tokenConfig, trancheConfig) => {\n    const stakingRewards = await this.loadTrancheFieldRaw('stakingRewards', {}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig);\n    const tokensDistribution = {};\n    await this.asyncForEach(Object.keys(stakingRewards), async (token) => {\n\n      let firstHarvest = null;\n      let prevBlockInfo = null;\n      let lastBlockInfo = null;\n      let latestHarvest = null;\n      let tokenApr = this.BNify(0);\n      let tokenApy = this.BNify(0);\n      let distributionEnded = null;\n      let lastAmount = this.BNify(0);\n      let totalAmount = this.BNify(0);\n      let tokensPerDay = this.BNify(0);\n      let distributionSpeedUnit = null;\n      let tokensPerYear = this.BNify(0);\n      let conversionRate = this.BNify(0);\n      let tokensPerBlock = this.BNify(0);\n      let tranchePoolSize = this.BNify(0);\n      let tokensPerSecond = this.BNify(0);\n      let lastBlockPoolSize = this.BNify(0);\n      let distributionSpeed = this.BNify(0);\n      let convertedTokensPerYear = this.BNify(0);\n\n      const govTokenConfig = this.getGlobalConfig(['stats', 'tokens', token]);\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      const rewardsRateMethod = trancheConfig.functions.rewardsRate;\n      const periodFinishMethod = trancheConfig.functions.periodFinish;\n\n      if (periodFinishMethod){\n        const periodFinish = await this.genericContractCall(trancheConfig.CDORewards.name,periodFinishMethod);\n        if (periodFinish){\n          distributionEnded = parseInt(periodFinish)<=parseInt(Date.now()/1000);\n        }\n      }\n\n      if (rewardsRateMethod){\n\n        if (!distributionEnded){\n          [\n            conversionRate,\n            tokensPerSecond,\n            totalAmount,\n            tranchePoolSize\n          ] = await Promise.all([\n            this.getUniswapConversionRate(DAITokenConfig, govTokenConfig),\n            this.genericContractCallCached(trancheConfig.CDORewards.name,rewardsRateMethod),\n            this.genericContractCallCached(token,'balanceOf',[trancheConfig.CDORewards.address]),\n            this.loadTrancheFieldRaw('tranchePool', {}, tokenConfig.protocol, tokenConfig.token, trancheConfig.tranche, tokenConfig, trancheConfig)\n          ]);\n\n          tranchePoolSize = await this.convertTrancheTokenBalance(tranchePoolSize,tokenConfig);\n          tokensPerSecond = this.fixTokenDecimals(tokensPerSecond,trancheConfig.CDORewards.decimals);\n          tokensPerDay = this.BNify(tokensPerSecond).times(86400);\n          tokensPerYear = this.BNify(tokensPerSecond).times(this.getGlobalConfig(['network', 'secondsPerYear']));\n          tokensPerBlock = tokensPerYear.div(this.getGlobalConfig(['network', 'blocksPerYear']));\n          convertedTokensPerYear = tokensPerYear.times(conversionRate);\n          tokenApr = convertedTokensPerYear.div(tranchePoolSize);\n          tokenApy = this.apr2apy(tokenApr).times(100);\n          distributionSpeed = tokensPerDay;\n        }\n\n        distributionSpeedUnit = '/day';\n\n        tokensDistribution[token] = {\n          lastAmount,\n          totalAmount,\n          tokensPerDay,\n          firstHarvest,\n          apr: tokenApr,\n          apy: tokenApy,\n          tokensPerYear,\n          latestHarvest,\n          tokensPerBlock,\n          tokensPerSecond,\n          distributionSpeed,\n          distributionSpeedUnit,\n          convertedTokensPerYear\n        };\n\n      } else {\n\n        const transfers = await this.getEtherscanTokenTransfers(token, tokenConfig.CDO.address, tokenConfig.CDO.address, govTokenConfig.address, trancheConfig.CDORewards.address, tokenConfig.blockNumber);\n\n        if (transfers && transfers.length > 0) {\n          const firstHarvest = transfers.length ? transfers[0] : null;\n          const latestHarvest = transfers[transfers.length - 1];\n          const firstBlock = firstHarvest ? firstHarvest.blockNumber : tokenConfig.blockNumber;\n          [\n            prevBlockInfo,\n            lastBlockInfo,\n            conversionRate,\n            lastBlockPoolSize\n          ] = await Promise.all([\n            this.getBlockInfo(firstBlock),\n            this.getBlockInfo(latestHarvest.blockNumber),\n            this.getUniswapConversionRate(DAITokenConfig, govTokenConfig),\n            this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue', [], {}, latestHarvest.blockNumber)\n          ]);\n\n          if (prevBlockInfo && lastBlockInfo) {\n            let poolSize = this.fixTokenDecimals(lastBlockPoolSize, tokenConfig.CDO.decimals);\n            const elapsedBlocks = latestHarvest.blockNumber - firstBlock;\n            const elapsedSeconds = lastBlockInfo.timestamp - prevBlockInfo.timestamp;\n\n            lastAmount = this.fixTokenDecimals(latestHarvest.returnValues.value, govTokenConfig.decimals);\n            totalAmount = transfers.reduce((total, t) => {\n              total = total.plus(this.fixTokenDecimals(t.returnValues.value, govTokenConfig.decimals));\n              return total;\n            }, this.BNify(0));\n\n            poolSize = await this.convertTrancheTokenBalance(poolSize,tokenConfig);\n\n            tokensPerBlock = totalAmount.div(elapsedBlocks);\n            tokensPerSecond = totalAmount.div(elapsedSeconds);\n            tokensPerDay = tokensPerSecond.times(86400);\n            tokensPerYear = tokensPerSecond.times(this.getGlobalConfig(['network', 'secondsPerYear']));\n            convertedTokensPerYear = tokensPerYear.times(conversionRate);\n            tokenApr = convertedTokensPerYear.div(poolSize);\n            tokenApy = this.apr2apy(tokenApr).times(100);\n\n            distributionSpeed = lastAmount;\n            distributionSpeedUnit = ' (last harvest)';\n\n            tokensDistribution[token] = {\n              lastAmount,\n              totalAmount,\n              tokensPerDay,\n              firstHarvest,\n              apr: tokenApr,\n              apy: tokenApy,\n              tokensPerYear,\n              latestHarvest,\n              tokensPerBlock,\n              tokensPerSecond,\n              distributionSpeed,\n              distributionSpeedUnit,\n              convertedTokensPerYear\n            };\n          }\n        }\n      }\n    });\n\n    // console.log('tokensDistribution',tokensDistribution);\n\n    return tokensDistribution;\n  }\n  getTrancheUserInfo = async (tokenConfig, trancheConfig, account=null, userTransactions=null) => {\n    account = account || this.props.account;\n\n    if (!account){\n      return false;\n    }\n    // const cachedDataKey = `amountDepositedTranche_${tokenConfig.token}_${trancheConfig.token}_${account}`;\n    // const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // if (cachedData && !this.BNify(cachedData).isNaN()) {\n    //   return this.BNify(cachedData);\n    // }\n\n    const defaultEventsConfig = { to: 'to', from: 'from', value: 'value' };\n    const underlyingEventsConfig = this.getGlobalConfig(['events', tokenConfig.token, 'fields']) || defaultEventsConfig;\n\n    userTransactions = userTransactions || await this.getEtherscanUserTrancheTxs(account, tokenConfig, trancheConfig);\n\n    if (!userTransactions){\n      userTransactions = await this.getTrancheUserTransactionsEvents(account, tokenConfig, trancheConfig);\n    }\n\n    // Filter user transactions\n    userTransactions = userTransactions.filter( tx => ([tokenConfig.address.toLowerCase(),trancheConfig.address.toLowerCase()].includes(tx.contractAddress.toLowerCase())) );\n\n    // console.log('getTrancheUserInfo',this.props.account,tokenConfig.token,trancheConfig.tranche,userTransactions);\n\n    // console.log('underlying_deposits',this.props.account,tokenConfig.address,tokenConfig.CDO.address,trancheConfig.blockNumber,underlying_deposits);\n\n    // console.log('getTrancheUserInfo_2',trancheConfig.name,trancheConfig.blockNumber,'underlying_transfers',underlying_transfers,'trancheToken_transfers',trancheToken_transfers);\n\n    const transactions = [];\n    let firstDepositTx = null;\n    let avgBuyPrice = this.BNify(0);\n    let amountDeposited = this.BNify(0);\n    let totalAmountDeposited = this.BNify(0);\n    let amountDepositedConverted = this.BNify(0);\n\n    // Order token transfers\n    const underlying_transfers = userTransactions.filter( tx => ['underlyingDeposit','underlyingRedeem'].includes(tx.type) ).sort((a, b) => (parseInt(a.blockNumber) > parseInt(b.blockNumber) ? 1 : -1));\n    const trancheToken_transfers = userTransactions.filter( tx => ['trancheDeposit','trancheRedeem'].includes(tx.type) ).sort((a, b) => (parseInt(a.blockNumber) > parseInt(b.blockNumber) ? 1 : -1));\n\n    const blocksInfo = {};\n\n    await this.asyncForEach(trancheToken_transfers, async (trancheTokenTransferEvent) => {\n      const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n      if (!tokenTransferEvent) {\n        return;\n      }\n      const [\n        blockInfo,\n        tokenConversionRate\n      ] = await Promise.all([\n        this.getBlockInfo(tokenTransferEvent.blockNumber),\n        this.convertTrancheTokenBalance(1,tokenConfig,tokenTransferEvent.blockNumber)\n      ]);\n\n      blocksInfo[tokenTransferEvent.blockNumber] = {\n        blockInfo,\n        tokenConversionRate\n      };\n    });\n\n\n    trancheToken_transfers.forEach( trancheTokenTransferEvent => {\n      const tokenTransferEvent = underlying_transfers.find(t => t.transactionHash.toLowerCase() === trancheTokenTransferEvent.transactionHash.toLowerCase());\n\n      // Skip if no tranche token transfer event found\n      if (!tokenTransferEvent) {\n        return;\n      }\n\n      const tokenAmount = this.fixTokenDecimals(tokenTransferEvent.returnValues[underlyingEventsConfig.value], tokenConfig.decimals);\n      const trancheTokenAmount = this.fixTokenDecimals(trancheTokenTransferEvent.returnValues.value, trancheConfig.decimals);\n\n      // console.log('tranchePrice',trancheConfig.token,tokenAmount.toFixed(),trancheTokenAmount.toFixed(),tranchePrice.toFixed());\n      const tranchePrice = tokenAmount.div(trancheTokenAmount);\n      const blockInfo = blocksInfo[tokenTransferEvent.blockNumber].blockInfo;\n      const hashKey = `${trancheConfig.token}_${tokenTransferEvent.transactionHash}`;\n      const protocolConfig = this.getGlobalConfig(['stats', 'protocols', tokenConfig.protocol]);\n      const protocolIcon = protocolConfig && protocolConfig.icon ? `images/protocols/${protocolConfig.icon}` : `images/protocols/${tokenConfig.protocol}.svg`;\n\n      const tx = {\n        hashKey,\n        action: null,\n        tokenAmount,\n        tranchePrice,\n        protocolIcon,\n        value: tokenAmount,\n        status: 'Completed',\n        token: tokenConfig.token,\n        tranche: trancheConfig.tranche,\n        protocol: protocolConfig.label,\n        tokenSymbol: tokenConfig.token,\n        trancheTokens: trancheTokenAmount,\n        hash: tokenTransferEvent.transactionHash,\n        blockNumber: tokenTransferEvent.blockNumber,\n        timeStamp: blockInfo ? blockInfo.timestamp : null,\n      };\n\n      const tokenAmountConverted = this.BNify(tokenAmount).times(blocksInfo[tokenTransferEvent.blockNumber].tokenConversionRate);\n\n      // Get conversion rate outside the loop\n      // await this.convertTrancheTokenBalance(tokenAmount,tokenConfig,tokenTransferEvent.blockNumber);\n\n      // Deposit\n      if (trancheTokenTransferEvent.returnValues.from.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n        // Set first deposit tx\n        if (!firstDepositTx) {\n          firstDepositTx = tx;\n        }\n\n        tx.action = 'Deposit';\n        amountDeposited = amountDeposited.plus(tokenAmount);\n        totalAmountDeposited = totalAmountDeposited.plus(tokenAmount);\n        avgBuyPrice = avgBuyPrice.plus(tranchePrice.times(tokenAmount));\n        amountDepositedConverted = amountDepositedConverted.plus(tokenAmountConverted);\n\n        // console.log('Deposit',blockInfo.timestamp,trancheConfig.token,tokenAmount.toFixed(),tokenAmountConverted.toFixed(),amountDeposited.toFixed(),amountDepositedConverted.toFixed(),trancheTokenAmount.toFixed());\n        // Withdraw\n      } else if (trancheTokenTransferEvent.returnValues.to.toLowerCase() === '0x0000000000000000000000000000000000000000') {\n        tx.action = 'Withdraw';\n        amountDeposited = amountDeposited.minus(tokenAmount);\n        amountDepositedConverted = amountDepositedConverted.minus(tokenAmountConverted);\n        if (amountDeposited.lt(0)) {\n          firstDepositTx = null;\n          avgBuyPrice = this.BNify(0);\n          amountDeposited = this.BNify(0);\n          totalAmountDeposited = this.BNify(0);\n          amountDepositedConverted = this.BNify(0);\n        }\n        // console.log('Redeem',blockInfo.timestamp,trancheConfig.token,tokenAmount.toFixed(),tokenAmountConverted.toFixed(),amountDeposited.toFixed(),amountDepositedConverted.toFixed(),trancheTokenAmount.toFixed());\n      }\n\n      transactions.push(tx);\n    });\n\n    avgBuyPrice = avgBuyPrice.div(totalAmountDeposited);\n\n    // console.log(trancheConfig.token,'amountDeposited',amountDeposited.toFixed(),'avgBuyPrice',avgBuyPrice.toFixed(),'transactions',transactions);\n\n    return {\n      avgBuyPrice,\n      transactions,\n      firstDepositTx,\n      amountDeposited,\n      amountDepositedConverted\n    }\n  }\n  getTrancheUserTransactions = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.transactions;\n    }\n    return null;\n  }\n  getTrancheFirstDepositTx = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.firstDepositTx;\n    }\n    return null;\n  }\n  getAmountDepositedTranche = async (tokenConfig, trancheConfig, account) => {\n    const trancheUserInfo = await this.getTrancheUserInfo(tokenConfig, trancheConfig, account);\n    if (trancheUserInfo) {\n      return trancheUserInfo.amountDeposited;\n    }\n    return null;\n  }\n  getAmountDeposited = async (tokenConfig, account) => {\n    const cachedDataKey = `amountDeposited_${tokenConfig.idle.token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let [tokenBalance, userAvgPrice] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, account),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account])\n    ]);\n\n    if (tokenBalance && userAvgPrice) {\n      userAvgPrice = this.fixTokenDecimals(userAvgPrice, tokenConfig.decimals);\n      const amountDeposited = tokenBalance.times(userAvgPrice);\n      return this.setCachedDataWithLocalStorage(cachedDataKey, amountDeposited);\n    }\n\n    return null;\n  }\n  getAmountLent = async (enabledTokens = [], account) => {\n\n    account = account || this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length || !this.props.availableTokens) {\n      return [];\n    }\n\n    const etherscanTxs = await this.getEtherscanTxs(account, 0, 'latest', enabledTokens, false);\n\n    const amountLents = {};\n\n    enabledTokens.forEach((selectedToken) => {\n      let amountLent = this.BNify(0);\n      amountLents[selectedToken] = amountLent;\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        filteredTxs.forEach((tx, index) => {\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending') || !tx.tokenAmount) {\n            return false;\n          }\n\n          switch (tx.action) {\n            case 'Swap':\n            case 'Deposit':\n            case 'Receive':\n            case 'Migrate':\n            case 'CurveOut':\n              amountLent = amountLent.plus(tx.tokenAmount);\n              break;\n            case 'Send':\n            case 'Redeem':\n            case 'SwapOut':\n            case 'CurveIn':\n            case 'Withdraw':\n              amountLent = amountLent.minus(tx.tokenAmount);\n              break;\n            default:\n              break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)) {\n            amountLent = this.BNify(0);\n          }\n        });\n      }\n\n      // Add token Data\n      amountLents[selectedToken] = amountLent;\n    });\n\n    // debugger;\n\n    return amountLents;\n  }\n  getBaseToken = () => {\n    const networkConfig = this.getCurrentNetwork();\n    return networkConfig ? networkConfig.baseToken : this.getGlobalConfig(['baseToken']);\n  }\n  getCurrentNetwork = () => {\n    const networkId = this.getCurrentNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetwork = () => {\n    const networkId = this.getRequiredNetworkId();\n    const network = this.getGlobalConfig(['network', 'availableNetworks', networkId]);\n    network.id = networkId;\n    return network;\n  }\n  getRequiredNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.required ? parseInt(this.props.network.required.id) || parseInt(defaultNetwork) : parseInt(defaultNetwork);\n  }\n  getCurrentNetworkId = () => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    return this.props.network && this.props.network.current ? parseInt(this.props.network.current.id) || parseInt(defaultNetwork) : parseInt(defaultNetwork);\n  }\n  getPolygonBridgeTxs = async (account = false, enabledTokens = []) => {\n\n    account = account ? account : this.props.account;\n\n    if (!account || !this.props.web3) {\n      return [];\n    }\n\n    const cachedDataKey = `polygonBridgeTxs_${account}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    account = account.toLowerCase();\n\n    let txs = [];\n    const currentNetwork = this.getRequiredNetwork();\n    const currentNetworkId = this.getRequiredNetworkId();\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const stateSenderConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'StateSender']);\n    const erc20PredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'ERC20Predicate']);\n    const etherPredicateConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'EtherPredicate']);\n    const depositManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'DepositManager']);\n    const rootChainManagerConfig = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'contracts', 'RootChainManager']);\n\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? currentNetworkId : this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', currentNetworkId]);\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[polygonNetworkId]) {\n      const covalentApiUrl = covalentInfo.endpoints[polygonNetworkId];\n      const polygonAvailableTokens = this.getGlobalConfig(['tools', 'polygonBridge', 'props', 'availableTokens']);\n      const polygonEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=false&skip=0&key=${covalentInfo.key}&page-size=500`;\n\n      const ethereumNetworkId = this.getGlobalConfig(['network', 'providers', 'polygon', 'networkPairs', polygonNetworkId]);\n      const etherscanApiUrl = etherscanInfo.endpoints[ethereumNetworkId];\n      const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistEndpoint = `${etherscanApiUrl}?module=account&action=txlist&address=${this.props.account}&sort=desc`;\n      const etherscanTxlistInternalEndpoint = `${etherscanApiUrl}?module=account&action=txlistinternal&address=${this.props.account}&sort=desc`;\n\n      const [\n        last_state_id,\n        polygonTxs,\n        etherscanTxs,\n        etherscanTxlist,\n        etherscanTxlistInternal\n      ] = await Promise.all([\n        this.getPolygonCurrentLastStateId(),\n        this.makeCachedRequest(polygonEndpoint, 120),\n        this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistEndpoint, etherscanInfo.keys, 120),\n        this.makeEtherscanApiRequest(etherscanTxlistInternalEndpoint, etherscanInfo.keys, 120),\n      ]);\n\n      // console.log('polygonTxs',polygonTxs);\n      // console.log('etherscanTxs',etherscanTxs);\n      // console.log('etherscanTxlist',etherscanTxlist);\n      // console.log('etherscanTxlistInternal',etherscanTxlistInternal);\n\n      const rootTokensAddresses = [];\n      const childTokensAddresses = [];\n      Object.values(polygonAvailableTokens).forEach(tokenConfig => {\n        if (tokenConfig.childToken) {\n          childTokensAddresses.push(tokenConfig.childToken.address.toLowerCase())\n        }\n        if (tokenConfig.rootToken) {\n          rootTokensAddresses.push(tokenConfig.rootToken.address.toLowerCase())\n        }\n      });\n\n      let depositTxs = [];\n\n      if (etherscanTxs && etherscanTxs.data && etherscanTxs.data.result && typeof etherscanTxs.data.result.filter === 'function') {\n        depositTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.to.toLowerCase()) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n        const exitTxs = etherscanTxs.data.result.filter(tx => rootTokensAddresses.includes(tx.contractAddress.toLowerCase()) && [erc20PredicateConfig.address.toLowerCase(), depositManagerConfig.address.toLowerCase()].includes(tx.from.toLowerCase()) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === tx.tokenSymbol);\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      const depositTxsHashes = depositTxs.map(tx => tx.hash.toLowerCase());\n      const depositETHInputRexExp = new RegExp(this.props.account.replace('0x', '').toLowerCase() + '$');\n      if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n        const depositETHTxs = etherscanTxlist.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.to.toLowerCase() === rootChainManagerConfig.address.toLowerCase() && tx.input.toLowerCase().match(depositETHInputRexExp) && tx.from.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(depositETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Deposit';\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          const txReceipt = await this.getTxReceipt(ethereumTx.hash, this.props.web3Infura);\n          const stateSenderLog = txReceipt ? txReceipt.logs.find(log => log.address.toLowerCase() === stateSenderConfig.address.toLowerCase()) : null;\n          const tx_state_id = stateSenderLog && this.props.web3.utils ? parseInt(this.props.web3.utils.hexToNumberString(stateSenderLog.topics[1])) : null;\n          ethereumTx.included = last_state_id && tx_state_id ? last_state_id >= tx_state_id : false;\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (etherscanTxlistInternal && etherscanTxlistInternal.data && etherscanTxlistInternal.data.result && typeof etherscanTxlistInternal.data.result.filter === 'function') {\n        const exitETHTxs = etherscanTxlistInternal.data.result.filter(tx => !depositTxsHashes.includes(tx.hash.toLowerCase()) && tx.from.toLowerCase() === etherPredicateConfig.address.toLowerCase() && !tx.input.toLowerCase().match(depositETHInputRexExp) && tx.to.toLowerCase() === this.props.account.toLowerCase());\n        await this.asyncForEach(exitETHTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(t => t.name === 'WETH');\n          const ethereumTx = { ...tx };\n          ethereumTx.action = 'Exit';\n          ethereumTx.included = true;\n          ethereumTx.tokenSymbol = 'WETH';\n          ethereumTx.networkId = ethereumNetworkId;\n          ethereumTx.timeStamp = parseInt(tx.timeStamp);\n          ethereumTx.bridgeType = tokenConfig.bridgeType;\n          ethereumTx.value = this.fixTokenDecimals(ethereumTx.value, tokenConfig.decimals);\n          txs.push(ethereumTx);\n        });\n      }\n\n      if (polygonTxs && polygonTxs.data && polygonTxs.data.data && polygonTxs.data.data.items && Object.values(polygonTxs.data.data.items).length) {\n        const filteredTxs = polygonTxs.data.data.items.filter(tx => tx.to_address && childTokensAddresses.includes(tx.to_address.toLowerCase()));\n        // console.log('polygonTxs',polygonTxs,filteredTxs);\n        await this.asyncForEach(filteredTxs, async (tx) => {\n          const tokenConfig = Object.values(polygonAvailableTokens).find(tokenConfig => (tokenConfig.childToken && tx.to_address && tokenConfig.childToken.address.toLowerCase() === tx.to_address.toLowerCase()));\n          if (!tokenConfig || !tokenConfig.childToken) {\n            return;\n          }\n          tokenConfig.address = tokenConfig.childToken.address;\n          if (!enabledTokens || !enabledTokens.length || enabledTokens.includes(tokenConfig.token)) {\n            const polygonTx = this.normalizePolygonTx(tx, tokenConfig);\n            if (polygonTx.action === 'Withdraw') {\n              polygonTx.exited = false;\n              polygonTx.networkId = polygonNetworkId;\n              polygonTx.bridgeType = tokenConfig.bridgeType;\n              polygonTx.included = await this.props.maticPOSClient.isCheckPointed(polygonTx.hash);\n              polygonTx.exited = false;\n\n              // console.log('polygonTx',polygonTx);\n\n              if (tokenConfig.rootToken && polygonTx.included){\n                const erc20RootToken = this.props.maticPOSClient.erc20(tokenConfig.rootToken.address,true);\n                polygonTx.exited = await erc20RootToken.isWithdrawExited(polygonTx.hash);\n              }\n              \n              txs.push(polygonTx);\n            }\n          }\n        });\n        // debugger;\n      }\n    }\n\n    txs = txs.sort((a, b) => (parseInt(a.timeStamp) < parseInt(b.timeStamp) ? 1 : -1));\n\n    // console.log('getPolygonBridgeTxs',cachedDataKey,txs);\n\n    return this.setCachedData(cachedDataKey, txs, 120);\n  }\n  getPolygonBaseTxs = async (account = false, enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n    const requiredNetwork = this.getRequiredNetworkId();\n    // const selectedStrategy = this.props.selectedStrategy;\n    const covalentInfo = this.getGlobalConfig(['network', 'providers', 'covalent']);\n\n    // Check if covalent is enabled for the required network\n    if (covalentInfo.enabled && covalentInfo.endpoints[requiredNetwork]) {\n      const covalentApiUrl = covalentInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&key=${covalentInfo.key}&page-size=500`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data && baseTxs.data.data && baseTxs.data.data.items && Object.values(baseTxs.data.data.items).length) {\n\n        const cachedRows = Object.values(baseTxs.data.data.items).length;\n        const lastCachedTx = Object.values(baseTxs.data.data.items).pop();\n        const lastCachedBlockNumber = lastCachedTx && lastCachedTx.block_height ? parseInt(lastCachedTx.block_height) + 1 : 0;\n\n        const covalentEndpointLastBlock = `${covalentApiUrl}address/${account}/transactions_v2/?block-signed-at-asc=true&skip=${cachedRows}&page-size=500`;\n        let latestTxs = await this.makeCachedRequest(covalentEndpointLastBlock, 15);\n\n        if (latestTxs && latestTxs.data.data.items && latestTxs.data.data.items.length) {\n          latestTxs = await this.filterPolygonTxs(latestTxs.data.data.items, enabledTokens);\n          // latestTxs = await this.filterEthereumTxs(latestTxs,enabledTokens,true,false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.block_height)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.data.items).includes(tx.tx_hash);\n                if (!txFound) {\n                  baseTxs.data.data.items[tx.tx_hash] = tx;\n                }\n              });\n\n              // Save covalent txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.data.items);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests_polygon = this.getCachedDataWithLocalStorage('cachedRequests_polygon',{});\n          const dataToCache = {\n            data: {\n              data:txs.data\n            },\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests_polygon', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests_polygon',cachedRequests_polygon);\n        }\n      }\n\n      if (txs && txs.data && txs.data.data && txs.data.data.items) {\n        results = txs.data.data.items;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getEtherscanBaseTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n    account = account ? account : this.props.account;\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    account = account.toLowerCase();\n\n    const selectedStrategy = this.props.selectedStrategy;\n\n    // Check if firstBlockNumber is less that firstIdleBlockNumber\n    const firstIdleBlockNumber = this.getGlobalConfig(['network', 'firstBlockNumber']);\n    firstBlockNumber = Math.max(firstIdleBlockNumber, firstBlockNumber);\n\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n\n    let results = [];\n    let baseTxs = null;\n    let baseEndpoint = null;\n\n    // Check if etherscan is enabled for the required network\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n\n      // Get base endpoint cached transactions\n      baseEndpoint = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${firstIdleBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n      baseTxs = this.getCachedRequest(baseEndpoint);\n\n      // Check if the latest blockNumber is actually the latest one\n      if (baseTxs && baseTxs.data.result && Object.values(baseTxs.data.result).length) {\n\n        const cachedBlockNumbers = Object.values(baseTxs.data.result).map(tx => (parseInt(tx.blockNumber)));\n        const lastCachedBlockNumber = Math.max(...cachedBlockNumbers);\n\n        const etherscanEndpointLastBlock = `${etherscanApiUrl}?strategy=${selectedStrategy}&module=account&action=tokentx&address=${account}&startblock=${lastCachedBlockNumber}&endblock=${endBlockNumber}&sort=asc`;\n        \n        let latestTxs = await this.makeEtherscanApiRequest(etherscanEndpointLastBlock, etherscanInfo.keys, 15);\n\n        if (latestTxs && latestTxs.data.result && latestTxs.data.result.length) {\n\n          latestTxs = await this.filterEthereumTxs(latestTxs.data.result, enabledTokens, true, false);\n\n          if (latestTxs && Object.values(latestTxs).length) {\n\n            const latestBlockNumbers = Object.values(latestTxs).map(lastTx => (parseInt(lastTx.blockNumber)));\n            const lastRealBlockNumber = Math.max(...latestBlockNumbers);\n\n            // If real tx blockNumber differs from last blockNumber\n            if (lastRealBlockNumber >= lastCachedBlockNumber) {\n              // Merge latest Txs with baseTxs\n              Object.values(latestTxs).forEach((tx) => {\n                const txFound = Object.keys(baseTxs.data.result).includes(tx.hashKey);\n                if (!txFound) {\n                  baseTxs.data.result[tx.hashKey] = tx;\n                }\n              });\n\n              // Save etherscan txs\n              this.saveFetchedTransactions(baseEndpoint, baseTxs.data.result);\n            }\n          }\n        }\n      } else {\n        baseTxs = null;\n      }\n\n      let txs = baseTxs;\n\n      if (debug) {\n        console.log('DEBUG - txs', txs);\n      }\n\n      if (!txs) {\n        // Make request without caching\n        txs = await this.makeEtherscanApiRequest(baseEndpoint, etherscanInfo.keys, 0);\n\n        /*\n        txs = await this.makeRequest(baseEndpoint);\n\n        // console.log('makeRequest 1',account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n\n        if (!txs || !txs.data || parseInt(txs.data.status) === 0) {\n          let requestCount = 0;\n          let requestStatus = false;\n          do {\n            await this.asyncTimeout(500);\n            txs = await this.makeRequest(baseEndpoint);\n            requestCount++;\n            requestStatus = txs && txs.data ? parseInt(txs.data.status) : false;\n            // console.log('makeRequest '+(requestCount+1),account,baseEndpoint,txs,txs.data.message,txs.data.status,parseInt(txs.data.status));\n          } while (requestCount < 5 && !requestStatus);\n        }\n\n        // Cache request\n        if (txs && txs.data && parseInt(txs.data.status) > 0) {\n          const timestamp = parseInt(Date.now() / 1000);\n          // const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests',{});\n          const dataToCache = {\n            data: {\n              data:txs.data\n            },\n            timestamp\n          };\n          this.addKeyToCachedDataWithLocalStorage('cachedRequests', baseEndpoint, dataToCache);\n          // this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n        }\n        */\n      }\n\n      if (txs && txs.data && txs.data.result) {\n        results = txs.data.result;\n      } else {\n        return [];\n      }\n    }\n\n    return {\n      results,\n      baseTxs,\n      baseEndpoint\n    };\n  }\n  getCurveTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = []) => {\n    const results = await this.getEtherscanTxs(account, firstBlockNumber, endBlockNumber, enabledTokens);\n    // results = results ? Object.values(results) : [];\n    return this.filterCurveTxs(results, enabledTokens);\n  }\n  saveFetchedTransactions = (endpoint, txs) => {\n    const txsToStore = {};\n    Object.keys(txs).forEach(txHash => {\n      const tx = txs[txHash];\n      if (tx.blockNumber && (!tx.status || tx.status.toLowerCase() !== 'pending')) {\n        txsToStore[txHash] = tx;\n      }\n    });\n\n    // Save new cached data\n    const cachedRequest = {\n      data: {\n        result: txsToStore\n      }\n    };\n\n    this.saveCachedRequest(endpoint, false, cachedRequest);\n  }\n  getEtherscanTxs = async (account = false, firstBlockNumber = 0, endBlockNumber = 'latest', enabledTokens = [], debug = false) => {\n\n    let resultData = null;\n    const currentNetwork = this.getRequiredNetwork();\n\n    switch (currentNetwork.explorer) {\n      case 'polygon':\n        resultData = await this.getPolygonBaseTxs(account, enabledTokens, debug);\n        break;\n      case 'etherscan':\n      default:\n        resultData = await this.getEtherscanBaseTxs(account, firstBlockNumber, endBlockNumber, enabledTokens, debug);\n        break;\n    }\n\n    // Initialize prevTxs\n    let txs = {};\n\n    if (resultData) {\n      let {\n        results,\n        baseTxs,\n        baseEndpoint\n      } = resultData;\n\n      if (baseTxs) {\n        // Filter txs for token\n        txs = await this.processStoredTxs(results, enabledTokens);\n      } else {\n        const allAvailableTokens = Object.keys(this.props.availableTokens);\n        // Save base endpoint with all available tokens\n        switch (currentNetwork.explorer) {\n          case 'polygon':\n            txs = await this.filterPolygonTxs(results, allAvailableTokens);\n            // console.log('polygon txs',results,allAvailableTokens,txs);\n            break;\n          case 'etherscan':\n          default:\n            txs = await this.filterEthereumTxs(results, allAvailableTokens);\n            break;\n        }\n\n        // Store filtered txs\n        if (txs && Object.keys(txs).length) {\n          this.saveFetchedTransactions(baseEndpoint, txs);\n        }\n      }\n    }\n\n    // console.log('DEBUG - TXS -',txs);\n\n    return Object\n      .values(txs)\n      .filter(tx => (tx.token && enabledTokens.includes(tx.token.toUpperCase())))\n      .sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n  }\n  getPolygonCurrentLastStateId = async () => {\n    const contractInstance = new this.props.web3Polygon.eth.Contract(\n      [\n        {\n          constant: true,\n          inputs: [],\n          name: \"lastStateId\",\n          outputs: [\n            {\n              internalType: \"uint256\",\n              name: \"\",\n              type: \"uint256\",\n            },\n          ],\n          payable: false,\n          stateMutability: \"view\",\n          type: \"function\",\n        },\n      ],\n      \"0x0000000000000000000000000000000000001001\"\n    );\n\n    return parseInt(await contractInstance.methods.lastStateId().call());\n  }\n  checkPolygonTransactionIncluded = async (txHash) => {\n    const [\n      last_state_id,\n      tx,\n    ] = await Promise.all([\n      this.getPolygonCurrentLastStateId(),\n      this.props.web3Polygon.eth.getTransactionReceipt(txHash)\n    ]);\n\n    const tx_state_id = tx && tx.logs && tx.logs.length && this.props.web3.utils ? this.props.web3.utils.hexToNumberString(tx.logs[tx.logs.length - 1].topics[1]) : null;\n\n    return tx_state_id ? parseInt(last_state_id) >= parseInt(tx_state_id) : null;\n  }\n  filterCurveTxs = async (results, enabledTokens = []) => {\n\n    if (!results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    const availableTokens = this.props.availableTokens ? this.props.availableTokens : this.getCurveAvailableTokens();\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(availableTokens);\n    }\n\n    const curveTxs = results.filter(tx => (enabledTokens.includes(tx.token) && ['CurveIn', 'CurveOut', 'CurveZapIn', 'CurveZapOut', 'CurveTransferIn', 'CurveTransferOut', 'CurveDepositIn', 'CurveDepositOut'].includes(tx.action)));\n\n    if (curveTxs.length) {\n      curveTxs.sort((a, b) => (a.timeStamp < b.timeStamp ? -1 : 1));\n    }\n\n    return curveTxs;\n  }\n  normalizePolygonTx = (tx, tokenConfig = null) => {\n    tokenConfig = tokenConfig || Object.values(this.props.availableTokens).find(tokenConfig => tx.to_address && tokenConfig.idle.address.toLowerCase() === tx.to_address.toLowerCase());\n\n    const depositLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const redeemLogEvent = tx.log_events && tokenConfig && tokenConfig.idle ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === tokenConfig.idle.address.toLowerCase()) : null;\n    const withdrawLogEvent = tx.log_events && tokenConfig && tokenConfig.address ? tx.log_events.find(log => log.sender_address.toLowerCase() === tokenConfig.address.toLowerCase() && log.decoded && log.decoded.name === 'Transfer' && log.decoded.params.find(param => param.name === 'from').value.toLowerCase() === this.props.account.toLowerCase() && log.decoded.params.find(param => param.name === 'to').value.toLowerCase() === '0x0000000000000000000000000000000000000000') : null;\n\n    const tokenDecimal = tokenConfig.decimals;\n    const tokenSymbol = tokenConfig.name || tokenConfig.token;\n    const hashKey = `${tx.tx_hash}_${tokenSymbol}`;\n    const idleToken = tokenConfig.idle ? tokenConfig.idle.token : null;\n    const action = depositLogEvent ? 'Deposit' : (redeemLogEvent ? 'Redeem' : (withdrawLogEvent ? 'Withdraw' : null));\n    const timeStamp = parseInt(this.strToMoment(tx.block_signed_at)._d.getTime() / 1000);\n\n    let logEvent = null;\n    switch (action) {\n      case 'Deposit':\n        logEvent = depositLogEvent;\n        break;\n      case 'Redeem':\n        logEvent = redeemLogEvent;\n        break;\n      case 'Withdraw':\n        logEvent = withdrawLogEvent;\n        break;\n      default:\n        break;\n    }\n\n    const logs = tx.log_events ? tx.log_events.map(log => ({\n      topics: log.raw_log_topics\n    })) : [];\n    const value = logEvent ? this.fixTokenDecimals(logEvent.decoded.params.find(param => param.name === 'value').value, tokenDecimal) : this.fixTokenDecimals(tx.value, tokenDecimal);\n\n    const blockNumber = tx.log_events && tx.log_events.length ? tx.log_events[0].block_height : null;\n\n    return {\n      logs,\n      value,\n      action,\n      hashKey,\n      timeStamp,\n      idleToken,\n      tokenSymbol,\n      blockNumber,\n      tokenDecimal,\n      hash: tx.tx_hash,\n      to: tx.to_address,\n      status: 'Completed',\n      from: tx.from_address,\n      gasUsed: tx.gas_spent,\n      gasPrice: tx.gas_price,\n      token: tokenConfig.token,\n      contractAddress: tokenConfig.address,\n    };\n  }\n  filterPolygonTxs = async (txs, enabledTokens, processTransactions = true) => {\n    const idleTokensAddresses = Object.values(this.props.availableTokens).map(tokenConfig => tokenConfig.idle.address.toLowerCase());\n    const polygonTxs = txs ? txs.filter(tx => tx.to_address && idleTokensAddresses.includes(tx.to_address.toLowerCase())).reduce((output, tx) => {\n      const mappedTx = this.normalizePolygonTx(tx);\n      output[mappedTx.hashKey] = mappedTx;\n      return output;\n    }, {}) : {};\n\n    return processTransactions ? await this.processTransactions(polygonTxs, enabledTokens) : polygonTxs;\n  }\n  filterEtherscanTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    return await this.filterEthereumTxs(results, enabledTokens, processTxs, processStoredTxs);\n  }\n  filterEthereumTxs = async (results, enabledTokens = [], processTxs = true, processStoredTxs = true) => {\n    if (!this.props.account || !results || !results.length || typeof results.forEach !== 'function') {\n      return [];\n    }\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let etherscanTxs = {};\n    let curveTransfersTxs = [];\n    let curveTransfersTxsToDelete = [];\n\n    // const idleTokensAddresses = Object.values(this.props.availableTokens).map( tokenConfig => (tokenConfig.idle.address) );\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n    const curveSwapContract = this.getGlobalConfig(['curve', 'migrationContract']);\n    const curveDepositContract = this.getGlobalConfig(['curve', 'depositContract']);\n\n    // this.customLog('filterEtherscanTxs',enabledTokens,results);\n\n    enabledTokens.forEach(token => {\n      const tokenConfig = this.props.availableTokens[token];\n      const depositProxyContractInfo = this.getGlobalConfig(['contract', 'methods', 'deposit', 'proxyContract']);\n      const migrationContractAddr = tokenConfig.migration && tokenConfig.migration.migrationContract ? tokenConfig.migration.migrationContract.address : null;\n      const migrationContractOldAddrs = tokenConfig.migration && tokenConfig.migration.migrationContract && tokenConfig.migration.migrationContract.oldAddresses ? tokenConfig.migration.migrationContract.oldAddresses : [];\n      const tokenMigrationToolParams = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'migrationContract']);\n\n      const batchMigration = this.getGlobalConfig(['tools', 'batchMigration', 'props', 'availableTokens', tokenConfig.idle.token]);\n      const batchMigrationContractAddr = batchMigration && batchMigration.migrationContract ? batchMigration.migrationContract.address : null;\n\n      // const curveEnabled = this.getGlobalConfig(['curve','enabled']);\n      const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', tokenConfig.idle.token]);\n\n      results.forEach(tx => {\n        let tokenDecimals = tokenConfig.decimals;\n        const idleToken = tokenConfig.idle.token;\n        const internalTxs = results.filter(r => r.hash === tx.hash);\n        const isRightToken = internalTxs.length > 1 && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase()).length > 0;\n        const isSendTransferTx = internalTxs.length === 1 && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isReceiveTransferTx = internalTxs.length === 1 && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isBatchMigrationTx = batchMigrationContractAddr && tx.from.toLowerCase() === batchMigrationContractAddr.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isDepositInternalTx = isRightToken && internalTxs.find(iTx => iTx.from.toLowerCase() === this.props.account.toLowerCase() && (iTx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && iTx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0)));\n        const isRedeemInternalTx = isRightToken && internalTxs.find(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx2 => iTx2.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && iTx.to.toLowerCase() === this.props.account.toLowerCase());\n\n        const isMigrationTx = isBatchMigrationTx || (migrationContractAddr && (tx.from.toLowerCase() === migrationContractAddr.toLowerCase() || migrationContractOldAddrs.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase());\n        const isConversionTx = tokenMigrationToolParams && (tx.from.toLowerCase() === tokenMigrationToolParams.address.toLowerCase() || tokenMigrationToolParams.oldAddresses.map((v) => { return v.toLowerCase(); }).includes(tx.from.toLowerCase())) && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isDepositTx = isRightToken && !isMigrationTx && tx.from.toLowerCase() === this.props.account.toLowerCase() && (tx.to.toLowerCase() === tokenConfig.idle.address.toLowerCase() || (depositProxyContractInfo && tx.to.toLowerCase() === depositProxyContractInfo.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length > 0));\n        const isRedeemTx = isRightToken && !isMigrationTx && !isDepositInternalTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && internalTxs.filter(iTx => iTx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()).length && tx.to.toLowerCase() === this.props.account.toLowerCase();\n        const isWithdrawTx = internalTxs.length > 1 && internalTxs.filter(iTx => tokenConfig.protocols.map(p => p.address.toLowerCase()).includes(iTx.contractAddress.toLowerCase())).length > 0 && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // const curveDepositTx = internalTxs.find( iTx => (iTx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && iTx.from.toLowerCase() === this.props.account.toLowerCase()) );\n        const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n        // Check Curve\n        const curveTx = internalTxs.find(tx => (tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && (tx.to.toLowerCase() === this.props.account.toLowerCase() || tx.from.toLowerCase() === this.props.account.toLowerCase())));\n        const isCurveTx = curveTx !== undefined;\n\n        const isCurveDepositTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === curveSwapContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveRedeemTx = isCurveTx && tx.contractAddress.toLowerCase() === idleTokenAddress.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveSwapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveDepositIn = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveDepositOut = isCurveTx && tx.contractAddress.toLowerCase() === tokenConfig.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveDepositContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveZapIn = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.from.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n        const isCurveZapOut = isCurveTx && tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.to.toLowerCase() === curveZapContract.address.toLowerCase() && this.BNify(tx.value).gt(0);\n\n        const isCurveTransferOut = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapOut && !isCurveRedeemTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.from.toLowerCase() === this.props.account.toLowerCase();\n        const isCurveTransferIn = tx.contractAddress.toLowerCase() === curvePoolContract.address.toLowerCase() && !isCurveZapIn && !isCurveDepositTx && /*internalTxs[internalTxs.length-1] === tx &&*/ tx.to.toLowerCase() === this.props.account.toLowerCase();\n\n        const isSwapOutTx = !isCurveTx && !isSendTransferTx && !isWithdrawTx && !isRedeemInternalTx && !etherscanTxs[tx.hash] && tx.from.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n        const isSwapTx = !isCurveTx && !isReceiveTransferTx && !isConversionTx && !isDepositInternalTx && !etherscanTxs[tx.hash] && tx.to.toLowerCase() === this.props.account.toLowerCase() && tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase();\n\n        // if (tx.hash.toLowerCase() === '0x599a2e7b0094b0a943ffb1d520cb47598dcf3764145c33824e3b032d91ccc489'.toLowerCase()){\n        //   debugger;\n        // }\n\n        if (isSendTransferTx || isReceiveTransferTx || isMigrationTx || isDepositTx || isRedeemTx || isSwapTx || isSwapOutTx || isWithdrawTx || isConversionTx || isCurveDepositTx || isCurveRedeemTx || isCurveZapIn || isCurveZapOut || isCurveTransferOut || isCurveTransferIn || isCurveDepositIn || isCurveDepositOut) {\n\n          let action = null;\n          let hashKey = tx.hash;\n\n          if (isDepositTx) {\n            action = 'Deposit';\n          } else if (isRedeemTx) {\n            action = 'Redeem';\n          } else if (isMigrationTx || isConversionTx) {\n            action = 'Migrate';\n          } else if (isSendTransferTx) {\n            action = 'Send';\n          } else if (isReceiveTransferTx) {\n            action = 'Receive';\n          } else if (isSwapTx) {\n            action = 'Swap';\n          } else if (isSwapOutTx) {\n            action = 'SwapOut';\n          } else if (isWithdrawTx) {\n            action = 'Withdraw';\n          } else if (isCurveDepositTx) {\n            action = 'CurveIn';\n          } else if (isCurveRedeemTx) {\n            action = 'CurveOut';\n          } else if (isCurveZapIn) {\n            action = 'CurveZapIn';\n          } else if (isCurveZapOut) {\n            action = 'CurveZapOut';\n          } else if (isCurveDepositIn) {\n            action = 'CurveDepositIn';\n          } else if (isCurveDepositOut) {\n            action = 'CurveDepositOut';\n          } else if (isCurveTransferIn) {\n            action = 'CurveTransferIn';\n          } else if (isCurveTransferOut) {\n            action = 'CurveTransferOut';\n          }\n\n          let curveTokens = null;\n          if (isCurveTx) {\n            hashKey += '_' + tx.tokenSymbol;\n            curveTokens = this.fixTokenDecimals(curveTx.value, curvePoolContract.decimals);\n\n            // Add action for curve tokens transfers\n            if ((isCurveTransferIn || isCurveTransferOut)) {\n              hashKey += '_' + action;\n            }\n          }\n\n          // this.customLog('SAVE!',action);\n\n          if (tx.contractAddress.toLowerCase() === tokenConfig.idle.address.toLowerCase()) {\n            tokenDecimals = 18;\n          } else if (isCurveTx) {\n            tokenDecimals = parseInt(tx.tokenDecimal);\n          }\n\n          // Sum the value if already processed\n          if (etherscanTxs[hashKey]) {\n            // Prevent second internal tx to sum SwapOut original value\n            switch (etherscanTxs[hashKey].action) {\n              case 'SwapOut':\n                if (etherscanTxs[hashKey].action !== action && isRedeemTx) {\n                  etherscanTxs[hashKey].tokenValue = this.fixTokenDecimals(tx.value, tokenDecimals);\n                }\n                break;\n              default:\n                if (!curveTx) {\n                  const newValue = etherscanTxs[hashKey].value.plus(this.fixTokenDecimals(tx.value, tokenDecimals));\n                  etherscanTxs[hashKey].value = newValue;\n                }\n                break;\n            }\n          } else {\n            // Insert tx in curve transfers buffer\n            if (isCurveTransferIn || isCurveTransferOut) {\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTokens = this.fixTokenDecimals(tx.value, curvePoolContract.decimals);\n                curveTransfersTxs.push({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n              }\n            } else {\n              etherscanTxs[hashKey] = ({ ...tx, hashKey, token, idleToken, curveTokens, action, value: this.fixTokenDecimals(tx.value, tokenDecimals) });\n\n              // Delete curveTransfers\n              if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n                curveTransfersTxsToDelete.push(tx.hash.toLowerCase());\n              }\n\n              // Take right tokenSymbol\n              switch (action) {\n                case 'Withdraw':\n                  const iTxs = internalTxs.filter(iTx => (iTx !== tx));\n                  if (iTxs.length > 0) {\n                    const iTx = iTxs[0];\n                    etherscanTxs[hashKey].withdrawnValue = this.fixTokenDecimals(iTx.value, iTx.tokenDecimal);\n                    etherscanTxs[hashKey].tokenSymbol = iTx.tokenSymbol;\n                  }\n                  break;\n                case 'CurveIn':\n                case 'CurveOut':\n                case 'CurveZapIn':\n                case 'CurveZapOut':\n                case 'CurveDepositIn':\n                case 'CurveDepositOut':\n                  etherscanTxs[hashKey].tokenSymbol = token;\n                  break;\n                default:\n                  break;\n              }\n            }\n          }\n        }\n      });\n    });\n\n    curveTransfersTxs.forEach(tx => {\n      if (!curveTransfersTxsToDelete.includes(tx.hash.toLowerCase())) {\n        etherscanTxs[tx.hashKey] = tx;\n      }\n    });\n\n    if (processTxs) {\n      etherscanTxs = await this.processTransactions(etherscanTxs, enabledTokens, processStoredTxs);\n    }\n\n    // console.log('etherscanTxs',etherscanTxs);\n\n    return etherscanTxs;\n  }\n  addStoredTransaction = (txKey, transaction) => {\n\n    const account = this.props && this.props.account ? this.props.account : null;\n    const selectedToken = this.props && this.props.selectedToken ? this.props.selectedToken : null;\n\n    if (!account || !selectedToken || !this.props.availableTokens || !this.props.availableTokens[selectedToken]) {\n      return false;\n    }\n\n    const tokenConfig = this.props.availableTokens[selectedToken];\n    const tokenKey = tokenConfig.idle.token;\n\n    let storedTxs = this.getStoredTransactions();\n    if (!storedTxs[account]) {\n      storedTxs[account] = {};\n    }\n\n    if (!storedTxs[account][tokenKey]) {\n      storedTxs[account][tokenKey] = {};\n    }\n\n    storedTxs[account][tokenKey][txKey] = transaction;\n    this.updateStoredTransactions(storedTxs);\n  }\n  updateStoredTransactions = transactions => {\n    this.setLocalStorage('transactions', JSON.stringify(transactions));\n  }\n  /*\n  Merge storedTxs with this.props.transactions\n  */\n  getStoredTransactions = (account = null, tokenKey = null, selectedToken = null) => {\n    const storedTxs = this.getStoredItem('transactions', true, {});\n    const transactions = this.props.transactions ? { ...this.props.transactions } : {};\n    let output = storedTxs;\n\n    if (account) {\n      if (storedTxs[account]) {\n        output = storedTxs[account];\n        if (tokenKey) {\n          output = output[tokenKey] ? output[tokenKey] : {};\n\n          if (selectedToken) {\n            Object.keys(transactions).forEach(txKey => {\n              const tx = transactions[txKey];\n              if (!output[txKey] && tx.token && tx.token.toUpperCase() === selectedToken.toUpperCase()) {\n                output[txKey] = transactions[txKey];\n              }\n            });\n          }\n        }\n      } else {\n        output = {};\n      }\n    }\n\n    return output;\n  }\n  processTransactions = async (etherscanTxs, enabledTokens = [], processStoredTxs = true) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let txReceipts = {};\n    let storedTxs = this.getStoredTransactions();\n\n    // Init storedTxs for pair account-token if empty\n    if (typeof storedTxs[this.props.account] !== 'object') {\n      storedTxs[this.props.account] = {};\n    }\n\n    // Take base tokens addresses and configs\n    const baseTokensConfigs = {};\n    const baseTokensAddresses = [];\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    Object.keys(curveAvailableTokens).forEach(token => {\n      const curveTokenConfig = curveAvailableTokens[token];\n      const baseTokenConfig = this.getGlobalConfig(['stats', 'tokens', curveTokenConfig.baseToken.toUpperCase()]);\n      const baseTokenAddress = baseTokenConfig.address.toLowerCase();\n      baseTokensConfigs[baseTokenAddress] = baseTokenConfig;\n      baseTokensConfigs[baseTokenAddress].token = curveTokenConfig.baseToken;\n      baseTokensAddresses.push(baseTokenAddress);\n    });\n\n    const curveZapContract = this.getGlobalConfig(['curve', 'zapContract']);\n    // const curvePoolContract = this.getGlobalConfig(['curve','poolContract']);\n    // const curveSwapContract = this.getGlobalConfig(['curve','migrationContract']);\n    // const curveDepositContract = this.getGlobalConfig(['curve','depositContract']);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n      const idleToken = tokenConfig.idle.token;\n\n      // Init storedTxs for pair account-token if empty\n      if (typeof storedTxs[this.props.account][tokenKey] !== 'object') {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      const minedTxs = { ...storedTxs[this.props.account][tokenKey] };\n\n      const filteredTxs = Object.values(etherscanTxs).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length) {\n\n        await this.asyncForEach(filteredTxs, async (tx, index) => {\n          const txKey = `tx${tx.timeStamp}000`;\n          const storedTx = storedTxs[this.props.account][tokenKey][txKey] ? storedTxs[this.props.account][tokenKey][txKey] : tx;\n\n          let tokenPrice = null;\n\n          if (storedTx.tokenPrice && !this.BNify(storedTx.tokenPrice).isNaN()) {\n            tokenPrice = this.BNify(storedTx.tokenPrice);\n          } else {\n            tokenPrice = await this.getIdleTokenPrice(tokenConfig, tx.blockNumber, tx.timeStamp);\n            storedTx.tokenPrice = tokenPrice;\n          }\n\n          let idleTokens = this.BNify(tx.value);\n          let tokensTransfered = tokenPrice.times(idleTokens);\n\n          // Add transactionHash to storedTx\n          if (!storedTx.transactionHash) {\n            storedTx.transactionHash = tx.hash;\n          }\n\n          // Deposited\n          switch (tx.action) {\n            case 'Send':\n            case 'Receive':\n            case 'Swap':\n            case 'SwapOut':\n            case 'Migrate':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.value = tokensTransfered;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.tokenSymbol = selectedToken;\n              }\n              break;\n            case 'Deposit':\n            case 'Redeem':\n              if (!storedTx.tokenAmount) {\n                storedTx.value = idleTokens;\n                storedTx.tokenAmount = idleTokens;\n                storedTx.idleTokens = idleTokens.div(tokenPrice);\n              }\n              break;\n            case 'Withdraw':\n              if (!storedTx.tokenAmount) {\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.value = storedTx.withdrawnValue;\n              }\n              break;\n            case 'CurveIn':\n            case 'CurveOut':\n              if (!storedTx.tokenAmount) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.idleTokens = idleTokens;\n                storedTx.tokenAmount = tokensTransfered;\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n              break;\n            case 'CurveTransferIn':\n            case 'CurveTransferOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n                storedTx.tokenAmount = this.BNify(storedTx.curveTokens).times(storedTx.curveTokenPrice);\n              }\n\n              storedTx.idleTokens = this.BNify(0);\n              break;\n            case 'CurveZapIn':\n            case 'CurveZapOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              if (!storedTx.tokenAmount) {\n\n                storedTx.tokenAmount = this.BNify(0);\n                storedTx.idleTokens = this.BNify(0);\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (baseTokensAddresses.includes(log.address.toLowerCase()) && log.topics[log.topics.length - 1].toLowerCase() === `0x00000000000000000000000${curveZapContract.address.replace('x', '').toLowerCase()}`));\n\n                  this.customLog('filteredLogs', filteredLogs);\n\n                  if (filteredLogs && filteredLogs.length) {\n                    filteredLogs.forEach(log => {\n                      let tokenAmount = parseInt(log.data, 16);\n                      const baseTokensConfig = baseTokensConfigs[log.address.toLowerCase()];\n                      const tokenDecimals = baseTokensConfig.decimals;\n                      tokenAmount = this.fixTokenDecimals(tokenAmount, tokenDecimals);\n                      storedTx.tokenAmount = storedTx.tokenAmount.plus(tokenAmount);\n                      this.customLog('Add tokenAmount (' + tx.hash + ')', baseTokensConfig.token, tokenAmount.toFixed(5), storedTx.tokenAmount.toFixed(5));\n                    });\n                  }\n                }\n              }\n              break;\n            case 'CurveDepositIn':\n            case 'CurveDepositOut':\n              if (!storedTx.curveTokenPrice) {\n                const curveTokenPrice = await this.getCurveTokenPrice(tx.blockNumber);\n                storedTx.curveTokenPrice = curveTokenPrice;\n              }\n\n              storedTx.tokenAmount = this.BNify(storedTx.value);\n\n              if (!storedTx.idleTokens) {\n\n                const curveTxReceipt = txReceipts[tx.hashKey] ? txReceipts[tx.hashKey] : await (new Promise(async (resolve, reject) => {\n                  this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n                    if (err) {\n                      reject(err);\n                    }\n                    resolve(tx);\n                  });\n                }));\n\n                if (curveTxReceipt) {\n                  const curveTokenConfig = this.getGlobalConfig(['curve', 'availableTokens', idleToken]);\n                  const idleTokenDecimals = curveTokenConfig && curveTokenConfig.decimals ? curveTokenConfig.decimals : 18;\n                  const idleTokenAddress = curveTokenConfig && curveTokenConfig.address ? curveTokenConfig.address : tokenConfig.idle.address;\n\n                  // Save receipt\n                  if (!txReceipts[tx.hashKey]) {\n                    txReceipts[tx.hashKey] = curveTxReceipt;\n                  }\n\n                  const filteredLogs = curveTxReceipt.logs.filter(log => (log.address.toLowerCase() === idleTokenAddress));\n                  if (filteredLogs && filteredLogs.length) {\n                    idleTokens = parseInt(filteredLogs[0].data, 16);\n                    idleTokens = this.fixTokenDecimals(idleTokens, idleTokenDecimals);\n                    storedTx.idleTokens = idleTokens;\n                  }\n                }\n              }\n              break;\n            default:\n              break;\n          }\n\n          // Save token for future filtering\n          storedTx.token = selectedToken;\n\n          // Save processed tx\n          etherscanTxs[tx.hashKey] = storedTx;\n\n          // Store processed Tx\n          storedTxs[this.props.account][tokenKey][txKey] = storedTx;\n\n          // Remove from minted Txs\n          delete minedTxs[txKey];\n        });\n      }\n\n      // Process Stored txs\n      if (processStoredTxs) {\n        etherscanTxs = await this.processStoredTxs(etherscanTxs, [selectedToken], this.props.transactions);\n      }\n    });\n\n    // Update Stored txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  processStoredTxs = async (etherscanTxs, enabledTokens = [], txsToProcess = null) => {\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    let storedTxs = this.getStoredItem('transactions', true, {})\n\n    // Init storedTxs\n    if (!storedTxs[this.props.account]) {\n      storedTxs[this.props.account] = {};\n    }\n\n    etherscanTxs = Object.assign({}, etherscanTxs);\n\n    const networkId = this.getRequiredNetworkId();\n\n    // this.customLog('Processing stored txs',enabledTokens);\n\n    await this.asyncForEach(enabledTokens, async (selectedToken) => {\n\n      const tokenConfig = this.props.availableTokens[selectedToken];\n      const tokenKey = tokenConfig.idle.token;\n\n      // Init storedTxs\n      if (!storedTxs[this.props.account][tokenKey]) {\n        storedTxs[this.props.account][tokenKey] = {};\n      }\n\n      txsToProcess = txsToProcess && Object.values(txsToProcess).length ? txsToProcess : this.getStoredTransactions(this.props.account, tokenKey, selectedToken);\n\n      // this.customLog('txsToProcess',selectedToken,txsToProcess);\n\n      // if (!Object.values(txsToProcess).length && selectedToken==='DAI' && Object.values(this.props.transactions).length>0){\n      //   debugger;\n      // }\n\n      // Debug transactions\n      /*\n      txsToProcess['xxxxx'] = {\n        status:'success',\n        created:Date.now(),\n        method:'executeMetaTransaction',\n        token:selectedToken.toUpperCase(),\n        transactionHash:'0x000000000000000000000000000'\n      };\n      */\n\n      await this.asyncForEach(Object.keys(txsToProcess), async (txKey, i) => {\n        const tx = txsToProcess[txKey];\n\n        // Skip wrong token\n        if (!tx || !tx.token || tx.token.toUpperCase() !== selectedToken.toUpperCase() || (tx.networkId && parseInt(tx.networkId) !== parseInt(networkId))) {\n          return false;\n        }\n\n        const isStoredTx = storedTxs && storedTxs[this.props.account] && storedTxs[this.props.account][tokenKey] && storedTxs[this.props.account][tokenKey][txKey];\n\n        const allowedMethods = {\n          mintIdleToken: 'Deposit',\n          redeemIdleToken: 'Redeem',\n          migrateFromToIdle: 'Migrate',\n          mintIdleTokensProxy: 'Deposit',\n          migrateFromAaveToIdle: 'Migrate',\n          migrateFromIearnToIdle: 'Migrate',\n          executeMetaTransaction: 'Migrate',\n          migrateFromFulcrumToIdle: 'Migrate',\n          migrateFromCompoundToIdle: 'Migrate',\n        };\n        const pendingStatus = ['pending', 'started'];\n        const txSucceeded = tx.status === 'success';\n        const txPending = pendingStatus.includes(tx.status);\n        const isMetaTx = tx.method === 'executeMetaTransaction';\n        const txHash = tx.transactionHash ? tx.transactionHash : null;\n        const methodIsAllowed = Object.keys(allowedMethods).includes(tx.method);\n\n        // Skip transaction if already present in etherscanTxs with same status\n        if (txHash && etherscanTxs[txHash] && etherscanTxs[txHash].tokenPrice) {\n          return false;\n        }\n\n        if (txPending && txHash && !etherscanTxs[txHash] && methodIsAllowed && tx.params.length) {\n          // this.customLog('processStoredTxs',tx.method,tx.status,tx.params);\n          const isMigrationTx = allowedMethods[tx.method] === 'Migrate';\n          const decimals = isMigrationTx ? 18 : tokenConfig.decimals;\n          etherscanTxs[`t${tx.created}`] = {\n            status: 'Pending',\n            token: selectedToken,\n            action: allowedMethods[tx.method],\n            timeStamp: parseInt(tx.created / 1000),\n            hash: txHash ? tx.transactionHash : null,\n            tokenSymbol: isMigrationTx ? tokenConfig.idle.token : selectedToken,\n            value: tx.value ? tx.value : this.fixTokenDecimals(tx.params[0], decimals).toString()\n          };\n\n          return false;\n        }\n\n        // Skip invalid txs\n        if (!txSucceeded || !txHash || !methodIsAllowed) {\n          return false;\n        }\n\n        let realTx = tx.realTx ? tx.realTx : null;\n\n        if (!realTx) {\n          // this.customLog('loadTxs - getTransaction',tx.transactionHash);\n          realTx = await (new Promise(async (resolve, reject) => {\n            this.props.web3.eth.getTransaction(tx.transactionHash, (err, txReceipt) => {\n              if (err) {\n                reject(err);\n              }\n              resolve(txReceipt);\n            });\n          }));\n        }\n\n        // this.customLog('realTx (localStorage)',realTx);\n\n        // Skip txs from other wallets if not meta-txs\n        if (!realTx || (!isMetaTx && realTx.from.toLowerCase() !== this.props.account.toLowerCase())) {\n          return false;\n        }\n\n        const tokenPrice = await this.getIdleTokenPrice(tokenConfig, realTx.blockNumber, realTx.timeStamp);\n\n        realTx.status = 'Completed';\n        realTx.action = allowedMethods[tx.method];\n        realTx.contractAddress = tokenConfig.address;\n        realTx.timeStamp = parseInt(tx.created / 1000);\n\n        let txValue = null;\n        switch (tx.method) {\n          case 'mintIdleToken':\n          case 'mintIdleTokensProxy':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (realTx.to.toLowerCase() !== tokenConfig.idle.address.toLowerCase()) {\n              // Remove wrong contract tx\n              if (isStoredTx) {\n                delete storedTxs[this.props.account][tokenKey][txKey];\n              }\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - wrong contract');\n              return false;\n            }\n\n            txValue = tx.params ? this.fixTokenDecimals(tx.params[0], tokenConfig.decimals).toString() : 0;\n            if (!txValue) {\n              // this.customLog('Skipped deposit tx '+tx.transactionHash+' - value is zero ('+txValue+')');\n              return false;\n            }\n\n            realTx.value = txValue;\n            realTx.tokenAmount = txValue;\n            break;\n          case 'redeemIdleToken':\n            if (!tx.params) {\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n              return false;\n            }\n\n            if (!realTx.tokenPrice) {\n              const redeemedValueFixed = this.fixTokenDecimals(tx.params[0], 18).times(tokenPrice);\n              realTx.tokenPrice = tokenPrice;\n              realTx.value = redeemedValueFixed;\n              realTx.tokenAmount = redeemedValueFixed;\n            }\n            break;\n          case 'executeMetaTransaction':\n            let executeMetaTransactionReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!executeMetaTransactionReceipt) {\n              executeMetaTransactionReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!executeMetaTransactionReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = executeMetaTransactionReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            let action = null;\n            let executeMetaTransactionContractAddr = null;\n            let executeMetaTransactionInternalTransfers = [];\n            const IdleProxyMinterInfo = this.getGlobalConfig(['contract', 'deposit', 'proxyContract']);\n\n            // Handle migration tx\n            if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.migration.oldContract.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Migrate';\n              }\n            }\n\n            // Handle deposit tx\n            if (!executeMetaTransactionInternalTransfers.length) {\n              if (executeMetaTransactionReceipt.logs) {\n                executeMetaTransactionContractAddr = tokenConfig.idle.address.replace('x', '').toLowerCase();\n                executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n\n                // Handle deposit made with proxy contract\n                if (!executeMetaTransactionInternalTransfers.length && IdleProxyMinterInfo) {\n                  executeMetaTransactionContractAddr = IdleProxyMinterInfo.address.replace('x', '').toLowerCase();\n                  executeMetaTransactionInternalTransfers = executeMetaTransactionReceipt.logs.filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase() && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${executeMetaTransactionContractAddr}`; });\n                }\n              } else if (executeMetaTransactionReceipt.events) {\n                executeMetaTransactionInternalTransfers = Object.values(executeMetaTransactionReceipt.events).filter((tx) => { return tx.address.toLowerCase() === tokenConfig.address.toLowerCase(); });\n              }\n\n              if (executeMetaTransactionInternalTransfers.length) {\n                action = 'Deposit';\n              }\n            }\n\n            if (!executeMetaTransactionInternalTransfers.length) {\n              return false;\n            }\n\n            const internalTransfer = executeMetaTransactionInternalTransfers[0];\n\n            const metaTxValue = internalTransfer.data ? parseInt(internalTransfer.data, 16) : (internalTransfer.raw && internalTransfer.raw.data) ? parseInt(internalTransfer.raw.data, 16) : null;\n\n            if (!metaTxValue) {\n              return false;\n            }\n\n            const metaTxValueFixed = this.fixTokenDecimals(metaTxValue, tokenConfig.decimals);\n            realTx.action = action;\n            realTx.value = metaTxValueFixed;\n            realTx.tokenAmount = metaTxValueFixed;\n            // this.customLog(metaTxValueFixed.toString());\n            break;\n          case 'migrateFromCompoundToIdle':\n          case 'migrateFromFulcrumToIdle':\n          case 'migrateFromAaveToIdle':\n          case 'migrateFromIearnToIdle':\n          case 'migrateFromToIdle':\n            if (!tokenConfig.migration || !tokenConfig.migration.oldContract) {\n              return false;\n            }\n\n            let migrationTxReceipt = tx.txReceipt ? tx.txReceipt : null;\n\n            if (!migrationTxReceipt) {\n              migrationTxReceipt = await (new Promise(async (resolve, reject) => {\n                this.props.web3.eth.getTransactionReceipt(tx.transactionHash, (err, tx) => {\n                  if (err) {\n                    reject(err);\n                  }\n                  resolve(tx);\n                });\n              }));\n            }\n\n            if (!migrationTxReceipt) {\n              return false;\n            }\n\n            // Save txReceipt into the tx\n            if (!tx.txReceipt) {\n              tx.txReceipt = migrationTxReceipt;\n              if (isStoredTx) {\n                storedTxs[this.props.account][tokenKey][txKey] = tx;\n              }\n            }\n\n            const migrationContractAddr = tokenConfig.migration.migrationContract.address.toLowerCase().replace('x', '');\n            const contractAddress = tokenConfig.idle.address.toLowerCase().replace('x', '');\n            const migrationTxInternalTransfers = migrationTxReceipt.logs.filter((tx) => { return tx.topics.length >= 3 && tx.topics[tx.topics.length - 2].toLowerCase() === `0x00000000000000000000000${migrationContractAddr}` && tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${contractAddress}`; });\n\n            if (!migrationTxInternalTransfers.length) {\n              return false;\n            }\n\n            const migrationInternalTransfer = migrationTxInternalTransfers.pop();\n\n            const decodedLogs = this.props.web3.eth.abi.decodeLog([\n              {\n                internalType: \"uint256\",\n                name: \"_token\",\n                type: \"uint256\"\n              },\n            ], migrationInternalTransfer.data, migrationInternalTransfer.topics);\n\n            if (!decodedLogs || !decodedLogs._token) {\n              return false;\n            }\n\n            const migrationValue = decodedLogs._token;\n            const migrationValueFixed = this.fixTokenDecimals(migrationValue, tokenConfig.decimals);\n            realTx.value = migrationValueFixed.toString();\n            break;\n          default:\n            break;\n        }\n\n        realTx.tokenPrice = tokenPrice;\n        realTx.token = selectedToken;\n        realTx.tokenSymbol = selectedToken;\n        realTx.idleTokens = tokenPrice.times(this.BNify(realTx.value));\n\n        // Save processed tx\n        etherscanTxs[txHash] = realTx;\n        // etherscanTxs.push(realTx);\n\n        // Store processed Tx\n        if (!tx.realTx) {\n          tx.realTx = realTx;\n          storedTxs[this.props.account][tokenKey][txKey] = tx;\n        }\n      });\n    });\n\n    // Update Stored Txs\n    if (storedTxs) {\n      this.updateStoredTransactions(storedTxs);\n    }\n\n    return etherscanTxs;\n  }\n  saveCachedRequest = (endpoint, alias = false, data) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n    const dataToCache = {\n      data,\n      timestamp\n    };\n    return this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    // return this.setCachedDataWithLocalStorage('cachedRequests',cachedRequests);\n  }\n  getCustomAddress = () => {\n    return this.getStoredItem('customAddress', false);\n  }\n  setCustomAddress = (customAddress) => {\n    return this.setLocalStorage('customAddress', customAddress);\n  }\n  getCachedRequest = (endpoint, alias = false) => {\n    const key = alias ? alias : endpoint;\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key]) {\n      return cachedRequests[key].data;\n    }\n    return null;\n  }\n  buildSubgraphQuery = (entity,fields,params={}) => {\n    params = JSON.stringify(params);\n    params = params.substr(1).substr(0,params.length-2).replace(/\"([^\"]+)\":/g, '$1:');;\n    return `{\n      ${entity}(${params}){\n        ${fields.join(\",\")}\n      }\n    }`;\n  }\n\n  getSubgraphTrancheInfo = async (trancheAddress,startTimestamp=null,endTimestamp=null,fields=null) => {\n    const subgraphConfig = this.getGlobalConfig(['network','providers','subgraph','tranches']);\n\n    if (!subgraphConfig.enabled){\n      return false;\n    }\n\n    const currTime = parseInt(Date.now()/1000);\n    const queryParams = {\n      first:1000,\n      orderBy:\"timeStamp\",\n      orderDirection:\"asc\",\n      where:{\n        \"Tranche\":trancheAddress.toLowerCase()\n      }\n    };\n    if (startTimestamp){\n      queryParams.where.timeStamp_gte = startTimestamp;\n    }\n    if (endTimestamp){\n      queryParams.where.timeStamp_lte = endTimestamp;\n    }\n\n    fields = fields || subgraphConfig.entities.trancheInfos;\n    const subgraphQuery = this.buildSubgraphQuery('trancheInfos',fields,queryParams);\n    const postData = {\n      query:subgraphQuery\n    }\n\n    const results = await this.makePostRequest(subgraphConfig.endpoint,postData);\n    let subgraphData = this.getArrayPath(['data','data','trancheInfos'],results);\n    const lastTimestamp = subgraphData && subgraphData.length>0 ? parseInt(subgraphData[subgraphData.length-1].timeStamp) : null;\n\n    if (lastTimestamp && lastTimestamp>startTimestamp && lastTimestamp<endTimestamp && currTime-lastTimestamp>86400){\n      const subgraphData_2 = await this.getSubgraphTrancheInfo(trancheAddress,lastTimestamp+1,endTimestamp,fields);\n      if (subgraphData_2){\n        subgraphData = subgraphData.concat(subgraphData_2);\n      }\n    }\n    return subgraphData;\n  }\n  getBestTranche = async (trancheType=null,maxApy=null)=>{\n\n    const cachedDataKey = `getBestTranche_${trancheType}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n    \n    const blockInfo = await this.getBlockInfo();\n    const timestamp = blockInfo.timestamp-7200;\n    \n    const query=`{\n      trancheInfos(orderBy:\"timeStamp\", orderDirection:\"asc\", where:{timeStamp_gt:\"${timestamp}\"}){\n        id\n        apr\n        timeStamp\n        Tranche{\n          id\n          CDO{\n            id\n          }\n          type\n        }\n      }\n    }`;\n\n    const postData={\n      query\n    };\n\n    const subgraphConfig = this.getGlobalConfig(['network','providers','subgraph','tranches']);\n    let results = await this.makePostRequest(subgraphConfig.endpoint,postData);\n\n    if(!results || !this.getArrayPath(['data','data','trancheInfos'],results)){\n      return false;\n    }\n    \n    results = this.getArrayPath(['data','data','trancheInfos'],results);\n    const size = results.length;\n\n    if (!size){\n      return false;\n    }\n      \n    // Get only latest results\n    if(results[0].timetamp !== results[size-1].timeStamp){\n      results = results.splice(Math.ceil(size/2));\n    }\n\n    const trancheTypes = Object.keys(this.getGlobalConfig(['tranches']));\n    const trancheStrategyConfig = this.getGlobalConfig(['strategies','tranches']);\n\n    let output = {};\n    trancheTypes.forEach( type => {\n      output[type] = {\n        apr:null,\n        token:null,\n        protocol:null,\n      };\n    });\n    \n    // const tranches = results.filter( result => (result.Tranche.type===\"BBTranche\"));\n    Object.keys(this.props.availableTranches).forEach( protocol => {\n      Object.keys(this.props.availableTranches[protocol]).forEach( token => {\n\n        const availableTrancheInfo = this.props.availableTranches[protocol][token];\n\n        trancheTypes.forEach( type => {\n          const trancheInfo = results.find( tInfo => tInfo.Tranche.id.toLowerCase() === availableTrancheInfo[type].address.toLowerCase() );\n          if (!output[type].apr || (trancheInfo && this.BNify(trancheInfo.apr).gt(output[type].apr) && (!maxApy || this.apr2apy(this.fixTokenDecimals(trancheInfo.apr,18).div(100)).times(100).lt(maxApy)) )){\n            output[type].token = token;\n            output[type].protocol = protocol;\n            output[type].apr = trancheInfo.apr;\n          }\n        });\n\n      })\n    });\n\n    trancheTypes.forEach( type => {\n      if (!output[type].token){\n        output[type].token = trancheStrategyConfig.token;\n        output[type].protocol = trancheStrategyConfig.protocol;\n      }\n    });\n\n    if (trancheType && output[trancheType]){\n      output = output[trancheType];\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, output, 1800);\n  }\n  makePostRequest = async (endpoint, postData={}, error_callback = false, config = null) => {\n    const data = await axios\n      .post(endpoint, postData, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    return data;\n  }\n  makeRequest = async (endpoint, error_callback = false, config = null) => {\n    const data = await axios\n      .get(endpoint, config)\n      .catch(err => {\n        if (typeof error_callback === 'function') {\n          error_callback(err);\n        }\n      });\n    if (data) {\n      return data;\n    } else {\n      return axios(config);\n    }\n  }\n  makeEtherscanApiRequest = async (endpoint, keys = [], TTL = 180, apiKeyIndex = 0) => {\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[endpoint] && cachedRequests[endpoint].timestamp && timestamp - cachedRequests[endpoint].timestamp < TTL) {\n      return cachedRequests[endpoint].data;\n    }\n\n    const apiKey = keys[apiKeyIndex];\n    const data = await this.makeRequest(endpoint + '&apikey=' + apiKey);\n\n    // console.log('makeEtherscanApiRequest',endpoint+'&apikey='+apiKey,apiKeyIndex+'/'+keys.length,TTL,(data.data ? data.data.message : null),apiKeyIndex<keys.length-1);\n\n    if (data && data.data && (data.data.message.match(/^OK/) || data.data.message === \"No transactions found\")) {\n      if (TTL>0){\n        const dataToCache = {\n          data:{\n            data:data.data\n          },\n          timestamp\n        };\n        this.addKeyToCachedDataWithLocalStorage('cachedRequests', endpoint, dataToCache);\n      }\n      return data;\n    } else if (apiKeyIndex < keys.length - 1) {\n      return await this.makeEtherscanApiRequest(endpoint, keys, TTL, apiKeyIndex + 1);\n    }\n    return null;\n  }\n  makeCachedRequest = async (endpoint, TTL = 60, return_data = false, alias = false, config = null, error_callback = false) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    let cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // console.log('makeCachedRequest',endpoint,TTL,cachedRequests[key],(cachedRequests[key] ? timestamp-cachedRequests[key].timestamp : null));\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    let data = await this.makeRequest(endpoint, error_callback, config);\n\n    const dataToCache = {\n      data:{\n        data:data.data\n      },\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  makeCachedPostRequest = async (endpoint, postData={}, TTL=60, return_data=false, alias=false, config=null) => {\n    const key = alias ? alias : endpoint;\n    const timestamp = parseInt(Date.now() / 1000);\n\n    // Check if already exists\n    const cachedRequests = this.getCachedDataWithLocalStorage('cachedRequests', {});\n    // Check if it's not expired\n    if (cachedRequests && cachedRequests[key] && cachedRequests[key].timestamp && timestamp - cachedRequests[key].timestamp < TTL) {\n      return (cachedRequests[key].data && return_data ? cachedRequests[key].data.data : cachedRequests[key].data);\n    }\n\n    const data = await this.makePostRequest(endpoint, postData, false, config);\n    const dataToCache = {\n      data:{\n        data:data.data\n      },\n      timestamp\n    };\n    this.addKeyToCachedDataWithLocalStorage('cachedRequests', key, dataToCache);\n    return (data && return_data ? data.data : data);\n  }\n  getTransactionError = error => {\n    let output = 'error';\n    if (parseInt(error.code)) {\n      const errorCode = parseInt(error.code);\n      switch (errorCode) {\n        case 4001:\n          output = 'denied';\n          break;\n        default:\n          output = `error_${errorCode}`;\n          break;\n      }\n    } else if (error.message) {\n      output = error.message.split(\"\\n\")[0]; // Take just the first line of the error\n    }\n\n    return output;\n  }\n  getGlobalConfigs = () => {\n    return globalConfigs;\n  }\n  getArrayPath = (path, array) => {\n    if (!array) {\n      return null;\n    }\n    path = Object.assign([], path);\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return array[prop] ? array[prop] : null;\n      } else if (array[prop]) {\n        return this.getArrayPath(path, array[prop]);\n      }\n    }\n    return null;\n  }\n  getGlobalConfig = (path, configs = false) => {\n    configs = configs ? configs : globalConfigs;\n    if (path.length > 0) {\n      const prop = path.shift();\n      if (!path.length) {\n        return configs[prop] !== undefined ? configs[prop] : null;\n      } else if (configs[prop]) {\n        return this.getGlobalConfig(path, configs[prop]);\n      }\n    }\n    return null;\n  }\n  getAppUrl = (path) => {\n    return globalConfigs.baseURL + '/' + path;\n  }\n  getCurrentEnvironment = () => {\n    let environment = Object.keys(globalConfigs.environments).find(env => {\n      const envUrl = globalConfigs.environments[env].url;\n      return envUrl.toLowerCase() === window.location.origin.toLowerCase();\n    });\n    return environment || 'beta';\n  }\n  checkChristmas = () => {\n    return ['24','25','26','27'].includes(this.strToMoment().format('DD')) && this.strToMoment().format('MM')==='12';\n  }\n  checkUrlPolygon = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.polygonUrl.toLowerCase());\n  }\n  checkUrlOrigin = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n  }\n  checkUrlBeta = () => {\n    return window.location.origin.toLowerCase().includes(globalConfigs.betaURL.toLowerCase());\n  }\n  sendGoogleAnalyticsPageview = async (page = null) => {\n    page = page || window.location.hash.substr(1);\n    const googlePageviewInfo = this.getGlobalConfig(['analytics', 'google', 'pageView']);\n    const isOrigin = this.checkUrlOrigin();\n    if (googlePageviewInfo.enabled && isOrigin && window.ga) {\n      window.ga('set', 'page', page);\n      window.ga('send', 'pageview');\n    }\n  }\n  sendGoogleAnalyticsEvent = async (eventData, callback = null) => {\n\n    const googleEventsInfo = globalConfigs.analytics.google.events;\n    const debugEnabled = googleEventsInfo.debugEnabled;\n    const originOk = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n\n    if (googleEventsInfo.enabled && window.ga && (debugEnabled || originOk)) {\n\n      // Check if testnet postfix required\n      if (googleEventsInfo.addPostfixForTestnet) {\n        // Postfix network name if not mainnet\n        if (globalConfigs.network.requiredNetwork !== 1) {\n          const currentNetwork = globalConfigs.network.availableNetworks[globalConfigs.network.requiredNetwork];\n          eventData.eventCategory += `_${currentNetwork}`;\n          // Postfix test for debug\n        } else if (debugEnabled && !originOk) {\n          eventData.eventCategory += '_test';\n        }\n      }\n\n      await (new Promise(async (resolve, reject) => {\n        eventData.hitCallback = () => {\n          resolve(true);\n        };\n        eventData.hitCallbackFail = () => {\n          reject();\n        };\n\n        window.ga('send', 'event', eventData);\n      }));\n\n      if (typeof callback === 'function') {\n        callback();\n      }\n    }\n\n    if (typeof callback === 'function') {\n      callback();\n    }\n\n    return false;\n  }\n  createContract = async (name, address, abi) => {\n    try {\n      const contract = new this.props.web3.eth.Contract(abi, address);\n      return { name, contract };\n    } catch (error) {\n      this.customLogError(\"Could not create contract.\", name, address, error);\n    }\n    return null;\n  }\n  getWalletProvider = (defaultProvider = null) => {\n    return this.getStoredItem('walletProvider', false, defaultProvider);\n  }\n  simpleIDPassUserInfo = (userInfo, simpleID) => {\n    if (!userInfo.address && this.props.account) {\n      userInfo.address = this.props.account;\n    }\n    if (!userInfo.provider) {\n      userInfo.provider = this.getWalletProvider();\n    }\n    if (typeof userInfo.email !== 'undefined' && !userInfo.email) {\n      delete userInfo.email;\n    }\n    if (!userInfo.address) {\n      return false;\n    }\n    simpleID = simpleID ? simpleID : (this.props.simpleID ? this.props.simpleID : (typeof this.props.initSimpleID === 'function' ? this.props.initSimpleID() : null));\n    if (simpleID) {\n      return simpleID.passUserInfo(userInfo);\n    }\n    return false;\n  }\n  getEtherscanTransactionUrl = (txHash, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return txHash ? `${baseurl}/tx/${txHash}` : null;\n  }\n  getEtherscanAddressUrl = (address, requiredNetwork = null) => {\n    const defaultNetwork = this.getGlobalConfig(['network', 'requiredNetwork']);\n    requiredNetwork = requiredNetwork || this.getRequiredNetworkId();\n    const explorer = this.getGlobalConfig(['network', 'availableNetworks', requiredNetwork, 'explorer']);\n    const defaultUrl = this.getGlobalConfig(['network', 'providers', 'etherscan', 'baseUrl', defaultNetwork]);\n    const baseurl = this.getGlobalConfig(['network', 'providers', explorer, 'baseUrl', requiredNetwork]) || defaultUrl;\n    return address ? `${baseurl}/address/${address}` : null;\n  }\n  formatMoney = (amount, decimalCount = 2, decimal = \".\", thousands = \",\") => {\n    try {\n      decimalCount = Math.abs(decimalCount);\n      decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n      const negativeSign = amount < 0 ? \"-\" : \"\";\n\n      let i = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n      let j = (i.length > 3) ? i.length % 3 : 0;\n\n      return negativeSign + (j ? i.substr(0, j) + thousands : '') + i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) + (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n    } catch (e) {\n      return null;\n    }\n  }\n  getSnapshotProposals = async (activeOnly = false) => {\n    const cachedDataKey = `snapshotProposals_${activeOnly}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const whitelist = this.getGlobalConfig(['network', 'providers', 'snapshot', 'whitelist']).map(addr => addr.toLowerCase());\n    const endpoint = this.getGlobalConfig(['network', 'providers', 'snapshot', 'endpoints', 'proposals']);\n    const query = activeOnly ? this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposalsActive']) : this.getGlobalConfig(['network', 'providers', 'snapshot', 'queries', 'proposals']);\n\n    const data = {\n      query: `${query}`\n    }\n\n    let proposals = await this.makeCachedPostRequest(endpoint, data, 1440, true, false);\n    if (proposals && proposals.data && proposals.data.proposals){\n      proposals = proposals.data.proposals;\n      const currTime = parseInt(Date.now() / 1000);\n      const validProposals = [];\n      await this.asyncForEach(proposals, async (p) => {\n        if (p.end <= currTime || whitelist.includes(p.author.toLowerCase())){\n          validProposals.push(p);\n        } else {\n          const blockNumber = p.snapshot;\n          let checkedStrategies = false;\n          await this.asyncForEach(p.strategies, async (s) => {\n            if (checkedStrategies) {\n              return;\n            }\n            if (s.name === 'erc20-balance-of') {\n              const tokenName = s.params.symbol;\n              const tokenContract = this.getContractByName(tokenName);\n              if (tokenContract) {\n                const tokenBalance = await this.getTokenBalance(tokenName, tokenContract.address, true, blockNumber);\n                if (tokenBalance && this.BNify(tokenBalance).gt(100)) {\n                  checkedStrategies = true;\n                }\n              }\n            } else {\n              // checkedStrategies = true;\n            }\n          });\n\n          // Add proposal is passed token balances check\n          if (checkedStrategies) {\n            validProposals.push(p);\n          }\n        }\n      });\n\n      return this.setCachedData(cachedDataKey, validProposals);\n    }\n  }\n  getAprsFromApi = async (networkId = null) => {\n    const config = this.getGlobalConfig(['stats', 'config']);\n    if (!networkId || !this.getGlobalConfig(['network', 'enabledNetworks']).includes(networkId)) {\n      networkId = this.getRequiredNetworkId();\n    }\n    const endpointInfo = this.getGlobalConfig(['stats', 'aprs']);\n    const aprs = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n    return aprs;\n  }\n  getTokenApiData = async (address, isRisk = null, startTimestamp = null, endTimestamp = null, forceStartTimestamp = false, frequency = null, order = null, limit = null) => {\n    const networkId = this.getRequiredNetworkId();\n    // const statsConfig = this.getGlobalConfig(['stats']);\n    // const statsEnabled = statsConfig.enabled && statsConfig.availableNetworks.includes(networkId);\n    // if (!statsEnabled){\n    //   return [];\n    // }\n\n    // Check for cached data\n    const cachedDataKey = `tokenApiData_${networkId}_${address}_${isRisk}_${frequency}_${order}_${limit}`;\n    let cachedData = this.getCachedData(cachedDataKey);\n\n    if (cachedData !== null) {\n      // Check for fittable start and end time\n      const filteredCachedData = cachedData.filter(c => ((c.startTimestamp === null || (startTimestamp && c.startTimestamp <= startTimestamp)) && (c.endTimestamp === null || (endTimestamp && c.endTimestamp >= endTimestamp))))\n      if (filteredCachedData && filteredCachedData.length > 0) {\n        let filteredData = filteredCachedData.pop().data;\n        if (filteredData) {\n          filteredData = filteredData.filter(d => ((!startTimestamp || d.timestamp >= startTimestamp) && (!endTimestamp || d.timestamp <= endTimestamp)));\n          if (filteredData.length > 0) {\n            return filteredData;\n          }\n        }\n      }\n      // Initialize cachedData\n    } else {\n      cachedData = [];\n    }\n\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    let endpoint = `${apiInfo.endpoint[networkId]}${address}`;\n\n    // console.log('getTokenApiData',cachedDataKey,apiInfo,endpoint);\n\n    if (startTimestamp || endTimestamp || isRisk !== null || frequency !== null) {\n      const params = [];\n\n      if (startTimestamp && parseInt(startTimestamp)) {\n        if (forceStartTimestamp) {\n          params.push(`start=${startTimestamp}`);\n        } else {\n          const start = startTimestamp - (60 * 60 * 24 * 2); // Minus 1 day for Volume graph\n          params.push(`start=${start}`);\n        }\n      }\n\n      if (endTimestamp && parseInt(endTimestamp)) {\n        params.push(`end=${endTimestamp}`);\n      }\n\n      if (isRisk !== null) {\n        params.push(`isRisk=${isRisk}`);\n      }\n\n      if (frequency !== null && parseInt(frequency)) {\n        params.push(`frequency=${frequency}`);\n      }\n\n      if (order !== null) {\n        params.push(`order=${order}`);\n      }\n\n      if (limit !== null && parseInt(limit)) {\n        params.push(`limit=${limit}`);\n      }\n\n      if (params.length) {\n        endpoint += '?' + params.join('&');\n      }\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    let output = await this.makeRequest(endpoint, false, config);\n    if (!output) {\n      return [];\n    }\n\n    const data = output.data;\n\n    let filteredData = null;\n    if (isRisk !== null) {\n      filteredData = data.filter(d => (d.isRisk === isRisk));\n    }\n\n    cachedData.push({\n      isRisk,\n      endTimestamp,\n      startTimestamp,\n      data: filteredData,\n    });\n\n    this.setCachedData(cachedDataKey, cachedData);\n\n    return data;\n  }\n  getTokenExchangeRate = async (contractName, exchangeRateParams) => {\n    const cachedDataKey = `exchangeRate_${contractName}_${exchangeRateParams.name}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const exchangeRate = await this.genericContractCall(contractName, exchangeRateParams.name, exchangeRateParams.params);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, exchangeRate, null);\n  }\n  getTokenDecimals = async (contractName) => {\n    contractName = contractName || this.props.selectedToken;\n\n    if (!contractName) {\n      return false;\n    }\n\n    const cachedDataKey = `contractDecimals_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenConfig = this.getGlobalConfig(['stats', 'tokens', contractName.toUpperCase()]);\n    const decimals = tokenConfig && tokenConfig.decimals ? tokenConfig.decimals : await this.genericContractCall(contractName, 'decimals');\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, decimals, null);\n  }\n  getAvgApr = (aprs, allocations, totalAllocation) => {\n    if (aprs && allocations && totalAllocation) {\n      let avgApr = Object.keys(aprs).reduce((aprWeighted, protocolAddr) => {\n        const allocation = this.BNify(allocations[protocolAddr]);\n        const apr = this.BNify(aprs[protocolAddr]);\n        return this.BNify(aprWeighted).plus(allocation.times(apr));\n      }, 0);\n\n      if (avgApr) {\n        return this.BNify(avgApr).div(totalAllocation);\n      }\n    }\n    return null;\n  }\n  getFrequencySeconds = (frequency, quantity = 1) => {\n    const frequency_seconds = {\n      hour: 3600,\n      day: 86400,\n      week: 604800\n    };\n    return frequency_seconds[frequency] * quantity;\n  }\n  getIdleStakingRewardsTxs = async () => {\n    const idleTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    const feeDistributorConfig = this.getGlobalConfig(['tools', 'stake', 'props', 'availableTokens', 'IDLE', 'feeDistributor']);\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    const etherscanApiUrl = etherscanInfo.endpoints[1];\n    const etherscanEndpoint = `${etherscanApiUrl}?module=account&action=tokentx&address=${feeDistributorConfig.address}&sort=desc`;\n    const etherscanTxlist = await this.makeEtherscanApiRequest(etherscanEndpoint, etherscanInfo.keys, 3600);\n    // console.log('getIdleStakingRewardsTxs',etherscanEndpoint,etherscanTxlist);\n    if (etherscanTxlist && etherscanTxlist.data && etherscanTxlist.data.result && typeof etherscanTxlist.data.result.filter === 'function') {\n      return etherscanTxlist.data.result.filter(tx => (tx.contractAddress.toLowerCase() === idleTokenConfig.address.toLowerCase() && tx.to.toLowerCase() === feeDistributorConfig.address.toLowerCase() && this.BNify(tx.value).gt(0)));\n    }\n    return [];\n  }\n  getProtocolInfoByAddress = (addr) => {\n    return this.props.tokenConfig.protocols.find(c => c.address.toLowerCase() === addr.toLowerCase());\n  }\n  integerValue = value => {\n    return this.BNify(value).integerValue(BigNumber.ROUND_FLOOR).toFixed(0);\n  }\n  normalizeTokenDecimals = tokenDecimals => {\n    return this.BNify(`1e${tokenDecimals}`);\n  }\n  normalizeTokenAmount = (tokenBalance, tokenDecimals, round = true) => {\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    return this.BNify(tokenBalance).times(normalizedTokenDecimals).integerValue(BigNumber.ROUND_FLOOR).toFixed(0);\n  }\n  fixTokenDecimals = (tokenBalance, tokenDecimals, exchangeRate = null) => {\n    if (!tokenDecimals) {\n      return this.BNify(tokenBalance);\n    }\n    const normalizedTokenDecimals = this.normalizeTokenDecimals(tokenDecimals);\n    let balance = this.BNify(tokenBalance).div(normalizedTokenDecimals);\n    if (exchangeRate && !exchangeRate.isNaN()) {\n      balance = balance.times(exchangeRate);\n    }\n    return balance;\n  }\n  checkContractPaused = async (contractName = null) => {\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const contractPaused = await this.genericContractCallCached(contractName, 'paused').catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n    // this.customLog('checkContractPaused',this.props.tokenConfig.idle.token,contractPaused);\n    return contractPaused;\n  }\n  getStoredItem = (key, parse_json = true, return_default = null) => {\n    let output = return_default;\n    if (window.localStorage) {\n      const item = localStorage.getItem(key);\n      if (item) {\n        output = item;\n        if (parse_json) {\n          try {\n            output = JSON.parse(item);\n          } catch (err) {\n            // Reset output and clear key\n            output = null;\n            this.removeStoredItem(key);\n          }\n        }\n      }\n    }\n    if (!output) {\n      return return_default;\n    }\n    return output;\n  }\n  clearStoredData = (excludeKeys = []) => {\n    if (window.localStorage) {\n\n      if (!excludeKeys || !excludeKeys.length) {\n        return window.localStorage.clear();\n      }\n\n      const storedKeysToRemove = [];\n      for (let i = 0; i < window.localStorage.length; i++) {\n        const storedKey = window.localStorage.key(i);\n        if (!excludeKeys.includes(storedKey)) {\n          storedKeysToRemove.push(storedKey);\n        }\n      }\n\n      storedKeysToRemove.forEach((storedKey) => {\n        this.removeStoredItem(storedKey)\n      });\n    }\n  }\n  removeStoredItem = (key) => {\n    if (window.localStorage) {\n      window.localStorage.removeItem(key);\n      return true;\n    }\n    return false;\n  }\n  setLocalStorage = (key, value, stringify = false) => {\n    if (window.localStorage) {\n      try {\n        value = stringify ? JSON.stringify(value) : value;\n        window.localStorage.setItem(key, value);\n        return true;\n      } catch (error) {\n        console.error('setLocalStorage',error);\n        window.localStorage.removeItem(key);\n      }\n    }\n    return false;\n  }\n  checkRebalance = async (tokenConfig) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!tokenConfig) {\n      return false;\n    }\n\n    const lastAllocationsPromises = [];\n    const allocations = await this.genericContractCall(tokenConfig.idle.token, 'getAllocations');\n\n    if (!allocations || !allocations.length) {\n      return false;\n    }\n\n    for (let protocolIndex = 0; protocolIndex < allocations.length; protocolIndex++) {\n      const lastAllocationsPromise = new Promise(async (resolve, reject) => {\n        try {\n          const lastAllocations = await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [protocolIndex]);\n          resolve(lastAllocations);\n        } catch (error) {\n          console.log(error);\n          resolve(null);\n        }\n      });\n      lastAllocationsPromises.push(lastAllocationsPromise);\n    }\n\n    const newAllocations = await Promise.all(lastAllocationsPromises);\n\n    if (!allocations || !newAllocations) {\n      return true;\n    }\n\n    const diff = allocations.filter((alloc, index) => alloc !== newAllocations[index]);\n\n    return diff.length > 0;\n  }\n  checkMigration = async (tokenConfig, account) => {\n\n    if (!tokenConfig || !account) {\n      return false;\n    }\n\n    let migrationEnabled = false;\n    let oldContractBalance = null;\n    let oldContractTokenDecimals = null;\n    // let migrationContractApproved = false;\n    let oldContractBalanceFormatted = null;\n\n    // Check migration contract enabled and balance\n    if (tokenConfig.migration && tokenConfig.migration.enabled) {\n      const oldContractName = tokenConfig.migration.oldContract.name;\n      const oldContract = this.getContractByName(oldContractName);\n      const migrationContract = this.getContractByName(tokenConfig.migration.migrationContract.name);\n\n      // this.customLog(oldContractName,tokenConfig.migration.migrationContract.name);\n\n      if (oldContract && migrationContract) {\n        // Get old contract token decimals\n        oldContractTokenDecimals = await this.getTokenDecimals(oldContractName);\n\n        // this.customLog('Migration - token decimals',oldContractTokenDecimals ? oldContractTokenDecimals.toString() : null);\n\n        // Check migration contract approval\n        // migrationContractApproved = await this.checkMigrationContractApproved();\n\n        // this.customLog('Migration - approved',migrationContractApproved ? migrationContractApproved.toString() : null);\n\n        // Check old contractBalance\n        oldContractBalance = await this.getContractBalance(oldContractName, account);\n\n        if (oldContractBalance) {\n          oldContractBalanceFormatted = this.fixTokenDecimals(oldContractBalance, oldContractTokenDecimals);\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.BNify(oldContractBalance).gt(0);\n        }\n\n        // this.customLog('Migration - oldContractBalance',oldContractName,account,oldContractBalance,oldContractBalanceFormatted);\n      }\n    }\n\n    // Set migration contract balance\n    return {\n      migrationEnabled,\n      oldContractBalance,\n      oldContractTokenDecimals,\n      oldContractBalanceFormatted,\n    };\n  }\n\n  // getContractEvents = async (contractName, eventName, params = {}) => {\n  //   return await this.getContractPastEvents(contractName, eventName, params);\n  // }\n\n  getContractEvents = async (contractName, eventName, startBlock=0, endBlock='latest', params = {}) => {\n    const requiredNetwork = this.getRequiredNetwork();\n    const blocksPerCall = requiredNetwork.blocksPerCall || 10000;\n    const lastBlockNumber = endBlock === 'latest' ? await this.props.web3.eth.getBlockNumber() : parseInt(endBlock);\n    startBlock = parseInt(startBlock) || lastBlockNumber-blocksPerCall;\n\n    const calls = [];\n\n    if (!parseInt(startBlock) || !parseInt(lastBlockNumber)){\n      return calls;\n    }\n\n    for (var blockNumber = startBlock; blockNumber < lastBlockNumber; blockNumber+=blocksPerCall) {\n      let toBlock = Math.min(blockNumber+blocksPerCall,lastBlockNumber);\n      if (toBlock === lastBlockNumber && endBlock === 'latest'){\n        toBlock = 'latest';\n      }\n      calls.push(this.getContractPastEvents(contractName, eventName, {fromBlock: blockNumber, toBlock, ...params}));\n    }\n\n    const all_past_events = await Promise.all(calls);\n    // console.log('getContractEvents',contractName,eventName,startBlock,endBlock,params,all_past_events);\n\n    return all_past_events.reduce( (events,d) => {\n      events = events.concat(d);\n      return events;\n    },[]);\n  }\n\n  estimateMethodGasUsage = async (contractName, methodName, methodParams = [], account = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n    const contract = this.getContractByName(contractName);\n    if (contract && contract.methods[methodName]) {\n      const functionCall = contract.methods[methodName](...methodParams);\n\n      let gasPrice = null;\n      let gasLimit = null;\n\n      try {\n        [\n          gasPrice,\n          gasLimit\n        ] = await Promise.all([\n          this.props.web3.eth.getGasPrice(),\n          functionCall.estimateGas({ from: account })\n        ]);\n      } catch (error) {\n\n      }\n\n      if (gasPrice && gasLimit) {\n        return this.fixTokenDecimals(this.fixTokenDecimals(gasPrice, 9).times(gasLimit), 9);\n      }\n    }\n\n    return this.BNify(0);\n  }\n\n  executeMetaTransaction = async (contract, userAddress, signedParameters, callback, callback_receipt) => {\n    try {\n\n      // const gasLimit = await contract.methods\n      //   .executeMetaTransaction(userAddress, ...signedParameters)\n      //   .estimateGas({ from: userAddress });\n\n      // this.customLog(gasLimit);\n\n      const gasPrice = await this.props.web3.eth.getGasPrice();\n\n      const tx = contract.methods\n        .executeMetaTransaction(userAddress, ...signedParameters)\n        .send({\n          from: userAddress,\n          gasPrice\n          // gasLimit\n        });\n\n      tx.on(\"transactionHash\", function (hash) {\n        this.customLog(`Transaction sent by relayer with hash ${hash}`);\n        callback_receipt()\n      }).once(\"confirmation\", function (confirmationNumber, receipt) {\n        this.customLog(\"Transaction confirmed on chain\", receipt);\n        callback_receipt(receipt);\n      });\n    } catch (error) {\n      this.customLog(error);\n      callback(null, error);\n    }\n  }\n\n  getSignatureParameters_v4 = signature => {\n    if (!this.props.web3.utils.isHexStrict(signature)) {\n      throw new Error(\n        'Given value \"'.concat(signature, '\" is not a valid hex string.')\n      );\n    }\n    var r = signature.slice(0, 66);\n    var s = \"0x\".concat(signature.slice(66, 130));\n    var v = \"0x\".concat(signature.slice(130, 132));\n    v = this.props.web3.utils.hexToNumber(v);\n    if (![27, 28].includes(v)) v += 27;\n    return {\n      r: r,\n      s: s,\n      v: v\n    };\n  };\n\n  constructMetaTransactionMessage = (nonce, chainId, functionSignature, contractAddress) => {\n    return ethereumjsABI.soliditySHA3(\n      [\"uint256\", \"address\", \"uint256\", \"bytes\"],\n      [nonce, contractAddress, chainId, toBuffer(functionSignature)]\n    );\n  }\n\n  checkBiconomyLimits = async (userAddress) => {\n    const biconomyInfo = this.getGlobalConfig(['network', 'providers', 'biconomy']);\n    const res = await this.makeRequest(`${biconomyInfo.endpoints.limits}?userAddress=${userAddress}&apiId=${biconomyInfo.params.apiId}`, null, {\n      headers: {\n        'x-api-key': biconomyInfo.params.apiKey\n      }\n    });\n\n    if (res && res.data) {\n      return res.data;\n    }\n\n    return null;\n  }\n\n  sendTxWithPermit = async (contractName, methodName, methodParams, nonce, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    if (!contract.methods[methodName]) {\n      callback(null, 'Method not found');\n      return false;\n    }\n\n    const functionSignature = contract.methods[methodName](...methodParams).encodeABI();\n\n    try {\n      const userAddress = this.props.account;\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, methodName, methodParams.concat([nonce, r, s, v]), callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      callback(null, error);\n      return false;\n    }\n  }\n\n  buildBiconomyErc20ForwarderTx = async (contractName, tokenAddress, permitType, callData, gasLimit) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      return false;\n    }\n\n    // console.log('Build Tx ',contract._address,tokenAddress,Number(gasLimit),callData);\n\n    const buildParams = {\n      permitType,\n      data: callData,\n      token: tokenAddress,\n      to: contract._address,\n      txGas: parseInt(gasLimit)\n    };\n\n    // console.log('buildBiconomyErc20ForwarderTx',buildParams);\n\n    //Create the call data that the recipient contract will receive\n    const tx = await this.props.erc20ForwarderClient.buildTx(buildParams);\n\n    return tx;\n  }\n\n  getTransactionReceipt = async (hash) => {\n    return await (new Promise(async (resolve, reject) => {\n      this.props.web3.eth.getTransactionReceipt(hash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n\n  sendBiconomyTxWithErc20Forwarder = async (req, metaInfo, callback, callback_receipt) => {\n\n    let transactionHash = null;\n\n    try {\n      const txResponse = await this.props.erc20ForwarderClient.permitAndSendTxEIP712({ req, metaInfo });\n      transactionHash = txResponse.txHash;\n      // console.log('permitAndSendTxEIP712',transactionHash);\n    } catch (error) {\n      // console.log('permitAndSendTxEIP712 ERROR',error);\n      callback(null, true);\n      return false;\n    }\n\n    if (!transactionHash) {\n      // console.log('!transactionHash ERROR');\n      callback(null, true);\n      return false;\n    }\n\n    const tx = {\n      method: 'mintIdleToken',\n      transactionHash\n    };\n    // console.log('sendBiconomyTxWithErc20Forwarder - TX',tx);\n    callback_receipt(tx);\n\n    // fetch mined transaction receipt \n    const fetchReceiptIntervalId = window.setInterval(() => {\n      this.props.web3.eth.getTransactionReceipt(transactionHash, (err, receipt) => {\n        // console.log('sendBiconomyTxWithErc20Forwarder - RECEIPT',transactionHash,err,receipt);\n        if (!err && receipt) {\n          window.clearInterval(fetchReceiptIntervalId);\n          tx.txReceipt = receipt;\n          tx.status = !err && receipt.status ? 'success' : 'error';\n\n          callback(tx, err);\n\n          if (typeof window.updateTransaction === 'function') {\n            window.updateTransaction(tx, transactionHash, tx.status, null);\n          }\n        }\n      });\n    }, 3000);\n\n    return true;\n  }\n\n  sendBiconomyTxWithPersonalSign = async (contractName, functionSignature, callback, callback_receipt) => {\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    try {\n      const userAddress = this.props.account;\n      const nonce = await contract.methods.getNonce(userAddress).call();\n      const chainId = this.getRequiredNetworkId();\n      const messageToSign = this.constructMetaTransactionMessage(nonce, chainId, functionSignature, contract._address);\n\n      const signature = await this.props.web3.eth.personal.sign(\n        \"0x\" + messageToSign.toString(\"hex\"),\n        userAddress\n      );\n\n      const { r, s, v } = this.getSignatureParameters_v4(signature);\n\n      this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n\n      return true;\n    } catch (error) {\n      console.error(error);\n      callback(null, error);\n      return false;\n    }\n  }\n\n  signPermitEIP2612 = async (contractAddress, erc20Name, owner, spender, value, nonce, deadline, chainId) => {\n    if (chainId === undefined) {\n      const result = await this.props.web3.eth.getChainId();\n      chainId = parseInt(result);\n    }\n\n    const domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permit = [\n      { name: \"owner\", type: \"address\" },\n      { name: \"spender\", type: \"address\" },\n      { name: \"value\", type: \"uint256\" },\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"deadline\", type: \"uint256\" },\n    ];\n\n    const domainData = {\n      version: \"2\",\n      name: erc20Name,\n      chainId: chainId,\n      verifyingContract: contractAddress\n    };\n\n    const message = {\n      owner,\n      spender,\n      value,\n      nonce,\n      deadline,\n    };\n\n    const data = JSON.stringify({\n      types: {\n        EIP712Domain: domain,\n        Permit: permit,\n      },\n      primaryType: \"Permit\",\n      domain: domainData,\n      message: message\n    });\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        jsonrpc: '2.0',\n        id: Date.now().toString().substring(9),\n        method: \"eth_signTypedData_v4\",\n        params: [owner, data],\n        from: owner\n      }, (error, res) => {\n        if (error) {\n          return reject(error);\n        }\n\n        resolve(res.result);\n      });\n    });\n  }\n\n  signPermit = async (baseContractName, holder, spenderContractName, addToNonce = 0, value = null) => {\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      return false;\n    }\n\n    const result = await this.props.web3.eth.net.getId();\n    let chainId = parseInt(result);\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const permitConfig = this.getGlobalConfig(['permit', baseContractName]);\n\n    const expiry = Math.round(new Date().getTime() / 1000 + 3600);\n    let nonce = permitConfig.nonceMethod ? await baseContract.methods[permitConfig.nonceMethod](holder).call() : null;\n    if (addToNonce > 0) {\n      nonce = parseInt(nonce) + parseInt(addToNonce);\n    }\n    nonce = nonce.toString();\n\n    const Permit = permitConfig.type;\n    const EIPVersion = permitConfig.EIPVersion;\n\n    const spender = spenderContract._address;\n    const verifyingContract = baseContract._address;\n\n    const permitName = permitConfig.name || baseContractName;\n\n    const domain = {\n      chainId,\n      name: permitName,\n      verifyingContract,\n      version: permitConfig.version.toString() || '1',\n    };\n\n    let message = {};\n\n    switch (EIPVersion) {\n      case 2612:\n        const owner = holder;\n        const deadline = expiry;\n        // Unlimited allowance\n        value = value || this.integerValue(this.BNify(2).pow(256).minus(1));\n        message = {\n          value,\n          nonce,\n          owner,\n          spender,\n          deadline\n        };\n        break;\n      default:\n        message = {\n          holder,\n          nonce,\n          expiry,\n          spender,\n          allowed: true,\n        };\n        break;\n    }\n\n    const data = JSON.stringify({\n      domain,\n      message,\n      types: {\n        Permit,\n        EIP712Domain\n      },\n      primaryType: 'Permit',\n    });\n\n    // console.log('Permit',JSON.parse(data));\n\n    return new Promise((resolve, reject) => {\n      this.props.web3.currentProvider.send({\n        from: holder,\n        jsonrpc: '2.0',\n        params: [holder, data],\n        method: 'eth_signTypedData_v4',\n        id: Date.now().toString().substring(9),\n      }, (error, response) => {\n        if (error || (response && response.error)) {\n          return resolve(null);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          signedParameters.nonce = nonce;\n          signedParameters.expiry = expiry;\n          return resolve(signedParameters);\n        }\n      });\n    });\n  }\n\n  sendTxWithPermit = async (baseContractName, holder, spenderContractName, methodName, methodParams, callback, callback_receipt, callback_permit = null) => {\n\n    const baseContract = this.getContractByName(baseContractName);\n    const spenderContract = this.getContractByName(spenderContractName);\n\n    if (!baseContract || !spenderContract) {\n      callback(null, 'Contract not found');\n      return false;\n    }\n\n    const signedParameters = await this.signPermit(baseContractName, holder, spenderContractName);\n\n    if (signedParameters) {\n      const { expiry, nonce, r, s, v } = signedParameters;\n      const permitParams = [expiry, v, r, s];\n\n      const methodAbi = spenderContract._jsonInterface.find(f => f.name === methodName);\n      const useNonce = methodAbi ? methodAbi.inputs.find(i => i.name === 'nonce') : true;\n      if (!isNaN(parseInt(nonce)) && useNonce) {\n        permitParams.unshift(nonce);\n      }\n      const params = methodParams.concat(permitParams);\n      this.contractMethodSendWrapper(spenderContractName, methodName, params, callback, callback_receipt);\n    } else {\n      callback(null, 'Permit cancelled');\n    }\n  }\n\n  sendSignedTx = async (contractName, contractAddress, functionSignature, callback, callback_receipt) => {\n\n    const EIP712Domain = [\n      { name: \"name\", type: \"string\" },\n      { name: \"version\", type: \"string\" },\n      { name: \"chainId\", type: \"uint256\" },\n      { name: \"verifyingContract\", type: \"address\" }\n    ];\n\n    const MetaTransaction = [\n      { name: \"nonce\", type: \"uint256\" },\n      { name: \"from\", type: \"address\" },\n      { name: \"functionSignature\", type: \"bytes\" }\n    ];\n\n    const chainId = await this.props.web3.eth.getChainId();\n\n    const domainData = {\n      chainId,\n      version: '1',\n      name: contractName,\n      verifyingContract: contractAddress\n    };\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      callback(null, 'Contract not found');\n      return false\n    }\n\n    let userAddress = this.props.account;\n    let nonce = await contract.methods.getNonce(userAddress).call();\n    let message = {};\n    message.nonce = nonce;\n    message.from = userAddress;\n    message.functionSignature = functionSignature;\n\n    const dataToSign = JSON.stringify({\n      types: {\n        EIP712Domain,\n        MetaTransaction\n      },\n      domain: domainData,\n      primaryType: \"MetaTransaction\",\n      message\n    });\n\n    // this.customLog('dataToSign',dataToSign);\n\n    this.props.web3.currentProvider.send(\n      {\n        jsonrpc: \"2.0\",\n        id: 999999999999,\n        from: userAddress,\n        method: \"eth_signTypedData_v4\",\n        params: [userAddress, dataToSign]\n      },\n      (error, response) => {\n        if (error || (response && response.error)) {\n          return callback(null, error);\n        } else if (response && response.result) {\n          const signedParameters = this.getSignatureParameters_v4(response.result);\n          const { r, s, v } = signedParameters;\n\n          this.contractMethodSendWrapper(contractName, 'executeMetaTransaction', [userAddress, functionSignature, r, s, v], callback, callback_receipt);\n        }\n      }\n    );\n  }\n\n  checkTokenApproved = async (contractName, contractAddr, walletAddr) => {\n    const [\n      balance,\n      allowance\n    ] = await Promise.all([\n      this.getTokenBalance(contractName, walletAddr, false),\n      this.getAllowance(contractName, contractAddr, walletAddr)\n    ]);\n    this.customLog('checkTokenApproved', contractName, this.BNify(allowance).toFixed(), this.BNify(balance).toFixed(), (allowance && this.BNify(allowance).gte(this.BNify(balance))));\n    return allowance && this.BNify(allowance).gte(this.BNify(balance));\n  }\n  getAllowance = async (contractName, contractAddr, walletAddr) => {\n    if (!contractName || !contractAddr || !walletAddr) {\n      return false;\n    }\n    this.customLog('getAllowance', contractName, contractAddr, walletAddr);\n    return await this.genericContractCall(\n      contractName, 'allowance', [walletAddr, contractAddr]\n    );\n  }\n  contractMethodSendWrapperWithValue = (contractName, methodName, params, value, callback, callback_receipt, txData) => {\n    this.props.contractMethodSendWrapper(contractName, methodName, params, value, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    }, null, txData);\n  }\n  contractMethodSendWrapper = (contractName, methodName, params, callback, callback_receipt, txData = null, send_raw = false, raw_tx_data = null) => {\n    try {\n      this.props.contractMethodSendWrapper(contractName, methodName, params, null, (tx) => {\n        if (typeof callback === 'function') {\n          callback(tx);\n        }\n      }, (tx) => {\n        if (typeof callback_receipt === 'function') {\n          callback_receipt(tx);\n        }\n      }, null, txData, send_raw, raw_tx_data);\n    } catch (error) {\n      callback(null, error);\n    }\n  }\n  disableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('0') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20MaxAllowance = (contractName, address, allowance, callback, callback_receipt) => {\n    console.log('enableERC20MaxAllowance',contractName, address, allowance);\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.integerValue(allowance) // Approve for a specific allowance\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  enableERC20 = (contractName, address, callback, callback_receipt) => {\n    this.props.contractMethodSendWrapper(contractName, 'approve', [\n      address,\n      this.props.web3.utils.toTwosComplement('-1') // max uint solidity\n    ], null, (tx) => {\n      if (typeof callback === 'function') {\n        callback(tx);\n      }\n    }, (tx) => {\n      if (typeof callback_receipt === 'function') {\n        callback_receipt(tx);\n      }\n    });\n  }\n  getBestToken = async (networkId=null,availableTokens=null) => {\n    let highestValue = null;\n    let selectedToken = null;\n    if (!networkId){\n      networkId = this.getRequiredNetworkId();\n    }\n    const aprs = await this.getAprsFromApi(networkId);\n    if (aprs && aprs.lendRates){\n      aprs.lendRates.forEach( aprInfo => {\n        const tokenAPR = this.BNify(aprInfo.apy);\n        if (tokenAPR){\n          const token = aprInfo.tokenSymbol;\n          if ((!highestValue || highestValue.lt(tokenAPR)) && (!availableTokens || availableTokens[token])){\n            highestValue = tokenAPR;\n            selectedToken = token;\n          }\n        }\n      });\n    } else if (availableTokens) {\n      await this.asyncForEach(Object.keys(availableTokens),async (token) => {\n        const tokenConfig = availableTokens[token];\n        const tokenAPR = await this.getTokenAprs(tokenConfig);\n        if (tokenAPR && tokenAPR.avgApr !== null){\n          if (!highestValue || highestValue.lt(tokenAPR.avgApr)){\n            highestValue = tokenAPR.avgApr;\n            selectedToken = token;\n          }\n        }\n      });\n    }\n    return selectedToken;\n  }\n  getTrancheStakedBalance = async (contractName,walletAddr,decimals=null,methodName='usersStakes') => {\n    if (!walletAddr){\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `trancheStakedBalance_${contractName}_${walletAddr}_${decimals}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let stakedBalance = await this.genericContractCall(contractName, methodName, [walletAddr]);\n    if (stakedBalance) {\n      if (decimals) {\n        stakedBalance = this.fixTokenDecimals(stakedBalance, decimals);\n      }\n      stakedBalance = this.BNify(stakedBalance);\n\n      if (!stakedBalance.isNaN()) {\n        return this.setCachedDataWithLocalStorage(cachedDataKey, stakedBalance, 30);\n      }\n    }\n    return this.BNify(0);\n  }\n  calculateGaugeBoost = async (gaugeToken,stakedBalance,veTokenBalance=null,account=null) => {\n\n    let boost = this.BNify(1);\n\n    const veTokenConfig = this.getGlobalConfig(['tools','gauges','props','veToken']);\n    const gaugeConfig = this.getGlobalConfig(['tools','gauges','props','availableGauges',gaugeToken]);\n    if (!gaugeConfig){\n      return {\n        boost,\n        workingBalance:this.BNify(0)\n      };\n    }\n\n    // Init veToken contract\n    const veTokenContract = this.getContractByName(veTokenConfig.token);\n    if (!veTokenContract){\n      await this.props.initContract(veTokenConfig.token, veTokenConfig.address, veTokenConfig.abi);\n    }\n\n    const aggcalls = await Promise.all([\n      veTokenBalance ? this.normalizeTokenAmount(veTokenBalance,18) : (account ? this.getTokenBalance(veTokenConfig.token,account,false) : this.BNify(0)),\n      this.getTokenTotalSupply(veTokenConfig.token),\n      account ? this.genericContractCallCached(gaugeConfig.name,'working_balances',[account]) : this.BNify(0),\n      this.genericContractCallCached(gaugeConfig.name,'working_supply'),\n      this.genericContractCallCached(gaugeConfig.name,'totalSupply'),\n      account ? this.getTokenBalance(gaugeConfig.name,account) : this.BNify(0)\n    ]);\n\n    let decoded = aggcalls.map(n => this.BNify(n));\n\n    if (this.BNify(stakedBalance).isNaN()){\n      stakedBalance = this.BNify(0);\n    }\n    stakedBalance = this.BNify(stakedBalance).plus(decoded[5]);\n\n    let l = this.BNify(this.normalizeTokenAmount(stakedBalance,18));\n    let voting_balance = decoded[0];\n    let voting_total = decoded[1];\n    let working_balances = decoded[2];\n    let working_supply = decoded[3];\n    let L = decoded[4].plus(l);\n    \n    let TOKENLESS_PRODUCTION = this.BNify(40);\n    let lim = l.times(TOKENLESS_PRODUCTION).div(100);\n\n    lim = lim.plus(L.times(voting_balance).div(voting_total).times((this.BNify(100).minus(TOKENLESS_PRODUCTION)).div(100)));\n    lim = this.BNify(Math.min(l, lim));\n    \n    let old_bal = working_balances;\n    let noboost_lim = TOKENLESS_PRODUCTION.times(l).div(100);\n    let noboost_supply = working_supply.plus(noboost_lim).minus(old_bal);\n    let _working_supply = working_supply.plus(lim).minus(old_bal);\n\n    boost = this.BNify(lim).div(_working_supply).div(noboost_lim.div(noboost_supply));\n\n    return {\n      boost,\n      workingBalance:lim\n    };\n  }\n  getGaugeNextWeight = async (gaugeConfig) => {\n    // const currentGaugeTimestamp = await this.genericContractCall('GaugeController','time_weight',[gaugeConfig.address]);\n    const blockInfo = await this.getBlockInfo();\n    const nextGaugeTimestamp = parseInt(blockInfo.timestamp/604800)*604800+604800;\n    // const gaugeType = await this.genericContractCall('GaugeController','gauge_types',[gaugeConfig.address]);\n    let [\n      // totalWeight,\n      // gaugeTypeWeight,\n      // gaugePointWeight,\n      gaugeWeight\n    ] = await Promise.all([\n      // this.genericContractCall('GaugeController','points_total',[nextGaugeTimestamp]),\n      // this.genericContractCall('GaugeController','points_type_weight',[gaugeType,nextGaugeTimestamp]),\n      // this.genericContractCall('GaugeController','points_weight',[gaugeConfig.address,nextGaugeTimestamp]),\n      this.genericContractCall('GaugeController','gauge_relative_weight',[gaugeConfig.address,nextGaugeTimestamp])\n    ]);\n    // console.log('getGaugeNextWeight',gaugeConfig.name,gaugeType,nextGaugeTimestamp,totalWeight,gaugeTypeWeight,gaugePointWeight,gaugeWeight);\n\n    gaugeWeight = this.BNify(gaugeWeight);\n    if (gaugeWeight.isNaN()){\n      gaugeWeight = this.BNify(0);\n    }\n\n    return gaugeWeight;\n  }\n  getGaugeRewardsTokens = async (gaugeConfig, account=null) => {\n    const rewardTokenInfo = {};\n    const rewardTokens = gaugeConfig.rewardTokens ? gaugeConfig.rewardTokens : [];\n\n    if (rewardTokens.length){\n      const claimableTokens = account ? await this.genericContractCall(gaugeConfig.name,'claimable_tokens',[account]) : this.BNify(0);\n      rewardTokenInfo[rewardTokens[0]] = {\n        apr:null,\n        rate:this.BNify(0),\n        balance:this.BNify(claimableTokens)\n      };\n    }\n\n    // Add multiRewards tokens\n    const rewardContractAddress = await this.genericContractCallCached(gaugeConfig.name,'reward_contract');\n    if (rewardContractAddress && rewardContractAddress !== '0x0000000000000000000000000000000000000000'){\n      const multiRewardsContractName = `${gaugeConfig.name}_multireward_${rewardContractAddress}`;\n\n      const multiRewardsConfig = this.getGlobalConfig(['tools','gauges','props','contracts','MultiRewards']);\n\n      const MultirewardsAbi = multiRewardsConfig.abi;\n      await this.props.initContract(multiRewardsContractName, rewardContractAddress, MultirewardsAbi);\n\n      const tokenIndexes = Array.from(Array(multiRewardsConfig.maxRewards).keys());\n      await this.asyncForEach(tokenIndexes,async (tokenIndex) => {\n        try {\n          const rewardTokenAddress = await this.genericContractCallCachedNoMulticall(multiRewardsContractName,'rewardTokens',[tokenIndex]);\n          if (rewardTokenAddress){\n            const tokenConfig = this.getTokenConfigByAddress(rewardTokenAddress);\n            if (tokenConfig){\n              const [\n                rewardData,\n                rewardTokenBalance\n              ] = await Promise.all([\n                this.genericContractCall(multiRewardsContractName,'rewardData',[rewardTokenAddress]),\n                account ? this.genericContractCall(gaugeConfig.name,'claimable_reward_write',[account,rewardTokenAddress]) : this.BNify(0)\n              ]);\n\n              if (rewardData && this.BNify(rewardData.rewardRate).gt(0)){\n                const cdoConfig = this.props.availableTranches[gaugeConfig.protocol][gaugeConfig.underlyingToken];\n                const trancheConfig = cdoConfig.AA;\n\n                const [\n                  gaugeTotalSupply,\n                  trancheTokenPrice\n                ] = await Promise.all([\n                  this.getTokenTotalSupply(gaugeConfig.name),\n                  this.genericContractCallCached(cdoConfig.CDO.name, 'virtualPrice', [trancheConfig.address])\n                ]);\n\n                const tokensPerSecond = this.fixTokenDecimals(rewardData.rewardRate,18);\n                const gaugeUnderlyingTokenConfig = this.getTokenConfig(gaugeConfig.underlyingToken);\n                const gaugeTotalSupplyUnderlying = this.fixTokenDecimals(gaugeTotalSupply,18).times(this.fixTokenDecimals(trancheTokenPrice,18));\n\n                // console.log('gaugeTotalSupplyUnderlying',tokenConfig.token,gaugeTotalSupplyUnderlying,gaugeUnderlyingTokenConfig);\n\n                rewardTokens.push(tokenConfig.token);\n                const rewardTokenApr = await this.getGovTokenApr(tokenConfig.token,gaugeUnderlyingTokenConfig,gaugeTotalSupplyUnderlying,tokensPerSecond);\n                rewardTokenInfo[tokenConfig.token] = {\n                  balance:this.BNify(rewardTokenBalance),\n                  rate:tokensPerSecond.times(86400),\n                  ...rewardTokenApr\n                };\n              }\n            }\n          }\n        } catch (err) {\n\n        }\n      });\n    }\n\n    return rewardTokens ? rewardTokens.reduce( (rewardTokens,rewardToken) => {\n      rewardTokens[rewardToken] = this.getGlobalConfig(['stats','tokens',rewardToken.toUpperCase()]) || {};\n\n      if (!rewardTokenInfo[rewardToken]){\n        rewardTokenInfo[rewardToken] = {\n          rate:this.BNify(0),\n          balance:this.BNify(0)\n        };\n      }\n      rewardTokens[rewardToken] = {...rewardTokens[rewardToken],...rewardTokenInfo[rewardToken]};\n      return rewardTokens;\n    },{}) : null;\n  }\n  getTrancheStakingRewards = async (account, trancheConfig, methodName='expectedUserReward') => {\n    const stakingRewards = {};\n\n    await this.asyncForEach(trancheConfig.CDORewards.stakingRewards, async (tokenConfig) => {\n      const tokenGlobalConfig = this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]);\n      tokenConfig = { ...tokenConfig, ...tokenGlobalConfig };\n\n      const stakingRewardsContract = this.getContractByName(trancheConfig.CDORewards.name);\n      if (!stakingRewardsContract){\n        return;\n      }\n\n      const methodAbi = stakingRewardsContract._jsonInterface.find(f => f.name === methodName);\n\n      const methodParams = [account];\n      if (methodAbi.inputs.length>1){\n        methodParams.push(tokenConfig.address);\n      }\n\n      const tokenAmount = await this.genericContractCallCached(trancheConfig.CDORewards.name, methodName, methodParams);\n      stakingRewards[tokenConfig.token] = this.fixTokenDecimals(tokenAmount, tokenConfig.decimals);\n    });\n\n    // console.log('getTrancheStakingRewards',stakingRewards);\n\n    return stakingRewards;\n  }\n  loadTrancheFieldRaw = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens = true) => {\n    const result = await this.loadTrancheField(field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens, false);\n    return result;\n  }\n  loadTrancheField = async (field, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account = null, addGovTokens = true, formatValue = true, addTokenName = true) => {\n    let output = null;\n    let rewardsTokensInfo = null;\n    const maxPrecision = (fieldProps && parseInt(fieldProps.maxPrecision)>0) ? fieldProps.maxPrecision : 5;\n    const decimals = (fieldProps && parseInt(fieldProps.decimals)>0) ? fieldProps.decimals : (this.props.isMobile ? 2 : 3);\n    const minPrecision = (fieldProps && parseInt(fieldProps.minPrecision)>0) ? fieldProps.minPrecision : (this.props.isMobile ? 3 : 4);\n\n    const multiCallDisabled = !!tokenConfig.multiCallDisabled;\n\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n    // const stakingRewards = tokenConfig && tranche ? tokenConfig[tranche].CDORewards.stakingRewards : [];\n    // const stakingRewardsEnabled = stakingRewards.length>0 ? stakingRewards.filter( t => t.enabled ) : null;\n    // const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0 ? true : false;\n    const tokenName = this.getGlobalConfig(['stats', 'tokens', token.toUpperCase(), 'label']) || this.capitalize(token);\n\n    let gaugeConfig = this.getGlobalConfig(['tools','gauges','props','availableGauges',token]);\n    if (gaugeConfig && trancheConfig && gaugeConfig.trancheToken && gaugeConfig.trancheToken.token.toLowerCase() !== trancheConfig.token.toLowerCase()){\n      gaugeConfig = null;\n    }\n    // console.log('loadTrancheField',protocol,token,tranche,field);\n\n    const strategyConfig = tokenConfig.Strategy;\n    const show_idle_apy = internal_view && parseInt(internal_view) === 1;\n    \n    // Create Tranche Strategy contract\n    const idleStrategyAddress = await this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'strategy', 3600);\n    if (idleStrategyAddress) {\n      await this.props.initContract(strategyConfig.name, idleStrategyAddress, strategyConfig.abi);\n    }\n\n    const idleGovTokenConfig = this.getGlobalConfig(['govTokens', 'IDLE']);\n    switch (field) {\n      case 'protocolName':\n        output = (this.getGlobalConfig(['stats', 'protocols', protocol, 'label']) || this.capitalize(protocol)).toUpperCase();\n      break;\n      case 'tokenName':\n        output = tokenName;\n      break;\n      case 'trancheType':\n        output = (this.getGlobalConfig(['tranches', tranche, 'baseName']) || '').toUpperCase();\n        // console.log('trancheType',tranche,trancheConfig,output);\n      break;\n      case 'pool':\n        let poolSize = await this.genericContractCallCached(tokenConfig.CDO.name, 'getContractValue');\n        if (!this.BNify(poolSize).isNaN()) {\n          output = this.fixTokenDecimals(poolSize, tokenConfig.CDO.decimals);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision);\n          }\n        }\n      break;\n      case 'poolConverted':\n        output = await this.loadTrancheFieldRaw('pool', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens);\n        output = await this.convertTrancheTokenBalance(output, tokenConfig);\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'seniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens, formatValue, false);\n      break;\n      case 'juniorPoolNoLabel':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens, formatValue, false);\n      break;\n      case 'seniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorPool':\n        output = await this.loadTrancheField('tranchePool', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'seniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, 'AA', tokenConfig, tokenConfig.AA, account, addGovTokens);\n      break;\n      case 'juniorApy':\n        output = await this.loadTrancheField('trancheApy', fieldProps, protocol, token, 'BB', tokenConfig, tokenConfig.BB, account, addGovTokens);\n      break;\n      case 'tranchePool':\n        let [\n          totalSupply,\n          virtualPrice\n        ] = await Promise.all([\n          this.getTokenTotalSupply(trancheConfig.name, 'latest', 180),\n          this.loadTrancheField('tranchePrice', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = this.BNify(0);\n        if (!this.BNify(virtualPrice).isNaN() && !this.BNify(totalSupply).isNaN()) {\n          output = this.fixTokenDecimals(totalSupply, tokenConfig.CDO.decimals).times(virtualPrice);\n        }\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'tranchePoolConverted':\n        output = await this.loadTrancheFieldRaw('tranchePool', fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens);\n        output = await this.convertTrancheTokenBalance(output, tokenConfig);\n        if (formatValue) {\n          output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n        }\n      break;\n      case 'trancheDeposited':\n        const deposited = await this.getAmountDepositedTranche(tokenConfig, trancheConfig, account);\n        output = output || this.BNify(0);\n        output = this.BNify(deposited);\n        if (output.gt(0)) {\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        } else {\n          output = formatValue ? '-' : null;\n        }\n      break;\n      case 'trancheFee':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'fee', 3600);\n        if (output) {\n          output = this.BNify(output).div(this.BNify(100000));\n        }\n      break;\n      case 'trancheRealPrice':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name, 'tranchePrice', [trancheConfig.address]);\n        if (output) {\n          output = this.fixTokenDecimals(output, trancheConfig.decimals);\n        }\n      break;\n      case 'tranchePrice':\n        output = await this.genericContractCallCached(tokenConfig.CDO.name, 'virtualPrice', [trancheConfig.address]);\n        if (output) {\n          output = this.fixTokenDecimals(output, trancheConfig.decimals);\n        }\n      break;\n      case 'trancheStaked':\n        output = formatValue ? 'N/A' : this.BNify(0);\n        let [\n          gaugeBalance,\n          lastPrice1,\n          staked1\n        ] = await Promise.all([\n          gaugeConfig ? this.getTokenBalance(gaugeConfig.name, account) : null,\n          this.loadTrancheField(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.getTrancheStakedBalance(trancheConfig.CDORewards.name, account, trancheConfig.CDORewards.decimals,trancheConfig.functions.stakedBalance)\n        ]);\n\n        let totalStaked = this.BNify(0);\n        if (staked1){\n          totalStaked = totalStaked.plus(staked1);\n        }\n        if (gaugeBalance){\n          totalStaked = totalStaked.plus(gaugeBalance);\n        }\n\n        if (totalStaked.gt(0) && lastPrice1) {\n          output = this.BNify(totalStaked).times(lastPrice1);\n          // console.log('trancheStaked',staked1,gaugeBalance,lastPrice1.toString(),output.toString());\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemable':\n        let [\n          deposited1,\n          lastPrice\n        ] = await Promise.all([\n          this.getTokenBalance(trancheConfig.name, account),\n          this.loadTrancheFieldRaw(`tranchePrice`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (deposited1 && lastPrice) {\n          output = this.BNify(deposited1).times(lastPrice);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'trancheRedeemableWithStaked':\n        let [\n          redeemable1,\n          staked2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheRedeemable`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        output = formatValue ? '-' : null;\n        if (redeemable1 && staked2) {\n          output = this.BNify(redeemable1).plus(staked2);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsCounter':\n        let [\n          earningsStart,\n          trancheApy2,\n          deposited3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`earnings`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheBaseApy`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n        if (deposited3 && earningsStart && trancheApy2) {\n          const earningsEnd = deposited3.gt(0) ? deposited3.times(trancheApy2.div(100)).plus(earningsStart) : 0;\n          output = {\n            earningsEnd,\n            earningsStart\n          };\n        }\n      break;\n      case 'feesCounter':\n        let [\n          trancheFee,\n          earningsCounter\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheFee`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`earningsCounter`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n        ]);\n\n        if (trancheFee && earningsCounter) {\n          const feesEnd = earningsCounter.earningsEnd.times(trancheFee);\n          const feesStart = earningsCounter.earningsStart.times(trancheFee);\n\n          output = {\n            feesEnd,\n            feesStart\n          };\n        }\n      break;\n      case 'earnings':\n        const [\n          deposited4,\n          redeemable3\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        if (deposited4 && redeemable3) {\n          output = this.BNify(redeemable3).minus(deposited4);\n          if (formatValue) {\n            output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n          }\n        }\n      break;\n      case 'earningsPerc':\n        const [\n          deposited2,\n          redeemable2\n        ] = await Promise.all([\n          this.loadTrancheFieldRaw(`trancheDeposited`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens),\n          this.loadTrancheFieldRaw(`trancheRedeemableWithStaked`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n        if (!this.BNify(redeemable2).isNaN() && !this.BNify(deposited2).isNaN()){\n          output = redeemable2.div(deposited2).minus(1).times(100);\n          if (formatValue) {\n            output = output.toFixed(decimals) + '%';\n          }\n        }\n      break;\n      case 'trancheApy':\n      case 'trancheBaseApy':\n      case 'trancheApyWithTooltip':\n        let tokensApy = {};\n        let trancheApy = null;\n        output = this.BNify(0);\n        let apy = this.BNify(0);\n        let trancheApyDecimals = 2;\n        let baseApy = this.BNify(0);\n        let gaugeRewardsTokens = null;\n        let curveBaseApy = this.BNify(0);\n\n        [\n          rewardsTokensInfo,\n          gaugeRewardsTokens,\n          curveBaseApy,\n          trancheApy\n        ] = await Promise.all([\n          this.getTrancheRewardTokensInfo(tokenConfig,trancheConfig),\n          gaugeConfig ? this.getGaugeRewardsTokens(gaugeConfig) : null,\n          tokenConfig.curveApyPath ? this.getCurveAPYs(tokenConfig.curveApyPath) : null,\n          multiCallDisabled ? this.genericContractCallCachedNoMulticall(tokenConfig.CDO.name, 'getApr', [trancheConfig.address]) : this.genericContractCallCached(tokenConfig.CDO.name, 'getApr', [trancheConfig.address])\n        ]);\n\n        if (trancheApy){\n          let apr = this.fixTokenDecimals(trancheApy,tokenConfig.CDO.decimals);\n\n          apy = this.apr2apy(apr.div(100)).times(100);\n          baseApy = apy;\n\n          if (!this.BNify(curveBaseApy).isNaN()){\n            apy = apy.plus(curveBaseApy);\n            tokensApy['Curve vAPR'] = curveBaseApy;\n          }\n\n          // Add rewards tokens APRs\n          if (rewardsTokensInfo && field !== 'trancheBaseApy'){\n            Object.keys(rewardsTokensInfo).forEach( token => {\n              const rewardTokenInfo = rewardsTokensInfo[token];\n              if (!this.BNify(rewardTokenInfo.apy).isNaN() && (token !== 'IDLE' || show_idle_apy)){\n                const tokenApy = this.BNify(rewardTokenInfo.apy);\n                apy = apy.plus(tokenApy);\n                tokensApy[token] = tokenApy;\n              }\n            });\n          }\n\n          // Add gauge multirewards tokens APRs\n          if (gaugeRewardsTokens && field !== 'trancheBaseApy'){\n            Object.keys(gaugeRewardsTokens).forEach( token => {\n              const gaugeRewardTokenInfo = gaugeRewardsTokens[token];\n              if (!this.BNify(gaugeRewardTokenInfo.apy).isNaN() && (token !== 'IDLE' || show_idle_apy)){\n                const tokenApy = this.BNify(gaugeRewardTokenInfo.apy);\n                apy = apy.plus(tokenApy);\n                tokensApy[token] = tokenApy;\n              }\n            });\n          }\n\n          if (apy.gt(9999)){\n            trancheApyDecimals = 0;\n            output = this.BNify(9999);\n          } else {\n            output = this.BNify(apy);\n          }\n          if (formatValue){\n            output = output.toFixed(trancheApyDecimals)+'%';\n            if (apy.gt(9999)){\n              output = `>${output}`;\n            }\n          }\n        } else {\n          baseApy = output;\n          if (formatValue){\n            output = output.toFixed(trancheApyDecimals)+'%';\n          }\n        }\n\n        if (field === 'trancheApyWithTooltip'){\n          const formattedApy = output;\n          output = {\n            baseApy,\n            tokensApy,\n            formattedApy\n          };\n        }\n      break;\n      case 'realizedApy':\n        const [\n          firstDepositTx,\n          earningsPerc\n        ] = await Promise.all([\n          this.getTrancheFirstDepositTx(tokenConfig, trancheConfig, account),\n          this.loadTrancheFieldRaw(`earningsPerc`, fieldProps, protocol, token, tranche, tokenConfig, trancheConfig, account, addGovTokens)\n        ]);\n\n        // console.log('realizedApy',earningsPerc.toString(),firstDepositTx);\n\n        if (earningsPerc && firstDepositTx) {\n          const secondsFromFirstTx = parseInt(Date.now() / 1000) - parseInt(firstDepositTx.timeStamp);\n          output = this.BNify(earningsPerc).times(31536000).div(secondsFromFirstTx);\n\n          // console.log('realizedApy2',firstDepositTx,earningsPerc.toString(),output.toString());\n\n          if (formatValue) {\n            output = output.toFixed(2) + '%';\n          }\n        }\n      break;\n      case 'trancheIDLELastHarvest':\n      case 'trancheIDLEDistribution':\n        output = null;\n        rewardsTokensInfo = await this.getTrancheRewardTokensInfo(tokenConfig, trancheConfig);\n        if (rewardsTokensInfo && rewardsTokensInfo.IDLE) {\n          if (field === 'trancheIDLEDistribution') {\n            output = this.fixDistributionSpeed(rewardsTokensInfo.IDLE.tokensPerSecond, idleGovTokenConfig.distributionFrequency);\n            if (formatValue) {\n              output = '+'+this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE/${idleGovTokenConfig.distributionFrequency}`\n            }\n          } else {\n            output = rewardsTokensInfo.IDLE.lastAmount;\n            if (formatValue) {\n              output = '+'+this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + ` IDLE <a href=\"${this.getEtherscanTransactionUrl(rewardsTokensInfo.IDLE.latestHarvest.transactionHash)}\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" class=\"link\">(last harvest)</a>`\n            }\n          }\n        }\n\n        // console.log('loadTrancheField',field,protocol,token,tranche,rewardsTokensInfo,output);\n      break;\n      case 'AAIDLEDistribution':\n        output = this.abbreviateNumber('1234',decimals,maxPrecision,minPrecision)+` IDLE/day`;\n      break;\n      case 'trancheAPRSplitRatio':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name,'trancheAPRSplitRatio',3600);\n        output= output/1000;\n        output= output.toString()+\"/\"+(100-output).toString();\n      break;\n      case 'trancheAPRRatio':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name,'trancheAPRSplitRatio',3600);\n        output = this.BNify(output).div(1000);\n        if (tranche === 'BB'){\n          output = this.BNify(100).minus(output);\n        }\n        if (formatValue){\n          output = output.toFixed(0)+'%';\n        }\n      break;\n      case 'BBIDLEDistribution':\n        output = this.abbreviateNumber('4321', decimals, maxPrecision, minPrecision) + ` IDLE/day`;\n      break;\n      case 'statusBadge':\n      case 'trancheLimit':\n      case 'experimentalBadge':\n        output = await this.genericContractCallCachedTTL(tokenConfig.CDO.name,'limit',3600);\n        if (output){\n          output = this.fixTokenDecimals(output, tokenConfig.CDO.decimals);\n\n          if (field === 'trancheLimit'){\n            if (output.gt(0)){\n              if (formatValue) {\n                output = this.abbreviateNumber(output, decimals, maxPrecision, minPrecision) + (addTokenName ? ` ${tokenName}` : '');\n              }\n            } else {\n              output = this.BNify(0);\n              if (formatValue){\n                output = 'None';\n              }\n            }\n          }\n        }\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = {};\n        const [\n          rewardsTokens,\n          incentiveTokens\n        ] = await Promise.all([\n          this.genericContractCallCachedTTL(strategyConfig.name, 'getRewardTokens', 3600, [], {}, 'latest', false),\n          this.genericContractCallCachedTTL(tokenConfig.CDO.name, 'getIncentiveTokens', 3600, [], {}, 'latest', false)\n        ]);\n\n        // Pick Senior Tranche by default\n        if (!trancheConfig){\n          trancheConfig = tokenConfig.AA;\n        }\n\n        const stakingRewards = trancheConfig ? trancheConfig.CDORewards.stakingRewards.map(tokenConfig => (tokenConfig.address.toLowerCase())) : null;\n        const govTokens = field === 'stakingRewards' && stakingRewards ? stakingRewards : (field === 'govTokens' ? rewardsTokens : (field === 'autoFarming' && rewardsTokens ? rewardsTokens.filter(rewardTokenAddr => incentiveTokens && !incentiveTokens.map(addr => addr.toLowerCase()).includes(rewardTokenAddr.toLowerCase())) : incentiveTokens));\n\n        if (govTokens) {\n          govTokens.forEach(tokenAddress => {\n            const govTokenConfig = this.getTokenConfigByAddress(tokenAddress);\n            // Skip reward token if globally disabled\n            if (!govTokenConfig || !govTokenConfig.enabled) {\n              return;\n            }\n            // Skip reward token if not enabled for this specific tranche\n            const stakingRewardsTokenConfig = trancheConfig ? trancheConfig.CDORewards.stakingRewards.find(tokenConfig => tokenConfig.address.toLowerCase() === tokenAddress.toLowerCase()) : null;\n            if (stakingRewardsTokenConfig && !stakingRewardsTokenConfig.enabled) {\n              return;\n            }\n            output[govTokenConfig.token] = govTokenConfig;\n          });\n        }\n\n        // Add hard-coded tokens\n        if (tokenConfig[field] && typeof tokenConfig[field].forEach === 'function'){\n          tokenConfig[field].forEach( govToken => {\n            const govTokenConfig = this.getGlobalConfig(['stats','tokens',govToken.toUpperCase()]);\n            if (govTokenConfig){\n              output[govToken] = govTokenConfig;\n            }\n          });\n        }\n\n        // console.log('loadTrancheField',field,protocol,token,tranche,tokenConfig,trancheConfig,stakingRewards,govTokens,output);\n      break;\n      default:\n      break;\n    }\n\n    // console.log('loadTrancheField',field,fieldProps,protocol,token,tranche,tokenConfig,trancheConfig,account,addGovTokens,formatValue);\n\n    return output;\n  }\n  loadAssetField = async (field, token, tokenConfig, account, addGovTokens = true, addCurveApy = false) => {\n\n    let output = null;\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const internal_view = this.getQueryStringParameterByName('internal_view');\n    const showIdleAPR = internal_view && parseInt(internal_view) === 1;\n\n    // Remove gov tokens for risk adjusted strategy\n    const strategyInfo = this.getGlobalConfig(['strategies', this.props.selectedStrategy]);\n    if (addGovTokens && strategyInfo && typeof strategyInfo.addGovTokens !== 'undefined') {\n      addGovTokens = strategyInfo.addGovTokens;\n    }\n\n    // Take available tokens for gov tokens fields\n    let govTokenAvailableTokens = null;\n    if (this.props.selectedStrategy && this.props.selectedToken) {\n      const newTokenConfig = this.props.availableStrategies[this.props.selectedStrategy][this.props.selectedToken];\n      if (newTokenConfig) {\n        govTokenAvailableTokens = {};\n        govTokenAvailableTokens[newTokenConfig.token] = newTokenConfig;\n      }\n    } else if (!Object.keys(govTokens).includes(token)) {\n      govTokenAvailableTokens = {};\n      govTokenAvailableTokens[token] = tokenConfig;\n    }\n\n    switch (field) {\n      case 'amountLentCurve':\n        const [\n          curveAvgSlippage,\n          curveAvgBuyPrice,\n          curveTokenBalance,\n        ] = await Promise.all([\n          this.getCurveAvgSlippage(),\n          this.getCurveAvgBuyPrice([], account),\n          this.getCurveTokenBalance(account, true),\n        ]);\n\n        if (curveAvgBuyPrice && curveTokenBalance) {\n          output = this.BNify(curveTokenBalance).times(curveAvgBuyPrice);\n          if (curveAvgSlippage) {\n            output = output.minus(output.times(curveAvgSlippage));\n          }\n          // this.customLog('amountLentCurve',curveTokenBalance.toFixed(6),curveAvgBuyPrice.toFixed(6),curveAvgSlippage.toString(),output.toFixed(6));\n        }\n        break;\n      case 'earningsPercCurve':\n        let [amountLentCurve1, redeemableBalanceCurve] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (amountLentCurve1 && redeemableBalanceCurve && amountLentCurve1.gt(0) && redeemableBalanceCurve.gt(0)) {\n          output = redeemableBalanceCurve.div(amountLentCurve1).minus(1).times(100);\n          // this.customLog('earningsPercCurve',redeemableBalanceCurve.toFixed(6),amountLentCurve1.toFixed(6),output.toFixed(6));\n        }\n        break;\n      case 'curveApy':\n        output = await this.getCurveAPY();\n        break;\n      case 'curveAvgSlippage':\n        output = await this.getCurveAvgSlippage();\n        break;\n      case 'redeemableBalanceCurve':\n        output = await this.getCurveRedeemableIdleTokens(account);\n        // this.customLog('earningsPercCurve',output.toFixed(6));\n        break;\n      case 'redeemableBalanceCounterCurve':\n        let [\n          curveApy,\n          amountLentCurve,\n          redeemableBalanceCurveStart\n        ] = await Promise.all([\n          this.loadAssetField('curveApy', token, tokenConfig, account),\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account),\n        ]);\n\n        let redeemableBalanceCurveEnd = null;\n\n        if (redeemableBalanceCurveStart && curveApy && amountLentCurve) {\n          const earningPerYear = amountLentCurve.times(curveApy.div(100));\n          redeemableBalanceCurveEnd = redeemableBalanceCurveStart.plus(earningPerYear);\n          // this.customLog('redeemableBalanceCounterCurve',amountLentCurve.toFixed(6),redeemableBalanceCurveStart.toFixed(6),redeemableBalanceCurveEnd.toFixed(6));\n        }\n\n        output = {\n          redeemableBalanceCurveEnd,\n          redeemableBalanceCurveStart\n        };\n        break;\n      case 'earningsPerc':\n        let [amountLent1, redeemableBalance1] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (amountLent1 && redeemableBalance1 && amountLent1.gt(0)) {\n          output = redeemableBalance1.div(amountLent1).minus(1).times(100);\n        }\n        break;\n      case 'daysFirstDeposit':\n        const depositTimestamp = await this.loadAssetField('depositTimestamp', token, tokenConfig, account);\n        if (depositTimestamp) {\n          const currTimestamp = parseInt(Date.now() / 1000);\n          output = (currTimestamp - depositTimestamp) / 86400;\n        }\n        break;\n      case 'pool':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getGovTokenPool(token, govTokenAvailableTokens);\n        } else {\n          output = await this.getTokenPool(tokenConfig, addGovTokens);\n        }\n        break;\n      case 'userDistributionSpeed':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveUserDistribution(account, govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getUserDistribution(account, govTokenAvailableTokens);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n          if (output) {\n            output = this.fixDistributionSpeed(output, tokenConfig.distributionFrequency, tokenConfig.distributionMode);\n          }\n        }\n        break;\n      case 'idleDistribution':\n        const idleGovToken = this.getIdleGovToken();\n        const tokenName = this.getGlobalConfig(['governance', 'props', 'tokenName']);\n        const govTokenConfig = this.getGlobalConfig(['govTokens', tokenName]);\n        output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n\n        if (output) {\n\n          output = this.fixTokenDecimals(output, govTokenConfig.decimals);\n\n          const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n          switch (govTokenConfig.distributionFrequency) {\n            case 'day':\n              const blocksPerDay = blocksPerYear.div(365.242199);\n              output = output.times(blocksPerDay);\n              break;\n            case 'week':\n              const blocksPerWeek = blocksPerYear.div(52.1429);\n              output = output.times(blocksPerWeek);\n              break;\n            case 'month':\n              const blocksPerMonth = blocksPerYear.div(12);\n              output = output.times(blocksPerMonth);\n              break;\n            case 'year':\n              output = output.times(blocksPerYear);\n              break;\n            default:\n              break;\n          }\n        }\n        break;\n      case 'distributionSpeed':\n        const selectedTokenConfig = govTokenAvailableTokens[this.props.selectedToken];\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompDistribution(selectedTokenConfig);\n            break;\n          case 'WMATIC':\n          case 'stkAAVE':\n            output = await this.getStkAaveDistribution(selectedTokenConfig);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getSpeed(selectedTokenConfig.idle.address);\n            break;\n          default:\n            break;\n        }\n        if (output && !this.BNify(output).isNaN()) {\n          output = this.BNify(output).div(1e18);\n        }\n        break;\n      case 'apr':\n        switch (token) {\n          case 'COMP':\n            output = await this.getCompAvgApr(govTokenAvailableTokens);\n            break;\n          case 'IDLE':\n            const idleGovToken = this.getIdleGovToken();\n            output = await idleGovToken.getAvgApr(govTokenAvailableTokens);\n            break;\n          default:\n            const tokenAprs = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n            if (tokenAprs && tokenAprs.avgApr !== null) {\n              output = tokenAprs.avgApr;\n            }\n            break;\n        }\n        break;\n      case 'apy':\n        const tokenApys = await this.getTokenAprs(tokenConfig, false, addGovTokens, showIdleAPR);\n\n        output = this.BNify(0);\n\n        if (tokenApys && !this.BNify(tokenApys.avgApy).isNaN()) {\n          output = this.BNify(tokenApys.avgApy);\n\n          if (addCurveApy) {\n            const curveAPY = await this.getCurveAPY();\n            if (curveAPY) {\n              output = output.plus(curveAPY);\n            }\n          }\n        } else {\n\n        }\n\n        // console.log('apy - OUTPUT - ',output);\n        break;\n      case 'avgAPY':\n        const [\n          tokenPrice,\n          firstDepositTx,\n          days\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getFirstDepositTx([token], account),\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account)\n        ]);\n\n        if (tokenPrice && firstDepositTx && firstDepositTx[token]) {\n          const tokenPriceFirstDeposit = await this.getIdleTokenPrice(tokenConfig, firstDepositTx[token].blockNumber);\n          output = this.BNify(tokenPrice).div(tokenPriceFirstDeposit).minus(1).times(365).div(days).times(100);\n        }\n        break;\n      case 'avgAPY_old':\n        const [\n          daysFirstDeposit,\n          earningsPerc\n        ] = await Promise.all([\n          this.loadAssetField('daysFirstDeposit', token, tokenConfig, account),\n          this.loadAssetField('earningsPerc', token, tokenConfig, account), // Take earnings perc instead of earnings\n        ]);\n\n        if (daysFirstDeposit && earningsPerc) {\n          output = earningsPerc.times(365).div(daysFirstDeposit);\n        }\n        break;\n      case 'depositTimestamp':\n        const depositTimestamps = account ? await this.getDepositTimestamp([token], account) : false;\n        if (depositTimestamps && depositTimestamps[token]) {\n          output = depositTimestamps[token];\n        }\n        break;\n      case 'amountLent':\n        output = account ? await this.getAmountDeposited(tokenConfig, account) : false;\n        // console.log('amountLent - OUTPUT - ',output);\n        // const amountLents = account ? await this.getAmountLent([token],account) : false;\n        // if (amountLents && amountLents[token]){\n        //   output = amountLents[token];\n        // }\n        break;\n      case 'tokenPrice':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          const DAITokenConfig = {\n            address: this.getContractByName('DAI')._address\n          };\n          try {\n            output = await this.getUniswapConversionRate(DAITokenConfig, govTokenConfig);\n          } catch (error) {\n\n          }\n          if (!output || this.BNify(output).isNaN()) {\n            output = '-';\n          }\n        } else {\n          output = await this.getTokenPrice(tokenConfig.idle.token);\n        }\n        break;\n      case 'fee':\n        output = await this.getUserTokenFees(tokenConfig, account);\n        break;\n      case 'tokenBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          output = await this.getTokenBalance(token, account);\n          if (!output || output.isNaN()) {\n            output = '-';\n          }\n        } else {\n          let tokenBalance = account ? await this.getTokenBalance(tokenConfig.token, account) : false;\n          if (!tokenBalance || tokenBalance.isNaN()) {\n            tokenBalance = '-';\n          }\n          output = tokenBalance;\n        }\n        break;\n      case 'idleTokenBalance':\n        const idleTokenBalance = account ? await this.getTokenBalance(tokenConfig.idle.token, account) : false;\n        if (idleTokenBalance) {\n          output = idleTokenBalance;\n        }\n        break;\n      case 'redeemableBalanceCounter':\n\n        // console.log('redeemableBalanceCounter - BEFORE',token,tokenConfig,account);\n\n        let [tokenAPY1, amountLent2, redeemableBalanceStart] = await Promise.all([\n          this.loadAssetField('apy', token, tokenConfig, account, false),\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false),\n        ]);\n\n        // console.log('redeemableBalanceCounter - CALL - ',tokenAPY1,amountLent2,redeemableBalanceStart);\n\n        // debugger;\n\n        let redeemableBalanceEnd = redeemableBalanceStart;\n\n        if (redeemableBalanceStart && tokenAPY1 && amountLent2) {\n          const earningPerYear = amountLent2.times(tokenAPY1.div(100));\n          redeemableBalanceEnd = redeemableBalanceStart.plus(earningPerYear);\n        }\n\n        output = {\n          redeemableBalanceEnd,\n          redeemableBalanceStart\n        };\n\n        // console.log('redeemableBalanceCounter - OUTPUT',token,parseFloat(redeemableBalanceStart),parseFloat(redeemableBalanceEnd),output);\n        break;\n      case 'redeemableBalance':\n        if (Object.keys(govTokens).includes(token)) {\n          const govTokenConfig = govTokens[token];\n          output = await this.getGovTokenUserBalance(govTokenConfig, account, govTokenAvailableTokens);\n        } else {\n          let [\n            idleTokenPrice1,\n            idleTokenBalance2,\n            govTokensBalance\n          ] = await Promise.all([\n            this.getIdleTokenPrice(tokenConfig),\n            this.loadAssetField('idleTokenBalance', token, tokenConfig, account),\n            addGovTokens ? this.getGovTokensUserTotalBalance(account, govTokenAvailableTokens, token) : null,\n          ]);\n\n          // console.log('redeemableBalance - BEFORE - ',idleTokenBalance2,idleTokenPrice1);\n\n          if (idleTokenBalance2 && idleTokenPrice1) {\n            const tokenBalance = idleTokenBalance2.times(idleTokenPrice1);\n            let redeemableBalance = tokenBalance;\n            if (govTokensBalance && !this.BNify(govTokensBalance).isNaN()) {\n              redeemableBalance = redeemableBalance.plus(this.BNify(govTokensBalance));\n            }\n            output = redeemableBalance;\n            // console.log('redeemableBalance',token,idleTokenBalance2.toFixed(4),idleTokenPrice1.toFixed(4),tokenBalance.toFixed(4),govTokensBalance ? govTokensBalance.toFixed(4) : null,output.toFixed(4));\n          }\n          // console.log('redeemableBalance - OUTPUT - ',output);\n        }\n        break;\n      case 'earningsCurve':\n        let [amountLentCurve2, redeemableBalanceCurve1] = await Promise.all([\n          this.loadAssetField('amountLentCurve', token, tokenConfig, account),\n          this.loadAssetField('redeemableBalanceCurve', token, tokenConfig, account)\n        ]);\n\n        if (!amountLentCurve2) {\n          amountLentCurve2 = this.BNify(0);\n        }\n\n        if (!redeemableBalanceCurve1) {\n          redeemableBalanceCurve1 = this.BNify(0);\n        }\n\n        output = redeemableBalanceCurve1.minus(amountLentCurve2);\n        break;\n      case 'earnings':\n        let [amountLent, redeemableBalance2] = await Promise.all([\n          this.loadAssetField('amountLent', token, tokenConfig, account, false),\n          this.loadAssetField('redeemableBalance', token, tokenConfig, account, false)\n        ]);\n\n        if (!amountLent) {\n          amountLent = this.BNify(0);\n        }\n        if (!redeemableBalance2) {\n          redeemableBalance2 = this.BNify(0);\n        }\n\n        output = redeemableBalance2.minus(amountLent);\n\n        // console.log('earnings',token,amountLent.toFixed(5),redeemableBalance2.toFixed(5),output.toFixed(5));\n\n        if (output.lt(this.BNify(0))) {\n          output = this.BNify(0);\n        }\n        break;\n      default:\n        break;\n    }\n\n    return output;\n  }\n  getIdleTokenSupply = async (idleToken, blockNumber = 'latest') => {\n    const cachedDataKey = `idleTokenSupply_${idleToken}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let idleTokenSupply = await this.getTokenTotalSupply(idleToken, blockNumber);\n    if (idleTokenSupply) {\n      return this.BNify(idleTokenSupply);\n    }\n\n    return null;\n  }\n  getIdleTokenPriceWithFee = async (tokenConfig, account, blockNumber = 'latest') => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    let [\n      fee,\n      tokenPrice,\n      userAvgPrice\n    ] = await Promise.all([\n      this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber),\n      this.genericContractCallCached(tokenConfig.idle.token, 'userAvgPrices', [account], {}, blockNumber)\n    ]);\n\n    fee = this.BNify(fee);\n    tokenPrice = this.BNify(tokenPrice);\n    userAvgPrice = this.BNify(userAvgPrice);\n\n    if (!tokenPrice.isNaN() && !userAvgPrice.isNaN() && !fee.isNaN() && !this.BNify(userAvgPrice).eq(0) && this.BNify(tokenPrice).gt(this.BNify(userAvgPrice))) {\n      const priceWFee = this.integerValue(this.BNify(tokenPrice).minus(parseInt(fee.div(1e5).times(tokenPrice.minus(userAvgPrice)))));\n      return priceWFee;\n    }\n\n    return tokenPrice;\n  }\n  getIdleTokenPrice = async (tokenConfig, blockNumber = 'latest', timestamp = false) => {\n\n    const cachedDataKey = `idleTokenPrice_${tokenConfig.idle.token}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let decimals = tokenConfig.decimals;\n\n    let tokenPrice = await this.genericContractCallCached(tokenConfig.idle.token, 'tokenPrice', [], {}, blockNumber);\n\n    // If price is NaN try to take it from APIs\n    if (!tokenPrice && timestamp) {\n      const isRisk = this.props.selectedStrategy === 'risk';\n      const startTimestamp = parseInt(timestamp) - (60 * 60);\n      const endTimestamp = parseInt(timestamp) + (60 * 60);\n      const tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, endTimestamp, true);\n\n      let beforePrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      let afterPrice = {\n        data: null,\n        timeDiff: null\n      };\n\n      tokenData.forEach(d => {\n        const timeDiff = Math.abs(parseInt(d.timestamp) - parseInt(timestamp));\n        if (parseInt(d.timestamp) < parseInt(timestamp) && (!beforePrice.timeDiff || timeDiff < beforePrice.timeDiff)) {\n          beforePrice.timeDiff = timeDiff;\n          beforePrice.data = d;\n        }\n\n        if (parseInt(d.timestamp) > parseInt(timestamp) && !afterPrice.timeDiff) {\n          afterPrice.timeDiff = timeDiff;\n          afterPrice.data = d;\n        }\n      });\n\n      // Take before and after and calculate correct tokenPrice based from price acceleration\n      if (beforePrice.data && afterPrice.data) {\n        const tokenPriceBefore = this.BNify(beforePrice.data.idlePrice);\n        const tokenPriceAfter = this.BNify(afterPrice.data.idlePrice);\n        const timeBefore = this.BNify(beforePrice.data.timestamp);\n        const timeAfter = this.BNify(afterPrice.data.timestamp);\n        const timeDiff = timeAfter.minus(timeBefore);\n        const priceDiff = tokenPriceAfter.minus(tokenPriceBefore);\n        const priceAcceleration = priceDiff.div(timeDiff);\n        const timeDiffFromBeforePrice = this.BNify(timestamp).minus(timeBefore);\n        tokenPrice = tokenPriceBefore.plus(priceAcceleration.times(timeDiffFromBeforePrice));\n      }\n    }\n\n    // Fix token price decimals\n    if (tokenPrice && !this.BNify(tokenPrice).isNaN()) {\n      tokenPrice = this.fixTokenDecimals(tokenPrice, decimals);\n    }\n\n    // If price is NaN then return 1\n    if (!tokenPrice || this.BNify(tokenPrice).isNaN() || this.BNify(tokenPrice).lt(1)) {\n      tokenPrice = this.BNify(1);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice);\n  }\n  clearCachedData = (clear_all = false) => {\n    if (this.props.clearCachedData && typeof this.props.clearCachedData === 'function') {\n      // this.customLog('clearCachedData',this.props.clearCachedData,typeof this.props.clearCachedData === 'function');\n      this.props.clearCachedData(null, clear_all);\n    } else {\n      // this.customLog('clearCachedData - Function not found!');\n    }\n    return false;\n  }\n  /*\n  Cache data locally for 3 minutes\n  */\n  setCachedData = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL);\n    }\n    return data;\n  }\n  addKeyToCachedDataWithLocalStorage = (parent_key, key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function' && JSON.stringify(data).length<=3000000) {\n      const cachedData = this.getCachedDataWithLocalStorage(parent_key, {});\n      cachedData[key] = data;\n      this.props.setCachedData(parent_key, cachedData, TTL, true);\n    }\n    return data;\n  }\n  setCachedDataWithLocalStorage = (key, data, TTL = 180) => {\n    if (this.props.setCachedData && typeof this.props.setCachedData === 'function') {\n      this.props.setCachedData(key, data, TTL, true);\n    }\n    return data;\n  }\n  getCachedDataWithLocalStorage = (key, defaultValue = null) => {\n    return this.getCachedData(key, defaultValue, true);\n  }\n  getCachedData = (key, defaultValue = null, useLocalStorage = false) => {\n    let cachedData = null;\n    key = key.toLowerCase();\n    const requiredNetworkId = this.getRequiredNetworkId();\n    // Get cache from current session\n    if (this.props.cachedData && this.props.cachedData[requiredNetworkId] && this.props.cachedData[requiredNetworkId][key]) {\n      cachedData = this.props.cachedData[requiredNetworkId][key];\n      // Get cache from local storage\n    } else if (useLocalStorage) {\n      const allCachedData = this.getStoredItem('cachedData');\n      if (allCachedData && allCachedData[requiredNetworkId] && allCachedData[requiredNetworkId][key]) {\n        cachedData = allCachedData[requiredNetworkId][key];\n      }\n    }\n\n    const cachedDataValid = cachedData && cachedData.data && (cachedData.expirationDate === null || parseInt(cachedData.expirationDate) >= parseInt(Date.now()/1000));\n\n    // console.log(`getCachedDataWithLocalStorage - ${requiredNetworkId} - ${key}`,cachedData,cachedDataValid);\n    // if (!cachedDataValid){\n    //   console.log('getCachedData - NOT VALID - ',key,(cachedData ? cachedData.expirationDate-parseInt(Date.now()/1000) : null));\n    // }\n\n    if (cachedDataValid) {\n      return cachedData.data;\n    }\n    return defaultValue;\n  }\n  getUserPoolShare = async (walletAddr, tokenConfig) => {\n    const [\n      idleTokensBalance,\n      idleTokensTotalSupply\n    ] = await Promise.all([\n      this.getTokenBalance(tokenConfig.idle.token, walletAddr, false),\n      this.getTokenTotalSupply(tokenConfig.idle.token)\n    ]);\n\n    let userShare = this.BNify(0);\n    if (this.BNify(idleTokensBalance).gt(0) && this.BNify(idleTokensTotalSupply).gt(0)) {\n      userShare = this.BNify(idleTokensBalance).div(this.BNify(idleTokensTotalSupply));\n    }\n\n    return userShare;\n  }\n  openWindow = (url) => {\n    return window.open(url, '_blank', 'noopener');\n  }\n  getActiveCoverages = async (account = null) => {\n    const activeCoverages = [];\n    account = account || this.props.account;\n\n    if (!account) {\n      return activeCoverages;\n    }\n\n    const currTimestamp = parseInt(Date.now() / 1000);\n\n    const coverProtocolConfig = this.getGlobalConfig(['tools', 'coverProtocol']);\n    if (coverProtocolConfig.enabled) {\n      await this.asyncForEach(coverProtocolConfig.props.coverages, async (coverage) => {\n        const token = 'Claim';\n        const coverageTokens = coverage.tokens;\n        const tokenConfig = coverageTokens[token];\n        // Initialize coverage contract\n        await this.props.initContract(tokenConfig.name, tokenConfig.address, tokenConfig.abi);\n        // Take balance\n        const balance = await this.getTokenBalance(tokenConfig.name, account);\n        if (balance && balance.gt(0)) {\n          const actionLabel = 'File Claim';\n          const collateral = coverage.collateral;\n          const protocolName = coverProtocolConfig.label;\n          const protocolImage = coverProtocolConfig.image;\n          const actionUrl = coverProtocolConfig.fileClaimUrl;\n          const status = coverage.expirationTimestamp <= currTimestamp ? 'Expired' : 'Active';\n          const actionDisabled = status === 'Expired';\n          const expirationDate = moment(coverage.expirationTimestamp * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n          activeCoverages.push({\n            token,\n            status,\n            balance,\n            actionUrl,\n            collateral,\n            actionLabel,\n            protocolName,\n            protocolImage,\n            expirationDate,\n            actionDisabled\n          });\n        }\n      });\n    }\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n    if (nexusMutualConfig.enabled) {\n      const nexusMutualCoverages = await this.getNexusMutualCoverages(account);\n      nexusMutualCoverages.forEach(coverage => {\n        const actionLabel = 'Claim';\n        const balance = coverage.sumAssured;\n        const token = coverage.coverAssetConfig.token;\n        const collateral = coverage.yieldTokenConfig.token;\n        const portfolioCoverage = coverage.portfolioCoverage;\n        const collateralIcon = `images/tokens/${collateral}.svg`;\n        const actionDisabled = !coverage.incident && !coverage.claimId;\n        const protocolName = this.getGlobalConfig(['insurance', 'nexusMutual', 'label']);\n        const protocolImage = this.getGlobalConfig(['insurance', 'nexusMutual', 'image']);\n        const protocolImageDark = this.getGlobalConfig(['insurance', 'nexusMutual', 'imageDark']);\n        const expirationDate = moment(coverage.coverDetails.validUntil * 1000).utc().format('YYYY-MM-DD HH:mm:ss') + ' UTC';\n        const status = coverage.claimId ? 'Claimed' : parseInt(coverage.coverDetails.validUntil) <= currTimestamp ? 'Expired' : 'Active';\n        const actionUrl = `${window.location.origin}/#${this.getGlobalConfig(['dashboard', 'baseRoute'])}/tools/${nexusMutualConfig.route}/${coverage.yieldTokenConfig.token}/claim`;\n        activeCoverages.push({\n          token,\n          status,\n          balance,\n          actionUrl,\n          collateral,\n          actionLabel,\n          protocolName,\n          protocolImage,\n          expirationDate,\n          actionDisabled,\n          collateralIcon,\n          portfolioCoverage,\n          protocolImageDark\n        });\n      });\n    }\n\n    return activeCoverages;\n  }\n  getNexusMutualCoverages = async (account) => {\n    const nexusMutualConfig = this.getGlobalConfig(['tools', 'nexusMutual']);\n\n    const fromBlock = nexusMutualConfig.directProps.startBlock;\n    const feeDistributorConfig = nexusMutualConfig.directProps.contractInfo;\n    const incidentsInfo = nexusMutualConfig.directProps.incidentsInfo;\n\n    await Promise.all([\n      this.props.initContract(incidentsInfo.name, incidentsInfo.address, incidentsInfo.abi),\n      this.props.initContract(feeDistributorConfig.name, feeDistributorConfig.address, feeDistributorConfig.abi),\n    ]);\n\n    const [\n      coverBoughtEvents,\n      claimSubmittedEvents,\n    ] = await Promise.all([\n      this.getContractEvents(feeDistributorConfig.name, 'CoverBought', fromBlock, 'latest', {filter: { buyer: account } }),\n      this.getContractEvents(feeDistributorConfig.name, 'ClaimSubmitted', fromBlock, 'latest', {filter: { buyer: account } })\n    ]);\n\n    const nexusMutualCoverages = [];\n\n    await this.asyncForEach(coverBoughtEvents, async (cover) => {\n      // coverBoughtEvents.forEach( cover => {\n      const coverId = parseInt(cover.returnValues.coverId);\n      const claimSubmittedEvent = claimSubmittedEvents.find(claim => parseInt(claim.returnValues.coverId) === coverId);\n      const [\n        coverDetails,\n        incidentEvents\n      ] = await Promise.all([\n        this.genericContractCall(feeDistributorConfig.name, 'getCover', [coverId]),\n        this.getContractEvents(incidentsInfo.name, 'IncidentAdded', cover.blockNumber, 'latest', { filter: { productId: cover.contractAddress } })\n      ]);\n\n      if (!coverDetails) {\n        return false;\n      }\n\n      // Check if the cover matches any incidents\n      const matchedIncidents = incidentEvents ? incidentEvents.filter(incident => {\n        return incident.returnValues.productId === coverDetails.contractAddress &&\n          this.BNify(incident.blockNumber).gt(cover.blockNumber)  &&\n          this.BNify(incident.returnValues.incidentDate).lt(coverDetails.validUntil) &&\n          parseInt(coverDetails.validUntil) + nexusMutualConfig.directProps.yieldTokenCoverGracePeriod >= Date.now() / 1000\n      }) : [];\n\n      // If multiple incidents match, return the one with the highest priceBefore\n      const matchedIncident = matchedIncidents.reduce((prev, curr) => {\n        if (!prev) {\n          return curr;\n        }\n\n        if (this.BNify(curr.returnValues.priceBefore).gt(prev.returnValues.priceBefore)) {\n          return curr;\n        }\n        return prev;\n      }, null);\n\n      const yieldTokenConfig = Object.values(nexusMutualConfig.props.availableTokens).find(tokenConfig => tokenConfig.address.toLowerCase() === coverDetails.contractAddress.toLowerCase());\n      const sumAssured = this.fixTokenDecimals(coverDetails.sumAssured, yieldTokenConfig.decimals);\n      const coverAssetConfig = Object.values(yieldTokenConfig.underlying).find(underlyingConfig => underlyingConfig.address.toLowerCase() === coverDetails.coverAsset.toLowerCase());\n      const expiryDate = this.strToMoment(coverDetails.validUntil * 1000).format('YYYY-MM-DD');\n\n      const claimId = claimSubmittedEvent ? claimSubmittedEvent.returnValues.claimId : null;\n      const payoutOutcome = claimId ? await this.genericContractCall(feeDistributorConfig.name, 'getPayoutOutcome', [claimId]) : null;\n      const label = `${yieldTokenConfig.name} - ${sumAssured.toFixed(4)} ${coverAssetConfig.token} - Exp. ${expiryDate}`;\n      const value = coverId;\n\n      let claimedAmount = null;\n      if (claimSubmittedEvent) {\n        const claimTxReceipt = await this.getTransactionReceipt(claimSubmittedEvent.transactionHash);\n        const claimedAmountLog = claimTxReceipt ? claimTxReceipt.logs.find(log => log.address.toLowerCase() === coverAssetConfig.address.toLowerCase()) : null;\n        claimedAmount = claimedAmountLog ? this.fixTokenDecimals(parseInt(claimedAmountLog.data, 16), coverAssetConfig.decimals) : this.BNify(0);\n      }\n\n      const claimableAmount = this.fixTokenDecimals(coverDetails.sumAssured, coverAssetConfig.decimals);\n\n      const claimablePrice = matchedIncident ? this.BNify(matchedIncident.returnValues.priceBefore).times(0.9) : this.BNify(0);\n      const maxCoveredAmount = claimablePrice.gt(0) ? this.BNify(coverDetails.sumAssured).div(claimablePrice) : this.BNify(0);\n      const coveredTokenAmount = this.normalizeTokenAmount(maxCoveredAmount, coverAssetConfig.decimals);\n\n      let [\n        tokenPrice,\n        idleTokenBalance\n      ] = await Promise.all([\n        this.getTokenPrice(yieldTokenConfig.token),\n        this.getTokenBalance(yieldTokenConfig.token, account, false)\n      ]);\n\n      tokenPrice = this.fixTokenDecimals(tokenPrice, yieldTokenConfig.decimals);\n      idleTokenBalance = this.fixTokenDecimals(idleTokenBalance, yieldTokenConfig.decimals);\n      const tokenBalance = idleTokenBalance.times(tokenPrice);\n      const portfolioCoverage = tokenBalance.gt(0) ? sumAssured.div(tokenBalance).times(100).toFixed(2) + '%' : 'N/A';\n\n      // console.log('portfolioCoverage',sumAssured.toFixed(),idleTokenBalance.toFixed(),tokenPrice.toFixed(),portfolioCoverage.toFixed());\n\n      nexusMutualCoverages.push({\n        label,\n        value,\n        claimId,\n        sumAssured,\n        coverDetails,\n        claimedAmount,\n        payoutOutcome,\n        claimableAmount,\n        maxCoveredAmount,\n        yieldTokenConfig,\n        coverAssetConfig,\n        portfolioCoverage,\n        coveredTokenAmount,\n        incident: matchedIncident ? { ...matchedIncident, id: incidentEvents.findIndex(x => x.date === matchedIncident.date) } : null\n      });\n    });\n\n    return nexusMutualCoverages;\n  }\n  getBatchedDepositExecutions = async (contractAddress) => {\n    const requiredNetwork = this.getRequiredNetworkId();\n    const etherscanInfo = this.getGlobalConfig(['network', 'providers', 'etherscan']);\n    if (etherscanInfo.enabled && etherscanInfo.endpoints[requiredNetwork]) {\n      const etherscanApiUrl = etherscanInfo.endpoints[requiredNetwork];\n      const etherscanEndpoint = `${etherscanApiUrl}?&apikey=${etherscanInfo.key}&module=account&action=tokentx&address=${contractAddress}&sort=desc`;\n      const transactions = await this.makeCachedRequest(etherscanEndpoint, 1800, true);\n      if (transactions && typeof transactions.result === 'object') {\n        return transactions.result.filter(tx => tx.from === '0x0000000000000000000000000000000000000000' && tx.to.toLowerCase() === contractAddress.toLowerCase());\n      }\n    }\n    return null;\n  }\n  getBatchedDeposits = async (account = null, filter_by_status = null) => {\n    account = account || this.props.account;\n    if (!account) {\n      return null;\n    }\n\n    const batchDepositConfig = this.getGlobalConfig(['tools', 'batchDeposit']);\n    if (!batchDepositConfig.enabled) {\n      return null;\n    }\n\n    const cachedDataKey = `batchedDeposits_${account}_${filter_by_status}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const batchedDeposits = {};\n    const availableTokens = batchDepositConfig.props.availableTokens;\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const migrationContract = tokenConfig.migrationContract;\n      await this.props.initContract(migrationContract.name, migrationContract.address, migrationContract.abi);\n      const currBatchIndex = await this.genericContractCall(migrationContract.name, 'currBatch');\n      for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex); batchIndex++) {\n        let [\n          batchExecutions,\n          batchTotal,\n          batchRedeem,\n          batchDeposit\n        ] = await Promise.all([\n          this.getBatchedDepositExecutions(migrationContract.address),\n          this.genericContractCall(migrationContract.name, 'batchTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchRedeemedTotals', [batchIndex]),\n          this.genericContractCall(migrationContract.name, 'batchDeposits', [this.props.account, batchIndex])\n        ]);\n\n        console.log(`Batch #${batchIndex} - ${batchTotal} - ${batchRedeem} - ${batchDeposit}`);\n\n        let batchTotals = null;\n        let batchRedeems = null;\n        let batchDeposits = null;\n        if (batchTotal && batchTotal !== null) {\n          batchTotals = this.fixTokenDecimals(batchTotal, tokenConfig.decimals);\n        }\n        if (batchDeposit !== null) {\n          batchRedeem = this.fixTokenDecimals(batchRedeem, 18);\n          batchDeposit = this.fixTokenDecimals(batchDeposit, tokenConfig.decimals);\n          if (batchDeposit.gt(0)) {\n            batchDeposits = batchDeposit;\n\n            // Calculate redeemable idleTokens\n            batchRedeems = batchDeposit.times(batchRedeem).div(batchTotals);\n            if (batchRedeems.gt(batchRedeem)) {\n              batchRedeems = batchRedeem;\n            }\n\n            const status = batchIndex < currBatchIndex && batchRedeems.gt(0) ? 'executed' : 'pending';\n\n            if (filter_by_status !== null && filter_by_status.toLowerCase() !== status) {\n              return;\n            }\n\n            const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n\n            batchedDeposits[token] = {\n              status,\n              batchTotals,\n              batchRedeems,\n              batchDeposits,\n              lastExecution\n            };\n          }\n        }\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, batchedDeposits);\n  }\n  getETHBalance = async (walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `ethBalance_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    let tokenBalance = await this.props.web3.eth.getBalance(walletAddr);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance);\n        } else {\n          return tokenBalance;\n        }\n      }\n    }\n    return null;\n  }\n  getTokenBalance = async (contractName, walletAddr, fixDecimals = true, blockNumber = 'latest') => {\n    if (!walletAddr) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenBalance_${contractName}_${walletAddr}_${fixDecimals}_${blockNumber}`;\n    if (blockNumber !== 'latest') {\n      const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n      if (cachedData && !this.BNify(cachedData).isNaN()) {\n        return this.BNify(cachedData);\n      }\n    }\n\n    // Init token contract if not initialized yet\n    const tokenContract = this.getContractByName(contractName);\n    if (!tokenContract){\n      const tokenConfig = this.getGlobalConfig(['stats','tokens',contractName.toUpperCase()]);\n      if (tokenConfig){\n        await this.props.initContract(contractName, tokenConfig.address, ERC20);\n      } else {\n        return false;\n      }\n    }\n\n    let [\n      tokenDecimals,\n      tokenBalance\n    ] = await Promise.all([\n      this.getTokenDecimals(contractName),\n      this.getContractBalance(contractName, walletAddr, blockNumber)\n    ]);\n\n    if (tokenBalance) {\n      if (fixDecimals) {\n        tokenBalance = this.fixTokenDecimals(tokenBalance, tokenDecimals);\n      }\n\n      tokenBalance = this.BNify(tokenBalance);\n\n      // Set cached data\n      if (!tokenBalance.isNaN()) {\n        if (blockNumber !== 'latest') {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, tokenBalance, 30);\n        } else {\n          return tokenBalance;\n        }\n      }\n    } else {\n      this.customLogError('Error on getting balance for ', contractName);\n    }\n    return null;\n  }\n  copyToClipboard = (copyText) => {\n    if (typeof copyText.select === 'function') {\n      copyText.select();\n      copyText.setSelectionRange(0, 99999); // Select\n      const res = document.execCommand(\"copy\");\n      copyText.setSelectionRange(0, 0); // Deselect\n      return res;\n    }\n    return false;\n  }\n  loadScript = (url, props, callback) => {\n    const script = document.createElement(\"script\");\n    script.src = url;\n\n    // Append props\n    if (props) {\n      Object.keys(props).forEach((attr, i) => {\n        script[attr] = props[attr];\n      });\n    }\n\n    if (typeof callback === 'function') {\n      if (script.readyState) {  // only required for IE <9\n        script.onreadystatechange = function () {\n          if (script.readyState === 'loaded' || script.readyState === 'complete') {\n            script.onreadystatechange = null;\n            callback();\n          }\n        };\n      } else {  //Others\n        script.onload = callback;\n      }\n    }\n\n    if (!script.id || !document.getElementById(script.id)) {\n      document.body.appendChild(script);\n    }\n  }\n  isValidJSON = str => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  }\n  checkAddress = (address) => {\n    return address ? address.match(/^0x[a-fA-F0-9]{40}$/) !== null : false;\n  }\n  getTokenTotalSupply = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `totalSupply_${contractName}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const totalSupply = await this.genericContractCall(contractName, 'totalSupply', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, totalSupply);\n  }\n  getTokenPrice = async (contractName, blockNumber = 'latest') => {\n    const cachedDataKey = `tokenPrice_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenPrice = await this.genericContractCall(contractName, 'tokenPrice', [], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPrice, 60);\n  }\n  getContractBalance = async (contractName, address, blockNumber = 'latest') => {\n    address = address ? address : this.props.tokenConfig.idle.address;\n    const cachedDataKey = `balanceOf_${contractName}_${address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n    const balance = await this.genericContractCall(contractName, 'balanceOf', [address], {}, blockNumber);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, balance, 30);\n  }\n  getProtocolBalance = async (contractName, address) => {\n    return await this.getContractBalance(contractName, address);\n  }\n  getAprs = async (contractName) => {\n    const cachedDataKey = `getAprs_${contractName}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      // console.log('getAprs - CACHED - ',cachedData);\n      return typeof cachedData === 'object' ? cachedData : JSON.parse(cachedData);\n    }\n\n    contractName = contractName ? contractName : this.props.tokenConfig.idle.token;\n    const aprs = await this.genericContractCall(contractName, 'getAPRs');\n    if (aprs) {\n      const result = {\n        aprs: aprs[1],\n        addresses: aprs[0]\n      };\n      return this.setCachedDataWithLocalStorage(cachedDataKey, result);\n    }\n    return null;\n  }\n  genericIdleCall = async (methodName, params = [], callParams = {}) => {\n    return await this.genericContractCall(this.props.tokenConfig.idle.token, methodName, params, callParams).catch(err => {\n      this.customLogError('Generic Idle call err:', err);\n    });\n  }\n  estimateGas = async (contractName, methodName, params = [], callParams = {}) => {\n    let contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    return await contract.methods[methodName](...params).estimateGas(callParams);\n  }\n  getTxReceipt = async (txHash, web3 = null) => {\n    web3 = web3 || this.props.web3;\n    if (!web3 || !web3.eth) {\n      return null;\n    }\n    return await (new Promise(async (resolve, reject) => {\n      web3.eth.getTransactionReceipt(txHash, (err, tx) => {\n        if (err) {\n          reject(err);\n        }\n        resolve(tx);\n      });\n    }));\n  }\n  getTxDecodedLogs = async (tx, logAddr, decodeLogs, storedTx) => {\n\n    let txReceipt = storedTx && storedTx.txReceipt ? storedTx.txReceipt : null;\n\n    if (!txReceipt) {\n      txReceipt = await (new Promise(async (resolve, reject) => {\n        this.props.web3.eth.getTransactionReceipt(tx.hash, (err, tx) => {\n          if (err) {\n            reject(err);\n          }\n          resolve(tx);\n        });\n      }));\n\n    }\n\n    if (!txReceipt) {\n      return null;\n    }\n\n    const internalTransfers = txReceipt.logs.filter((tx) => { return tx.topics[tx.topics.length - 1].toLowerCase() === `0x00000000000000000000000${logAddr}`; });\n\n    if (!internalTransfers.length) {\n      return null;\n    }\n\n    try {\n      return [\n        txReceipt,\n        this.props.web3.eth.abi.decodeLog(decodeLogs, internalTransfers[0].data, internalTransfers[0].topics)\n      ];\n    } catch (error) {\n      return null;\n    }\n  }\n  blocksToSeconds = (blocks) => {\n    const blocksPerSeconds = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(365.2422).div(86400);\n    return this.BNify(blocks).div(blocksPerSeconds);\n  }\n  getBlockNumber = async () => {\n    if (!this.props.web3) {\n      return false;\n    }\n    return await this.props.web3.eth.getBlockNumber();\n  }\n  getBlockInfo = async (blockNumber='latest') => {\n    const cachedDataKey = `getBlockInfo_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n    \n    const blockInfo = await this.props.web3.eth.getBlock(blockNumber);\n\n    if (blockInfo){\n      const blockInfoToSave = {\n        hash:blockInfo.hash,\n        number:blockInfo.number,\n        timestamp:blockInfo.timestamp\n      };\n      const TTL  = blockNumber === 'latest' ? this.getGlobalConfig(['cache','TTL']) : null;\n      this.setCachedDataWithLocalStorage(cachedDataKey, blockInfoToSave, TTL);\n      return blockInfo;\n    }\n\n    return null;\n  }\n  getContractPastEvents = async (contractName, methodName, params = {}) => {\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLogError('Wrong contract name', contractName);\n      return null;\n    }\n\n    const cachedDataKey = `getContractPastEvents_${contractName}_${methodName}_${JSON.stringify(params)}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    let TTL = this.getGlobalConfig(['cache','TTL']);\n    if (params.toBlock && params.toBlock !== 'latest') {\n      TTL = null;\n    }\n\n    const events = await contract.getPastEvents(methodName, params);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, events, TTL);\n  }\n\n  genericContractCallCachedTTLNoMulticall = async (contractName, methodName, TTL = 180, params = [], callParams = {}, blockNumber = 'latest') => {\n    return await this.genericContractCallCachedTTL(contractName, methodName, TTL, params, callParams, blockNumber, false);\n  }\n\n  genericContractCallCachedTTL = async (contractName, methodName, TTL = 180, params = [], callParams = {}, blockNumber = 'latest', useMultiCall = true) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, useMultiCall);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  genericContractCallCachedNoMulticall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    // console.log(`genericContractCallCached - ${cachedDataKey}`,cachedData);\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, false);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  genericContractCallCached = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180, useMultiCall = true) => {\n    const cachedDataKey = `genericContractCall_${contractName}_${methodName}_${JSON.stringify(params)}_${JSON.stringify(callParams)}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    // Store forever for past block\n    if (blockNumber !== 'latest') {\n      TTL = null;\n    }\n\n    // console.log(`genericContractCallCached - ${cachedDataKey}`,cachedData);\n\n    const result = await this.genericContractCall(contractName, methodName, params, callParams, blockNumber, useMultiCall);\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, result, TTL);\n  }\n\n  cachedContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', TTL = 180) => {\n    return await this.genericContractCallCached(contractName, methodName, params, callParams, blockNumber, TTL);\n  }\n\n  prepareMulticallData = (calls,web3=null) => {\n\n    web3 = this.props.web3 || web3;\n\n    if (!web3){\n      return false;\n    }\n\n    const strip0x = (str) => {\n      return str.replace(/^0x/, '');\n    }\n\n    // console.log('prepareMulticallData',this.props.web3,this.props);\n\n    const values = [\n      calls.map(({ target, method, args, returnTypes }) => [\n        target,\n        keccak256(method).substr(0, 10) +\n          (args && args.length > 0\n            ? strip0x(web3.eth.abi.encodeParameters(args.map(a => a[1]), args.map(a => a[0])))\n            : '')\n      ])\n    ];\n    const calldata = web3.eth.abi.encodeParameters(\n      [\n        {\n          components: [{ type: 'address' }, { type: 'bytes' }],\n          name: 'data',\n          type: 'tuple[]'\n        }\n      ],\n      values\n    );\n\n    return '0x252dba42'+strip0x(calldata);\n  }\n\n  makeMulticall = async (calls,web3=null) => {\n\n    web3 = this.props.web3 || web3;\n\n    const calldata = this.prepareMulticallData(calls,web3);\n\n    if (!calldata){\n      return null;\n    }\n\n    try {\n      const results = await web3.eth.call({\n        data: calldata,\n        to:'0xeefba1e63905ef1d7acba5a8513c70307c1ce441'\n      });\n      const decodedParams = web3.eth.abi.decodeParameters(['uint256', 'bytes[]'], results);\n\n      // console.log('makeMulticall',calls,results,decodedParams);\n\n      if (decodedParams && typeof decodedParams[1] !== 'undefined'){\n        return decodedParams[1].map( (d,i) => {\n          const returnTypes = calls[i].returnTypes;\n          const returnFields = calls[i].returnFields;\n          const output = Object.values(web3.eth.abi.decodeParameters(returnTypes,d));\n          if (returnTypes.length === 1){\n            return output[0];\n          }\n          const values = output.splice(0,returnTypes.length);\n          return values.reduce( (acc,v,j) => {\n            acc[j] = v;\n            acc[returnFields[j]] = v;\n            return acc;\n          },{});\n        });\n      }\n    } catch (err) {\n      console.log('makeMulticall',err);\n      return null;\n    }\n\n    return null;\n  }\n\n  testMulticall = async () => {\n    const calls = [\n      {\"method\":\"tranchePrice(address)\",\"args\":[[\"0x2688fc68c4eac90d9e5e1b94776cf14eade8d877\",\"address\"]],\"returnTypes\":[\"uint256\"],\"target\":\"0x34dcd573c5de4672c8248cd12a99f875ca112ad8\"},\n      {\"method\":\"claimable_tokens(address)\",\"args\":[[\"0xF1363D3D55d9e679cC6aa0a0496fD85BDfCF7464\",\"address\"]],\"returnTypes\":[\"uint256\"],\"target\":\"0x675eC042325535F6e176638Dd2d4994F645502B9\"}\n    ];\n\n    const data = await this.makeMulticall(calls);\n    console.log(data);\n  }\n\n  genericContractCall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest', useMultiCall = true) => {\n\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    if (blockNumber !== 'latest' || !useMultiCall || (this.props.network && this.props.network.required.id !== this.props.network.current.id)){\n      return await this.genericContractCallNoMulticall(contractName, methodName, params, callParams, blockNumber);\n    } else {\n      const methodAbi = contract._jsonInterface.find(f => f.name === methodName && f.inputs.length === params.length);\n      if (!methodAbi){\n        return null;\n      }\n      const inputTypes = methodAbi.inputs.map( i => i.type );\n      const returnTypes = methodAbi.outputs.map( i => i.type );\n      const returnFields = methodAbi.outputs.map( i => i.name );\n\n      if (contract._address === '0x0000000000000000000000000000000000000000'){\n        return null;\n      }\n\n      const args = params.map( (p,i) => {\n        const inputType = inputTypes[i];\n        if (inputType === 'address' && !this.checkAddress(p)){\n          p = '0x0000000000000000000000000000000000000000';\n        }\n        return [p].concat(inputType);\n      });\n\n      const callData = {\n        args,\n        returnFields,\n        returnTypes,\n        target:contract._address,\n        method:methodName+'('+inputTypes.join(',')+')',\n      };\n\n      let output = await this.props.multiCall.makeMulticall(callData);\n      if (output === 'REJECTED'){\n        // console.log(`genericContractCall - Fallback - ${this.props.network.required.id}/${this.props.network.current.id}/${this.props.isCorrectNetwork} - ${contractName} - ${methodName}`,output);\n        output = await this.genericContractCallNoMulticall(contractName, methodName, params, callParams, blockNumber);\n        if (output){\n          const callHash = JSON.stringify(callData);\n          this.props.multiCall.addResolvedHash(callHash);\n        }\n      }\n      return output;\n    }\n  }\n\n  genericContractCallNoMulticall = async (contractName, methodName, params = [], callParams = {}, blockNumber = 'latest') => {\n\n    if (!contractName) {\n      return null;\n    }\n\n    const contract = this.getContractByName(contractName);\n\n    if (!contract) {\n      this.customLog('Wrong contract name', contractName);\n      return null;\n    }\n\n    if (!contract.methods[methodName]) {\n      this.customLog('Wrong method name', methodName);\n      return null;\n    }\n\n    blockNumber = blockNumber !== 'latest' && blockNumber && !isNaN(blockNumber) ? parseInt(blockNumber) : blockNumber;\n\n    try {\n      const value = await contract.methods[methodName](...params).call(callParams, blockNumber).catch(error => {\n        this.customLog(`${contractName} contract method ${methodName} error: `, error);\n      });\n      \n      // console.log(`genericContractCallNoMulticall - ${contractName} - ${methodName} - ${blockNumber} - [${params.join(',')}] - ${value}`);\n      // if (!value){\n      //   console.log('genericContractCall - NULL - ',contractName,methodName,params);\n      // }\n      // console.log(`${moment().format('HH:mm:ss')} - genericContractCall (${blockNumber}) - ${contractName} - ${methodName} (${JSON.stringify(params)}) : ${value}`);\n      return value;\n    } catch (error) {\n      // console.log('genericContractCall ERROR - ',contractName,methodName,params);\n      this.customLog(\"genericContractCall error\", error);\n    }\n  }\n  asyncForEach = async (array, callback, async = true) => {\n    let output = [];\n    if (async) {\n      output = await Promise.all(array.map((c, index) => {\n        return callback(c, index, array);\n      }));\n    } else {\n      for (let index = 0; index < array.length; index++) {\n        output.push(await callback(array[index], index, array));\n      }\n    }\n    return output;\n  }\n  apr2apy = (apr) => {\n    return this.BNify((this.BNify(1).plus(this.BNify(apr).div(365))).pow(365).minus(1).toFixed(20));\n  }\n  getUnlentBalance = async (tokenConfig) => {\n    let unlentBalance = await this.getProtocolBalance(tokenConfig.token, tokenConfig.idle.address);\n    if (unlentBalance) {\n      unlentBalance = this.fixTokenDecimals(unlentBalance, tokenConfig.decimals);\n    }\n    return unlentBalance;\n  }\n  getTokenPool = async (tokenConfig, addGovTokens = true) => {\n    // Check for cached data\n    const cachedDataKey = `tokenPool_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n    if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent) {\n      const tokenPool = tokenAllocation.totalAllocationWithUnlent;\n      if (!this.BNify(tokenPool).isNaN()) {\n        return this.setCachedDataWithLocalStorage(cachedDataKey, tokenPool);\n      }\n    }\n\n    return null;\n  }\n  getLastAllocations = async (tokenConfig) => {\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    const aprs = await this.getAprs(tokenConfig.idle.token);\n    const allAvailableTokens = aprs ? aprs.addresses : null;\n    if (allAvailableTokens) {\n      const tokenAllocations = await this.asyncForEach(allAvailableTokens, async (protocolAddr, index) => {\n        return await this.genericContractCall(tokenConfig.idle.token, 'lastAllocations', [index]);\n      });\n      return allAvailableTokens.reduce((lastAllocations, protocolAddr, index) => {\n        lastAllocations[protocolAddr.toLowerCase()] = tokenAllocations[index];\n        return lastAllocations;\n      }, {});\n    }\n\n    return {};\n  }\n  getTokenAllocation = async (tokenConfig, protocolsAprs = false, addGovTokens = true) => {\n\n    if (!tokenConfig.idle) {\n      return false;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenAllocation_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const tokenAllocation = {\n      avgApr: null,\n      unlentBalance: null,\n      totalAllocation: null,\n      protocolsAllocations: null,\n      protocolsAllocationsPerc: null,\n      totalAllocationConverted: null,\n      totalAllocationWithUnlent: null,\n      totalAllocationWithUnlentConverted: null,\n    };\n\n    const protocolsAllocations = {};\n    const protocolsAllocationsPerc = {};\n\n    let [\n      unlentBalance,\n      tokenPrice,\n      lastAllocations,\n      tokenUsdConversionRate,\n      totalSupply,\n      govTokensBalances,\n    ] = await Promise.all([\n      this.getUnlentBalance(tokenConfig),\n      this.getIdleTokenPrice(tokenConfig),\n      this.getLastAllocations(tokenConfig),\n      this.getTokenConversionRate(tokenConfig, false),\n      this.getIdleTokenSupply(tokenConfig.idle.token),\n      addGovTokens ? this.getGovTokensBalances(tokenConfig.idle.address) : null,\n    ]);\n\n    const totalAllocation = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice).minus(unlentBalance);\n\n    if (lastAllocations) {\n      Object.keys(lastAllocations).forEach((protocolAddr) => {\n        const protocolInfo = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n        if (protocolInfo && protocolInfo.enabled) {\n          const protocolAllocationPerc = this.BNify(lastAllocations[protocolAddr]).div(100000);\n          const protocolAllocation = totalAllocation.times(protocolAllocationPerc);\n          protocolsAllocations[protocolAddr.toLowerCase()] = protocolAllocation;\n          protocolsAllocationsPerc[protocolAddr.toLowerCase()] = protocolAllocationPerc;\n        }\n      });\n    }\n\n    tokenAllocation.unlentBalance = this.BNify(0);\n    tokenAllocation.totalAllocationWithUnlent = totalAllocation;\n\n    if (unlentBalance) {\n      tokenAllocation.unlentBalance = unlentBalance;\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(unlentBalance);\n    }\n\n    tokenAllocation.totalAllocation = totalAllocation;\n    tokenAllocation.protocolsAllocations = protocolsAllocations;\n    tokenAllocation.protocolsAllocationsPerc = protocolsAllocationsPerc;\n\n    // Sum gov tokens balances\n    if (govTokensBalances && govTokensBalances.total) {\n      if (tokenUsdConversionRate) {\n        govTokensBalances.total = govTokensBalances.total.div(tokenUsdConversionRate);\n      }\n\n      // add gov token balance to total allocation\n      tokenAllocation.totalAllocationWithUnlent = tokenAllocation.totalAllocationWithUnlent.plus(govTokensBalances.total);\n    }\n\n    tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocation;\n    tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlent;\n\n    if (tokenUsdConversionRate) {\n      tokenAllocation.totalAllocationConverted = tokenAllocation.totalAllocationConverted.times(tokenUsdConversionRate);\n      tokenAllocation.totalAllocationWithUnlentConverted = tokenAllocation.totalAllocationWithUnlentConverted.times(tokenUsdConversionRate);\n    }\n\n    if (protocolsAprs) {\n      tokenAllocation.avgApr = this.getAvgApr(protocolsAprs, protocolsAllocations, totalAllocation);\n    }\n\n    // console.log('getTokenAllocation',tokenConfig.idle.token,totalSupply ? totalSupply.toFixed(8) : null,tokenPrice ? tokenPrice.toFixed(8) : null,unlentBalance ? unlentBalance.toFixed(8) : null,tokenAllocation);\n\n    // console.log('Allocations for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n    return this.setCachedData(cachedDataKey, tokenAllocation);\n  }\n  getSushiswapPoolTokenPrice = async (contractName) => {\n    const [\n      token0_address,\n      token1_address,\n      poolReserves,\n      totalSupply\n    ] = await Promise.all([\n      this.genericContractCallCached(contractName, 'token0'),\n      this.genericContractCallCached(contractName, 'token1'),\n      this.genericContractCallCached(contractName, 'getReserves'),\n      this.getTokenTotalSupply(contractName)\n    ]);\n\n    if (token0_address && token1_address && poolReserves && totalSupply) {\n      const token0_config = {\n        address: token0_address\n      };\n      const token1_config = {\n        address: token1_address\n      };\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      let [\n        token0_price,\n        token1_price\n      ] = await Promise.all([\n        this.getSushiswapConversionRate(DAITokenConfig, token0_config),\n        this.getSushiswapConversionRate(DAITokenConfig, token1_config)\n      ]);\n\n      if (token0_price && token1_price) {\n        // token0_price = this.BNify(1).div(this.BNify(token0_price));\n        // token1_price = this.BNify(1).div(this.BNify(token1_price));\n\n        const token0_pool = token0_price.times(this.fixTokenDecimals(poolReserves[0], 18));\n        const token1_pool = token1_price.times(this.fixTokenDecimals(poolReserves[1], 18));\n\n        const totalPoolSize = token0_pool.plus(token1_pool);\n        const poolTokenPrice = totalPoolSize.div(this.fixTokenDecimals(totalSupply, 18));\n\n        // console.log(parseFloat(token0_price),parseFloat(token1_price),parseFloat(poolTokenPrice));\n\n        return poolTokenPrice;\n      }\n    }\n\n    return null;\n  }\n  getSushiswapConversionRate = async (tokenConfigFrom, tokenConfigDest) => {\n\n    // Check for cached data\n    const cachedDataKey = `sushiswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n\n      // Don't pass through weth if i'm converting weth\n      if (WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const res = await this.genericContractCallNoMulticall('SushiswapRouter', 'getAmountsIn', [one.toFixed(), path]);\n\n      // console.log('getSushiswapConversionRate',path,res);\n\n      if (res) {\n        const price = this.BNify(res[0]).div(one);\n        return this.setCachedDataWithLocalStorage(cachedDataKey, price);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  getUniswapConversionRate = async (tokenConfigFrom, tokenConfigDest, blockNumber='latest', useWETH=true) => {\n\n    if (tokenConfigDest.addressForPrice) {\n      tokenConfigDest = Object.assign({}, tokenConfigDest);\n      tokenConfigDest.address = tokenConfigDest.addressForPrice;\n    }\n\n    // Check for cached data\n    const cachedDataKey = `uniswapConversionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}_${blockNumber}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    try {\n      const WETHAddr = this.getContractByName('WETH')._address;\n      const one = this.normalizeTokenDecimals(18);\n\n      const path = [];\n      path.push(tokenConfigFrom.address);\n      // Don't pass through weth if i'm converting weth\n      if (useWETH && WETHAddr.toLowerCase() !== tokenConfigFrom.address.toLowerCase() && WETHAddr.toLowerCase() !== tokenConfigDest.address.toLowerCase()) {\n        path.push(WETHAddr);\n      }\n      path.push(tokenConfigDest.address);\n\n      const unires = await this.genericContractCallNoMulticall('UniswapRouter', 'getAmountsIn', [one.toFixed(), path], {}, blockNumber);\n\n      if (unires) {\n        const price = this.BNify(unires[0]).div(one);\n        const TTL = blockNumber === 'latest' ? this.getGlobalConfig(['cache','TTL']) : null;\n        return this.setCachedDataWithLocalStorage(cachedDataKey, price, TTL);\n      }\n      return null;\n    } catch (error) {\n      return null;\n    }\n  }\n  /*\n  getUniswapConversionRate_old = async (tokenConfigFrom,tokenConfigDest) => {\n    const cachedDataKey = `compUniswapConverstionRate_${tokenConfigFrom.address}_${tokenConfigDest.address}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()){\n      return cachedData;\n    }\n\n    const tokenFrom = new Token(ChainId.MAINNET, tokenConfigFrom.address, tokenConfigFrom.decimals);\n    const tokenTo = new Token(ChainId.MAINNET, tokenConfigDest.address, tokenConfigDest.decimals);\n\n    const pair = await Fetcher.fetchPairData(tokenFrom, tokenTo);\n    const route = new Route([pair], tokenTo);\n\n    let output = null;\n    if (route && route.midPrice){\n      output = this.BNify(route.midPrice.toSignificant(tokenConfigDest.decimals));\n      this.setCachedData(cachedDataKey,output);\n    }\n    return output;\n  }\n  */\n  getCurveDepositedTokens = async (account, enabledTokens = []) => {\n    account = account ? account : this.props.account;\n\n    if (!enabledTokens || !enabledTokens.length) {\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    if (!account || !enabledTokens || !enabledTokens.length) {\n      return [];\n    }\n\n    const curveTxs = await this.getCurveTxs(account, 0, 'latest', enabledTokens);\n\n    const idleTokensBalances = {};\n    let remainingCurveTokens = this.BNify(0);\n\n    // this.customLog('getCurveDepositedTokens',curveTxs);\n\n    curveTxs.forEach(tx => {\n\n      const idleToken = tx.idleToken;\n      const idleTokens = this.BNify(tx.idleTokens);\n\n      if (!idleTokensBalances[idleToken]) {\n        idleTokensBalances[idleToken] = this.BNify(0);\n      }\n\n      switch (tx.action) {\n        case 'CurveIn':\n        case 'CurveZapIn':\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].plus(idleTokens);\n          break;\n        case 'CurveOut':\n        case 'CurveZapOut':\n          if (idleTokens.gt(idleTokensBalances[idleToken])) {\n            remainingCurveTokens = remainingCurveTokens.plus(idleTokens.minus(idleTokensBalances[idleToken]));\n          }\n          idleTokensBalances[idleToken] = idleTokensBalances[idleToken].minus(idleTokens);\n          if (idleTokensBalances[idleToken].lt(0)) {\n            idleTokensBalances[idleToken] = this.BNify(0);\n          }\n          break;\n        default:\n          break;\n      }\n\n      // this.customLog(this.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm:ss'),tx.blockNumber,idleToken,tx.action,idleTokens.toFixed(6),idleTokensBalances[idleToken].toFixed(6),remainingCurveTokens.toFixed(6));\n\n      // Scalo il remaining tokens\n      if (remainingCurveTokens.gt(0)) {\n        Object.keys(idleTokensBalances).forEach(token => {\n          const tokenBalance = idleTokensBalances[token];\n          if (tokenBalance && tokenBalance.gt(0)) {\n            if (tokenBalance.gt(remainingCurveTokens)) {\n              idleTokensBalances[token] = idleTokensBalances[token].minus(remainingCurveTokens);\n            } else {\n              remainingCurveTokens = remainingCurveTokens.minus(idleTokensBalances[token]);\n              idleTokensBalances[token] = 0;\n            }\n          }\n        });\n      }\n    });\n\n    // this.customLog('idleTokensBalances',idleTokensBalances);\n  }\n  getCurveUnevenTokenAmounts = async (amounts, max_burn_amount) => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const unevenAmounts = await this.genericContractCall(curveSwapContract.name, 'remove_liquidity_imbalance', [amounts, max_burn_amount]);\n      // this.customLog('getCurveUnevenTokenAmounts',amounts,max_burn_amount,unevenAmounts);\n      return unevenAmounts;\n    }\n    return null;\n  }\n  getCurveAPYs = async (path=null) => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve', 'rates']);\n    if (curveRatesInfo) {\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data) {\n        if (path){\n          let curveApy = this.getArrayPath(path, results.data);\n          if (curveApy) {\n            curveApy = this.BNify(curveApy).times(100);\n            if (!this.BNify(curveApy).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, curveApy);\n            }\n          }\n        } else {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, results.data);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAPY = async () => {\n\n    // Check for cached data\n    const cachedDataKey = `getCurveAPY`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const curveRatesInfo = this.getGlobalConfig(['curve', 'rates']);\n    if (curveRatesInfo) {\n      const results = await this.makeRequest(curveRatesInfo.endpoint);\n      if (results && results.data) {\n        const path = Object.values(curveRatesInfo.path);\n        let curveApy = this.getArrayPath(path, results.data);\n        if (curveApy) {\n          curveApy = this.BNify(curveApy).times(100);\n          if (!this.BNify(curveApy).isNaN()) {\n            return this.setCachedDataWithLocalStorage(cachedDataKey, curveApy);\n          }\n        }\n      }\n    }\n    return null;\n  }\n  getCurveAvailableTokens = () => {\n    if (!this.props.availableStrategies) {\n      return false;\n    }\n    const curveTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n    const strategyTokens = this.props.availableStrategies['best'];\n    const availableTokens = Object.keys(strategyTokens).reduce((availableTokens, token) => {\n      const tokenConfig = strategyTokens[token];\n      if (Object.keys(curveTokens).includes(tokenConfig.idle.token) && curveTokens[tokenConfig.idle.token].enabled) {\n        availableTokens[token] = tokenConfig;\n      }\n      return availableTokens;\n    }, {});\n\n    return availableTokens;\n  }\n  getCurveAPYContract = async () => {\n    const curveSwapContract = await this.getCurveDepositContract();\n    if (curveSwapContract) {\n      const blockNumber = await this.getBlockNumber();\n      if (blockNumber) {\n        const blocksForPrevTokenPrice = 10;\n        let [tokenPrice, prevTokenPrice] = await Promise.all([\n          this.genericContractCall(curveSwapContract.name, 'get_virtual_price'),\n          this.genericContractCallCached(curveSwapContract.name, 'get_virtual_price', [], {}, blockNumber - blocksForPrevTokenPrice)\n        ]);\n\n        if (tokenPrice && prevTokenPrice) {\n\n          const blocksMultiplier = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear'])).div(blocksForPrevTokenPrice);\n          const curveAPR = this.BNify(tokenPrice).div(prevTokenPrice).minus(1).times(blocksMultiplier);\n          return this.apr2apy(curveAPR).times(100);\n        }\n      }\n    }\n    return null;\n  }\n  getCurveTokenSupply = async () => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      return await this.getTokenTotalSupply(curvePoolContract.name);\n    }\n    return null;\n  }\n  getCurveTokenBalance = async (account = null, fixDecimals = true) => {\n    const curvePoolContract = await this.getCurvePoolContract();\n    if (curvePoolContract) {\n      account = account ? account : this.props.account;\n      return await this.getTokenBalance(curvePoolContract.name, account, fixDecimals);\n    }\n    return null;\n  }\n  getCurveTokenPrice = async (blockNumber = 'latest', fixDecimals = true) => {\n    const migrationContract = await this.getCurveDepositContract();\n    let curveTokenPrice = await this.genericContractCallCached(migrationContract.name, 'get_virtual_price', [], {}, blockNumber);\n    if (curveTokenPrice) {\n      curveTokenPrice = this.BNify(curveTokenPrice);\n      if (fixDecimals) {\n        const curvePoolContract = this.getGlobalConfig(['curve', 'poolContract']);\n        curveTokenPrice = this.fixTokenDecimals(curveTokenPrice, curvePoolContract.decimals);\n      }\n      return curveTokenPrice;\n    }\n    return null;\n  }\n  getCurveRedeemableIdleTokens = async (account) => {\n    let [curveTokenPrice, curveTokenBalance] = await Promise.all([\n      this.getCurveTokenPrice('latest'),\n      this.getCurveTokenBalance(account),\n    ]);\n    if (curveTokenBalance && curveTokenPrice) {\n      return this.BNify(curveTokenBalance).times(curveTokenPrice);\n    }\n    return null;\n  }\n  getCurveDepositContract = async () => {\n    const depositContractInfo = this.getGlobalConfig(['curve', 'depositContract']);\n    if (depositContractInfo) {\n      let curveDepositContract = this.getContractByName(depositContractInfo.name);\n      if (!curveDepositContract && depositContractInfo.abi) {\n        curveDepositContract = await this.props.initContract(depositContractInfo.name, depositContractInfo.address, depositContractInfo.abi);\n      }\n    }\n    return depositContractInfo;\n  }\n  getCurveZapContract = async () => {\n    const zapContractInfo = this.getGlobalConfig(['curve', 'zapContract']);\n    if (zapContractInfo) {\n      let curveZapContract = this.getContractByName(zapContractInfo.name);\n      if (!curveZapContract && zapContractInfo.abi) {\n        curveZapContract = await this.props.initContract(zapContractInfo.name, zapContractInfo.address, zapContractInfo.abi);\n      }\n    }\n    return zapContractInfo;\n  }\n  getCurvePoolContract = async () => {\n    const poolContractInfo = this.getGlobalConfig(['curve', 'poolContract']);\n    if (poolContractInfo) {\n      let curvePoolContract = this.getContractByName(poolContractInfo.name);\n      if (!curvePoolContract && poolContractInfo.abi) {\n        curvePoolContract = await this.props.initContract(poolContractInfo.name, poolContractInfo.address, poolContractInfo.abi);\n      }\n    }\n    return poolContractInfo;\n  }\n  getCurveSwapContract = async () => {\n    const migrationContractInfo = this.getGlobalConfig(['curve', 'migrationContract']);\n    if (migrationContractInfo) {\n      let migrationContract = this.getContractByName(migrationContractInfo.name);\n      if (!migrationContract && migrationContractInfo.abi) {\n        migrationContract = await this.props.initContract(migrationContractInfo.name, migrationContractInfo.address, migrationContractInfo.abi);\n      }\n    }\n    return migrationContractInfo;\n  }\n  getCurveIdleTokensAmounts = async (account = null, curveTokenBalance = null, max_slippage = null) => {\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n      const n_coins = Object.keys(curveAvailableTokens).length;\n\n      if (max_slippage) {\n        max_slippage = this.BNify(max_slippage).div(n_coins);\n      }\n\n      // this.customLog('curveTokenShare',this.BNify(curveTokenBalance).toString(),this.BNify(curveTokenSupply).toString(),curveTokenShare.toString());\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const curveIdleTokens = await this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]);\n        if (curveIdleTokens) {\n          let idleTokenBalance = this.BNify(curveIdleTokens).times(curveTokenShare);\n          if (max_slippage) {\n            // this.customLog('getCurveIdleTokensAmounts',idleTokenBalance.toFixed());\n            idleTokenBalance = idleTokenBalance.minus(idleTokenBalance.times(max_slippage));\n          }\n          tokensBalances[coinIndex] = this.integerValue(idleTokenBalance);\n        }\n      });\n    }\n\n    return Object.values(tokensBalances);\n  }\n\n  // Get amounts of underlying tokens in the curve pool\n  getCurveTokensAmounts = async (account = null, curveTokenBalance = null, fixDecimals = false, useCoinIndex = false) => {\n\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account) {\n      return null;\n    }\n\n    const tokensBalances = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveSwapContract = await this.getCurveSwapContract();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    const curveTokenSupply = await this.getCurveTokenSupply();\n    if (!curveTokenBalance) {\n      curveTokenBalance = await this.getCurveTokenBalance(account, false);\n    }\n\n    if (curveTokenBalance && curveTokenSupply) {\n      const curveTokenShare = this.BNify(curveTokenBalance).div(this.BNify(curveTokenSupply));\n\n      await this.asyncForEach(Object.keys(curveAvailableTokens), async (token) => {\n        const curveTokenConfig = curveAvailableTokens[token];\n        const coinIndex = curveTokenConfig.migrationParams.coinIndex;\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        const [\n          idleTokenPrice,\n          idleTokenBalance\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.genericContractCall(curveSwapContract.name, 'balances', [coinIndex]),\n        ]);\n\n        const totalTokenSupply = this.BNify(idleTokenBalance).times(this.BNify(idleTokenPrice));\n        let tokenBalance = totalTokenSupply.times(curveTokenShare);\n        if (fixDecimals) {\n          tokenBalance = this.fixTokenDecimals(tokenBalance, 18);\n        }\n\n        tokensBalances[curveTokenConfig.baseToken] = useCoinIndex ? this.integerValue(tokenBalance) : tokenBalance;\n      });\n    }\n\n    return useCoinIndex ? Object.values(tokensBalances) : tokensBalances;\n  }\n\n  // Compile amounts array for Curve\n  getCurveAmounts = async (token, amount, deposit = false) => {\n    const amounts = {};\n    const availableTokens = this.getCurveAvailableTokens();\n    const curveAvailableTokens = this.getGlobalConfig(['curve', 'availableTokens']);\n\n    await this.asyncForEach(Object.keys(curveAvailableTokens), async (idleToken) => {\n      const curveTokenConfig = curveAvailableTokens[idleToken];\n      const migrationParams = curveTokenConfig.migrationParams;\n      const coinIndex = migrationParams.coinIndex;\n      if (idleToken === token && parseFloat(amount) > 0) {\n        const tokenConfig = availableTokens[curveTokenConfig.baseToken];\n        amount = this.fixTokenDecimals(amount, 18);\n        if (!deposit) {\n          const idleTokenPrice = await this.getIdleTokenPrice(tokenConfig);\n          amount = amount.div(idleTokenPrice);\n        }\n        amount = this.normalizeTokenAmount(amount, curveTokenConfig.decimals);\n        amounts[coinIndex] = amount;\n      } else {\n        amounts[coinIndex] = 0;\n      }\n    });\n\n    return Object.values(amounts);\n  }\n  getCurveTokenAmount = async (amounts, deposit = true) => {\n    const migrationContract = await this.getCurveSwapContract();\n    if (migrationContract) {\n      return await this.genericContractCall(migrationContract.name, 'calc_token_amount', [amounts, deposit]);\n    }\n    return null;\n  }\n  getCurveSlippage = async (token, amount, deposit = true, uneven_amounts = null) => {\n    let slippage = null;\n    const depositContract = await this.getCurveDepositContract();\n    if (depositContract) {\n\n      const n_coins = this.getGlobalConfig(['curve', 'params', 'n_coins']);\n\n      amount = this.BNify(amount)\n      if (!amount || amount.isNaN() || amount.lte(0)) {\n        return null;\n      }\n\n      let amounts = uneven_amounts;\n      if (!amounts || amounts.length !== n_coins) {\n        amounts = await this.getCurveAmounts(token, amount);\n      }\n\n      let [\n        virtualPrice,\n        tokenAmount\n      ] = await Promise.all([\n        this.genericContractCall(depositContract.name, 'get_virtual_price'),\n        this.genericContractCall(depositContract.name, 'calc_token_amount', [amounts, deposit]),\n      ]);\n\n      if (virtualPrice && tokenAmount) {\n        amount = this.fixTokenDecimals(amount, 18);\n        virtualPrice = this.fixTokenDecimals(virtualPrice, 18);\n        tokenAmount = this.fixTokenDecimals(tokenAmount, 18);\n        const Sv = tokenAmount.times(virtualPrice);\n\n        // Handle redeem in uneven amounts (Slippage 0%)\n        if (uneven_amounts && !deposit) {\n          amount = amount.times(virtualPrice);\n        }\n\n        if (deposit) {\n          slippage = Sv.div(amount).minus(1).times(-1);\n        } else {\n          slippage = amount.div(Sv).minus(1).times(-1);\n        }\n\n        // console.log('getCurveSlippage',token,deposit,amounts,tokenAmount.toFixed(6),virtualPrice.toFixed(6),Sv.toFixed(6),amount.toFixed(6),slippage.toFixed(6));\n\n        return slippage;\n      }\n    }\n    return null;\n  }\n  getStkAaveDistribution = async (tokenConfig, aTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getStkAaveDistribution_${tokenConfig.idle.token}_${aTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const currentNetworkId = this.getRequiredNetworkId();\n\n    let aaveDistribution = this.BNify(0);\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    const aTokenConfig = tokenConfig.protocols.find(p => p.name === stkAAVETokenConfig.protocol);\n\n    // console.log('getStkAaveDistribution_1',tokenConfig.idle.token,aTokenConfig.token);\n    const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], stkAAVETokenConfig) || [];\n\n    if (!aTokenConfig || disabledTokens.includes(tokenConfig.idle.token)) {\n      return aaveDistribution;\n    }\n\n    const aaveIncentivesController_address = await this.genericContractCall(aTokenConfig.token, 'getIncentivesController');\n\n    if (!aaveIncentivesController_address) {\n      return aaveDistribution;\n    }\n\n    const IAaveIncentivesController_name = `IAaveIncentivesController_${aaveIncentivesController_address}`;\n    await this.props.initContract(IAaveIncentivesController_name, aaveIncentivesController_address, IAaveIncentivesController);\n\n    let [\n      aTokenTotalSupply,\n      tokenAllocation,\n      assetData,\n    ] = await Promise.all([\n      this.getTokenTotalSupply(aTokenConfig.token),\n      this.getTokenAllocation(tokenConfig, false, false),\n      this.genericContractCall(IAaveIncentivesController_name, 'assets', [aTokenConfig.address]),\n    ]);\n\n    // console.log('getStkAaveDistribution',IAaveIncentivesController_name,aTokenConfig.address,assetData);\n\n    if (assetData && tokenAllocation) {\n\n      const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n\n      if (aaveAllocationPerc && aaveAllocationPerc.gte(0.001)) {\n        if (!aTokenIdleSupply) {\n          aTokenIdleSupply = await this.genericContractCall(aTokenConfig.token, 'balanceOf', [tokenConfig.idle.address]);\n        }\n\n        const aaveSpeed = this.BNify(assetData.emissionPerSecond);\n        aTokenIdleSupply = this.BNify(aTokenIdleSupply);\n        aTokenTotalSupply = this.BNify(aTokenTotalSupply);\n        const secondsPerYear = this.getGlobalConfig(['network', 'secondsPerYear']);\n\n        const aavePoolShare = aTokenIdleSupply.div(aTokenTotalSupply);\n        aaveDistribution = aaveSpeed.times(aavePoolShare);\n\n        if (annualize) {\n          aaveDistribution = aaveDistribution.div(1e18).times(secondsPerYear);\n        }\n\n        if (!this.BNify(aaveDistribution).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, aaveDistribution);\n        }\n      }\n    }\n\n    return aaveDistribution;\n  }\n  getStkAaveUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const aTokenInfo = tokenConfig.protocols.find(p => (p.name === stkAAVETokenConfig.protocol));\n      if (aTokenInfo) {\n        const [\n          userPoolShare,\n          aaveDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getStkAaveDistribution(tokenConfig, null, false),\n        ]);\n\n        if (aaveDistribution && userPoolShare && !this.BNify(aaveDistribution).isNaN() && !this.BNify(userPoolShare).isNaN()) {\n          output = output.plus(aaveDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getWMaticApr = async (token, tokenConfig, maticConversionRate = null) => {\n    const wMaticTokenConfig = this.getGlobalConfig(['govTokens', 'WMATIC']);\n    if (!wMaticTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getWMaticApr_${tokenConfig.idle.token}_${maticConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let wMaticApr = this.BNify(0);\n    const distributionSpeed = await this.getStkAaveDistribution(tokenConfig);\n\n    if (distributionSpeed && this.BNify(distributionSpeed).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!maticConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: wMaticTokenConfig.addressForPrice || wMaticTokenConfig.address\n          };\n          maticConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!maticConversionRate || maticConversionRate.isNaN()) {\n          maticConversionRate = this.BNify(1);\n        }\n      }\n\n      const wMaticValue = this.BNify(maticConversionRate).times(distributionSpeed);\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),tokenAllocation);\n\n      if (tokenAllocation) {\n        wMaticApr = wMaticValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('wMaticApr',tokenConfig.idle.token,distributionSpeed.toFixed(),this.BNify(maticConversionRate).toFixed(),wMaticValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),wMaticApr.toFixed());\n\n        if (!this.BNify(wMaticApr).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, wMaticApr);\n        }\n      }\n    }\n\n    return wMaticApr;\n  }\n  getStkAaveApr = async (token, tokenConfig, aaveConversionRate = null) => {\n    const stkAAVETokenConfig = this.getGlobalConfig(['govTokens', 'stkAAVE']);\n    if (!stkAAVETokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getStkAaveApr_${tokenConfig.idle.token}_${aaveConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let stkAaveAPR = this.BNify(0);\n    const aaveDistribution = await this.getStkAaveDistribution(tokenConfig);\n\n    if (aaveDistribution && this.BNify(aaveDistribution).gt(0)) {\n\n      // Get COMP conversion rate\n      if (!aaveConversionRate) {\n        const DAITokenConfig = {\n          address: this.getContractByName('DAI')._address\n        };\n        try {\n          const destTokenConfig = {\n            address: stkAAVETokenConfig.addressForPrice || stkAAVETokenConfig.address\n          };\n          aaveConversionRate = await this.getUniswapConversionRate(DAITokenConfig, destTokenConfig);\n        } catch (error) {\n\n        }\n        if (!aaveConversionRate || aaveConversionRate.isNaN()) {\n          aaveConversionRate = this.BNify(1);\n        }\n      }\n\n      const stkAaveValue = this.BNify(aaveConversionRate).times(aaveDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      if (tokenAllocation) {\n        stkAaveAPR = stkAaveValue.div(tokenAllocation.totalAllocationConverted).times(100);\n\n        // console.log('getStkAaveApr',tokenConfig.idle.token,aaveDistribution.toFixed(),this.BNify(aaveConversionRate).toFixed(),stkAaveValue.toFixed(),tokenAllocation.totalAllocationConverted.toFixed(),stkAaveAPR.toFixed());\n\n        if (!this.BNify(stkAaveAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, stkAaveAPR);\n        }\n      }\n    }\n\n    return stkAaveAPR;\n  }\n  getCompAPR = async (token, tokenConfig, cTokenIdleSupply = null, compConversionRate = null) => {\n    const COMPTokenConfig = this.getGlobalConfig(['govTokens', 'COMP']);\n    if (!COMPTokenConfig.enabled) {\n      return false;\n    }\n\n    const cachedDataKey = `getCompAPR_${tokenConfig.idle.token}_${cTokenIdleSupply}_${compConversionRate}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let compAPR = this.BNify(0);\n    const compDistribution = await this.getCompDistribution(tokenConfig, cTokenIdleSupply);\n\n    if (compDistribution) {\n\n      const DAITokenConfig = {\n        address: this.getContractByName('DAI')._address\n      };\n\n      // Get COMP conversion rate\n      if (!compConversionRate) {\n        try {\n          compConversionRate = await this.getUniswapConversionRate(DAITokenConfig, COMPTokenConfig);\n        } catch (error) {\n\n        }\n        if (!compConversionRate || compConversionRate.isNaN()) {\n          compConversionRate = this.BNify(1);\n        }\n      }\n\n      const compValue = this.BNify(compConversionRate).times(compDistribution);\n\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n\n      console.log('getCompAPR', tokenConfig.idle.token, compConversionRate.toFixed(5), compDistribution.toFixed(5), compValue.toFixed(5), tokenAllocation.totalAllocationConverted.toFixed(5));\n\n      if (tokenAllocation) {\n        compAPR = compValue.div(tokenAllocation.totalAllocationConverted).times(100);\n        if (!this.BNify(compAPR).isNaN()) {\n          this.setCachedDataWithLocalStorage(cachedDataKey, compAPR);\n        }\n      }\n    }\n\n    return compAPR;\n  }\n  getCompSpeed = async (cTokenAddress) => {\n    let compSpeed = await this.genericContractCallCached('Comptroller', 'compSupplySpeeds', [cTokenAddress]);\n    if (compSpeed) {\n      return this.BNify(compSpeed);\n    }\n    return null;\n  }\n  getCompDistribution = async (tokenConfig, cTokenIdleSupply = null, annualize = true) => {\n\n    const cachedDataKey = `getCompDistribution_${tokenConfig.idle.token}_${cTokenIdleSupply}_${annualize}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n    if (cTokenInfo) {\n\n      // Get IdleToken allocation in compound\n      const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, false);\n      const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenInfo.address.toLowerCase()];\n\n      // Calculate distribution if compound allocation >= 0.1%\n      if (compoundAllocationPerc && compoundAllocationPerc.gte(0.001)) {\n\n        // Get COMP distribution speed and Total Supply\n        const [\n          compSpeed,\n          cTokenTotalSupply\n        ] = await Promise.all([\n          this.getCompSpeed(cTokenInfo.address),\n          this.getTokenTotalSupply(cTokenInfo.token)\n        ]);\n\n        if (compSpeed && cTokenTotalSupply) {\n\n          // Get Idle liquidity supply\n          if (!cTokenIdleSupply) {\n            cTokenIdleSupply = await this.getContractBalance(cTokenInfo.token, tokenConfig.idle.address);\n          }\n\n          if (cTokenIdleSupply) {\n\n            // Get COMP distribution for Idle in a Year\n            const blocksPerYear = this.getGlobalConfig(['network', 'blocksPerYear']);\n\n            // Take 50% of distrubution for lenders side\n            const compoundPoolShare = this.BNify(cTokenIdleSupply).div(this.BNify(cTokenTotalSupply));\n            let compDistribution = this.BNify(compSpeed).times(compoundPoolShare);\n\n            if (annualize) {\n              compDistribution = this.fixTokenDecimals(compDistribution, 18).times(blocksPerYear);\n            }\n\n            if (!this.BNify(compDistribution).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, compDistribution);\n            }\n          }\n        }\n      }\n    }\n\n    return null;\n  }\n  getCompUserDistribution = async (account = null, availableTokens = null) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    if (!account || !availableTokens) {\n      return false;\n    }\n\n    let output = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const cTokenInfo = tokenConfig.protocols.find(p => (p.name === 'compound'));\n      if (cTokenInfo) {\n        const [\n          userPoolShare,\n          compDistribution,\n        ] = await Promise.all([\n          this.getUserPoolShare(account, tokenConfig, false),\n          this.getCompDistribution(tokenConfig, null, false),\n        ]);\n\n        if (compDistribution && userPoolShare) {\n          output = output.plus(compDistribution.times(userPoolShare));\n        }\n      }\n    });\n\n    return output;\n  }\n  getCompAvgApr = async (availableTokens = null) => {\n    if (!availableTokens && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n    let output = this.BNify(0);\n    let totalAllocation = this.BNify(0);\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const [compApr, tokenAllocation] = await Promise.all([\n        this.getCompAPR(token, tokenConfig),\n        this.getTokenAllocation(tokenConfig, false, false)\n      ]);\n\n      if (compApr && tokenAllocation) {\n        output = output.plus(compApr.times(tokenAllocation.totalAllocation));\n        totalAllocation = totalAllocation.plus(tokenAllocation.totalAllocation);\n        // this.customLog(token,compApr.toString(),tokenAllocation.totalAllocation.toString(),output.toString(),totalAllocation.toString());\n      }\n    });\n\n    output = output.div(totalAllocation);\n\n    return output;\n  }\n  getTokensCsv = async () => {\n\n    // eslint-disable-next-line\n    Array.prototype.sum = function () {\n      return this.reduce(function (pv, cv) { return pv + cv; }, 0);\n    };\n    // eslint-disable-next-line\n    Array.prototype.max = function () {\n      return Math.max.apply(null, this);\n    };\n    // eslint-disable-next-line\n    Array.prototype.avg = function () {\n      return this.sum() / this.length;\n    };\n\n    const csv = [];\n    const availableStrategies = this.props.availableStrategies;\n    await this.asyncForEach(Object.keys(availableStrategies), async (strategy) => {\n      const availableTokens = availableStrategies[strategy];\n      const isRisk = strategy === 'risk';\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const rates = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, 7200, 'ASC');\n        const header = [];\n        let protocols = null;\n        const rows = [];\n        const aprAvg = {};\n        const scoreAvg = {};\n\n        const lastRow = rates[rates.length - 1];\n\n        rates.forEach(r => {\n          if (!protocols) {\n            header.push('Token');\n            header.push('Date');\n\n            // Get protocols\n            protocols = [];\n            lastRow.protocolsData.forEach(p1 => {\n              const foundProtocol = tokenConfig.protocols.find(p2 => (p2.address.toLowerCase() === p1.protocolAddr.toLowerCase()));\n              if (foundProtocol) {\n                protocols.push(foundProtocol);\n              }\n            });\n\n            // Add APR columns\n            header.push('APR Idle');\n            header.push('SCORE Idle');\n\n            aprAvg['idle'] = [];\n            scoreAvg['idle'] = [];\n\n            protocols.forEach(p => {\n              header.push('APR ' + p.name);\n              header.push('SCORE ' + p.name);\n\n              aprAvg[p.name] = [];\n              scoreAvg[p.name] = [];\n            });\n\n            rows.push(header.join(','));\n          }\n\n          const date = moment(r.timestamp * 1000).format('YYYY-MM-DD');\n          const rate = this.BNify(r.idleRate).div(1e18).toFixed(5);\n          const score = parseFloat(r.idleScore);\n\n          const row = [];\n          row.push(`${token}-${strategy}`);\n          row.push(date);\n          row.push(rate);\n          row.push(score);\n\n          if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n            aprAvg['idle'].push(parseFloat(rate));\n            scoreAvg['idle'].push(parseFloat(score));\n          }\n\n          protocols.forEach(pInfo => {\n            const pData = r.protocolsData.find(p => (p.protocolAddr.toLowerCase() === pInfo.address.toLowerCase()));\n            let pRate = '';\n            let pScore = '';\n            if (pData) {\n              pScore = !this.BNify(pData.defiScore).isNaN() ? parseFloat(pData.defiScore) : '0.00000';\n              pRate = !this.BNify(pData.rate).isNaN() ? this.BNify(pData.rate).div(1e18) : '0.00000';\n              if (typeof pData[`${pInfo.name}AdditionalAPR`] !== 'undefined') {\n                const additionalRate = this.BNify(pData[`${pInfo.name}AdditionalAPR`]).div(1e18);\n                if (!additionalRate.isNaN()) {\n                  pRate = pRate.plus(additionalRate);\n                }\n              }\n\n              if (date >= '2020-09-15'/* && date<='2020-11-09'*/) {\n                if (!isNaN(parseFloat(pRate))) {\n                  aprAvg[pInfo.name].push(parseFloat(pRate));\n                }\n                if (!isNaN(parseFloat(pScore))) {\n                  scoreAvg[pInfo.name].push(parseFloat(pScore));\n                }\n              }\n            }\n\n            row.push(pRate);\n            row.push(pScore);\n          });\n\n          rows.push(row.join(','));\n        });\n\n        Object.keys(aprAvg).forEach(p => {\n          const avgRate = aprAvg[p].sum() / aprAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Rate: ${avgRate}`);\n        });\n\n        Object.keys(scoreAvg).forEach(p => {\n          const avgScore = scoreAvg[p].sum() / scoreAvg[p].length;\n          this.customLog(`${token}-${strategy}-${p} - Avg Score: ${avgScore}`);\n        });\n\n        // if (token==='DAI' && isRisk){\n        //   debugger;\n        // }\n\n        csv.push(rows.join('\\n'));\n      });\n    });\n\n    this.customLog(csv.join('\\n'));\n  }\n  getGovTokenPool = async (govToken = null, availableTokens = null, convertToken = null) => {\n    let output = this.BNify(0);\n\n    if (!availableTokens) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const tokenConfig = availableTokens[token];\n      const enabledTokens = govToken ? [govToken] : null;\n      const compTokenBalance = await this.getGovTokensBalances(tokenConfig.idle.address, convertToken, enabledTokens);\n      if (compTokenBalance && compTokenBalance.total) {\n        output = output.plus(compTokenBalance.total);\n      }\n    });\n    return output;\n  }\n  getIdleGovToken = () => {\n    if (!this.idleGovToken) {\n      this.idleGovToken = new IdleGovToken(this.props);\n    } else {\n      this.idleGovToken.setProps(this.props);\n    }\n    return this.idleGovToken;\n  }\n  getGovTokensFarming = () => {\n    const output = {};\n    const availableTokens = this.props.availableTokens;\n\n    Object.keys(availableTokens).forEach(token => {\n      const tokenGovTokens = this.getTokenGovTokens(availableTokens[token]);\n      Object.keys(tokenGovTokens).forEach(govToken => {\n        output[govToken] = tokenGovTokens[govToken];\n      });\n    });\n\n    return output;\n  }\n  getTokenGovTokens = (tokenConfig) => {\n    const output = {};\n    const currentNetworkId = this.getRequiredNetworkId();\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    Object.keys(govTokens).forEach(govToken => {\n      const govTokenConfig = govTokens[govToken];\n      const disabledTokens = this.getArrayPath(['disabledTokens', currentNetworkId], govTokenConfig) || [];\n      if (!govTokenConfig.enabled || disabledTokens.includes(tokenConfig.idle.token) || (govTokenConfig.availableNetworks && !govTokenConfig.availableNetworks.includes(currentNetworkId))) {\n        return;\n      }\n\n      if (govTokenConfig.protocol === 'idle') {\n        output[govToken] = govTokenConfig;\n      } else {\n        const foundProtocol = tokenConfig.protocols.find(p => (p.enabled && p.name.toLowerCase() === govTokenConfig.protocol.toLowerCase()))\n        if (foundProtocol) {\n          output[govToken] = govTokenConfig;\n        }\n      }\n    });\n    return output;\n  }\n  fixDistributionSpeed = (speed, frequency = 'day', mode = 'block') => {\n    const blocksPerYear = this.BNify(this.getGlobalConfig(['network', 'blocksPerYear']));\n    const secondsPerYear = this.BNify(this.getGlobalConfig(['network', 'secondsPerYear']));\n    const multipliers = {\n      'day': {\n        'block': blocksPerYear.div(365.242199),\n        'second': secondsPerYear.div(365.242199)\n      },\n      'week': {\n        'block': blocksPerYear.div(52.1429),\n        'second': secondsPerYear.div(52.1429)\n      },\n      'month': {\n        'block': blocksPerYear.div(12),\n        'second': secondsPerYear.div(12)\n      },\n      'year': {\n        'block': blocksPerYear.div(1),\n        'second': secondsPerYear.div(1)\n      }\n    };\n    speed = this.BNify(speed);\n    if (speed && !speed.isNaN()) {\n      return speed.times(multipliers[frequency][mode]);\n    }\n    return null;\n  }\n  getGovTokensUserDistributionSpeed = async (account, tokenConfig = null, enabledTokens = null) => {\n    const govTokensUserDistribution = {};\n    const govTokens = this.getGlobalConfig(['govTokens']);\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const availableTokens = {};\n      availableTokens[tokenConfig.token] = tokenConfig;\n\n      let output = null;\n      switch (govToken) {\n        case 'COMP':\n          output = await this.getCompUserDistribution(account, availableTokens);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          output = await idleGovToken.getUserDistribution(account, availableTokens);\n          break;\n        default:\n          break;\n      }\n\n      if (output) {\n        output = output.div(1e18);\n        if (govTokenConfig.distributionFrequency) {\n          output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensUserDistribution[govToken] = output;\n      }\n    });\n\n    return govTokensUserDistribution;\n  }\n  getGovTokensDistributionSpeed = async (tokenConfig, enabledTokens = null) => {\n    const govTokensDistribution = {};\n    const tokenGovTokens = this.getTokenGovTokens(tokenConfig);\n\n    await this.asyncForEach(Object.keys(tokenGovTokens), async (govToken) => {\n      let govSpeed = null;\n      const govTokenConfig = tokenGovTokens[govToken];\n\n      switch (govToken) {\n        case 'COMP':\n          govSpeed = await this.getCompDistribution(tokenConfig, null, false);\n          break;\n        case 'WMATIC':\n        case 'stkAAVE':\n          govSpeed = await this.getStkAaveDistribution(tokenConfig, null, false);\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          govSpeed = await idleGovToken.getSpeed(tokenConfig.idle.address);\n          break;\n        default:\n          break;\n      }\n\n      if (govSpeed) {\n        govSpeed = govSpeed.div(1e18);\n        if (govTokenConfig.distributionFrequency && govTokenConfig.distributionMode) {\n          govSpeed = this.fixDistributionSpeed(govSpeed, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n        }\n        govTokensDistribution[govToken] = govSpeed;\n      }\n    });\n\n    return govTokensDistribution;\n  }\n  getGovTokensAprs = async (token, tokenConfig, enabledTokens = null) => {\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensAprs = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (govToken) => {\n\n      if (enabledTokens && !enabledTokens.includes(govToken)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[govToken];\n\n      if (!govTokenConfig.enabled || govTokenConfig.aprTooltipMode === false) {\n        return;\n      }\n\n      let output = null;\n      let tokenAllocation = null;\n\n      switch (govToken) {\n        case 'WMATIC':\n        case 'stkAAVE':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getStkAaveApr(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the AAVE token proportionally on Idle funds allocation in aave\n              if (tokenAllocation) {\n                const aTokenConfig = tokenConfig.protocols.find(p => (p.name === govTokenConfig.protocol));\n                if (aTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()]) {\n                    const aaveAllocationPerc = tokenAllocation.protocolsAllocationsPerc[aTokenConfig.address.toLowerCase()];\n                    output = output.times(aaveAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'COMP':\n          switch (govTokenConfig.aprTooltipMode) {\n            default:\n            case 'apr':\n              [output, tokenAllocation] = await Promise.all([\n                this.getCompAPR(token, tokenConfig),\n                this.getTokenAllocation(tokenConfig, false, false)\n              ]);\n\n              // Cut the COMP token proportionally on Idle funds allocation in compound\n              if (tokenAllocation) {\n                const cTokenConfig = tokenConfig.protocols.find(p => (p.name === 'compound'));\n                if (cTokenConfig) {\n                  if (tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()]) {\n                    const compoundAllocationPerc = tokenAllocation.protocolsAllocationsPerc[cTokenConfig.address.toLowerCase()];\n                    output = output.times(compoundAllocationPerc);\n                  }\n                }\n              }\n              break;\n          }\n          break;\n        case 'IDLE':\n          const idleGovToken = this.getIdleGovToken();\n          switch (govTokenConfig.aprTooltipMode) {\n            case 'apr':\n              output = await idleGovToken.getAPR(token, tokenConfig);\n              break;\n            case 'distribution':\n              output = await idleGovToken.getSpeed(tokenConfig.idle.address);\n              if (output) {\n                output = this.fixTokenDecimals(output, 18);\n                output = this.fixDistributionSpeed(output, govTokenConfig.distributionFrequency, govTokenConfig.distributionMode);\n              }\n              break;\n            case 'userDistribution':\n              output = await idleGovToken.getUserDistribution(tokenConfig);\n              break;\n            default:\n              break;\n          }\n          break;\n        default:\n          break;\n      }\n\n      if (output !== null && this.BNify(output).gt(0)) {\n        govTokensAprs[govToken] = output;\n      }\n    });\n\n    return govTokensAprs;\n  }\n  getGovTokensBalances = async (address = null, convertToken = 'DAI', enabledTokens = null) => {\n    if (!address) {\n      address = this.props.tokenConfig.idle.address;\n    }\n\n    const cachedDataKey = `getGovTokensBalances_${address}_${convertToken}_${JSON.stringify(enabledTokens)}`;\n    const cachedData = this.getCachedData(cachedDataKey);\n    if (cachedData !== null) {\n      return cachedData;\n    }\n\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    const govTokensBalances = {}\n\n    await this.asyncForEach(Object.keys(govTokens), async (token) => {\n\n      if (enabledTokens && !enabledTokens.includes(token)) {\n        return;\n      }\n\n      const govTokenConfig = govTokens[token];\n\n      if (!govTokenConfig.enabled) {\n        return;\n      }\n\n      const destTokenConfig = {\n        address: govTokenConfig.addressForPrice || govTokenConfig.address\n      };\n\n      // Get gov token balance\n      let govTokenBalance = await this.getProtocolBalance(token, address);\n\n      if (govTokenBalance) {\n        // Get gov token conversion rate\n        let tokenConversionRate = null;\n        if (convertToken) {\n          const fromTokenConfig = this.getGlobalConfig(['stats', 'tokens', convertToken.toUpperCase()]);\n          try {\n            tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, destTokenConfig);\n          } catch (error) {\n            tokenConversionRate = this.BNify(0);\n          }\n        }\n\n        const tokenBalance = this.fixTokenDecimals(govTokenBalance, govTokens[token].decimals, tokenConversionRate);\n\n        // Fix token decimals and convert\n        govTokensBalances[token] = tokenBalance;\n\n        // Initialize Total gov Tokens\n        if (!govTokensBalances.total) {\n          govTokensBalances.total = this.BNify(0);\n        }\n\n        // Sum Total gov Tokens\n        govTokensBalances.total = govTokensBalances.total.plus(govTokensBalances[token]);\n      }\n    });\n\n    return this.setCachedData(cachedDataKey, govTokensBalances);\n  }\n  getTokenIcon = (token) => {\n    if (!token){\n      return null;\n    }\n    const tokenConfigStats = this.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n    return tokenConfigStats && tokenConfigStats.icon ? tokenConfigStats.icon : `images/tokens/${token}.svg`;\n  }\n  getTokenConfig = (token) => {\n    return this.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n  }\n  getTokenConfigByAddress = (address) => {\n    if (!address) {\n      return false;\n    }\n    const tokensConfigs = this.getGlobalConfig(['stats','tokens']);\n    let foundToken = Object.keys(tokensConfigs).find(token => {\n      const tokenConfig = tokensConfigs[token];\n      return tokenConfig.enabled && tokenConfig.address && tokenConfig.address.toLowerCase() === address.toLowerCase();\n    });\n    let foundTokenConfig = null;\n    if (foundToken){\n      foundTokenConfig = tokensConfigs[foundToken];\n      foundTokenConfig.token = foundToken;\n    } else {\n      foundTokenConfig = this.getGovTokenConfigByAddress(address);\n    }\n    return foundTokenConfig;\n  }\n  getGovTokenConfigByAddress = (address) => {\n    if (!address) {\n      return false;\n    }\n    const govTokens = this.getGlobalConfig(['govTokens']);\n    return Object.values(govTokens).find(tokenConfig => (tokenConfig.enabled && tokenConfig.address && tokenConfig.address.toLowerCase() === address.toLowerCase()));\n  }\n  getGovTokensUserTotalBalance = async (account = null, availableTokens = null, convertToken = null, checkShowBalance = true) => {\n\n    // Check for cached data\n    const cachedDataKey = `govTokensUserTotalBalance_${account}_${availableTokens ? JSON.stringify(Object.keys(availableTokens)) : 'null'}_${convertToken}_${checkShowBalance}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, null, checkShowBalance);\n    if (govTokensUserBalances) {\n      const govTokensEarnings = Object.values(govTokensUserBalances).reduce((acc, govTokenAmount) => {\n        acc = acc.plus(this.BNify(govTokenAmount));\n        return acc;\n      }, this.BNify(0));\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, govTokensEarnings);\n    }\n    return this.BNify(0);\n  }\n  getGovTokensIndexes = async (account, tokenConfig) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    const output = {};\n    const govTokensAmounts = await this.getGovTokensUserAmounts(tokenConfig.idle.token, account);\n    if (govTokensAmounts) {\n      await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n        // Get gov Token config by index\n        const govTokenAddress = await this.getGovTokenAddessByIndex(tokenConfig.idle.token, govTokenIndex);\n\n        if (govTokenAddress) {\n          const govTokenConfig = this.getGovTokenConfigByAddress(govTokenAddress);\n          if (govTokenConfig) {\n            output[govTokenConfig.token] = govTokenIndex;\n          }\n        }\n      });\n    }\n\n    return output;\n  }\n  getGovTokenAddessByIndex = async (token, govTokenIndex) => {\n    const cachedDataKey = `govTokenAddressByIndex_${token}_${govTokenIndex}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    // console.log(cachedDataKey,cachedData);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCallNoMulticall(token, 'govTokens', [govTokenIndex]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress, null);\n  }\n  getGovTokensUserAmounts = async (token, account) => {\n    const cachedDataKey = `govTokenUserAmount_${token}_${account}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const govTokenAddress = await this.genericContractCall(token, 'getGovTokensAmounts', [account]);\n    return this.setCachedDataWithLocalStorage(cachedDataKey, govTokenAddress);\n  }\n  getGovTokensUserBalances = async (account = null, availableTokens = null, convertToken = null, govTokenConfigForced = null, checkShowBalance = false) => {\n    if (!account) {\n      account = this.props.account;\n    }\n    if (!availableTokens && this.props.availableStrategies && this.props.selectedStrategy) {\n      availableTokens = this.props.availableStrategies[this.props.selectedStrategy];\n    }\n\n    const output = {};\n\n    await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n      const idleTokenConfig = availableTokens[token].idle;\n\n      // Get govTokens amounts\n      const govTokensAmounts = await this.getGovTokensUserAmounts(idleTokenConfig.token, account);\n\n      // console.log('getGovTokensUserBalances_1',idleTokenConfig.token,govTokensAmounts);\n\n      if (govTokensAmounts) {\n        await this.asyncForEach(govTokensAmounts, async (govTokenAmount, govTokenIndex) => {\n          govTokenAmount = this.BNify(govTokenAmount);\n          // Get gov Token config by index\n          const govTokenAddress = await this.getGovTokenAddessByIndex(idleTokenConfig.token, govTokenIndex);\n\n          // console.log('getGovTokensUserBalances_2',idleTokenConfig.token,govTokenIndex,govTokenAddress);\n\n          if (govTokenAddress) {\n            const govTokenConfig = govTokenConfigForced ? govTokenConfigForced : this.getGovTokenConfigByAddress(govTokenAddress);\n\n            if (govTokenConfig && (!checkShowBalance || govTokenConfig.showBalance) && govTokenConfig.address && govTokenConfig.address.toLowerCase() === govTokenAddress.toLowerCase()) {\n\n              // Get gov token conversion rate\n              let tokenConversionRate = null;\n              if (convertToken) {\n                const fromTokenConfig = this.getGlobalConfig(['stats', 'tokens', convertToken.toUpperCase()]);\n                if (fromTokenConfig) {\n                  try {\n                    tokenConversionRate = await this.getUniswapConversionRate(fromTokenConfig, govTokenConfig);\n                  } catch (error) {\n\n                  }\n                }\n              }\n\n              govTokenAmount = this.fixTokenDecimals(govTokenAmount, govTokenConfig.decimals, tokenConversionRate);\n\n              // console.log('getGovTokensUserBalances',idleTokenConfig.token,govTokenIndex,govTokenConfig.token,govTokenAddress,parseFloat(tokenConversionRate),parseFloat(govTokenAmount));\n\n              // Initialize govToken balance\n              if (!output[govTokenConfig.token]) {\n                output[govTokenConfig.token] = this.BNify(0); // this.BNify(1) for testing\n              }\n\n              // Add govTokens balance\n              output[govTokenConfig.token] = output[govTokenConfig.token].plus(govTokenAmount);\n            }\n          }\n        });\n      }\n    });\n\n    return output;\n  }\n  getTokenFees = async (tokenConfig = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    const fee = await this.genericContractCallCached(tokenConfig.idle.token, 'fee', [], {}, 'latest', null);\n    if (fee) {\n      return this.BNify(fee).div(this.BNify(100000));\n    }\n    return null;\n  }\n  getUserTokenFees = async (tokenConfig = null, account = null) => {\n    if (!tokenConfig && this.props.tokenConfig) {\n      tokenConfig = this.props.tokenConfig;\n    }\n    if (!account && this.props.account) {\n      account = this.props.account;\n    }\n\n    if (!account || !tokenConfig) {\n      return null;\n    }\n\n    let [\n      feePercentage,\n      amountLent,\n      redeemableBalance\n    ] = await Promise.all([\n      this.getTokenFees(tokenConfig),\n      this.loadAssetField('amountLent', tokenConfig.token, tokenConfig, account),\n      this.loadAssetField('redeemableBalance', tokenConfig.token, tokenConfig, account)\n    ]);\n\n    if (feePercentage && amountLent && redeemableBalance) {\n      const gain = redeemableBalance.minus(amountLent);\n      const fees = gain.times(feePercentage);\n\n      // this.customLog('fees',tokenConfig.token,amountLent.toString(),redeemableBalance.toString(),gain.toString(),fees.toString());\n\n      return fees;\n    }\n\n    return null;\n  }\n  getGovTokenUserBalance = async (govTokenConfig, account = null, availableTokens = null, convertToken = null) => {\n    const govTokensUserBalances = await this.getGovTokensUserBalances(account, availableTokens, convertToken, govTokenConfig);\n    return govTokensUserBalances && govTokensUserBalances[govTokenConfig.token] ? govTokensUserBalances[govTokenConfig.token] : this.BNify(0);\n  }\n  getTotalTVL = async () => {\n    const tokensTVL = await this.getTokensTVL();\n    return Object.values(tokensTVL).reduce((totalTVL, tokenInfo) => {\n      const tokenTVL = this.BNify(tokenInfo.totalTVL);\n      if (tokenTVL && !tokenTVL.isNaN()) {\n        totalTVL = totalTVL.plus(tokenTVL);\n      }\n      return totalTVL;\n    }, this.BNify(0));\n  }\n  getTokensTVL = async () => {\n    const output = {};\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      const isRisk = strategy === 'risk';\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n\n        let tokenTVL = this.BNify(0);\n        let totalTVL = this.BNify(0);\n        let oldTokenTVL = this.BNify(0);\n        const tokenConfig = availableTokens[token];\n        const idleTokenName = tokenConfig.idle.token;\n\n        output[idleTokenName] = {\n          tokenTVL,\n          totalTVL,\n          oldTokenTVL,\n          govTokens: {},\n        };\n\n        const [\n          tokenPrice,\n          totalSupply\n        ] = await Promise.all([\n          this.getIdleTokenPrice(tokenConfig),\n          this.getIdleTokenSupply(idleTokenName)\n        ]);\n\n        tokenTVL = this.fixTokenDecimals(totalSupply, 18).times(tokenPrice);\n        tokenTVL = await this.convertTokenBalance(tokenTVL, token, tokenConfig, isRisk);\n\n        output[idleTokenName].tokenTVL = tokenTVL;\n        totalTVL = totalTVL.plus(tokenTVL);\n\n        // Add Gov Tokens\n        const govTokens = this.getTokenGovTokens(tokenConfig);\n        if (govTokens) {\n          await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM)), async (govToken) => {\n            const govTokenConfig = govTokens[govToken];\n            const [\n              govTokenBalance,\n              govTokenConversionRate\n            ] = await Promise.all([\n              this.getProtocolBalance(govToken, tokenConfig.idle.address),\n              this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n            ]);\n\n            if (govTokenBalance && govTokenConversionRate) {\n              const govTokenBalanceConverted = this.fixTokenDecimals(govTokenBalance, govTokenConfig.decimals).times(this.BNify(govTokenConversionRate));\n              if (govTokenBalanceConverted && !govTokenBalanceConverted.isNaN()) {\n                totalTVL = totalTVL.plus(govTokenBalanceConverted);\n                output[idleTokenName].govTokens[govToken] = govTokenBalanceConverted;\n              }\n            }\n          });\n        }\n\n        // Get old token allocation\n        if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n          const oldTokenConfig = Object.assign({}, tokenConfig);\n          oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n          oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n          // Replace protocols with old protocols\n          if (oldTokenConfig.migration.oldProtocols) {\n            oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n              const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n              if (foundProtocol) {\n                const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                oldTokenConfig.protocols[protocolPos] = oldProtocol;\n              }\n            });\n          }\n\n          const [\n            oldTokenPrice,\n            oldTotalSupply\n          ] = await Promise.all([\n            this.getIdleTokenPrice(oldTokenConfig),\n            this.getIdleTokenSupply(oldTokenConfig.idle.name)\n          ]);\n\n          if (oldTokenPrice && oldTotalSupply) {\n            oldTokenTVL = this.fixTokenDecimals(oldTotalSupply, 18).times(oldTokenPrice);\n            oldTokenTVL = await this.convertTokenBalance(oldTokenTVL, token, oldTokenConfig, isRisk);\n            if (oldTokenTVL && !oldTokenTVL.isNaN()) {\n              output[idleTokenName].oldTokenTVL = oldTokenTVL;\n              totalTVL = totalTVL.plus(oldTokenTVL);\n            }\n          }\n        }\n\n        output[idleTokenName].totalTVL = totalTVL;\n      });\n    });\n\n    return output;\n  }\n  getSubstackLatestFeed = async () => {\n    const cachedDataKey = `substackLatestFeed`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData) {\n      return cachedData;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'substack']);\n    const idleSubstackFeed = await this.makeRequest(endpointInfo.endpoint[networkId], false, config);\n\n    if (idleSubstackFeed && idleSubstackFeed.data && idleSubstackFeed.data.items && idleSubstackFeed.data.items.length > 0) {\n      const latestFeed = idleSubstackFeed.data.items[0];\n      return this.setCachedDataWithLocalStorage(cachedDataKey, latestFeed, endpointInfo.TTL);\n    }\n\n    return null;\n  }\n  getAvailableTokenAddress = (token, strategy) => {\n    const networkId = this.getRequiredNetworkId();\n    const tokenConfig = this.getArrayPath([networkId, strategy, token], availableTokens);\n    return tokenConfig ? tokenConfig.address : null;\n  }\n  getTrancheAggregatedStats = async (tranches = null) => {\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    if (!tranches || !tranches.length) {\n      tranches = Object.keys(this.getGlobalConfig(['tranches']));\n    }\n    await this.asyncForEach(Object.keys(this.props.availableTranches), async (protocol) => {\n      const protocolConfig = this.props.availableTranches[protocol];\n      await this.asyncForEach(Object.keys(protocolConfig), async (token) => {\n        const tokenConfig = protocolConfig[token];\n        await this.asyncForEach(tranches, async (tranche) => {\n          const trancheConfig = tokenConfig[tranche];\n          const [\n            trancheApy,\n            tranchePool\n          ] = await Promise.all([\n            this.loadTrancheFieldRaw('trancheApy', {}, protocol, token, tranche, tokenConfig, trancheConfig, null),\n            this.loadTrancheFieldRaw('tranchePoolConverted', {}, protocol, token, tranche, tokenConfig, trancheConfig, null)\n          ]);\n\n          avgAPY = avgAPY.plus(this.BNify(trancheApy).times(this.BNify(tranchePool)));\n          totalAUM = totalAUM.plus(this.BNify(tranchePool));\n\n          // console.log('getTrancheAggregatedStats',protocol, token, tranche, trancheApy.toFixed(5), tranchePool.toFixed(5),totalAUM.toFixed(5));\n        });\n      });\n    });\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    // console.log('getTrancheAggregatedStats',avgAPY.toFixed(5),totalAUM.toFixed(5));\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats = async (addGovTokens = true, allNetworks = false) => {\n    const networkId = this.getRequiredNetworkId();\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpointInfo = this.getGlobalConfig(['stats', 'tvls']);\n    let networkIds = [networkId];\n    if (allNetworks) {\n      networkIds = Object.keys(endpointInfo.endpoint);\n    }\n\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n\n    await this.asyncForEach(networkIds, async (networkId) => {\n      let tvls = null;\n      try {\n        tvls = await this.makeCachedRequest(endpointInfo.endpoint[networkId], endpointInfo.TTL, true, false, config);\n      } catch (err){\n        // console.log('getAggregatedStats - ERROR', err);\n      }\n\n      if (tvls) {\n        avgAPY = avgAPY.plus(this.BNify(tvls.avgAPY).times(this.BNify(tvls.totalTVL)));\n        totalAUM = totalAUM.plus(this.BNify(tvls.totalTVL));\n      }\n    });\n\n    if (!totalAUM || this.BNify(totalAUM).isNaN() || this.BNify(totalAUM).lte(0)){\n      avgAPY = this.BNify(0);\n      totalAUM = this.BNify(0);\n      let tvls = await this.getAggregatedStats_chain();\n      if (tvls) {\n        avgAPY = avgAPY.plus(this.BNify(tvls.avgAPY).times(this.BNify(tvls.totalTVL)));\n        totalAUM = totalAUM.plus(this.BNify(tvls.totalTVL));\n      }\n    }\n\n    avgAPY = avgAPY.div(totalAUM);\n\n    return {\n      avgAPY,\n      totalAUM\n    };\n  }\n  getAggregatedStats_chain = async (addGovTokens = true, networkId = null) => {\n\n    networkId = networkId || this.getRequiredNetworkId();\n\n    // Check for cached data\n    const cachedDataKey = `getAggregatedStats_${addGovTokens}_${networkId}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && (cachedData.avgAPR && !this.BNify(cachedData.avgAPR).isNaN()) && (cachedData.avgAPY && !this.BNify(cachedData.avgAPY).isNaN()) && (cachedData.totalAUM && !this.BNify(cachedData.totalAUM).isNaN())) {\n      return {\n        avgAPR: this.BNify(cachedData.avgAPR),\n        avgAPY: this.BNify(cachedData.avgAPY),\n        totalAUM: this.BNify(cachedData.totalAUM)\n      };\n    }\n\n    let avgAPR = this.BNify(0);\n    let avgAPY = this.BNify(0);\n    let totalAUM = this.BNify(0);\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategiesNetworks), async (networkId) => {\n      const strategies = this.props.availableStrategiesNetworks[networkId];\n      await this.asyncForEach(Object.keys(strategies), async (strategy) => {\n        const isRisk = strategy === 'risk';\n        const availableTokens = strategies[strategy];\n        await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n          const tokenConfig = availableTokens[token];\n          const tokenAllocation = await this.getTokenAllocation(tokenConfig, false, addGovTokens);\n          const tokenAprs = await this.getTokenAprs(tokenConfig, tokenAllocation, addGovTokens);\n          if (tokenAllocation && tokenAllocation.totalAllocationWithUnlent && !tokenAllocation.totalAllocationWithUnlent.isNaN()) {\n            const tokenAUM = await this.convertTokenBalance(tokenAllocation.totalAllocationWithUnlent, token, tokenConfig, isRisk);\n            totalAUM = totalAUM.plus(tokenAUM);\n            // console.log(tokenConfig.idle.token+'V4',tokenAUM.toFixed());\n            if (tokenAprs && tokenAprs.avgApr && !tokenAprs.avgApr.isNaN()) {\n              avgAPR = avgAPR.plus(tokenAUM.times(tokenAprs.avgApr));\n              avgAPY = avgAPY.plus(tokenAUM.times(tokenAprs.avgApy));\n            }\n          }\n\n          // Add Gov Tokens\n          const govTokens = this.getTokenGovTokens(tokenConfig);\n          if (govTokens) {\n            await this.asyncForEach(Object.keys(govTokens).filter(govToken => (govTokens[govToken].showAUM)), async (govToken) => {\n              const govTokenConfig = govTokens[govToken];\n              const [\n                tokenBalance,\n                tokenConversionRate\n              ] = await Promise.all([\n                this.getProtocolBalance(govToken, tokenConfig.idle.address),\n                this.getUniswapConversionRate(DAITokenConfig, govTokenConfig)\n              ]);\n\n              if (tokenBalance && tokenConversionRate) {\n                const tokenBalanceConverted = this.fixTokenDecimals(tokenBalance, govTokenConfig.decimals).times(this.BNify(tokenConversionRate));\n                if (tokenBalanceConverted && !tokenBalanceConverted.isNaN()) {\n                  // console.log(tokenConfig.idle.token+'V4 - COMP',tokenBalanceConverted.toFixed());\n                  totalAUM = totalAUM.plus(tokenBalanceConverted);\n                }\n              }\n            });\n          }\n\n          // Get old token allocation\n          if (tokenConfig.migration && tokenConfig.migration.oldContract) {\n            const oldTokenConfig = Object.assign({}, tokenConfig);\n            oldTokenConfig.protocols = Object.values(tokenConfig.protocols);\n            oldTokenConfig.idle = Object.assign({}, tokenConfig.migration.oldContract);\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols) {\n              oldTokenConfig.migration.oldProtocols.forEach(oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find(p => (p.name === oldProtocol.name));\n                if (foundProtocol) {\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            const oldTokenAllocation = await this.getTokenAllocation(oldTokenConfig, false, false);\n            if (oldTokenAllocation && oldTokenAllocation.totalAllocation && !oldTokenAllocation.totalAllocation.isNaN()) {\n              const oldTokenTotalAllocation = await this.convertTokenBalance(oldTokenAllocation.totalAllocation, token, oldTokenConfig, isRisk);\n              totalAUM = totalAUM.plus(oldTokenTotalAllocation);\n              // console.log(oldTokenConfig.idle.name,oldTokenTotalAllocation.toFixed(5));\n            }\n          }\n        });\n      });\n    });\n\n    avgAPR = avgAPR.div(totalAUM);\n    avgAPY = avgAPY.div(totalAUM);\n\n    const output = {\n      avgAPR,\n      avgAPY,\n      totalAUM\n    };\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, output);\n  }\n  getTokenApy = async (tokenConfig) => {\n    const tokenAprs = await this.getTokenAprs(tokenConfig);\n    if (tokenAprs && tokenAprs.avgApy !== null) {\n      return tokenAprs.avgApy;\n    }\n    return null;\n  }\n  getTokensToMigrate = async (selectedStrategy = null) => {\n\n    if (!this.props.availableStrategies || !this.props.account) {\n      return false;\n    }\n\n    const tokensToMigrate = {};\n\n    await this.asyncForEach(Object.keys(this.props.availableStrategies), async (strategy) => {\n      if (selectedStrategy && selectedStrategy !== strategy) {\n        return;\n      }\n      const availableTokens = this.props.availableStrategies[strategy];\n      await this.asyncForEach(Object.keys(availableTokens), async (token) => {\n        const tokenConfig = availableTokens[token];\n        const {\n          migrationEnabled,\n          oldContractBalanceFormatted\n        } = await this.checkMigration(tokenConfig, this.props.account);\n\n        if (migrationEnabled) {\n          const tokenKey = selectedStrategy ? token : tokenConfig.idle.token;\n          tokensToMigrate[tokenKey] = {\n            token,\n            strategy,\n            tokenConfig,\n            oldContractBalanceFormatted\n          }\n        }\n      });\n    });\n\n    return tokensToMigrate;\n  }\n  /*\n  Get protocols tokens balances\n  */\n  getProtocolsTokensBalances = async (protocol = null) => {\n    if (!this.props.account) {\n      return false;\n    }\n    const tokenBalances = {};\n    const minTokenBalance = this.BNify(1).div(1e4);\n    const protocolsTokens = this.getGlobalConfig(['tools', 'tokenMigration', 'props', 'availableTokens']);\n    if (protocolsTokens) {\n      await this.asyncForEach(Object.keys(protocolsTokens), async (token) => {\n        const tokenConfig = protocolsTokens[token];\n        if (protocol !== null && tokenConfig.protocol.toLowerCase() !== protocol.toLowerCase()) {\n          return;\n        }\n        let tokenContract = this.getContractByName(tokenConfig.token);\n        if (!tokenContract && tokenConfig.abi) {\n          tokenContract = await this.props.initContract(tokenConfig.token, tokenConfig.address, tokenConfig.abi);\n        }\n        if (tokenContract) {\n          const tokenBalance = await this.getTokenBalance(tokenConfig.token, this.props.account);\n          if (tokenBalance && tokenBalance.gte(minTokenBalance)) {\n            tokenBalances[token] = {\n              tokenConfig,\n              balance: tokenBalance,\n            };\n          }\n        }\n      });\n    }\n\n    return tokenBalances;\n  }\n  getTokenConversionRateField = (token) => {\n    return this.getGlobalConfig(['stats', 'tokens', token.toUpperCase(), 'conversionRateField']);\n  }\n  convertTrancheTokenBalance = async (tokenBalance, tokenConfig, blockNumber='latest') => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n\n    const conversionRateField = this.getTokenConversionRateField(tokenConfig.token);\n    if (!conversionRateField) {\n      return tokenBalance;\n    }\n    if (tokenBalance.gt(0)){\n      const tokenUsdConversionRate = await this.getTokenConversionRateUniswap(tokenConfig,blockNumber);\n      if (tokenUsdConversionRate) {\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  /*\n  Convert token Balance\n  */\n  convertTokenBalance = async (tokenBalance, token, tokenConfig, isRisk = false) => {\n    // Check for USD conversion rate\n    tokenBalance = this.BNify(tokenBalance);\n    if (tokenBalance.gt(0)) {\n      const tokenUsdConversionRate = await this.getTokenConversionRate(tokenConfig, isRisk);\n      // console.log('convertTokenBalance',token,isRisk,tokenUsdConversionRate);\n      if (tokenUsdConversionRate) {\n        tokenBalance = tokenBalance.times(tokenUsdConversionRate);\n      }\n    }\n    return tokenBalance;\n  }\n  getAvgAPYStats = async (address, isRisk, startTimestamp = null, endTimestamp = null) => {\n    const apiResults = await this.getTokenApiData(address, isRisk, startTimestamp, endTimestamp, true, 7200);\n    if (apiResults && apiResults.length) {\n      const apr = apiResults.reduce((sum, r) => {\n        const idleRate = this.fixTokenDecimals(r.idleRate, 18);\n        return sum.plus(idleRate);\n      }, this.BNify(0));\n\n      // Calculate average\n      return apr.div(apiResults.length);\n    }\n\n    return this.BNify(0);\n  }\n  getTokenConversionRateUniswap = async (tokenConfig, blockNumber='latest') => {\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const statsTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]) : null;\n\n    // Replace from token address\n    if (statsTokenConfig.addressForPriceFrom){\n      DAITokenConfig.address = statsTokenConfig.addressForPriceFrom;\n    }\n\n    const ToTokenConfig = statsTokenConfig || tokenConfig;\n\n    // Don't use WETH in the path\n    const useWETH = !statsTokenConfig.addressForPriceFrom;\n\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig, blockNumber, useWETH);\n    if (!this.BNify(conversionRate).isNaN()) {\n      return conversionRate;\n    }\n\n    return null;\n  }\n  /*\n  Get idleToken conversion rate\n  */\n  getTokenConversionRate = async (tokenConfig, isRisk, conversionRateField = null, count = 0) => {\n\n    if (!conversionRateField) {\n      conversionRateField = this.getTokenConversionRateField(tokenConfig.token);\n      if (!conversionRateField) {\n        return this.BNify(1);\n      }\n    }\n\n    // Check for cached data\n    const cachedDataKey = `tokenConversionRate_${tokenConfig.address}_${isRisk}_${conversionRateField}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    let tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, null, null, false, null, 'desc', 1);\n    if (tokenData && tokenData.length) {\n      tokenData = tokenData.pop();\n      if (tokenData && !this.BNify(tokenData[conversionRateField]).isNaN()) {\n        const conversionRate = this.fixTokenDecimals(tokenData[conversionRateField], 18);\n        if (!this.BNify(conversionRate).isNaN()) {\n          return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n        }\n      }\n    }\n\n    const DAITokenConfig = {\n      address: this.getContractByName('DAI')._address\n    };\n    const ToTokenConfig = tokenConfig.token ? this.getGlobalConfig(['stats', 'tokens', tokenConfig.token.toUpperCase()]) : tokenConfig;\n    const conversionRate = await this.getUniswapConversionRate(DAITokenConfig, ToTokenConfig);\n    if (!this.BNify(conversionRate).isNaN()) {\n      return this.setCachedDataWithLocalStorage(cachedDataKey, conversionRate);\n    }\n\n    if (count < 3) {\n      return await this.getTokenConversionRate(tokenConfig, isRisk, conversionRateField, count + 1);\n    }\n\n    return this.BNify(1);\n  }\n\n  getTokenScore = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScore_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'rates']);\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}&limit=1&order=DESC`;\n    const [\n      tokenData,\n      tokenAllocation\n    ] = await Promise.all([\n      this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config),\n      this.getTokenAllocation(tokenConfig, false, false)\n    ]);\n\n    let tokenScore = this.BNify(0);\n\n    if (tokenAllocation) {\n      Object.keys(tokenAllocation.protocolsAllocationsPerc).forEach(protocolAddr => {\n        const protocolAllocationPerc = this.BNify(tokenAllocation.protocolsAllocationsPerc[protocolAddr]);\n        if (protocolAllocationPerc.gt(0.001)) {\n          let protocolScore = null;\n\n          const protocolInfo = tokenData && tokenData.length > 0 ? tokenData[0].protocolsData.find(p => (p.protocolAddr.toLowerCase() === protocolAddr.toLowerCase())) : null;\n          if (protocolInfo) {\n            protocolScore = this.BNify(protocolInfo.defiScore);\n          }\n\n          // Take protocol score from tokenConfig\n          if (!protocolScore || this.BNify(protocolScore).isNaN() || this.BNify(protocolScore).lte(0)) {\n            const protocolConfig = tokenConfig.protocols.find(p => p.address.toLowerCase() === protocolAddr.toLowerCase());\n            if (protocolConfig) {\n              protocolScore = this.BNify(protocolConfig.defiScore);\n            }\n          }\n\n          if (!protocolScore.isNaN()) {\n            tokenScore = tokenScore.plus(protocolScore.times(protocolAllocationPerc));\n          }\n        }\n      });\n    }\n\n    // Fallback\n    if (!tokenScore || tokenScore.isNaN() || tokenScore.lte(0)) {\n      tokenScore = await this.getTokenScoreApi(tokenConfig, isRisk);\n    }\n\n    return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n  }\n\n  /*\n  Get idleToken score\n  */\n  getTokenScoreApi = async (tokenConfig, isRisk) => {\n    // Check for cached data\n    const cachedDataKey = `tokenScoreApi_${tokenConfig.address}_${isRisk}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n    if (cachedData && !this.BNify(cachedData).isNaN()) {\n      return this.BNify(cachedData);\n    }\n\n    const networkId = this.getRequiredNetworkId();\n    const apiInfo = this.getGlobalConfig(['stats', 'scores']);\n\n    if (!apiInfo.endpoint[networkId]) {\n      return this.BNify(0);\n    }\n\n    const config = this.getGlobalConfig(['stats', 'config']);\n    const endpoint = `${apiInfo.endpoint[networkId]}${tokenConfig.address}?isRisk=${isRisk}`;\n    let scores = await this.makeCachedRequest(endpoint, apiInfo.TTL, true, false, config);\n\n    if (scores && scores.length > 0) {\n      let tokenData = scores.find(s => s.address.toLowerCase() === tokenConfig.address.toLowerCase());\n      if (tokenData) {\n        let tokenScore = this.BNify(tokenData.idleScore);\n        if (tokenScore && tokenScore.gt(0)) {\n          // Set cached data\n          return this.setCachedData(cachedDataKey, tokenScore);\n          // Take latest historical valid score\n        } else {\n          const timestamp = parseInt(Date.now() / 1000);\n          const startTimestamp = parseInt(timestamp) - (60 * 60 * 24);\n          tokenData = await this.getTokenApiData(tokenConfig.address, isRisk, startTimestamp, null, true, null, 'DESC');\n\n          const filteredTokenData = tokenData.filter(d => (this.BNify(d.idleScore).gt(0)));\n          if (filteredTokenData.length) {\n            tokenScore = this.BNify(filteredTokenData[0].idleScore);\n            if (!this.BNify(tokenScore).isNaN()) {\n              return this.setCachedDataWithLocalStorage(cachedDataKey, tokenScore);\n            }\n          }\n        }\n      }\n    }\n\n    return this.BNify(0);\n  }\n  /*\n  Get idleTokens aggregated APR\n  */\n  getTokenAprs = async (tokenConfig, tokenAllocation = false, addGovTokens = true, showIdleAPR = false) => {\n\n    const tokenAprs = {\n      avgApr: this.BNify(0),\n      avgApy: this.BNify(0)\n    };\n\n    if (!tokenConfig.idle) {\n      return tokenAprs;\n    }\n\n    const networkId = this.getRequiredNetworkId();\n\n    // Check for cached data\n    const cachedDataKey = `tokenAprs_${networkId}_${tokenConfig.idle.address}_${addGovTokens}`;\n    const cachedData = this.getCachedDataWithLocalStorage(cachedDataKey);\n\n    // console.log('getTokenAprs-1',tokenConfig.idle.token,networkId,cachedDataKey,cachedData);\n\n    if (cachedData && (cachedData.avgApr && this.BNify(cachedData.avgApr).gt(0)) && (cachedData.avgApy && this.BNify(cachedData.avgApy).gt(0))) {\n      return {\n        avgApr: this.BNify(cachedData.avgApr),\n        avgApy: this.BNify(cachedData.avgApy)\n      };\n    }\n\n    tokenAprs.avgApr = await this.genericContractCall(tokenConfig.idle.token, 'getAvgAPR');\n    if (tokenAprs.avgApr) {\n      tokenAprs.avgApr = this.fixTokenDecimals(tokenAprs.avgApr, 18);\n    }\n\n    // console.log('getTokenAprs-2',tokenConfig.idle.token,networkId,this.getContractByName(tokenConfig.idle.token)._address,tokenAprs);\n\n    if (tokenAprs.avgApr) {\n\n      tokenAprs.avgApy = this.apr2apy(tokenAprs.avgApr.div(100)).times(100);\n\n      // Add $IDLE token APR\n      const idleGovTokenShowAPR = showIdleAPR || this.getGlobalConfig(['govTokens', 'IDLE', 'showAPR']);\n      const idleGovTokenEnabled = this.getGlobalConfig(['govTokens', 'IDLE', 'enabled']);\n      if (idleGovTokenEnabled && idleGovTokenShowAPR) {\n        const idleGovToken = this.getIdleGovToken();\n        const idleAPR = await idleGovToken.getAPR(tokenConfig.token, tokenConfig);\n        if (idleAPR) {\n          tokenAprs.avgApr = tokenAprs.avgApr.plus(idleAPR);\n          tokenAprs.avgApy = tokenAprs.avgApy.plus(idleAPR);\n        }\n      }\n\n      // console.log('getTokenAprs-3',tokenConfig.idle.token,networkId,tokenAprs.avgApr.toFixed(8),tokenAprs.avgApy.toFixed(8));\n\n      if (this.BNify(tokenAprs.avgApy).isNaN()) {\n        tokenAprs.avgApy = this.BNify(0);\n      }\n      if (this.BNify(tokenAprs.avgApr).isNaN()) {\n        tokenAprs.avgApr = this.BNify(0);\n      }\n\n      // console.log('Aprs for '+tokenConfig.idle.token+' loaded in '+((Date.now()-start)/1000).toFixed(2)+'s');\n\n      return this.setCachedDataWithLocalStorage(cachedDataKey, tokenAprs);\n    }\n\n    return tokenAprs;\n  }\n  abbreviateNumber = (value, decimals = 3, maxPrecision = 5, minPrecision = 0) => {\n\n    const isNegative = parseFloat(value) < 0;\n    let newValue = this.BNify(value).abs();\n    const suffixes = [\"\", \"K\", \"M\", \"B\", \"T\"];\n    let suffixNum = 0;\n    while (newValue.gte(1000)) {\n      newValue = newValue.div(1000);\n      suffixNum++;\n    }\n\n    maxPrecision = Math.max(1, maxPrecision);\n\n    // Prevent decimals on integer number\n    if (value >= 1000) {\n      const decimalPart = decimals ? newValue.mod(1).toFixed(maxPrecision).substr(2, decimals) : null;\n      newValue = parseInt(newValue).toString() + (decimalPart ? '.' + decimalPart : '');\n    } else {\n      newValue = newValue.toFixed(decimals);\n    }\n\n    // Adjust number precision\n    if (newValue >= 1 && (newValue.length - 1) > maxPrecision) {\n      newValue = parseFloat(newValue).toPrecision(maxPrecision);\n    } else if ((newValue.length - 1) < minPrecision) {\n      const difference = minPrecision - (newValue.length - 1);\n      const append = this.BNify(value).abs().toString().replace('.', '').substr((newValue.length - 1), difference);\n      newValue += append;\n    }\n\n    // Add minus if number is negative\n    if (isNegative) {\n      newValue = '-' + newValue;\n    }\n\n    newValue += suffixes[suffixNum];\n\n    return newValue;\n  }\n  getFormattedBalance(balance, label, decimals, maxLen, highlightedDecimals) {\n    const defaultValue = '-';\n    decimals = !isNaN(decimals) ? decimals : 6;\n    maxLen = !isNaN(maxLen) ? maxLen : 10;\n    highlightedDecimals = !isNaN(highlightedDecimals) ? highlightedDecimals : 0;\n    balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n\n    const numLen = balance.toString().replace('.', '').length;\n    if (numLen > maxLen) {\n      decimals = Math.max(0, decimals - (numLen - maxLen));\n      balance = parseFloat(this.BNify(balance)).toFixed(decimals);\n    }\n\n    const intPart = Math.floor(balance);\n    let decPart = (balance % 1).toPrecision(decimals).substr(2, decimals);;\n    decPart = (decPart + (\"0\".repeat(decimals))).substr(0, decimals);\n\n    if (highlightedDecimals) {\n      const highlightedDec = decPart.substr(0, highlightedDecimals);\n      decPart = decPart.substr(highlightedDecimals);\n      const highlightedIntPart = (<Text.span fontSize={'100%'} color={'blue'} fontWeight={'inerith'}>{intPart}.{highlightedDec}</Text.span>);\n      return !isNaN(this.trimEth(balance)) ? (<>{highlightedIntPart}<small style={{ fontSize: '70%' }}>{decPart}</small> <Text.span fontSize={[1, 2]}>{label}</Text.span></>) : defaultValue;\n    } else {\n      return !isNaN(this.trimEth(balance)) ? (<>{intPart}<small>.{decPart}</small>{label !== '%' ? ' ' : null}{label ? <Text.span fontSize={[1, 2]}>{label}</Text.span> : null}</>) : defaultValue;\n    }\n  }\n};\n\nexport default FunctionsUtil;","import React, { Component } from 'react';\nimport styles from './DashboardCard.module.scss';\nimport { Flex, Icon, Heading, Card, Tooltip } from \"rimble-ui\";\n\n\nclass DashboardCard extends Component {\n\n  state = {\n    mouseOver: false\n  }\n\n  setMouseOver(mouseOver) {\n    this.setState({\n      mouseOver\n    });\n  }\n\n  render() {\n    const isDisabled = this.props.isDisabled;\n    const isActive = this.props.isActive && !isDisabled;\n    const isInteractive = this.props.isInteractive && !isDisabled;\n    const isVisible = typeof this.props.isVisible !== 'undefined' ? this.props.isVisible : true;\n    const isRainbow = typeof this.props.isRainbow !== 'undefined' ? this.props.isRainbow : false;\n\n    const cardProps = {\n      p: 0,\n      border: 1,\n      boxShadow: 1,\n      borderRadius: 2,\n      borderColor: null,\n      position: 'relative',\n      minHeight: 'initial',\n      backgroundColor: 'cardBg'\n    };\n\n    // Replace props\n    if (this.props.cardProps && Object.keys(this.props.cardProps).length) {\n      Object.keys(this.props.cardProps).forEach(p => {\n        cardProps[p] = this.props.cardProps[p];\n      });\n    }\n\n    if (isActive || (isInteractive && this.state.mouseOver)) {\n      cardProps.border = 2;\n      cardProps.boxShadow = null;\n      cardProps.backgroundColor = 'cardBgHover';\n    }\n\n    const className = [\n      styles.defaultOpacity,\n      isActive ? styles.active : null,\n      !isVisible ? styles.hidden : null,\n      isRainbow ? styles.rainbow : null,\n      isDisabled ? styles.disabled : null,\n      isInteractive ? styles.interactive : null,\n    ];\n\n    if (this.props.className && styles[this.props.className]) {\n      className.push(styles[this.props.className]);\n    }\n\n    return (\n      <Card\n        {...cardProps}\n        className={className}\n        onClick={this.props.handleClick}\n        onMouseOut={(e) => this.setMouseOver(false)}\n        onMouseOver={(e) => this.setMouseOver(true)}\n      >\n        {\n          this.props.title && this.props.title.length > 0 &&\n          <Flex\n            mt={[3, 4]}\n            ml={[3, 4]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            {...this.props.titleParentProps}\n          >\n            <Heading.h4\n              fontWeight={4}\n              fontSize={[2, 3]}\n              textAlign={'left'}\n              color={'dark-gray'}\n              lineHeight={'initial'}\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Heading.h4>\n            {\n              this.props.description && this.props.description.length > 0 &&\n              <Tooltip\n                placement={'top'}\n                message={this.props.description}\n              >\n                <Icon\n                  ml={2}\n                  name={\"Info\"}\n                  size={'1em'}\n                  color={'cellTitle'}\n                />\n              </Tooltip>\n            }\n\n          </Flex>\n        }\n        {this.props.children}\n      </Card>\n    );\n  }\n}\n\nexport default DashboardCard;","import React, { Component } from 'react';\nimport { Flex, Icon, Text } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ConnectBox extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          p:3,\n          mt:3,\n          ...this.props.cardProps\n        }}\n      >\n        <Flex\n          alignItems={'center'}\n          flexDirection={'column'}\n        >\n          <Icon\n            size={'1.8em'}\n            name={'Input'}\n            color={'cellText'}\n          />\n          <Text\n            mt={2}\n            fontSize={2}\n            color={'cellText'}\n            textAlign={'center'}\n          >\n            Please connect with your wallet interact with Idle.\n          </Text>\n          <RoundButton\n            buttonProps={{\n              mt:2,\n              width:[1,1/2]\n            }}\n            handleClick={this.props.connectAndValidateAccount}\n          >\n            Connect\n          </RoundButton>\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ConnectBox;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TableRow extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const FieldComponent = this.props.fieldComponent;\n    const isInteractive = typeof this.props.handleClick === 'function';\n    return (\n      <DashboardCard\n        cardProps={{\n          mb:2,\n          width:1,\n          px:[2,4],\n          py:[2,'12px']\n        }}\n        id={this.props.cardId}\n        {...this.props.rowProps}\n        className={this.props.token}\n        isInteractive={isInteractive}\n        handleClick={isInteractive ? e => this.props.handleClick(this.props) : null}\n      >\n        <Flex\n          flexDirection={'row'}\n          id={this.props.rowId}\n        >\n          {\n            this.props.cols.map((colInfo,colIndex) => {\n              const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n              if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n                return null;\n              }\n              return (\n                <Flex\n                  key={`col-${colIndex}`}\n                  {...colInfo.props}\n                >\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    {...colInfo.parentProps}\n                  >\n                    {\n                      colInfo.fields.map((fieldInfo,fieldIndex) => {\n                        if (!fieldInfo || fieldInfo.visible === false || (fieldInfo.mobile === false && this.props.isMobile)){\n                          return null;\n                        }\n                        const CustomComponent = fieldInfo.fieldComponent;\n\n                        let fieldProps = fieldInfo.props;\n\n                        // Merge with funcProps\n                        if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length>0){\n                          fieldProps = this.functionsUtil.replaceArrayPropsRecursive(fieldProps,fieldInfo.funcProps,this.props);\n                        }\n\n                        return (\n                          <Flex\n                            height={'100%'}\n                            flexDirection={'column'}\n                            alignItems={'flex-start'}\n                            justifyContent={'center'}\n                            {...fieldInfo.parentProps}\n                            style={fieldInfo.style || {\n                              overflow:'hidden'\n                            }}\n                            width={colInfo.fields.length>1 ? 'auto' : 1}\n                            id={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                            key={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                          >\n                            {\n                              CustomComponent ? (\n                                <CustomComponent\n                                  {...this.props}\n                                  {...fieldProps}\n                                />\n                              ) : (\n                                <FieldComponent\n                                  {...this.props}\n                                  fieldInfo={fieldInfo}\n                                  colProps={colInfo.props}\n                                  parentId={`field-${colIndex}-${fieldIndex}-${fieldInfo.name}`}\n                                />\n                              )\n                            }\n                          </Flex>\n                        );\n                      })\n                    }\n                  </Flex>\n                </Flex>\n              )\n            })\n          }\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default TableRow;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"defaultOpacity\":\"DashboardCard_defaultOpacity__1B1rs\",\"hidden\":\"DashboardCard_hidden__8pO5t\",\"interactive\":\"DashboardCard_interactive__2adxr\",\"rainbow\":\"DashboardCard_rainbow__3HCI7\",\"disabled\":\"DashboardCard_disabled__uqHO2\"};","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Box,\n  Button,\n  Flex,\n  Image\n} from \"rimble-ui\";\nimport Select from 'react-select';\nimport ModalCard from './ModalCard';\nimport ImageButton from '../../ImageButton/ImageButton';\nimport styles from './Header.module.scss';\nimport globalConfigs from '../../configs/globalConfigs';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass BuyModal extends React.Component {\n\n  state = {\n    selectedMethod:null,\n    availableMethods:[],\n    selectedCountry:null,\n    selectedProvider:null,\n    availableProviders:null,\n    selectedToken:this.props.buyToken,\n  }\n\n  async loadRemoteResources() {\n\n    if (!this.state.selectedToken){\n      return false;\n    }\n\n    // Load payments providers external remote resources\n    Object.keys(globalConfigs.payments.providers).forEach((provider,i) => {\n\n      const providerInfo = globalConfigs.payments.providers[provider];\n      if (providerInfo.enabled && providerInfo.remoteResources && (providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1)){\n        \n        const remoteResources = providerInfo.remoteResources;\n\n        Object.keys(remoteResources).forEach((url,j) => {\n\n          const resourceType = url.split('.').pop().toLowerCase();\n\n          switch (resourceType){\n            case 'js':\n              const scriptID = `script_${provider}_${j}_${this.state.selectedToken}`;\n\n              if (!document.getElementById(scriptID)){\n                const script = document.createElement(\"script\");\n                const remoteResourceParams = remoteResources[url];\n                const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n                const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n                if (precall && typeof precall === 'function'){\n                  precall(this.state,globalConfigs,providerInfo);\n                }\n\n                if (callback && typeof callback === 'function'){\n                  if (script.readyState) {  // only required for IE <9\n                    script.onreadystatechange = function() {\n                      if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                        script.onreadystatechange = null;\n                        callback();\n                      }\n                    };\n                  } else {  //Others\n                    script.onload = callback;\n                  }\n                }\n\n                script.id = scriptID;\n                script.className = `script_${provider}`;\n                script.src = url;\n                script.async = true;\n\n                if (remoteResourceParams && remoteResourceParams.parentElement){\n                  remoteResourceParams.parentElement.appendChild(script)\n                } else {\n                  document.head.appendChild(script);\n                }\n              }\n            break;\n            case 'css':\n              const stylesheetId = `stylesheet_${provider}_${j}`;\n\n              if (!document.getElementById(stylesheetId)){\n                const style = document.createElement(\"link\");\n\n                style.id = stylesheetId;\n                style.rel = 'stylesheet';\n                style.href = url;\n\n                document.head.appendChild(style);\n              }\n            break;\n            default:\n            break;\n          }\n        });\n      }\n    });\n  }\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  loadAvailableMethods(){\n    const availableMethods = {};\n    const availableMethodsKeys = this.props.availableMethods && this.props.availableMethods.length ? this.props.availableMethods : Object.keys(globalConfigs.payments.methods);\n\n    availableMethodsKeys.forEach(method => {\n      const availableProviders = this.getAvailablePaymentProviders(method,this.state.selectedToken);\n      if (availableProviders && availableProviders.length>0){\n        const methodInfo = globalConfigs.payments.methods[method];\n        methodInfo.availableProviders = availableProviders;\n        availableMethods[method] = methodInfo;\n      }\n    });\n\n    this.setState({\n      availableMethods\n    });\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n\n    this.loadAvailableMethods();\n    this.loadRemoteResources();\n  }\n\n  async componentDidMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps) {\n\n    this.loadUtils();\n\n    if ( this.props.buyToken && prevProps.buyToken !== this.props.buyToken){\n      this.selectToken(null,this.props.buyToken);\n    }\n  }\n\n  renderPaymentMethod = async (e,provider,buyParams) => {\n\n    const onSuccess = async (tx) => {\n      // Toast message\n      window.toastProvider.addMessage(`Deposit completed`, {\n        secondaryMessage: `Your ${this.state.selectedToken} have been deposited`,\n        colorTheme: 'light',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"success\",\n      });\n\n      this.props.getAccountBalance();\n    };\n\n    const onClose = async (e) => {\n      return true;\n    }\n\n    const paymentProvider = globalConfigs.payments.providers[provider];\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(this.props,globalConfigs,buyParams,onSuccess,onClose) : null;\n\n    // Render the Payment Provider\n    switch (provider){\n      default:\n        if (typeof paymentProvider.render === 'function'){\n          const currentState = Object.assign({},this.state);\n          paymentProvider.render(initParams,null,currentState,globalConfigs);\n        }\n      break;\n    }\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_provider',\n        eventLabel: provider\n      });\n\n      this.closeModal(e);\n    } else {\n      this.closeModal(e);\n    }\n  }\n\n  goBack = (e) => {\n    e.preventDefault();\n\n    if (this.state.selectedProvider){\n      this.setState({\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedMethod){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n      });\n    } else if (this.state.selectedToken){\n      this.setState({\n        selectedMethod:null,\n        selectedCountry:null,\n        selectedProvider:null,\n        selectedToken:this.props.buyToken,\n      });\n    } else {\n      this.resetModal();\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      selectedMethod:null,\n      selectedCountry:null,\n      selectedProvider:null,\n      availableProviders:null,\n      selectedToken:this.props.buyToken\n    });\n\n    this.componentWillMount();\n  }\n\n  closeModal = (e) => {\n    this.resetModal();\n    if (!this.props.showInline && typeof this.props.closeModal === 'function'){\n      this.props.closeModal();\n    }\n  }\n\n  getProviderInfo = (provider) => {\n    if (!globalConfigs.payments.providers[provider]){\n      return false;\n    }\n    let providerInfo = globalConfigs.payments.providers[provider];\n    if (typeof providerInfo.getInfo === 'function'){\n      const newProviderInfo = providerInfo.getInfo(this.state);\n      if (newProviderInfo && Object.keys(newProviderInfo).length){\n        providerInfo = Object.assign(providerInfo,newProviderInfo);\n      }\n    }\n    return providerInfo;\n  }\n\n  getDefaultPaymentProvider = (selectedMethod) => {\n    const paymentMethod = this.state.availableMethods[selectedMethod];\n    if (paymentMethod && paymentMethod.defaultProvider){\n      return paymentMethod.defaultProvider;\n    }\n    return null;\n  }\n\n  getAvailablePaymentProviders = (selectedMethod,selectedToken) => {\n    const availableProviders = [];\n\n    Object.keys(globalConfigs.payments.providers).map((provider,i) => {\n      const providerInfo = globalConfigs.payments.providers[provider];\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(selectedMethod) !== -1;\n      const providerSupportToken = selectedToken ? providerInfo.supportedTokens.indexOf(selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n      if (providerInfo.enabled && providerSupportMethod && providerSupportToken ){\n        availableProviders.push(provider);\n      }\n      return provider;\n    });\n\n    const defaultPaymentProvider = this.getDefaultPaymentProvider(selectedMethod);\n\n    if (defaultPaymentProvider && this.state.availableMethods[selectedMethod].showDefaultOnly && availableProviders.indexOf(defaultPaymentProvider) !== -1){\n      return [defaultPaymentProvider];\n    }\n\n    return availableProviders;\n  }\n\n  selectProvider = (e,selectedProvider) => {\n    if (e){\n      e.preventDefault();\n    }\n    \n    if (!selectedProvider || !globalConfigs.payments.providers[selectedProvider]){\n      return this.setState({\n        selectedProvider:null\n      });\n    }\n\n    const providerInfo = globalConfigs.payments.providers[selectedProvider];\n    if (providerInfo){\n\n      if (this.state.selectedToken){\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      const ethAvailable = providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1;\n      const tokenAvailable = providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1;\n\n      // Show tokens to buy if more are available or if the selected one is not\n      const availableTokens = [];\n      if ( (ethAvailable && tokenAvailable) || !tokenAvailable ){\n        if (ethAvailable){\n          availableTokens.push(globalConfigs.baseToken);\n        }\n        if (tokenAvailable){\n          availableTokens.push(this.props.selectedToken);\n        }\n      } else {\n        this.renderPaymentMethod(e,selectedProvider,this.state);\n        return;\n      }\n\n      this.setState({\n        availableTokens,\n        selectedProvider\n      });\n    }\n  }\n\n  selectMethod = (e,selectedMethod) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    if (Object.keys(this.state.availableMethods).indexOf(selectedMethod) !== -1){\n      const availableProviders = this.getAvailablePaymentProviders(selectedMethod,this.state.selectedToken);\n\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_method',\n        eventLabel: selectedMethod\n      });\n\n      this.setState({\n        availableProviders,\n        selectedMethod\n      });\n    }\n  }\n\n  selectToken = (e,selectedToken) => {\n    if (e){\n      e.preventDefault();\n    }\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Buy',\n      eventAction: 'select_token',\n      eventLabel: selectedToken\n    });\n\n    this.setState({ selectedToken }, async () => {\n      if (this.state.selectedProvider){\n        return this.renderPaymentMethod(e,this.state.selectedProvider,this.state);\n      } else {\n        this.loadRemoteResources();\n      }\n    });\n  }\n\n  handleCountryChange = selectedCountry => {\n\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled && selectedCountry){\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Buy',\n        eventAction: 'select_country',\n        eventLabel: selectedCountry.value\n      });\n    }\n\n    this.setState({\n      selectedCountry\n    });\n  }\n\n  getAvailableCountries = () => {\n    const availableCountries = {};\n    this.state.availableProviders.forEach((provider,i) => {\n      const providerInfo = this.getProviderInfo(provider);\n      const providerSupportMethod = providerInfo.supportedMethods.indexOf(this.state.selectedMethod) !== -1;\n      const providerSupportToken = this.state.selectedToken ? providerInfo.supportedTokens.indexOf(this.state.selectedToken) !== -1 : (providerInfo.supportedTokens.indexOf(this.props.selectedToken) !== -1 || providerInfo.supportedTokens.indexOf(globalConfigs.baseToken) !== -1);\n\n      // Skip disabled provider, not supported selected method or not supported token\n      if (!providerInfo.enabled || !providerSupportMethod || !providerSupportToken ){\n        return;\n      }\n\n      // Get available providers and countries\n      providerInfo.supportedCountries.forEach((countryCode,j) => {\n        if (!availableCountries[countryCode]){\n          availableCountries[countryCode] = {\n            providers:[],\n            label:globalConfigs.countries[countryCode],\n            value:countryCode\n          };\n        }\n        availableCountries[countryCode].providers.push(provider);\n      });\n    });\n\n    return Object.values(availableCountries);\n  }\n\n  render() {\n\n    let title = null;\n    if (this.state.selectedToken === null){\n      title = 'BUY TOKEN';\n    } else {\n      title = 'BUY '+this.state.selectedToken;\n      if (this.state.selectedMethod !== null){\n        title += ' - '+this.state.availableMethods[this.state.selectedMethod].props.caption;\n      }\n    }\n\n    let availableTokens = this.props.availableTokens && Object.keys(this.props.availableTokens).length>0 ? [globalConfigs.baseToken,...Object.keys(this.props.availableTokens)] : [globalConfigs.baseToken];\n\n    // Show all tokens\n    if (this.props.showAllTokens){\n      availableTokens = [];\n      Object.keys(globalConfigs.payments.providers).forEach( provider => {\n        const providerInfo = globalConfigs.payments.providers[provider];\n        if (providerInfo.supportedTokens){\n          providerInfo.supportedTokens.forEach(token => {\n            if (!availableTokens.includes(token)){\n              availableTokens.push(token);\n            }\n          })\n        }\n      });\n    }\n\n    const InnerComponent = props => (\n      <Box minWidth={ this.props.showInline ? 'auto' : ['auto','35em'] }>\n      {\n        this.state.selectedToken === null ? (\n          <Box mb={2}>\n            <Text\n              mb={[2,3]}\n              fontWeight={2}\n              textAlign={'center'}\n              fontSize={[2, this.props.showInline ? 2 : 3]}\n            >\n              Which token do you want to buy?\n            </Text>\n            <Flex\n              mb={4}\n              style={{\n                flexWrap:'wrap'\n              }}\n              alignItems={'center'}\n              justifyContent={'center'}\n              flexDirection={['column','row']}\n            >\n            {\n              availableTokens.map((token,i) => {\n                const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                return (\n                  <ImageButton\n                    caption={token}\n                    imageSrc={imageSrc}\n                    key={`token_${token}`}\n                    isMobile={this.props.isMobile}\n                    handleClick={ e => { this.selectToken(e,token); } }\n                    imageProps={ this.props.isMobile ? {height:'42px'} : {p:[2,3],height:'80px'}}\n                    buttonProps={ !this.props.isMobile ? {\n                      style:{\n                        'flex':'0 0 170px'\n                      }\n                    } : null}\n                  />\n                );\n              })\n            }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === null ? (\n          <Box>\n            <Flex mb={3} flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n              {\n                !this.props.showInline &&\n                  <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n              }\n              {\n                this.props.children ?\n                  this.props.children\n                : this.props.buyText ? (\n                  <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]} mt={3} dangerouslySetInnerHTML={{__html:this.props.buyText}}></Text>\n                ) : (\n                  <Text textAlign={'center'} fontWeight={500} fontSize={[2, this.props.showInline ? 2 : 3]}>\n                    {\n                      (this.props.showInline && this.props.buyToken ? ( Object.keys(this.state.availableMethods).length>0 ? `Ops... you don't have any ${this.props.buyToken} in your wallet, how do you prefer do buy some?` : `Ops... you don't have any ${this.props.buyToken} in your wallet.` ) : `How do you prefer to buy ${this.state.selectedToken}?`)\n                    }\n                  </Text>\n                )\n              }\n            </Flex>\n            <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n              {\n                Object.keys(this.state.availableMethods).map((method,i) => {\n                  const methodInfo = this.state.availableMethods[method];\n                  let imageProps = methodInfo.props && methodInfo.props.imageProps ? methodInfo.props.imageProps : {};\n                  const imagePropsExtended = this.props.isMobile ? {height:'42px'} : {height:'70px'};\n                  imageProps = Object.assign(imageProps,imagePropsExtended);\n\n                  return (\n                    <ImageButton\n                      {...methodInfo.props}\n                      buttonProps={{\n                        border:2\n                      }}\n                      key={`method_${method}`}\n                      imageProps={ imageProps }\n                      isMobile={ this.props.isMobile }\n                      handleClick={ e => this.selectMethod(e,method) }\n                    />\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n        ) : this.state.selectedMethod === 'wallet' ? (\n              <Box mt={2} mb={3}>\n                <Text textAlign={'center'} fontWeight={3} fontSize={2} my={0}>\n                  <Box width={'100%'}>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableProviders.length > 0 ?\n                          (\n                            <Box>\n                              <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                                Choose your preferred payment provider:\n                              </Text>\n                              {\n                                this.state.availableProviders.map((provider,i) => {\n                                  const providerInfo = this.getProviderInfo(provider);\n                                  return (\n                                    <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => { this.renderPaymentMethod(e,provider,this.state); } } />\n                                  );\n                                })\n                              }\n                            </Box>\n                          )\n                        : (\n                          <Text textAlign={'center'} fontWeight={3} fontSize={2} my={2}>\n                            Sorry, there are no providers available for the selected method.\n                          </Text>\n                        )\n                      }\n                      </Flex>\n                    </Box>\n                </Text>\n              </Box>\n            ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              {\n                !this.state.selectedProvider &&\n                <Box\n                  mb={3}\n                  width={1}\n                  maxWidth={this.props.showInline ? '31em' : 'initial'}\n                >\n                  {\n                    !this.props.showInline &&\n                      <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'}>\n                        <Image height={2} mb={2} src={`images/tokens/${this.state.selectedToken}.svg`} />\n                      </Flex>\n                  }\n                  <Text textAlign={'center'} fontWeight={ this.props.showInline ? 2 : 3 } fontSize={2} mb={2}>\n                    Select your country:\n                  </Text>\n                  <Select\n                    bg={'#162e4d'}\n                    backgroundColor={'#162e4d'}\n                    value={this.state.selectedCountry}\n                    placeholder={'Select your country'}\n                    onChange={this.handleCountryChange}\n                    options={this.getAvailableCountries()}\n                    maxWidth={ this.props.showInline && !this.props.isMobile ? '25em' : 'auto' }\n                    noOptionsMessage={ (inputValue) => 'For European countries select Europe' }\n                    className={this.props.themeMode === 'light' ? styles.select : styles.selectDark}\n                  />\n                </Box>\n              }\n              <Flex flexDirection={'column'} justifyContent={'center'} alignItems={'center'} minHeight={'200px'}>\n                {\n                  !this.state.selectedProvider ?\n                    this.state.selectedCountry !== null ? (\n                      <Box width={'100%'}>\n                        <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                          Choose your preferred payment provider:\n                        </Text>\n                        <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                        {\n                          this.state.selectedCountry.providers.length > 0 ?\n                            this.state.selectedCountry.providers.map((provider,i) => {\n                              const providerInfo = this.getProviderInfo(provider);\n                              return (\n                                <ImageButton key={`payment_provider_${provider}`} {...providerInfo} handleClick={ e => {this.selectProvider(e,provider) } } />\n                              );\n                            })\n                          : (\n                            <Text textAlign={'center'} fontWeight={3} fontSize={2} mb={2}>\n                              Sorry, there are no providers available for the selected method.\n                            </Text>\n                          )\n                        }\n                        </Flex>\n                      </Box>\n                    ) : (\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={2}>\n                        Select the country to load the payment providers.\n                      </Text>\n                    )\n                  : false && this.state.availableTokens && this.state.availableTokens.length > 0 && (\n                    <Box mb={2}>\n                      <Flex justifyContent={'center'} my={2}>\n                        <Image src={ globalConfigs.payments.providers[this.state.selectedProvider].imageSrc } height={'35px'} />\n                      </Flex>\n                      <Text textAlign={'center'} fontWeight={2} fontSize={2} mb={[2,3]}>\n                        Choose which token do you want to buy:\n                      </Text>\n                      <Flex mb={this.props.showInline ? 2 : 4} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                      {\n                        this.state.availableTokens.map((token,i) => {\n                          const imageSrc = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'icon']) || `images/tokens/${token}.svg`;\n                          return (\n                            <ImageButton key={`token_${token}`} imageSrc={imageSrc} caption={token} imageProps={{p:[2,3],height:'80px'}} handleClick={ e => { this.selectToken(e,token); } } />\n                          );\n                        })\n                      }\n                      </Flex>\n                    </Box>\n                  )\n                }\n              </Flex>\n            </Flex>\n          )\n      }\n        {\n          this.props.showInline && this.state.selectedToken !== null  && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n            <Flex\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Button\n                my={2}\n                mx={[0, 2]}\n                size={'medium'}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.goBack(e) }\n              >\n                GO BACK\n              </Button>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n\n    if (this.props.showInline){\n      return (\n        <InnerComponent\n          {...this.props}\n        />\n      );\n    }\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          <ModalCard.Header title={title}>\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <InnerComponent/>\n          </ModalCard.Body>\n          <ModalCard.Footer>\n            <Flex px={[2,0]} flexDirection={['column', 'row']} width={1} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                onClick={ e => this.closeModal(e) }\n                size={this.props.isMobile ? 'small' : 'medium'}\n              >\n              CLOSE\n              </Button>\n              {\n                this.state.selectedToken !== null && (this.props.buyToken === null || this.state.selectedMethod !== null) && (\n                  <Button\n                    my={2}\n                    mx={[0, 2]}\n                    borderRadius={4}\n                    onClick={ e => this.goBack(e) }\n                    className={styles.gradientButton}\n                    size={this.props.isMobile ? 'small' : 'medium'}\n                  >\n                    GO BACK\n                  </Button>\n                )\n              }\n            </Flex>\n          </ModalCard.Footer>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default BuyModal;","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\n\nclass TableHeader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        px={[2,4]}\n        pb={[2,3]}\n        flexDirection={'row'}\n      >\n        {\n          this.props.cols.map((colInfo,colIndex) => {\n            // Skip non-mobile columns\n            const visibleOnDesktop = colInfo.visibleOnDesktop || false;\n            if (colInfo.visible === false || (colInfo.mobile === false && this.props.isMobile) || (colInfo.mobile === true && !visibleOnDesktop && !this.props.isMobile)){\n              return null;\n            }\n\n            return (colInfo.title && colInfo.title.length) ? (\n              <TableCellHeader\n                {...this.props}\n                {...colInfo.props}\n                desc={colInfo.desc}\n                title={colInfo.title}\n                key={`col-header-${colIndex}`}\n              >\n                {colInfo.title}\n              </TableCellHeader>\n            ) : (\n              <Flex key={`col-header-${colIndex}`} {...colInfo.props}></Flex>\n            )\n          })\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableHeader;\n","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass FastBalanceSelector extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n\n    let cardProps = {\n      p:2,\n      width:0.23,\n      onMouseDown:this.props.onMouseDown\n    };\n\n    let textProps = {\n      fontSize:2,\n      fontWeight:3,\n      textAlign:'center',\n      color:this.props.isActive ? 'copyColor' : 'cellText'\n    }\n\n    cardProps = this.functionsUtil.replaceArrayProps(cardProps,this.props.cardProps);\n    textProps = this.functionsUtil.replaceArrayProps(textProps,this.props.textProps);\n\n    return (\n      <DashboardCard\n        isInteractive={true}\n        cardProps={cardProps}\n        isActive={this.props.isActive}\n      >\n        <Text \n          {...textProps}\n        >\n          {this.props.percentage}%\n        </Text>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default FastBalanceSelector;","import ERC20 from '../contracts/ERC20.json';\nimport IdleCDO from '../contracts/IdleCDO.json';\nimport IdleStrategy from '../contracts/IdleStrategy.json';\nimport IdleCDOTrancheRewards from '../contracts/IdleCDOTrancheRewards.json';\nimport TrancheStakingRewards from '../contracts/TrancheStakingRewards.json';\nconst availableTranches = {\n  idle:{\n    DAI:{\n      token:'DAI',\n      decimals:18,\n      protocol:'idle',\n      blockNumber:13054628,\n      address:'0x6b175474e89094c44da98b954eedeac495271d0f',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleDAIYield',\n        address:'0xd0DbcD556cA22d3f3c142e9a3220053FD7a247BC'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleDAIYield'\n      },\n      description:'This strategy accrue additional interest after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n      messages:{\n        withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_AA',\n          address:'0x9c3bC87693c65E740d8B2d5F0820E04A61D8375B',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:true,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI AA',\n        blockNumber:13054628,\n        name:'AA_idleDAIYield',\n        token:'AA_idleDAIYield',\n        address:'0xE9ada97bDB86d827ecbaACCa63eBcD8201D8b12E'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleDAIYield_BB',\n          address:'0x4473bc90118b18be890af42d793b5252c4dc382d',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:false,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleDAI BB',\n        blockNumber:13054628,\n        name:'BB_idleDAIYield',\n        token:'BB_idleDAIYield',\n        address:'0x730348a54bA58F64295154F0662A08Cbde1225c2'\n      }\n    },\n    FEI:{\n      token:'FEI',\n      decimals:18,\n      protocol:'idle',\n      blockNumber:13575397,\n      address:'0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_idleFEIYield',\n        address:'0x77648a2661687ef3b05214d824503f6717311596'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_idleFEIYield'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleFEIYield_AA',\n          address:'0x8fcD21253AaA7E228531291cC6f644d13B3cF0Ba',\n          stakingRewards:[\n            {\n              token:'IDLE',\n              enabled:true,\n              address:'0x875773784Af8135eA0ef43b5a374AaD105c5D39e'\n            }\n          ]\n        },\n        label:'idleFEI AA',\n        blockNumber:13575397,\n        name:'AA_idleFEIYield',\n        token:'AA_idleFEIYield',\n        address:'0x9cE3a740Df498646939BcBb213A66BBFa1440af6'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_idleFEIYield_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        label:'idleFEI BB',\n        blockNumber:13575397,\n        name:'BB_idleFEIYield',\n        token:'BB_idleFEIYield',\n        address:'0x2490D810BF6429264397Ba721A488b0C439aA745'\n      }\n    }\n  },\n  lido:{\n    stETH:{\n      abi:ERC20,\n      decimals:18,\n      token:'stETH',\n      protocol:'lido',\n      blockNumber:13776954,\n      address:'0xae7ab96520de3a18e5e111b5eaab095312d7fe84',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_lido_stETH',\n        address:'0x34dcd573c5de4672c8248cd12a99f875ca112ad8'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_lido_stETH'\n      },\n      messages:{\n        buyInstructions:'To get stETH token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://stake.lido.fi\">Lido ETH staking</a>.',\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'exit',\n          rewards:'earned',\n          claim:'getReward',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          rewardsRate:'rewardRate',\n          stakedBalance:'balanceOf',\n          periodFinish:'periodFinish'\n        },\n        CDORewards:{\n          decimals:18,\n          unstakeWithBalance:false,\n          stakingRewards:[\n            {\n              token:'LDO',\n              enabled:true,\n              address:'0x5a98fcbea516cf06857215779fd812ca3bef1b32'\n            }\n          ],\n          abi:TrancheStakingRewards,\n          name:'TrancheStakingRewards_lido_stETH_AA',\n          address:'0xd7c1b48877a7dfa7d51cf1144c89c0a3f134f935'\n        },\n        blockNumber:13776954,\n        name:'AA_lido_stETH',\n        token:'AA_lido_stETH',\n        label:'lido stETH AA',\n        address:'0x2688fc68c4eac90d9e5e1b94776cf14eade8d877'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_lido_stETH_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13776954,\n        name:'BB_lido_stETH',\n        token:'BB_lido_stETH',\n        label:'lido stETH BB',\n        address:'0x3a52fa30c33caf05faee0f9c5dfe5fd5fe8b3978'\n      }\n    }\n  },\n  /*\n  mstable:{\n    mUSD:{\n      abi:ERC20,\n      decimals:18,\n      token:'mUSD',\n      protocol:'mstable',\n      autoFarming:['MTA'],\n      blockNumber:14184007,\n      address:'0xe2f2a5c287993345a840db3b0845fbc70f5935a5',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_mstable_mUSD',\n        address:'0x70320A388c6755Fc826bE0EF9f98bcb6bCCc6FeA'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_mstable_mUSD'\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          unstake:'exit',\n          rewards:'earned',\n          claim:'getReward',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          rewardsRate:'rewardRate',\n          stakedBalance:'balanceOf'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:false,\n          abi:TrancheStakingRewards,\n          name:'TrancheStakingRewards_mstable_mUSD_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14184007,\n        name:'AA_mstable_mUSD',\n        token:'AA_mstable_mUSD',\n        label:'mstable mUSD AA',\n        address:'0xfC558914b53BE1DfAd084fA5Da7f281F798227E7'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_mstable_mUSD_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14184007,\n        name:'BB_mstable_mUSD',\n        token:'BB_mstable_mUSD',\n        label:'mstable mUSD BB',\n        address:'0x91fb938FEa02DFd5303ACeF5a8A2c0CaB62b94C7'\n      }\n    }\n  },\n  */\n  convex:{\n    FRAX3CRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'FRAX3CRV',\n      protocol:'convex',\n      blockNumber:13812864,\n      autoFarming:['CVX','CRV'],\n      curveApyPath:['apy','day','frax'],\n      address:'0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_frax3crv',\n        address:'0x4ccaf1392a17203edab55a1f2af3079a8ac513e7'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_frax3crv'\n      },\n      description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n      messages:{\n        withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        buyInstructions:'To get FRAX3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/frax/deposit\">FRAX Curve Pool</a>.',\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_frax3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13812864,\n        name:'AA_convex_frax3crv',\n        token:'AA_convex_frax3crv',\n        label:'convex frax3crv AA',\n        address:'0x15794da4dcf34e674c18bbfaf4a67ff6189690f5'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_frax3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13812864,\n        name:'BB_convex_frax3crv',\n        token:'BB_convex_frax3crv',\n        label:'convex frax3crv BB',\n        address:'0x18cf59480d8c16856701f66028444546b7041307'\n      }\n    },\n    MIM3CRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'MIM3CRV',\n      protocol:'convex',\n      blockNumber:13848124,\n      curveApyPath:['apy','day','mim'],\n      autoFarming:['CVX','CRV','SPELL'],\n      address:'0x5a6A4D54456819380173272A5E8E9B9904BdF41B',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_mim3crv',\n        address:'0x151e89e117728ac6c93aae94c621358b0ebd1866'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_mim3crv'\n      },\n      description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n      messages:{\n        withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        buyInstructions:'To get MIM3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/mim/deposit\">MIM Curve Pool</a>.',\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_mim3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13848124,\n        name:'AA_convex_mim3crv',\n        token:'AA_convex_mim3crv',\n        label:'convex mim3crv AA',\n        address:'0xFC96989b3Df087C96C806318436B16e44c697102'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_mim3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:13848124,\n        name:'BB_convex_mim3crv',\n        token:'BB_convex_mim3crv',\n        label:'convex mim3crv BB',\n        address:'0x5346217536852CD30A5266647ccBB6f73449Cbd1'\n      }\n    },\n    steCRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'steCRV',\n      protocol:'convex',\n      blockNumber:14182975,\n      autoFarming:['CVX','CRV','LDO'],\n      curveApyPath:['apy','day','steth'],\n      address:'0x06325440D014e39736583c165C2963BA99fAf14E',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_steCRV',\n        address:'0x7ecfc031758190eb1cb303d8238d553b1d4bc8ef'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_steCRV'\n      },\n      description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n      messages:{\n        withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        buyInstructions:'To get steCRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/steth/deposit\">stETH Curve Pool</a>.',\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_steCRV',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14182975,\n        name:'AA_convex_steCRV',\n        token:'AA_convex_steCRV',\n        label:'convex steCRV AA',\n        address:'0x060a53BCfdc0452F35eBd2196c6914e0152379A6'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_steCRV',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14182975,\n        name:'BB_convex_steCRV',\n        token:'BB_convex_steCRV',\n        label:'convex steCRV BB',\n        address:'0xd83246d2bCBC00e85E248A6e9AA35D0A1548968E'\n      }\n    },\n    ALUSD3CRV:{\n      abi:ERC20,\n      decimals:18,\n      protocol:'convex',\n      token:'ALUSD3CRV',\n      blockNumber:14177732,\n      autoFarming:['CVX','CRV'],\n      address:'0x43b4FdFD4Ff969587185cDB6f0BD875c5Fc83f8c',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_alusd3crv',\n        address:'0x008c589c471fd0a13ac2b9338b69f5f7a1a843e1'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_alusd3crv'\n      },\n      description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n      messages:{\n        withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        buyInstructions:'To get ALUSD3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/alusd/deposit\">ALUSD Curve Pool</a>.',\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_alusd3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177732,\n        name:'AA_convex_alusd3crv',\n        token:'AA_convex_alusd3crv',\n        label:'convex alusd3crv AA',\n        address:'0x790E38D85a364DD03F682f5EcdC88f8FF7299908'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_alusd3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177732,\n        name:'BB_convex_alusd3crv',\n        token:'BB_convex_alusd3crv',\n        label:'convex alusd3crv BB',\n        address:'0xa0E8C9088afb3Fa0F40eCDf8B551071C34AA1aa4'\n      }\n    },\n    \"3EUR\":{\n      abi:ERC20,\n      decimals:18,\n      token:'3EUR',\n      protocol:'convex',\n      blockNumber:14177892,\n      autoFarming:['CVX','CRV','ANGLE'],\n      address:'0xb9446c4Ef5EBE66268dA6700D26f96273DE3d571',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_3eur',\n        address:'0x858F5A3a5C767F8965cF7b77C51FD178C4A92F05'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_3eur'\n      },\n      description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n      messages:{\n        withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        buyInstructions:'To get 3EUR token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/factory/66/deposit\">3EUR Curve Pool</a>.',\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_3eur_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177892,\n        name:'AA_convex_3eur',\n        token:'AA_convex_3eur',\n        label:'convex 3eur AA',\n        address:'0x158e04225777BBEa34D2762b5Df9eBD695C158D2'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_3eur_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177892,\n        name:'BB_convex_3eur',\n        token:'BB_convex_3eur',\n        label:'convex 3eur BB',\n        address:'0x3061C652b49Ae901BBeCF622624cc9f633d01bbd'\n      }\n    },\n    MUSD3CRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'MUSD3CRV',\n      protocol:'convex',\n      blockNumber:14177794,\n      autoFarming:['CVX','CRV'],\n      address:'0x1AEf73d49Dedc4b1778d0706583995958Dc862e6',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_musd3crv',\n        address:'0x16d88C635e1B439D8678e7BAc689ac60376fBfA6'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_musd3crv'\n      },\n      description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n      messages:{\n        withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        buyInstructions:'To get MUSD3CRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/musd/deposit\">MUSD Curve Pool</a>.',\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_musd3crv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177794,\n        name:'AA_convex_musd3crv',\n        token:'AA_convex_musd3crv',\n        label:'convex musd3crv AA',\n        address:'0x4585F56B06D098D4EDBFc5e438b8897105991c6A'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_musd3crv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14177794,\n        name:'BB_convex_musd3crv',\n        token:'BB_convex_musd3crv',\n        label:'convex musd3crv BB',\n        address:'0xFb08404617B6afab0b19f6cEb2Ef9E07058D043C'\n      }\n    },\n    PBTCCRV:{\n      abi:ERC20,\n      decimals:18,\n      token:'PBTCCRV',\n      protocol:'convex',\n      blockNumber:14570195,\n      multiCallDisabled:true,\n      autoFarming:['CVX','CRV'],\n      address:'0xC9467E453620f16b57a34a770C6bceBECe002587',\n      CDO:{\n        abi:IdleCDO,\n        decimals:18,\n        name:'IdleCDO_convex_pbtccrv',\n        address:'0xf324Dca1Dc621FCF118690a9c6baE40fbD8f09b7'\n      },\n      Strategy:{\n        abi:IdleStrategy,\n        name:'IdleStrategy_convex_pbtccrv'\n      },\n      description:'This strategy accrue interest only after an harvest is done. The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n      messages:{\n        withdraw:'The returns from an harvest are linearly released in 24 hours, so you should wait 24 hours after an harvest to see all the interests you are eligible for.',\n        buyInstructions:'To get PBTCCRV token your have to deposit first into <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://curve.fi/factory/99/deposit\">PBTC Curve Pool</a>.',\n      },\n      AA:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'AA',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositAA',\n          withdraw:'withdrawAA',\n          stakedBalance:'usersStakes',\n          rewards:'expectedUserReward'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_pbtccrv_AA',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14570195,\n        name:'AA_convex_pbtccrv',\n        token:'AA_convex_pbtccrv',\n        label:'convex pbtccrv AA',\n        address:'0x4657B96D587c4d46666C244B40216BEeEA437D0d'\n      },\n      BB:{\n        abi:ERC20,\n        decimals:18,\n        tranche:'BB',\n        functions:{\n          stake:'stake',\n          claim:'claim',\n          unstake:'unstake',\n          deposit:'depositBB',\n          withdraw:'withdrawBB',\n          stakedBalance:'usersStakes'\n        },\n        CDORewards:{\n          decimals:18,\n          stakingRewards:[],\n          unstakeWithBalance:true,\n          abi:IdleCDOTrancheRewards,\n          name:'IdleCDOTrancheRewards_convex_pbtccrv_BB',\n          address:'0x0000000000000000000000000000000000000000'\n        },\n        blockNumber:14570195,\n        name:'BB_convex_pbtccrv',\n        token:'BB_convex_pbtccrv',\n        label:'convex pbtccrv BB',\n        address:'0x3872418402d1e967889aC609731fc9E11f438De5'\n      }\n    }\n  }\n};\n\nexport default availableTranches;\n","import React, { Component } from 'react';\nimport IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Flex, Box, Text, Icon, Link, Input, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass SendTxWithBalance extends Component {\n\n  state = {\n    processing:{\n      txHash:null,\n      loading:false\n    },\n    inputValue:null,\n    txSucceeded:false,\n    permitEnabled:true,\n    showPermitBox:false,\n    approveEnabled:true,\n    buttonDisabled:true,\n    contractApproved:false,\n    fastBalanceSelector:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const tokenBalanceChanged = prevProps.tokenBalance !== this.props.tokenBalance;\n    const permitEnabledChanged = prevState.permitEnabled !== this.state.permitEnabled;\n    const approveEnabledChanged = prevProps.approveEnabled !== this.props.approveEnabled;\n    const contractChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    if (accountChanged || tokenBalanceChanged || contractChanged || approveEnabledChanged || tokenConfigChanged || permitEnabledChanged){\n      this.loadData();\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    if (contractApprovedChanged){\n      if (typeof this.props.contractApproved === 'function'){\n        this.props.contractApproved(this.state.contractApproved);\n      }\n    }\n\n    const actionChanged = prevProps.action !== this.props.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector !== prevState.fastBalanceSelector;\n    if (fastBalanceSelectorChanged || actionChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n  }\n\n  changeInputValue = (e,call_callback=true) => {\n    const fastBalanceSelector = null;\n    const inputValue = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n    if (this.state.inputValue !== inputValue){\n      this.setState((prevState) => ({\n        inputValue,\n        fastBalanceSelector\n      }),() => {\n        if (call_callback && typeof this.props.changeInputCallback === 'function'){\n          this.props.changeInputCallback(this.state.inputValue);\n        }\n      });\n    }\n  }\n\n  setInputValue = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n    const inputValue = this.props.tokenBalance && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() ? this.functionsUtil.BNify(this.props.tokenBalance).times(selectedPercentage) : null;\n\n    this.setState((prevState) => ({\n      inputValue\n    }),() => {\n      if (typeof this.props.changeInputCallback === 'function'){\n        this.props.changeInputCallback(this.state.inputValue);\n      }\n    });\n  }\n\n  getFastBalanceSelector = () => {\n    if (this.state.fastBalanceSelector === null){\n      return false;\n    }\n    return this.functionsUtil.BNify(this.state.fastBalanceSelector).div(100);\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  setFastBalanceSelector = (fastBalanceSelector) => {\n    this.setState({\n      fastBalanceSelector\n    });\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!amount){\n      amount = this.state.inputValue;\n    }\n    amount = this.functionsUtil.BNify(amount);\n    const buttonDisabled = amount.isNaN() || amount.lte(0) || amount.gt(this.props.tokenBalance);\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  approve = async () => {\n    // Check if the migration contract is approved\n    const contractApproved = await this.checkContractApproved();\n\n    if (!contractApproved){\n\n      const callbackApprove = (tx,error) => {\n        // Send Google Analytics event\n        const eventData = {\n          eventAction: 'approve',\n          eventCategory: 'CurveDeposit',\n          eventLabel: tx ? tx.status : null\n        };\n\n        const txSucceeded = tx && tx.status === 'success';\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n\n        this.setState((prevState) => ({\n          contractApproved: txSucceeded, // True\n          processing: {\n            ...prevState.processing,\n            txHash:null,\n            loading:false\n          }\n        }));\n\n        if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n          this.props.callbackApprove(tx);\n        }\n      };\n\n      const callbackReceiptApprove = (tx) => {\n        const txHash = tx.transactionHash;\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            txHash\n          }\n        }));\n      };\n\n      // console.log('Approve',this.props.tokenConfig.token,this.props.contractInfo.address);\n      if (this.props.approveMaxAllowance && !this.functionsUtil.BNify(this.props.approveMaxAllowance).isNaN()){\n        this.functionsUtil.enableERC20MaxAllowance(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.approveMaxAllowance,callbackApprove,callbackReceiptApprove);\n      } else {\n        this.functionsUtil.enableERC20(this.props.tokenConfig.token,this.props.contractInfo.address,callbackApprove,callbackReceiptApprove);\n      }\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash:null,\n          loading:true\n        },\n        contractApproved:false\n      }));\n    } else {\n      this.setState({\n        contractApproved:true\n      });\n    }\n  }\n\n  executeTx = async () => {\n\n    const inputValue = this.state.inputValue ? this.functionsUtil.BNify(this.state.inputValue) : null;\n    if (!inputValue){\n      return false;\n    }\n\n    if (typeof this.props.checkLimit === 'function'){\n      const limitCheck = await this.props.checkLimit(inputValue);\n      if (!limitCheck){\n        return false;\n      }\n    }\n\n    const _amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n\n    // console.log('executeTx',params);\n\n    const callback = (tx,error) => {\n\n      const txSucceeded = tx && tx.status === 'success';\n\n      // Send Google Analytics event\n      if (tx){\n        const eventData = {\n          eventLabel: tx.status,\n          eventCategory: `CurveDeposit`,\n          eventValue: inputValue.toFixed(),\n          eventAction: this.props.tokenConfig.token,\n        };\n\n        if (error){\n          eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n        }\n\n        // Send Google Analytics event\n        if (error || eventData.status !== 'error'){\n          this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n        }\n      }\n\n      this.setState({\n        txSucceeded,\n        processing: {\n          txHash:null,\n          loading:false\n        }\n      });\n\n      if (txSucceeded){\n        // Reset input\n        this.changeInputValue({\n          target:{\n            value:0\n          }\n        },false);\n        this.setState({\n          showPermitBox:false\n        });\n        // Call upper component callback\n        if (typeof this.props.callback === 'function'){\n          this.props.callback(tx,_amount,params);\n        }\n      }\n    };\n\n    const callbackReceipt = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          txHash\n        }\n      }));\n    };\n\n    let params = null;\n\n    // Check contract approved without permit\n    let contractName = this.props.contractInfo.name;\n    const contractApproved = await this.checkContractApproved(false);\n\n    const permitEnabled = this.props.permitEnabled && this.state.permitEnabled && !contractApproved;\n    if (permitEnabled){\n      const signedParameters = await this.functionsUtil.signPermit(this.props.tokenConfig.token, this.props.account, contractName);\n      // console.log('signedParameters',signedParameters);\n      if (signedParameters){\n        params = this.props.getPermitTransactionParams(_amount,signedParameters);\n      }\n    } else {\n      if (this.props.getTransactionParams_async){\n        params = await this.props.getTransactionParams_async(_amount,this.state.fastBalanceSelector);\n      } else {\n        params = this.props.getTransactionParams(_amount,this.state.fastBalanceSelector);\n      }\n    }\n\n    if (params){\n      let {\n        methodName,\n        methodParams\n      } = params;\n\n      const value = params.value || null;\n      contractName = params.contractName || this.props.contractInfo.name;\n\n      // console.log('SendTxWithBalance',contractName, methodName, methodParams, value);\n\n      this.props.contractMethodSendWrapper(contractName, methodName, methodParams, value, callback, callbackReceipt);\n\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:true\n        }\n      }));\n    } else {\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          loading:false\n        }\n      }));\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false\n      }\n    });\n  }\n\n  async checkContractApproved(checkPermit=true){\n\n    if (checkPermit && this.props.permitEnabled && this.state.permitEnabled){\n      return true;\n    }\n\n    if (this.props.approveEnabled !== undefined && !this.props.approveEnabled){\n      return true;\n    }\n    \n    const contractApproved = await this.functionsUtil.checkTokenApproved(this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account);\n\n    // console.log('checkContractApproved',this.props.tokenConfig.token,this.props.contractInfo.address,this.props.account,contractApproved);\n\n    return contractApproved;\n  }\n\n  async loadData(){\n    const inputValue = null;\n    const fastBalanceSelector = null;\n    const approveEnabled = !!this.props.approveEnabled;\n\n\n    if (this.props.contractInfo){\n      await this.props.initContract(this.props.contractInfo.name,this.props.contractInfo.address,this.props.contractInfo.abi);\n    }\n\n    const contractApproved = approveEnabled ? await this.checkContractApproved() : true;\n\n    const newState = {\n      inputValue,\n      approveEnabled,\n      contractApproved,\n      fastBalanceSelector\n    };\n\n    this.setState(newState);\n  }\n\n  approveCallback = () => {\n    this.loadData();\n  }\n\n  render() {\n\n    const viewOnly = this.props.connectorName === 'custom';\n    const action = this.props.action ? this.props.action : 'Deposit';\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'stretch'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          viewOnly ? (\n            <IconBox\n              cardProps={{\n                mt:3\n              }}\n              icon={'Visibility'}\n              text={'You are using Idle in \"Read-Only\" mode.<br />Logout and connect with your wallet to interact.'}\n            />\n          ) : !this.props.account ? (\n            <ConnectBox\n              {...this.props}\n            />\n          ) : this.props.tokenConfig && !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && this.functionsUtil.BNify(this.props.tokenBalance).gt(0) ? (\n            <Box\n              width={1}\n            >\n              {\n                this.props.infoBox && (\n                  <IconBox\n                    cardProps={{\n                      mb:3\n                    }}\n                    {...this.props.infoBox}\n                  />\n                )\n              }\n              {\n                this.props.steps && this.props.steps.length>0 && (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      px:[2,4]\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    > \n                      {\n                        this.props.steps.map( (step,stepIndex) => (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            key={`step_${stepIndex}`}\n                          >\n                            <Icon\n                              size={'1.5em'}\n                              name={ step.completed ? 'CheckBox' : step.icon}\n                              color={ step.completed ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                            />\n                            {\n                              step.link ? (\n                                <ExtLink\n                                  ml={2}\n                                  fontSize={2}\n                                  color={'blue'}\n                                  fontWeight={1}\n                                  href={step.link}\n                                  textAlign={'left'}\n                                  hoverColor={'blue'}\n                                >\n                                  {step.description}\n                                </ExtLink>\n                              ) : (\n                                <Text\n                                  ml={2}\n                                  fontSize={2}\n                                  fontWeight={1}\n                                  color={'cellText'}\n                                  textAlign={'left'}\n                                >\n                                  {step.description}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        ) )\n                      }\n                    </Flex>\n                  </DashboardCard>\n                )\n              }\n              <Box\n                width={1}\n              >\n                {\n                  this.state.showPermitBox && this.props.permitEnabled ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:3,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'Warning'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Approve and Deposit in a single transaction is supported for this transaction, disable this feature and try again if you can't deposit.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.props.permitEnabled && (\n                    <Flex\n                      p={2}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                      backgroundColor={'DashboardCard'}\n                      border={`1px solid ${this.props.theme.colors.primary}`}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Permit signature?\n                      </Link>\n                      <Icon\n                        ml={1}\n                        size={'1em'}\n                        name={'Warning'}\n                        color={'primary'}\n                      />\n                    </Flex>\n                  )\n                }\n              </Box>\n              {\n                this.state.approveEnabled && !this.state.contractApproved ?\n                  this.state.processing.loading ? (\n                    <Flex\n                      mt={3}\n                      flexDirection={'column'}\n                    >\n                      <TxProgressBar\n                        {...this.props}\n                        waitText={`Approve estimated in`}\n                        hash={this.state.processing.txHash}\n                        endMessage={`Finalizing approve request...`}\n                        cancelTransaction={this.cancelTransaction.bind(this)}\n                      />\n                    </Flex>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          name={'LockOpen'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          dangerouslySetInnerHTML={{\n                            __html:this.props.approveDescription\n                          }}\n                        />\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.approve.bind(this)}\n                        >\n                          Approve\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  )\n                : this.state.processing.loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      hash={this.state.processing.txHash}\n                      endMessage={`Finalizing ${action} request...`}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      waitText={`${this.functionsUtil.capitalize(action)} estimated in`}\n                    />\n                  </Flex>\n                ) : (\n                  <Box\n                    mt={2}\n                    width={1}\n                  >\n                    <Flex\n                      mt={2}\n                      mb={3}\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        mb={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                      >\n                        {\n                          this.props.balanceSelectorInfo && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                textAlign={'left'}\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                                color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                dangerouslySetInnerHTML={{\n                                  __html: this.props.balanceSelectorInfo.text\n                                }}\n                              />\n                              {\n                                this.props.balanceSelectorInfo.tooltip && (\n                                  <Tooltip\n                                    placement={'top'}\n                                    message={this.props.balanceSelectorInfo.tooltip}\n                                  >\n                                    <Icon\n                                      ml={1}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                      name={\"InfoOutline\"}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          )\n                        }\n                        {\n                          !this.functionsUtil.BNify(this.props.tokenBalance).isNaN() && (\n                            <Flex\n                              width={1}\n                              maxWidth={'50%'}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'flex-end'}\n                            >\n                              <Link\n                                fontSize={1}\n                                fontWeight={3}\n                                color={'dark-gray'}\n                                textAlign={'right'}\n                                hoverColor={'copyColor'}\n                                onClick={ (e) => this.setFastBalanceSelector(100) }\n                                style={{\n                                  maxWidth:'100%',\n                                  overflow:'hidden',\n                                  whiteSpace:'nowrap',\n                                  textOverflow:'ellipsis'\n                                }}\n                              >\n                                Balance: {this.functionsUtil.BNify(this.props.tokenBalance).toFixed(this.props.isMobile ? 2 : 4)} {this.props.tokenConfig.label || this.props.tokenConfig.token}\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                      <Input\n                        min={0}\n                        type={\"number\"}\n                        required={true}\n                        height={'3.4em'}\n                        borderRadius={2}\n                        fontWeight={500}\n                        borderColor={'cardBorder'}\n                        backgroundColor={'cardBg'}\n                        boxShadow={'none !important'}\n                        placeholder={`Insert amount`}\n                        onChange={this.changeInputValue.bind(this)}\n                        border={`1px solid ${this.props.theme.colors.divider}`}\n                        value={this.state.inputValue !== null ? this.functionsUtil.BNify(this.state.inputValue).toFixed() : ''}\n                      />\n                      <Flex\n                        mt={2}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        {\n                          [25,50,75,100].map( percentage => (\n                            <FastBalanceSelector\n                              percentage={percentage}\n                              key={`selector_${percentage}`}\n                              onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                              isActive={this.state.fastBalanceSelector === parseInt(percentage)}\n                            />\n                          ))\n                        }\n                      </Flex>\n                      <Flex\n                        mt={2}\n                        justifyContent={'center'}\n                      >\n                        <RoundButton\n                          handleClick={this.executeTx.bind(this)}\n                          buttonProps={Object.assign({\n                            mt:2,\n                            width:[1,1/2],\n                            style:{\n                              textTransform:'capitalize'\n                            },\n                            disabled:this.state.buttonDisabled||this.props.buttonDisabled\n                          },this.props.buttonProps)}\n                        >\n                          {this.props.action}\n                        </RoundButton>\n                      </Flex>\n                    </Flex>\n                  </Box>\n                )\n              }\n            </Box>\n          ) : this.props.children\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default SendTxWithBalance;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Heading, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass Gauges extends Component {\n\n  state = {\n    canVote:true,\n    infoBox:null,\n    claimText:null,\n    unlockDate:null,\n    inputValue:null,\n    balanceProp:null,\n    tokenConfig:null,\n    noFundsText:null,\n    gaugeConfig:null,\n    contractInfo:null,\n    lastUserVote:null,\n    selectedToken:null,\n    rewardsTokens:null,\n    veTokenBalance:null,\n    approveEnabled:null,\n    claimSucceded:false,\n    claimToken:'default',\n    buttonDisabled:false,\n    availableGauges:null,\n    claimableTokens:null,\n    votingPowerUsed:null,\n    availableTokens:null,\n    stakeAction:'deposit',\n    selectedAction:'vote',\n    gaugeTotalSupply:null,\n    distributionRate:null,\n    gaugeWorkingSupply:null,\n    veTokenTotalSupply:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    trancheTokenBalance:null,\n    availableVotingPower:null,\n    gaugePeriodTimestamp:null,\n    gaugeWorkingBalances:null,\n    claimableRewardsTokens:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    this.loadEmptyGauges();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.setState({\n        infoBox:null,\n        gaugeConfig:null,\n        claimSucceded:false,\n        claimToken:'default'\n      },() => {\n        this.loadGaugeData();\n      })\n    }\n\n    const stakeActionChanged = prevState.stakeAction !== this.state.stakeAction;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChanged || stakeActionChanged){\n      this.setState({\n        infoBox:null,\n        claimSucceded:false\n      },() => {\n        this.loadTokenData();\n      });\n    }\n  }\n\n  loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableGauges).reduce((obj, token) => {\n      const gaugeConfig = this.props.toolProps.availableGauges[token];\n      const baseTokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n\n      const tokenConfig = {};\n      tokenConfig.token = token;\n      tokenConfig.abi = gaugeConfig.abi;\n      tokenConfig.address = gaugeConfig.address;\n      tokenConfig.decimals = baseTokenConfig.decimals;\n      obj[token] = tokenConfig;\n      return obj;\n    }, {});\n\n    const tokenUrlParam = this.props.urlParams.param2 || this.props.urlParams.param1;\n    const selectedToken = tokenUrlParam && Object.keys(availableTokens).includes(tokenUrlParam) ? tokenUrlParam : Object.keys(availableTokens)[0];\n\n    // console.log(this.props.urlParams,Object.keys(availableTokens).includes(this.props.urlParams.param2),selectedToken);\n\n    this.setState({\n      selectedToken,\n      availableTokens\n    },() => {\n      this.loadGaugeData();\n    });\n  }\n\n  calculateGaugeBoost(stakedBalance=null) {\n\n    if (this.functionsUtil.BNify(stakedBalance).isNaN()){\n      stakedBalance = this.functionsUtil.BNify(0);\n    }\n\n    stakedBalance = this.functionsUtil.BNify(stakedBalance).plus(this.state.stakedBalance);\n\n    let l = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(stakedBalance,18));\n    let voting_balance = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(this.state.veTokenBalance,18));\n    let voting_total = this.functionsUtil.BNify(this.state.veTokenTotalSupply);\n    // let period_timestamp = this.functionsUtil.BNify(this.state.gaugePeriodTimestamp);\n    let working_balances = this.functionsUtil.BNify(this.state.gaugeWorkingBalances);\n    let working_supply = this.functionsUtil.BNify(this.state.gaugeWorkingSupply);\n    let L = this.functionsUtil.BNify(this.state.gaugeTotalSupply).plus(l);\n    \n    let TOKENLESS_PRODUCTION = this.functionsUtil.BNify(40);\n    let lim = l.times(TOKENLESS_PRODUCTION).div(100);\n    lim = lim.plus(L.times(voting_balance).div(voting_total).times((this.functionsUtil.BNify(100).minus(TOKENLESS_PRODUCTION)).div(100)));\n    lim = this.functionsUtil.BNify(Math.min(l, lim));\n    \n    let old_bal = working_balances;\n    let noboost_lim = TOKENLESS_PRODUCTION.times(l).div(100);\n    let noboost_supply = working_supply.plus(noboost_lim).minus(old_bal);\n    let _working_supply = working_supply.plus(lim).minus(old_bal);\n\n    let boost = this.functionsUtil.BNify(lim).div(_working_supply).div(noboost_lim.div(noboost_supply));\n\n    if (!boost || boost.isNaN()){\n      boost = this.functionsUtil.BNify(1);\n    }\n\n    // console.log('calculateGaugeBoost',voting_balance.div(1e18).toFixed(),voting_total.div(1e18).toFixed(),l.div(1e18).toFixed(),L.div(1e18).toFixed(),lim.div(1e18).toFixed(),_working_supply.div(1e18).toFixed(),noboost_lim.div(1e18).toFixed(),noboost_supply.div(1e18).toFixed(),boost.toFixed());\n\n    return boost;\n  }\n\n  async loadGaugeData(){\n    const veTokenConfig = this.props.toolProps.veToken;\n    const gaugeConfig = this.props.toolProps.availableGauges[this.state.selectedToken];\n\n    // Initialize veToken\n    const veTokenContract = this.functionsUtil.getContractByName(veTokenConfig.token);\n    if (!veTokenContract && veTokenConfig.abi){\n      await this.props.initContract(veTokenConfig.token,veTokenConfig.address,veTokenConfig.abi);\n    }\n\n    // Initialize tranche token\n    const trancheTokenConfig = gaugeConfig.trancheToken;\n    const trancheTokenContract = this.functionsUtil.getContractByName(trancheTokenConfig.name);\n    if (!trancheTokenContract && trancheTokenConfig.abi){\n      await this.props.initContract(trancheTokenConfig.token,trancheTokenConfig.address,trancheTokenConfig.abi);\n    }\n\n    // Initialize Liquidity Gauge contract\n    const liquidityGaugeConfig = this.functionsUtil.getContractByName(gaugeConfig.name);\n    if (!liquidityGaugeConfig && gaugeConfig.abi){\n      await this.props.initContract(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi);\n    }\n\n    let [\n      blockInfo,\n      gaugeTotalSupply,\n      veTokenTotalSupply,\n      distributionRate,\n      stakedBalance,\n      rewardsTokens,\n      gaugeWorkingSupply,\n      veTokenBalance,\n      gaugePeriodTimestamp,\n      trancheTokenBalance,\n      votingPowerUsed,\n      gaugeWorkingBalances,\n      lastUserVote\n    ] = await Promise.all([\n      this.functionsUtil.getBlockInfo(),\n      this.functionsUtil.getTokenTotalSupply(gaugeConfig.name),\n      this.functionsUtil.getTokenTotalSupply(veTokenConfig.token),\n      this.functionsUtil.genericContractCall('GaugeDistributor','rate'),\n      this.functionsUtil.getTokenBalance(gaugeConfig.name,this.props.account),\n      this.functionsUtil.getGaugeRewardsTokens(gaugeConfig,this.props.account),\n      this.functionsUtil.genericContractCall(gaugeConfig.name,'working_supply'),\n      this.functionsUtil.getTokenBalance(veTokenConfig.token,this.props.account),\n      this.functionsUtil.genericContractCall(gaugeConfig.name,'period_timestamp',[0]),\n      this.functionsUtil.getTokenBalance(trancheTokenConfig.token,this.props.account),\n      this.functionsUtil.genericContractCall('GaugeController','vote_user_power',[this.props.account]),\n      this.functionsUtil.genericContractCall(gaugeConfig.name,'working_balances',[this.props.account]),\n      this.functionsUtil.genericContractCall('GaugeController','last_user_vote',[this.props.account,gaugeConfig.address])\n    ]);\n\n    // console.log('distributionRate',distributionRate);\n\n    const claimableRewardsTokens = Object.keys(rewardsTokens).filter( token => token !== 'IDLE' ).reduce( (claimableRewards,token) => {\n      const tokenConfig = rewardsTokens[token];\n      if (tokenConfig.balance.gt(0)){\n        claimableRewards[token] = this.functionsUtil.fixTokenDecimals(tokenConfig.balance,tokenConfig.decimals);\n      }\n      return claimableRewards;\n    },{});\n\n    const claimableTokens = this.functionsUtil.fixTokenDecimals(rewardsTokens.IDLE.balance,18);\n\n    if (distributionRate){\n      distributionRate = this.functionsUtil.fixTokenDecimals(distributionRate,18).times(86400);\n    }\n\n    votingPowerUsed = this.functionsUtil.BNify(votingPowerUsed).div(10000);\n\n    this.setState({\n      blockInfo,\n      gaugeConfig,\n      lastUserVote,\n      rewardsTokens,\n      stakedBalance,\n      veTokenBalance,\n      votingPowerUsed,\n      claimableTokens,\n      gaugeTotalSupply,\n      distributionRate,\n      gaugeWorkingSupply,\n      veTokenTotalSupply,\n      trancheTokenBalance,\n      gaugeWorkingBalances,\n      gaugePeriodTimestamp,\n      claimableRewardsTokens\n    },() => {\n      this.loadTokenData(true);\n    });\n  }\n\n  async loadTokenData(loadGauges=false){\n\n    if (!this.state.gaugeConfig){\n      this.loadGaugeData();\n    }\n\n    const veTokenConfig = this.props.toolProps.veToken;\n    const gaugeConfig = this.props.toolProps.availableGauges[this.state.selectedToken];\n    const trancheTokenConfig = gaugeConfig.trancheToken;\n\n    let canVote = true;\n    let unlockDate = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let noFundsText = null;\n    let contractInfo = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n    let balanceSelectorInfo = null;\n\n    switch (this.state.selectedAction){\n      case 'vote':\n        approveEnabled = false;\n        tokenConfig = veTokenConfig;\n        const veTokenBalanceUsed = this.functionsUtil.BNify(this.state.veTokenBalance).times(this.state.votingPowerUsed);\n        balanceProp = this.functionsUtil.BNify(this.state.veTokenBalance).minus(veTokenBalanceUsed);\n        balanceSelectorInfo = {\n          color:`copyColor`,\n          text:`Allocated power: ${this.functionsUtil.BNify(this.state.votingPowerUsed).times(100).toFixed(2)}%`\n        };\n        contractInfo = this.functionsUtil.getGlobalConfig(['contracts',1,'GaugeController']);\n        noFundsText = `Stake your ${this.functionsUtil.getGlobalConfig(['governance','props','tokenName'])} tokens to allocate your voting power to this Gauge and boost the daily rewards you receive.`;\n\n        const nextUnlockTime = this.state.lastUserVote ? parseInt(this.state.lastUserVote)+this.props.toolProps.WEIGHT_VOTE_DELAY : null;\n        canVote = !nextUnlockTime || this.state.blockInfo.timestamp>=nextUnlockTime;\n\n        unlockDate = nextUnlockTime ? this.functionsUtil.strToMoment(nextUnlockTime*1000).utc().format('YYYY-MM-DD HH:mm') : null;\n      break;\n      case 'stake':\n        switch (this.state.stakeAction){\n          case 'deposit':\n            approveEnabled = true;\n            contractInfo = gaugeConfig;\n            tokenConfig = trancheTokenConfig;\n            balanceProp = this.state.trancheTokenBalance;\n            noFundsText = `You don't have any <strong>${tokenConfig.token}</strong> in your wallet to deposit.`;\n            approveDescription = `Approve the Gauge contract to deposit your <strong>${trancheTokenConfig.token}</strong> tokens`;\n\n            const boost = this.calculateGaugeBoost(0);\n            balanceSelectorInfo = {\n              color:`copyColor`,\n              tooltip:this.functionsUtil.getGlobalConfig(['messages','gaugeBoost']),\n              text:`Boost: <span style=\"color:${this.props.theme.colors.transactions.status.completed}\">${boost.toFixed(2)}x</span>`,\n            };\n          break;\n          case 'claim':\n            approveEnabled = false;\n            contractInfo = this.functionsUtil.getGlobalConfig(['contracts',1,'GaugeDistributor']);\n          break;\n          case 'withdraw':\n            approveEnabled = false;\n            contractInfo = gaugeConfig;\n            tokenConfig = trancheTokenConfig;\n            balanceProp = this.state.stakedBalance;\n            noFundsText = `You don't have any <strong>${tokenConfig.token}</strong> in the Gauge contract to withdraw.`;\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      canVote,\n      unlockDate,\n      noFundsText,\n      tokenConfig,\n      gaugeConfig,\n      balanceProp,\n      contractInfo,\n      approveEnabled,\n      approveDescription,\n      balanceSelectorInfo\n    },() => {\n      if (loadGauges || !this.state.availableGauges){\n        this.loadGauges();\n      }\n    });\n  }\n\n  async loadEmptyGauges(){\n    const availableGauges = {};\n    Object.keys(this.props.toolProps.availableGauges).forEach( gaugeToken => {\n      const gaugeConfig = this.props.toolProps.availableGauges[gaugeToken];\n      const trancheConfig = this.props.availableTranches[gaugeConfig.protocol] ? this.props.availableTranches[gaugeConfig.protocol][gaugeToken] : null;\n\n      if (!trancheConfig){\n        return;\n      }\n\n      if (!availableGauges[gaugeConfig.protocol]){\n        availableGauges[gaugeConfig.protocol] = {};\n      }\n\n      availableGauges[gaugeConfig.protocol][gaugeToken] = trancheConfig;\n      availableGauges[gaugeConfig.protocol][gaugeToken].weight = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].nextWeight = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].totalSupply = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].rewardsTokens = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].stakedBalance = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].claimableTokens = null;\n      availableGauges[gaugeConfig.protocol][gaugeToken].distributionRate = null;\n    });\n\n    this.setState({\n      availableGauges\n    });\n  }\n\n  async loadGauges(){\n\n    const gaugesOrderKeys = {};\n    const availableGauges = {};\n    const veTokenConfig = this.props.toolProps.veToken;\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableGauges), async (gaugeToken) => {\n      const gaugeConfig = this.props.toolProps.availableGauges[gaugeToken];\n      if (!availableGauges[gaugeConfig.protocol]){\n        availableGauges[gaugeConfig.protocol] = {};\n      }\n\n      const trancheConfig = this.props.availableTranches[gaugeConfig.protocol] ? this.props.availableTranches[gaugeConfig.protocol][gaugeToken] : null;\n\n      if (trancheConfig){\n\n        const liquidityGaugeContract = this.functionsUtil.getContractByName(gaugeConfig.name);\n        if (!liquidityGaugeContract && gaugeConfig.abi){\n          await this.props.initContract(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi);\n        }\n\n        let [\n          gaugeNextWeight,\n          gaugeTotalSupply,\n          stakedBalance,\n          rewardsTokens,\n          gaugeWorkingSupply,\n          userWorkingBalance,\n          gaugeWeight,\n        ] = await Promise.all([\n          this.functionsUtil.getGaugeNextWeight(gaugeConfig),\n          this.functionsUtil.getTokenTotalSupply(gaugeConfig.name),\n          this.functionsUtil.getTokenBalance(gaugeConfig.name,this.props.account),\n          this.functionsUtil.getGaugeRewardsTokens(gaugeConfig,this.props.account),\n          this.functionsUtil.genericContractCall(gaugeConfig.name,'working_supply'),\n          this.functionsUtil.genericContractCall(gaugeConfig.name,'working_balances',[this.props.account]),\n          this.functionsUtil.genericContractCall('GaugeController','gauge_relative_weight',[gaugeConfig.address])\n        ]);\n\n        const claimableRewardsTokens = Object.keys(rewardsTokens).reduce( (claimableRewards,token) => {\n          const tokenConfig = rewardsTokens[token];\n          if (tokenConfig.balance.gt(0)){\n            claimableRewards[token] = this.functionsUtil.fixTokenDecimals(tokenConfig.balance,tokenConfig.decimals);\n          }\n          return claimableRewards;\n        },{});\n\n        let gaugeUserShare = null;\n        let userBoostedDistribution = null;\n        gaugeWeight = this.functionsUtil.fixTokenDecimals(gaugeWeight,18);\n        gaugeNextWeight = this.functionsUtil.fixTokenDecimals(gaugeNextWeight,18);\n        gaugeTotalSupply = this.functionsUtil.fixTokenDecimals(gaugeTotalSupply,18);\n        const gaugeDistributionRate = this.state.distributionRate.times(gaugeWeight);\n\n        if (this.props.account){\n          gaugeUserShare = this.functionsUtil.BNify(stakedBalance).div(gaugeTotalSupply);\n          // const veTokenShare = this.functionsUtil.BNify(this.functionsUtil.normalizeTokenAmount(this.state.veTokenBalance,18)).div(this.state.veTokenTotalSupply);\n          // const userBaseDistribution = gaugeDistributionRate.times(gaugeUserShare);\n\n          const userBoostedShare = this.functionsUtil.BNify(userWorkingBalance).div(gaugeWorkingSupply);\n          userBoostedDistribution = gaugeDistributionRate.times(userBoostedShare);\n          if (userBoostedDistribution.gt(gaugeDistributionRate)){\n            userBoostedDistribution = gaugeDistributionRate;\n          }\n          // console.log(gaugeConfig.name,stakedBalance.toFixed(),gaugeTotalSupply.toFixed());\n          // console.log(gaugeConfig.name,'veTokenShare',veTokenShare.toFixed(8),'gaugeUserShare',gaugeUserShare.toFixed(8),'gaugeUserBoostedShare',userBoostedShare.toFixed(8),'userBaseDistribution',userBaseDistribution.toFixed(8),'userBoostedDistribution',userBoostedDistribution.toFixed(8),'gaugeDistributionRate',gaugeDistributionRate.toFixed(8));\n        } else {\n          stakedBalance = this.functionsUtil.BNify(0);\n        }\n\n        const claimableTokens = Object.keys(claimableRewardsTokens).length ? Object.keys(claimableRewardsTokens).map( token => {\n          const tokenBalance = claimableRewardsTokens[token];\n          let text = `${tokenBalance.toFixed(4)} ${token}`;\n          if (this.props.account){\n            if (!this.functionsUtil.BNify(userBoostedDistribution).isNaN() && token.toLowerCase() === veTokenConfig.rewardToken.toLowerCase()){\n              text += ` (~${userBoostedDistribution.toFixed(4)}/day)`;\n            } else if (rewardsTokens[token].rate){\n              let userDistributionRate = rewardsTokens[token].rate.times(gaugeUserShare);\n              if (userDistributionRate.gt(rewardsTokens[token].rate)){\n                userDistributionRate = rewardsTokens[token].rate;\n              }\n              text += ` (~${userDistributionRate.toFixed(4)}/day)`;\n            }\n          }\n          return text;\n        }).join('<br />') : '-';\n\n        const distributionRate = Object.keys(rewardsTokens).length ? Object.keys(rewardsTokens).map( token => {\n          if (token.toLowerCase() === veTokenConfig.rewardToken.toLowerCase()){\n            return `${gaugeDistributionRate.toFixed(4)} ${token}/day`;\n          } else {\n            const tokenDistributionRate = rewardsTokens[token].rate;\n            return `${tokenDistributionRate.toFixed(4)} ${token}/day`;\n          }\n        }).join('<br />') : '-';\n\n        availableGauges[gaugeConfig.protocol][gaugeToken] = trancheConfig;\n        availableGauges[gaugeConfig.protocol][gaugeToken].rewardsTokens = rewardsTokens;\n        availableGauges[gaugeConfig.protocol][gaugeToken].stakedBalance = stakedBalance;\n        availableGauges[gaugeConfig.protocol][gaugeToken].totalSupply = gaugeTotalSupply;\n        availableGauges[gaugeConfig.protocol][gaugeToken].claimableTokens = claimableTokens;\n        availableGauges[gaugeConfig.protocol][gaugeToken].distributionRate = distributionRate;\n        availableGauges[gaugeConfig.protocol][gaugeToken].weight = gaugeWeight.times(100).toFixed(2)+'%';\n        availableGauges[gaugeConfig.protocol][gaugeToken].nextWeight = gaugeNextWeight.times(100).toFixed(2)+'%';\n\n        gaugesOrderKeys[`${gaugeWeight.times(100).toFixed(2)}_${gaugeConfig.protocol}_${gaugeToken}`] = {\n          gaugeToken,\n          gaugeConfig\n        };\n      }\n    });\n\n    const gaugesOrderedKeys = Object.keys(gaugesOrderKeys).sort().reverse().reduce(\n      (obj, key) => { \n        obj[key] = gaugesOrderKeys[key]; \n        return obj;\n      }, \n      {}\n    );\n\n\n    const availableGaugesSorted = {};\n    Object.values(gaugesOrderedKeys).forEach( g => {\n      if (!availableGaugesSorted[g.gaugeConfig.protocol]){\n        availableGaugesSorted[g.gaugeConfig.protocol] = {};\n      }\n      availableGaugesSorted[g.gaugeConfig.protocol][g.gaugeToken] = availableGauges[g.gaugeConfig.protocol][g.gaugeToken];\n    });\n\n    // console.log('availableGauges',availableGaugesSorted,gaugesOrderedKeys);\n    this.setState({\n      availableGauges:availableGaugesSorted\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setClaimToken(claimToken){\n    if (claimToken !== this.state.claimToken){\n      this.setState({\n        claimToken,\n        claimSucceded:null\n      });\n    }\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      const infoBox = null;\n      const inputValue = null;\n      this.setState({\n        infoBox,\n        inputValue,\n        selectedAction\n      });\n    }\n  }\n\n  setStakeAction(stakeAction){\n    if (stakeAction !== this.state.stakeAction){\n      this.setState({\n        stakeAction\n      });\n    }\n  }\n\n  async transactionSucceeded(tx,amount,params){\n\n    let infoBox = null;\n    let claimText = null;\n    let claimSucceded = false;\n\n    switch (this.state.selectedAction){\n      case 'vote':\n        const votingWeight = this.functionsUtil.BNify(params.methodParams[1]).div(100).toFixed(2);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully allocated <strong>${votingWeight}%</strong> of your voting power to this Gauge`\n        };\n      break;\n      case 'stake':\n        switch (this.state.stakeAction){\n          case 'deposit':\n            const depositedAmount = this.functionsUtil.fixTokenDecimals(params.methodParams[0],18);\n            infoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully deposited <strong>${depositedAmount.toFixed(4)} ${this.state.tokenConfig.token}</strong> in the Gauge.`\n            };\n          break;\n          case 'claim':\n            claimSucceded = true;\n            switch (this.state.claimToken){\n              case 'additional':\n                claimText = `You have successfully claimed your additional rewards.`;\n              break;\n              default:\n              case 'default':\n                claimText = `You have successfully claimed <strong>${this.state.claimableTokens.toFixed(8)} IDLE</strong>.`;\n              break;\n            }\n          break;\n          case 'withdraw':\n            const withdrawnAmount = this.functionsUtil.fixTokenDecimals(params.methodParams[0],18);\n            infoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully withdrawn <strong>${withdrawnAmount.toFixed(4)} ${this.state.tokenConfig.token}</strong> from the Gauge.`\n            };\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      claimText,\n      claimSucceded\n    },() => {\n      this.loadGaugeData();\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    let infoBox = null;\n    let votingWeight = null;\n    let balanceSelectorInfo = null;\n\n    inputValue = this.functionsUtil.BNify(inputValue);\n    switch (this.state.selectedAction){\n      case 'vote':\n        if (inputValue.gt(0)){\n          const votingPowerPercentage = this.state.veTokenBalance.gt(0) ? inputValue.div(this.state.veTokenBalance).times(100).toFixed(2) : this.functionsUtil.BNify(0);\n          votingWeight = this.state.veTokenBalance.gt(0) ? this.functionsUtil.integerValue(inputValue.div(this.state.veTokenBalance).times(10000)) : this.functionsUtil.BNify(0);\n          infoBox = {\n            icon:'Info',\n            text:`You are allocating <strong>${votingPowerPercentage}%</strong> of your voting power to this Gauge`\n          };\n        }\n      break;\n      case 'stake':\n        switch (this.state.stakeAction){\n          case 'deposit':\n            const boost = this.calculateGaugeBoost(inputValue);\n            balanceSelectorInfo = {\n              color:`copyColor`,\n              tooltip:this.functionsUtil.getGlobalConfig(['messages','gaugeBoost']),\n              text:`Boost: <span style=\"color:${this.props.theme.colors.transactions.status.completed}\">${boost.toFixed(2)}x</span>`,\n            };\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      inputValue,\n      votingWeight,\n      balanceSelectorInfo\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const gaugeAddress = this.props.toolProps.availableGauges[this.state.selectedToken].address;\n    switch (this.state.selectedAction){\n      case 'vote':\n        methodName = 'vote_for_gauge_weights';\n        methodParams = [gaugeAddress,this.state.votingWeight];\n      break;\n      case 'stake':\n        const amount = this.functionsUtil.normalizeTokenAmount(this.state.inputValue,18);\n        switch (this.state.stakeAction){\n          case 'deposit':\n            methodName = 'deposit';\n            methodParams = [amount];\n          break;\n          case 'withdraw':\n            methodName = 'withdraw';\n            methodParams = [amount];\n          break;\n          default:\n          break;\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1, '35em']}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select Gauge:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              onChange={this.selectToken.bind(this)}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.state.availableTokens}\n            />\n          </Box>\n          {\n            !this.state.gaugeConfig ? (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection: 'row'\n                }}\n                loaderProps={{\n                  size: '30px'\n                }}\n                textProps={{\n                  ml: 2\n                }}\n                text={'Loading Gauge info...'}\n              />\n            ) : (\n              <Box\n                width={1}\n              >\n                <Box\n                  mt={1}\n                  mb={2}\n                  width={1}\n                >\n                  <Text\n                    mb={1}\n                  >\n                    Choose action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <CardIconButton\n                      {...this.props}\n                      cardProps={{\n                        px:3,\n                        py:2,\n                        width:0.49\n                      }}\n                      textProps={{\n                        fontSize:[1,2]\n                      }}\n                      text={'Vote'}\n                      iconColor={'redeem'}\n                      iconBgColor={'#3f5fff'}\n                      image={'images/vote.svg'}\n                      isActive={ this.state.selectedAction === 'vote' }\n                      handleClick={ e => this.setSelectedAction('vote') }\n                    />\n                    <CardIconButton\n                      {...this.props}\n                      cardProps={{\n                        px:3,\n                        py:2,\n                        width:0.49\n                      }}\n                      textProps={{\n                        fontSize:[1,2]\n                      }}\n                      text={'Stake'}\n                      icon={'Layers'}\n                      iconColor={'deposit'}\n                      iconBgColor={'#ced6ff'}\n                      isActive={ this.state.selectedAction === 'stake' }\n                      handleClick={ e => this.setSelectedAction('stake') }\n                    />\n                  </Flex>\n                </Box>\n                {\n                  this.state.selectedAction === 'stake' && (\n                    <Box\n                      mb={2}\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Choose stake action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2]\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.32\n                          }}\n                          text={'Deposit'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.stakeAction === 'deposit' }\n                          handleClick={ e => this.setStakeAction('deposit') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2]\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.32\n                          }}\n                          text={'Claim'}\n                          iconColor={'#dd0000'}\n                          icon={'CardGiftcard'}\n                          iconBgColor={'#ffd979'}\n                          isActive={ this.state.stakeAction === 'claim' }\n                          handleClick={ e => this.setStakeAction('claim') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2]\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.32\n                          }}\n                          text={'Withdraw'}\n                          icon={'ArrowUpward'}\n                          iconColor={'redeem'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.stakeAction === 'withdraw' }\n                          handleClick={ e => this.setStakeAction('withdraw') }\n                        />\n                      </Flex>\n                    </Box>\n                  )\n                }\n                {\n                  this.state.selectedAction === 'stake' && this.state.stakeAction === 'claim' && this.state.rewardsTokens && Object.keys(this.state.rewardsTokens).length>1 && (\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Choose claim method:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2],\n                            fontWeight:500\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.49\n                          }}\n                          imageProps={{\n                            mr:2,\n                            width:'1.8em',\n                            height:'1.8em'\n                          }}\n                          text={'Claim IDLE'}\n                          image={'images/tokens/IDLE.svg'}\n                          isActive={ this.state.claimToken === 'default' }\n                          handleClick={ e => this.setClaimToken('default') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          textProps={{\n                            fontSize:[1,2],\n                            fontWeight:500\n                          }}\n                          cardProps={{\n                            px:3,\n                            py:2,\n                            width:0.49\n                          }}\n                          imageProps={{\n                            mr:2,\n                            width:'1.8em',\n                            height:'1.8em'\n                          }}\n                          handleClick={ e => this.setClaimToken('additional') }\n                          isActive={ this.state.claimToken === 'additional' }\n                          text={`Claim ${Object.keys(this.state.rewardsTokens).splice(1).join(', ')}`}\n                          image={this.functionsUtil.getTokenIcon(Object.keys(this.state.rewardsTokens)[1])}\n                        />\n                      </Flex>\n                    </Box>\n                  )\n                }\n                {\n                  this.state.selectedAction === 'vote' && !this.state.canVote ? (\n                    <IconBox\n                      cardProps={{\n                        mt:1\n                      }}\n                      icon={'DoneAll'}\n                      iconProps={{\n                        color:'tick'\n                      }}\n                      text={`Your vote has been succesfully broadcasted and will remain registered until you change it.<br />Wait until <strong>${this.state.unlockDate} UTC</strong> to update your vote for this gauge.`}\n                    />\n                  ) : (this.state.selectedAction === 'vote' || this.state.stakeAction !== 'claim') && this.state.tokenConfig ? (\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      permitEnabled={false}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.state.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.state.contractInfo}\n                      approveEnabled={this.state.approveEnabled}\n                      buttonDisabled={this.state.buttonDisabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      action={this.state.selectedAction === 'vote' ? 'Vote' : this.functionsUtil.capitalize(this.state.stakeAction)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.1em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                            dangerouslySetInnerHTML={{\n                              __html:this.state.noFundsText\n                            }}\n                          />\n                          {\n                            this.state.selectedAction === 'vote' && (\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,1/2]\n                                }}\n                                handleClick={e => this.props.goToSection(`stake`)}\n                              >\n                                Stake\n                              </RoundButton>\n                            )\n                          }\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  ) : this.state.stakeAction === 'claim' &&\n                    this.state.claimSucceded ? (\n                      <IconBox\n                        cardProps={{\n                          mt:2\n                        }}\n                        icon={'DoneAll'}\n                        text={this.state.claimText}\n                        iconProps={{\n                          size:this.props.isMobile ? '1.8em' : '2.1em',\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                      />\n                    ) : this.state.claimToken === 'default' ?\n                      !this.props.account ? (\n                        <ConnectBox\n                          {...this.props}\n                        />\n                      ) : (this.state.claimableTokens && this.state.claimableTokens.gt(0)) ? (\n                        <Flex\n                          mt={2}\n                          width={1}\n                          flexDirection={'column'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              p:3,\n                              mb:1\n                            }}\n                          >\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                color={'cellText'}\n                                name={'MonetizationOn'}\n                                size={this.props.isMobile ? '1.8em' : '2.1em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={[2,3]}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You can claim <strong>{this.state.claimableTokens.toFixed(8)} IDLE</strong>.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/3],\n                                  value:'Claim',\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                }}\n                                action={'Claim'}\n                                methodName={'distribute'}\n                                contractName={'GaugeDistributorProxy'}\n                                callback={this.transactionSucceeded.bind(this)}\n                                getTransactionParams={ e => [this.props.toolProps.availableGauges[this.state.selectedToken].address] }\n                              />\n                            </Flex>\n                          </DashboardCard>\n                        </Flex>\n                      ) : (\n                        <IconBox\n                          cardProps={{\n                            mt:2\n                          }}\n                          icon={'MoneyOff'}\n                          iconProps={{\n                            size:this.props.isMobile ? '1.8em' : '2.1em'\n                          }}\n                          text={`You don't have any IDLE to claim for this Gauge.`}\n                        />\n                      )\n                    : this.state.claimToken === 'additional' &&\n                      !this.props.account ? (\n                        <ConnectBox\n                          {...this.props}\n                        />\n                      ) : (this.state.claimableRewardsTokens && Object.keys(this.state.claimableRewardsTokens).length>0) ? (\n                        <Flex\n                          mt={2}\n                          width={1}\n                          flexDirection={'column'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              p:3,\n                              mb:1\n                            }}\n                          >\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                color={'cellText'}\n                                name={'MonetizationOn'}\n                                size={this.props.isMobile ? '1.8em' : '2.1em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={[2,3]}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You can claim {Object.keys(this.state.claimableRewardsTokens).map( (token,index) => (<strong key={`reward_${index}`}>{this.state.claimableRewardsTokens[token].toFixed(8)} {token}</strong>) )}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/3],\n                                  value:'Claim',\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                }}\n                                action={'Claim'}\n                                methodName={'claim_rewards'}\n                                contractName={this.state.gaugeConfig.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          </DashboardCard>\n                        </Flex>\n                      ) : (\n                        <IconBox\n                          cardProps={{\n                            mt:2\n                          }}\n                          icon={'MoneyOff'}\n                          iconProps={{\n                            size:this.props.isMobile ? '1.8em' : '2.1em'\n                          }}\n                          text={`You don't have any additional reward to claim for this Gauge.`}\n                        />\n                      )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n        {\n          this.state.availableGauges && (\n            <Flex\n              mt={3}\n              width={1}\n              mb={[3,4]}\n              flexDirection={'column'}\n            >\n              <Flex\n                pb={2}\n                width={1}\n                mb={[2,3]}\n                borderColor={'divider'}\n                borderBottom={'1px solid transparent'}\n              >\n                <Heading.h4\n                  fontSize={[2,4]}\n                  fontWeight={[3,4]}\n                >\n                  Available Gauges\n                </Heading.h4>\n              </Flex>\n              <TranchesList\n                handleClick={null}\n                enabledProtocols={[]}\n                colsProps={{\n                  fontSize:['10px','14px'],\n                }}\n                cols={[\n                  {\n                    title:'PROTOCOL', \n                    props:{\n                      width:[0.35, 0.12]\n                    },\n                    fields:[\n                      {\n                        name:'protocolIcon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        name:'protocolName'\n                      },\n                      {\n                        mobile:false,\n                        name:'experimentalBadge',\n                        props:{\n                          ml:1,\n                          height:'1.5em'\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOKEN',\n                    props:{\n                      width:[0.16, 0.13],\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'WEIGHT',\n                    props:{\n                      width:[0.25,0.07],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','weight']\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'NEXT WEIGHT',\n                    props:{\n                      width:[0.25,0.1],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','nextWeight']\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOTAL SUPPLY',\n                    props:{\n                      width:[0.26, 0.1],\n                    },\n                    fields:[\n                      {\n                        type:'number',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','totalSupply'],\n                        props:{\n                          minPrecision:1,\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                          decimals:this.props.isMobile ? 2 : 4\n                        }\n                      }\n                    ]\n                  },\n                  /*\n                  {\n                    title:'SENIOR APY',\n                    desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                    props:{\n                      width:[0.27,0.14],\n                    },\n                    parentProps:{\n                      flexDirection:'column',\n                      alignItems:'flex-start',\n                    },\n                    fields:[\n                      {\n                        name:'seniorApy',\n                        showTooltip:true\n                      },\n                    ],\n                  },\n                  */\n                  {\n                    mobile:false,\n                    title:'DEPOSITED',\n                    props:{\n                      width:[0.27,0.08],\n                    },\n                    fields:[\n                      {\n                        type:'number',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','stakedBalance'],\n                        props:{\n                          minPrecision:1,\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                          decimals:this.props.isMobile ? 2 : 4\n                        }\n                      },\n                    ],\n                  },\n                  {\n                    title:'REWARDS',\n                    props:{\n                      width:[0.23, 0.08],\n                    },\n                    fields:[\n                      {\n                        name:'custom',\n                        showLoader:true,\n                        type:'tokensList',\n                        path:['tokenConfig','rewardsTokens'],\n                        props:{\n                          \n                        }\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'DISTRIBUTION RATE',\n                    props:{\n                      width:[0.15, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'html',\n                        name:'custom',\n                        showLoader:true,\n                        props:{\n                          fontSize:1,\n                          lineHeight:1.3,\n                        },\n                        path:['tokenConfig','distributionRate'],\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'CLAIMABLE REWARDS',\n                    props:{\n                      width:[0.25,0.18],\n                    },\n                    fields:[\n                      {\n                        type:'html',\n                        showLoader:true,\n                        props:{\n                          fontSize:1,\n                          lineHeight:1.3,\n                        },\n                        name:'custom',\n                        path:['tokenConfig','claimableTokens']\n                      }\n                    ]\n                  },\n                ]}\n                {...this.props}\n                availableTranches={this.state.availableGauges}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Gauges;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport GenericSelector from '../GenericSelector/GenericSelector';\n\nclass Staking extends Component {\n\n  state = {\n    tokenConfig:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedOption:null,\n    availableTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const contractInfo = tokenConfig.contract;\n\n      // Init contracts\n      await Promise.all([\n        this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi),\n        this.props.initContract(this.state.selectedToken,tokenConfig.address,tokenConfig.abi)\n      ]);\n\n      this.setState({\n        tokenConfig,\n        contractInfo\n      });\n    }\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const selectedOption = availableTokens[0];\n    const selectedToken = selectedOption.value;\n\n    this.setState({\n      selectedToken,\n      selectedOption,\n      availableTokens\n    });\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  render() {\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const SelectedComponent = this.state.tokenConfig ? this.state.tokenConfig.component : null;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text\n                        mb={1}\n                      >\n                        Select Token:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'tokens'}\n                        isSearchable={false}\n                        options={this.state.availableTokens}\n                        CustomOptionValue={CustomOptionValue}\n                        onChange={this.selectToken.bind(this)}\n                        defaultValue={this.state.selectedOption}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      SelectedComponent && (\n                        <SelectedComponent\n                          {...this.props}\n                          tokenConfig={this.state.tokenConfig}\n                          contractInfo={this.state.contractInfo}\n                          selectedToken={this.state.selectedToken}\n                        />\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default Staking;","import React, { Component } from 'react';\nimport { Box, Flex, Text } from 'rimble-ui'\nimport Faquestion from '../Faquestion/Faquestion';\n\nclass GenericFaqs extends Component {\n  state = {\n    openedAnswer:null,\n    selectedSection:null\n  };\n  componentWillMount(){\n    const selectedSection = Object.keys(this.props.questions)[0];\n    this.setSection(selectedSection);\n  }\n  setSection(section) {\n    this.setState(state => ({...state, selectedSection: section, openedAnswer: null}));\n  }\n  toggleAnswer(e,i) {\n    e.preventDefault();\n    this.setState(state => ({...state, openedAnswer: state.openedAnswer===i ? null : i }));\n  };\n\n  render() {\n    const showSections = this.props.showSections === undefined || this.props.showSections;\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={\"center\"}\n        >\n          {\n            showSections && (\n              <Flex\n                mb={[3,4]}\n                px={[2,0]}\n                width={[1,3/5]}\n                flexDirection={'row'}\n                justifyContent={'space-between'}\n              >\n                {\n                  Object.keys(this.props.questions).map( (section,i) => {\n                    const isSelected = section === this.state.selectedSection;\n                    return (\n                      <Flex\n                        key={`section_${i}`}\n                        textAlign={'center'}\n                        justifyContent={'center'}\n                        width={1/Object.keys(this.props.questions).length}\n                        borderBottom={ isSelected ? '3px solid #0036ff' : 'none'}\n                      >\n                        <Text\n                          mb={1}\n                          fontWeight={3}\n                          fontSize={[2, 3]}\n                          textAlign={'center'}\n                          onClick={() => this.setSection(section)}\n                          color={isSelected ? 'blue' : 'copyColor'}\n                          className={['pointer', isSelected ? 'selected' : '']}\n                        >\n                          {section}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            )\n          }\n          <Box\n            width={1}\n          >\n            {\n              this.props.questions[this.state.selectedSection].map( (question,i) => (\n                <Faquestion\n                  key={`answer_${i}`}\n                  answer={question.a}\n                  pt={i === 0 ? 0 : ''}\n                  question={question.q}\n                  isOpened={this.state.openedAnswer === i}\n                  handleClick={ e => this.toggleAnswer(e,i) }\n                />\n              ))\n            }\n          </Box>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default GenericFaqs;","import React from \"react\";\nimport ModalCard from './ModalCard';\nimport { Text, Modal, Flex } from \"rimble-ui\";\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\nimport RoundButton from '../../RoundButton/RoundButton.js';\n\nclass LimitReachedModal extends React.Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  constructor(props) {\n    super(props);\n    this.loadUtils();\n  }\n\n  componentDidUpdate = async () => {\n    this.loadUtils();\n  }\n\n  closeModal = async () => {\n    this.props.closeModal();\n  }\n\n  render() {\n\n    return (\n      <Modal\n        isOpen={this.props.isOpen}\n      >\n        <ModalCard\n          maxWidth={['960px','650px']}\n          closeFunc={this.props.closeModal}\n        >\n          <ModalCard.Header\n            pt={3}\n            iconHeight={'40px'}\n            title={'Limit Reached'}\n            icon={'images/warning.svg'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              flexDirection={'column'}\n            >\n              <Text\n                fontSize={2}\n                textAlign={'left'}\n                color={'dark-gray'}\n              >\n                The pool has reached the limit size of {this.props.limit}! Please wait for the limit to be increased before trying to deposit again!\n              </Text>\n            </Flex>\n            <Flex\n              my={3}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <RoundButton\n                handleClick={this.closeModal}\n                buttonProps={{\n                  width:['100%','40%']\n                }}\n              >\n                Got it\n              </RoundButton>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default LimitReachedModal;","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TooltipText from '../TooltipText/TooltipText';\nimport { Flex, Text, Image, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    balanceProp:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakedBalance:null,\n    trancheBalance:null,\n    approveEnabled:null,\n    buttonDisabled:false,\n    approveDescription:null,\n    selectedAction:'deposit',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChange = prevState.selectedAction !== this.state.selectedAction;\n    if (selectedActionChange){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account){\n      return null;\n    }\n\n    const [\n      tokenBalance,\n      trancheBalance,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('lastTranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account)\n    ]);\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      tokenBalance,\n      tranchePrice,\n      stakedBalance,\n      trancheBalance,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    let infoText = trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n      break;\n      case 'stake':\n        approveEnabled = true;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        contractInfo = this.props.trancheConfig.CDORewards;\n      break;\n      case 'unstake':\n        approveEnabled = false;\n        tokenConfig = this.props.trancheConfig;\n        contractInfo = this.props.trancheConfig.CDORewards;\n        balanceProp = this.state.stakedBalance;\n        if (!this.state.canUnstake){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantUnstake;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.tokenConfig;\n        tokenConfig = this.props.trancheConfig;\n        balanceProp = this.state.trancheBalance;\n        // balanceProp = this.state.trancheBalance.times(this.state.tranchePrice);\n        // console.log('balanceProp',this.state.trancheBalance.toFixed(),this.state.tranchePrice.toFixed(),balanceProp.toFixed());\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.`;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      // if (this.state.selectedAction === 'withdraw'){\n\n      // }\n\n      methodParams = [amount];\n    }\n\n    console.log('getTransactionParams',methodName,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n    if (poolSize.plus(amount).gt(trancheLimit)){\n      this.setState({\n        activeModal:'limit'\n      })\n      return false;\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        this.setState({\n          activeModal:'share'\n        })\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    const otherTrancheType = this.props.selectedTranche === 'AA' ? 'BB' : 'AA';\n    const otherTrancheDetails = this.functionsUtil.getGlobalConfig(['tranches',otherTrancheType]);\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        maxWidth={['100%','45em']}\n      >\n        {\n          !this.props.showSelectButton && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'flex-end'}\n            >\n              <Button\n                mb={2}\n                size={'small'}\n                width={'auto'}\n                contrastColor={'cardBg'}\n                icon={otherTrancheDetails.icon}\n                mainColor={otherTrancheDetails.color.hex}\n                onClick={e => this.props.selectTrancheType(otherTrancheDetails.route)}\n              >\n                Switch to {otherTrancheDetails.name}\n              </Button>\n            </Flex>\n          )\n        }\n        <DashboardCard\n          cardProps={{\n            py:3,\n            px:3,\n            border:null,\n            // style:{\n            //   border:`1px solid ${trancheDetails.color.hex}`\n            // }\n          }}\n        >\n          <Flex\n            pb={2}\n            mb={2}\n            alignItems={'center'}\n            flexDirection={'row'}\n            borderBottom={`1px solid ${trancheDetails.color.hex}`}\n          > \n            <Image\n              mr={2}\n              src={trancheDetails.image}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={4}\n              fontSize={[3,4]}\n              color={'copyColor'}\n            >\n              {trancheDetails.name}\n            </Text>\n          </Flex>\n          <Flex\n            style={{\n              flexBasis:'0',\n              flex:'1 1 0px',\n              flexWrap:'wrap',\n              borderBottom:`1px solid ${this.props.theme.colors.divider}`\n            }}\n            alignItems={'flex-start'}\n            justifyContent={'flex-start'}\n          >\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Protocol\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'protocolName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                mb={1}\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Token\n              </Text>\n              <Flex\n                alignItems={'center'}\n                flexDirection={'row'}\n              >\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenIcon',\n                    props:{\n                      mr:2,\n                      height:['1.4em','2em']\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n                <TrancheField\n                  {...this.props}\n                  fieldInfo={{\n                    name:'tokenName',\n                    props:{\n                      fontSize:[2,3],\n                      color:'copyColor'\n                    }\n                  }}\n                  token={this.props.selectedToken}\n                  tokenConfig={this.props.tokenConfig}\n                  protocol={this.props.selectedProtocol}\n                  trancheConfig={this.props.trancheConfig}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Pool Size\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'tranchePool',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <TooltipText\n                flexProps={{\n                  mb:1\n                }}\n                text={'Auto-Compounding'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','autoFarming'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'autoFarming',\n                  parentProps:{\n                    justifyContent:'flex-start'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <TooltipText\n                flexProps={{\n                  mb:1\n                }}\n                text={'Staking Rewards'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','stakingRewards'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'stakingRewards',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n            >\n              <TooltipText\n                text={'APY'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','apyTranches'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheApyWithTooltip',\n                  props:{\n                    decimals:2,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n              {\n                stakingRewards.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <TrancheField\n                      {...this.props}\n                      fieldInfo={{\n                        name:'trancheIDLELastHarvest',\n                        props:{\n                          decimals:4,\n                          fontSize:1,\n                          fontWeight:2,\n                          lineHeight:'1',\n                          color:'cellText'\n                        }\n                      }}\n                      token={this.props.selectedToken}\n                      tranche={this.props.selectedTranche}\n                      tokenConfig={this.props.tokenConfig}\n                      protocol={this.props.selectedProtocol}\n                      trancheConfig={this.props.trancheConfig}\n                    />\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <TooltipText\n                text={'Apr Ratio'}\n                tooltipProps={{\n                  message:this.functionsUtil.getGlobalConfig(['messages','aprRatio'])\n                }}\n              />\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'trancheAPRRatio',\n                  props:{\n                    fontWeight:3,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            <Flex\n              mb={3}\n              width={[0.5,0.33]}\n              flexDirection={'column'}\n              alignItems={'flex-start'}\n            >\n              <Text\n                fontWeight={3}\n                fontSize={[1,2]}\n                color={'cellText'}\n              >\n                Status\n              </Text>\n              <TrancheField\n                {...this.props}\n                fieldInfo={{\n                  name:'statusBadge',\n                  props:{\n                    fontWeight:3,\n                    fontSize:[2,3],\n                    color:'copyColor'\n                  }\n                }}\n                token={this.props.selectedToken}\n                tranche={this.props.selectedTranche}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                trancheConfig={this.props.trancheConfig}\n              />\n            </Flex>\n            {\n              (this.props.tokenConfig.experimental || !this.props.isMobile) && (\n                <Flex\n                  mb={3}\n                  width={[0.5,0.33]}\n                  flexDirection={'column'}\n                  alignItems={'flex-start'}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={[1,2]}\n                    color={'cellText'}\n                  >\n                    Limit Cap\n                  </Text>\n                  <TrancheField\n                    {...this.props}\n                    fieldInfo={{\n                      name:'trancheLimit',\n                      props:{\n                        decimals:3,\n                        fontWeight:3,\n                        fontSize:[2,3],\n                        color:'copyColor'\n                      }\n                    }}\n                    token={this.props.selectedToken}\n                    tranche={this.props.selectedTranche}\n                    tokenConfig={this.props.tokenConfig}\n                    protocol={this.props.selectedProtocol}\n                    trancheConfig={this.props.trancheConfig}\n                  />\n                </Flex>\n              )\n            }\n          </Flex>\n          {\n            this.props.showSelectButton ? (\n                <Button\n                  mt={3}\n                  width={1}\n                  contrastColor={'cardBg'}\n                  icon={trancheDetails.icon}\n                  mainColor={trancheDetails.color.hex}\n                  onClick={e => this.props.selectTrancheType(trancheDetails.route)}\n                >\n                  {\n                    this.props.tokenConfig ? `Go to ${trancheDetails.name}` : `Start with ${trancheDetails.name}`\n                  }\n                </Button>\n            ) : (\n              <FlexLoader\n                flexProps={{\n                  mt:3,\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading Tranche Data...'}\n              />\n            )\n          }\n        </DashboardCard>\n        <LimitReachedModal\n          {...this.props}\n          limit={trancheLimit}\n          closeModal={this.resetModal}\n          isOpen={this.state.activeModal === 'limit'}\n        />\n        <ShareModal\n          confettiEnabled={true}\n          icon={`images/medal.svg`}\n          title={`Congratulations!`}\n          account={this.props.account}\n          closeModal={this.resetModal}\n          tokenName={this.props.selectedToken}\n          isOpen={this.state.activeModal === 'share'}\n          text={`You have successfully deposited in Idle!<br />Enjoy <strong>${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n          tweet={`I'm earning ${this.state.trancheAPY ? this.state.trancheAPY.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import IconBox from '../IconBox/IconBox';\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ImageButton from '../ImageButton/ImageButton';\nimport TooltipText from '../TooltipText/TooltipText';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport ShareModal from '../utilities/components/ShareModal';\n// import StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport { Flex, Text, Image, Box, Icon, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport LimitReachedModal from '../utilities/components/LimitReachedModal';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass TrancheDetails extends Component {\n\n  state = {\n    infoText:null,\n    modalApy:null,\n    trancheAPY:null,\n    canUnstake:null,\n    canWithdraw:null,\n    activeModal:null,\n    actionLabel:null,\n    modalAction:null,\n    balanceProp:null,\n    lastHarvest:null,\n    gaugeConfig:null,\n    tokenConfig:null,\n    contractInfo:null,\n    tranchePrice:null,\n    tokenBalance:null,\n    stakeEnabled:true,\n    stakedBalance:null,\n    unstakeEnabled:true,\n    trancheBaseApy:null,\n    trancheBalance:null,\n    stakingEnabled:true,\n    approveEnabled:null,\n    buttonDisabled:false,\n    selectedTranche:null,\n    availableTranches:null,\n    approveDescription:null,\n    selectedAction:'deposit',\n    selectedTrancheOption:null,\n    selectedStakeAction:'stake',\n    userHasAvailableFunds:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = this.props.account !== prevProps.account;\n    if (accountChanged){\n      this.loadData();\n    }\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const selectedStakeActionChanged = prevState.selectedStakeAction !== this.state.selectedStakeAction;\n    if (selectedActionChanged || selectedStakeActionChanged){\n      this.loadActionData();\n    }\n  }\n\n  async loadData(){\n\n    const [\n      // blockNumber,\n      lastHarvest,\n      tokenBalance,\n      trancheBalance,\n      stakedBalance,\n      trancheAPY,\n      tranchePrice,\n      trancheBaseApy\n    ] = await Promise.all([\n      // this.functionsUtil.getBlockNumber(),\n      this.functionsUtil.getTrancheLastHarvest(this.props.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance),\n      this.functionsUtil.loadTrancheFieldRaw('trancheApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('tranchePrice',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n      this.functionsUtil.loadTrancheFieldRaw('trancheBaseApy',{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account),\n    ]);\n\n    const canUnstake = true; // !stakeCoolingPeriod || this.functionsUtil.BNify(userStakeBlock).plus(stakeCoolingPeriod).lt(blockNumber);\n    const canWithdraw = true; // !cdoCoolingPeriod || !latestHarvestBlock || this.functionsUtil.BNify(latestHarvestBlock).plus(cdoCoolingPeriod).lt(blockNumber);\n    \n    // console.log('loadData',this.props.trancheConfig.tranche,blockNumber,cdoCoolingPeriod,latestHarvestBlock,stakeCoolingPeriod,userStakeBlock,canUnstake,canWithdraw);\n\n    const availableTranches = Object.values(this.functionsUtil.getGlobalConfig(['tranches'])).map( trancheInfo => ({\n      value:trancheInfo.type,\n      icon:trancheInfo.image,\n      label:trancheInfo.name,\n      tranche:trancheInfo.type,\n      trancheConfig:this.props.tokenConfig[trancheInfo.type]\n    }));\n\n    const userHasAvailableFunds = trancheBalance && trancheBalance.gt(0);\n    const selectedTrancheOption = availableTranches.find( trancheInfo => trancheInfo.value === this.props.selectedTranche );\n    const selectedTranche = selectedTrancheOption.value;\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    let stakingEnabled = stakingRewards.length>0;\n    const stakeEnabled = stakingEnabled;\n    const unstakeEnabled = stakedBalance && this.functionsUtil.BNify(stakedBalance).gt(0);\n\n    // console.log('stakingRewards',stakingRewards,stakingEnabled,unstakeEnabled);\n\n    if (!stakingEnabled && unstakeEnabled){\n      stakingEnabled = true;\n    }\n\n    let selectedStakeAction = 'stake';\n    if (!stakeEnabled && unstakeEnabled){\n      selectedStakeAction = 'unstake';\n    }\n\n    this.setState({\n      trancheAPY,\n      canUnstake,\n      canWithdraw,\n      lastHarvest,\n      tokenBalance,\n      stakeEnabled,\n      tranchePrice,\n      stakedBalance,\n      trancheBaseApy,\n      stakingEnabled,\n      trancheBalance,\n      unstakeEnabled,\n      selectedTranche,\n      availableTranches,\n      selectedStakeAction,\n      selectedTrancheOption,\n      userHasAvailableFunds\n    }, () => {\n      this.loadActionData();\n    });\n  }\n\n  loadActionData(){\n    let infoBox = null;\n    let balanceProp = null;\n    let tokenConfig = null;\n    let contractInfo = null;\n    let approveEnabled = null;\n    let buttonDisabled = false;\n\n    let actionLabel = this.state.selectedAction;\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.selectedTranche]);\n    const gaugeConfig = this.functionsUtil.getGlobalConfig(['tools','gauges','props','availableGauges',this.props.selectedToken]);\n    let infoText = this.functionsUtil.getArrayPath(['messages',this.state.selectedAction],this.props.tokenConfig) || trancheDetails.description[this.state.selectedAction];\n\n    switch (this.state.selectedAction){\n      case 'deposit':\n        approveEnabled = true;\n        contractInfo = this.props.cdoConfig;\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.tokenBalance;\n        \n        if (gaugeConfig && gaugeConfig.trancheToken.token.toLowerCase() === this.props.tokenConfig[this.props.selectedTranche].token.toLowerCase() && this.state.trancheBalance && this.state.trancheBalance.gt(0)){\n          infoText = `Stake your ${gaugeConfig.trancheToken.token} in the Liquidity Gauge and get rewarded!`;\n        }\n      break;\n      case 'stake':\n        actionLabel = this.state.selectedStakeAction;\n        if (this.state.stakingEnabled){\n          infoText = trancheDetails.description[this.state.selectedStakeAction];\n        } else {\n          infoText = null;\n        }\n        switch (this.state.selectedStakeAction){\n          case 'stake':\n            // Disable staking deposit if gaugeConfig is set\n            if (gaugeConfig || !this.state.stakeEnabled){\n              infoText = null;\n            }\n            approveEnabled = true;\n            tokenConfig = this.props.trancheConfig;\n            balanceProp = this.state.trancheBalance;\n            contractInfo = this.props.trancheConfig.CDORewards;\n          break;\n          case 'unstake':\n            approveEnabled = false;\n            tokenConfig = this.props.trancheConfig;\n            contractInfo = this.props.trancheConfig.CDORewards;\n            balanceProp = this.state.stakedBalance;\n            if (!this.state.canUnstake){\n              buttonDisabled = true;\n              infoText = trancheDetails.description.cantUnstake;\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'withdraw':\n        approveEnabled = false;\n        contractInfo = this.props.cdoConfig;\n        // tokenConfig = this.props.trancheConfig;\n        // balanceProp = this.state.trancheBalance;\n\n        tokenConfig = this.props.tokenConfig;\n        balanceProp = this.state.trancheBalance ? this.state.trancheBalance.times(this.state.tranchePrice) : null;\n\n        // console.log('balanceProp',this.state.trancheBalance,this.state.tranchePrice,balanceProp);\n\n        if (!this.state.canWithdraw){\n          buttonDisabled = true;\n          infoText = trancheDetails.description.cantWithdraw;\n          // infoBox = {\n          //   text:'You need to wait 1 block from the last ',\n          //   icon:'Warning',\n          //   iconProps:{\n          //     color:'cellText'\n          //   },\n          // };\n        }\n      break;\n      default:\n      break;\n    }\n\n    const approveDescription = tokenConfig ? `To ${this.state.selectedAction} your <strong>${tokenConfig.token}</strong> you need to approve the Smart-Contract first.` : null;\n\n    // console.log('loadActionData',approveEnabled);\n\n    this.setState({\n      infoBox,\n      infoText,\n      actionLabel,\n      gaugeConfig,\n      tokenConfig,\n      balanceProp,\n      contractInfo,\n      buttonDisabled,\n      approveEnabled,\n      approveDescription\n    })\n  }\n\n  changeInputCallback(){\n\n  }\n\n  contractApprovedCallback(){\n\n  }\n\n  getTransactionParams(amount,selectedPercentage){\n    let methodName = null;\n    let methodParams = null;\n\n    if (this.props.trancheConfig.functions[this.state.selectedAction]){\n      methodName = this.props.trancheConfig.functions[this.state.selectedAction];\n\n      if (this.state.selectedAction === 'withdraw'){\n        let trancheTokenToRedeem = null;\n        if (selectedPercentage) {\n          trancheTokenToRedeem = this.functionsUtil.BNify(this.state.trancheBalance).times(this.functionsUtil.BNify(selectedPercentage).div(100));\n        } else {\n          trancheTokenToRedeem = this.functionsUtil.BNify(amount).div(this.functionsUtil.normalizeTokenAmount(this.state.tranchePrice,18));\n        }\n\n        // Check if idleTokens to redeem > idleToken balance\n        if (trancheTokenToRedeem.gt(this.functionsUtil.BNify(this.state.trancheBalance))) {\n          trancheTokenToRedeem = this.functionsUtil.BNify(this.state.trancheBalance);\n        }\n\n        // Normalize number\n        trancheTokenToRedeem = this.functionsUtil.normalizeTokenAmount(trancheTokenToRedeem, 18);\n\n        methodParams = [trancheTokenToRedeem];\n      } else {\n        if (this.state.selectedAction === 'stake'){\n          methodName = this.props.trancheConfig.functions[this.state.selectedStakeAction];\n        }\n\n        methodParams = [amount];\n      }\n    }\n\n    // console.log('getTransactionParams',this.state.selectedAction,amount,this.functionsUtil.BNify(this.state.trancheBalance).toFixed(),selectedPercentage,methodParams);\n\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async checkLimit(amount){\n    const trancheLimit = this.functionsUtil.BNify(this.props.tokenConfig.limit);\n    if (trancheLimit.gt(0)){\n      const poolSize = await this.functionsUtil.loadTrancheFieldRaw(`pool`,{},this.props.selectedProtocol,this.props.selectedToken,this.props.selectedTranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account);\n      if (poolSize.plus(amount).gt(trancheLimit)){\n        this.setState({\n          activeModal:'limit'\n        })\n        return false;\n      }\n    }\n    return true;\n  }\n\n  transactionSucceeded(){\n    this.loadData();\n\n    if (typeof this.props.transactionSucceeded === 'function'){\n      this.props.transactionSucceeded();\n    }\n\n    switch (this.state.selectedAction){\n      case 'stake':\n      case 'deposit':\n        if (this.state.selectedAction === 'deposit' || this.state.selectedStakeAction === 'stake'){\n          const modalAction = this.state.selectedAction === 'deposit' ? 'deposited' : 'staked';\n          const modalApy = this.state.selectedAction === 'deposit' ? this.state.trancheBaseApy : this.state.trancheAPY;\n          this.setState({\n            modalApy,\n            modalAction,\n            activeModal:'share'\n          });\n        }\n      break;\n      default:\n      break;\n    }\n  }\n\n  resetModal = () => {\n    this.setState({\n      activeModal: null\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setStakeAction(selectedStakeAction){\n    this.setState({\n      selectedStakeAction\n    });\n  }\n\n  selectTranche(trancheType){\n    // console.log('selectTranche',trancheType);\n    const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',trancheType]);\n    if (trancheDetails){\n      this.props.selectTrancheType(trancheDetails.route);\n    }\n  }\n\n  render() {\n\n    const isStake = this.state.selectedAction === 'stake';\n    const isDeposit = this.state.selectedAction === 'deposit';\n    const isWithdraw = this.state.selectedAction === 'withdraw';\n\n    const stakingRewards = this.props.trancheConfig.CDORewards.stakingRewards.filter( t => t.enabled );\n    const trancheLimit = this.functionsUtil.formatMoney(this.functionsUtil.BNify(this.props.tokenConfig.limit),0)+' '+this.props.selectedToken;\n\n    const CustomOptionValue = props => {\n      const selectedOption = props.options.find( option => option.value === props.value );\n      if (!selectedOption){\n        return null;\n      }\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <Image\n              mr={2}\n              src={selectedOption.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {props.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n      const selectProps = props.selectProps.options.find( option => option.value === props.selectProps.value.value );\n      // console.log('CustomValueContainer',props.selectProps.options,props.selectProps.value,selectProps);\n      if (!selectProps){\n        return null;\n      }\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <Image\n              mr={2}\n              src={selectProps.icon}\n              size={this.props.isMobile ? '1.6em' : '1.8em'}\n            />\n            <Text\n              fontWeight={3}\n            >\n              {selectProps.label}\n            </Text>\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTranches ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tranches...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n              maxWidth={['100%','42em']}\n            >\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Tranche:\n                </Text>\n                <GenericSelector\n                  {...this.props}\n                  name={'tranches'}\n                  isSearchable={false}\n                  CustomOptionValue={CustomOptionValue}\n                  options={this.state.availableTranches}\n                  onChange={this.selectTranche.bind(this)}\n                  CustomValueContainer={CustomValueContainer}\n                  defaultValue={this.state.selectedTrancheOption}\n                />\n              </Box>\n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Tranche details:\n                </Text>\n                <DashboardCard\n                  cardProps={{\n                    py:1,\n                    px:3,\n                    mb:2\n                  }}\n                  isActive={false}\n                >\n                  <Flex\n                    mt={1}\n                    mb={1}\n                    width={1}\n                    style={{\n                      flexBasis:'0',\n                      flex:'1 1 0px',\n                      flexWrap:'wrap'\n                    }}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Protocol\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'protocolName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Token\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tokenName',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={[2,3]}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Pool Size\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'tranchePool',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'Auto-Compounding'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','autoFarming'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'autoFarming',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'Staking Rewards'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','stakingRewards'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'stakingRewards',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'APY'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','apyTranches'])}\n                      />\n                      <Flex\n                        flexDirection={'column'}\n                        alignItems={'flex-start'}\n                        justifyContent={'flex-start'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheApyWithTooltip',\n                            props:{\n                              decimals:2,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                        {\n                          stakingRewards.length>0 && (\n                            <Flex\n                              width={1}\n                              flexDirection={'row'}\n                              alignItems={'flex-start'}\n                            >\n                              <TrancheField\n                                {...this.props}\n                                fieldInfo={{\n                                  name:'trancheIDLELastHarvest',\n                                  props:{\n                                    decimals:4,\n                                    fontSize:1,\n                                    fontWeight:2,\n                                    lineHeight:'1',\n                                    color:'cellText'\n                                  }\n                                }}\n                                token={this.props.selectedToken}\n                                tranche={this.props.selectedTranche}\n                                tokenConfig={this.props.tokenConfig}\n                                protocol={this.props.selectedProtocol}\n                                trancheConfig={this.props.trancheConfig}\n                              />\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <TooltipText\n                        textProps={{\n                          fontSize:[1,2],\n                          fontWeight:[2,3]\n                        }}\n                        text={'Apr Ratio'}\n                        message={this.functionsUtil.getGlobalConfig(['messages','aprRatio'])}\n                      />\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheAPRRatio',\n                            props:{\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Status\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'statusBadge'\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={2}\n                      width={['49%','33%']}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        fontSize={[1,2]}\n                        color={'cellText'}\n                        fontWeight={[2,3]}\n                      >\n                        Limit Cap\n                      </Text>\n                      <Flex\n                        mt={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                      >\n                        <TrancheField\n                          {...this.props}\n                          fieldInfo={{\n                            name:'trancheLimit',\n                            props:{\n                              decimals:3,\n                              fontSize:[2,3],\n                              color:'copyColor'\n                            }\n                          }}\n                          token={this.props.selectedToken}\n                          tranche={this.props.selectedTranche}\n                          tokenConfig={this.props.tokenConfig}\n                          protocol={this.props.selectedProtocol}\n                          trancheConfig={this.props.trancheConfig}\n                        />\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                  {\n                    this.props.tokenConfig.description && (\n                      <Flex\n                        pt={2}\n                        mb={2}\n                        width={1}\n                        flexDirection={'column'}\n                        borderTop={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontSize={[1,2]}\n                          color={'cellText'}\n                          fontWeight={[2,3]}\n                        >\n                          Strategy Description\n                        </Text>\n                        <Flex\n                          mt={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text\n                            fontWeight={2}\n                            fontSize={'15px'}\n                            textAlign={'justify'}\n                          >\n                            {this.props.tokenConfig.description}\n                          </Text>\n                        </Flex>\n                        {\n                          this.state.lastHarvest && (\n                            <Flex\n                              pt={2}\n                              mt={2}\n                              flexDirection={'column'}\n                              alignItems={'flex-start'}\n                              borderTop={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                              >\n                                <Text\n                                  mr={1}\n                                  fontSize={'15px'}\n                                  color={'cellText'}\n                                  fontWeight={[2,3]}\n                                >\n                                  Last harvest date:\n                                </Text>\n                                <ExtLink\n                                  href={this.functionsUtil.getEtherscanTransactionUrl(this.state.lastHarvest.transactionHash)}\n                                >\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      fontSize={'15px'}\n                                    >\n                                      {this.functionsUtil.strToMoment(this.state.lastHarvest.timestamp*1000).utc().format(\"MMM DD YYYY HH:mm\")} UTC\n                                    </Text>\n                                    <Icon\n                                      ml={1}\n                                      size={'1.1em'}\n                                      name={'OpenInNew'}\n                                      color={'copyColor'}\n                                    />\n                                  </Flex>\n                                </ExtLink>\n                              </Flex>\n                              <Flex\n                                mt={1}\n                                flexDirection={'row'}\n                              >\n                                <Text\n                                  mr={1}\n                                  fontSize={'15px'}\n                                  color={'cellText'}\n                                  fontWeight={[2,3]}\n                                >\n                                  Last harvest amount:\n                                </Text>\n                                <Text\n                                  fontWeight={2}\n                                  fontSize={'15px'}\n                                >\n                                  {this.functionsUtil.fixTokenDecimals(this.state.lastHarvest.amount,this.props.tokenConfig.decimals).toFixed(8)} {this.props.tokenConfig.token}\n                                </Text>\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    )\n                  }\n                </DashboardCard>\n              </Box>\n              {\n                this.props.selectedToken === 'stETH' && this.props.selectedTranche === 'AA' && (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:2,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.8em',\n                      color:'flashColor'\n                    }}\n                    icon={'AssignmentLate'}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    text={`With the <a href=\"https://medium.com/idle-finance/introducing-stkidle-gauges-a-new-stakers-centric-paradigm-for-pyts-and-lps-8c0ef167232e\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" class=\"link\">IDLE Gauges release</a>, LDO rewards are going to be distributed via a different staking contract on <strong>Thursday 14 April 2022 16:30:00 GMT</strong>. Please make sure to unstake your stETH from the current staking contract after that date and deposit in the <a href=\"${this.functionsUtil.getDashboardSectionUrl(`gauges/stETH`)}\" class=\"link\">stETH Gauge</a> contract to continue receiving the LDO rewards, alongside the IDLE distribution from Gauges`}\n                  />\n                )\n              }\n              <Box\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select Action:\n                </Text>\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={['column','row']}\n                  justifyContent={'space-between'}\n                >\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isDeposit ? 2 : 0\n                    }}\n                    caption={'Deposit'}\n                    width={[1,'32%']}\n                    isMobile={this.props.isMobile}\n                    imageSrc={'images/deposit.png'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isDeposit}\n                    handleClick={ e => this.setSelectedAction('deposit') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isStake ? 2 : 0,\n                      disabled:!this.state.stakingEnabled\n                    }}\n                    width={[1,'32%']}\n                    caption={'Stake / Unstake'}\n                    imageSrc={'images/mint.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isStake}\n                    handleClick={ e => this.setSelectedAction('stake') }\n                  />\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isWithdraw ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isWithdraw}\n                    handleClick={ e => this.setSelectedAction('withdraw') }\n                  />\n                </Flex>\n              </Box>\n              {\n                isStake && this.state.stakingEnabled && (\n                  <Box\n                    mb={2}\n                    width={1}\n                  >\n                    <Text mb={1}>\n                      Choose stake action:\n                    </Text>\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Stake'}\n                        icon={'Layers'}\n                        iconColor={'deposit'}\n                        iconBgColor={'#ced6ff'}\n                        handleClick={ e => this.setStakeAction('stake') }\n                        isActive={ this.state.selectedStakeAction === 'stake' }\n                      />\n                      <CardIconButton\n                        {...this.props}\n                        textProps={{\n                          fontSize:[1,2]\n                        }}\n                        cardProps={{\n                          px:3,\n                          py:2,\n                          width:0.49\n                        }}\n                        text={'Unstake'}\n                        icon={'LayersClear'}\n                        iconColor={'redeem'}\n                        iconBgColor={'#ceeff6'}\n                        isDisabled={ !this.state.unstakeEnabled }\n                        isActive={ this.state.selectedStakeAction === 'unstake' }\n                        handleClick={ e => this.state.unstakeEnabled ? this.setStakeAction('unstake') : null }\n                      />\n                    </Flex>\n                  </Box>\n                )\n              }\n              {\n                this.state.infoText && this.props.account && (\n                  <IconBox\n                    cardProps={{\n                      p:2,\n                      mt:3,\n                      mb:2,\n                      width:1,\n                    }}\n                    isActive={true}\n                    isInteractive={false}\n                    iconProps={{\n                      size:'1.2em',\n                      color:'flashColor'\n                    }}\n                    textProps={{\n                      fontWeight:500,\n                      color:'flashColor',\n                      textAlign:'center',\n                      fontSize:['13px','15px']\n                    }}\n                    icon={'LightbulbOutline'}\n                    text={this.state.infoText}\n                  />\n                )\n              }\n              <Flex\n                width={1}\n                alignItems={'stretch'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                {\n                  ((isStake && !this.state.stakingEnabled) || (isStake && this.state.selectedStakeAction === 'stake' && !this.state.stakeEnabled)) ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        mt: 2\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'DoNotDisturb'}\n                        />\n                        <Text\n                          mt={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Staking is not enabled for this Tranche.\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  ) : isStake && this.state.selectedStakeAction === 'stake' && this.state.gaugeConfig ? (\n                    <IconBox\n                      cardProps={{\n                        mt: 2\n                      }}\n                      icon={'LightbulbOutline'}\n                      text={`To earn additional staking rewards deposit your tranche token in the <a href=\"${this.functionsUtil.getDashboardSectionUrl(`gauges/${this.props.selectedToken}`)}\" class=\"link\">${this.props.selectedToken} Gauge</a>.`}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          mt:2,\n                          width:[1,1/2]\n                        }}\n                        handleClick={e => this.props.goToSection(`gauges/${this.props.selectedToken}`)}\n                      >\n                        Go to Gauge\n                      </RoundButton>\n                    </IconBox>\n                  ) : isStake && this.state.selectedStakeAction === 'unstake' && !this.props.trancheConfig.CDORewards.unstakeWithBalance ? (\n                    <DashboardCard\n                      cardProps={{\n                        p: 2,\n                        pb: 3,\n                        mt: 3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'MonetizationOn'}\n                        />\n                        <Text\n                          mt={1}\n                          mb={3}\n                          fontSize={[2,3]}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          You can unstake <strong>{this.state.stakedBalance.toFixed(8)} {this.state.tokenConfig.label}</strong>.\n                        </Text>\n                        <ExecuteTransaction\n                          params={[]}\n                          {...this.props}\n                          Component={Button}\n                          parentProps={{\n                            width:1,\n                            alignItems:'center',\n                            justifyContent:'center'\n                          }}\n                          componentProps={{\n                            fontSize:3,\n                            fontWeight:3,\n                            size:'medium',\n                            width:[1,1/3],\n                            borderRadius:4,\n                            value:'Unstake',\n                            mainColor:'redeem',\n                          }}\n                          action={'Unstake'}\n                          contractName={this.state.contractInfo.name}\n                          callback={this.transactionSucceeded.bind(this)}\n                          methodName={this.props.trancheConfig.functions.unstake}\n                        />\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      buttonProps={{\n                        width:[1,0.45]\n                      }}\n                      permitEnabled={false}\n                      tokenConfig={this.state.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.state.contractInfo}\n                      checkLimit={this.checkLimit.bind(this)}\n                      approveEnabled={this.state.approveEnabled}\n                      buttonDisabled={this.state.buttonDisabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      contractApproved={this.contractApprovedCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      action={this.functionsUtil.capitalize(this.state.actionLabel)}\n                    >\n                      {\n                        isDeposit ? (\n                          <Flex\n                            width={1}\n                            alignItems={'stretch'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <BuyModal\n                              {...this.props}\n                              showInline={true}\n                              availableMethods={[]}\n                              buyToken={this.props.selectedToken}\n                            >\n                              {\n                                this.props.tokenConfig.messages && this.props.tokenConfig.messages.buyInstructions ? (\n                                  <DashboardCard\n                                    cardProps={{\n                                      p: 2,\n                                      my: 2\n                                    }}\n                                  >\n                                    <Flex\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'column'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        size={'1.8em'}\n                                        name={'MoneyOff'}\n                                        color={'cellText'}\n                                      />\n                                      <Text\n                                        mt={1}\n                                        color={'cellText'}\n                                        textAlign={'center'}\n                                      >\n                                        You don't have any <strong>{this.props.selectedToken}</strong> to deposit.\n                                      </Text>\n                                      <Text\n                                        mt={1}\n                                        color={'cellText'}\n                                        textAlign={'center'}\n                                        dangerouslySetInnerHTML={{__html:this.props.tokenConfig.messages.buyInstructions}}>\n                                      </Text>\n                                    </Flex>\n                                  </DashboardCard>\n                                ) : null\n                              }\n                            </BuyModal>\n                          </Flex>\n                        ) : isStake ? (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any <strong>{this.state.tokenConfig.label}</strong> token to {this.state.selectedStakeAction}.\n                              </Text>\n                            </Flex>\n                          </DashboardCard>\n                        ) : isWithdraw && (\n                          <DashboardCard\n                            cardProps={{\n                              p: 2,\n                              my: 2\n                            }}\n                          >\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Icon\n                                size={'1.8em'}\n                                name={'MoneyOff'}\n                                color={'cellText'}\n                              />\n                              <Text\n                                mt={1}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                You don't have any {this.props.selectedToken} to withdraw.<br />If you have staked your <strong>{this.state.tokenConfig.label}</strong> tokens please unstake them to be able to withdraw your {this.props.selectedToken}.\n                            </Text>\n                            </Flex>\n                          </DashboardCard>\n                        )\n                      }\n                    </SendTxWithBalance>\n                  )\n                }\n              </Flex>\n              <LimitReachedModal\n                {...this.props}\n                limit={trancheLimit}\n                closeModal={this.resetModal}\n                isOpen={this.state.activeModal === 'limit'}\n              />\n              <ShareModal\n                confettiEnabled={true}\n                icon={`images/medal.svg`}\n                title={`Congratulations!`}\n                account={this.props.account}\n                closeModal={this.resetModal}\n                tokenName={this.props.selectedToken}\n                isOpen={this.state.activeModal === 'share'}\n                text={`You have successfully ${this.state.modalAction} in Idle!<br />Enjoy <strong>${this.state.modalApy ? this.state.modalApy.toFixed(2) : '0.00'}% APY</strong> on your <strong>${this.props.selectedToken}</strong>!`}\n                tweet={`I'm earning ${this.state.modalApy ? this.state.modalApy.toFixed(2) : '0.00'}% APY on my ${this.props.selectedToken} with @idlefinance tranches! Go to ${this.functionsUtil.getGlobalConfig(['baseURL'])}${this.props.selectedSection.route} and start earning now from your idle tokens!`}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheDetails;\n","import { Line } from '@nivo/line';\nimport React, { Component } from 'react';\n// import { linearGradientDef } from '@nivo/core'\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport ChartCustomTooltip from '../ChartCustomTooltip/ChartCustomTooltip';\nimport ChartCustomTooltipRow from '../ChartCustomTooltipRow/ChartCustomTooltipRow';\n\nclass PortfolioEquityTranches extends Component {\n  state = {\n    startDate:null,\n    chartData:null,\n    chartProps:null,\n    chartwidth:null,\n    chartHeight:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadChartData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const quickDateSelectionChanged = prevProps.quickDateSelection !== this.props.quickDateSelection;\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n    if (tokenChanged || quickDateSelectionChanged){\n      this.setState({\n        chartData:null\n      },() => {\n        this.componentDidMount();\n      });\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    if (mobileChanged || themeModeChanged){\n      this.loadChartData();\n    }\n  }\n\n  async loadChartData() {\n    let enabledTokens = this.props.enabledTokens;\n\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTranches).reduce( (enabledTokens,protocol) => {\n        const tokens = Object.keys(this.props.availableTranches[protocol]);\n        tokens.forEach( token => {\n          if (!enabledTokens.includes(token)){\n            enabledTokens.push(token);\n          }\n        });\n        return enabledTokens;\n      },[]);\n    }\n\n    const transactions = this.props.transactionsList;\n\n    const chartData = [];\n    const tokensData = {};\n    let tokensBalance = {};\n    let firstTxTimestamp = null;\n\n    await this.functionsUtil.asyncForEach(enabledTokens,async (selectedToken) => {\n\n      tokensBalance[selectedToken] = [];\n\n      const filteredTxs = Object.values(transactions).filter(tx => (tx.token === selectedToken));\n      if (filteredTxs && filteredTxs.length){\n\n        let amountLent = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(filteredTxs,async (tx,index) => {\n\n          // Skip transactions with no hash or pending\n          if (!tx.hash || (tx.status && tx.status === 'Pending')){\n            return false;\n          }\n\n          firstTxTimestamp = firstTxTimestamp ? Math.min(firstTxTimestamp,parseInt(tx.timeStamp)) : parseInt(tx.timeStamp);\n\n          const timeStamp = parseInt(tx.timeStamp);\n          const tokenAmount = this.functionsUtil.BNify(tx.tokenAmount);\n\n          switch (tx.action){\n            case 'Deposit':\n              amountLent = amountLent.plus(tokenAmount);\n            break;\n            case 'Withdraw':\n              amountLent = amountLent.minus(tokenAmount);\n            break;\n            default:\n            break;\n          }\n\n          // Reset amountLent if below zero\n          if (amountLent.lt(0)){\n            amountLent = this.functionsUtil.BNify(0);\n          }\n\n          const action = tx.action;\n          const balance = amountLent;\n          const tranche = tx.tranche;\n          const protocol = tx.protocol;\n          const blockNumber = tx.blockNumber;\n          const tranchePrice = this.functionsUtil.BNify(tx.tranchePrice);\n          const trancheTokens = this.functionsUtil.BNify(tx.trancheTokens);\n          if (!tranchePrice.isNaN() && !trancheTokens.isNaN()){\n            tokensBalance[selectedToken].push({\n              action,\n              balance,\n              tranche,\n              protocol,\n              timeStamp,\n              tokenAmount,\n              blockNumber,\n              tranchePrice,\n              trancheTokens\n            });\n\n            tokensBalance[selectedToken] = tokensBalance[selectedToken].sort((a, b) => (parseInt(a.timeStamp) > parseInt(b.timeStamp) ? 1 : -1));\n          }\n        });\n      }\n    });\n\n    // Calculate Start Date\n    let startDate = null;\n    const currentDate = this.functionsUtil.strToMoment(new Date());\n\n    switch (this.props.quickDateSelection){\n      case 'week':\n        startDate = currentDate.clone().subtract(1,'week');\n      break;\n      case 'month':\n        startDate = currentDate.clone().subtract(1,'month');\n      break;\n      case 'month3':\n        startDate = currentDate.clone().subtract(3,'month');\n      break;\n      case 'month6':\n        startDate = currentDate.clone().subtract(6,'month');\n      break;\n      default:\n        startDate = null;\n      break;\n    }\n\n    const days = {};\n    let prevBalances = {};\n    let prevTimestamp = null;\n    let minChartValue = null;\n    let maxChartValue = null;\n    let aggregatedBalance = null;\n    const tokensBalancesPerDate = {};\n    const aggregatedBalancesKeys = {};\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const currTimestamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment().format('YYYY-MM-DD')+' 23:59:59','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n\n    const trancheTokenBalance = {};\n\n    if (!firstTxTimestamp){\n      firstTxTimestamp = currTimestamp;\n    }\n\n    // let lastTimestamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment().format('YYYY-MM-DD')+' 00:00:00','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n    // const lastBlockNumber = await this.functionsUtil.getBlockNumber();\n\n    await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      if (tokensBalance[token].length){\n        const tokenBalanceConfig = tokensBalance[token][0];\n        const firstTokenTx = tokensBalance[token][0];\n        const firstAATokenTx = tokensBalance[token].find( tx => tx.tranche==='AA' ) || null;\n        const firstBBTokenTx = tokensBalance[token].find( tx => tx.tranche==='BB' ) || null;\n\n        // const firstBlockNumber = firstTokenTx.blockNumber;\n\n        const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n        const tokenConfig = this.props.availableTranches[tokenBalanceConfig.protocol.toLowerCase()][token];\n\n        const [\n          lastConversionRate,\n          trancheAAInfos,\n          trancheBBInfos\n        ] = await Promise.all([\n          this.functionsUtil.getTokenConversionRateUniswap(tokenConfig),\n          firstAATokenTx ? this.functionsUtil.getSubgraphTrancheInfo(tokenConfig.AA.address,firstAATokenTx.timeStamp,currTimestamp,['timeStamp','virtualPrice','blockNumber']) : [],\n          firstBBTokenTx ? this.functionsUtil.getSubgraphTrancheInfo(tokenConfig.BB.address,firstBBTokenTx.timeStamp,currTimestamp,['timeStamp','virtualPrice','blockNumber']) : [],\n        ]);\n\n        const timeStamp_start = Math.min(firstAATokenTx ? firstAATokenTx.timeStamp : firstTokenTx.timeStamp,firstBBTokenTx ? firstBBTokenTx.timeStamp : firstTokenTx.timeStamp);\n\n        const trancheInfos = trancheAAInfos.concat(trancheBBInfos).sort((a, b) => (parseInt(a.timeStamp) > parseInt(b.timeStamp) ? 1 : -1));\n\n        const conversionRatesTimestamps = {};\n        if (conversionRateField){\n          const blocksTimestamps = {};\n          const conversionRateBlocksCalls = {};\n          for (let timeStamp=timeStamp_start;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds) {\n            const blockInfo = trancheInfos.reduce( (blockInfo,trancheInfo) => {\n              const distance = Math.abs(parseInt(trancheInfo.timeStamp)-parseInt(timeStamp));\n              if (blockInfo.distance === null || distance<blockInfo.distance){\n                blockInfo.distance = distance;\n                blockInfo.trancheInfo = trancheInfo;\n              }\n              return blockInfo;\n            },{\n              distance:null,\n              trancheInfo:null\n            });\n\n            if (blockInfo && blockInfo.trancheInfo){\n              if (!blocksTimestamps[blockInfo.trancheInfo.blockNumber]){\n                blocksTimestamps[blockInfo.trancheInfo.blockNumber] = [];\n              }\n              blocksTimestamps[blockInfo.trancheInfo.blockNumber].push(blockInfo.trancheInfo.timeStamp);\n\n              // Gnosis cannot fetch past blocks data\n              conversionRateBlocksCalls[blockInfo.trancheInfo.blockNumber] = walletProvider === 'gnosis' ? new Promise(resolve => resolve(lastConversionRate)) : this.functionsUtil.getTokenConversionRateUniswap(tokenConfig,blockInfo.trancheInfo.blockNumber);\n            }\n          }\n\n          const conversionRates = await Promise.all(Object.values(conversionRateBlocksCalls));\n\n          conversionRates.forEach( (conversionRate,index) => {\n            if (this.functionsUtil.BNify(conversionRate).isNaN()){\n              conversionRate = lastConversionRate;\n            }\n            const blockNumber = Object.keys(conversionRateBlocksCalls)[index];\n            blocksTimestamps[blockNumber].forEach( timeStamp => {\n              const momentDate = this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD');\n              conversionRatesTimestamps[momentDate] = conversionRate;\n            });\n          });\n\n        }\n\n        // console.log(token,startTokenConversionRate ? startTokenConversionRate.toString() : null,lastTokenConversionRate ? lastTokenConversionRate.toString() : null);\n\n        if (!tokensData[token]){\n          tokensData[token] = [];\n        }\n\n        if (trancheAAInfos){\n          trancheAAInfos.forEach( (trancheInfo,index) => {\n            const tokenDataAA = {\n              tranche:'AA',\n              timeStamp:trancheInfo.timeStamp,\n              tranchePrice:this.functionsUtil.BNify(trancheInfo.virtualPrice)\n            };\n            const momentDate = this.functionsUtil.strToMoment(trancheInfo.timeStamp*1000).format('YYYY-MM-DD');\n            if (conversionRateField && conversionRatesTimestamps[momentDate]){\n              tokenDataAA[conversionRateField] = conversionRatesTimestamps[momentDate];\n            }\n            tokensData[token].push(tokenDataAA);\n          });\n        }\n\n        if (trancheBBInfos){\n          trancheBBInfos.forEach( (trancheInfo,index) => {\n            const tokenDataBB = {\n              tranche:'BB',\n              timeStamp:trancheInfo.timeStamp,\n              tranchePrice:this.functionsUtil.BNify(trancheInfo.virtualPrice)\n            };\n            const momentDate = this.functionsUtil.strToMoment(trancheInfo.timeStamp*1000).format('YYYY-MM-DD');\n            if (conversionRateField && conversionRatesTimestamps[momentDate]){\n              tokenDataBB[conversionRateField] = conversionRatesTimestamps[momentDate];\n            }\n            tokensData[token].push(tokenDataBB);\n          });\n        }\n      }\n    });\n\n    // console.log('tokensData',tokensData);\n    // console.log('transactions',transactions);\n    // console.log('tokensBalance',tokensBalance);\n\n    const tranches = this.functionsUtil.getGlobalConfig(['tranches']);\n\n    for (let timeStamp=firstTxTimestamp;timeStamp<=currTimestamp;timeStamp+=this.props.frequencySeconds) {\n\n      const foundBalances = {};\n      const tokensBalances = {};\n\n      // Shift timestamp to end of the day\n      if (timeStamp > currTimestamp){\n        timeStamp = currTimestamp;\n      }\n      timeStamp = parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(timeStamp*1000).format('YYYY-MM-DD')+' 23:59:59','YYYY-MM-DD HH:mm:ss')._d.getTime()/1000);\n      \n      // timeStamp = Math.min(currTimestamp,timeStamp);\n      aggregatedBalance = this.functionsUtil.BNify(0);\n\n      // await this.functionsUtil.asyncForEach(Object.keys(tokensBalance),async (token) => {\n      // eslint-disable-next-line\n      Object.keys(tokensBalance).forEach( token => {\n\n        if (!prevBalances[token]){\n          prevBalances[token] = {};\n        }\n        if (!foundBalances[token]){\n          foundBalances[token] = {};\n        }\n        if (!tokensBalances[token]){\n          tokensBalances[token] = this.functionsUtil.BNify(0);\n        }\n        if (!trancheTokenBalance[token]){\n          trancheTokenBalance[token] = {};\n        }\n\n        Object.keys(tranches).forEach( tranche => {\n\n          // Skip tranche if no balance\n          const filteredTrancheBalances = tokensBalance[token].filter(tx => (tx.tranche===tranche));\n          if (!filteredTrancheBalances || !filteredTrancheBalances.length) {\n            return;\n          }\n\n          let lastTokenData = null;\n          const lastTokenDataUnfiltered = tokensData[token] ? Object.values(tokensData[token].filter( tx => tx.tranche===tranche )).pop() : null;\n          let filteredTokenData = tokensData[token] ? tokensData[token].filter(tx => (tx.tranche===tranche && tx.timeStamp>=prevTimestamp && tx.timeStamp<=timeStamp)) : null;\n          if (filteredTokenData && filteredTokenData.length){\n            lastTokenData = filteredTokenData.pop();\n          } else {\n            lastTokenData = lastTokenDataUnfiltered;\n            if (lastTokenData && lastTokenData.timeStamp>timeStamp){\n              lastTokenData = null;\n            }\n          }\n\n          if (!trancheTokenBalance[token][tranche]){\n            trancheTokenBalance[token][tranche] = this.functionsUtil.BNify(0);\n          }\n\n          if (!prevBalances[token][tranche]){\n            prevBalances[token][tranche] = null;\n          }\n\n          if (!foundBalances[token][tranche]){\n            foundBalances[token][tranche] = null;\n          }\n\n          const tokenDecimals = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'decimals']);\n          let filteredBalances = tokensBalance[token].filter(tx => (tx.tranche===tranche && tx.timeStamp<=timeStamp && (!prevTimestamp || tx.timeStamp>prevTimestamp)));\n          \n          if (!filteredBalances.length){\n            if (prevBalances && prevBalances[token] && prevBalances[token][tranche]){\n              filteredBalances = prevBalances[token][tranche];\n              const lastFilteredTx = Object.values(filteredBalances).pop();\n              const currentBalance = parseFloat(lastFilteredTx.balance);\n\n              // Take tranchePrice from API and calculate new balance\n              if (currentBalance>0){\n                if (timeStamp>firstTxTimestamp && lastTokenData){\n                  const trancheTokens = trancheTokenBalance[token][tranche];\n                  const tranchePrice = this.functionsUtil.fixTokenDecimals(lastTokenData.tranchePrice,tokenDecimals);\n                  let newBalance = trancheTokens.times(tranchePrice);\n\n                  // Set new balance and tranchePrice\n                  lastFilteredTx.balance = newBalance;\n                  lastFilteredTx.tranchePrice = tranchePrice;\n                  filteredBalances = [lastFilteredTx];\n                }\n              } else {\n                filteredBalances = [{\n                  balance:this.functionsUtil.BNify(0),\n                  tranchePrice:this.functionsUtil.BNify(0)\n                }];\n              }\n            } else {\n              filteredBalances = [{\n                balance:this.functionsUtil.BNify(0),\n                tranchePrice:this.functionsUtil.BNify(0)\n              }];\n            }\n          } else {\n            // if (token === 'FEI'){\n              // console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),timeStamp,token,tranche,lastTokenData,(lastTokenData ? this.functionsUtil.strToMoment(lastTokenData.timeStamp*1000).format('DD/MM/YYYY HH:mm:ss') : null),(lastTokenData ? lastTokenData.tranchePrice.toFixed(5) : null ));\n            // }\n            filteredBalances.forEach(tx => {\n              switch (tx.action){\n                case 'Deposit':\n                  trancheTokenBalance[token][tranche] = trancheTokenBalance[token][tranche].plus(tx.trancheTokens);\n                break;\n                default:\n                  trancheTokenBalance[token][tranche] = trancheTokenBalance[token][tranche].minus(tx.trancheTokens);\n                  if (trancheTokenBalance[token][tranche].lt(0)){\n                    trancheTokenBalance[token][tranche] = this.functionsUtil.BNify(0);\n                  }\n                break;\n              }\n            });\n          }\n\n          const lastTx = Object.values(filteredBalances).pop();\n          let lastTxBalance = trancheTokenBalance[token][tranche].times(lastTx.tranchePrice);\n          if (lastTxBalance.gt(0)){\n            // Convert token balance to USD\n            const conversionRateField = this.functionsUtil.getTokenConversionRateField(token);\n            if (/*!this.props.chartToken && */conversionRateField){\n              const tokenUsdConversionRate = lastTokenData && lastTokenData[conversionRateField] ? lastTokenData[conversionRateField] : (lastTokenDataUnfiltered && lastTokenDataUnfiltered[conversionRateField] ? lastTokenDataUnfiltered[conversionRateField] : null);\n              if (tokenUsdConversionRate && this.functionsUtil.BNify(tokenUsdConversionRate).gt(0)){\n                lastTxBalance = lastTxBalance.times(tokenUsdConversionRate);\n              }\n            }\n              \n            aggregatedBalance = aggregatedBalance.plus(lastTxBalance);\n            tokensBalances[token] = tokensBalances[token].plus(lastTxBalance);\n\n            // if (token === 'FEI'){\n              // console.log(this.functionsUtil.strToMoment(timeStamp*1000).format('DD/MM/YYYY HH:mm:ss'),token,tranche,trancheTokenBalance[token][tranche].toFixed(5),lastTx.tranchePrice.toFixed(5),lastTxBalance.toFixed(5));\n            // }\n          }\n\n          foundBalances[token][tranche] = filteredBalances;\n        });\n      });\n\n      let momentDate = this.functionsUtil.strToMoment(timeStamp*1000);\n\n      if (startDate === null || (momentDate.isSameOrAfter(startDate) && momentDate.isSameOrBefore(new Date(),'day'))){\n        \n        // if (momentDate.isAfter(new Date(),'day')){\n        //   momentDate = this.functionsUtil.strToMoment(new Date());\n        // }\n\n        // Force date to midnight\n        const formattedDate = momentDate.format('YYYY/MM/DD 00:00');\n\n        // Save days for axisBottom format\n        days[momentDate.format('YYYY/MM/DD')] = 1;\n\n        aggregatedBalance = parseFloat(parseFloat(aggregatedBalance.toFixed(6)));\n\n        tokensBalancesPerDate[formattedDate] = tokensBalances;\n        aggregatedBalancesKeys[formattedDate] = aggregatedBalance;\n\n        // console.log(timeStamp,formattedDate,tokensBalances);\n\n        minChartValue = minChartValue === null ? aggregatedBalance : Math.min(minChartValue,aggregatedBalance);\n        maxChartValue = maxChartValue === null ? aggregatedBalance : Math.max(maxChartValue,aggregatedBalance);\n      }\n\n      prevTimestamp = timeStamp;\n      prevBalances = foundBalances;\n    }\n\n    const aggregatedBalances = Object.keys(aggregatedBalancesKeys).map(date => ({\n      x:date,\n      y:aggregatedBalancesKeys[date],\n      balances:tokensBalancesPerDate[date]\n    }));\n\n    let itemIndex = 0;\n    aggregatedBalances.forEach( (item,index) => {\n      const itemPos = Math.floor(itemIndex/aggregatedBalances.length*100);\n      aggregatedBalances[index].itemPos = itemPos;\n      itemIndex++;\n    });\n\n    /*\n    aggregatedBalances.push({\n      x:momentDate.format('YYYY/MM/DD HH:mm'),\n      y:aggregatedBalance\n    });\n    */\n\n    // Add day before to start with zero balance\n    /*\n    const firstTxMomentDate = this.functionsUtil.strToMoment(firstTxTimestamp*1000);\n    if ((startDate === null || startDate.isSameOrBefore(firstTxMomentDate)) && aggregatedBalances.length){\n      const firstItem = aggregatedBalances[0];\n      const firstDate = this.functionsUtil.strToMoment(firstItem.x,'YYYY/MM/DD HH:mm');\n      firstDate.subtract(1,'day');\n      aggregatedBalances.unshift({\n        x:firstDate.format('YYYY/MM/DD HH:mm'),\n        y:0\n      });\n    }\n    */\n\n    const chartToken = this.props.chartToken ? this.props.chartToken.toUpperCase() : 'USD';\n\n    // Add token Data\n    chartData.push({\n      id:chartToken,\n      color: 'hsl('+ this.functionsUtil.getGlobalConfig(['stats','tokens',chartToken.toUpperCase(),'color','hsl']).join(',')+')',\n      data:aggregatedBalances\n    });\n\n    // console.log('PortfolioEquityTranches',chartData);\n\n    let yFormatDecimals = 2;\n    if (maxChartValue-minChartValue<1){\n      yFormatDecimals = 4;\n    }\n\n    if (maxChartValue === minChartValue){\n      minChartValue = Math.max(0,maxChartValue-1);\n    }\n\n    const maxGridLines = 5;\n    const gridYStep = (maxChartValue-minChartValue)/maxGridLines;\n    const gridYValues = [];\n    for (let i=0;i<=maxGridLines;i++){\n      const gridYValue = parseFloat(parseFloat(minChartValue+(i*gridYStep)).toFixed(6));\n      gridYValues.push(gridYValue);\n    }\n    \n    const axisBottomMaxValues = 10;\n    const daysCount = Object.values(days).length;    \n    const daysFrequency = Math.max(1,Math.ceil(daysCount/axisBottomMaxValues));\n\n    const chartProps = {\n      xScale:{\n        type: 'time',\n        format: '%Y/%m/%d %H:%M',\n      },\n      yScale:{\n        type: 'linear',\n        stacked: false,\n        min: minChartValue,\n        max: maxChartValue\n      },\n      xFormat:'time:%b %d %Y',\n      yFormat:value => this.functionsUtil.formatMoney(value,yFormatDecimals),\n      axisBottom: this.props.isMobile ? null : {\n        legend: '',\n        tickSize:0,\n        format: '%b %d',\n        tickPadding: 15,\n        orient: 'bottom',\n        legendOffset: 36,\n        legendPosition: 'middle',\n        tickValues:'every '+daysFrequency+' days'\n      },\n      gridYValues,\n      pointSize:0,\n      useMesh:true,\n      axisLeft: this.props.isMobile ? null : {\n        legend: '',\n        tickSize: 0,\n        orient: 'left',\n        tickPadding: 10,\n        tickRotation: 0,\n        legendOffset: -70,\n        tickValues:gridYValues,\n        legendPosition: 'middle',\n        format: v => this.functionsUtil.abbreviateNumber(v,2),\n      },\n      animate:true,\n      pointLabel:'y',\n      enableArea:true,\n      enableSlices:'x',\n      enableGridY:true,\n      curve:'monotoneX',\n      enableGridX:false,\n      pointBorderWidth:1,\n      colors:d => d.color,\n      pointLabelYOffset:-12,\n      areaBaselineValue:minChartValue,\n      pointColor:{ from: 'color', modifiers: []},\n      areaOpacity:this.props.themeMode === 'light' ? 0.1 : 0.5,\n      theme:{\n        axis: {\n          ticks: {\n            text: {\n              fontSize:12,\n              fontWeight:600,\n              fill:this.props.theme.colors.legend,\n              fontFamily:this.props.theme.fonts.sansSerif\n            }\n          }\n        },\n        grid: {\n          line: {\n            stroke: this.props.theme.colors.lineChartStroke, strokeDasharray: '8 4'\n          }\n        },\n      },\n      /*\n      defs:[\n        linearGradientDef('gradientA', [\n          { offset: 0, color: 'inherit' },\n          { offset: 100, color: 'inherit', opacity: 0 },\n        ]),\n      ],\n      fill:[{ match: '*', id: 'gradientA' }],\n      */\n      margin: this.props.isMobile ? { top: 20, right: 25, bottom: 25, left: 20 } : { top: 30, right: 50, bottom: 45, left: 60 },\n      sliceTooltip:(slideData) => {\n        const { slice } = slideData;\n        const point = slice.points[0];\n        return (\n          <ChartCustomTooltip\n            point={point}\n          >\n            <ChartCustomTooltipRow\n              color={point.color}\n              label={point.serieId}\n              value={`$ ${point.data.yFormatted}`}\n            />\n            {\n            (typeof point.data.balances === 'object' && Object.keys(point.data.balances).length>0) &&\n              Object.keys(point.data.balances).map(token => {\n                if (token === point.serieId){\n                  return null;\n                }\n                const color = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hex']);\n                const balance = point.data.balances[token];\n                let formattedBalance = this.functionsUtil.formatMoney(balance,2);\n                if (parseFloat(balance)>=0.01){\n                  return (\n                    <ChartCustomTooltipRow\n                      label={token}\n                      color={color}\n                      key={`row_${token}`}\n                      value={`$ ${formattedBalance}`}\n                    />\n                  );\n                }\n                return null;\n              })\n            }\n          </ChartCustomTooltip>\n        );\n      }\n    };\n\n    this.setState({\n      chartData,\n      chartProps\n    });\n  }\n\n  render() {\n    return (\n      <GenericChart\n        type={Line}\n        showLoader={true}\n        {...this.state.chartProps}\n        data={this.state.chartData}\n        parentId={this.props.parentId}\n        height={this.props.chartHeight}\n        parentIdHeight={this.props.parentIdHeight}\n      />\n    );\n  }\n}\n\nexport default PortfolioEquityTranches;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Heading, Text, Tooltip, Icon } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass FundsOverviewTranche extends Component {\n\n  state = {\n    // govTokensAprs:null,\n    aggregatedValues:[],\n    govTokensTotalApr:null,\n    govTokensUserBalance:null,\n    govTokensDistribution:null,\n    govTokensTotalBalance:null,\n    govTokensTotalAprTooltip:null,\n    idleTokenUserDistribution:null,\n    govTokensDistributionTooltip:null,\n    govTokensTotalBalanceTooltip:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  idleGovToken = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n\n    this.idleGovToken = this.functionsUtil.getIdleGovToken();\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n\n    /*\n    const govTokenAvailableTokens = {};\n    govTokenAvailableTokens[this.props.selectedToken] = this.props.tokenConfig;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const [\n      // govTokensAprs,\n      idleTokenUserDistribution,\n      govTokensUserBalance,\n      apy,\n      depositTimestamp,\n      days\n    ] = await Promise.all([\n      // this.functionsUtil.getGovTokensAprs(this.props.selectedToken,this.props.tokenConfig),\n      this.idleGovToken.getUserDistribution(this.props.account,govTokenAvailableTokens,true),\n      this.functionsUtil.getGovTokensUserBalances(this.props.account,govTokenAvailableTokens,null),\n      this.functionsUtil.loadTrancheField('apy',this.props.selectedToken,this.props.tokenConfig,this.props.account,false),\n      this.functionsUtil.loadTrancheField('depositTimestamp',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n      this.functionsUtil.loadTrancheField('daysFirstDeposit',this.props.selectedToken,this.props.tokenConfig,this.props.account),\n    ]);\n\n    let avgAPY = await this.functionsUtil.getAvgAPYStats(this.props.tokenConfig.address,isRisk,depositTimestamp);\n\n    if (!avgAPY || this.functionsUtil.BNify(avgAPY).lte(0)){\n      avgAPY = apy;\n    }\n\n    const govTokensTotalBalance = govTokensUserBalance ? Object.values(govTokensUserBalance).reduce( (totBalance,govTokenBalance) => {\n      return totBalance.plus(this.functionsUtil.BNify(govTokenBalance));\n    },this.functionsUtil.BNify(0)) : null;\n\n    const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n      const balance = govTokensUserBalance[govToken];\n      if (balance.gt(0)){\n        return `+${balance.toFixed(2)} ${govToken}`;\n      } else {\n        return null;\n      }\n    }).filter(v => (v !== null)) : null;\n\n    const aggregatedValues = [\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Avg APY',\n          desc:this.functionsUtil.getGlobalConfig(['messages','apyLong']),\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (avgAPY ? avgAPY.toFixed(2)+'%' : '0.00%') }}\n              />\n            </Flex>\n          )\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Current Allocation',\n          children:(\n            <Flex\n              width={1}\n              id={'allocationChart'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n            >\n              <TrancheField\n                {...this.props}\n                showLoader={true}\n                fieldInfo={{\n                  name:'allocationChart'\n                }}\n                parentId={'allocationChart'}\n                token={this.props.selectedToken}\n                tokenConfig={this.props.tokenConfig}\n              />\n            </Flex>\n          ),\n          label:'',\n        }\n      },\n      {\n        flexProps:{\n          width:[1,0.32],\n        },\n        props:{\n          title:'Days since first deposit',\n          children:(\n            <Flex\n              width={1}\n              alignItems={'center'}\n              height={['55px','59px']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Text\n                lineHeight={1}\n                fontWeight={[3,4]}\n                color={'copyColor'}\n                fontFamily={'counter'}\n                fontSize={['1.7em','1.7em']}\n                dangerouslySetInnerHTML={{ __html: (days ? parseInt(days) : '-') }}\n              />\n            </Flex>\n          )\n        }\n      }\n    ];\n\n    this.setState({\n      // govTokensAprs,\n      aggregatedValues,\n      // govTokensTotalApr,\n      govTokensUserBalance,\n      govTokensTotalBalance,\n      // govTokensTotalAprTooltip,\n      idleTokenUserDistribution,\n      govTokensTotalBalanceTooltip\n    });\n    */\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const stakingRewards = this.props.tokenConfig && this.props.trancheType ? this.props.tokenConfig[this.props.trancheType].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0;\n    const colWidth = stakingEnabled ? 1/6 : 1/5;\n\n    return (\n      <Flex\n        width={1}\n        flexDirection={'column'}\n      >\n        {\n          this.state.aggregatedValues.length>0 && \n            <Flex\n              width={1}\n              mb={[0,3]}\n              mt={[2,0]}\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.aggregatedValues.map((v,i) => (\n                  <Flex\n                    {...v.flexProps}\n                    flexDirection={'column'}\n                    key={`aggregatedValue_${i}`}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        py:[2,3],\n                        mb:[3,0]\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          v.props.children ? v.props.children : (\n                            <Text\n                              lineHeight={1}\n                              fontWeight={[3,4]}\n                              color={'copyColor'}\n                              fontFamily={'counter'}\n                              fontSize={[4,'1.7em']}\n                              dangerouslySetInnerHTML={{ __html: v.props.value }}\n                            >\n                            </Text>\n                          )\n                        }\n                        <Flex\n                          mt={2}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <Text\n                            fontWeight={2}\n                            fontSize={[1,2]}\n                            color={'cellText'}\n                          >\n                            {v.props.title}\n                          </Text>\n                          {\n                            v.props.desc && \n                              <Tooltip\n                                placement={'bottom'}\n                                message={v.props.desc}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                          }\n                        </Flex>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                ))\n              }\n            </Flex>\n        }\n        <DashboardCard\n          cardProps={{\n            px:2,\n            py:3\n          }}\n        >\n          {\n            this.props.transactionsList && this.props.transactionsList.length>0 && (\n              <Flex\n                width={1}\n                ml={[0,3]}\n                id={\"funds-overview\"}\n              >\n                <PortfolioEquityTranches\n                  {...this.props}\n                  chartHeight={350}\n                  parentId={'funds-overview'}\n                  chartToken={this.props.selectedToken}\n                  enabledTokens={[this.props.selectedToken]}\n                  frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                />\n              </Flex>\n            )\n          }\n          <Flex\n            width={1}\n            flexDirection={['column','row']}\n          >\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Deposited\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheDeposited',\n                  props:{\n                    decimals:7,\n                    fontWeight:300,\n                    maxPrecision:8,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            {\n              stakingEnabled && (\n                <Flex\n                  mb={[2,0]}\n                  width={[1,colWidth]}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                  justifyContent={'flex-start'}\n                >\n                  <Title\n                    mb={2}\n                    fontSize={[3,4]}\n                    component={Heading.h3}\n                  >\n                    Staked Amount\n                  </Title>\n                  <TrancheField\n                    {...this.props}\n                    addTokenName={false}\n                    fieldInfo={{\n                      name:'trancheStaked',\n                      props:{\n                        decimals:7,\n                        fontWeight:300,\n                        maxPrecision:8,\n                        fontSize:['1.8em','1.9em'],\n                        color:this.props.theme.colors.counter,\n                        flexProps:{\n                          justifyContent:'center'\n                        }\n                      }\n                    }}\n                  />\n                </Flex>\n              )\n            }\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Redeemable\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'trancheRedeemableWithStaked',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      color:this.props.theme.colors.counter,\n                      fontSize: this.props.isMobile ? '1.8em' : '1.9em',\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              <Flex\n                width={1}\n                mt={'-8px'}\n                justifyContent={'center'}\n              >\n                <TrancheField\n                  {...this.props}\n                  addTokenName={false}\n                  fieldInfo={{\n                    name:'earningsPerc',\n                    props:{\n                      fontSize:1,\n                      fontWeight:2,\n                      color:'cellText',\n                      flexProps:{\n                        justifyContent:'center'\n                      }\n                    }\n                  }}\n                />\n              </Flex>\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Earnings\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'earningsCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.govTokensTotalBalanceTooltip && this.state.govTokensTotalBalanceTooltip.length>0 && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.govTokensTotalBalanceTooltip.map((govTokenBalance,govTokenIndex) => (\n                        <Text\n                          fontSize={1}\n                          lineHeight={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                          mt={govTokenIndex ? 1 : 0}\n                          key={`govToken_${govTokenIndex}`}\n                        >\n                          {govTokenBalance}\n                        </Text>\n                      ))\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Fees\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'feesCounter',\n                  props:{\n                    decimals:7,\n                    maxPrecision:8,\n                    style:{\n                      fontWeight:300,\n                      fontSize:this.props.isMobile ? '1.8em' : '1.9em',\n                      color:this.props.theme.colors.counter\n                    },\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n            </Flex>\n            <Flex\n              mb={[2,0]}\n              width={[1,colWidth]}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'flex-start'}\n            >\n              <Title\n                mb={2}\n                fontSize={[3,4]}\n                component={Heading.h3}\n              >\n                Realized APY\n              </Title>\n              <TrancheField\n                {...this.props}\n                addTokenName={false}\n                fieldInfo={{\n                  name:'realizedApy',\n                  props:{\n                    decimals:2,\n                    fontWeight:300,\n                    fontSize:['1.8em','1.9em'],\n                    color:this.props.theme.colors.counter,\n                    flexProps:{\n                      justifyContent:'center'\n                    }\n                  }\n                }}\n              />\n              {\n                this.state.idleTokenUserDistribution && (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      mt={1}\n                      fontSize={1}\n                      lineHeight={1}\n                      fontWeight={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      {this.state.idleTokenUserDistribution.toFixed(4)} {this.idleGovToken.tokenName}/{this.idleGovToken.tokenConfig.distributionFrequency}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n          </Flex>\n        </DashboardCard>\n      </Flex>\n    );\n  }\n}\n\nexport default FundsOverviewTranche;","import Title from '../Title/Title';\nimport { Button, Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass StakingRewardsTranche extends Component {\n\n  state = {\n    stakingRewards:null,\n    stakingRewardsRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadUserRewards();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const portfolioChanged = JSON.stringify(prevProps.portfolio) !== JSON.stringify(this.props.portfolio);\n    const trancheConfigChanged = JSON.stringify(prevProps.trancheConfig) !== JSON.stringify(this.props.trancheConfig);\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (accountChanged || trancheConfigChanged || portfolioChanged || transactionsChanged){\n      this.loadUserRewards();\n    }\n  }\n\n  async loadUserRewards(){\n    if (!this.props.account || !this.props.trancheConfig || !this.props.portfolio){\n      return false;\n    }\n\n    const [\n      trancheBalance,\n      rewardTokensInfo,\n      stakingRewards,\n      trancheStakedAmount\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.trancheConfig.name,this.props.account,false),\n      this.functionsUtil.getTrancheRewardTokensInfo(this.props.tokenConfig,this.props.trancheConfig),\n      this.functionsUtil.getTrancheStakingRewards(this.props.account,this.props.trancheConfig,this.props.trancheConfig.functions.rewards),\n      this.functionsUtil.getTrancheStakedBalance(this.props.trancheConfig.CDORewards.name,this.props.account,this.props.trancheConfig.CDORewards.decimals,this.props.trancheConfig.functions.stakedBalance)\n    ]);\n\n    const trancheBalanceInfo = this.props.portfolio.tranchesBalance.find( p => p.token === this.props.token && p.protocol === this.props.protocol && p.tranche === this.props.tranche );\n    \n    const stakingRewardsRows = [];\n    await this.functionsUtil.asyncForEach(Object.keys(stakingRewards), async (rewardToken) => {\n      const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',rewardToken.toUpperCase()]);\n      const rewardTokenInfo = rewardTokensInfo[rewardToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(rewardToken,this.props.account);\n      const tokenAmount = !this.functionsUtil.BNify(stakingRewards[rewardToken]).isNaN() ? this.functionsUtil.BNify(stakingRewards[rewardToken]) : this.functionsUtil.BNify(0);\n\n      let distributionSpeed = rewardTokenInfo ? rewardTokenInfo.distributionSpeed : null;\n      if (trancheBalanceInfo && distributionSpeed){\n        distributionSpeed = distributionSpeed.times(trancheBalanceInfo.poolShare);\n      }\n      stakingRewardsRows.push({\n        token:rewardToken,\n        staked:trancheStakedAmount,\n        balance:tokenBalance.toFixed(8),\n        reedemable:tokenAmount.toFixed(8),\n        trancheBalance:this.functionsUtil.integerValue(trancheBalance),\n        tokenIcon:tokenConfig.icon || `images/tokens/${rewardToken}.svg`,\n        distributionSpeed:distributionSpeed ? distributionSpeed.toFixed(8)+rewardTokenInfo.distributionSpeedUnit : this.functionsUtil.BNify(0).toFixed(8)\n      });\n    });\n\n    this.setState({\n      stakingRewardsRows\n    });\n  }\n\n  claimCallback(tx){\n    this.loadUserRewards();\n  }\n\n  stakeCallback(tx){\n    this.loadUserRewards();\n  }\n\n  render() {\n    return (\n      this.state.stakingRewardsRows ?\n        <Flex\n          mb={[0,4]}\n          width={1}\n          flexDirection={'column'}\n          id={'funds-overview-container'}\n        >\n          <Title my={[3,4]}>Staking Rewards</Title>\n          <CustomList\n            rows={this.state.stakingRewardsRows}\n            cols={[\n              {\n                title:'TOKEN',\n                props:{\n                  width:[0.18,0.16]\n                },\n                fields:[\n                  {\n                    type:'image',\n                    props:{\n                      mr:2,\n                      size:this.props.isMobile ? '1.2em' : '1.8em'\n                    },\n                    path:['tokenIcon']\n                  },\n                  {\n                    type:'text',\n                    path:['token'],\n                  }\n                ]\n              },\n              {\n                mobile:false,\n                title:'BALANCE',\n                props:{\n                  width:[0.27,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['balance'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'REDEEMABLE',\n                desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                props:{\n                  width:[0.29,0.24],\n                  justifyContent:['center','flex-start']\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['reedemable'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  },\n                ]\n              },\n              {\n                title:'DISTRIBUTION',\n                desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                props:{\n                  width:[0.29,0.24],\n                },\n                fields:[\n                  {\n                    type:'text',\n                    path:['distributionSpeed'],\n                    props:{\n                      decimals: this.props.isMobile ? 4 : 8\n                    }\n                  }\n                ]\n              },\n              {\n                title:'',\n                props:{\n                  width:[0.26,0.16],\n                },\n                parentProps:{\n                  width:1\n                },\n                fields:[\n                  {\n                    funcProps:{\n                      componentProps:{\n                        disabled:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? true : false ),\n                      },\n                      // value:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // action:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'Stake' : 'Claim') : 'Claim'),\n                      // methodName:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? 'stake' : 'claim') : 'claim'),\n                      // transactionParams:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? [this.functionsUtil.BNify(props.row.trancheBalance).toFixed()] : []) : []),\n                      // callback:(props) => (this.functionsUtil.BNify(props.row.reedemable).lte(0) ? (props.row.staked.lte(0) ? this.stakeCallback.bind(this) : this.claimCallback.bind(this)) : this.claimCallback.bind(this))\n                    },\n                    fieldComponent:ExecuteTransaction,\n                    props:{\n                      params:[],\n                      parentProps:{\n                        width:1\n                      },\n                      Component:Button,\n                      componentProps:{\n                        style:{\n                          width:'100%'\n                        },\n                        value:'Claim',\n                        borderRadius:4,\n                        mainColor:'redeem',\n                        size:this.props.isMobile ? 'small' : 'medium'\n                      },\n                      value:'Claim',\n                      action:'claim',\n                      callback:this.claimCallback.bind(this),\n                      methodName:this.props.trancheConfig.functions.claim,\n                      contractName:this.props.trancheConfig.CDORewards.name\n                    }\n                  }\n                ]\n              }\n            ]}\n            {...this.props}\n          />\n        </Flex>\n      : this.props.children || null\n    );\n  }\n}\n\nexport default StakingRewardsTranche;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport GenericFaqs from '../GenericFaqs/GenericFaqs';\nimport { Box, Flex/*, Icon, Text*/ } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n// import DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheDetails from '../TrancheDetails/TrancheDetails';\n// import TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\n// import TrancheHarvests from '../TrancheHarvests/TrancheHarvests';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TrancheDepositRedeem from '../TrancheDepositRedeem/TrancheDepositRedeem';\nimport FundsOverviewTranche from '../FundsOverviewTranche/FundsOverviewTranche';\nimport StakingRewardsTranche from '../StakingRewardsTranche/StakingRewardsTranche';\n\nclass TranchePage extends Component {\n\n  state = {\n    transactions:[],\n    userHasFunds:false,\n    stakingEnabled:false,\n    componentLoaded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const trancheTypeChanged = prevProps.trancheType !== this.props.trancheType;\n    const portfolioChanged = (this.props.portfolio && !prevProps.portfolio) || JSON.stringify(this.props.portfolio) !== JSON.stringify(prevProps.portfolio);\n    if (portfolioChanged || tokenConfigChanged || trancheTypeChanged){\n      this.loadData();\n    }\n  }\n\n  loadData(){\n    const componentLoaded = true;\n    const transactions = this.props.portfolio ? this.props.portfolio.transactions.filter( t => t.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && t.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || t.tranche === this.props.trancheType) ) : [];\n    const userHasFunds = this.props.portfolio && this.props.portfolio.tranchesBalance.find( balanceInfo => balanceInfo.protocol.toLowerCase() === this.props.selectedProtocol.toLowerCase() && balanceInfo.token.toLowerCase() === this.props.selectedToken.toLowerCase() && (!this.props.trancheType || balanceInfo.tranche.toLowerCase() === this.props.trancheType.toLowerCase()) ) ? true : false;\n\n    const stakingRewards = this.props.tokenConfig && this.props.trancheType ? this.props.tokenConfig[this.props.trancheType].CDORewards.stakingRewards : [];\n    const stakingRewardsEnabled = stakingRewards.length ? stakingRewards.filter( t => t.enabled ) : null;\n    const stakingEnabled = stakingRewardsEnabled && stakingRewardsEnabled.length>0;\n\n    // console.log('loadData',this.props.tokenConfig,this.props.trancheType,this.props.tokenConfig[this.props.trancheType].CDORewards,stakingRewards,stakingRewardsEnabled,stakingEnabled);\n\n    this.setState({\n      transactions,\n      userHasFunds,\n      stakingEnabled,\n      componentLoaded\n    });\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n    const filteredTranchesTypes = Object.keys(tranchesDetails).filter( trancheType => !this.props.trancheType || this.props.trancheType === trancheType );\n    return (\n      <Box\n        mb={4}\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {this.functionsUtil.capitalize(this.props.selectedProtocol)} - {this.props.selectedToken} - {this.props.trancheDetails ? this.props.trancheDetails.name : 'Tranches'} \n        </Title>\n        {\n          /*\n          this.props.selectedProtocol === 'lido' && this.props.selectedToken === 'stETH' && (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p: 2,\n                  mb: 3,\n                  width: 1,\n                  maxWidth:['100%',this.props.trancheDetails ? '42em' : '100%']\n                }}\n                isActive={true}\n                isInteractive={false}\n              >\n                <Flex\n                  alignItems={\"center\"}\n                  justifyContent={\"center\"}\n                  flexDirection={[\"column\", \"row\"]}\n                >\n                  <Icon\n                    mr={1}\n                    size={\"1.2em\"}\n                    name={'InfoOutline'}\n                    color={\"flashColor\"}\n                  />\n                  <Text\n                    fontWeight={500}\n                    fontSize={\"15px\"}\n                    color={\"flashColor\"}\n                    textAlign={\"center\"}\n                  >\n                    LDO rewards will be resumed on Sunday 6th of March!\n                  </Text>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          )\n          */\n        }\n        {\n          /*\n          !this.props.trancheType ? (\n            <TrancheWelcome\n              {...this.props}\n              tokenConfig={this.props.tokenConfig}\n              selectTrancheType={this.props.selectTrancheType}\n            />\n          ) : (\n          */\n            <Flex\n              mt={2}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={this.props.trancheType ? 'center' : 'space-between'}\n            >\n              {\n                filteredTranchesTypes.map( trancheType => (\n                  <Flex\n                    mb={[3,0]}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    key={`tranche_${trancheType}`}\n                    width={[1,(1/filteredTranchesTypes.length)-0.02]}\n                  >\n                    {\n                      this.props.trancheType ? (\n                        <TrancheDepositRedeem\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          transactionSucceeded={this.props.loadPortfolio}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      ) : (\n                        <TrancheDetails\n                          {...this.props}\n                          selectedTranche={trancheType}\n                          cdoConfig={this.props.tokenConfig.CDO}\n                          showSelectButton={!this.props.trancheType}\n                          selectTrancheType={this.props.selectTrancheType}\n                          trancheConfig={this.props.tokenConfig[trancheType]}\n                        />\n                      )\n                    }\n                  </Flex>\n                ))\n              }\n            </Flex>\n            /*\n          )\n        */\n        }\n        {\n          this.state.componentLoaded && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <Flex\n              width={1}\n              mb={[0,4]}\n              flexDirection={'column'}\n              id={'funds-overview-container'}\n            >\n              <Title my={[3,4]}>Funds Overview</Title>\n              <FundsOverviewTranche\n                {...this.props}\n                token={this.props.selectedToken}\n                tranche={this.props.trancheType}\n                tokenConfig={this.props.tokenConfig}\n                protocol={this.props.selectedProtocol}\n                transactionsList={this.state.transactions}\n                trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n              />\n            </Flex>\n        }\n        {\n          this.state.componentLoaded && this.state.stakingEnabled && this.props.account && this.state.userHasFunds && this.props.trancheType &&\n            <StakingRewardsTranche\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              transactionsList={this.state.transactions}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n        }\n        {\n          /*\n          this.state.componentLoaded && this.props.account && this.props.trancheType && (\n            <TrancheHarvests\n              {...this.props}\n              token={this.props.selectedToken}\n              tranche={this.props.trancheType}\n              tokenConfig={this.props.tokenConfig}\n              protocol={this.props.selectedProtocol}\n              trancheConfig={this.props.tokenConfig[this.props.trancheType]}\n            />\n          )\n          */\n        }\n        {\n          this.props.account && this.state.transactions && this.state.transactions.length>0 && \n            <Flex\n              width={1}\n              mb={[3,4]}\n              id={'transactions'}\n              flexDirection={'column'}\n            >\n              <Title my={[3,4]}>Transactions</Title>\n              <TransactionsList\n                {...this.props}\n                enabledTokens={[this.props.selectedToken]}\n                transactionsList={this.state.transactions}\n                availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                  availableActions[t.action.toLowerCase()] = t.action;\n                  return availableActions;\n                },{})}\n                cols={[\n                  {\n                    title: this.props.isMobile ? '' : 'HASH',\n                    props:{\n                      width:[0.13,0.18]\n                    },\n                    fields:[\n                      {\n                        name:'icon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        name:'hash',\n                        mobile:false\n                      }\n                    ]\n                  },\n                  {\n                    title:'ACTION',\n                    mobile:false,\n                    props:{\n                      width:0.12,\n                    },\n                    fields:[\n                      {\n                        name:'action'\n                      }\n                    ]\n                  },\n                  {\n                    title:'DATE',\n                    props:{\n                      width:[0.27,0.15],\n                    },\n                    fields:[\n                      {\n                        name:'date'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'STATUS',\n                    props:{\n                      width:[0.18,0.16],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'statusIcon',\n                        props:{\n                          mr:[0,2]\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'status'\n                      }\n                    ]\n                  },\n                  {\n                    title:'AMOUNT',\n                    props:{\n                      width:[0.23,0.11],\n                    },\n                    fields:[\n                      {\n                        name:'amount'\n                      },\n                    ]\n                  },\n                  {\n                    title:'PROTOCOL',\n                    props:{\n                      width:[0.21, 0.14],\n                    },\n                    fields:[\n                      {\n                        type:'image',\n                        name:'custom',\n                        path:['protocolIcon'],\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        type:'text',\n                        mobile:false,\n                        name:'custom',\n                        path:['protocol']\n                      }\n                    ]\n                  },\n                  {\n                    title:'ASSET',\n                    props:{\n                      width:[0.16,0.14],\n                      justifyContent:['center','flex-start']\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:[0,2],\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      },\n                    ]\n                  },\n                ]}\n              />\n            </Flex>\n        }\n        {\n          this.props.trancheType && (\n            <Flex\n              width={1}\n              id={'faqs'}\n              alignItems={'center'}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Title\n                my={3}\n              >\n                Frequently asked questions\n              </Title>\n              <Flex\n                width={[1,0.5]}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <GenericFaqs\n                  showSections={false}\n                  questions={{\n                    '':[\n                      {\n                        q: 'Is there a locking period?',\n                        a: `There are no locking period or epochs and users are free to enter and exit at any time. The interest earned (and governance tokens, after being partially sold in the market) will be split between the two classes according to a predefined ratio called trancheAPRSplitRatio (eg 20% interest to Senior tranche holders and 80% to Junior tranche). Hence, the rate is variable for both classes of tranches.`\n                      },\n                      {\n                        q: 'How the APY is determined?',\n                        a: `The base APY, before being splitted between tranches, is provided by the underlying strategy that takes into account the reinvestment of the accrued governance tokens (except for eventual IDLE rewards). The actual APY of each tranche class is determined by the ratio between the current underlying TVL of Senior and Junior tranches (ie APY = share of yield allocated to senior tranches / Senior TVL). The APY has to be considered net of fees. For more info <a href=\"https://github.com/Idle-Labs/idle-tranches#idle-dynamic-tranches\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.link}\">view the readme</a>`\n                      },\n                      {\n                        q: 'What happens in case of hack?',\n                        a: `In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).`\n                      },\n                      {\n                        q: 'How are fees collected?',\n                        a: `Fees collected at each harvest event. When the strategy auto-reinvest accrued tokens, Idle protocol charges a 10% performance fee. Renevues get routed to FeeCollector address.`\n                      },\n                      {\n                        q: 'What are staking rewards?',\n                        a: `To keep a good ratio between Senior and Junior tranches and an healthy APY part of farmed governance tokens (eg IDLE) are redistributed to users who stakes their tranche tokens in specific tranche rewards contracts.`\n                      } \n                    ]\n                  }}\n                />\n              </Flex>\n            </Flex>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default TranchePage;","import React, { Component } from \"react\";\nimport RoundButton from \"../RoundButton/RoundButton\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheField from \"../TrancheField/TrancheField\";\nimport { Box, Flex, Icon, Text, Image } from \"rimble-ui\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass Base extends Component {\n  // Utils\n  functionsUtil = null;\n\n  state = {\n    token:null,\n    protocol:null,\n    tokenConfig:null\n  };\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    let token=null;\n    let protocol=null;\n\n    const bestTrancheInfo = await this.functionsUtil.getBestTranche(this.props.trancheDetails.type,9999);\n    if(bestTrancheInfo){\n      token = bestTrancheInfo.token;\n      protocol = bestTrancheInfo.protocol;\n    } else {\n      const strategyInfo = this.functionsUtil.getGlobalConfig([\"strategies\",\"tranches\"]);\n      token = strategyInfo.token;\n      protocol = strategyInfo.protocol;\n    }\n    \n    const tokenConfig = this.props.availableTranches[protocol][token];\n\n    return this.setState({\n      token,\n      protocol,\n      tokenConfig\n    });\n  }\n\n  render() {\n    const trancheDetails = this.props.trancheDetails;\n    const tokenConfig = this.props.tokenConfig || this.state.tokenConfig;\n\n    return (\n      <Box\n        my={[3, 0]}\n        boxShadow={1}\n        borderRadius={2}\n        width={[1, 0.49]}\n      >\n        <Flex\n          p={0}\n          mx={0}\n          border={\"0\"}\n          height={\"100%\"}\n          borderRadius={2}\n          overflow={\"hidden\"}\n          flexDirection={\"column\"}\n          backgroundColor={\"cardBg\"}\n          borderColor={\"transparent\"}\n          justifyContent={[\"center\",trancheDetails.type === \"AA\" ? \"left\" : \"right\"]}\n        >\n          <Box\n            width={1}\n            borderBottom={`1px solid ${this.props.theme.colors.divider2}`}\n          >\n            <Flex\n              pb={2}\n              mx={2}\n              my={3}\n              flexDirection={\"column\"}\n            >\n              <Flex mt={3} alignItems={\"center\"}>\n                <Image\n                  ml={3}\n                  mr={1}\n                  alt={trancheDetails.name}\n                  src={trancheDetails.image}\n                  size={this.props.isMobile ? \"2em\" : \"2.4em\"}\n                />\n                <Flex mx={1}>\n                  <Text\n                    ml={[2, 0]}\n                    fontWeight={4}\n                    fontSize={[4, 5]}\n                    lineHeight={1}\n                  >\n                    {trancheDetails.name}\n                  </Text>\n                </Flex>\n              </Flex>\n              <Box\n                ml={5}\n                mr={3}\n                mt={3}\n                alignItems={\"flex-start\"}\n                flexDirection={\"column\"}\n              >\n                <Flex\n                  mr={1}\n                  flexDirection={\"row\"}\n                  alignItems={\"baseline\"}\n                >\n                  <TrancheField\n                    fieldInfo={{\n                      showTooltip: false,\n                      name: `${trancheDetails.baseName}Apy`,\n                      props: {\n                        decimals: 2,\n                        fontWeight: 4,\n                        lineHeight: \"1\",\n                        fontSize: [3, 4],\n                        textAlign: \"center\",\n                        flexProps: {\n                          justifyItems: \"flex-end\"\n                        },\n                        color: this.props.trancheDetails.color.hex\n                      }\n                    }}\n                    {...this.props}\n                    token={this.state.token}\n                    tokenConfig={tokenConfig}\n                    tranche={this.props.tranche}\n                    protocol={this.state.protocol}\n                  />\n                  <Text\n                    my={1}\n                    ml={[2, 3]}\n                    fontSize={1}\n                    lineHeight={\"1\"}\n                    textAlign={\"left\"}\n                    color={\"cellText\"}\n                  >\n                    Current APY for {this.state.token}\n                  </Text>\n                </Flex>\n                <Text\n                  mt={3}\n                  fontWeight={2}\n                  fontSize={[1, 2]}\n                  textAlign={\"left\"}\n                  lineHeight={\"1.5\"}\n                  color={\"copyColor\"}\n                >\n                  {trancheDetails.description.long}\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n          <Flex\n            height={\"100%\"}\n            bg={\"cardBgContrast\"}\n            flexDirection={'column'}\n            justifyContent={'space-between'}\n          >\n            <Box\n              mt={3}\n              my={3}\n              pl={2}\n              width={1}\n            >\n              {trancheDetails.features.map((feature, index) => (\n                <Flex\n                  mb={2}\n                  my={1}\n                  px={2}\n                  mt={[2, 1]}\n                  alignItems={\"center\"}\n                  flexDirection={\"row\"}\n                  key={`feature_${index}`}\n                >\n                  <Icon\n                    mr={2}\n                    ml={3}\n                    name={\"Done\"}\n                    color={\"tick\"}\n                    size={this.props.isMobile ? \"1.6em\" : \"1.8em\"}\n                  />\n                  <Text ml={[2, 1]} fontSize={[1, 2]} fontWeight={\"500\"}>\n                    {feature}\n                  </Text>\n                </Flex>\n              ))}\n            </Box>\n            <Flex\n              width={1}\n              height={\"auto\"}\n              alignItems={\"flex-end\"}\n              justifyContent={\"center\"}\n            >\n              <RoundButton\n                buttonProps={{\n                  my: 3,\n                  width: 0.85,\n                  fontSize: 2,\n                  contrastColor: \"white\",\n                  mainColor: trancheDetails.color.hex\n                }}\n                handleClick={e =>\n                  this.props.selectTrancheType(trancheDetails.route)\n                }\n              >\n                {this.props.tokenConfig\n                  ? `Go to ${trancheDetails.name}`\n                  : `Enter the ${trancheDetails.name}`}\n              </RoundButton>\n            </Flex>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Base;\n","import React, { Component } from \"react\";\nimport { Link, Flex, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\n\n//import DashboardCard from \"../DashboardCard/DashboardCard\";\n\nclass TrancheFlash extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const flashData = this.functionsUtil.getGlobalConfig([\"tranchflash\"]);\n    return (\n      <Flex\n        width={1}\n        mx={4}\n        flexDirection={[\"column\", \"row\"]}\n        justifyContent={\"center\"}\n      >\n        <Flex mx={2} my={[2, 4]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex justifyContent={\"left\"} my={3} width={[1, 0.7]}>\n            <Text\n              bold={\"true\"}\n              fontWeight={4}\n              lineHeight={1}\n              color={\"white\"}\n              fontSize={[5, 6]}\n              textAlign={\"left\"}\n            >\n              {flashData.subtitle}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            width={1}\n            mb={[2, 3]}\n            justifyContent={\"left\"}\n          >\n            <Text\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n            >\n              {flashData.desc}\n            </Text>\n          </Flex>\n          <Flex\n            mt={2}\n            mb={2}\n            width={1}\n            flexDirection={\"column\"}\n          >\n            {\n              flashData.questions.map( (question,index) => (\n                <Flex\n                  my={2}\n                  key={`question_${index}`}\n                  alignItems={\"flex-start\"}\n                >\n                  <Link\n                    fontSize={2}\n                    fontWeight={2}\n                    opacity={\"50%\"}\n                    color={\"white\"}\n                    textAlign={\"left\"}\n                    onClick={e =>\n                      this.props.openTooltipModal(question.desc, question.msg)\n                    }\n                  >\n                    <Flex\n                      flexDirection={'row'}\n                      alignItems={\"flex-start\"}\n                    >\n                      <Image\n                        mr={2}\n                        src={flashData.helpcircle}\n                      />\n                      {question.desc}\n                    </Flex>\n                  </Link>\n                </Flex>\n              ))\n            }\n          </Flex>\n        </Flex>\n        <Flex\n          mt={6}\n          width={0.2}\n          hidden={this.props.isMobile ? 1 : 0}\n          alignItems={\"flex-start\"}\n        >\n          <Image hidden={this.props.isMobile ? 1 : 0} src={flashData.arrows} />\n        </Flex>\n        <Flex ml={2} my={[3, 5]} width={[1, 0.4]} flexDirection={\"column\"}>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"AA\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.seniorinfo\n              }}\n            ></Text>\n          </Flex>\n          <Flex my={[1, 0]} flexDirection={\"row\"} alignItems={\"flex-start\"}>\n            <Image\n              my={[0, 2]}\n              ml={[0, 4]}\n              width={[\"2.4em\", \"4.7em\"]}\n              src={this.functionsUtil.getGlobalConfig([\n                \"tranches\",\n                \"BB\",\n                \"bubble\"\n              ])}\n            />\n            <Text\n              mt={[0, 2]}\n              mx={2}\n              mb={[2, 1]}\n              color={\"white\"}\n              textAlign={\"left\"}\n              fontWeight={2}\n              fontSize={2}\n              dangerouslySetInnerHTML={{\n                __html: flashData.juniorinfo\n              }}\n            ></Text>\n          </Flex>\n        </Flex>\n        {/*<Flex width={0.3}>\n          <Text>ABC</Text>\n        </Flex>*/}\n      </Flex>\n    );\n  }\n}\nexport default TrancheFlash;\n","import Title from \"../Title/Title\";\nimport { Flex, Text } from \"rimble-ui\";\nimport ExtLink from \"../ExtLink/ExtLink\";\nimport React, { Component } from \"react\";\nimport styles from \"./TrancheWelcome.module.scss\";\nimport TrancheBox from \"../TrancheBox/TrancheBox\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TrancheFlash from \"../TrancheFlash/TrancheFlash\";\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\n\nclass TrancheWelcome extends Component {\n  // Utils\n  functionsUtil = null;\n\n  loadUtils() {\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n    const tranchesDetails = this.functionsUtil.getGlobalConfig([\"tranches\"]);\n    return (\n      <Flex\n        width={1}\n        alignItems={\"center\"}\n        flexDirection={'column'}\n        justifyContent={\"center\"}\n      >\n        <AssetsUnderManagement\n          {...this.props}\n          flexProps={{\n            mb:[3,0]\n          }}\n          loaderAlign={'flex-end'}\n          subtitle={'Total Value Locked on Tranches'}\n          aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n        />\n        <Flex\n          mb={3}\n          width={1}\n          maxWidth={8}\n          alignItems={\"center\"}\n          flexDirection={\"column\"}\n          justifyContent={\"center\"}\n        >\n          {!this.props.tokenConfig ? (\n            <>\n              <Title\n                fontSize={[5,6]}\n              >\n                Perpetual Yield Tranches\n              </Title>\n              <Flex\n                mt={[2,3]}\n                border={1}\n                borderRadius={2}\n                borderColor={\"transparent\"}\n                backgroundColor={\"newblue\"}\n                className={[styles.trancheFlash,this.props.isMobile ? styles.mobile : null]}\n              >\n                <TrancheFlash {...this.props}></TrancheFlash>\n              </Flex>\n            </>\n          ) : (\n            <Title\n              mb={3}\n              fontWeight={2}\n              fontSize={[3, 4]}\n              color={\"copyColor\"}\n              textAlign={\"center\"}\n            >\n              Select your preferred Tranche\n            </Title>\n          )}\n          <Flex my={3} mx={0} justifyContent={\"center\"}>\n            <Flex\n              width={1}\n              flexDirection={[\"column\", \"row\"]}\n              justifyContent={\"space-between\"}\n            >\n              {Object.keys(tranchesDetails).map((trancheType, index) => (\n                <TrancheBox\n                  {...this.props}\n                  tranche={trancheType}\n                  key={`tranche_${index}`}\n                  tokenConfig={this.props.tokenConfig}\n                  trancheDetails={tranchesDetails[trancheType]}\n                />\n              ))}\n            </Flex>\n          </Flex>\n          <Flex\n            mt={3}\n            width={1}\n            px={[0,5]}\n            justifyContent={\"center\"}\n          >\n            <Text\n              fontSize={[0,1]}\n              color={'statValue'}\n              textAlign={\"center\"}\n            >\n              If you're still unsure in which Tranche to pick, reach out to us on our <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['forumURL'])}>Forum</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['discordURL'])}>Discord</ExtLink>, <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['telegramURL'])}>Telegram</ExtLink> or <ExtLink fontSize={[0,1]} href={this.functionsUtil.getGlobalConfig(['twitterURL'])}>Twitter</ExtLink>.<br />The team and the community would be happy to help!\n            </Text>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TrancheWelcome;\n","import { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass GenericPieChart extends Component {\n  state = {\n    chartProps:null,\n    selectedSlice:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    if (mobileChanged){\n      this.setStateSafe({\n        chartProps:null,\n        selectedSlice:null,\n      },() => {\n        this.loadData();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async loadData(){\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth: 0,\n      cornerRadius:0,\n      motionDamping:15,\n      innerRadius: 0.65,\n      motionStiffness:90,\n      colors:d => d.color,\n      onMouseEnter:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:data\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setStateSafe({\n          selectedSlice:null\n        });\n      },\n      tooltipFormat: this.props.tooltipFormat ? this.props.tooltipFormat : (v => v),\n      sliceLabel: this.props.sliceLabel,// ? this.props.sliceLabel : (d => d.value),\n      radialLabel: d => {\n        return null;\n      },\n      theme:{\n        tooltip: {\n          container: this.props.inline ? {\n            background: this.props.theme.colors.cardBg\n          } : {\n            display: 'none',\n          }\n        },\n        labels:{\n          text:{\n            fontWeight:600,\n            fontSize:this.props.isMobile ? 13 : 15,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: this.props.theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      enableRadialLabels:false,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      enableSlicesLabels: !this.props.inline,\n      radialLabelsLinkColor:{ from: 'color' },\n      margin: this.props.margin || {top:0,right:0,bottom:0,left:0},\n      borderColor:{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] },\n    };\n\n    if (this.props.showLegend){\n      chartProps.legends = [\n        Object.assign({\n          itemWidth: 60,\n          itemHeight: 18,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          symbolShape: 'circle',\n          translateY: this.props.isMobile ? 25 : 50,\n          itemTextColor: this.props.theme.colors.legend,\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        },this.props.legendProps)\n      ];\n    }\n\n    this.setStateSafe({\n      chartProps\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex\n        width={1}\n        position={'relative'}\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        {\n          this.state.chartProps && !this.props.inline &&\n            <Flex\n              zIndex={0}\n              top={['23%','25%']}\n              left={['20%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              position={'absolute'}\n              width={['60%','46%']}\n              height={['53%','46%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                this.state.selectedSlice ? (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      width={['1.8em','2em']}\n                      height={['1.8em','2em']}\n                      src={this.state.selectedSlice.image}\n                    />\n                    <SmartNumber\n                      decimals={3}\n                      fontWeight={4}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      number={this.state.selectedSlice.valueHover || this.state.selectedSlice.value}\n                      {...this.state.selectedSlice.valueHoverProps}\n                    />\n                    <Text\n                      fontSize={[1,2]}\n                      fontWeight={3}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedSlice.label}\n                    </Text>\n                  </Flex>\n                ) : (\n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={this.props.defaultImage}\n                    />\n                    <Text\n                      fontSize={[3,4]}\n                      fontWeight={[3,4]}\n                    >\n                      {this.props.defaultValue}\n                    </Text>\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.props.defaultLabel}\n                    </Text>\n                  </Flex>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          showLoader={true}\n          {...this.props}\n          {...this.state.chartProps}\n          data={this.props.chartData}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default GenericPieChart;","import CountUp from 'react-countup';\nimport { Box, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalBalanceCounter extends Component {\n\n  state = {\n    counterEnd:null,\n    counterStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        counterEnd:null,\n        counterStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    // const counterStart = portfolio.totalAmountLent.plus(portfolio.totalEarnings);\n    const counterStart = portfolio.totalBalance;\n    const counterEnd = counterStart.plus(counterStart.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      counterEnd,\n      counterStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const decimals = this.props.decimals || 8;\n\n    return this.state.counterStart && this.state.counterEnd ? (\n      <Box\n        width={1}\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.counterEnd)}\n          start={parseFloat(this.state.counterStart)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Box>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalBalanceCounter;\n","import CountUp from 'react-countup';\nimport { Flex, Loader } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TotalEarningsCounter extends Component {\n\n  state = {\n    earningsEnd:null,\n    earningsStart:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalEarnings();\n    }\n\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const styleChanged = JSON.stringify(prevProps.counterStyle) !== JSON.stringify(this.props.counterStyle);\n    if (styleChanged || themeModeChanged || mobileChanged){\n      const oldState = Object.assign({},this.state);\n      this.setState({\n        earningsEnd:null,\n        earningsStart:null\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  async loadTotalEarnings(){\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized){\n      return true;\n    }\n\n    const availableTokens = this.props.availableTokens || {};\n    const portfolio = this.props.portfolio || await this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account);\n\n    const earningsStart = portfolio.totalEarnings;\n    const earningsEnd = earningsStart.plus(portfolio.totalAmountLent.times(portfolio.avgAPY.div(100)));\n\n    this.setState({\n      earningsEnd,\n      earningsStart\n    });\n  }\n\n  render() {\n\n    const counterStyle = {\n      lineHeight:1,\n      color:this.props.theme.colors.copyColor,\n      fontFamily:this.props.theme.fonts.counter,\n      fontWeight: this.props.isMobile ? 600 : 700,\n      fontSize:this.props.isMobile ? '21px' : '1.7em',\n    };\n\n    // Replace props\n    if (this.props.counterStyle && Object.keys(this.props.counterStyle).length){\n      Object.keys(this.props.counterStyle).forEach(p => {\n        counterStyle[p] = this.props.counterStyle[p];\n      });\n    }\n\n    const unit = this.props.unit || '$ ';\n    const decimals = this.props.decimals || 8;\n\n    return this.state.earningsStart && this.state.earningsEnd ? (\n      <Flex\n      >\n        <CountUp\n          delay={0}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          decimals={decimals}\n          duration={31536000}\n          end={parseFloat(this.state.earningsEnd)}\n          start={parseFloat(this.state.earningsStart)}\n          formattingFn={ n => unit+this.functionsUtil.formatMoney(n,decimals) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              ref={countUpRef}\n              style={counterStyle}\n            />\n          )}\n        </CountUp>\n      </Flex>\n    ) : (\n      <Loader size={\"20px\"} />\n    );\n  }\n}\n\nexport default TotalEarningsCounter;\n","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport Breadcrumb from '../Breadcrumb/Breadcrumb';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TranchePage from '../TranchePage/TranchePage';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TrancheWelcome from '../TrancheWelcome/TrancheWelcome';\nimport GenericPieChart from '../GenericPieChart/GenericPieChart';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport AssetsUnderManagement from \"../AssetsUnderManagement/AssetsUnderManagement\";\nimport { Box, Flex, Heading, Loader, Text, Icon, Tooltip, Image } from \"rimble-ui\";\nimport PortfolioEquityTranches from '../PortfolioEquityTranches/PortfolioEquityTranches';\n\nclass Tranches extends Component {\n\n  state = {\n    portfolio:null,\n    transactions:[],\n    tokenConfig:null,\n    trancheType:null,\n    trancheRoute:null,\n    selectedToken:null,\n    userHasFunds:false,\n    depositedTokens:[],\n    remainingTokens:[],\n    trancheDetails:null,\n    useTrancheType:false,\n    depositedTranches:{},\n    remainingTranches:{},\n    portfolioLoaded:false,\n    componentLoaded:false,\n    selectedProtocol:null,\n    allocationChartData:null,\n    portfolioEquityQuickSelection:'week'\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n\n    this.loadPortfolio().then( () => {\n      const componentLoaded = true;\n      const trancheRoute = this.props.urlParams.param1;\n      const tranchesDetails = this.functionsUtil.getGlobalConfig(['tranches']);\n      const trancheDetails = Object.values(tranchesDetails).find( t => t.route === trancheRoute );\n\n      if (trancheDetails !== undefined) {\n        const trancheType = trancheDetails.type;\n        const useTrancheType = !this.state.userHasFunds;\n        const selectedToken = this.props.urlParams.param3;\n        const selectedProtocol = this.props.urlParams.param2;\n        const tokenConfig = selectedProtocol ? (this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null) : null;\n\n        if (this.state.userHasFunds && !tokenConfig){\n          return this.props.goToSection(this.props.selectedSection.route);\n        }\n\n        this.setState({\n          trancheType,\n          tokenConfig,\n          trancheRoute,\n          selectedToken,\n          trancheDetails,\n          useTrancheType,\n          selectedProtocol\n        });\n      } else {\n        const selectedToken = this.props.urlParams.param2;\n        const selectedProtocol = this.props.urlParams.param1;\n        const tokenConfig = this.props.availableTranches[selectedProtocol] && this.props.availableTranches[selectedProtocol][selectedToken] ? this.props.availableTranches[selectedProtocol][selectedToken] : null;\n        if (tokenConfig){\n          this.setState({\n            tokenConfig,\n            selectedToken,\n            selectedProtocol\n          });\n        }\n      }\n\n      this.setState({\n        componentLoaded\n      });\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTranchesChanged = JSON.stringify(prevProps.availableTranches) !== JSON.stringify(this.props.availableTranches);\n    if (accountChanged || availableTranchesChanged){\n      this.setState({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async loadPortfolio(){\n    if (!this.props.account){\n      const userHasFunds = false;\n      const portfolioLoaded = true;\n      this.setState({\n        userHasFunds,\n        portfolioLoaded\n      });\n      return false;\n    }\n\n    const portfolio = await this.functionsUtil.getAccountPortfolioTranches(this.props.availableTranches,this.props.account);\n\n    if (portfolio){\n      const tranchesTokens = [];\n      const tranchesBalances = [];\n      \n      const depositedTranches = {};\n      const remainingTranches = {};\n      const portfolioLoaded = true;\n      const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n\n      portfolio.tranchesBalance.forEach( trancheInfo => {\n        if (!tranchesBalances[trancheInfo.tranche]){\n          tranchesBalances[trancheInfo.tranche] = {\n            weight:this.functionsUtil.BNify(0),\n            balance:this.functionsUtil.BNify(0)\n          };\n        }\n        \n        tranchesBalances[trancheInfo.tranche].weight = tranchesBalances[trancheInfo.tranche].weight.plus(trancheInfo.trancheWeight);\n        tranchesBalances[trancheInfo.tranche].balance = tranchesBalances[trancheInfo.tranche].balance.plus(trancheInfo.tokenBalance);\n\n        if (!tranchesTokens[trancheInfo.token]){\n          tranchesTokens[trancheInfo.token] = this.functionsUtil.BNify(0);\n        }\n        tranchesTokens[trancheInfo.token] = tranchesTokens[trancheInfo.token].plus(trancheInfo.tokenBalance);\n      });\n\n      const depositedTokens = Object.keys(tranchesTokens);\n      \n      Object.keys(this.props.availableTranches).forEach(protocol => {\n        Object.keys(this.props.availableTranches[protocol]).forEach( tranche=> {\n          if(depositedTokens.includes(tranche)) {\n              if(!depositedTranches[protocol]){\n                depositedTranches[protocol]={};\n              }\n              depositedTranches[protocol][tranche]={}\n              depositedTranches[protocol][tranche]=this.props.availableTranches[protocol][tranche];\n          }\n          else{\n            if(!remainingTranches[protocol]){\n              remainingTranches[protocol]={};\n            }\n            remainingTranches[protocol][tranche]={};\n            remainingTranches[protocol][tranche]=this.props.availableTranches[protocol][tranche];\n          }\n        })\n      })\n\n      const portfolioDonutData = Object.keys(tranchesTokens).map( token => {\n        const balanceValue = parseFloat(tranchesTokens[token].toFixed(4));\n        const tokenPercentage = tranchesTokens[token].div(portfolio.totalBalance).times(100);\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n        return {\n          id:token,\n          name:token,\n          label:token,\n          valueHoverProps:{\n            unit:'$',\n            unitPos:'left',\n            unitProps:{\n              mr:2,\n              fontWeight:4,\n              fontSize:[3,4]\n            }\n          },\n          valueHover:balanceValue,\n          value:Math.round(tokenPercentage),\n          description: `$ ${balanceValue} in ${token}`,\n          color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n          image:tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token.toUpperCase()}.svg`,\n        };\n      });\n\n      // Add Staking rewards to Portfolio Donut\n      Object.keys(portfolio.stakingRewards).forEach( token => {\n        const balanceValue = parseFloat(portfolio.stakingRewards[token].tokenAmountConverted.toFixed(4));\n        const tokenPercentage = portfolio.stakingRewards[token].tokenAmountConverted.div(portfolio.totalBalance).times(100);\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase()]);\n        const govTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',token]);\n        if (govTokenConfig.showBalance){\n          portfolioDonutData.push({\n            id:token,\n            name:token,\n            label:token,\n            valueHoverProps:{\n              unit:'$',\n              unitPos:'left',\n              unitProps:{\n                mr:2,\n                fontWeight:4,\n                fontSize:[3,4]\n              }\n            },\n            valueHover:balanceValue,\n            value:Math.round(tokenPercentage),\n            description: `$ ${balanceValue} in ${token}`,\n            color:'hsl('+tokenConfig.color.hsl.join(',')+')',\n            image:tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${token.toUpperCase()}.svg`,\n          });\n        }\n      });\n\n      const allocationChartData = Object.keys(tranchesBalances).map((trancheName,i)=>{\n        const trancheConfig = tranchesConfig[trancheName];\n        const balanceInfo = tranchesBalances[trancheName];\n        const weightValue = parseFloat(balanceInfo.weight.times(100).toFixed(2));\n        return {\n          id:trancheName,\n          name:trancheName,\n          value:weightValue,\n          label: trancheConfig.name,\n          color:'hsl('+trancheConfig.color.hsl.join(',')+')',\n          description: `$ ${balanceInfo.balance.toFixed(2)} in ${trancheConfig.name}`\n        };\n      });\n\n      // console.log('allocationChartData',allocationChartData,'portfolioDonutData',portfolioDonutData);\n      \n      const transactions = portfolio.transactions;\n      const userHasFunds = portfolio && this.functionsUtil.BNify(portfolio.totalBalance).gt(0);\n\n      // console.log('loadPortfolio - remainingTranches',remainingTranches);\n\n      this.setState({\n        portfolio,\n        userHasFunds,\n        transactions,\n        portfolioLoaded,\n        depositedTokens,\n        depositedTranches,\n        remainingTranches,\n        portfolioDonutData,\n        allocationChartData,\n      });\n    }\n  }\n\n  selectTrancheType(trancheRoute){\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`;\n    const tokenConfig = this.props.availableTranches[this.state.selectedProtocol] && this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] ? this.props.availableTranches[this.state.selectedProtocol][this.state.selectedToken] : null;\n    if (tokenConfig){\n      route += `/${this.state.selectedProtocol}/${this.state.selectedToken}`;\n    }\n    this.props.goToSection(route);\n  }\n  selectTrancheAndType(type,protocol,token){\n    let trancheRoute=null\n    if (type===\"AA\")\n     trancheRoute=\"senior\"\n    else\n       trancheRoute=\"junior\"\n    let route = `${this.props.selectedSection.route}/${trancheRoute}`\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if(tokenConfig){\n      route += `/${protocol}/${token}`;\n    }\n    this.props.goToSection(route);\n  }\n\n  selectTranche(protocol,token){\n    const tokenConfig = this.props.availableTranches[protocol] && this.props.availableTranches[protocol][token] ? this.props.availableTranches[protocol][token] : null;\n    if (tokenConfig){\n      let route = `${this.props.selectedSection.route}`;\n      if (this.state.trancheRoute){\n        route += `/${this.state.trancheRoute}`;\n      }\n      route += `/${protocol}/${token}`;\n\n      this.props.goToSection(route);\n    }\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setState({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  goBack(){\n    if (this.state.tokenConfig && this.state.trancheType){\n      if (!this.state.userHasFunds){\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n      } else {\n        this.props.goToSection(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n      }\n    }/* else if (this.state.trancheType){\n      this.props.goToSection(this.props.selectedSection.route);\n    } */else {\n      this.props.goToSection(this.props.selectedSection.route);\n    }\n  }\n\n  render() {\n\n    const pathLink = [];\n    const breadcrumbPath = [];\n    if (this.state.trancheType){\n      breadcrumbPath.push(this.functionsUtil.capitalize(this.state.trancheDetails.baseName));\n      if (this.state.tokenConfig){\n        if (!this.state.userHasFunds){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.trancheDetails.route);\n        } else if (this.state.tokenConfig){\n          pathLink.push(this.props.selectedSection.route+'/'+this.state.selectedProtocol+'/'+this.state.selectedToken);\n        }\n      }\n    }\n    if (this.state.selectedProtocol){\n      breadcrumbPath.push(this.functionsUtil.getGlobalConfig(['stats','protocols',this.state.selectedProtocol,'label']));\n    }\n    if (this.state.selectedToken){\n      breadcrumbPath.push(this.state.selectedToken);\n    }\n\n    return (\n      <Box\n        width={1}\n      >\n        {\n          breadcrumbPath.length>0 && (\n            <Flex\n              width={1}\n              mb={[2,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-start'}\n            >\n              <Flex\n                width={0.5}\n              >\n                <Breadcrumb\n                  {...this.props}\n                  text={'Tranches'}\n                  pathLink={pathLink}\n                  path={breadcrumbPath}\n                  isMobile={this.props.isMobile}\n                  handleClick={this.goBack.bind(this)}\n                />\n              </Flex>\n              <Flex\n                width={0.5}\n                justifyContent={'flex-end'}\n              >\n                \n              </Flex>\n            </Flex>\n          )\n        }\n        {\n          !this.state.componentLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                my:3,\n                minHeight:'60vh',\n                flexDirection:'column'\n              }}\n              text={'Loading Portfolio...'}\n            />\n          ) : this.state.tokenConfig ? (\n            <TranchePage\n              {...this.props}\n              portfolio={this.state.portfolio}\n              trancheType={this.state.trancheType}\n              tokenConfig={this.state.tokenConfig}\n              userHasFunds={this.state.userHasFunds}\n              selectedToken={this.state.selectedToken}\n              trancheDetails={this.state.trancheDetails}\n              loadPortfolio={this.loadPortfolio.bind(this)}\n              selectedProtocol={this.state.selectedProtocol}\n              availableTranches={this.props.availableTranches}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : !this.state.trancheType && !this.state.userHasFunds ? (\n            <TrancheWelcome\n              {...this.props}\n              selectTrancheType={this.selectTrancheType.bind(this)}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {this.state.useTrancheType ? (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Image\n                      mr={2}\n                      src={this.state.trancheDetails.image}\n                      size={this.props.isMobile ? '1.8em' : '2.2em'}\n                    />\n                    <Title\n                    >\n                      {this.functionsUtil.capitalize(this.state.trancheDetails.baseName)} Tranches\n                    </Title>\n                  </Flex>\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {this.functionsUtil.getGlobalConfig(['tranches',this.state.trancheType,'description','long'])}\n                    </Text>\n                  </Flex>\n                </Box>\n              ) : (\n                <Box\n                  width={1}\n                >\n                  <AssetsUnderManagement\n                    {...this.props}\n                    flexProps={{\n                      mb:[3,0]\n                    }}\n                    loaderAlign={'flex-end'}\n                    subtitle={'Total Value Locked on Tranches'}\n                    aggregatedStatsMethod={this.functionsUtil.getTrancheAggregatedStats}\n                  />\n                  <Title\n                    mb={3}\n                  >\n                    Perpetual Yield Tranches\n                  </Title>\n                </Box>\n              )}\n              {\n                this.state.portfolioLoaded && this.state.userHasFunds && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.portfolio.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-end'}\n                                    >\n                                      <Text\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                      </Text>\n                                    </Flex>\n                                    <Text\n                                      mx={1}\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      fontFamily={this.props.theme.fonts.counter}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    >|</Text>\n                                    <Flex\n                                      width={0.45}\n                                      alignItems={'center'}\n                                      justifyContent={'flex-start'}\n                                    >\n                                      <TotalEarningsCounter\n                                        {...this.props}\n                                        unit={'+$'}\n                                        decimals={5}\n                                        counterStyle={{\n                                          fontSize:14,\n                                          fontWeight:600,\n                                          color:this.props.theme.colors.transactions.status.completed\n                                        }}\n                                        portfolio={this.state.portfolio}\n                                      />\n                                    </Flex>\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                /*\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.allocationChartData ? (\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  id={'allocationChart'}\n                                  height={['55px','59px']}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <GenericPieChart\n                                    {...this.props}\n                                    inline={true}\n                                    showLoader={false}\n                                    tooltipFormat={v => v+'%'}\n                                    sliceLabel={d => d.value+'%'}\n                                    width={ this.props.isMobile ? 55 : 59 }\n                                    height={ this.props.isMobile ? 55 : 59 }\n                                    chartData={this.state.allocationChartData}\n                                  />\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Portfolio Distribution\n                              </Text>\n                              {\n                                /*\n                                <Tooltip\n                                  placement={'bottom'}\n                                  message={this.functionsUtil.getGlobalConfig(['messages','riskScoreShort'])}\n                                >\n                                  <Icon\n                                    ml={2}\n                                    name={\"Info\"}\n                                    size={'1em'}\n                                    color={'cellTitle'}\n                                  />\n                                </Tooltip>\n                                */\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      mb={3}\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <GenericPieChart\n                            {...this.props}\n                            showLegend={true}\n                            showLoader={false}\n                            legendProps={{\n                              itemWidth:80,\n                              itemsSpacing:8\n                            }}\n                            tooltipFormat={v => v+'%'}\n                            defaultLabel={'Total Funds'}\n                            sliceLabel={d => {\n                              if (parseFloat(d.value)>=5){\n                                return d.value+'%';\n                              } else {\n                                return null;\n                              }\n                            }}\n                            parentId={'portfolio-composition'}\n                            chartData={this.state.portfolioDonutData}\n                            defaultImage={this.props.selectedSection.image}\n                            defaultValue={`$ ${this.functionsUtil.formatMoney(parseFloat(this.state.portfolio.totalBalance),4)}`}\n                            margin={this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 }}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquityTranches\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              transactionsList={this.state.transactions}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                this.state.depositedTokens.length>0 && (\n                  <Flex\n                    width={1}\n                    mb={[3,4]}\n                    id={\"migrate-assets\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Deposited Tranches\n                      </Heading.h4>\n                    </Flex>\n                    <TranchesList\n                      enabledProtocols={[]}\n                      trancheType={this.state.trancheType}\n                      handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                      colsProps={{\n                        fontSize:['10px','14px'],\n                      }}\n                      cols={[\n                        {\n                          title:'PROTOCOL', \n                          props:{\n                            width:[0.34, this.state.useTrancheType ? 0.15 : 0.13]\n                          },\n                          fields:[\n                            {\n                              name:'protocolIcon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              name:'protocolName'\n                            },\n                            {\n                              mobile:false,\n                              name:'experimentalBadge',\n                              props:{\n                                ml:1,\n                                height:'1.5em'\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.15, 0.13],\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        \n                        /*\n                        {\n                          title:'TYPE',\n                          props:{\n                            width:[0.29,0.13],\n                          },\n                          fields:[\n                            {\n                              name:'trancheTypeIcon',\n                              props:{\n                                flexProps:{\n                                  mr:2\n                                },\n                                size:'1.4em'\n                              }\n                            },\n                            {\n                              name:'trancheType'\n                            }\n                          ],\n                          visible:this.state.useTrancheType\n                        },\n                        */\n                        {\n                          title:'POOL',\n                          props:{\n                            width:[0.25, this.state.useTrancheType ? 0.1 : 0.09],\n                          },\n                          fields:[\n                            {\n                              name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}PoolNoLabel` : 'pool',\n                              props:{\n                                minPrecision:1,\n                                decimals:this.props.isMobile ? 0 : 2,\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                          visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                          props:{\n                            width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                          },\n                          parentProps:{\n                            flexDirection:'column',\n                            alignItems:'flex-start',\n                          },\n                          fields:[\n                            {\n                              name:'seniorApy',\n                              showTooltip:true\n                            },\n                          ],\n                        },\n                        {\n                          title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                          visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                          props:{\n                            width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                          },\n                          parentProps:{\n                            flexDirection:'column',\n                            alignItems:'flex-start',\n                          },\n                          fields:[\n                            {\n                              name:'juniorApy',\n                              props:{\n                                flexProps:{\n                                  mr:3\n                                }\n                              },\n                              showTooltip:true\n                            },\n                          ],\n                        },\n                        {\n                          mobile:false,\n                          title:'APR RATIO',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','aprRatio']),\n                          props:{\n                            width:[0.15, 0.1],\n                          },\n                          fields:[\n                            {\n                              name:'trancheAPRSplitRatio',\n                              props:{\n                                flexProps:{\n                                  mr:2\n                                },\n                                height:['1.4em','2em']\n                              }\n                            },\n                            \n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'AUTO-COMPOUNDING',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','autoFarming']),\n                          props:{\n                            width:[0.25,0.17],\n                          },\n                          fields:[\n                            {\n                              name:'autoFarming'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STAKING REWARDS',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','stakingRewards']),\n                          props:{\n                            width:[0.25,this.state.useTrancheType ? 0.15 : 0.13],\n                          },\n                          fields:[\n                            {\n                              name:'stakingRewards'\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:true,\n                          title:'TOKENS',\n                          props:{\n                            width:[0.16,0.17],\n                          },\n                          fields:[\n                            {\n                              name:'govTokens'\n                            }\n                          ]\n                        },\n                        */\n                        {\n                          title:'',\n                          mobile:false,\n                          props:{\n                            width:[0.29, 0.15],\n                          },\n                          parentProps:{\n                            width:1\n                          },\n                          fields:[\n                            {\n                              name:'button',\n                              label: 'Manage',\n                              props:{\n                                width:1,\n                                fontSize:3,\n                                fontWeight:3,\n                                height:'45px',\n                                borderRadius:4,\n                                boxShadow:null,\n                                mainColor:'redeem',\n                                size: this.props.isMobile ? 'small' : 'medium',\n                                handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                              }\n                            }\n                          ]\n                        }\n                      ]}\n                      {...this.props}\n                      availableTranches={this.state.depositedTranches}\n                    />\n                  </Flex>\n                )\n              }\n              {(Object.keys(this.state.remainingTranches).length>0 || !this.props.account) && (\n                <Flex\n                  width={1}\n                  mb={[3,4]}\n                  id={\"migrate-assets\"}\n                  flexDirection={'column'}\n                >\n                  <Flex\n                    pb={2}\n                    width={1}\n                    mb={[2,3]}\n                    borderColor={'divider'}\n                    borderBottom={'1px solid transparent'}\n                  >\n                    <Heading.h4\n                      fontSize={[2,4]}\n                      fontWeight={[3,4]}\n                    >\n                      Available Tranches\n                    </Heading.h4>\n                  </Flex>\n                  <TranchesList\n                    enabledProtocols={[]}\n                    trancheType={this.state.trancheType}\n                    handleClick={(props) => this.selectTranche(props.protocol,props.token)}\n                    colsProps={{\n                      fontSize:['10px','14px'],\n                    }}\n                    cols={[\n                      {\n                        title:'PROTOCOL', \n                        props:{\n                          width:[0.34, this.state.useTrancheType ? 0.15 : 0.13]\n                        },\n                        fields:[\n                          {\n                            name:'protocolIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          },\n                          {\n                            name:'protocolName'\n                          },\n                          {\n                            mobile:false,\n                            name:'experimentalBadge',\n                            props:{\n                              ml:1,\n                              height:'1.5em'\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        title:'TOKEN',\n                        props:{\n                          width:[0.15, 0.13],\n                        },\n                        fields:[\n                          {\n                            name:'tokenIcon',\n                            props:{\n                              mr:2,\n                              height:['1.4em','2em']\n                            }\n                          },\n                          {\n                            mobile:false,\n                            name:'tokenName'\n                          }\n                        ]\n                      },\n                      \n                      /*\n                      {\n                        title:'TYPE',\n                        props:{\n                          width:[0.29,0.13],\n                        },\n                        fields:[\n                          {\n                            name:'trancheTypeIcon',\n                            props:{\n                              flexProps:{\n                                mr:2\n                              },\n                              size:'1.4em'\n                            }\n                          },\n                          {\n                            name:'trancheType'\n                          }\n                        ],\n                        visible:this.state.useTrancheType\n                      },\n                      */\n                      {\n                        title:'POOL',\n                        props:{\n                          width:[0.25, this.state.useTrancheType ? 0.1 : 0.09],\n                        },\n                        fields:[\n                          {\n                            name:this.state.useTrancheType ? `${this.state.trancheDetails.baseName}PoolNoLabel` : 'pool',\n                            props:{\n                              minPrecision:1,\n                              decimals:this.props.isMobile ? 0 : 2,\n                            }\n                          }\n                        ]\n                      },\n                      {\n                        title:this.state.useTrancheType ? 'APY' : 'SENIOR APY',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                        visible:!this.state.useTrancheType || this.state.trancheType === 'AA',\n                        props:{\n                          width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                        },\n                        parentProps:{\n                          flexDirection:'column',\n                          alignItems:'flex-start',\n                        },\n                        fields:[\n                          {\n                            name:'seniorApy',\n                            showTooltip:true\n                          },\n                        ],\n                      },\n                      {\n                        title:this.state.useTrancheType ? 'APY' : 'JUNIOR APY',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','apyTranches']),\n                        visible:!this.state.useTrancheType || this.state.trancheType === 'BB',\n                        props:{\n                          width:[this.state.useTrancheType ? 0.16 : 0.27,this.state.useTrancheType ? 0.09 : 0.11],\n                        },\n                        parentProps:{\n                          flexDirection:'column',\n                          alignItems:'flex-start',\n                        },\n                        fields:[\n                          {\n                            name:'juniorApy',\n                            props:{\n                              flexProps:{\n                                mr:3\n                              }\n                            },\n                            showTooltip:true\n                          },\n                        ],\n                      },\n                      {\n                        mobile:false,\n                        title:'APR RATIO',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','aprRatio']),\n                        props:{\n                          width:[0.15, 0.1],\n                        },\n                        fields:[\n                          {\n                            name:'trancheAPRSplitRatio',\n                            props:{\n                              flexProps:{\n                                mr:2\n                              },\n                              height:['1.4em','2em']\n                            }\n                          },\n                          \n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'AUTO-COMPOUNDING',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','autoFarming']),\n                        props:{\n                          width:[0.25,0.17],\n                        },\n                        fields:[\n                          {\n                            name:'autoFarming'\n                          }\n                        ]\n                      },\n                      {\n                        mobile:false,\n                        title:'STAKING REWARDS',\n                        desc:this.functionsUtil.getGlobalConfig(['messages','stakingRewards']),\n                        props:{\n                          width:[0.25,this.state.useTrancheType ? 0.15 : 0.13],\n                        },\n                        fields:[\n                          {\n                            name:'stakingRewards'\n                          }\n                        ]\n                      },\n                      /*\n                      {\n                        mobile:true,\n                        title:'TOKENS',\n                        props:{\n                          width:[0.16,0.17],\n                        },\n                        fields:[\n                          {\n                            name:'govTokens'\n                          }\n                        ]\n                      },\n                      */\n                      {\n                        title:'',\n                        mobile:false,\n                        props:{\n                          width:[0.29, 0.15],\n                        },\n                        parentProps:{\n                          width:1\n                        },\n                        fields:[\n                          {\n                            name:'button',\n                            label: 'Deposit',\n                            props:{\n                              width:1,\n                              fontSize:3,\n                              fontWeight:3,\n                              height:'45px',\n                              borderRadius:4,\n                              boxShadow:null,\n                              mainColor:'deposit',\n                              size: this.props.isMobile ? 'small' : 'medium',\n                              handleClick:(props) => this.selectTranche(props.protocol,props.token)\n                            }\n                          }\n                        ]\n                      }\n                    ]}\n                    {...this.props}\n                    availableTranches={this.props.account?this.state.remainingTranches:this.props.availableTranches}\n\n                  />\n                </Flex>\n              )\n              }\n              {\n                this.props.account && this.state.userHasFunds && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title mb={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                      transactionsList={this.state.transactions}\n                      availableActions={this.state.transactions.reduce( (availableActions,t) => {\n                        availableActions[t.action.toLowerCase()] = t.action;\n                        return availableActions;\n                      },{})}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.13,0.18]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.12,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.27,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.16],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:[0.23,0.11],\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'PROTOCOL',\n                          props:{\n                            width:[0.21, 0.14],\n                          },\n                          fields:[\n                            {\n                              type:'image',\n                              name:'custom',\n                              path:['protocolIcon'],\n                              props:{\n                                mr:2,\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              type:'text',\n                              mobile:false,\n                              name:'custom',\n                              path:['protocol']\n                            }\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.16,0.14],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','2em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default Tranches;\n","import React, { Component } from 'react';\nimport { Flex, Box, Text, Button } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\n\nclass TokenSwap extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async loadKyberWidget(){\n\n    if (!this.state.selectedFromToken || !this.state.selectedDestToken){\n      return false;\n    }\n\n    const provider = 'kyberSwap';\n    const providerInfo = this.functionsUtil.getGlobalConfig(['payments','providers',provider]);\n    if (providerInfo.enabled && providerInfo.remoteResources){\n\n      const globalConfigs = this.functionsUtil.getGlobalConfigs();\n      const remoteResources = providerInfo.remoteResources;\n\n      Object.keys(remoteResources).forEach((url,j) => {\n\n        const resourceType = url.split('.').pop().toLowerCase();\n\n        switch (resourceType){\n          case 'js':\n            const scriptID = `script_${provider}_${j}_${this.state.selectedFromToken}_${this.state.selectedDestToken}`;\n\n            if (!document.getElementById(scriptID)){\n              const script = document.createElement(\"script\");\n              const remoteResourceParams = remoteResources[url];\n              const callback = remoteResourceParams && remoteResourceParams.callback ? remoteResourceParams.callback : null;\n              const precall = remoteResourceParams && remoteResourceParams.precall ? remoteResourceParams.precall : null;\n\n              if (precall && typeof precall === 'function'){\n                const precallProps = {\n                  baseToken:this.state.selectedFromToken,\n                  selectedToken:this.state.selectedDestToken,\n                  buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n                };\n                precall(precallProps,globalConfigs,providerInfo);\n              }\n\n              if (callback && typeof callback === 'function'){\n                if (script.readyState) {  // only required for IE <9\n                  script.onreadystatechange = function() {\n                    if ( script.readyState === 'loaded' || script.readyState === 'complete' ) {\n                      script.onreadystatechange = null;\n                      callback();\n                    }\n                  };\n                } else {  //Others\n                  script.onload = callback;\n                }\n              }\n\n              script.id = scriptID;\n              script.className = `script_${provider}`;\n              script.src = url;\n              script.async = true;\n\n              if (remoteResourceParams && remoteResourceParams.parentElement){\n                remoteResourceParams.parentElement.appendChild(script)\n              } else {\n                document.head.appendChild(script);\n              }\n            }\n          break;\n          case 'css':\n            const stylesheetId = `stylesheet_${provider}_${j}`;\n\n            if (!document.getElementById(stylesheetId)){\n              const style = document.createElement(\"link\");\n\n              style.id = stylesheetId;\n              style.rel = 'stylesheet';\n              style.href = url;\n\n              document.head.appendChild(style);\n            }\n          break;\n          default:\n          break;\n        }\n      });\n    }\n\n    this.setState({\n      providerInfo\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const fromTokenChanged = prevState.selectedFromToken !== this.state.selectedFromToken;\n    const destTokenChanged = prevState.selectedDestToken !== this.state.selectedDestToken;\n    if ((fromTokenChanged ||  destTokenChanged) && this.state.selectedFromToken && this.state.selectedDestToken){\n      this.loadKyberWidget();\n    }\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n    const supportedTokens = this.functionsUtil.getGlobalConfig(['payments','providers','kyberSwap','supportedTokens']);\n\n    supportedTokens.forEach( token => {\n      if (token !== selectedFromToken){\n        if (!selectedDestToken){\n          selectedDestToken = token;\n        }\n        availableDestinationTokens[token] = {\n          token\n        };\n      }\n    });\n\n    const baseToken = this.functionsUtil.getGlobalConfig(['baseToken']);\n    if (baseToken !== selectedFromToken){\n      availableDestinationTokens[baseToken] = {\n        token:baseToken\n      };\n    }\n\n    this.setState({\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n    this.setState({\n      selectedDestToken\n    });\n  }\n\n  swap = () => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    const paymentProvider = this.state.providerInfo;\n    const initProps = {\n      baseToken:this.state.selectedFromToken,\n      selectedToken:this.state.selectedDestToken,\n      buttonId:`kyber-swapper-${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    };\n    const initParams = paymentProvider && paymentProvider.getInitParams ? paymentProvider.getInitParams(initProps,globalConfigs) : null;\n\n    // Render the Payment Provider\n    if (typeof paymentProvider.render === 'function'){\n      paymentProvider.render(initParams,null,initProps);\n    }\n\n    // Send GA event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Tools',\n      eventAction: 'TokenSwap',\n      eventLabel: `${this.state.selectedFromToken}_${this.state.selectedDestToken}`\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to swap:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              showBalance={false}\n              isSearchable={true}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  showBalance={false}\n                  isSearchable={true}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <Button\n              my={2}\n              mx={[0, 2]}\n              size={'medium'}\n              borderRadius={4}\n              mainColor={'blue'}\n              onClick={ e => this.swap(e) }\n              disabled={ !this.state.selectedFromToken || !this.state.selectedDestToken }\n            >\n              SWAP TOKENS\n            </Button>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenSwap;\n","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass LpStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    infoBox:null,\n    globalStats:[],\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    programEnded:false,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    accountingData:null,\n    programEndDate:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Stake'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || contractApprovedChanged || tokenConfigChanged){\n      this.setState({\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n    let infoBox = null;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      inputValue = this.functionsUtil.BNify(inputValue);\n      switch (this.state.selectedAction){\n        case 'Stake':\n          const userStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals).plus(inputValue);\n          const totalStakedBalance = this.functionsUtil.fixTokenDecimals(this.state.totalStakingShares,this.props.contractInfo.decimals).plus(inputValue);\n          const userTotalStakingShare = userStakedBalance.div(totalStakedBalance);\n          const rewardsPerDay = this.state.distributionSpeed.times(86400).times(userTotalStakingShare);//.times(this.state.distributionSpeedMultiplier);\n\n          const stakedBalanceUSD = userStakedBalance.times(this.state.poolTokenPrice);\n          const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n          const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n          // console.log(parseFloat(userStakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n          infoBox = {\n            icon:'FileDownload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By staking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${rewardsPerDay.toFixed(4)} ${this.props.contractInfo.rewardToken} / day</strong> with an average APY of <strong>${apy.toFixed(2)}%</strong><br /><small style=\"color:#ff9900\">assuming you have achieved the maximum reward multiplier</small>`\n          };\n        break;\n        case 'Withdraw':\n          const normalizedInputValue = this.functionsUtil.normalizeTokenAmount(inputValue,this.props.tokenConfig.decimals);\n          let unstakeRewards = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[normalizedInputValue],{from:this.props.account});\n          unstakeRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(unstakeRewards,this.props.tokenConfig.decimals));\n          infoBox = {\n            icon:'FileUpload',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`By unstaking <strong>${inputValue.toFixed(4)} ${this.props.tokenConfig.token}</strong> you will get <strong>${unstakeRewards} ${this.props.contractInfo.rewardToken}</strong>`\n          };\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'wrapAndStake';\n        methodParams = [amount];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  getPermitTransactionParams(amount,signedParameters){\n    let methodName = null;\n    let methodParams = [];\n    const { expiry, r, s, v } = signedParameters;\n    amount = this.functionsUtil.toBN(amount);\n    switch (this.state.selectedAction){\n      case 'Stake':\n        methodName = 'permitWrapAndStakeUnlimited';\n        methodParams = [amount, expiry, v, r, s];\n      break;\n      case 'Withdraw':\n        methodName = 'unstakeAndUnwrap';\n        methodParams = [amount];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n    const stats = [];\n\n    const [\n      totalLocked,\n      totalUnlocked,\n      totalStakingShares,\n      unlockScheduleCount,\n      accountingData,\n      collectedRewards\n    ] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalLocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalUnlocked'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakingShares'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockScheduleCount'),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'updateAccounting',[],{from:this.props.account}),\n      this.state.stakedBalance.gt(0) ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unstakeQuery',[this.functionsUtil.integerValue(this.state.stakedBalance)],{from:this.props.account}) : this.functionsUtil.BNify(0)\n    ]);\n\n    const unlockSchedulesPromises = [];\n    for (let i = 0; i < unlockScheduleCount ; i++){\n      unlockSchedulesPromises.push(this.functionsUtil.genericContractCall(this.props.contractInfo.name,'unlockSchedules',[i]));\n    }\n\n    const unlockSchedules = await Promise.all(unlockSchedulesPromises);\n\n    const totalRewards = this.functionsUtil.fixTokenDecimals(this.functionsUtil.BNify(totalLocked).plus(this.functionsUtil.BNify(totalUnlocked)),this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Total Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(totalRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const totalDeposits = this.functionsUtil.fixTokenDecimals(totalStakingShares,this.props.contractInfo.decimals);\n    stats.push({\n      title:'Total Deposits',\n      value:this.functionsUtil.formatMoney(parseFloat(totalDeposits))+' '+this.props.tokenConfig.token\n    });\n\n    const lockedRewards = this.functionsUtil.fixTokenDecimals(totalLocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Locked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(lockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const unlockedRewards = this.functionsUtil.fixTokenDecimals(totalUnlocked,this.props.tokenConfig.decimals);\n    stats.push({\n      title:'Unlocked Rewards',\n      value:this.functionsUtil.formatMoney(parseFloat(unlockedRewards))+' '+this.props.contractInfo.rewardToken\n    });\n\n    const programEndTime = unlockSchedules.length>0 ? unlockSchedules.reduce( (endTime,s) => {\n      endTime = Math.max(s.endAtSec,endTime);\n      return endTime;\n    },0) : null;\n\n    const programEndDate = programEndTime ? `${this.functionsUtil.strToMoment(programEndTime*1000).utc().format('DD MMM, YYYY @ HH:mm')} UTC` : 'None';\n    stats.push({\n      title:'Program End-Date',\n      value:programEndDate\n    });\n\n    const programEnded = programEndTime && programEndTime*1000<=Date.now();\n\n    const distributionSpeed = unlockSchedules.reduce( (distributionSpeed,s) => {\n      if (this.functionsUtil.BNify(s.initialLockedShares).gt(0) && this.functionsUtil.BNify(s.durationSec).gt(0)){\n        const tokensPerSecond = this.functionsUtil.fixTokenDecimals(s.initialLockedShares,this.props.contractInfo.decimals).div(s.durationSec);\n        if (!tokensPerSecond.isNaN()){\n          distributionSpeed = distributionSpeed.plus(tokensPerSecond);\n        }\n      }\n      return distributionSpeed;\n    },this.functionsUtil.BNify(0));\n\n    stats.push({\n      title:'Reward unlock rate',\n      value:this.functionsUtil.formatMoney(distributionSpeed.times(86400))+' '+this.props.contractInfo.rewardToken+' / day'\n    });\n\n    const globalStats = [];\n\n    const stakedBalance = this.functionsUtil.fixTokenDecimals(this.state.stakedBalance,this.props.tokenConfig.decimals);\n    const stakingShare = stakedBalance.div(totalDeposits); // accountingData && accountingData[2] && this.functionsUtil.BNify(accountingData[3]).gt(0) ? this.functionsUtil.BNify(accountingData[2]).div(this.functionsUtil.BNify(accountingData[3])) : this.functionsUtil.BNify(0);\n\n    const rewardMultiplier = accountingData && this.functionsUtil.BNify(accountingData[4]).gt(0) ? this.functionsUtil.BNify(Math.max(1,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)))) : this.functionsUtil.BNify(1);\n\n    const distributionSpeedMultiplier = this.functionsUtil.BNify(1).div(this.props.contractInfo.maxMultiplier).times(rewardMultiplier);\n    const userDistributionSpeed = distributionSpeed.times(stakingShare).times(distributionSpeedMultiplier);\n    const rewardsPerDay = userDistributionSpeed.times(86400);\n\n    // console.log(parseFloat(this.functionsUtil.BNify(collectedRewards)),parseFloat(this.functionsUtil.BNify(accountingData[4])),this.props.contractInfo.maxMultiplier,parseFloat(this.functionsUtil.BNify(collectedRewards).div(this.functionsUtil.BNify(accountingData[4])).times(this.props.contractInfo.maxMultiplier)),parseFloat(rewardMultiplier));\n\n    // globalStats.push({\n    //   title:'Distribution rate',\n    //   description:'Your daily rewards distribution based on your current multiplier',\n    //   value:this.functionsUtil.formatMoney(rewardsPerDay)+' '+this.props.contractInfo.rewardToken+' / day',\n    // });\n\n    const stakedBalanceUSD = stakedBalance.times(this.state.poolTokenPrice);\n    const rewardsPerYearUSD = rewardsPerDay.times(365).times(this.state.rewardTokenPrice);\n    const apy = stakedBalanceUSD.gt(0) ? rewardsPerYearUSD.div(stakedBalanceUSD).times(100) : this.functionsUtil.BNify(0);\n\n    // console.log(parseFloat(this.state.stakedBalance),parseFloat(this.state.poolTokenPrice),parseFloat(stakedBalanceUSD),parseFloat(rewardsPerDay),parseFloat(this.state.rewardTokenPrice),parseFloat(rewardsPerYearUSD),parseFloat(apy));\n\n    globalStats.push({\n      title:'APY',\n      value:`${apy.toFixed(2)}%`,\n      description:'Annualized rewards based on your current multiplier',\n    });\n\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:'Multiplier',\n      value:`${rewardMultiplier.toFixed(2)}x`,\n      description:`Deposit liquidity tokens for ${this.props.contractInfo.maxBonusDays} days to achieve a ${this.props.contractInfo.maxMultiplier}x reward multiplier`\n    });\n\n    const currentRewards = this.functionsUtil.formatMoney(this.functionsUtil.fixTokenDecimals(collectedRewards,this.props.tokenConfig.decimals));\n    globalStats.push({\n      title:'Rewards',\n      value:currentRewards+' '+this.props.contractInfo.rewardToken,\n      description:'Your share of the total unlocked reward pool. Larger your deposit and for longer, higher your share'\n    });\n\n    // console.log('loadStats',stats,globalStats);\n\n    const statsLoaded = true;\n\n    this.setState({\n      stats,\n      statsLoaded,\n      globalStats,\n      stakingShare,\n      programEnded,\n      totalRewards,\n      programEndDate,\n      accountingData,\n      rewardMultiplier,\n      distributionSpeed,\n      totalStakingShares,\n      userDistributionSpeed,\n      distributionSpeedMultiplier\n    });\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    switch (this.state.selectedAction){\n      case 'Stake':\n        const stakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const stakedTokens = stakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(stakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully staked <strong>${stakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        const rewardTokenConfig = {\n          address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n        };\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong> and received <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n\n    const DAITokenConfig = {\n      address:this.functionsUtil.getContractByName('DAI')._address\n    };\n    const rewardTokenConfig = {\n      address:this.functionsUtil.getContractByName(this.props.contractInfo.rewardToken)._address\n    };\n\n    const [\n      poolTokenPrice,\n      rewardTokenPrice,\n      tokenBalance,\n      stakedBalance,\n    ] = await Promise.all([\n      this.functionsUtil.getSushiswapPoolTokenPrice(this.props.selectedToken),\n      this.functionsUtil.getSushiswapConversionRate(DAITokenConfig,rewardTokenConfig),\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'totalStakedFor',[this.props.account]),\n    ]);\n\n    newState.balanceProp = this.functionsUtil.BNify(0);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n    newState.stakedBalance = !this.functionsUtil.BNify(stakedBalance).isNaN() ? this.functionsUtil.BNify(stakedBalance) : this.functionsUtil.BNify(0);\n    newState.poolTokenPrice = !this.functionsUtil.BNify(poolTokenPrice).isNaN() ? this.functionsUtil.BNify(poolTokenPrice) : this.functionsUtil.BNify(0);\n    newState.rewardTokenPrice = !this.functionsUtil.BNify(rewardTokenPrice).isNaN() ? this.functionsUtil.BNify(rewardTokenPrice) : this.functionsUtil.BNify(0);\n\n    switch (this.state.selectedAction){\n      case 'Stake':\n        newState.permitEnabled = true;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = 'Approve the Staking contract to stake your LP tokens';\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n        newState.tokenWrapperProps = {\n          startContract:{\n            name:'ETH',\n            token:'ETH',\n            decimals:18,\n            wrapMethod:'deposit',\n          },\n          destContract:{\n            unwrapMethod:'withdraw',\n            ...this.props.tokenConfig\n          },\n        };\n      break;\n      default:\n      break;\n    }\n\n    if (newState.balanceProp.lte(0)){\n      newState.showTokenWrapperEnabled = true;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const StatsCard = props => {\n      const cardProps = {\n        p:3,\n        mb:2,\n        width:'49%',\n        ...props.cardProps\n      };\n      return (\n        <DashboardCard\n          title={props.title}\n          cardProps={cardProps}\n          titleProps={{\n            fontSize:1,\n            fontWeight:3,\n          }}\n          titleParentProps={{\n            mt:0,\n            ml:0\n          }}\n          description={props.description}\n        >\n          <Text\n            mt={1}\n            fontSize={[2,3]}\n            color={'statValue'}\n            {...props.textProps}\n          >\n            {props.value}\n          </Text>\n        </DashboardCard>\n      );\n    };\n\n    const isStake = this.state.selectedAction === 'Stake';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isStats = this.state.selectedAction === 'Stats';\n    const txAction = this.state.selectedAction;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Pool link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              width={1}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCard\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:[2,0],\n                      mr:[0,index<this.state.globalStats.length-1 ? 1 : 0],\n                      width:[1,'100%']\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stake'}\n                imageSrc={'images/mint.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'stake LP Tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStake}\n                handleClick={ e => this.setAction('Stake') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isUnstake ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Withdraw'}\n                imageSrc={'images/upload.svg'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isUnstake}\n                handleClick={ e => this.setAction('Withdraw') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                // subcaption={'view some stats'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              (isStake || isUnstake) ?\n                isStake && this.state.programEnded ? (\n                  <DashboardCard\n                    cardProps={{\n                      p:3,\n                      mt:1\n                    }}\n                  >\n                    <Flex\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                    >\n                      <Icon\n                        name={'Warning'}\n                        color={'cellText'}\n                        size={this.props.isMobile ? '1.8em' : '2.3em'}\n                      />\n                      <Text\n                        mt={1}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'center'}\n                      >\n                        The {this.props.selectedToken} staking program ended on {this.state.programEndDate}.\n                      </Text>\n                    </Flex>\n                  </DashboardCard>\n                ) : (this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo ? (\n                  <Box\n                    mt={1}\n                    width={1}\n                    mb={[4,3]}\n                  >\n                    <SendTxWithBalance\n                      error={null}\n                      {...this.props}\n                      action={txAction}\n                      steps={this.state.steps}\n                      infoBox={this.state.infoBox}\n                      tokenConfig={this.props.tokenConfig}\n                      tokenBalance={this.state.balanceProp}\n                      contractInfo={this.props.contractInfo}\n                      permitEnabled={this.state.permitEnabled}\n                      approveEnabled={this.state.approveEnabled}\n                      callback={this.transactionSucceeded.bind(this)}\n                      approveDescription={this.state.approveDescription}\n                      contractApproved={this.contractApproved.bind(this)}\n                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                      changeInputCallback={this.changeInputCallback.bind(this)}\n                      getTransactionParams={this.getTransactionParams.bind(this)}\n                      getPermitTransactionParams={this.getPermitTransactionParams.bind(this)}\n                    >\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'MoneyOff'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              isStake ? (\n                                `You don't have any ${this.props.selectedToken} in your wallet.`\n                              ) : isUnstake && (\n                                `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                              )\n                            }\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    </SendTxWithBalance>\n                  </Box>\n                ) : (\n                  <Flex\n                    mt={3}\n                    mb={3}\n                    width={1}\n                  >\n                    <FlexLoader\n                      flexProps={{\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'30px'\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading info...'}\n                    />\n                  </Flex>\n                )\n              ) : isStats && (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCard\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default LpStaking;","import { Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass Base extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    const cardProps = {\n      p:3,\n      mb:2,\n      width:'49%',\n      ...this.props.cardProps\n    };\n\n    return (\n      <DashboardCard\n        cardProps={cardProps}\n        title={this.props.title}\n        titleProps={{\n          fontSize:1,\n          fontWeight:3,\n        }}\n        titleParentProps={{\n          mt:0,\n          ml:0\n        }}\n        description={this.props.description}\n      >\n        {\n          this.props.value ? (\n            <Text\n              mt={1}\n              fontSize={[2,3]}\n              color={'statValue'}\n              {...this.props.textProps}\n            >\n              {this.props.value}\n            </Text>\n          ) : (this.props.children || null)\n        }\n      </DashboardCard>\n    );\n  }\n}\n\nexport default Base;\n","import React, { Component } from 'react';\nimport { Text, Flex, Button, Icon } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass IdleStakingDisapprove extends Component {\n\n  state = {\n    disapproveAllowance:false,\n    transactionSucceeded:false\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const requiredNetworkChanged = JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required);\n    const accountInizialized = this.props.accountInizialized && prevProps.accountInizialized !== this.props.accountInizialized;\n    const contractsInitialized = this.props.contractsInitialized && prevProps.contractsInitialized !== this.props.contractsInitialized;\n    if (requiredNetworkChanged || accountChanged || accountInizialized || contractsInitialized){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n\n    if (!this.props.account || !this.props.contractsInitialized) {\n      return false;\n    }\n\n    const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    const stkIdleConfig = this.functionsUtil.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','contract']);\n\n    await Promise.all([\n      this.props.initContract(stkIdleConfig.name,stkIdleConfig.address,stkIdleConfig.abi)\n    ]);\n\n    let [\n      stkIdleBalance,\n      idleBalance,\n      idleAllowance\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(stkIdleConfig.name,this.props.account),\n      this.functionsUtil.getTokenBalance(governanceTokenName,this.props.account),\n      this.functionsUtil.getAllowance(governanceTokenName,stkIdleConfig.address,this.props.account),\n    ]);\n\n    idleBalance = this.functionsUtil.BNify(idleBalance);\n    stkIdleBalance = this.functionsUtil.BNify(stkIdleBalance);\n    const disapproveAllowance = idleBalance.gt(0) && this.functionsUtil.BNify(idleAllowance).gt(idleBalance) && stkIdleBalance.gt(0);\n\n    return this.setState({\n      disapproveAllowance\n    });\n  }\n\n  async transactionSucceeded(tx){\n    this.setState({\n      transactionSucceeded:true\n    });\n  }\n\n  render() {\n    const viewOnly = this.props.connectorName === 'custom';\n    const stkIdleConfig = this.functionsUtil.getGlobalConfig(['tools','stake','props','availableTokens','IDLE','contract']);\n    return !viewOnly && (this.state.disapproveAllowance || this.state.transactionSucceeded) ? (\n      <Flex\n        p={2}\n        my={2}\n        width={1}\n        border={2}\n        borderRadius={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'cardBgHover'}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          {\n            this.state.transactionSucceeded ? (\n              <Icon\n                size={'1.8em'}\n                name={'DoneAll'}\n                color={this.props.theme.colors.transactions.status.completed}\n              />\n            ) : (\n              <Icon\n                size={'1.8em'}\n                name={'Warning'}\n                color={'#f6851a'}\n              />\n            )\n          }\n          <Text\n            mb={1}\n            fontWeight={500}\n            fontSize={'15px'}\n            color={'flashColor'}\n            textAlign={'center'}\n          >\n            {\n              this.state.transactionSucceeded ?\n                'You have succesfully reduced the allowance for the staking contract.'\n              :\n                'You approved the staking contract to spend an amount of IDLE greater then your IDLE balance. It\\'s advised to reduce the allowance for security reasons.'\n            }\n          </Text>\n          {\n            !this.state.transactionSucceeded && (\n              <ExecuteTransaction\n                {...this.props}\n                Component={Button}\n                parentProps={{\n                  width:1,\n                  alignItems:'center',\n                  justifyContent:'center'\n                }}\n                componentProps={{\n                  fontWeight:3,\n                  size:'small',\n                  width:'auto',\n                  style:{\n                    fontSize:'14px',\n                  },\n                  mainColor:'blue',\n                  value:'Reduce allowance',\n                }}\n                contractName={'IDLE'}\n                methodName={'approve'}\n                action={'Reduce allowance'}\n                callback={this.transactionSucceeded.bind(this)}\n                params={[stkIdleConfig.address,this.props.web3.utils.toTwosComplement('0')]}\n              />\n            )\n          }\n        </Flex>\n      </Flex>\n    ) : null;\n  }\n}\n\nexport default IdleStakingDisapprove;\n","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport ConnectBox from '../ConnectBox/ConnectBox';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport StatsCardSmall from '../StatsCardSmall/StatsCardSmall';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport { Flex, Box, Text, Icon, Input, Button } from \"rimble-ui\";\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport IdleStakingDisapprove from \"../IdleStakingDisapprove/IdleStakingDisapprove\";\n\nclass IdleStaking extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    maxApr:null,\n    infoBox:null,\n    globalStats:[],\n    lockPeriods:[\n      {\n        value:14,\n        type:'day',\n        label:'2 weeks'\n      },\n      {\n        value:1,\n        type:'month',\n        label:'1 month'\n      },\n      {\n        value:1,\n        type:'year',\n        label:'1 year'\n      },\n      {\n        value:4,\n        type:'year',\n        label:'4 years'\n      },\n    ],\n    lockedEnd:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    maxTime:126144000,// 4 * 365 * 86400  # 4 years\n    lockExpired:false,\n    statsLoaded:false,\n    tokenBalance:null,\n    contractInfo:null,\n    stakedBalance:null,\n    selectedToken:null,\n    rewardMultiplier:1,\n    claimedRewards:null,\n    accountingData:null,\n    increaseAction:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    poolTokenPrice:null,\n    lockPeriodInput:null,\n    buttonDisabled:false,\n    internalInfoBox:null,\n    availableTokens:null,\n    approveEnabled:false,\n    rewardTokenPrice:null,\n    contractApproved:false,\n    tokenWrapperProps:null,\n    distributionSpeed:null,\n    distributedRewards:null,\n    selectedLockPeriod:null,\n    approveDescription:null,\n    approveMaxAllowance:null,\n    balanceSelectorInfo:null,\n    lockPeriodTimestamp:null,\n    transactionSucceeded:false,\n    showTokenWrapperEnabled:false,\n    lockEndDateIsMaxEndDate:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.setState({\n      selectedAction:'Lock'\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidMount(){\n    const feeDistributorConfig = this.props.tokenConfig.feeDistributor;\n    await this.props.initContract(feeDistributorConfig.name,feeDistributorConfig.address,feeDistributorConfig.abi);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const tokenConfigChanged = JSON.stringify(prevProps.tokenConfig) !== JSON.stringify(this.props.tokenConfig);\n    const contractInfoChanged = JSON.stringify(prevProps.contractInfo) !== JSON.stringify(this.props.contractInfo);\n    if (selectedActionChanged || accountChanged || contractApprovedChanged || tokenConfigChanged){\n      const increaseAction = selectedActionChanged ? null : this.state.increaseAction;\n      this.setState({\n        increaseAction,\n        tokenWrapperProps:null,\n        showTokenWrapperEnabled:false,\n      },() => {\n        this.updateData(selectedActionChanged);\n      });\n    }\n\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n\n    const lockPeriodChanged = prevState.lockPeriodTimestamp !== this.state.lockPeriodTimestamp;\n    const increaseActionChanged = prevState.increaseAction !== this.state.increaseAction;\n    if (lockPeriodChanged || increaseActionChanged || selectedActionChanged){\n      if (increaseActionChanged){\n        this.setState({\n          internalInfoBox:null\n        });\n      } else if (lockPeriodChanged){\n        this.calculateStkIDLEAmount();\n      }\n      this.checkButtonDisabled();\n    }\n  }\n\n  checkButtonDisabled(){\n    let buttonDisabled = false;\n    const minLockPeriod = this.state.lockPeriods[0];\n    const maxLockPeriod = Object.assign([],this.state.lockPeriods).pop();\n\n    let minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).add(minLockPeriod.value,minLockPeriod.type) : this.functionsUtil.strToMoment().add(minLockPeriod.value,minLockPeriod.type);\n    minDate = this.functionsUtil.strToMoment(minDate.format('YYYY-MM-DD'),'YYYY-MM-DD');\n\n    const mDate = this.functionsUtil.strToMoment(this.state.lockPeriodInput+' '+this.functionsUtil.strToMoment().format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss');\n    const maxDate = this.functionsUtil.strToMoment().add(maxLockPeriod.value,maxLockPeriod.type);\n    switch (this.state.selectedAction){\n      default:\n      case 'Lock':\n        buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n      break;\n      case 'Increase Lock':\n        if (this.state.increaseAction === 'time'){\n          buttonDisabled = mDate.isAfter(maxDate) || mDate.isSameOrBefore(minDate);\n        }\n      break;\n    }\n\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  async changeInputCallback(inputValue=null){\n    inputValue = this.functionsUtil.BNify(inputValue);\n    this.setState({\n      inputValue\n    },() => {\n      this.calculateStkIDLEAmount();\n    });\n  }\n\n  async getMaxStakeTimestamp(){\n    const blockInfo = await this.functionsUtil.getBlockInfo();\n    let timestamp = parseInt(Date.now()/1000);\n    if (blockInfo){\n      timestamp = blockInfo.timestamp;\n    }\n    timestamp += this.state.maxTime;\n    return timestamp;\n  }\n\n  async calculateStkIDLEAmount(){\n    let internalInfoBox = null;\n    if (this.state.inputValue && this.functionsUtil.BNify(this.state.inputValue).gt(0) && this.state.lockPeriodTimestamp !== null){\n      switch (this.state.selectedAction){\n        case 'Lock':\n          const currTime = parseInt(Date.now()/1000);\n          const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n          const maxDate = this.functionsUtil.strToMoment(maxStakeTimestamp*1000);\n          let endDate = this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000);\n          if (endDate.isAfter(maxDate)){\n            endDate = maxDate;\n          }\n          const endDateTime = parseInt(endDate._d.getTime()/1000)-currTime;\n          const maxDateTime = parseInt(maxDate._d.getTime()/1000)-currTime;\n          const stkIDLEAmount = this.state.inputValue.times(endDateTime).div(maxDateTime);\n\n          const percentage = stkIDLEAmount.div(this.state.inputValue).times(100);\n\n          // console.log(this.state.inputValue.toString(),endDate.format('YYYY-MM-DD HH:mm:ss'),maxDate.format('YYYY-MM-DD HH:mm:ss'),endDateTime,maxDateTime,stkIDLEAmount.toFixed());\n\n          let text = `By staking <strong>${this.state.inputValue.toFixed(4)} ${this.props.selectedToken}</strong> until <strong>${endDate.utc().format('YYYY-MM-DD HH:mm')} UTC</strong> you will get back <strong>${stkIDLEAmount.toFixed(4)} ${this.props.tokenConfig.contract.name}</strong> (${Math.ceil(percentage)}% of staking power).`;\n          if (Math.ceil(percentage)<100){\n            text += `<br />Stake your tokens for <strong>4 years</strong> to reach the maximum staking power.`;\n          }\n          text += `<br /><span style=\"color:${this.props.theme.colors.alert};font-size:14px\">Keep in mind that once you lock ${this.props.selectedToken} you cannot reverse the operation until the lock end date has been reached.</span>`;\n          internalInfoBox = {\n            text,\n            icon:'LockOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          };\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      internalInfoBox\n    });\n  }\n\n  getIncreaseTimeParams(){\n    const _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    // console.log('getIncreaseTimeParams',_unlock_time);\n    return [_unlock_time];\n  }\n\n  getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = [];\n    const _value = this.functionsUtil.toBN(amount);\n    let _unlock_time = parseInt(this.state.lockPeriodTimestamp);\n    switch (this.state.selectedAction){\n      case 'Lock':\n        methodName = 'create_lock';\n        methodParams = [_value,_unlock_time];\n      break;\n      case 'Increase Lock':\n        methodName = 'increase_amount';\n        methodParams = [_value];\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async loadStats(){\n\n    const stats = [];\n    const globalStats = [];\n    const statsLoaded = true;\n\n    let [\n      etherscanRewardsTxs,\n      totalSupply,\n      tokenTotalSupply,\n      claimableRewards,\n      lockedInfo,\n      tokenUserBalance,\n      claimable,\n      claimEvents,\n      // checkpointEvents,\n      depositEvents\n    ] = await Promise.all([\n      this.functionsUtil.getIdleStakingRewardsTxs(),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name,'supply'),\n      this.functionsUtil.genericContractCallCached(this.props.contractInfo.name, 'totalSupply'),\n      this.functionsUtil.getTokenBalance(this.props.contractInfo.rewardToken,this.props.tokenConfig.feeDistributor.address),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked',[this.props.account]) : null,\n      this.props.account ? this.functionsUtil.getContractBalance(this.props.contractInfo.name,this.props.account) : this.functionsUtil.BNify(0),\n      this.props.account ? this.functionsUtil.genericContractCall(this.props.tokenConfig.feeDistributor.name,'claim',[this.props.account]) : this.functionsUtil.BNify(0),\n      this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'Claimed',this.props.tokenConfig.feeDistributor.fromBlock,'latest'),\n      // this.functionsUtil.getContractEvents(this.props.tokenConfig.feeDistributor.name,'CheckpointToken',{fromBlock: this.props.tokenConfig.feeDistributor.fromBlock, toBlock:'latest'}),\n      this.props.account ? this.functionsUtil.getContractEvents(this.props.contractInfo.name,'Deposit',this.props.contractInfo.fromBlock,'latest',{filter:{provider:this.props.account}}) : []\n    ]);\n    \n    const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n\n    let distributedRewards = [];\n    let totalRewards = this.functionsUtil.BNify(0);\n    let totalRewardsDays = this.functionsUtil.BNify(0);\n\n    if (etherscanRewardsTxs && etherscanRewardsTxs.length){\n      totalRewardsDays = Math.abs(etherscanRewardsTxs[0].timeStamp-etherscanRewardsTxs[etherscanRewardsTxs.length-1].timeStamp)/86400;\n      distributedRewards = etherscanRewardsTxs.map( tx => {\n        const amount = this.functionsUtil.fixTokenDecimals(tx.value,rewardTokenConfig.decimals);\n        totalRewards = totalRewards.plus(amount);\n        return {\n          amount,\n          hash:tx.hash,\n          timeStamp:tx.timeStamp,\n          tokenName:tx.tokenSymbol,\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n        };\n      });\n    }\n\n    const claimedRewards = [];\n    let totalClaimedUser = this.functionsUtil.BNify(0);\n    if (claimEvents){\n      await this.functionsUtil.asyncForEach(claimEvents, async (e) => {\n        if (this.props.account && e.returnValues && e.returnValues.recipient && e.returnValues.recipient.toLowerCase() === this.props.account.toLowerCase()){\n          const blockInfo = await this.functionsUtil.getBlockInfo(e.blockNumber);\n          if (blockInfo){\n            const claimedAmount = this.functionsUtil.fixTokenDecimals(e.returnValues.amount,rewardTokenConfig.decimals);\n            totalClaimedUser = totalClaimedUser.plus(claimedAmount);\n            claimedRewards.push({\n              amount:claimedAmount,\n              hash:e.transactionHash,\n              tokenName:this.props.contractInfo.rewardToken,\n              date:this.functionsUtil.strToMoment(parseInt(blockInfo.timestamp)*1000).utc().format('YYYY-MM-DD HH:mm')+' UTC'\n            });\n          }\n        }\n      });\n    }\n\n    tokenUserBalance = this.functionsUtil.fixTokenDecimals(tokenUserBalance,this.props.contractInfo.decimals);\n\n    const totalDeposited = totalSupply ? this.functionsUtil.fixTokenDecimals(totalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const totalLockedFunds = totalSupply ? this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken : (this.state.stats.length ? this.state.stats[0].value : this.functionsUtil.formatMoney(totalDeposited,4)+' '+this.props.selectedToken);\n    stats.push({\n      title:'Total Locked Funds',\n      value:totalLockedFunds\n    });\n\n    tokenTotalSupply = tokenTotalSupply ? this.functionsUtil.fixTokenDecimals(tokenTotalSupply,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const stkTokenTotalSupply = tokenTotalSupply ? this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name : (this.state.stats.length ? this.state.stats[1].value : this.functionsUtil.formatMoney(tokenTotalSupply,4)+' '+this.props.contractInfo.name);\n    stats.push({\n      title:`${this.props.contractInfo.name} Total Supply`,\n      value:stkTokenTotalSupply\n    });\n\n    const claimableRewardsFormatted = claimableRewards ? this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken : (this.state.stats.length ? this.state.stats[2].value : this.functionsUtil.formatMoney(claimableRewards,4)+' '+this.props.contractInfo.rewardToken);\n    stats.push({\n      title:'Claimable Rewards',\n      value:claimableRewardsFormatted\n    });\n\n    // const totalClaimed = claimEvents.reduce( (totalClaimed,event) => {\n    //   const claimedAmount = this.functionsUtil.fixTokenDecimals(event.returnValues.amount,rewardTokenConfig.decimals);\n    //   totalClaimed = totalClaimed.plus(claimedAmount);\n    //   return totalClaimed;\n    // },this.functionsUtil.BNify(0));\n\n    const totalRewardsFormatted = this.functionsUtil.formatMoney(totalRewards,4)+' '+this.props.contractInfo.rewardToken;\n    stats.push({\n      title:'Total Rewards',\n      value:totalRewardsFormatted\n    });\n\n    const maxApr = totalRewards.div(tokenTotalSupply).times(365.2425).div(totalRewardsDays);\n\n    stats.push({\n      title:'APR (1 year staking)',\n      value:maxApr.div(4).times(100).toFixed(2)+'%'\n    });\n    stats.push({\n      title:'APR (4 years staking)',\n      value:maxApr.times(100).toFixed(2)+'%'\n    });\n\n    const stakedBalance = lockedInfo && lockedInfo.amount ? this.functionsUtil.fixTokenDecimals(lockedInfo.amount,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const userDeposited = this.functionsUtil.formatMoney(stakedBalance,4);\n    globalStats.push({\n      title:'Total Deposited',\n      description:'Your total deposited amount',\n      value:userDeposited+' '+this.props.contractInfo.rewardToken,\n    });\n\n    const stakingShare = tokenUserBalance.div(tokenTotalSupply);\n    globalStats.push({\n      title:'Share',\n      value:`${stakingShare.times(100).toFixed(2)}%`,\n      description:'Your share of the total deposits',\n    });\n\n    globalStats.push({\n      title:`${this.props.contractInfo.name} balance`,\n      value:`${this.functionsUtil.formatMoney(tokenUserBalance,4)} ${this.props.contractInfo.name}`,\n    });\n    \n    claimable = claimable ? this.functionsUtil.fixTokenDecimals(claimable,this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n    const currentRewards = this.functionsUtil.formatMoney(claimable,4);\n    globalStats.push({\n      title:'Claimable Rewards',\n      value:`${currentRewards} ${this.props.contractInfo.rewardToken}`,\n      // description:'Your claimable rewards'\n    });\n\n    const totalCollectedRewards = claimable.plus(totalClaimedUser);\n\n    let stakeStartTime = depositEvents ? depositEvents.reduce( (stakedTime,event) => {\n      const depositTimestamp = this.functionsUtil.BNify(event.returnValues.ts);\n      const depositValue = this.functionsUtil.fixTokenDecimals(event.returnValues.value,this.props.tokenConfig.decimals);\n      if (depositValue.gt(0)){\n        stakedTime = stakedTime.plus(depositValue.times(depositTimestamp));\n        // console.log(depositTimestamp.toString(),depositValue.toFixed(),stakedTime.toString());\n      }\n      return stakedTime;\n    },this.functionsUtil.BNify(0)) : this.functionsUtil.BNify(0);\n\n    // console.log('stakeStartTime',stakeStartTime,stakedBalance.toFixed());\n\n    stakeStartTime = stakedBalance.gt(0) ? Math.ceil(stakeStartTime.div(stakedBalance)) : 0;\n    // const latestCheckpoint = checkpointEvents.length ? checkpointEvents[checkpointEvents.length-1] : null;\n    // const latestDistribution = etherscanRewardsTxs[0];\n    // const latestDistributionTime = latestDistribution ? this.functionsUtil.BNify(latestDistribution.timeStamp) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    // const latestDistributionTime = latestCheckpoint ? this.functionsUtil.BNify(latestCheckpoint.returnValues.time) : this.functionsUtil.BNify(parseInt(Date.now()/1000));\n    const currTime = parseInt(Date.now()/1000);\n    const stakePeriod = this.functionsUtil.BNify(currTime).minus(stakeStartTime);\n    const currentProfit = stakedBalance.gt(0) ? totalCollectedRewards.div(stakedBalance) : this.functionsUtil.BNify(0);\n    const weeksPerYear = 52.14;\n    const secondsPerWeek = 604800;\n    const stakePeriodWeeks = Math.max(1,Math.floor(stakePeriod.div(secondsPerWeek)));\n    const apr = stakePeriod.gt(0) ? currentProfit.times(weeksPerYear).div(stakePeriodWeeks).times(100) : this.functionsUtil.BNify(0);\n    \n    // console.log('APR',currTime,stakeStartTime,apr.toFixed(),currentProfit.toFixed(),stakePeriod.toFixed(),stakePeriodWeeks,totalCollectedRewards.toFixed(),stakedBalance.toFixed());\n\n    globalStats.push({\n      title:'APR',\n      value:`${apr.toFixed(2)}%`,\n      description:'APR is based on your Claimable Rewards and Total Deposited'\n    });\n\n    const lockEndDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm') : '';\n    globalStats.push({\n      value:lockEndDate,\n      title:'Lock End Date (UTC)',\n      description:'Ending date of your Lock'\n    });\n\n    this.setState({\n      stats,\n      maxApr,\n      claimable,\n      globalStats,\n      statsLoaded,\n      stakedBalance,\n      claimedRewards,\n      distributedRewards\n    });\n  }\n\n  async contractApprovedCallback(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  setIncreaseAction(increaseAction){\n    this.setState({\n      increaseAction\n    });\n  }\n\n  async changeLockPeriodInput(e){\n    const selectedLockPeriod = null;\n    const lockPeriodInput = e.target.value;\n    const currDate = this.functionsUtil.strToMoment();\n    const mDate = this.functionsUtil.strToMoment(lockPeriodInput+' '+currDate.format('HH:mm:ss'),'YYYY-MM-DD HH:mm:ss').add(1,'second');\n    if (mDate.isValid()){\n      let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n      // Check if lockPeriodTimestamp > maxStakeTimestamp\n      const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n      if (lockPeriodTimestamp>maxStakeTimestamp){\n        lockPeriodTimestamp = maxStakeTimestamp;\n      }\n\n      this.setState({\n        lockPeriodInput,\n        selectedLockPeriod,\n        lockPeriodTimestamp\n      },() => {\n        this.checkButtonDisabled()\n      });\n    }\n  }\n\n  async selectLockPeriod(selectedLockPeriod){\n    const minDate = this.state.lockedEnd ? this.functionsUtil.strToMoment(this.state.lockedEnd*1000) : this.functionsUtil.strToMoment();\n    const mDate = minDate.add(selectedLockPeriod.value,selectedLockPeriod.type).add(1,'second');\n\n    const lockPeriodInput = mDate.format('YYYY-MM-DD');\n    let lockPeriodTimestamp = parseInt(mDate._d.getTime()/1000);\n\n    // Check if lockPeriodTimestamp > maxStakeTimestamp\n    const maxStakeTimestamp = await this.getMaxStakeTimestamp();\n    if (lockPeriodTimestamp>maxStakeTimestamp){\n      lockPeriodTimestamp = maxStakeTimestamp;\n    }\n\n    this.setState({\n      lockPeriodInput,\n      selectedLockPeriod,\n      lockPeriodTimestamp\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    // console.log('transactionSucceeded',tx);\n    let infoBox = null;\n    let internalInfoBox = null;\n    switch (this.state.selectedAction){\n      case 'Lock':\n        const lockedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const lockedTokens = lockedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(lockedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully locked <strong>${lockedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Increase Lock':\n        switch (this.state.increaseAction){\n          case 'time':\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock until <strong>${this.functionsUtil.strToMoment(this.state.lockPeriodTimestamp*1000).utc().format('YYYY/MM/DD HH:mm')} UTC</strong>`\n            }\n          break;\n          case 'amount':\n            const increaseAmountTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            const increaseTokens = increaseAmountTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(increaseAmountTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n            internalInfoBox = {\n              icon:'DoneAll',\n              iconProps:{\n                color:this.props.theme.colors.transactions.status.completed\n              },\n              text:`You have successfully increased the lock by <strong>${increaseTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n            }\n          break;\n          default:\n          break;\n        }\n      break;\n      case 'Withdraw':\n        const unstakedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.tokenConfig.address.toLowerCase() ) : null;\n        const unstakedTokens = unstakedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(unstakedTokensLog.data,16),this.props.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully withdrawn <strong>${unstakedTokens.toFixed(4)} ${this.props.selectedToken}</strong>`\n        }\n      break;\n      case 'Claim':\n        const rewardTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',this.props.contractInfo.rewardToken]);\n        const receivedRewardsLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => (log.address.toLowerCase() === rewardTokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) )) ) : null;\n        const receivedRewards = receivedRewardsLog ? this.functionsUtil.fixTokenDecimals(parseInt(receivedRewardsLog.data,16),rewardTokenConfig.decimals) : this.functionsUtil.BNify(0);\n        internalInfoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully claimed <strong>${receivedRewards.toFixed(4)} ${this.props.contractInfo.rewardToken}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    const statsLoaded = false;\n    const transactionSucceeded = true;\n\n    this.setState({\n      infoBox,\n      statsLoaded,\n      internalInfoBox,\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(selectedActionChanged=false){\n    const newState = {};\n    const [\n      tokenBalance,\n      lockedEnd,\n    ] = await Promise.all([\n      this.functionsUtil.getTokenBalance(this.props.selectedToken,this.props.account),\n      this.functionsUtil.genericContractCall(this.props.contractInfo.name,'locked__end',[this.props.account])\n    ]);\n\n    newState.lockedEnd = lockedEnd && parseInt(lockedEnd)>0 ? parseInt(lockedEnd) : null;\n    newState.lockExpired = newState.lockedEnd && newState.lockedEnd<=parseInt(Date.now()/1000);\n    newState.tokenBalance = !this.functionsUtil.BNify(tokenBalance).isNaN() ? this.functionsUtil.BNify(tokenBalance) : this.functionsUtil.BNify(0);\n\n    let selectedAction = this.state.selectedAction;\n\n    if (selectedAction==='Withdraw' && !newState.lockExpired){\n      selectedAction = 'Lock';\n      newState.selectedAction = selectedAction;\n    }\n\n    // Select Increase if already created a lock\n    if (newState.lockedEnd && selectedAction==='Lock'){\n      selectedAction = 'Increase Lock';\n      newState.increaseAction = 'time';\n      newState.selectedAction = selectedAction;\n    } else if (selectedAction==='Increase Lock' && !newState.increaseAction && !this.state.increaseAction){\n      newState.increaseAction = 'time';\n    }\n\n    // Select Withdraw if the lock has expired\n    if (selectedAction==='Increase Lock' && newState.lockExpired){\n      selectedAction = 'Withdraw';\n      newState.selectedAction = selectedAction;\n    }\n\n    switch (selectedAction){\n      case 'Lock':\n        newState.permitEnabled = false;\n        newState.approveEnabled = true;\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n        newState.approveMaxAllowance = this.functionsUtil.normalizeTokenAmount(newState.tokenBalance,this.props.tokenConfig.decimals);\n      break;\n      case 'Increase Lock':\n        newState.permitEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = newState.tokenBalance;\n        newState.approveEnabled = this.state.increaseAction === 'amount';\n        newState.lockPeriodInput = this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD');\n        newState.approveDescription = `Approve the Staking contract to stake your ${this.props.selectedToken} tokens`;\n        newState.approveMaxAllowance = this.functionsUtil.normalizeTokenAmount(newState.tokenBalance,this.props.tokenConfig.decimals);\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.balanceProp = this.functionsUtil.fixTokenDecimals(newState.stakedBalance,this.props.tokenConfig.decimals);\n      break;\n      default:\n      break;\n    }\n\n    if (selectedActionChanged){\n      newState.infoBox = null;\n      newState.internalInfoBox = null;\n      newState.transactionSucceeded = false;\n    }\n\n    const maxDateTimestamp = await this.getMaxStakeTimestamp();\n    const maxDate = this.functionsUtil.strToMoment(maxDateTimestamp*1000).format('YYYY-MM-DD');\n    newState.lockEndDateIsMaxEndDate = newState.lockedEnd ? this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD')===maxDate : false;\n\n    // console.log('lockEndDateIsMaxEndDate',newState.lockEndDateIsMaxEndDate,maxDate,this.functionsUtil.strToMoment(newState.lockedEnd*1000).format('YYYY-MM-DD'));\n\n    this.setState(newState,() => {\n      this.loadStats();\n    });\n  }\n\n  render() {\n\n    const isLock = this.state.selectedAction === 'Lock';\n    const isStats = this.state.selectedAction === 'Stats';\n    const isClaim = this.state.selectedAction === 'Claim';\n    const isUnstake = this.state.selectedAction === 'Withdraw';\n    const isIncrease = this.state.selectedAction === 'Increase Lock';\n    const txAction = this.state.selectedAction;\n    const canIncrease = !this.state.lockExpired;\n\n    return (\n      <Box\n        width={1}\n      >\n      {\n        this.props.isDashboard && (\n          <IdleStakingDisapprove\n            {...this.props}\n          />\n        )\n      }\n      {\n        this.props.tokenConfig && this.props.tokenConfig.poolLink && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Token link:\n            </Text>\n            <ExtLink\n              mt={1}\n              color={'link'}\n              hoverColor={'link'}\n              href={this.props.tokenConfig.poolLink}\n            >\n              <Text\n                color={'link'}\n                style={{\n                  maxWidth:'100%',\n                  overflow:'hidden',\n                  whiteSpace:'nowrap',\n                  textOverflow:'ellipsis'\n                }}\n              >\n                {this.props.tokenConfig.poolLink}\n              </Text>\n            </ExtLink>\n          </Box>\n        )\n      }\n      {\n        this.state.stakedBalance && this.functionsUtil.BNify(this.state.stakedBalance).gt(0) && this.state.globalStats.length>0 && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Your Stats:\n            </Text>\n            <Flex\n              mt={1}\n              mb={1}\n              width={1}\n              style={{\n                flexBasis:'0',\n                flex:'1 1 0px',\n                flexWrap:'wrap'\n              }}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.globalStats.map( (statInfo,index) =>\n                  <StatsCardSmall\n                    key={`globalStats_${index}`}\n                    cardProps={{\n                      mb:2,\n                      width:['49%','33%'],\n                      // mr:[0,index<this.state.globalStats.length-1 ? 1 : 0]\n                    }}\n                    textProps={{\n                      fontSize:[1,2]\n                    }}\n                    {...statInfo}\n                  />\n                )\n              }\n            </Flex>\n          </Box>\n        )\n      }\n      {\n        this.props.selectedToken && (\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Select Action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={['column','row']}\n              justifyContent={'space-between'}\n            >\n              {\n                this.state.lockedEnd === null ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isLock ? 2 : 0\n                    }}\n                    caption={'Lock'}\n                    width={[1,'32%']}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'stake LP Tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isLock}\n                    handleClick={ e => this.setAction('Lock') }\n                  />\n                ) : !this.state.lockExpired ? (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isIncrease ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    isActive={isIncrease}\n                    caption={'Increase Lock'}\n                    imageSrc={'images/lock.svg'}\n                    isMobile={this.props.isMobile}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '54px'\n                    }}\n                    handleClick={ e => this.setAction('Increase Lock') }\n                  />\n                ) : (\n                  <ImageButton\n                    buttonProps={{\n                      mx:0,\n                      border:isUnstake ? 2 : 0\n                    }}\n                    width={[1,'32%']}\n                    caption={'Withdraw'}\n                    imageSrc={'images/upload.svg'}\n                    isMobile={this.props.isMobile}\n                    // subcaption={'withdraw LP tokens'}\n                    imageProps={{\n                      mb:[0,2],\n                      height:this.props.isMobile ? '42px' : '52px'\n                    }}\n                    isActive={isUnstake}\n                    handleClick={ e => this.setAction('Withdraw') }\n                  />\n                )\n              }\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isClaim ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Claim'}\n                imageSrc={'images/reward.png'}\n                isMobile={this.props.isMobile}\n                // subcaption={'withdraw LP tokens'}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isClaim}\n                handleClick={ e => this.setAction('Claim') }\n              />\n              <ImageButton\n                buttonProps={{\n                  mx:0,\n                  border:isStats ? 2 : 0\n                }}\n                width={[1,'32%']}\n                caption={'Stats'}\n                imageSrc={'images/stats.svg'}\n                isMobile={this.props.isMobile}\n                imageProps={{\n                  mb:[0,2],\n                  height:this.props.isMobile ? '42px' : '52px'\n                }}\n                isActive={isStats}\n                handleClick={ e => this.setAction('Stats') }\n              />\n            </Flex>\n            {\n              this.state.internalInfoBox && (\n                <IconBox\n                  cardProps={{\n                    mt:1,\n                    mb:3\n                  }}\n                  {...this.state.internalInfoBox}\n                />\n              )\n            }\n            {\n              isStats ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  width={1}\n                  style={{\n                    flexWrap:'wrap'\n                  }}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    (!this.state.stats || !this.state.stats.length) ? (\n                      <Flex\n                        mt={3}\n                        mb={3}\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading stats...'}\n                        />\n                      </Flex>\n                    ) : this.state.stats.map( (statInfo,index) =>\n                      <StatsCardSmall\n                        key={`stats_${index}`}\n                        cardProps={{\n                          width:[1,'49%']\n                        }}\n                        {...statInfo}\n                      />\n                    )\n                  }\n                  <Text\n                    mb={1}\n                  >\n                    Distributed Rewards:\n                  </Text>\n                  <Flex\n                    mb={3}\n                    width={1}\n                    justifyContent={'center'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        pt:2,\n                        pb:3,\n                        px:3,\n                        width:1,\n                        display:'flex',\n                        justifyContent:'center'\n                      }}\n                      isActive={false}\n                      isInteractive={false}\n                    >\n                      {\n                        this.state.distributedRewards && this.state.distributedRewards.length ? (\n                          <Box\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              pt={0}\n                              pb={1}\n                              width={1}\n                              flexDirection={'row'}\n                              borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.45 : 0.4}\n                              >\n                                Date\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.4 : 0.3}\n                                textAlign={this.props.isMobile ? 'right' : 'left'}\n                              >\n                                Amount\n                              </Text>\n                              <Text\n                                fontSize={1}\n                                fontWeight={3}\n                                width={this.props.isMobile ? 0.15 : 0.3}\n                              >\n                                { this.props.isMobile ? '' : 'Hash' }\n                              </Text>\n                            </Flex>\n                            <Box\n                              flexDirection={'column'}\n                              alignItems={'flex-start'}\n                              overflow={['visible','scroll']}\n                              maxHeight={['initial','500px']}\n                            >\n                              {\n                                this.state.distributedRewards.map( (reward,index) => (\n                                  <Flex\n                                    width={1}\n                                    py={[2,1]}\n                                    flexDirection={'row'}\n                                    key={`rewards_${index}`}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.45 : 0.4}\n                                    >\n                                      {reward.date}\n                                    </Text>\n                                    <Text\n                                      fontWeight={2}\n                                      color={'statValue'}\n                                      fontSize={this.props.isMobile ? 1 : 2}\n                                      width={this.props.isMobile ? 0.4 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      {reward.amount.toFixed(4)} {reward.tokenName}\n                                    </Text>\n                                    <Flex\n                                      width={this.props.isMobile ? 0.15 : 0.13}\n                                      justifyContent={this.props.isMobile ? 'flex-end' : 'flex-start'}\n                                    >\n                                      <ExtLink\n                                        color={'link'}\n                                        hoverColor={'link'}\n                                        href={this.functionsUtil.getEtherscanTransactionUrl(reward.hash)}\n                                      >\n                                        <Flex\n                                          alignItems={'center'}\n                                          flexDirection={'row'}\n                                        >\n                                          {\n                                            !this.props.isMobile && (\n                                              <Text\n                                                fontSize={2}\n                                                fontWeight={2}\n                                                color={'link'}\n                                              >\n                                                {this.functionsUtil.shortenHash(reward.hash)}\n                                              </Text>\n                                            )\n                                          }\n                                          <Icon\n                                            ml={1}\n                                            color={'link'}\n                                            name={'OpenInNew'}\n                                            size={this.props.isMobile ? '1.4em' : '1.2em'}\n                                          />\n                                        </Flex>\n                                      </ExtLink>\n                                    </Flex>\n                                  </Flex>\n                                ))\n                              }\n                            </Box>\n                          </Box>\n                        ) : (\n                          <Text\n                            fontSize={2}\n                            color={'statValue'}\n                          >\n                            No reward distributed yet.\n                          </Text>\n                        )\n                      }\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n              ) : (this.props.account && this.props.tokenConfig && this.state.balanceProp && this.state.statsLoaded && this.props.contractInfo) ? (\n                <Box\n                  mt={1}\n                  width={1}\n                  mb={[4,3]}\n                >\n                  {\n                    (isIncrease && canIncrease) && (\n                      <Box\n                        mb={2}\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Choose increase value:\n                        </Text>\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                        >\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AccessTime'}\n                            iconColor={'deposit'}\n                            iconBgColor={'#ced6ff'}\n                            isActive={ this.state.increaseAction === 'time' }\n                            handleClick={ e => this.setIncreaseAction('time') }\n                            text={this.props.isMobile ? 'Time' : 'Increase Time'}\n                          />\n                          <CardIconButton\n                            {...this.props}\n                            textProps={{\n                              fontSize:[1,2]\n                            }}\n                            cardProps={{\n                              px:3,\n                              py:2,\n                              width:0.49\n                            }}\n                            icon={'AttachMoney'}\n                            iconColor={'redeem'}\n                            iconBgColor={'#ceeff6'}\n                            isActive={ this.state.increaseAction === 'amount' }\n                            handleClick={ e => this.setIncreaseAction('amount') }\n                            text={this.props.isMobile ? 'Amount' : 'Increase Amount'}\n                          />\n                        </Flex>\n                      </Box>\n                    )\n                  }\n                  {\n                    ((isLock && this.state.balanceProp && this.state.contractApproved && this.state.balanceProp.gt(0)) || (isIncrease && canIncrease)) && (\n                      <Box\n                        width={1}\n                      > \n                        {\n                          (isLock || this.state.increaseAction === 'time') && (\n                            <Box\n                              width={1}\n                            >\n                              <Text mb={1}>\n                                Choose lock period:\n                              </Text>\n                              {\n                                !this.state.lockEndDateIsMaxEndDate ? (\n                                  <Flex\n                                    width={1}\n                                    alignItems={'center'}\n                                    justifyContent={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Input\n                                      mb={2}\n                                      width={1}\n                                      type={\"date\"}\n                                      required={true}\n                                      height={'3.4em'}\n                                      borderRadius={2}\n                                      fontWeight={500}\n                                      borderColor={'cardBorder'}\n                                      backgroundColor={'cardBg'}\n                                      boxShadow={'none !important'}\n                                      value={this.state.lockPeriodInput || ''}\n                                      onChange={this.changeLockPeriodInput.bind(this)}\n                                      border={`1px solid ${this.props.theme.colors.divider}`}\n                                    />\n                                    <Flex\n                                      mb={3}\n                                      width={1}\n                                      alignItems={'center'}\n                                      flexDirection={'row'}\n                                      justifyContent={'space-between'}\n                                    >\n                                      {\n                                        this.state.lockPeriods.map( (p,index) => {\n                                          const isActive = this.state.selectedLockPeriod ? this.state.selectedLockPeriod.value===p.value && this.state.selectedLockPeriod.type === p.type : false;\n                                          return (\n                                            <DashboardCard\n                                              cardProps={{\n                                                p:2,\n                                                width:0.24,\n                                              }}\n                                              isActive={isActive}\n                                              isInteractive={true}\n                                              key={`lockPeriod_${index}`}\n                                              handleClick={e => this.selectLockPeriod(p)}\n                                            >\n                                              <Text \n                                                fontWeight={3}\n                                                fontSize={[1,2]}\n                                                textAlign={'center'}\n                                                color={isActive ? 'copyColor' : 'cellText'}\n                                              >\n                                                {p.label}\n                                              </Text>\n                                            </DashboardCard>\n                                          );\n                                        })\n                                      }\n                                    </Flex>\n                                    {\n                                      isIncrease && (\n                                        <ExecuteTransaction\n                                          params={[]}\n                                          {...this.props}\n                                          parentProps={{\n                                            width:1,\n                                            alignItems:'center',\n                                            justifyContent:'center'\n                                          }}\n                                          Component={Button}\n                                          componentProps={{\n                                            fontSize:3,\n                                            fontWeight:3,\n                                            size:'medium',\n                                            width:[1,1/2],\n                                            borderRadius:4,\n                                            mainColor:'deposit',\n                                            value:'Increase Time',\n                                            disabled:this.state.buttonDisabled\n                                          }}\n                                          action={'Increase Time'}\n                                          methodName={'increase_unlock_time'}\n                                          contractName={this.props.contractInfo.name}\n                                          callback={this.transactionSucceeded.bind(this)}\n                                          getTransactionParams={this.getIncreaseTimeParams.bind(this)}\n                                        />\n                                      )\n                                    }\n                                  </Flex>\n                                ) : (\n                                  <IconBox\n                                    cardProps={{\n                                      mt:1,\n                                      mb:3\n                                    }}\n                                    icon={'Warning'}\n                                    iconProps={{\n                                      color:'cellText'\n                                    }}\n                                    text={`Your tokens are locked for the maxumum allowed period.`}\n                                  />\n                                )\n                              }\n                            </Box>\n                          )\n                        }\n                      </Box>\n                    )\n                  }\n                  {\n                    (isLock || this.state.increaseAction==='amount') ? (\n                      <SendTxWithBalance\n                        error={null}\n                        {...this.props}\n                        action={txAction}\n                        steps={this.state.steps}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.props.tokenConfig}\n                        tokenBalance={this.state.balanceProp}\n                        contractInfo={this.props.contractInfo}\n                        permitEnabled={this.state.permitEnabled}\n                        buttonDisabled={this.state.buttonDisabled}\n                        approveEnabled={this.state.approveEnabled}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        approveMaxAllowance={this.state.approveMaxAllowance}\n                        balanceSelectorInfo={this.state.balanceSelectorInfo}\n                        changeInputCallback={this.changeInputCallback.bind(this)}\n                        contractApproved={this.contractApprovedCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                (isLock || isIncrease) ? (\n                                  `You don't have any ${this.props.selectedToken} in your wallet.`\n                                ) : isUnstake && (\n                                  `You don't have any staked ${this.props.selectedToken} to withdraw.`\n                                )\n                              }\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (isIncrease && !canIncrease) ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            name={'LockOpen'}\n                            color={'cellText'}\n                            size={this.props.isMobile ? '1.8em' : '2.3em'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            You cannot increase an expired lock, please Withdraw.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    ) : isUnstake ? (\n                      <DashboardCard\n                        cardProps={{\n                          p:3\n                        }}\n                      >\n                        {\n                          this.state.lockExpired ? (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                mb={3}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock has expired, you can withdraw your {this.props.selectedToken}.\n                              </Text>\n                              <ExecuteTransaction\n                                params={[]}\n                                {...this.props}\n                                Component={Button}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'redeem',\n                                  value:'Withdraw',\n                                }}\n                                action={'Withdraw'}\n                                methodName={'withdraw'}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.transactionSucceeded.bind(this)}\n                              />\n                            </Flex>\n                          ) : (\n                            <Flex\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                            >\n                              <Icon\n                                name={'LockOpen'}\n                                color={'cellText'}\n                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              />\n                              <Text\n                                mt={1}\n                                fontSize={2}\n                                color={'cellText'}\n                                textAlign={'center'}\n                              >\n                                The lock is not expired yet, please wait until {this.functionsUtil.strToMoment(this.state.lockedEnd*1000).utc().format('YYYY/MM/DD HH:mm')} UTC to withdraw your {this.props.selectedToken}.\n                              </Text>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    ) : isClaim && (\n                      <Flex\n                        width={1}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mb:1\n                          }}\n                        >\n                          {\n                            (this.state.claimable && this.state.claimable.gt(0)) ? (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  color={'cellText'}\n                                  name={'MonetizationOn'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  mb={3}\n                                  fontSize={[2,3]}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can claim <strong>{this.state.claimable.toFixed(8)} {this.props.contractInfo.rewardToken}</strong>.\n                                </Text>\n                                <ExecuteTransaction\n                                  params={[]}\n                                  {...this.props}\n                                  Component={Button}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/3],\n                                    value:'Claim',\n                                    borderRadius:4,\n                                    mainColor:'redeem',\n                                  }}\n                                  action={'Claim'}\n                                  methodName={'claim'}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractName={this.props.tokenConfig.feeDistributor.name}\n                                />\n                              </Flex>\n                            ) : (\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                  size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have rewards to Claim yet.\n                                </Text>\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                        <Text\n                          mb={1}\n                        >\n                          Claimed Rewards:\n                        </Text>\n                        <Flex\n                          mb={3}\n                          width={1}\n                          alignItems={'center'}\n                          justifyContent={'center'}\n                        >\n                          <DashboardCard\n                            cardProps={{\n                              pt:2,\n                              pb:3,\n                              px:3,\n                              width:1,\n                              display:'flex',\n                              alignItems:'center',\n                              justifyContent:'center'\n                            }}\n                            isActive={false}\n                            isInteractive={false}\n                          >\n                            {\n                              this.state.claimedRewards && this.state.claimedRewards.length ? (\n                                <Flex\n                                  width={1}\n                                  flexDirection={'column'}\n                                >\n                                  <Flex\n                                    pt={0}\n                                    pb={1}\n                                    width={1}\n                                    flexDirection={'row'}\n                                    borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.4}\n                                    >\n                                      Date\n                                    </Text>\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      width={this.props.isMobile ? 0.5 : 0.3}\n                                      textAlign={this.props.isMobile ? 'right' : 'left'}\n                                    >\n                                      Amount\n                                    </Text>\n                                    {\n                                      !this.props.isMobile && (\n                                        <Text\n                                          width={0.3}\n                                          fontSize={1}\n                                          fontWeight={3}\n                                        >\n                                          Hash\n                                        </Text>\n                                      )\n                                    }\n                                  </Flex>\n                                  {\n                                    this.state.claimedRewards.map( (claim,index) => (\n                                      <Flex\n                                        py={1}\n                                        width={1}\n                                        flexDirection={'row'}\n                                        key={`claim_${index}`}\n                                        borderBottom={`1px solid ${this.props.theme.colors.divider}`}\n                                      >\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.4}\n                                        >\n                                          {claim.date}\n                                        </Text>\n                                        <Text\n                                          fontWeight={2}\n                                          color={'statValue'}\n                                          fontSize={this.props.isMobile ? 1 : 2}\n                                          width={this.props.isMobile ? 0.5 : 0.3}\n                                          textAlign={this.props.isMobile ? 'right' : 'left'}\n                                        >\n                                          {claim.amount.toFixed(4)} {claim.tokenName}\n                                        </Text>\n                                        {\n                                          !this.props.isMobile && (\n                                            <ExtLink\n                                              width={0.3}\n                                              color={'link'}\n                                              hoverColor={'link'}\n                                              href={this.functionsUtil.getEtherscanTransactionUrl(claim.hash)}\n                                            >\n                                              <Flex\n                                                alignItems={'center'}\n                                                flexDirection={'row'}\n                                              >\n                                                <Text\n                                                  fontSize={2}\n                                                  fontWeight={2}\n                                                  color={'link'}\n                                                >\n                                                  {this.functionsUtil.shortenHash(claim.hash)}\n                                                </Text>\n                                                <Icon\n                                                  ml={1}\n                                                  size={'1.2em'}\n                                                  color={'link'}\n                                                  name={'OpenInNew'}\n                                                />\n                                              </Flex>\n                                            </ExtLink>\n                                          )\n                                        }\n                                      </Flex>\n                                    ))\n                                  }\n                                </Flex>\n                              ) : (\n                                <Text\n                                  fontSize={2}\n                                  color={'statValue'}\n                                >\n                                  No reward claimed yet.\n                                </Text>\n                              )\n                            }\n                          </DashboardCard>\n                        </Flex>\n                      </Flex>\n                    )\n                  }\n                </Box>\n              ) : !this.props.account ? (\n                <ConnectBox\n                  cardProps={{\n                    mt:2\n                  }}\n                  {...this.props}\n                />\n              ) : (\n                <Flex\n                  mt={3}\n                  mb={3}\n                  width={1}\n                >\n                  <FlexLoader\n                    flexProps={{\n                      flexDirection:'row'\n                    }}\n                    loaderProps={{\n                      size:'30px'\n                    }}\n                    textProps={{\n                      ml:2\n                    }}\n                    text={'Loading info...'}\n                  />\n                </Flex>\n              )\n            }\n          </Box>\n        )\n      }\n      </Box>\n    );\n  }\n}\n\nexport default IdleStaking;","import ExtLink from '../ExtLink/ExtLink';\nimport IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\n// import NXMaster from '../abis/nexus/NXMaster.json';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Box, Text, Input, Link, Progress, Button, Icon, Tooltip } from \"rimble-ui\";\n\nclass NexusMutual extends Component {\n\n  state = {\n    step:1,\n    quote:null,\n    steps:{\n      1:'Get Quote',\n      2:'Buy Cover'\n    },\n    periodOptions:{\n      30:{\n        label:'30d'\n      },\n      60:{\n        label:'60d'\n      },\n      90:{\n        label:'90d'\n      },\n      365:{\n        label:'1y'\n      }\n    },\n    coverId:null,\n    claimId:null,\n    capacity:null,\n    loading:false,\n    coverCost:null,\n    amountValue:'',\n    periodValue:'',\n    yearlyCost:null,\n    maxCapacity:null,\n    amountValid:true,\n    periodValid:true,\n    tokenConfig:null,\n    tokenBalance:null,\n    selectedToken:null,\n    claimableCovers:[],\n    tokenApproved:false,\n    selectedPeriod:null,\n    maxPriceWithFee:null,\n    transactionParams:[],\n    transactionValue:null,\n    yieldTokenBalance:null,\n    selectedUnderlying:null,\n    selectedAction:'deposit',\n    yieldTokenApproved:false,\n    claimButtonDisabled:false,\n    selectedCoverToClaim:null,\n    defaultClaimableCover:null,\n    selectedUnderlyingConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async loadContracts(){\n    const claimableCovers = [];\n    const nexusMutualCoverages = await this.functionsUtil.getNexusMutualCoverages(this.props.account);\n    nexusMutualCoverages.forEach( coverage => {\n      if (coverage.incident){\n        claimableCovers.push(coverage);\n      }\n    });\n\n    const validClaimableCoverFromParam = this.props.urlParams.param3 ? claimableCovers.find( cover => parseInt(cover.value) === parseInt(this.props.urlParams.param3) ) : null;\n\n    const defaultClaimableCover = claimableCovers.length>0 ? claimableCovers[0] : null;\n    const selectedCoverToClaim = validClaimableCoverFromParam ? validClaimableCoverFromParam : defaultClaimableCover || null;\n\n    this.setState({\n      claimableCovers,\n      selectedCoverToClaim,\n      defaultClaimableCover\n    });\n\n    const selectedAction = ['deposit','claim'].includes(this.props.urlParams.param2) ? this.props.urlParams.param2 : this.state.selectedAction;\n    const paramIsValidToken = this.props.urlParams.param3 && Object.keys(this.props.toolProps.availableTokens).includes(this.props.urlParams.param3);\n    const selectedToken = paramIsValidToken ? this.props.urlParams.param3 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    this.setSelectedAction(selectedAction);\n    this.changeSelectedToken(selectedToken);\n    // console.log('coverBoughtEvents',coverBoughtEvents,'claimSubmittedEvents',claimSubmittedEvents,'claimableCovers',claimableCovers);\n  }\n\n  async getPoolCapacity(selectedUnderlying,tokenConfig){\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const response = await this.functionsUtil.makeRequest(`${baseEndpoint}contracts/${tokenConfig.address}/capacity`);\n    if (response && response.data){\n      const capacity = response.data;\n      // console.log('getPoolCapacity',capacity);\n      const maxCapacity = capacity && capacity[`capacity${selectedUnderlying}`] ? this.functionsUtil.fixTokenDecimals(capacity[`capacity${selectedUnderlying}`],tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      return maxCapacity;\n    }\n    return false;\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const selectedUnderlyingChanged = prevState.selectedUnderlying !== this.state.selectedUnderlying;\n    if (selectedTokenChanged || selectedUnderlyingChanged){\n      this.loadTokenData();\n    }\n  }\n\n  async loadTokenData(){\n\n    const isETH = this.state.selectedToken === 'ETH';\n    const selectedUnderlyingConfig = this.state.tokenConfig.underlying[this.state.selectedUnderlying];\n\n    // Init Underlying Contract\n    await Promise.all([\n      this.props.initContract(this.state.tokenConfig.token, this.state.tokenConfig.realAddress, this.state.tokenConfig.abi),\n      this.props.initContract(selectedUnderlyingConfig.name, selectedUnderlyingConfig.address, selectedUnderlyingConfig.abi)\n    ]);\n\n    let [\n      maxCapacity,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      tokenApproved,\n      tokenBalance\n    ] = await Promise.all([\n      this.getPoolCapacity(this.state.selectedUnderlying,this.state.tokenConfig),\n      this.functionsUtil.getTokenBalance(this.state.tokenConfig.token,this.props.account),\n      this.functionsUtil.checkTokenApproved(this.state.selectedToken,this.props.contractInfo.address,this.props.account),\n      this.functionsUtil.checkTokenApproved(selectedUnderlyingConfig.name,this.props.contractInfo.address,this.props.account),\n      isETH ? this.functionsUtil.getETHBalance(this.props.account,false) : this.functionsUtil.getTokenBalance(selectedUnderlyingConfig.name,this.props.account,false),\n    ]);\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n    yieldTokenBalance = yieldTokenBalance || this.functionsUtil.BNify(0);\n\n    this.setState({\n      maxCapacity,\n      tokenBalance,\n      tokenApproved,\n      yieldTokenBalance,\n      yieldTokenApproved,\n      selectedUnderlyingConfig\n    });\n  }\n\n  async changeSelectedToken(selectedToken){\n    const periodValue = '';\n    const amountValue = '';\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const selectedUnderlying = Object.keys(tokenConfig.underlying)[0];\n\n    this.setState({\n      amountValue,\n      periodValue,\n      tokenConfig,\n      selectedToken,\n      selectedUnderlying\n    });\n  }\n\n  changeSelectedUnderlying(selectedUnderlying){\n    this.setState({\n      selectedUnderlying\n    });\n  }\n\n  setMaxCoverAmount(){\n    const amountValue = this.state.maxCapacity.toFixed();\n    this.changeAmount({\n      target:{\n        value:amountValue\n      }\n    });\n  }\n\n  changeAmount = (e) => {\n    const amountValue = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    const amountValid = this.functionsUtil.BNify(amountValue).gt(0) && this.functionsUtil.BNify(amountValue).lte(this.state.maxCapacity);\n    this.setState({\n      amountValue,\n      amountValid\n    });\n  }\n\n  changePeriod = (e) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=30 && parseInt(periodValue)<=365;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod:null\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    });\n  }\n\n  async getQuote() {\n\n    this.setState({\n      loading:true\n    });\n\n    // Setup your cover data.\n    const coverData = {\n      period: this.state.periodValue, // days\n      coverAmount: this.state.amountValue, // ETH in units not wei\n      currency: this.state.selectedUnderlying,\n      contractAddress: this.state.tokenConfig.address, // the contract you will be buying cover for\n      asset: this.state.tokenConfig.underlying[this.state.selectedUnderlying].address\n    };\n\n    // URL to request a quote for.\n    // const quoteURL = 'https://api.nexusmutual.io/v1/quote?' +\n    const requiredNetwork = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    const baseEndpoint = this.functionsUtil.getGlobalConfig(['network','providers','nexus','endpoints',requiredNetwork]);\n    const quoteURL = `${baseEndpoint}quote?coverAmount=${coverData.coverAmount}&currency=${coverData.currency}&period=${coverData.period}&contractAddress=${coverData.contractAddress}`;\n\n    const response = await this.functionsUtil.makeRequest(quoteURL);\n\n    const quote = response && response.data ? response.data : null;\n\n    if (!quote){\n      this.setState({\n        loading:false\n      });\n      return false;\n    }\n\n    // encode the signature result in the data field\n    const data = this.props.web3.eth.abi.encodeParameters(\n      ['uint', 'uint', 'uint', 'uint', 'uint8', 'bytes32', 'bytes32'],\n      [quote.price, quote.priceInNXM, quote.expiresAt, quote.generatedAt, quote.v, quote.r, quote.s],\n    );\n\n    const COVER_TYPE = this.functionsUtil.toBN(0);\n    const feePercentage = await this.functionsUtil.genericContractCall(this.props.contractInfo.name,'feePercentage');\n    const basePrice = this.functionsUtil.toBN(quote.price);\n    const priceWithFee = basePrice.mul(this.functionsUtil.toBN(feePercentage)).divn(10000).add(basePrice);\n    const amountInWei = this.functionsUtil.toWei(coverData.coverAmount.toString());\n    const maxPriceWithFee = priceWithFee;\n    const coverCost = this.functionsUtil.fixTokenDecimals(maxPriceWithFee,this.state.tokenConfig.decimals);\n    const yearlyCost = coverCost.div(this.state.amountValue).times(365).div(this.state.periodValue).times(100);\n\n    // console.log('coverCost',maxPriceWithFee,coverCost.toFixed(),this.state.amountValue.toFixed(),this.state.periodValue,yearlyCost.toFixed());\n\n    const transactionParams = [\n      coverData.contractAddress,\n      coverData.asset,\n      amountInWei,\n      coverData.period,\n      COVER_TYPE,\n      maxPriceWithFee,\n      data\n    ];\n\n    const transactionValue = this.state.selectedUnderlying === 'ETH' ? priceWithFee : null;\n\n    // console.log(feePercentage,transactionParams,transactionValue,quote);\n\n    // debugger;\n\n    const step = 2;\n    const loading = false;\n\n    this.setState({\n      step,\n      quote,\n      loading,\n      coverCost,\n      yearlyCost,\n      maxPriceWithFee,\n      transactionValue,\n      transactionParams\n    });\n  }\n\n  approveSucceeded = (tx) => {\n    const tokenApproved = true;\n    this.setState({\n      tokenApproved\n    });\n  }\n\n  yieldTokenApproveSucceeded = (tx) => {\n    const yieldTokenApproved = true;\n    this.setState({\n      yieldTokenApproved\n    });\n  }\n\n  claimInputChange = (amount) => {\n    const normalizedAmount = this.functionsUtil.normalizeTokenAmount(amount,this.state.tokenConfig.decimals);\n    const claimButtonDisabled = this.functionsUtil.BNify(amount).lte(0) || this.functionsUtil.BNify(normalizedAmount).gt(this.state.selectedCoverToClaim.coveredTokenAmount);\n    this.setState({\n      claimButtonDisabled\n    });\n  }\n\n  getClaimTransactionParams = (coveredTokenAmount) => {\n    return {\n      methodName:'claimTokens',\n      methodParams:[this.state.selectedCoverToClaim.value,this.state.selectedCoverToClaim.incident.id,coveredTokenAmount,this.state.tokenConfig.realAddress]\n    };\n  }\n\n  claimTransactionSucceeded = (tx) => {\n    // const claimId = this.functionsUtil.getGlobalConfig(['txReceipt','events','ClaimSubmitted','returnValues','claimId'],tx);\n    // this.setState({\n    //   claimId\n    // });\n    this.loadContracts();\n  }\n\n  buyCoverTransactionSucceeded = (tx) => {\n    const coverId = this.functionsUtil.getGlobalConfig(['txReceipt','events','CoverBought','returnValues','coverId'],tx);\n    this.setState({\n      coverId\n    });\n  }\n\n  setSelectedAction(selectedAction){\n    if (selectedAction !== this.state.selectedAction){\n      this.setState({\n        selectedAction\n      });\n    }\n  }\n\n  selectCoverToClaim(coverId){\n    const selectedCoverToClaim = this.state.selectedCoverToClaim ? this.state.claimableCovers.find( cover => parseInt(cover.value) === coverId ) : null;\n    // console.log('selectCoverToClaim',selectedCoverToClaim);\n    this.setState({\n      selectedCoverToClaim\n    });\n  }\n\n  reset(){\n    const step = 1;\n    const quote = null;\n    const coverId = null;\n    const periodValue = '';\n    const amountValue = '';\n    const transactionParams = [];\n    this.setState({\n      step,\n      quote,\n      coverId,\n      periodValue,\n      amountValue,\n      transactionParams\n    });\n  }\n\n  render() {\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          mb={3}\n          width={[1,0.36]}\n          flexDirection={'column'}\n        >\n          <Box\n            mb={2}\n            width={1}\n          >\n            <Text mb={1}>\n              Choose action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'Security'}\n                iconColor={'deposit'}\n                text={'Buy Coverage'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.selectedAction === 'deposit' }\n                handleClick={ e => this.setSelectedAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:2,\n                  width:0.49\n                }}\n                textProps={{\n                  fontSize:[1,2]\n                }}\n                icon={'FileUpload'}\n                iconColor={'redeem'}\n                text={'Claim Tokens'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.selectedAction === 'claim' }\n                handleClick={ e => this.setSelectedAction('claim') }\n              />\n            </Flex>\n          </Box>\n          {\n            this.state.selectedAction === 'deposit' &&\n              <IconBox\n                cardProps={{\n                  py:2,\n                  px:3,\n                  my:2,\n                  width:1,\n                }}\n                isActive={true}\n                isInteractive={false}\n                icon={'LightbulbOutline'}\n                iconProps={{\n                  color:'flashColor'\n                }}\n                textProps={{\n                  color:'flashColor'\n                }}\n                text={`If your yield bearing token de-pegs in value by more than 10%, claim up to 90% of your loss by swapping your yield bearing token for a claim payment.`}\n              >\n                <ExtLink\n                  ml={1}\n                  fontWeight={500}\n                  color={'primary'}\n                  fontSize={'15px'}\n                  hoverColor={'primary'}\n                  href={'https://nexusmutual.io/pages/YieldTokenCoverv1.0.pdf'}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    Read More\n                    <Icon\n                      ml={1}\n                      size={'0.9em'}\n                      color={'primary'}\n                      name={'OpenInNew'}\n                    />\n                    .\n                  </Flex>\n                </ExtLink>\n              </IconBox>\n          }\n          {\n            this.state.selectedAction === 'deposit' ? (\n              <Flex\n                width={1}\n                alignItems={'center'}\n                flexDirection={'column'}\n                justifyContent={'center'}\n              >\n                <Flex\n                  mb={1}\n                  width={1}\n                  flexDirection={'row'}\n                  justifyContent={'space-between'}\n                >\n                  {\n                    Object.keys(this.state.steps).map( stepIndex => (\n                      <Link\n                        style={{\n                          flexBasis:'0',\n                          flex:'1 1 0px',\n                          textDecoration:'none',\n                          cursor:this.state.step>=stepIndex ? 'pointer' : 'default'\n                        }}\n                        fontSize={2}\n                        textAlign={'center'}\n                        key={`step_${stepIndex}`}\n                        color={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        hoverColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                        activeColor={ this.state.step>=stepIndex ? 'primary' : 'cellText' }\n                      >\n                        {this.state.steps[stepIndex]}\n                      </Link>\n                    ) )\n                  }\n                </Flex>\n                <Flex\n                  mb={2}\n                  width={1}\n                  flexDirection={'column'}\n                >\n                  <Progress\n                    style={{\n                      width:'100%',\n                      height:'15px'\n                    }}\n                    value={(1/Object.keys(this.state.steps).length)*this.state.step}\n                  />\n                </Flex>\n                {\n                  !this.state.selectedToken || !this.state.tokenBalance ? (\n                    <FlexLoader\n                      flexProps={{\n                        mt:2,\n                        flexDirection:'row'\n                      }}\n                      loaderProps={{\n                        size:'25px',\n                      }}\n                      textProps={{\n                        ml:2\n                      }}\n                      text={'Loading assets...'}\n                    />\n                  ) : this.state.coverId ? (\n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <IconBox\n                        cardProps={{\n                          mt:1,\n                        }}\n                        icon={'DoneAll'}\n                        iconProps={{\n                          color:this.props.theme.colors.transactions.status.completed\n                        }}\n                        text={`You have successfully bought your Cover! Your Cover ID is <strong>${this.state.coverId}</strong>`}\n                      />\n                      <Link\n                        mt={2}\n                        color={'link'}\n                        hoverColor={'primary'}\n                        onClick={this.reset.bind(this)}\n                      >\n                        Get New Quote\n                      </Link>\n                    </Flex>\n                  ) : !this.state.quote ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Box\n                        width={1}\n                      >\n                        <Text mb={1}>\n                          Select Token to Cover:\n                        </Text>\n                        <AssetSelector\n                          {...this.props}\n                          id={'token-from'}\n                          showBalance={false}\n                          isSearchable={false}\n                          selectedToken={this.state.selectedToken}\n                          onChange={this.changeSelectedToken.bind(this)}\n                          availableTokens={this.props.toolProps.availableTokens}\n                        />\n                      </Box>\n                      <Box\n                        mt={2}\n                        width={1}\n                      >\n                        <Flex\n                          mb={1}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                        >\n                          <Text>\n                            Select Payment Asset:\n                          </Text>\n                          <Tooltip\n                            placement={'top'}\n                            message={`This is the asset that you will use as payment method for the coverage premium`}\n                          >\n                            <Icon\n                              ml={1}\n                              size={'1em'}\n                              name={\"Info\"}\n                              color={'cellTitle'}\n                            />\n                          </Tooltip>\n                        </Flex>\n                        <AssetSelector\n                          {...this.props}\n                          showBalance={false}\n                          selectedToken={this.state.selectedUnderlying}\n                          onChange={this.changeSelectedUnderlying.bind(this)}\n                          availableTokens={this.state.tokenConfig.underlying}\n                        />\n                      </Box>\n                      {\n                        this.functionsUtil.BNify(this.state.maxCapacity).gt(0) ? (\n                          <Box\n                            width={1}\n                          >\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                How much do you want to cover?\n                              </Text>\n                              <Input\n                                min={0}\n                                step={1}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderColor={'cardBorder'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.amountValue}\n                                onChange={this.changeAmount.bind(this)}\n                                border={`1px solid ${this.props.theme.colors.divider}`}\n                                placeholder={`Insert ${this.state.selectedUnderlying.toUpperCase()} amount`}\n                              />\n                              <Flex\n                                width={1}\n                                maxWidth={'100%'}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'flex-end'}\n                              >\n                                <Link\n                                  mt={1}\n                                  fontSize={1}\n                                  fontWeight={3}\n                                  color={'dark-gray'}\n                                  textAlign={'right'}\n                                  hoverColor={'copyColor'}\n                                  onClick={ (e) => this.setMaxCoverAmount() }\n                                  style={{\n                                    maxWidth:'100%',\n                                    overflow:'hidden',\n                                    whiteSpace:'nowrap',\n                                    textOverflow:'ellipsis'\n                                  }}\n                                >\n                                  Max Available: {this.state.maxCapacity.toFixed(this.props.isMobile ? 2 : 4)} {this.state.selectedUnderlying}\n                                </Link>\n                              </Flex>\n                            </Box>\n                            <Box\n                              mt={2}\n                              width={1}\n                            >\n                              <Text\n                                mb={1}\n                              >\n                                For how many days?\n                              </Text>\n                              <Input\n                                min={0}\n                                width={'100%'}\n                                type={\"number\"}\n                                required={true}\n                                height={'3.4em'}\n                                borderRadius={2}\n                                fontWeight={500}\n                                borderWidth={'1px'}\n                                borderStyle={'solid'}\n                                backgroundColor={'cardBg'}\n                                boxShadow={'none !important'}\n                                value={this.state.periodValue}\n                                placeholder={'Insert days of coverage'}\n                                onChange={this.changePeriod.bind(this)}\n                                borderColor={this.state.periodValid ? 'cardBorder' : 'red'}\n                              />\n                              {\n                                !this.state.periodValid && (\n                                  <Text\n                                    my={1}\n                                    fontSize={2}\n                                    color={'red'}\n                                  >\n                                    Enter a period between 30 and 365 days!\n                                  </Text>\n                                )\n                              }\n                              <Flex\n                                mt={2}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                {\n                                  Object.keys(this.state.periodOptions).map( period => {\n                                    const periodInfo = this.state.periodOptions[period];\n                                    const isActive = this.state.selectedPeriod===period;\n                                    const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                                    return (\n                                      <DashboardCard\n                                        cardProps={{\n                                          p:2,\n                                          width:width,\n                                        }}\n                                        isActive={isActive}\n                                        isInteractive={true}\n                                        key={`coverPeriod_${period}`}\n                                        handleClick={e => this.selectPeriod(period)}\n                                      >\n                                        <Text\n                                          fontSize={2}\n                                          fontWeight={3}\n                                          textAlign={'center'}\n                                          color={this.props.isActive ? 'copyColor' : 'legend'}\n                                        >\n                                          {periodInfo.label}\n                                        </Text>\n                                      </DashboardCard>\n                                    );\n                                  })\n                                }\n                              </Flex>\n                            </Box>\n                            <Flex\n                              mt={2}\n                              width={1}\n                              justifyContent={'center'}\n                            >\n                              <ButtonLoader\n                                buttonProps={{\n                                  my:2,\n                                  mx:[0, 2],\n                                  size:'medium',\n                                  borderRadius:4,\n                                  mainColor:'blue',\n                                  disabled:(!this.state.amountValid || !this.state.selectedUnderlying || !this.state.periodValue || !this.state.periodValid)\n                                }}\n                                buttonText={'GET QUOTE'}\n                                isLoading={this.state.loading}\n                                handleClick={ e => this.getQuote(e) }\n                              />\n                            </Flex>\n                          </Box>\n                        ) : (\n                          <IconBox\n                            cardProps={{\n                              mt:3\n                            }}\n                            icon={'MoneyOff'}\n                            iconProps={{\n                              color:'cellText'\n                            }}\n                            text={`Coverage for ${this.state.selectedToken} is not available at the moment.`}\n                          />\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text\n                        mb={2}\n                        fontSize={3}\n                        fontWeight={3}\n                        color={'primary'}\n                      >\n                        Cover Summary:\n                      </Text>\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          mb:2,\n                          px:3\n                        }}\n                        isActive={false}\n                        isInteractive={false}\n                      >\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Protocol:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          Idle Finance\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yield Token:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.selectedToken}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Amount:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.amountValue} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Period:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.periodValue} days\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Cover Price:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.coverCost.toFixed(6)} {this.state.selectedUnderlying}\n                        </Text>\n                        <Text\n                          mb={1}\n                          fontSize={1}\n                          fontWeight={2}\n                          color={'cellText'}\n                        >\n                          Yearly Cost:\n                        </Text>\n                        <Text\n                          mb={2}\n                          fontSize={2}\n                          fontWeight={3}\n                          color={'primary'}\n                        >\n                          {this.state.yearlyCost.toFixed(2)}%\n                        </Text>\n                      </DashboardCard>\n                      <Flex\n                        mt={2}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        {\n                          this.functionsUtil.BNify(this.state.tokenBalance).lt(this.functionsUtil.BNify(this.state.quote.price)) ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={1}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You don't have enough {this.state.selectedUnderlying} in your wallet.\n                                </Text>\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : !this.state.tokenApproved ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mb:3\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  name={'MoneyOff'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mb={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  To buy the coverage you need to approve the Smart-Contract.\n                                </Text>\n                                <ExecuteTransaction\n                                  {...this.props}\n                                  parentProps={{\n                                    width:1,\n                                    alignItems:'center',\n                                    justifyContent:'center'\n                                  }}\n                                  Component={Button}\n                                  componentProps={{\n                                    fontSize:3,\n                                    fontWeight:3,\n                                    size:'medium',\n                                    width:[1,1/2],\n                                    borderRadius:4,\n                                    value:'Approve',\n                                    mainColor:'deposit'\n                                  }}\n                                  action={'Approve'}\n                                  methodName={'approve'}\n                                  callback={this.approveSucceeded.bind(this)}\n                                  contractName={this.state.selectedUnderlyingConfig.name}\n                                  params={[this.props.contractInfo.address,this.props.web3.utils.toTwosComplement('-1')]}\n                                />\n                                <Link\n                                  mt={1}\n                                  color={'link'}\n                                  hoverColor={'primary'}\n                                  onClick={this.reset.bind(this)}\n                                >\n                                  Get New Quote\n                                </Link>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <ExecuteTransaction\n                                {...this.props}\n                                parentProps={{\n                                  width:1,\n                                  alignItems:'center',\n                                  justifyContent:'center'\n                                }}\n                                Component={Button}\n                                componentProps={{\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  size:'medium',\n                                  width:[1,1/2],\n                                  borderRadius:4,\n                                  mainColor:'deposit',\n                                  value:'Buy Coverage',\n                                  disabled:this.state.buttonDisabled\n                                }}\n                                action={'Buy Coverage'}\n                                methodName={'buyCover'}\n                                value={this.state.transactionValue}\n                                params={this.state.transactionParams}\n                                contractName={this.props.contractInfo.name}\n                                callback={this.buyCoverTransactionSucceeded.bind(this)}\n                              />\n                              <Link\n                                mt={1}\n                                color={'link'}\n                                hoverColor={'primary'}\n                                onClick={this.reset.bind(this)}\n                              >\n                                Get New Quote\n                              </Link>\n                            </Flex>\n                          )\n                        }\n                      </Flex>\n                    </Flex>\n                  )\n                }\n              </Flex>\n            ) : this.state.selectedAction === 'claim' && (\n              <Box\n                width={1}\n              >\n                {\n                  this.state.claimableCovers.length>0 ? (\n                    <Flex\n                      width={1}\n                      alignItems={'stretch'}\n                      flexDirection={'column'}\n                      justifyContent={'center'}\n                    >\n                      <Text mb={1}>\n                        Select Cover:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        isSearchable={false}\n                        name={'claimable_covers'}\n                        options={this.state.claimableCovers}\n                        onChange={this.selectCoverToClaim.bind(this)}\n                        defaultValue={this.state.defaultClaimableCover}\n                      />\n                      {\n                        this.state.selectedCoverToClaim.claimId ? (\n                          <IconBox\n                            cardProps={{\n                              mt:2,\n                            }}\n                            icon={'DoneAll'}\n                            iconProps={{\n                              color:this.props.theme.colors.transactions.status.completed\n                            }}\n                            text={`You've successfully claimed <strong>${this.state.selectedCoverToClaim.claimedAmount.toFixed(4)} ${this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!`}\n                          />\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3,\n                                mb:1\n                              }}\n                            >\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                <Icon\n                                  size={'2em'}\n                                  color={'cellText'}\n                                  name={'FileUpload'}\n                                />\n                                <Text\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  You can Claim up to <strong>{this.state.selectedCoverToClaim.claimableAmount.toFixed(4)} {this.state.selectedCoverToClaim.coverAsset}</strong> for this Cover!\n                                </Text>\n                                <Text\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  Keep in mind that the cover becomes inactive once any amount of tokens are claimed.\n                                </Text>\n                              </Flex>\n                            </DashboardCard>\n                            <SendTxWithBalance\n                              error={null}\n                              {...this.props}\n                              permitEnabled={false}\n                              approveEnabled={true}\n                              action={'Claim Token'}\n                              tokenConfig={this.state.tokenConfig}\n                              contractInfo={this.props.contractInfo}\n                              buttonDisabled={this.state.claimButtonDisabled}\n                              callback={this.claimTransactionSucceeded.bind(this)}\n                              changeInputCallback={this.claimInputChange.bind(this)}\n                              contractApproved={this.yieldTokenApproveSucceeded.bind(this)}\n                              getTransactionParams={this.getClaimTransactionParams.bind(this)}\n                              approveDescription={'To claim your tokens you need to approve the Smart-Contract.'}\n                              tokenBalance={this.functionsUtil.BNify(this.state.yieldTokenBalance).gt(this.state.selectedCoverToClaim.maxCoveredAmount) ? this.state.selectedCoverToClaim.maxCoveredAmount : this.state.yieldTokenBalance }\n                            >\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mt:2\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    name={'MoneyOff'}\n                                    color={'cellText'}\n                                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    You don't have any {this.state.selectedToken} in your wallet.\n                                  </Text>\n                                </Flex>\n                              </DashboardCard>\n                            </SendTxWithBalance>\n                          </Flex>\n                        )\n                      }\n                    </Flex>\n                  ) : (\n                    <IconBox\n                      cardProps={{\n                        mt:1,\n                      }}\n                      icon={'Warning'}\n                      iconProps={{\n                        color:'cellText'\n                      }}\n                      text={`You cannot submit any Claim for your Covers.`}\n                    />\n                  )\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default NexusMutual;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass TokenWrapper extends Component {\n\n  state = {\n    action:null,\n    infoBox:null,\n    balanceDest:null,\n    tokenConfig:null,\n    balanceStart:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    approveEnabled:true,\n    approveDescription:null,\n    showTokenWrapperEnabled:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const actionChanged = (prevState.action !== this.state.action) || (this.props.action !== prevProps.action);\n    const startContractChanged = JSON.stringify(this.props.startContract) !== JSON.stringify(prevProps.startContract);\n    const destContractChanged = JSON.stringify(this.props.destContract) !== JSON.stringify(prevProps.destContract);\n    if (actionChanged || startContractChanged || destContractChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    const action = this.props.action || this.state.action || 'wrap';\n    this.setState({\n      action\n    },() => {\n      this.loadBalance();\n      this.updateActionData();\n    });\n  }\n\n  async getTokenBalance(contractInfo){\n\n    if (!contractInfo){\n      return false;\n    }\n\n    let tokenBalance = null;\n    switch (contractInfo.name){\n      case 'ETH':\n        tokenBalance = await this.functionsUtil.getETHBalance(this.props.account);\n      break;\n      default:\n        // Init Contract\n        await this.props.initContract(contractInfo.name,contractInfo.address,contractInfo.abi);\n        tokenBalance = await this.functionsUtil.getTokenBalance(contractInfo.name,this.props.account);\n      break;\n    }\n\n    tokenBalance = tokenBalance || this.functionsUtil.BNify(0);\n\n    return tokenBalance;\n  }\n\n  async loadBalance(){\n\n    if (!this.props.toolProps.startContract || !this.props.toolProps.destContract){\n      return false;\n    }\n\n    // Load Balances\n    const [\n      balanceDest,\n      balanceStart\n    ] = await Promise.all([\n      this.getTokenBalance(this.props.toolProps.destContract),\n      this.getTokenBalance(this.props.toolProps.startContract)\n    ]);\n\n    const tokenBalance = this.state.action === 'wrap' ? balanceStart : balanceDest;\n    // console.log('loadBalance',this.props.toolProps.startContract,parseFloat(balanceStart),this.props.toolProps.destContract,parseFloat(balanceDest));\n\n    this.setState({\n      balanceDest,\n      balanceStart,\n      tokenBalance\n    });\n  }\n\n  updateActionData(){\n    let infoBox = null;\n    let tokenConfig = null;\n    let tokenBalance = null;\n    let selectedToken = null;\n    let approveEnabled = true;\n    let approveDescription = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        approveEnabled = true;\n        tokenBalance = this.state.balanceStart;\n        tokenConfig = this.props.toolProps.startContract;\n        selectedToken = this.props.toolProps.startContract.name;\n        approveDescription = `To Mint new ${this.props.toolProps.destContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileDownload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.deposit\n          // },\n          text:`Wrap your ${this.props.toolProps.startContract.name} and get ${this.props.toolProps.destContract.name}`\n        };\n      break;\n      case 'unwrap':\n        selectedToken = this.props.toolProps.destContract.name;\n        approveEnabled = false;\n        tokenBalance = this.state.balanceDest;\n        tokenConfig = this.props.toolProps.destContract;\n        approveDescription = `To withdraw your ${this.props.toolProps.startContract.name} you need to approve the Smart-Contract first`;\n        infoBox = {\n          icon:'FileUpload',\n          // iconProps:{\n          //   color:this.props.theme.colors.transactions.action.redeem\n          // },\n          text:`Unwrap your ${this.props.toolProps.destContract.name} and get back ${this.props.toolProps.startContract.name}`\n        };\n      break;\n      default:\n      break;\n    }\n\n    this.setState({\n      infoBox,\n      tokenConfig,\n      tokenBalance,\n      selectedToken,\n      approveEnabled,\n      approveDescription\n    },() => {\n      this.loadBalance();\n    });\n  }\n\n  setAction(action){\n    this.setState({\n      action\n    });\n  }\n\n  transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n\n    switch (this.state.action){\n      case 'wrap':\n        const mintLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let mintedAmount = mintLog ? parseInt(mintLog.data,16) : amount;\n        mintedAmount = this.functionsUtil.fixTokenDecimals(mintedAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${mintedAmount.toFixed(4)} ${this.props.toolProps.destContract.name}</strong>`\n        }\n      break;\n      case 'unwrap':\n        const withdrawLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.destContract.address.toLowerCase() ) : null;\n        let withdrawnAmount = withdrawLog ? parseInt(withdrawLog.data,16) : amount;\n        withdrawnAmount = this.functionsUtil.fixTokenDecimals(withdrawnAmount,this.state.tokenConfig.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have received <strong>${withdrawnAmount.toFixed(4)} ${this.props.toolProps.startContract.name}</strong>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Update balances\n    this.loadBalance();\n\n    this.setState({\n      infoBox\n    });\n  }\n\n  getTransactionParams(amount){\n    const params = {};\n    switch (this.state.action){\n      case 'wrap':\n        params.value = amount;\n        params.methodParams = [];\n        params.methodName = this.props.toolProps.startContract.wrapMethod;\n      break;\n      case 'unwrap':\n        params.value = null;\n        params.methodParams = [amount];\n        params.methodName = this.props.toolProps.destContract.unwrapMethod;\n      break;\n      default:\n      break;\n    }\n    return params;\n  }\n\n  render() {\n\n    const fullWidth = !!this.props.fullWidth;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        mt={[2,fullWidth ? 2 : 3]}\n      >\n        <Flex\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n          width={[1,fullWidth ? 1 : 0.36]}\n        >\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : (\n              <Box\n                width={1}\n              >\n                {\n                  !this.props.action && (\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <Text\n                        mb={2}\n                      >\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Wrap'}\n                          iconColor={'deposit'}\n                          icon={'ArrowDownward'}\n                          iconBgColor={'#ced6ff'}\n                          isActive={ this.state.action === 'wrap' }\n                          handleClick={ e => this.setAction('wrap') }\n                        />\n                        <CardIconButton\n                          {...this.props}\n                          cardProps={{\n                            px:3,\n                            py:3,\n                            width:0.48\n                          }}\n                          text={'Unwrap'}\n                          iconColor={'redeem'}\n                          icon={'ArrowUpward'}\n                          iconBgColor={'#ceeff6'}\n                          isActive={ this.state.action === 'unwrap' }\n                          handleClick={ e => this.setAction('unwrap') }\n                        />\n                      </Flex>\n                    </Flex>\n\n                  )\n                }\n                <Box\n                  width={1}\n                  my={fullWidth ? 2 : 3}\n                >\n                  {\n                    this.state.tokenBalance!==null ? (\n                      <SendTxWithBalance\n                        {...this.props}\n                        approveEnabled={false}\n                        action={this.state.action}\n                        infoBox={this.state.infoBox}\n                        tokenConfig={this.state.tokenConfig}\n                        tokenBalance={this.state.tokenBalance}\n                        contractInfo={this.props.toolProps.destContract}\n                        callback={this.transactionSucceeded.bind(this)}\n                        approveDescription={this.state.approveDescription}\n                        // changeInputCallback={this.changeInputCallback.bind(this)}\n                        getTransactionParams={this.getTransactionParams.bind(this)}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} to {this.state.action} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </SendTxWithBalance>\n                    ) : (\n                      <Flex\n                        width={1}\n                      >\n                        <FlexLoader\n                          flexProps={{\n                            flexDirection:'row'\n                          }}\n                          loaderProps={{\n                            size:'30px'\n                          }}\n                          textProps={{\n                            ml:2\n                          }}\n                          text={'Loading Balance...'}\n                        />\n                      </Flex>\n                    )\n                  }\n                </Box>\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenWrapper;","import theme from '../theme';\nimport { Pie } from '@nivo/pie';\nimport React, { Component } from 'react';\nimport { Flex, Text, Image } from \"rimble-ui\";\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\n\nclass PortfolioDonut extends Component {\n  state = {\n    chartData:null,\n    totalFunds:null,\n    parentWidth:null,\n    selectedToken:null,\n    selectedTokenConfig:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentWillUnmount() {\n    \n  }\n\n  async componentDidMount(){\n    this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  async loadPortfolio() {\n\n    const portfolio = {};\n    let totalFunds = this.functionsUtil.BNify(0);\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.availableTokens),async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const idleTokenBalance = await this.functionsUtil.getTokenBalance(tokenConfig.idle.token,this.props.account);\n\n      if (idleTokenBalance){\n        const tokenPrice = await this.functionsUtil.getIdleTokenPrice(tokenConfig);\n        const tokenBalance = await this.functionsUtil.convertTokenBalance(idleTokenBalance.times(tokenPrice),token,tokenConfig,isRisk);\n\n        if (tokenBalance.gt(0)){\n          portfolio[token] = tokenBalance;\n\n          // Increment total balance\n          totalFunds = totalFunds.plus(tokenBalance);\n        }\n      }\n    });\n\n    // Add Gov Tokens\n    const govTokensUserBalances = await this.functionsUtil.getGovTokensUserBalances(this.props.account,this.props.availableTokens,'DAI',null,true);\n    if (govTokensUserBalances){\n      Object.keys(govTokensUserBalances).forEach( govToken => {\n        const govTokenBalance = this.functionsUtil.BNify(govTokensUserBalances[govToken]);\n        portfolio[govToken] = govTokenBalance;\n        totalFunds = totalFunds.plus(govTokenBalance);\n      });\n    }\n\n    const chartData = [];\n\n    Object.keys(portfolio).forEach(token => {\n      const tokenBalance = portfolio[token];\n      if (tokenBalance.gt(0)){\n        const tokenPercentage = tokenBalance.div(totalFunds).times(100);\n        let tokenColorHsl = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','hsl']);\n        tokenColorHsl = tokenColorHsl ? tokenColorHsl.join(',') : '0,0%,0%';\n        chartData.push({\n          id:token,\n          color:'hsl('+tokenColorHsl+')',\n          value:Math.round(tokenPercentage),\n          label:token.substr(0,1).toUpperCase()+token.substr(1),\n        });\n      }\n    });\n\n    this.setState({\n      portfolio,\n      chartData,\n      totalFunds\n    });\n  }\n\n  render() {\n\n    const chartProps = {\n      padAngle:0,\n      animate:true,\n      borderWidth:0,\n      cornerRadius:0,\n      innerRadius:0.65,\n      motionDamping:15,\n      motionStiffness:90,\n      colors:d => d.color,\n      tooltipFormat: v => v+'%',\n      sliceLabel: d => {\n        if (parseFloat(d.value)>=5){\n          return d.value+'%';\n        } else {\n          return null;\n        }\n      },\n      radialLabel: d => {\n        return null;//Object.keys(this.props.availableTokens).indexOf(d.label.toUpperCase());\n      },\n      theme:{\n        tooltip: {\n          container: {\n            display: 'none'\n          },\n        },\n        labels:{\n          text:{\n            fontSize:16,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        },\n        legends:{\n          text:{\n            fontSize:13,\n            fontWeight:500,\n            fontFamily: theme.fonts.sansSerif\n          }\n        }\n      },\n      slicesLabelsSkipAngle:5,\n      radialLabelsSkipAngle:10,\n      radialLabelsTextXOffset:0,\n      slicesLabelsTextColor:'#fff',\n      radialLabelsTextColor:'#333',\n      radialLabelsLinkStrokeWidth:0,\n      radialLabelsLinkDiagonalLength:0,\n      radialLabelsLinkHorizontalLength:0,\n      radialLabelsLinkColor:{ from: 'color' },\n      radialLabelsLinkOffset:-parseInt(this.state.parentWidth*0.2),\n      margin: this.props.isMobile ? { top: 15, right: 25, bottom: 30, left: 25 } : { top: 30, right: 50, bottom: 60, left: 50 },\n      onMouseEnter:(data, e) => {\n        const selectedToken = data.id;\n        const selectedTokenConfig = selectedToken ? this.props.availableTokens[selectedToken] || this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]) : null;\n        this.setState({\n          selectedToken,\n          selectedTokenConfig\n        });\n      },\n      onMouseLeave:(data, e) => {\n        this.setState({\n          selectedToken:null,\n          selectedTokenConfig:null\n        });\n      },\n      legends:[\n        {\n          itemWidth: 60,\n          itemHeight: 18,\n          translateY: this.props.isMobile ? 25 : 50,\n          symbolSize: 10,\n          anchor: 'bottom',\n          direction: 'row',\n          itemTextColor: theme.colors.legend,\n          symbolShape: 'circle',\n          effects: [\n            {\n              on: 'hover',\n              style: {\n                itemTextColor: '#000'\n              }\n            }\n          ]\n        }\n      ]\n    };\n\n    const selectedToken = this.state.selectedToken !== null && this.state.portfolio[this.state.selectedToken] ? this.state.portfolio[this.state.selectedToken] : false;\n    const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'icon']);\n    const convertToken = this.state.selectedToken ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.state.selectedToken.toUpperCase(),'conversionRateField']) : false;\n\n    return (\n      <Flex\n        width={1}\n      >\n        { \n          (this.state.totalFunds || selectedToken) && \n            <Flex\n              zIndex={0}\n              top={['32%','35%']}\n              left={['23%','27%']}\n              textAlign={'center'}\n              alignItems={'center'}\n              width={['55%','46%']}\n              position={'absolute'}\n              height={['40%','35%']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              {\n                selectedToken ? (\n                  <>\n                    <AssetField\n                      fieldInfo={{\n                        name:'icon',\n                        props:{\n                          mb:1,\n                          height:'2.2em'\n                        }\n                      }}\n                      token={this.state.selectedToken}\n                      tokenConfig={this.state.selectedTokenConfig}\n                    />\n                    <SmartNumber\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      unit={ convertToken ? '$' : null}\n                      number={this.state.portfolio[this.state.selectedToken]}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      {this.state.selectedToken}\n                    </Text>\n                  </>\n                ) : (\n                  <>\n                    <Image\n                      mb={1}\n                      height={'2.2em'}\n                      src={strategyIcon}\n                    />\n                    <SmartNumber\n                      unit={'$'}\n                      unitProps={{\n                        ml:2,\n                        fontSize:4,\n                        fontWeight:3\n                      }}\n                      decimals={2}\n                      fontSize={[3,4]}\n                      maxPrecision={5}\n                      fontWeight={[3,4]}\n                      number={this.state.totalFunds}\n                    />\n                    <Text\n                      fontWeight={3}\n                      fontSize={[1,2]}\n                      color={'cellTitle'}\n                    >\n                      Total funds\n                    </Text>\n                  </>\n                )\n              }\n            </Flex>\n        }\n        <GenericChart\n          type={Pie}\n          {...chartProps}\n          showLoader={true}\n          data={this.state.chartData}\n          parentId={this.props.parentId}\n          parentIdHeight={this.props.parentId}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default PortfolioDonut;\n","import React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport { Card, Flex, Image, Text } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\n\nclass EarningsEstimation extends Component {\n  state = {\n    tokensEarnings:null,\n    estimationStepsPerc:null,\n    estimationStepsOptions:null,\n    estimationStepsDefaultOption:null,\n    estimationSteps:{\n      0:{\n        'Month':{\n          perc:1/12,\n          width:1/3\n        },\n        '2 months':{\n          perc:1/6,\n          width:1/3\n        },\n        '3 months':{\n          perc:1/4,\n          width:1/3,\n          optionName:'3M'\n        }\n      },\n      25:{\n        '3 months':{\n          perc:3/12,\n          width:3/12\n        },\n        '8 months':{\n          perc:8/12,\n          width:5/12\n        },\n        'Year':{\n          perc:1,\n          width:4/12,\n          optionName:'1Y'\n        }\n      },\n      90:{\n        'Year':{\n          perc:1,\n          width:1/3,\n        },\n        '2 Years':{\n          perc:2,\n          width:1/3,\n        },\n        '5 Years':{\n          perc:5,\n          width:3/5,\n          optionName:'5Y'\n        }\n      }\n    }\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadEarnings();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  setEstimationStepsPerc(estimationStepsPerc){\n    this.setState({\n      estimationStepsPerc\n    });\n  }\n\n  async loadEarnings(){\n    let stepsCount = {};\n    let tokensEarnings = {};\n    // let estimationStepsPerc = 0;\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const aggregatedEarnings = {\n      earnings:this.functionsUtil.BNify(0),\n      amountLent:this.functionsUtil.BNify(0),\n      earningsYear:this.functionsUtil.BNify(0),\n    };\n\n    await this.functionsUtil.asyncForEach(this.props.enabledTokens,async (token) => {\n      const tokenConfig = this.props.availableTokens[token];\n      const amountDeposited = await this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account);\n\n      const [amountLent,avgBuyPrice,idleTokenPrice] = await Promise.all([\n        this.functionsUtil.convertTokenBalance(amountDeposited,token,tokenConfig,isRisk),\n        this.functionsUtil.getAvgBuyPrice([token],this.props.account),\n        this.functionsUtil.getIdleTokenPrice(tokenConfig)\n      ]);\n\n      const earningsPerc = idleTokenPrice.div(avgBuyPrice[token]).minus(1);\n      const earnings = amountLent.times(earningsPerc);\n\n      let earningsYear = 0;\n      let tokenAPY = 0;\n      const tokenAprs = await this.functionsUtil.getTokenAprs(tokenConfig);\n      if (tokenAprs && tokenAprs.avgApr !== null){\n        tokenAPY = tokenAprs.avgApy;\n        earningsYear = amountLent.times(tokenAPY.div(100));\n      }\n\n      const earningsPercStep = Math.floor(earnings.div(earningsYear).times(100));\n      \n      const possibleSteps = Object.keys(this.state.estimationSteps).filter(perc => perc<=earningsPercStep);\n      const maxPossibleStep = parseInt(possibleSteps.pop());\n\n      stepsCount[maxPossibleStep] = stepsCount[maxPossibleStep] ? stepsCount[maxPossibleStep]+1 : 1;\n\n      if (!this.functionsUtil.BNify(amountLent).isNaN() && !this.functionsUtil.BNify(idleTokenPrice).isNaN() && !this.functionsUtil.BNify(earnings).isNaN() && !this.functionsUtil.BNify(earningsYear).isNaN()){\n        tokensEarnings[token] = {\n          earnings,\n          amountLent,\n          earningsYear,\n          idleTokenPrice\n        };\n\n        // const earningsUSD = await this.functionsUtil.convertTokenBalance(earningsYearings,token,tokenConfig,isRisk);\n        // const amountLentUSD = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n        // const earningsYearUSD = await this.functionsUtil.convertTokenBalance(earningsYear,token,tokenConfig,isRisk);\n\n        aggregatedEarnings.earnings = aggregatedEarnings.earnings.plus(earnings);\n        aggregatedEarnings.amountLent = aggregatedEarnings.amountLent.plus(amountLent);\n        aggregatedEarnings.earningsYear = aggregatedEarnings.earningsYear.plus(earningsYear);\n      }\n    });\n\n    const maxCountStep = Object.keys(stepsCount).reduce( (maxCountStep,step) => {\n      const count = stepsCount[step];\n      if (count>maxCountStep.count){\n        maxCountStep.step = parseInt(step);\n        maxCountStep.count = parseInt(count);\n      }\n      return maxCountStep;\n    },{\n      step:0,\n      count:0\n    });\n\n    const estimationStepsPerc = maxCountStep.step || parseInt(Object.keys(this.state.estimationSteps)[1]);\n\n    const orderedTokensEarnings = {};\n    this.props.enabledTokens.forEach( token => {\n      if (tokensEarnings[token]){\n        orderedTokensEarnings[token] = tokensEarnings[token];\n      }\n    });\n\n    tokensEarnings = orderedTokensEarnings;\n\n    // Add USD aggregated earnings\n    if (Object.keys(tokensEarnings).length>1){\n      tokensEarnings['USD'] = aggregatedEarnings;\n    }\n\n    let estimationStepsDefaultOption = null;\n    const estimationStepsOptions = Object.keys(this.state.estimationSteps).map( step => {\n      const estimationStep = Object.values(this.state.estimationSteps[step]).pop();\n      const label = estimationStep.optionName ? estimationStep.optionName : Object.keys(this.state.estimationSteps[step]).pop();\n      const value = parseInt(step);\n      const option = { value, label };\n\n      if (value === estimationStepsPerc){\n        estimationStepsDefaultOption = option;\n      }\n      return option;\n    });\n\n    this.setState({\n      tokensEarnings,\n      estimationStepsPerc,\n      estimationStepsOptions,\n      estimationStepsDefaultOption,\n    });\n  }\n\n  render() {\n\n    if (!this.state.tokensEarnings){\n      return (\n        <FlexLoader\n          flexProps={{\n            flexDirection:'row',\n            minHeight:this.props.height\n          }}\n          loaderProps={{\n            size:'30px'\n          }}\n          textProps={{\n            ml:2\n          }}\n          text={'Loading estimations...'}\n        />\n      );\n    }\n\n    const estimationSteps = this.state.estimationSteps[this.state.estimationStepsPerc] ? this.state.estimationSteps[this.state.estimationStepsPerc] : this.state.estimationSteps[0];\n\n    return (\n      <Card\n        pr={0}\n        my={1}\n        width={1}\n        px={[3,4]}\n        py={[2,3]}\n        boxShadow={1}\n        borderRadius={2}\n        borderColor={'cardBorder'}\n        backgroundColor={'cardBg'}\n      >\n        <Flex\n          mt={2}\n          mb={3}\n          zIndex={9999}\n          justifyContent={'flex-end'}\n        >\n          <Flex\n            zIndex={9999}\n            width={[1,0.2]}\n            flexDirection={'column'}\n          >\n            <GenericSelector\n              innerProps={{\n                p:0,\n                px:1\n              }}\n              name={'estimation-step'}\n              options={this.state.estimationStepsOptions}\n              onChange={ v => this.setEstimationStepsPerc(v) }\n              defaultValue={this.state.estimationStepsDefaultOption}\n            />\n          </Flex>\n        </Flex>\n        {\n          Object.keys(this.state.tokensEarnings).map((token,tokenIndex) => {\n            const tokenConfig = this.props.availableTokens[token];\n            const tokenEarnings = this.state.tokensEarnings[token];\n            const estimationStepPerc = this.functionsUtil.BNify(Object.values(estimationSteps).pop().perc);\n            const finalEarnings = tokenEarnings.earningsYear.times(estimationStepPerc);\n            const cursorPerc = finalEarnings.gt(0) ? Math.min(1,parseFloat(tokenEarnings.earnings.div(finalEarnings))) : 1;\n            const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon :`images/tokens/${token}.svg`;\n            const tokenRGBColor = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'color','rgb']).join(',');\n            // console.log(tokenEarnings.earnings.toFixed(10),tokenEarnings.earningsYear.toFixed(10),finalEarnings.toFixed(10),cursorPerc.toFixed(10),estimationStepPerc.toFixed(10));\n            return (\n              <Flex\n                id={`asset-${token}`}\n                flexDirection={'row'}\n                key={`asset-${token}`}\n                borderTop={ token === 'USD' ? `1px solid ${this.props.theme.colors.divider}` : null }\n              >\n                <Flex\n                  width={[1,0.93]}\n                  position={'relative'}\n                >\n                  <Flex\n                    width={1}\n                    height={'100%'}\n                    position={'absolute'}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                    >\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      height={'100%'}\n                      flexDirection={'row'}\n                    >\n                      {\n                        Object.keys(estimationSteps).map((label,estimateIndex) => {\n                          const estimationStep = estimationSteps[label];\n                          const estimationStepEarnings = tokenEarnings.earningsYear.times(this.functionsUtil.BNify(estimationStep.perc));\n                          let estimationStepEarningsFormatted = this.functionsUtil.formatMoney(estimationStepEarnings,this.props.isMobile ? 2 : estimationStepEarnings.lt(1) ? 3 : 2);\n                          const conversionRateField = this.functionsUtil.getGlobalConfig(['stats','tokens',token.toUpperCase(),'conversionRateField']);\n                          if (conversionRateField){\n                            estimationStepEarningsFormatted = '$ '+estimationStepEarningsFormatted;\n                          }\n                          return (\n                            <Flex\n                              pr={2}\n                              justifyContent={'flex-end'}\n                              width={estimationStep.width}\n                              pt={ token === 'USD' ? 2 : null }\n                              key={`asset-estimate-${token}-${estimateIndex}`}\n                              borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                            >\n                              {\n                                (token === 'USD' || (estimateIndex === Object.keys(estimationSteps).length-1)) && \n                                  <Text\n                                    fontWeight={3}\n                                    fontSize={[0,'1em']}\n                                    style={{\n                                      wordBreak:'break-all'\n                                    }}\n                                    color={tokenEarnings.earnings.gte(estimationStepEarnings) ? 'copyColor' : 'legend'}\n                                  >\n                                    {estimationStepEarningsFormatted}\n                                  </Text>\n                              }\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                  <Flex\n                    width={1}\n                    zIndex={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'center'}\n                    pt={ token === 'USD' ? ['2em','2.8em'] : '1.4em' }\n                    pb={ tokenIndex<Object.keys(this.state.tokensEarnings).length-1 ? '1em' : 0 }\n                  >\n                    <Flex\n                      width={[0.15,0.1]}\n                      justifyContent={['flex-start','flex-end']}\n                    >\n                      <Text\n                        pr={[0,2]}\n                        fontSize={[0,3]}\n                        fontWeight={[3,4]}\n                      >\n                        {token}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      width={[0.85,0.9]}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      height={['20px','35px']}\n                      justifyContent={'flex-start'}\n                    >\n                      <Flex\n                        height={'100%'}\n                        width={cursorPerc}\n                        backgroundColor={'cardBg'}\n                      >\n                        <Flex\n                          height={'100%'}\n                          width={'100%'}\n                          borderRadius={['0 20px 20px 0','0 35px 35px 0']}\n                          style={{background:`linear-gradient(90deg, rgba(${tokenRGBColor},0) 0%, rgba(${tokenRGBColor},0.1) 30%, rgba(${tokenRGBColor},1) 100%)`}}\n                        ></Flex>\n                      </Flex>\n                      <Flex\n                        pl={2}\n                        width={'auto'}\n                        height={'100%'}\n                        alignItems={'center'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Image src={tokenIcon} height={['1.4em','2.2em']} />\n                      </Flex>\n                      {\n                        <Flex\n                          pl={2}\n                          alignItems={'center'}\n                        >\n                          {\n                            token !== 'USD' ? (\n                              <AssetField\n                                {...this.props}\n                                token={token}\n                                tokenConfig={tokenConfig}\n                                fieldInfo={{\n                                  name:'earningsCounter',\n                                  props:{\n                                    decimals:this.props.isMobile ? 6 : 7,\n                                    maxPrecision:this.props.isMobile ? 9 : 10,\n                                    style:{\n                                      color:this.props.theme.colors.copyColor,\n                                      fontWeight:this.props.isMobile ? 500 : 700,\n                                      fontSize:this.props.isMobile ? '14px' : '22px',\n                                    }\n                                  }\n                                }}\n                              />\n                            ) : (\n                              <TotalEarningsCounter\n                                {...this.props}\n                                decimals={this.props.isMobile ? 6 : 7}\n                                maxPrecision={this.props.isMobile ? 9 : 10}\n                                counterStyle={{\n                                  color:this.props.theme.colors.copyColor,\n                                  fontWeight:this.props.isMobile ? 500 : 700,\n                                  fontFamily:this.props.theme.fonts.sansSerif,\n                                  fontSize:this.props.isMobile ? '14px' : '22px',\n                                }}\n                              />\n                            )\n                          }\n                        </Flex>\n                      }\n                    </Flex>\n                  </Flex>\n                </Flex>\n                {\n                  !this.props.isMobile && \n                    <Flex width={0.07} alignItems={'flex-start'} justifyContent={'flex-end'}>\n                    </Flex>\n                }\n              </Flex>\n            )\n          })\n        }\n        <Flex\n          flexDirection={'row'}\n        >\n          <Flex\n            width={[1,0.93]}\n            position={'relative'}\n          >\n            <Flex\n              width={1}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <Flex width={[0.15,0.1]}></Flex>\n              <Flex\n                width={[0.85,0.9]}\n                flexDirection={'row'}\n              >\n                {\n                  Object.keys(estimationSteps).map((estimationLabel,estimateIndex) => {\n                    const estimationStep = estimationSteps[estimationLabel];\n                    return (\n                      <Flex\n                        pt={2}\n                        pr={[1,2]}\n                        justifyContent={'flex-end'}\n                        width={estimationStep.width}\n                        key={`estimate-label-${estimateIndex}`}\n                        borderRight={`1px solid ${this.props.theme.colors.divider}`}\n                      >\n                        <Text\n                          fontWeight={3}\n                          fontSize={[0,2]}\n                          color={'legend'}\n                        >\n                          {estimationLabel}\n                        </Text>\n                      </Flex>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </Flex>\n          {\n            !this.props.isMobile && \n              <Flex width={0.07} alignItems={'flex-start'} justifyContent={'center'}>\n                <Text fontWeight={4} fontSize={3}></Text>\n              </Flex>\n          }\n        </Flex>\n      </Card>\n    );\n  }\n}\n\nexport default EarningsEstimation;\n","import React, { Component } from 'react';\nimport { Flex, Icon, Text, Image } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass DashboardIconButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n  }\n\n  render() {\n    return (\n      <DashboardCard\n        cardProps={{\n          pr:2,\n          py:[2,3],\n          pl:[2,3],\n        }}\n        isActive={false}\n        isInteractive={true}\n        handleClick={this.props.handleClick}\n      >\n        <Flex\n          height={'100%'}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'center'}\n        > \n          <Flex\n            px={[1,0]}\n          >\n            {\n              this.props.icon ? (\n                <Icon\n                  name={this.props.icon}\n                  size={this.props.isMobile ? '1.8em' : '3em'}\n                  color={this.props.iconColor ? this.props.iconColor : 'redeem'}\n                />\n              ) : this.props.image && (\n                <Image\n                  src={this.props.image}\n                  width={this.props.isMobile ? '1.8em' : '2.7em'}\n                  height={this.props.isMobile ? '1.8em' : '2.7em'}\n                />\n              )\n            }\n          </Flex>\n          <Flex\n            ml={[2,3]}\n            flexDirection={'column'}\n            alignItems={'flex-start'}\n            justifyContent={'center'}\n          >\n            <Text\n              fontWeight={3}\n              fontSize={[1,3]}\n            >\n              {this.props.title}\n            </Text>\n            <Text\n              fontWeight={2}\n              fontSize={[0,2]}\n              color={'cellText'}\n            >\n              {this.props.text}\n            </Text>\n          </Flex>\n          <Icon\n            align={'center'}\n            color={'cellText'}\n            name={'KeyboardArrowRight'}\n            size={this.props.isMobile ? '1.8em' : '2.5em'}\n          />\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default DashboardIconButton;\n","import { Flex } from \"rimble-ui\";\nimport Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport CustomList from '../CustomList/CustomList';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass PolygonBridgeTransactions extends Component {\n\n  state = {\n    loaded:false,\n    bridgeEnabled:false,\n    polygonTransactions:null,\n    polygonTransactionsAvailableTokens:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadData();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const maticPOSClientChanged = prevProps.maticPOSClient !== this.props.maticPOSClient;\n    if (accountChanged || maticPOSClientChanged){\n      this.loadData();\n    }\n  }\n\n  async loadData(){\n    if (!this.props.account || !this.props.maticPOSClient){\n      return false;\n    }\n\n    let polygonTransactionsAvailableTokens = null;\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const bridgeEnabled = polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id);\n\n    if (!bridgeEnabled){\n      return this.setState({\n        loaded:true,\n        bridgeEnabled\n      });\n    }\n\n    const polygonTransactions = await this.functionsUtil.getPolygonBridgeTxs(this.props.account);\n\n    // console.log('polygonTransactions',this.props.account,this.props.web3,polygonTransactions);\n\n    if (polygonTransactions && polygonTransactions.length>0){\n      polygonTransactionsAvailableTokens = polygonTransactions.map( (tx) => {\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge','props','availableTokens',tx.tokenSymbol]);\n        let actionIcon = null;\n        switch (tx.action){\n          default:\n          case 'Deposit':\n            actionIcon = 'ArrowDownward';\n          break;\n          case 'Withdraw':\n            actionIcon = 'ArrowUpward';\n          break;\n          case 'Exit':\n            actionIcon = 'Undo';\n          break;\n        }\n        const depositInfo = {\n          actionIcon,\n          amount:tx.value,\n          token:tx.tokenSymbol,\n          action:tx.action.toUpperCase(),\n          bridgeType:tx.bridgeType.toUpperCase(),\n          status:tx.included ? 'Completed' : 'pending',\n          hash:this.functionsUtil.shortenHash(tx.hash),\n          statusIcon:tx.included ? 'Done' : 'Timelapse',\n          actionIconProps:{\n            color:this.props.theme.colors.transactions.action[tx.action.toLowerCase()],\n            bgColor:this.props.theme.colors.transactions.actionBg[tx.action.toLowerCase()]\n          },\n          url:this.functionsUtil.getEtherscanTransactionUrl(tx.hash,tx.networkId),\n          date:this.functionsUtil.strToMoment(parseInt(tx.timeStamp)*1000).format('DD MMM, YYYY'),\n          statusIconProps:{\n            color:tx.included ? this.props.theme.colors.transactions.status.completed : this.props.theme.colors.transactions.status.pending\n          },\n          tokenIcon:tokenConfig.icon || this.functionsUtil.getGlobalConfig(['stats','tokens',tx.tokenSymbol.toUpperCase(),'icon']) || `images/tokens/${tx.tokenSymbol}.svg`\n        };\n        return depositInfo;\n      });\n    }\n\n    // console.log('PolygonBridgeTransactions',polygonTransactions,polygonTransactionsAvailableTokens);\n\n    this.setState({\n      loaded:true,\n      bridgeEnabled,\n      polygonTransactions,\n      polygonTransactionsAvailableTokens\n    });\n  }\n\n  render() {\n\n    if (!this.state.loaded || !this.state.bridgeEnabled){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          this.props.title && ((this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0) || this.props.children) && (\n            <Title\n              {...this.props.titleProps}\n            >\n              {this.props.title}\n            </Title>\n          )\n        }\n        {\n          this.state.polygonTransactionsAvailableTokens && this.state.polygonTransactionsAvailableTokens.length>0 ? (\n            <CustomList\n              paginationEnabled={true}\n              handleClick={(props) => this.functionsUtil.openWindow(props.row.url)}\n              cols={[\n                {\n                  title:'HASH',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.18],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'bgIcon',\n                      path:['actionIcon'],\n                    },\n                    {\n                      type:'text',\n                      path:['hash'],\n                      props:{\n                        ml:[0,2]\n                      }\n                    },\n                  ]\n                },\n                {\n                  title:'ACTION',\n                  props:{\n                    width:[0.25,0.14],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['action'],\n                    },\n                  ]\n                },\n                {\n                  title:'DATE',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['date'],\n                    },\n                  ]\n                },\n                {\n                  title:'BRIDGE',\n                  mobile:false,\n                  props:{\n                    width:[0.44,0.12],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'text',\n                      path:['bridgeType'],\n                    },\n                  ]\n                },\n                {\n                  title:'STATUS',\n                  props:{\n                    width:[0.25,0.15],\n                    justifyContent:['center','flex-start']\n                  },\n                  fields:[\n                    {\n                      type:'icon',\n                      mobile:false,\n                      path:['statusIcon'],\n                      props:{\n                        mr:2,\n                        size:this.props.isMobile ? '1.2em' : '1.8em'\n                      }\n                    },\n                    {\n                      name:'custom',\n                      path:['status'],\n                      props:{\n                        style:{\n                          textTransform:'capitalize'\n                        }\n                      }\n                    }\n                  ]\n                },\n                {\n                  mobile:false,\n                  title:'AMOUNT',\n                  props:{\n                    width:[0.25, 0.15],\n                  },\n                  fields:[\n                    {\n                      type:'number',\n                      path:['amount'],\n                      props:{\n                        decimals: 4\n                      }\n                    },\n                    {\n                      name:'tokenName',\n                      props:{\n                        ml:2\n                      }\n                    }\n                  ]\n                },\n                {\n                  title:'TOKEN',\n                  props:{\n                    width:[0.25,0.13]\n                  },\n                  fields:[\n                    {\n                      type:'image',\n                      path:['tokenIcon'],\n                      props:{\n                        mr:2,\n                        height:['1.4em','1.6em']\n                      }\n                    },\n                    {\n                      type:'text',\n                      path:['token'],\n                    }\n                  ]\n                },\n              ]}\n              {...this.props}\n              rows={this.state.polygonTransactionsAvailableTokens}\n            />\n          ) : this.props.children\n        }\n      </Flex>\n    )\n  }\n}\n\nexport default PolygonBridgeTransactions;","import Title from '../Title/Title';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetsList from '../AssetsList/AssetsList';\n// import RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport PortfolioDonut from '../PortfolioDonut/PortfolioDonut';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport PortfolioEquity from '../PortfolioEquity/PortfolioEquity';\n// import ActiveCoverages from '../ActiveCoverages/ActiveCoverages';\nimport TransactionsList from '../TransactionsList/TransactionsList';\nimport EarningsEstimation from '../EarningsEstimation/EarningsEstimation';\nimport { Flex, Box, Heading, Text, Tooltip, Icon, Loader } from \"rimble-ui\";\nimport DashboardIconButton from '../DashboardIconButton/DashboardIconButton';\nimport TotalBalanceCounter from '../TotalBalanceCounter/TotalBalanceCounter';\nimport TotalEarningsCounter from '../TotalEarningsCounter/TotalEarningsCounter';\nimport PolygonBridgeTransactions from '../PolygonBridgeTransactions/PolygonBridgeTransactions';\n\n// const env = process.env;\n\nclass StrategyPage extends Component {\n\n  state = {\n    portfolio:null,\n    depositedTokens:[],\n    tokensToMigrate:{},\n    aggregatedValues:[],\n    remainingTokens:null,\n    batchedDeposits:null,\n    portfolioLoaded:false,\n    portfolioLoading:false,\n    availableGovTokens:null,\n    portfolioEquityStartDate:null,\n    batchedDepositsAvailableTokens:null,\n    portfolioEquityQuickSelection:'week',\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentDidMount(){\n    await this.loadPortfolio();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const availableTokensChanged = JSON.stringify(prevProps.availableTokens) !== JSON.stringify(this.props.availableTokens);\n    if (accountChanged || availableTokensChanged){\n      this.setStateSafe({\n        portfolioLoaded:false\n      },() => {\n        this.loadPortfolio();\n      });\n    }\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return await this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  setPortfolioEquityQuickSelection(portfolioEquityQuickSelection){\n    this.setStateSafe({\n      portfolioEquityQuickSelection\n    });\n  }\n\n  async loadPortfolio(){\n    const availableTokens = this.props.availableTokens || {};\n    // const currentNetwork = this.functionsUtil.getRequiredNetwork();\n\n    if (this.state.portfolioLoaded || this.state.portfolioLoading){\n      return false;\n    }\n\n    await this.setStateSafe({\n      portfolioLoading:true\n    });\n\n    // Load portfolio if account is set\n    if (this.props.account){\n      const newState = {};\n      const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n      // Load and process Etherscan Txs\n      this.functionsUtil.getEtherscanTxs(this.props.account,firstBlockNumber,'latest',Object.keys(availableTokens))\n\n      // Load data\n      const [\n        batchedDeposits,\n        portfolio,\n      ] = await Promise.all([\n        // Load claimable batches\n        [],//this.functionsUtil.getBatchedDeposits(this.props.account),\n        // Load portfolio\n        this.functionsUtil.getAccountPortfolio(availableTokens,this.props.account),\n      ]);\n\n      newState.portfolio = portfolio;\n\n      newState.batchedDeposits = batchedDeposits && Object.keys(batchedDeposits).length>0 ? batchedDeposits : null;\n\n      if (newState.batchedDeposits){\n        newState.batchedDepositsAvailableTokens = Object.keys(newState.batchedDeposits).reduce( (batchedDepositsAvailableTokens,token) => {\n          const batchInfo = newState.batchedDeposits[token];\n          const tokenConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit','props','availableTokens',token]);\n          if (tokenConfig.strategy === this.props.selectedStrategy){\n            switch (batchInfo.status){\n              case 'pending':\n                tokenConfig.statusIcon = 'Timelapse';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.pending\n                };\n              break;\n              case 'executed':\n                tokenConfig.statusIcon = 'Done';\n                tokenConfig.statusIconProps = {\n                  color:this.props.theme.colors.transactions.status.completed\n                };\n              break;\n              default:\n              break;\n            }\n            tokenConfig.token = token;\n            tokenConfig.status = batchInfo.status;\n            tokenConfig.deposited = batchInfo.batchDeposits;\n            tokenConfig.redeemable = batchInfo.batchRedeems;\n            batchedDepositsAvailableTokens[tokenConfig.baseToken] = tokenConfig;\n          }\n          return batchedDepositsAvailableTokens;\n        },{});\n      }\n\n      newState.depositedTokens = [];\n      newState.tokensToMigrate = [];\n\n      if (portfolio){\n        const depositedTokens = Object.keys(portfolio.tokensBalance).filter(token => ( this.functionsUtil.BNify(portfolio.tokensBalance[token].idleTokenBalance).gt(0) ));\n\n        newState.depositedTokens = depositedTokens;\n\n        const isRisk = this.props.selectedStrategy === 'risk';\n\n        let avgAPY = this.functionsUtil.BNify(0);\n        // let avgScore = this.functionsUtil.BNify(0);\n        let totalAmountLent = this.functionsUtil.BNify(0);\n        // let totalBalanceWithScore = this.functionsUtil.BNify(0);\n\n        await this.functionsUtil.asyncForEach(depositedTokens,async (token) => {\n          const tokenConfig = availableTokens[token];\n\n          const [\n            tokenAprs,\n            // tokenScore,\n            amountLent,\n          ] = await Promise.all([\n            this.functionsUtil.getTokenAprs(tokenConfig),\n            // this.functionsUtil.getTokenScore(tokenConfig,isRisk),\n            this.functionsUtil.getAmountDeposited(tokenConfig,this.props.account)\n          ]);\n\n          const amountLentToken = await this.functionsUtil.convertTokenBalance(amountLent,token,tokenConfig,isRisk);\n\n          const tokenBalance = portfolio.tokensBalance[token].tokenBalance;\n          const tokenWeight = tokenBalance.div(portfolio.totalBalance);\n          const tokenAPY = tokenAprs.avgApy && !this.functionsUtil.BNify(tokenAprs.avgApy).isNaN() ? this.functionsUtil.BNify(tokenAprs.avgApy) : this.functionsUtil.BNify(0);\n\n          if (!tokenAPY.isNaN()){\n            avgAPY = avgAPY.plus(tokenAPY.times(tokenWeight));\n          }\n\n          // if (!tokenScore.isNaN() && tokenScore.gt(0)){\n          //   avgScore = avgScore.plus(tokenScore.times(tokenBalance));\n          //   totalBalanceWithScore = totalBalanceWithScore.plus(tokenBalance);\n          // }\n\n          if (amountLentToken){\n            totalAmountLent = totalAmountLent.plus(amountLentToken);\n          }\n        });\n\n        // if (!totalBalanceWithScore.isNaN() && totalBalanceWithScore.gt(0)){\n        //   avgScore = avgScore.div(totalBalanceWithScore);\n        // }\n\n        // console.log('avgAPY',avgAPY.toFixed());\n\n        // Add gov tokens to earnings\n        const govTokensTotalBalance = await this.functionsUtil.getGovTokensUserTotalBalance(this.props.account,availableTokens,'DAI');\n        const govTokensUserBalance = await this.functionsUtil.getGovTokensUserBalances(this.props.account,availableTokens,null);\n        const govTokensTotalBalanceTooltip = govTokensUserBalance ? Object.keys(govTokensUserBalance).map( govToken => {\n          const balance = govTokensUserBalance[govToken];\n          if (balance.gt(0)){\n            return `+${balance.toFixed(2)} ${govToken}`;\n          } else {\n            return null;\n          }\n        }).filter(v => (v !== null)) : null;\n\n        newState.avgAPY = avgAPY;\n        // newState.avgScore = avgScore;\n        newState.tokensToMigrate = portfolio.tokensToMigrate;\n        newState.govTokensTotalBalance = govTokensTotalBalance;\n        newState.govTokensTotalBalanceTooltip = govTokensTotalBalanceTooltip;\n      }\n\n      newState.portfolioLoaded = true;\n      newState.portfolioLoading = false;\n      \n      const remainingTokens = Object.keys(availableTokens).filter(token => (!newState.depositedTokens.includes(token) && !Object.keys(newState.tokensToMigrate).includes(token)) );\n      newState.remainingTokens = remainingTokens;\n\n      // Portfolio loaded\n      this.setStateSafe(newState);\n    // Show available assets for not logged users\n    } else {\n      this.setStateSafe({\n        tokensToMigrate:{},\n        depositedTokens:[],\n        portfolioLoaded:true,\n        portfolioLoading:false,\n        remainingTokens:Object.keys(availableTokens),\n      });\n    }\n  }\n\n  render(){\n    const viewOnly = this.props.connectorName === 'custom';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    const apyLong = this.functionsUtil.getGlobalConfig(['messages','apyLong']);\n    const yieldFarming = this.functionsUtil.getGlobalConfig(['messages','yieldFarming']);\n    const batchDepositConfig = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    // const nexusMutualConfig = this.functionsUtil.getGlobalConfig(['tools','nexusMutual']);\n    const polygonBridgeConfig = this.functionsUtil.getGlobalConfig(['tools','polygonBridge']);\n    const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'title']);\n    const toolsToShow = ['addFunds','nexusMutual','tokenSwap'].filter( toolName => {\n      const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n      return toolConfig.enabled && (!toolConfig.availableNetworks.length || toolConfig.availableNetworks.includes(parseInt(currentNetwork.id)));\n    })\n\n    return (\n      <Box\n        width={1}\n      >\n        <Title\n          mb={3}\n        >\n          {strategyName} strategy\n        </Title>\n        {\n          /*\n          currentNetwork.id === 137 ? (\n            <Flex\n              width={1}\n              minHeight={'45vh'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'center'}\n            >\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  width:[1,0.5],\n                }}\n              >\n                <Flex\n                  aligItems={'center'}\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={'2.3em'}\n                    color={'cellText'}\n                    name={'AccessTime'}\n                  />\n                  <Text\n                    mt={2}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Hang on, please!<br />The {strategyName} strategy has not yet been activated in Polygon.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:3,\n                      width:[1,1/2]\n                    }}\n                    handleClick={e => this.props.goToSection(`stake`)}\n                  >\n                    Go to Staking\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            </Flex>\n          ) :\n          */\n          !this.state.portfolioLoaded ? (\n            <FlexLoader\n              textProps={{\n                textSize:4,\n                fontWeight:2\n              }}\n              loaderProps={{\n                mb:3,\n                size:'40px'\n              }}\n              flexProps={{\n                minHeight:'50vh',\n                flexDirection:'column'\n              }}\n              text={'Loading portfolio...'}\n            />\n          ) : (\n            <Box\n              width={1}\n            >\n              {\n                this.props.account && this.state.depositedTokens.length>0 ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      mb={3}\n                      width={1}\n                      mt={[2,0]}\n                      alignItems={'center'}\n                      justifyContent={'center'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.avgAPY ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: this.state.avgAPY.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Avg APY\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','apyLong'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        pr={[0,2]}\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <TotalBalanceCounter\n                                    decimals={5}\n                                    {...this.props}\n                                    portfolio={this.state.portfolio}\n                                  />\n                                  <Flex\n                                    mt={1}\n                                    width={1}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'center'}\n                                  >\n                                    {\n                                      /*\n                                      <Flex\n                                        width={0.45}\n                                        alignItems={'center'}\n                                        justifyContent={'flex-end'}\n                                      >\n                                        <Text\n                                          fontSize={1}\n                                          fontWeight={3}\n                                          fontFamily={this.props.theme.fonts.counter}\n                                          color={this.props.theme.colors.transactions.status.completed}\n                                        >\n                                          +{this.state.portfolio.totalEarningsPerc.toFixed(2)}%\n                                        </Text>\n                                      </Flex>\n                                      <Text\n                                        mx={1}\n                                        fontSize={1}\n                                        fontWeight={3}\n                                        fontFamily={this.props.theme.fonts.counter}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >|</Text>\n                                      */\n                                    }\n                                    <TotalEarningsCounter\n                                      {...this.props}\n                                      unit={'+$'}\n                                      decimals={4}\n                                      counterStyle={{\n                                        fontSize:14,\n                                        fontWeight:600,\n                                        color:this.props.theme.colors.transactions.status.completed\n                                      }}\n                                      portfolio={this.state.portfolio}\n                                    />\n                                  </Flex>\n                                </Flex>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Balance\n                              </Text>\n                              {\n                                this.state.govTokensTotalBalance && (\n                                  <Tooltip\n                                    placement={'bottom'}\n                                    message={'Total Balance does not include accrued governance tokens: '+(this.state.govTokensTotalBalance && this.state.govTokensTotalBalance.gt(0) ? ` (${this.state.govTokensTotalBalanceTooltip.join(' / ')})` : '')}\n                                  >\n                                    <Icon\n                                      ml={2}\n                                      name={\"Info\"}\n                                      size={'1em'}\n                                      color={'cellTitle'}\n                                    />\n                                  </Tooltip>\n                                )\n                              }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,1/3]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            py:[3,0],\n                            mb:[2,0],\n                            display:'flex',\n                            alignItems:'center',\n                            height:['auto','125px'],\n                            justifyContent:'center'\n                          }}\n                        >\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.state.portfolio ? (\n                                <Text\n                                  lineHeight={1}\n                                  fontWeight={[3,4]}\n                                  color={'copyColor'}\n                                  fontFamily={'counter'}\n                                  fontSize={[4,'1.7em']}\n                                  dangerouslySetInnerHTML={{ __html: '<small>+</small>'+this.state.portfolio.totalEarningsPerc.toFixed(2)+'<small>%</small>' }}\n                                >\n                                </Text>\n                              ) : (\n                                <Loader size=\"20px\" />\n                              )\n                            }\n                            <Flex\n                              mt={2}\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'center'}\n                            >\n                              <Text\n                                fontWeight={2}\n                                fontSize={[1,2]}\n                                color={'cellText'}\n                              >\n                                Total Profit\n                              </Text>\n                              <Tooltip\n                                placement={'bottom'}\n                                message={this.functionsUtil.getGlobalConfig(['messages','totalProfitPerc'])}\n                              >\n                                <Icon\n                                  ml={2}\n                                  name={\"Info\"}\n                                  size={'1em'}\n                                  color={'cellTitle'}\n                                />\n                              </Tooltip>\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                    <Flex\n                      width={1}\n                      id={\"portfolio-charts\"}\n                      justifyContent={'space-between'}\n                      flexDirection={['column','row']}\n                    >\n                      <Flex\n                        mb={[3,0]}\n                        width={[1,0.328]}\n                        flexDirection={'column'}\n                        id={\"portfolio-composition\"}\n                      >\n                        <DashboardCard\n                          title={'Composition'}\n                          titleProps={ !this.props.isMobile ? {\n                            style:{\n                              minHeight:'39px'\n                            }\n                          } : null}\n                        >\n                          <PortfolioDonut\n                            {...this.props}\n                            parentId={'portfolio-composition'}\n                          />\n                        </DashboardCard>\n                      </Flex>\n                      <Flex\n                        width={[1,0.666]}\n                        flexDirection={'column'}\n                      >\n                        <DashboardCard>\n                          <Flex\n                            pt={[3,4]}\n                            px={[3,4]}\n                            aligItems={'center'}\n                            flexDirection={['column','row']}\n                          >\n                            <Flex\n                              width={[1,0.7]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-start'}\n                            >\n                              <Title\n                                fontWeight={4}\n                                fontSize={[2,3]}\n                                textAlign={'left'}\n                              >\n                                Performance\n                              </Title>\n                            </Flex>\n                            <Flex\n                              mt={[2,0]}\n                              width={[1,0.3]}\n                              flexDirection={'column'}\n                              justifyContent={'flex-end'}\n                            >\n                              <GenericSelector\n                                innerProps={{\n                                  p:0,\n                                  px:1\n                                }}\n                                defaultValue={\n                                  {value:'week',label:'1W'}\n                                }\n                                name={'performance-time'}\n                                options={[\n                                  {value:'week',label:'1W'},\n                                  {value:'month',label:'1M'},\n                                  {value:'month3',label:'3M'},\n                                  {value:'month6',label:'6M'},\n                                  {value:'all',label:'MAX'},\n                                ]}\n                                onChange={ v => this.setPortfolioEquityQuickSelection(v) }\n                              />\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            ml={[0,3]}\n                            aligItems={'center'}\n                            justifyContent={'center'}\n                            id={\"portfolio-performance\"}\n                          >\n                            <PortfolioEquity\n                              {...this.props}\n                              enabledTokens={[]}\n                              parentId={'portfolio-performance'}\n                              parentIdHeight={'portfolio-composition'}\n                              quickDateSelection={this.state.portfolioEquityQuickSelection}\n                              frequencySeconds={this.functionsUtil.getFrequencySeconds('day',1)}\n                            />\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mb={3}\n                    mx={'auto'}\n                    width={[1,0.8]}\n                    aligItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    <Text\n                      fontWeight={2}\n                      fontSize={[1,2]}\n                      textAlign={'center'}\n                    >\n                      {\n                        this.props.isMobile ?\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descShort'])\n                        :\n                          this.functionsUtil.getGlobalConfig(['strategies',this.props.selectedStrategy,'descLong'])\n                      }\n                    </Text>\n                  </Flex>\n                )\n              }\n              {\n                !viewOnly && this.state.depositedTokens.length>0 && this.props.account && toolsToShow.length>=2 && (\n                  <Flex\n                    mt={3}\n                    width={1}\n                    id={\"tools\"}\n                    flexDirection={'column'}\n                  >\n                    <Flex\n                      pb={2}\n                      width={1}\n                      mb={[2,3]}\n                      borderColor={'divider'}\n                      borderBottom={'1px solid transparent'}\n                    >\n                      <Heading.h4\n                        fontSize={[2,4]}\n                        fontWeight={[3,4]}\n                      >\n                        Tools\n                      </Heading.h4>\n                    </Flex>\n                    <Flex\n                      flexDirection={['column','row']}\n                    >\n                      {\n                        ['addFunds','nexusMutual','tokenSwap'].map( (toolName,toolIndex) => {\n                          const toolConfig = this.functionsUtil.getGlobalConfig(['tools',toolName]);\n                          return (\n                            <Flex\n                              key={`tool_${toolIndex}`}\n                              mb={toolIndex<2 ? [2,0] : 0}\n                              pr={toolIndex<2 ? [0,3] : 0}\n                              width={[1,1/toolsToShow.length]}\n                            >\n                              <DashboardIconButton\n                                {...this.props}  \n                                icon={toolConfig.icon}\n                                text={toolConfig.desc}\n                                image={toolConfig.image}\n                                title={toolConfig.label}\n                                handleClick={ e => this.props.goToSection(`tools/${toolConfig.route}`) }\n                              />\n                            </Flex>\n                          );\n                        })\n                      }\n                    </Flex>\n                  </Flex>\n                )\n              }\n              {\n                /*\n                nexusMutualConfig.enabled && nexusMutualConfig.availableNetworks.includes(currentNetwork.id) && this.state.portfolio && this.state.portfolio.totalBalance.gt(0) && (\n                  <Flex\n                    width={1}\n                    id={'active-coverages'}\n                    flexDirection={'column'}\n                  >\n                    <ActiveCoverages\n                      {...this.props}\n                      title={'Coverage'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n                */\n              }\n              {\n                this.state.batchedDeposits && (\n                  <Flex\n                    width={1}\n                    mb={[0,3]}\n                    id={'batched-deposits'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Batched Deposits</Title>\n                    <Flex\n                      width={1}\n                      flexDirection={'column'}\n                    >\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.batchedDepositsAvailableTokens)}\n                        cols={[\n                          {\n                            title:'TOKEN',\n                            props:{\n                              width:[0.3,0.2]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.33, 0.21],\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['deposited'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                name:'tokenName',\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'REDEEMABLE',\n                            props:{\n                              width:[0.44,0.23],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'custom',\n                                type:'number',\n                                path:['redeemable'],\n                                props:{\n                                  decimals: 4\n                                }\n                              },\n                              {\n                                type:'text',\n                                name:'custom',\n                                path:['token'],\n                                props:{\n                                  ml:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'STATUS',\n                            props:{\n                              width:[0.26,0.19],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                type:'icon',\n                                mobile:false,\n                                name:'custom',\n                                path:['statusIcon'],\n                                props:{\n                                  mr:2,\n                                  size:this.props.isMobile ? '1.2em' : '1.8em'\n                                }\n                              },\n                              {\n                                name:'custom',\n                                path:['status'],\n                                props:{\n                                  style:{\n                                    textTransform:'capitalize'\n                                  }\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[0.35,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Claim',\n                                funcProps:{\n                                  disabled:(props) => (props.tokenConfig.status === 'pending')\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.goToSection(`tools/${batchDepositConfig.route}/${props.tokenConfig.token}`)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                        availableTokens={this.state.batchedDepositsAvailableTokens}\n                      />\n                    </Flex>\n                  </Flex>\n                )\n              }\n              <Flex\n                width={1}\n                id={'available-assets'}\n                flexDirection={'column'}\n                mb={!this.state.depositedTokens.length ? 4 : 0}\n              >\n                {\n                  (this.state.depositedTokens.length>0 || Object.keys(this.state.tokensToMigrate).length>0 || this.state.remainingTokens.length>0 ) &&\n                    <Title my={[3,4]}>Available assets</Title>\n                }\n                <Flex width={1} flexDirection={'column'}>\n                  {\n                    Object.keys(this.state.tokensToMigrate).length>0 &&\n                    <Flex\n                      width={1}\n                      mb={[3,4]}\n                      id={\"migrate-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Assets to migrate\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={Object.keys(this.state.tokensToMigrate)}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.15]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            props:{\n                              width:[0.21, 0.12],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.26,0.15],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                showLoader:false,\n                                name:'idleDistribution',\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'OLD APY',\n                            props:{\n                              width:[0.26,0.12],\n                            },\n                            fields:[\n                              {\n                                name:'oldApy'\n                              }\n                            ]\n                          },\n                          {\n                            title:'BALANCE',\n                            mobile:false,\n                            props:{\n                              width:[0.16,0.14],\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'amountToMigrate',\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.15],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens'\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.29 : 0 ,0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: 'Migrate',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'migrate',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                  this.state.depositedTokens.length>0 &&\n                    <Flex\n                      mb={ this.state.remainingTokens.length>0 ? [3,4] : 0 }\n                      width={1}\n                      id={\"deposited-assets\"}\n                      flexDirection={'column'}\n                    >\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Deposited assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.depositedTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            title:'POOL',\n                            props:{\n                              width:[0.21,0.11],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.30,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'DEPOSITED',\n                            props:{\n                              width:[0.22,0.15],\n                              justifyContent:['center','flex-start']\n                            },\n                            fields:[\n                              {\n                                name:'amountLent'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'FARMING',\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.25,0.13],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            mobile:false,\n                            title:'EARNINGS',\n                            props:{\n                              width:[0.15,0.15],\n                              textAlign:'center'\n                            },\n                            parentProps:{\n                              alignItems:'center',\n                              flexDirection:'column',\n                            },\n                            fields:[\n                              {\n                                name:'earnings',\n                                props:{\n                                  decimals:3\n                                }\n                              },\n                              {\n                                name:'earningsPerc',\n                                showLoader:false,\n                                showDirection:false,\n                                props:{\n                                  fontSize:0,\n                                  decimals:3\n                                }\n                              }\n                            ]\n                          },\n                          /*\n                          {\n                            title:'EARNINGS %',\n                            props:{\n                              width:[0.27,0.14],\n                            },\n                            fields:[\n                              {\n                                name:'earningsPerc'\n                              }\n                            ]\n                          },\n                          */\n                          {\n                            title:'',\n                            mobile:false,\n                            props:{\n                              width:0.17,\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label:'Manage',\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  mainColor:'redeem',\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                  {\n                    this.state.remainingTokens.length>0 &&\n                    <Flex id=\"remaining-assets\" width={1} flexDirection={'column'}>\n                      <Flex\n                        pb={2}\n                        width={1}\n                        mb={[2,3]}\n                        borderColor={'divider'}\n                        borderBottom={'1px solid transparent'}\n                      >\n                        <Heading.h4\n                          fontSize={[2,4]}\n                          fontWeight={[3,4]}\n                        >\n                          Available assets\n                        </Heading.h4>\n                      </Flex>\n                      <AssetsList\n                        enabledTokens={this.state.remainingTokens}\n                        handleClick={(props) => this.props.changeToken(props.token)}\n                        cols={[\n                          {\n                            title:'CURRENCY',\n                            props:{\n                              width:[0.27,0.13]\n                            },\n                            fields:[\n                              {\n                                name:'icon',\n                                props:{\n                                  mr:2,\n                                  height:['1.4em','2.3em']\n                                }\n                              },\n                              {\n                                name:'tokenName'\n                              }\n                            ]\n                          },\n                          {\n                            mobile:true,\n                            title:'POOL',\n                            visibleOnDesktop:true,\n                            props:{\n                              width:[0.21, 0.13],\n                            },\n                            fields:[\n                              {\n                                name:'pool',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APY',\n                            desc:apyLong,\n                            props:{\n                              width:[0.31,0.16],\n                            },\n                            parentProps:{\n                              flexDirection:'column',\n                              alignItems:'flex-start',\n                            },\n                            fields:[\n                              {\n                                name:'apy',\n                                showTooltip:true\n                              },\n                              {\n                                name:'idleDistribution',\n                                showLoader:false,\n                                props:{\n                                  decimals:this.props.isMobile ? 1 : 2,\n                                  fontSize:this.props.isMobile ? '9px' : 0\n                                },\n                                visible:currentNetwork.provider==='infura' ? true : false\n                              },\n                            ]\n                          },\n                          {\n                            title:'FARMING',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account !== null,\n                            desc:yieldFarming,\n                            props:{\n                              width:[0.22,0.16],\n                              textAlign:'center'\n                            },\n                            fields:[\n                              {\n                                name:'govTokens',\n                                props:{\n                                  decimals:2\n                                }\n                              }\n                            ]\n                          },\n                          {\n                            title:'APR LAST WEEK',\n                            mobile:false,\n                            props:{\n                              width:0.25,\n                            },\n                            parentProps:{\n                              width:1,\n                              pr:[2,4]\n                            },\n                            fields:[\n                              {\n                                name:'aprChart',\n                                style:{\n                                  overflow:'visible',\n                                },\n                              }\n                            ]\n                          },\n                          {\n                            title:'',\n                            visibleOnDesktop:true,\n                            mobile:this.props.account === null,\n                            props:{\n                              width:[ this.props.account === null ? 0.26 : 0 , 0.17],\n                            },\n                            parentProps:{\n                              width:1\n                            },\n                            fields:[\n                              {\n                                name:'button',\n                                label: (props) => {\n                                  return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'Migrate' : 'Deposit';\n                                },\n                                props:{\n                                  width:1,\n                                  fontSize:3,\n                                  fontWeight:3,\n                                  height:'45px',\n                                  borderRadius:4,\n                                  boxShadow:null,\n                                  size: this.props.isMobile ? 'small' : 'medium',\n                                  handleClick:(props) => this.props.changeToken(props.token)\n                                },\n                                funcProps:{\n                                  mainColor: (props) => {\n                                    return Object.keys(this.state.tokensToMigrate).includes(props.token) ? 'migrate' : 'deposit'\n                                  }\n                                }\n                              }\n                            ]\n                          }\n                        ]}\n                        {...this.props}\n                      />\n                    </Flex>\n                  }\n                </Flex>\n              </Flex>\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id={\"yield-farming\"}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Yield Farming</Title>\n                    <AssetsList\n                      enabledTokens={Object.keys(this.functionsUtil.getGovTokensFarming())}\n                      cols={[\n                        {\n                          title:'TOKEN',\n                          props:{\n                            width:[0.3,0.15]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:2,\n                                height:['1.4em','2.3em']\n                              }\n                            },\n                            {\n                              name:'tokenName'\n                            }\n                          ]\n                        },\n                        {\n                          mobile:false,\n                          title:'BALANCE',\n                          props:{\n                            width:[0.33, 0.25],\n                          },\n                          fields:[\n                            {\n                              name:'tokenBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            }\n                          ]\n                        },\n                        {\n                          title:'REDEEMABLE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenRedeemableBalance']),\n                          props:{\n                            width:[0.35,0.30],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'redeemableBalance',\n                              props:{\n                                decimals: this.props.isMobile ? 6 : 8\n                              }\n                            },\n                          ]\n                        },\n                        {\n                          title:'DISTRIBUTION',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','userDistributionSpeed']),\n                          props:{\n                            width:[0.35,0.30],\n                          },\n                          fields:[\n                            {\n                              name:'userDistributionSpeed',\n                              props:{\n                                decimals:6\n                              }\n                            }\n                          ]\n                        },\n                        /*\n                        {\n                          mobile:false,\n                          title:'APR',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','govTokenApr']),\n                          props:{\n                            width:[0.2,0.15],\n                          },\n                          fields:[\n                            {\n                              name:'apr',\n                            }\n                          ]\n                        },\n                        {\n                          title:'TOKEN PRICE',\n                          desc:this.functionsUtil.getGlobalConfig(['messages','tokenPrice']),\n                          mobile:false,\n                          props:{\n                            width: 0.17,\n                          },\n                          parentProps:{\n                            width:1,\n                            pr:[2,4]\n                          },\n                          fields:[\n                            {\n                              name:'tokenPrice',\n                              props:{\n                                unit:'$',\n                                unitPos:'left',\n                                unitProps:{\n                                  mr:1,\n                                  fontWeight:3,\n                                  fontSize:[0,2],\n                                  color:'cellText'\n                                }\n                              }\n                            }\n                          ]\n                        },\n                        */\n                      ]}\n                      {...this.props}\n                      availableTokens={govTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.state.depositedTokens.length>0 &&\n                  <Flex\n                    width={1}\n                    id=\"earnings-estimation\"\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Estimated earnings</Title>\n                    <EarningsEstimation\n                      {...this.props}\n                      enabledTokens={this.state.depositedTokens}\n                    />\n                  </Flex>\n              }\n              {\n                this.props.account && polygonBridgeConfig.enabled && polygonBridgeConfig.availableNetworks.includes(currentNetwork.id) && (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                    id={'polygon-transactions'}\n                  >\n                    <PolygonBridgeTransactions\n                      {...this.props}\n                      title={'Polygon Bridge Transactions'}\n                      titleProps={{\n                        my:4\n                      }}\n                    />\n                  </Flex>\n                )\n              }\n              {\n                this.props.account && this.state.depositedTokens.length>0 && \n                  <Flex\n                    mb={[3,4]}\n                    width={1}\n                    id={'transactions'}\n                    flexDirection={'column'}\n                  >\n                    <Title my={[3,4]}>Transactions</Title>\n                    <TransactionsList\n                      {...this.props}\n                      enabledTokens={[]}\n                      cols={[\n                        {\n                          title: this.props.isMobile ? '' : 'HASH',\n                          props:{\n                            width:[0.15,0.24]\n                          },\n                          fields:[\n                            {\n                              name:'icon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              name:'hash',\n                              mobile:false\n                            }\n                          ]\n                        },\n                        {\n                          title:'ACTION',\n                          mobile:false,\n                          props:{\n                            width:0.15,\n                          },\n                          fields:[\n                            {\n                              name:'action'\n                            }\n                          ]\n                        },\n                        {\n                          title:'DATE',\n                          props:{\n                            width:[0.32,0.23],\n                          },\n                          fields:[\n                            {\n                              name:'date'\n                            }\n                          ]\n                        },\n                        {\n                          title:'STATUS',\n                          props:{\n                            width:[0.18,0.22],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'statusIcon',\n                              props:{\n                                mr:[0,2]\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'status'\n                            }\n                          ]\n                        },\n                        {\n                          title:'AMOUNT',\n                          props:{\n                            width:0.19,\n                          },\n                          fields:[\n                            {\n                              name:'amount'\n                            },\n                          ]\n                        },\n                        {\n                          title:'ASSET',\n                          props:{\n                            width:[0.15,0.20],\n                            justifyContent:['center','flex-start']\n                          },\n                          fields:[\n                            {\n                              name:'tokenIcon',\n                              props:{\n                                mr:[0,2],\n                                height:['1.4em','1.6em']\n                              }\n                            },\n                            {\n                              mobile:false,\n                              name:'tokenName'\n                            },\n                          ]\n                        },\n                      ]}\n                    />\n                  </Flex>\n              }\n            </Box>\n          )\n        }\n      </Box>\n    );\n  }\n}\n\nexport default StrategyPage;","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport TransactionField from '../TransactionField/TransactionField';\nimport { Flex, Box, Text, Icon, Link, Checkbox, Tooltip } from \"rimble-ui\";\n\nclass BatchDeposit extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      execute:{\n        txHash:null,\n        loading:false\n      },\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    usePermit:false,\n    batchRedeems:{},\n    lastExecution:null,\n    permitEnabled:true,\n    hasDeposited:false,\n    permitSigned:false,\n    selectedToken:null,\n    showPermitBox:false,\n    currBatchIndex:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    availableTokens:null,\n    selectedStrategy:null,\n    componentLoaded:false,\n    executeSucceeded:false,\n    migrationEnabled:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    availableStrategies:null,\n    batchDepositEnabled:false,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadStrategies();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      this.setState({\n        componentLoaded:false\n      },async () => {\n        await this.loadTokens();\n      });\n    }\n\n    const selectedStrategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    if (selectedStrategyChanged){\n      const selectedToken = Object.keys(this.state.availableTokens)[0];\n      this.selectToken(selectedToken);\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const executeSucceededChanged = prevState.executeSucceeded !== this.state.executeSucceeded;\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (selectedTokenChanged || contractApprovedChanged || executeSucceededChanged){\n      this.checkBatchs();\n    }\n\n  }\n\n  async execute () {\n\n    const loading = true;\n\n    const callbackExecute = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Execute',\n        eventCategory: 'BatchDeposit',\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        executeSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          execute:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptExecute = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          execute:{\n            ...prevState.processing.execute,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'executeBatch', [true], null, callbackExecute, callbackReceiptExecute);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        execute:{\n          ...prevState.processing.execute,\n          loading\n        }\n      }\n    }));\n  }\n\n  async checkBatchs(migrationSucceeded=false){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.tokenConfig.name,this.state.tokenConfig.address,this.state.tokenConfig.abi)\n    ]);\n\n    let [\n      batchExecutions,\n      currBatchIndex,\n      migrationContractApproved\n    ] = await Promise.all([\n      this.functionsUtil.getBatchedDepositExecutions(migrationContractInfo.address),\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.tokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    // If use Permit don't ask for Approve\n    let usePermit = false;\n    if (!migrationContractApproved && migrationContractInfo.functions && migrationContractInfo.functions.length === 1){\n      const functionInfo = migrationContractInfo.functions[0];\n      usePermit = typeof functionInfo.usePermit !== 'undefined' ? functionInfo.usePermit : false;\n      const nonceMethod = this.functionsUtil.getGlobalConfig(['permit',this.state.tokenConfig.name,'nonceMethod']);\n      const permitContract = this.functionsUtil.getContractByName(this.state.tokenConfig.name);\n      usePermit = usePermit && permitContract && (!nonceMethod || permitContract.methods[nonceMethod] !== undefined);\n    }\n\n    const newState = {};\n    const batchTotals = {};\n    const batchRedeems = {};\n    const batchDeposits = {};\n    let batchCompleted = false;\n\n    currBatchIndex = currBatchIndex || 0;\n    for (let batchIndex = 0; batchIndex <= parseInt(currBatchIndex) ; batchIndex++){\n      let [\n        batchTotal,\n        batchRedeem,\n        batchDeposit\n      ] = await Promise.all([\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchRedeemedTotals',[batchIndex]),\n        this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n      ]);\n      if (batchTotal && batchTotal !== null){\n        batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.tokenConfig.decimals);\n      }\n      if (batchDeposit !== null){\n        batchRedeem = this.functionsUtil.fixTokenDecimals(batchRedeem,18);\n        batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.tokenConfig.decimals);\n        if (batchDeposit.gt(0)){\n          batchDeposits[batchIndex] = batchDeposit;\n          // Calculate redeemable idleTokens\n          batchRedeems[batchIndex] = batchDeposit.times(batchRedeem).div(batchTotals[batchIndex]);\n          if (batchRedeems[batchIndex].gt(batchRedeem)){\n            batchRedeems[batchIndex] = batchRedeem;\n          }\n          // Check claimable\n          if (batchIndex < currBatchIndex){\n            batchCompleted = true;\n          }\n        }\n      }\n    }\n\n    newState.batchDeposits = batchDeposits;\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const lastExecution = batchExecutions && batchExecutions.length ? batchExecutions[0] : null;\n    const batchDepositInfo = this.functionsUtil.getGlobalConfig(['tools','batchDeposit']);\n    const batchDepositEnabled = batchDepositInfo.depositEnabled;\n\n    newState.usePermit = usePermit;\n    newState.showPermitBox = false;\n    newState.claimSucceeded = false;\n    newState.componentLoaded = true;\n    newState.executeSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.hasDeposited = hasDeposited;\n    newState.batchRedeems = batchRedeems;\n    newState.lastExecution = lastExecution;\n    newState.currBatchIndex = currBatchIndex;\n    newState.batchCompleted = batchCompleted;\n    newState.migrationSucceeded = migrationSucceeded;\n    newState.batchDepositEnabled = batchDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    // Prevent user to deposit if the batch has been completed\n    newState.canDeposit = batchDepositEnabled && !batchCompleted;\n    newState.migrationContractApproved = migrationContractApproved;\n    newState.action = hasDeposited || newState.canClaim ? 'redeem' : 'deposit';\n\n    this.setState(newState);\n  }\n\n  async loadStrategies(){\n\n    // Init tokens contracts\n    const availableStrategiesKeys = {};\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n      availableStrategiesKeys[tokenConfig.strategy] = true;\n    });\n\n    const availableStrategies = Object.keys(availableStrategiesKeys).map( strategy => {\n      const strategyConfig = this.functionsUtil.getGlobalConfig(['strategies',strategy]);\n      return {\n        value:strategy,\n        icon:strategyConfig.icon,\n        label:strategyConfig.title\n      };\n    });\n\n    // console.log('availableStrategies',availableStrategies);\n\n    if (availableStrategies && availableStrategies.length>0){\n      let selectedStrategy = availableStrategies[0].value;\n      let selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n      if (selectedToken){\n        const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n        selectedToken = selectedTokenConfig.baseToken;\n        selectedStrategy = selectedTokenConfig.strategy;\n      }\n\n      this.setState({\n        availableStrategies\n      },() => {\n        this.selectStrategy(selectedStrategy,selectedToken);\n      });\n    }\n  }\n\n  /*\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : null;\n    if (selectedToken){\n      this.selectToken(selectedToken);\n    }\n  }\n  */\n\n  async selectStrategy (selectedStrategy,selectedToken=null) {\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens)\n      .filter(key => this.props.toolProps.availableTokens[key].strategy === selectedStrategy )\n      .reduce((obj, key) => {\n        const tokenConfig = this.props.toolProps.availableTokens[key];\n        const baseTokenConfig = this.props.availableStrategies[selectedStrategy][tokenConfig.baseToken];\n\n        tokenConfig.abi = baseTokenConfig.abi;\n        tokenConfig.token = baseTokenConfig.token;\n        tokenConfig.address = baseTokenConfig.address;\n        tokenConfig.decimals = baseTokenConfig.decimals;\n        obj[tokenConfig.baseToken] = tokenConfig;\n        return obj;\n      }, {});\n\n    this.setState({\n      availableTokens,\n      selectedStrategy\n    },() => {\n      if (selectedToken){\n        this.selectToken(selectedToken);\n      }\n    });\n  }\n\n  async selectToken (selectedToken) {\n    const selectedTokenConfig = this.state.availableTokens[selectedToken];\n    const strategyAvailableTokens = this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.token];\n\n    const tokenConfig = {\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address,\n      decimals:baseTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:baseTokenConfig.abi,\n      name:baseTokenConfig.token,\n      token:baseTokenConfig.token,\n      address:baseTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.token);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    },() => {\n      // Select strategy and available tokens\n      if (selectedTokenConfig.strategy !== this.state.selectedStrategy){\n        const selectedStrategy = selectedTokenConfig.strategy;\n        this.selectStrategy(selectedStrategy);\n      }\n    });\n  }\n\n  async claim () {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventAction: 'Claim',\n        eventCategory: `BatchDeposit`,\n        eventValue: parseInt(claimableValue),\n        eventLabel: this.props.selectedToken,\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  async callbackPermit(){\n    this.setState({\n      permitSigned:true\n    });\n  }\n\n  showPermitBox(){\n    this.setState({\n      showPermitBox:true\n    });\n  }\n\n  async callbackApprove(migrationContractApproved){\n    // console.log('callbackApprove',this.state.migrationContractApproved,migrationContractApproved);\n    if (migrationContractApproved !== this.state.migrationContractApproved){\n      this.setState({\n        migrationContractApproved\n      });\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      const migrationSucceeded = false;\n      this.setState({\n        action,\n        migrationSucceeded\n      });\n    }\n  }\n\n  togglePermitEnabled(permitEnabled){\n    this.setState({\n      permitEnabled\n    });\n  }\n\n  migrationEnabledCallback = (migrationEnabled) => {\n    this.setState({\n      migrationEnabled\n    });\n  }\n\n  migrationCallback = (tx) => {\n    this.checkBatchs(true);\n  }\n\n  render() {\n\n    if (!this.state.selectedStrategy){\n      return null;\n    }\n\n    const usePermit = this.state.permitEnabled && this.state.usePermit;\n    // const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchRedeem = this.state.batchRedeems && Object.values(this.state.batchRedeems).length>0 ? Object.values(this.state.batchRedeems)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n    const contractApproved = (usePermit && this.state.permitSigned) || (!usePermit && this.state.migrationContractApproved);\n    const canExecuteBatch = this.state.batchTotals && this.state.batchTotals[this.state.currBatchIndex] && this.state.batchTotals[this.state.currBatchIndex].gt(0);\n    const strategyDefaultValue = this.state.selectedStrategy ? this.state.availableStrategies.find( s => s.value === this.state.selectedStrategy ) : this.state.availableStrategies[0];\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              Choose the strategy:\n            </Text>\n            <GenericSelector\n              {...this.props}\n              name={'strategy'}\n              isSearchable={false}\n              defaultValue={strategyDefaultValue}\n              CustomOptionValue={CustomOptionValue}\n              options={this.state.availableStrategies}\n              onChange={this.selectStrategy.bind(this)}\n              CustomValueContainer={CustomValueContainer}\n            />\n          </Box>\n          {\n            this.state.availableTokens && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text\n                  mb={1}\n                >\n                  Select asset to deposit:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-from'}\n                  showBalance={true}\n                  isSearchable={false}\n                  onChange={this.selectToken.bind(this)}\n                  selectedToken={this.state.selectedToken}\n                  availableTokens={this.state.availableTokens}\n                />\n              </Box>\n          }\n          {\n            !this.state.componentLoaded && (\n              <Flex\n                mt={4}\n                flexDirection={'column'}\n              >\n                <FlexLoader\n                  flexProps={{\n                    flexDirection:'row'\n                  }}\n                  loaderProps={{\n                    size:'30px'\n                  }}\n                  textProps={{\n                    ml:2\n                  }}\n                  text={'Loading asset info...'}\n                />\n              </Flex>\n            )\n          }\n          {\n            !this.props.account ? (\n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  mt:3\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                >\n                  <Icon\n                    size={this.props.isMobile ? '1.8em' : '2.3em'}\n                    name={'Input'}\n                    color={'cellText'}\n                  />\n                  <Text\n                    mt={[1,2]}\n                    fontSize={2}\n                    color={'cellText'}\n                    textAlign={'center'}\n                  >\n                    Please connect with your wallet interact with Idle.\n                  </Text>\n                  <RoundButton\n                    buttonProps={{\n                      mt:2,\n                      width:[1,1/2]\n                    }}\n                    handleClick={this.props.connectAndValidateAccount}\n                  >\n                    Connect\n                  </RoundButton>\n                </Flex>\n              </DashboardCard>\n            ) : this.state.componentLoaded &&  this.state.selectedTokenConfig && (this.state.canDeposit || this.state.canClaim) && (\n              <Box\n                width={1}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                    px:4,\n                    mt:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  > \n                    <Flex\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ contractApproved ? 'CheckBox' : 'LooksOne'}\n                        color={ contractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        {\n                          usePermit ? 'Sign Approve message' : 'Approve the batch deposit contract'\n                        }\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ (this.state.hasDeposited || this.state.batchCompleted) ? 'CheckBox' : 'LooksTwo'}\n                        color={ (this.state.hasDeposited || this.state.batchCompleted) ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Deposit your {this.state.selectedToken}\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                        color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Text\n                        ml={2}\n                        fontSize={2}\n                        color={'cellText'}\n                        textAlign={'left'}\n                      >\n                        Wait for batch execution\n                        <Link\n                          ml={1}\n                          fontWeight={2}\n                          color={'primary'}\n                          display={'inline'}\n                          hoverColor={'primary'}\n                          onClick={ e => this.props.openTooltipModal('Batch Execution Schedule',this.functionsUtil.getGlobalConfig(['messages','batchDepositExecutionSchedule'])) }\n                        >\n                          (Read More)\n                        </Link>\n                      </Text>\n                    </Flex>\n                    <Flex\n                      mt={2}\n                      width={1}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                    >\n                      <Icon\n                        size={'1.5em'}\n                        name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                        color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                      />\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'flex-start'}\n                      >\n                        <Text\n                          ml={1}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'left'}\n                        >\n                          Claim your {this.state.tokenConfig.idle.token}\n                        </Text>\n                        <Tooltip\n                          placement={'top'}\n                          message={`You will start earning gov tokens after the batch is executed and you claim your ${this.state.tokenConfig.idle.token}`}\n                        >\n                          <Icon\n                            ml={1}\n                            size={'1.2em'}\n                            name={'Warning'}\n                            color={'#ffe000'}\n                            style={{\n                              cursor:'pointer'\n                            }}\n                          />\n                        </Tooltip>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                </DashboardCard>\n              </Box>\n            )\n          }\n          {\n            this.state.componentLoaded && this.props.account && this.state.availableTokens && this.state.selectedToken && (\n              <Box width={1}>\n                {\n                  (contractApproved || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded ? (\n                    <DashboardCard\n                      cardProps={{\n                        py:3,\n                        px:2,\n                        mt:3,\n                        display:'flex',\n                        alignItems:'center',\n                        flexDirection:'column',\n                        justifyContent:'center',\n                      }}\n                    >\n                      <Flex\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                        justifyContent={'center'}\n                      >\n                        <Icon\n                          size={'1.8em'}\n                          color={'cellText'}\n                          name={'LightbulbOutline'}\n                        />\n                        <Text\n                          mt={1}\n                          fontSize={1}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          {this.state.selectedToken} supports Approve and Deposit in a single transaction, disable this feature and try again if you can't deposit in the batch.\n                        </Text>\n                      </Flex>\n                      <Checkbox\n                        mt={1}\n                        required={false}\n                        checked={this.state.permitEnabled}\n                        label={`Approve and Deposit in a single transaction`}\n                        onChange={ e => this.togglePermitEnabled(e.target.checked) }\n                      />\n                    </DashboardCard>\n                  ) : !this.state.showPermitBox && this.state.action === 'deposit' && this.state.usePermit && this.state.migrationEnabled && !this.state.migrationSucceeded && (\n                    <Flex\n                      p={0}\n                      mt={3}\n                      width={1}\n                      borderRadius={2}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'center'}\n                    >\n                      <Link\n                        textAlign={'center'}\n                        hoverColor={'primary'}\n                        onClick={this.showPermitBox.bind(this)}\n                      >\n                        Having trouble with the Batch Deposit?\n                      </Link>\n                    </Flex>\n                  )\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    this.state.batchDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        useMetaTx={false}\n                        showActions={false}\n                        usePermit={usePermit}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        showBalanceSelector={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        migrationParams={toMigrate => [toMigrate]}\n                        selectedStrategy={this.props.selectedStrategy}\n                        callbackPermit={this.callbackPermit.bind(this)}\n                        callbackApprove={this.callbackApprove.bind(this)}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationEnabledCallback={this.migrationEnabledCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedToken} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:3\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch Deposit is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} web3={this.props.web3} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.tokenConfig.idle.token}!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!<br />You can now claim your {batchRedeem.toFixed(4)} {this.state.tokenConfig.idle.token}\n                            </Text>\n                            <Text\n                              fontSize={1}\n                              color={'#ff9900'}\n                              textAlign={'center'}\n                            >\n                              (You need to claim your {this.state.tokenConfig.idle.token} to start earning Gov Tokens)\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:2,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'1.8em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited <strong>{batchDeposit.toFixed(4)} {this.state.selectedToken}</strong>, please wait until the batch is executed to claim your {this.state.tokenConfig.idle.token}.\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n                {\n                  this.state.batchTotals[this.state.currBatchIndex] && \n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.execute.loading ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Batch execution estimated in`} endMessage={`Finalizing batch execution request...`} hash={this.state.processing.execute.txHash} />\n                          </Flex>\n                        ) : this.state.executeSucceeded ? (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              size={this.props.isMobile ? '1.8em' : '2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={[1,2]}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The Batch has been executed!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            width={1}\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Text\n                              fontWeight={500}\n                              color={'copyColor'}\n                              textAlign={'center'}\n                            >\n                              Batch Pool: {this.state.batchTotals[this.state.currBatchIndex].toFixed(4)} {this.state.selectedToken}\n                            </Text>\n                            {\n                              canExecuteBatch && \n                                <Link\n                                  textAlign={'center'}\n                                  hoverColor={'primary'}\n                                  onClick={this.execute.bind(this)}\n                                >\n                                  Execute Batch\n                                </Link>\n                            }\n                            {\n                              this.state.batchTotals[this.state.currBatchIndex].lt(this.state.selectedTokenConfig.minPoolSize) && (\n                                <Text\n                                  mb={1}\n                                  fontSize={1}\n                                  color={'alert'}\n                                  textAlign={'center'}\n                                >\n                                  (The pool size has to reach at least {this.functionsUtil.formatMoney(this.state.selectedTokenConfig.minPoolSize,0)} {this.state.selectedToken} to be executed)\n                                </Text>\n                              )\n                            }\n                            {\n                              this.state.lastExecution && (\n                                <Text\n                                  fontSize={0}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Last Batch Execution: {this.functionsUtil.strToMoment(this.state.lastExecution.timeStamp*1000).utc().format('YYYY-MM-DD HH:mm UTC')}\n                                </Text>\n                              )\n                            }\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                }\n              </Box>\n            )\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchDeposit;","import IconBox from '../IconBox/IconBox';\nimport React, { Component } from 'react';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport { Button, Flex, Box, Text, Icon } from \"rimble-ui\";\n// import TokenWrapper from '../TokenWrapper/TokenWrapper';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\n\nclass PolygonBridge extends Component {\n\n  state = {\n    stats:[],\n    steps:null,\n    txsToExit:[],\n    infoBox:null,\n    polygonTxs:[],\n    inputValue:null,\n    dataLoaded:false,\n    description:null,\n    tokenConfig:null,\n    balanceProp:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    selectedOption:null,\n    successMessage:null,\n    permitEnabled:false,\n    availableTokens:null,\n    availableNetworks:[],\n    approveEnabled:false,\n    contractApproved:false,\n    defaultTransaction:null,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    selectedTransaction:null,\n    transactionSucceeded:null,\n    selectedTransactionHash:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n  }\n\n  componentDidMount(){\n    this.loadData();\n  }\n\n  async loadPolygonTxs(){\n    const polygonTxs = await this.functionsUtil.getPolygonBridgeTxs();\n    this.setState({\n      polygonTxs,\n      dataLoaded:true\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      const tokenConfig = this.props.toolProps.availableTokens[this.state.selectedToken];\n      const rootTokenConfig = tokenConfig.rootToken;\n      const childTokenConfig = tokenConfig.childToken;\n\n      // Init contracts\n      await Promise.all([\n        rootTokenConfig ? this.props.initContract(rootTokenConfig.name,rootTokenConfig.address,rootTokenConfig.abi) : null,\n        childTokenConfig ? this.props.initContract(childTokenConfig.name,childTokenConfig.address,childTokenConfig.abi) : null\n      ]);\n\n      this.setState({\n        tokenConfig\n      },() => {\n        this.updateData();\n      });\n    } else {\n      const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n      const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n      if (selectedActionChanged || contractApprovedChanged){\n        this.updateData();\n      }\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async changeInputCallback(inputValue=null){\n\n  }\n\n  getTransactionParams(amount){\n    let value = null;\n    let methodName = null;\n    let methodParams = [];\n    let contractName = null;\n    amount = this.functionsUtil.toBN(amount);\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        switch (this.state.selectedToken){\n          case 'WETH':\n            methodName = 'depositEtherFor';\n            contractName = 'RootChainManager';\n            value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            methodParams = [this.props.account];\n          break;\n          default:\n            const depositData = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n            switch (bridgeType){\n              case 'plasma':\n                contractName = 'DepositManager';\n                methodName = 'depositERC20ForUser';\n                methodParams = [this.state.tokenConfig.rootToken.address,this.props.account,depositData];\n              break;\n              default:\n              case 'pos':\n                methodName = 'depositFor';\n                contractName = 'RootChainManager';\n                methodParams = [this.props.account,this.state.tokenConfig.rootToken.address,depositData];\n              break;\n            }\n          break;\n        }\n      break;\n      case 'Withdraw':\n        methodName = 'withdraw';\n        methodParams = [amount];\n        contractName = this.state.tokenConfig.childToken.name;\n        if (this.state.tokenConfig.sendValue){\n          value = this.props.web3.eth.abi.encodeParameter('uint256', amount);\n        }\n      break;\n      default:\n      break;\n    }\n\n    // console.log('getTransactionParams',{\n    //   value,\n    //   methodName,\n    //   methodParams,\n    //   contractName\n    // });\n\n    return {\n      value,\n      methodName,\n      methodParams,\n      contractName\n    };\n  }\n\n  exitCallback(){\n\n  }\n\n  async getExitTransactionParams(){\n    const txHash = this.state.selectedTransactionHash;\n\n    const logEventSignature = this.props.toolProps.genericParams.erc20LogEventSignature;\n    const exitCalldata = await this.props.maticPOSClient.exitUtil.buildPayloadForExit(txHash,logEventSignature,false);\n    \n    if (exitCalldata){\n      return [exitCalldata];\n    }\n    return null;\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async selectTransaction(selectedTransactionHash){\n    const selectedTransaction = this.state.polygonTxs.find( tx => tx.hash.toLowerCase() === selectedTransactionHash.toLowerCase() );\n    this.setState({\n      selectedTransaction,\n      selectedTransactionHash\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    /*\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        const depositedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0);\n      break;\n      case 'Withdraw':\n        const withdrawnTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n        const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (tx.txReceipt && tx.txReceipt.events && tx.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(tx.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n      break;\n      default:\n      break;\n    }\n    */\n    const transactionSucceeded = tx;\n    this.setState({\n      transactionSucceeded\n    },() => {\n      this.updateData();\n    });\n  }\n\n  async updateData(){\n    const newState = {};\n    const isETH = this.state.selectedToken==='WETH';\n    const bridgeType = this.state.tokenConfig.bridgeType;\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    switch (this.state.selectedAction){\n      case 'Deposit':\n        newState.steps = [];\n        newState.permitEnabled = false;\n        newState.availableNetworks = [1,5];\n        newState.approveEnabled = !isETH;\n        newState.approveDescription = `Approve the contract to deposit your ${this.state.selectedToken}`;\n        newState.contractInfo = bridgeType === 'pos' ? this.props.toolProps.contracts.ERC20Predicate : this.props.toolProps.contracts.DepositManager;\n        newState.balanceProp = isETH ? await this.functionsUtil.getETHBalance(this.props.account) : await this.functionsUtil.getTokenBalance(this.state.tokenConfig.rootToken.name,this.props.account);\n        if (this.state.transactionSucceeded){\n          let depositedTokensLog = null;\n          let depositedTokensEvent = null;\n          if (!isETH){\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.rootToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          } else {\n            depositedTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n            depositedTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.props.toolProps.contracts.EtherPredicate.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          }\n          const depositedTokens = depositedTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensLog.data,16),this.state.tokenConfig.decimals) : ( depositedTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(depositedTokensEvent.raw.data,16),this.state.tokenConfig.decimals) : this.functionsUtil.BNify(0));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully deposited <strong>${depositedTokens.toFixed(4)} ${this.state.selectedToken}</strong> in the Polygon chain. Please wait ~7-8 minutes for your balance to be accounted in the Polygon chain.`\n          }\n        } else {\n          newState.infoBox = {\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n            text:`Please note that deposit of funds takes ~7-8 minutes to be accounted in the Polygon chain.`\n          }\n        }\n        // console.log('updateData',newState);\n      break;\n      case 'Withdraw':\n        newState.permitEnabled = false;\n        newState.approveEnabled = false;\n        newState.approveDescription = '';\n        newState.availableNetworks = [137,80001];\n        newState.contractInfo = this.state.tokenConfig.childToken;\n        newState.balanceProp = newState.availableNetworks.includes(currentNetwork.id) ? await this.functionsUtil.getTokenBalance(this.state.tokenConfig.childToken.name,this.props.account) : this.functionsUtil.BNify(0);\n\n        const maticNetwork = currentNetwork.name;\n        const mainNetworkId = this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetwork.id]);\n        const mainNetworkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',mainNetworkId,'name']);\n        newState.steps = [\n          {\n            icon:'LooksOne',\n            completed:false,\n            description:`Withdraw ${this.state.selectedToken} from ${maticNetwork} network`\n          },\n          {\n            icon:'LooksTwo',\n            completed:false,\n            description:`Wait for the checkpoint to be submitted`\n          },\n          {\n            icon:'Looks3',\n            completed:false,\n            description:`Exit ${this.state.selectedToken} from ${mainNetworkName} network`\n          },\n        ];\n        if (this.state.transactionSucceeded){\n          const withdrawnTokensEvent = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events ? Object.values(this.state.transactionSucceeded.txReceipt.events).find( event => event.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && event.raw.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && event.raw.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && event.raw.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokensLog = this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.logs ? this.state.transactionSucceeded.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.childToken.address.toLowerCase() && log.topics.find( t => t.toLowerCase().includes(this.state.contractInfo.address.replace('0x','').toLowerCase()) ) && log.topics.find( t => t.toLowerCase().includes(this.props.account.replace('0x','').toLowerCase()) ) && log.data.toLowerCase()!=='0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'.toLowerCase() ) : null;\n          const withdrawnTokens = withdrawnTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensLog.data,16),this.state.tokenConfig.decimals) : (this.state.transactionSucceeded.txReceipt && this.state.transactionSucceeded.txReceipt.events && this.state.transactionSucceeded.txReceipt.events.Transfer ? this.functionsUtil.fixTokenDecimals(this.state.transactionSucceeded.txReceipt.events.Transfer.returnValues.value,this.state.tokenConfig.decimals) : ( withdrawnTokensEvent ? this.functionsUtil.fixTokenDecimals(parseInt(withdrawnTokensEvent.raw.data,16),this.state.tokenConfig.decimals)  : this.functionsUtil.BNify(0)));\n          newState.infoBox = {\n            icon:'DoneAll',\n            iconProps:{\n              color:this.props.theme.colors.transactions.status.completed\n            },\n            text:`You have successfully withdrawn <strong>${withdrawnTokens.toFixed(4)} ${this.state.selectedToken}</strong> from the Polygon chain. Please wait up to 2-3 hours to be able to complete the withdrawal.`\n          }\n        } else {\n          let text = '';\n          switch (bridgeType){\n            case 'plasma':\n              text = `Please note that withdraw of funds takes ~7 days in Plasma.`;\n            break;\n            default:\n            case 'pos':\n              text = `Please note that withdraw of funds takes ~45 mins to 1 hour in PoS.`;\n            break;\n          }\n          newState.infoBox = {\n            text,\n            icon:'InfoOutline',\n            iconProps:{\n              color:'cellText'\n            },\n          }\n        }\n      break;\n      case 'Exit':\n        newState.availableNetworks = [1,5];\n        newState.txsToExit = this.state.polygonTxs.filter( tx => tx.action === 'Withdraw' && !tx.exited && tx.tokenSymbol.toUpperCase() === this.state.selectedToken.toUpperCase() ).map( tx => {\n          const label = this.functionsUtil.strToMoment(tx.timeStamp*1000).format('DD-MM-YYYY HH:mm')+' - '+tx.value.toFixed(6)+' '+tx.token;\n          return {\n            label,\n            data:tx,\n            value:tx.hash\n          }\n        });\n\n        newState.defaultTransaction = newState.txsToExit.length>0 ? newState.txsToExit[0] : null;\n        newState.selectedTransaction = newState.defaultTransaction ? newState.defaultTransaction.data : null;\n        newState.selectedTransactionHash = newState.selectedTransaction ? newState.selectedTransaction.hash : null;\n      break;\n      default:\n      break;\n    }\n\n    if (!newState.balanceProp){\n      newState.balanceProp = this.functionsUtil.BNify(0);\n    }\n\n    // console.log('updateData',newState);\n\n    this.setState(newState);\n  }\n\n  async loadData(){\n    const availableTokens = Object.keys(this.props.toolProps.availableTokens).reduce( (output,token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      if (tokenConfig.enabled){\n        output.push({\n          value:token,\n          label:token,\n          ...tokenConfig\n        });\n      }\n      return output;\n    },[]);\n\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const paramIsToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2];\n    const selectedToken = paramIsToken ? this.props.urlParams.param2 : (this.props.selectedToken || this.state.selectedToken || availableTokens[0].value);\n    const selectedOption = availableTokens.find( t => t.value === selectedToken );\n    const defaultAction = !paramIsToken ? (currentNetwork.provider === 'infura' ? 'Deposit' : 'Withdraw') : 'Deposit';\n    const selectedAction = this.props.action || this.state.action || defaultAction;\n    const tokenConfig = this.props.toolProps.availableTokens[selectedToken];\n\n    // console.log('loadData',this.props.urlParams);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedOption,\n      selectedAction,\n      availableTokens\n    },() => {\n      this.loadPolygonTxs();\n    });\n  }\n\n  async exitSelectedTransaction(){\n\n  }\n\n  selectToken(selectedToken){\n    this.setState({\n      selectedToken\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n    const fullWidth = !!this.props.fullWidth;\n    const isExit = this.state.selectedAction === 'Exit';\n    const isDeposit = this.state.selectedAction === 'Deposit';\n    const isWithdraw = this.state.selectedAction === 'Withdraw';\n    const currentNetwork = this.functionsUtil.getRequiredNetwork();\n    const currentNetworkId = currentNetwork.id;\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.availableTokens ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading tokens...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.availableTokens.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active tokens.\n                  </Text>\n                ) : (\n                  <Flex\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                    width={[1,fullWidth ? 1 : '33em']}\n                  >\n                    {\n                      !this.props.selectedToken && (\n                        <Box\n                          width={1}\n                        >\n                          <Text\n                            mb={1}\n                          >\n                            Select Token:\n                          </Text>\n                          <AssetSelector\n                            id={'tokens'}\n                            {...this.props}\n                            showBalance={false}\n                            isSearchable={false}\n                            onChange={this.selectToken.bind(this)}\n                            selectedToken={this.state.selectedToken}\n                            availableTokens={this.props.toolProps.availableTokens}\n                          />\n                        </Box>\n                      )\n                    }\n                    {\n                      this.state.selectedToken && (\n                        <Box\n                          mt={2}\n                          width={1}\n                        >\n                          {\n                            !this.props.action && (\n                              <Box\n                                width={1}\n                              >\n                                <Text\n                                  mb={2}\n                                >\n                                  Choose the action:\n                                </Text>\n                                <Flex\n                                  mb={3}\n                                  alignItems={'center'}\n                                  flexDirection={'row'}\n                                  justifyContent={'space-between'}\n                                >\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Deposit'}\n                                    iconColor={'deposit'}\n                                    icon={'ArrowDownward'}\n                                    iconBgColor={'#ced6ff'}\n                                    handleClick={ e => this.setAction('Deposit') }\n                                    isActive={ this.state.selectedAction === 'Deposit' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Withdraw'}\n                                    iconColor={'redeem'}\n                                    icon={'ArrowUpward'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Withdraw') }\n                                    isActive={ this.state.selectedAction === 'Withdraw' }\n                                  />\n                                  <CardIconButton\n                                    {...this.props}\n                                    cardProps={{\n                                      px:3,\n                                      py:2,\n                                      width:0.325\n                                    }}\n                                    textProps={{\n                                      fontWeight:2,\n                                      fontSize:[1,2]\n                                    }}\n                                    text={'Exit'}\n                                    icon={'SwapHoriz'}\n                                    iconColor={'redeem'}\n                                    iconBgColor={'#ceeff6'}\n                                    handleClick={ e => this.setAction('Exit') }\n                                    isActive={ this.state.selectedAction === 'Exit' }\n                                  />\n                                </Flex>\n                              </Box>\n                            )\n                          }\n                          {\n                            !this.state.availableNetworks.includes(currentNetworkId) ? (\n                              <DashboardCard\n                                cardProps={{\n                                  p:3,\n                                  mb:3,\n                                  width:1\n                                }}\n                              >\n                                <Flex\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                >\n                                  <Icon\n                                    size={'1.8em'}\n                                    name={'Warning'}\n                                    color={'cellText'}\n                                  />\n                                  <Text\n                                    mt={1}\n                                    fontSize={2}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    The <strong>{this.functionsUtil.capitalize(currentNetwork.name)} network</strong> is not supported for this function, please switch to <strong>{this.functionsUtil.getGlobalConfig(['network','availableNetworks',this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]),'name'])} network</strong>.\n                                  </Text>\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,1/2],\n                                      fontSize:[1,2]\n                                    }}\n                                    handleClick={e => this.props.setRequiredNetwork(this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',currentNetworkId]))}\n                                  >\n                                    Switch Network\n                                  </RoundButton>\n                                </Flex>\n                              </DashboardCard>\n                            ) : (this.state.tokenConfig && this.state.balanceProp && this.state.contractInfo) ? (\n                              <Box\n                                mt={1}\n                                width={1}\n                                mb={[4,3]}\n                              >\n                                {\n                                  (isDeposit || isWithdraw) ? (\n                                    <SendTxWithBalance\n                                      {...this.props}\n                                      error={this.state.error}\n                                      steps={this.state.steps}\n                                      infoBox={this.state.infoBox}\n                                      action={this.state.selectedAction}\n                                      tokenConfig={this.state.tokenConfig}\n                                      tokenBalance={this.state.balanceProp}\n                                      contractInfo={this.state.contractInfo}\n                                      permitEnabled={this.state.permitEnabled}\n                                      approveEnabled={this.state.approveEnabled}\n                                      callback={this.transactionSucceeded.bind(this)}\n                                      approveDescription={this.state.approveDescription}\n                                      contractApproved={this.contractApproved.bind(this)}\n                                      balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                      changeInputCallback={this.changeInputCallback.bind(this)}\n                                      getTransactionParams={this.getTransactionParams.bind(this)}\n                                    >\n                                      {\n                                        isDeposit ? (\n                                          <Flex\n                                            width={1}\n                                            alignItems={'stretch'}\n                                            flexDirection={'column'}\n                                            justifyContent={'center'}\n                                          >\n                                            <BuyModal\n                                              {...this.props}\n                                              showInline={true}\n                                              availableMethods={[]}\n                                              buyToken={this.state.selectedToken}\n                                            />\n                                          </Flex>\n                                          // `You don't have any ${this.state.selectedToken} in your wallet.`\n                                        ) : isWithdraw && (\n                                          <DashboardCard\n                                            cardProps={{\n                                              p:3\n                                            }}\n                                          >\n                                            <Flex\n                                              alignItems={'center'}\n                                              flexDirection={'column'}\n                                            >\n                                              <Icon\n                                                name={'MoneyOff'}\n                                                color={'cellText'}\n                                                size={this.props.isMobile ? '1.8em' : '2.3em'}\n                                              />\n                                              <Text\n                                                mt={1}\n                                                fontSize={2}\n                                                color={'cellText'}\n                                                textAlign={'center'}\n                                              >\n                                                You don't have any {this.state.selectedToken} to withdraw.\n                                              </Text>\n                                            </Flex>\n                                          </DashboardCard>\n                                        )\n                                      }\n                                    </SendTxWithBalance>\n                                  ) : isExit && (\n                                    <Box\n                                      width={1}\n                                    >\n                                      {\n                                        !this.state.dataLoaded ? (\n                                          <Flex\n                                            mt={4}\n                                            flexDirection={'column'}\n                                          >\n                                            <FlexLoader\n                                              flexProps={{\n                                                flexDirection:'row'\n                                              }}\n                                              loaderProps={{\n                                                size:'30px'\n                                              }}\n                                              textProps={{\n                                                ml:2\n                                              }}\n                                              text={'Loading transactions...'}\n                                            />\n                                          </Flex>\n                                        ) : this.state.txsToExit.length ? (\n                                          <Box\n                                            width={1}\n                                          >\n                                            <Text mb={1}>\n                                              Select Transaction:\n                                            </Text>\n                                            <GenericSelector\n                                              {...this.props}\n                                              isSearchable={false}\n                                              name={'transactions'}\n                                              options={this.state.txsToExit}\n                                              onChange={this.selectTransaction.bind(this)}\n                                              defaultValue={this.state.defaultTransaction}\n                                            />\n                                            {\n                                              this.state.selectedTransaction && \n                                                !this.state.selectedTransaction.included ? (\n                                                  <IconBox\n                                                    cardProps={{\n                                                      mt:3,\n                                                      width:1\n                                                    }}\n                                                    icon={'AccessTime'}\n                                                    text={'This transaction has not been included in the checkpoint yet.<br />Please wait up to 2-3 hours to be able to complete the withdrawal.'}\n                                                  />\n                                                ) : (\n                                                  <ExecuteTransaction\n                                                    action={'Exit'}\n                                                    Component={Button}\n                                                    parentProps={{\n                                                      mt:3,\n                                                      alignItems:'center',\n                                                      justifyContent:'center'\n                                                    }}\n                                                    componentProps={{\n                                                      fontWeight:3,\n                                                      width:[1,1/3],\n                                                      size:'medium',\n                                                      height:'45px',\n                                                      fontSize:[2,3],\n                                                      boxShadow:null,\n                                                      borderRadius:4,\n                                                      mainColor:'redeem',\n                                                      value:'Exit Transaction',\n                                                    }}\n                                                    params={[]}\n                                                    methodName={'exit'}\n                                                    sendRawTransaction={true}\n                                                    contractName={'RootChainManager'}\n                                                    callback={this.exitCallback.bind(this)}\n                                                    getTransactionParamsAsync={this.getExitTransactionParams.bind(this)}\n                                                    {...this.props}\n                                                  >\n                                                    <Flex\n                                                      flexDirection={'row'}\n                                                      alignItems={'center'}\n                                                      justifyContent={'center'}\n                                                    >\n                                                      <Icon\n                                                        mr={1}\n                                                        name={'Done'}\n                                                        size={'1.4em'}\n                                                        color={this.props.theme.colors.transactions.status.completed}\n                                                      />\n                                                      <Text\n                                                        fontWeight={500}\n                                                        fontSize={'15px'}\n                                                        color={'copyColor'}\n                                                        textAlign={'center'}\n                                                      >\n                                                        Transaction successfully exited!\n                                                      </Text>\n                                                    </Flex>\n                                                  </ExecuteTransaction>\n                                                )\n                                            }\n                                          </Box>\n                                        ) : (\n                                          <IconBox\n                                            cardProps={{\n                                              mt:3,\n                                              width:1\n                                            }}\n                                            icon={'Warning'}\n                                            text={'You cannot exit any transaction yet.'}\n                                          />\n                                        )\n                                      }\n                                    </Box>\n                                  )\n                                }\n                              </Box>\n                            ) : (\n                              <Flex\n                                mt={3}\n                                mb={3}\n                                width={1}\n                              >\n                                <FlexLoader\n                                  flexProps={{\n                                    flexDirection:'row'\n                                  }}\n                                  loaderProps={{\n                                    size:'30px'\n                                  }}\n                                  textProps={{\n                                    ml:2\n                                  }}\n                                  text={'Loading info...'}\n                                />\n                              </Flex>\n                            )\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default PolygonBridge;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport AssetField from '../AssetField/AssetField';\nimport ImageButton from '../ImageButton/ImageButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport BuyModal from '../utilities/components/BuyModal';\nimport GenericSelector from '../GenericSelector/GenericSelector';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\n\nclass CoverProtocol extends Component {\n\n  state = {\n    steps:null,\n    infoBox:null,\n    swapInfo:null,\n    portfolio:null,\n    inputValue:null,\n    description:null,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    selectedToken:null,\n    selectedAction:null,\n    successMessage:null,\n    activeCoverages:null,\n    defaultCoverage:null,\n    selectedCoverage:null,\n    contractApproved:false,\n    approveDescription:null,\n    balanceSelectorInfo:null,\n    transactionSucceeded:false\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadData();\n    // window.transactionSucceeded = this.transactionSucceeded.bind(this);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const selectedCoverageChanged = prevState.selectedCoverage !== this.state.selectedCoverage;\n    if (selectedCoverageChanged){\n      const selectedToken = this.state.selectedCoverage.collateral;\n      const tokenConfig = Object.values(this.props.availableStrategies)[0][selectedToken];\n      const tokenBalance = await this.functionsUtil.getTokenBalance(selectedToken,this.props.account);\n      const selectedAction = !this.state.selectedAction ? (this.props.urlParams.param2 || 'Claim') : this.state.selectedAction;\n      this.setState({\n        tokenConfig,\n        tokenBalance,\n        selectedToken,\n        selectedAction\n      });\n    }\n\n    const contractApprovedChanged = prevState.contractApproved !== this.state.contractApproved;\n    const selectedActionChanged = prevState.selectedAction !== this.state.selectedAction;\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue && this.state.inputValue.gt(0);\n    const swapInfoChanged = JSON.stringify(prevState.swapInfo) !== JSON.stringify(this.state.swapInfo) && this.state.inputValue && this.state.inputValue.gt(0);\n    if (selectedActionChanged || inputValueChanged || swapInfoChanged || contractApprovedChanged){\n      this.updateData();\n    }\n\n    const contractInfoChanged = JSON.stringify(prevState.contractInfo) !== JSON.stringify(this.state.contractInfo);\n    if (contractInfoChanged){\n      this.changeInputCallback();\n    }\n  }\n\n  async getSwapInfo(amount){\n    amount = this.functionsUtil.BNify(amount);\n    if (!amount.isNaN() && amount.gt(0)){\n      // console.log('getSwapInfo',this.state.contractInfo.name,this.state.tokenConfig.address,balancerTokenConfig.address,swapFee,covTokens,tokenPrice);\n\n      if (this.state.tokenPrice && this.state.swapFee && this.state.covTokens){\n\n        const swapFee = this.state.swapFee;\n        const tokenPrice = this.state.tokenPrice;\n        let tokenAmountOut = amount.div(tokenPrice);\n        tokenAmountOut = tokenAmountOut.minus(tokenAmountOut.times(swapFee));\n\n        return {\n          amount,\n          tokenAmountOut\n        };\n      }\n    }\n\n    return null;\n  }\n\n  async changeInputCallback(inputValue=null){\n    let swapInfo = null;\n    let balanceSelectorInfo = null;\n    inputValue = inputValue || this.state.inputValue;\n\n    if (inputValue && this.functionsUtil.BNify(inputValue).gt(0)){\n      switch (this.state.selectedAction){\n        case 'Mint':\n          balanceSelectorInfo = {\n            color:this.props.theme.colors.transactions.status.completed,\n            text:`You will Mint: ${inputValue.toFixed(4)} CLAIM and NOCLAIM`\n          };\n        break;\n        case 'Claim':\n        case 'NoClaim':\n          const amount = this.functionsUtil.normalizeTokenAmount(inputValue,this.state.tokenConfig.decimals);\n          swapInfo = await this.getSwapInfo(amount);\n          if (swapInfo){\n            if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n              balanceSelectorInfo = {\n                color:this.props.theme.colors.transactions.status.completed,\n                text:`You will Buy: ~${this.functionsUtil.fixTokenDecimals(swapInfo.tokenAmountOut,18).toFixed(4)} ${this.state.selectedAction}`\n              };\n            } else {\n              balanceSelectorInfo = {\n                text:`Not enough liquidity`,\n                color:this.props.theme.colors.transactions.status.failed,\n              };\n            }\n          }\n        break;\n        default:\n        break;\n      }\n    }\n\n    this.setState({\n      swapInfo,\n      inputValue,\n      balanceSelectorInfo\n    });\n  }\n\n  async getTransactionParams(amount){\n    let methodName = null;\n    let methodParams = null;\n    amount = this.functionsUtil.BNify(amount);\n    const MAX_UINT256 = this.functionsUtil.BNify(2).pow(256).minus(1).toFixed(0);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        methodName = 'addCover';\n        methodParams = [this.state.tokenConfig.address,parseInt(this.state.selectedCoverage.expirationTimestamp),this.functionsUtil.integerValue(amount)];\n      break;\n      case 'Claim':\n      case 'NoClaim':\n        methodName = 'swapExactAmountOut';\n        const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const swapInfo = await this.getSwapInfo(amount);\n        if (swapInfo){\n          if (swapInfo.tokenAmountOut.lte(this.state.covTokens)){\n            methodParams = [this.state.tokenConfig.address,this.functionsUtil.integerValue(amount),balancerTokenConfig.address, this.functionsUtil.integerValue(swapInfo.tokenAmountOut), MAX_UINT256];\n          } else {\n            return null;\n          }\n        }\n      break;\n      default:\n      break;\n    }\n    return {\n      methodName,\n      methodParams\n    };\n  }\n\n  async contractApproved(contractApproved){\n    this.setState({\n      contractApproved\n    });\n  }\n\n  async transactionSucceeded(tx,amount,params){\n    let infoBox = null;\n    const dashboardUrl = `#${this.functionsUtil.getGlobalConfig(['dashboard','baseRoute'])}/best`;\n    const fixedAmount = this.functionsUtil.fixTokenDecimals(amount,this.state.tokenConfig.decimals);\n    switch (this.state.selectedAction){\n      case 'Mint':\n        const mintedClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['Claim'].address ) : null;\n        const mintedNoClaimLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.selectedCoverage.tokens['NoClaim'].address ) : null;\n        const mintedClaimAmount = mintedClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        const mintedNoClaimAmount = mintedNoClaimLog ? this.functionsUtil.fixTokenDecimals(parseInt(mintedNoClaimLog.data,16),this.state.contractInfo.decimals) : fixedAmount;\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully minted <strong>${mintedClaimAmount.toFixed(4)} CLAIM</strong> and <strong>${mintedNoClaimAmount.toFixed(4)} NOCLAIM</strong> tokens<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'Claim':\n        const claimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const claimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === claimTokenConfig.address ) : null;\n        const receivedClaimAmount = claimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(claimTokensLog.data,16),claimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],claimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you are now covered in the event that there is a successful attack on the protocol<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      case 'NoClaim':\n        debugger;\n        const noClaimTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n        const noClaimTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === noClaimTokenConfig.address ) : null;\n        const receivedNoClaimAmount = noClaimTokensLog ? this.functionsUtil.fixTokenDecimals(parseInt(noClaimTokensLog.data,16),noClaimTokenConfig.balancerPool.decimals) : this.functionsUtil.fixTokenDecimals(params[3],noClaimTokenConfig.balancerPool.decimals);\n        infoBox = {\n          icon:'DoneAll',\n          iconProps:{\n            color:this.props.theme.colors.transactions.status.completed\n          },\n          text:`You have successfully bought <strong>${receivedNoClaimAmount.toFixed(4)} ${this.state.selectedAction}</strong> tokens, you will be rewarded if there is no successful attack on the protocol by the expiry date<br /><a href=\"${dashboardUrl}\" styles=\"text-align:center;font-size:14px;color:${this.props.theme.colors.primary}\">Go to Dashboard</a>`\n        }\n      break;\n      default:\n      break;\n    }\n\n    // Set second step completed\n    let steps = this.state.steps;\n    steps[1].completed = true;\n\n    const transactionSucceeded = true;\n    const tokenBalance = await this.functionsUtil.getTokenBalance(this.state.selectedToken,this.props.account);\n\n    // console.log('transactionSucceeded',infoBox);\n\n    this.setState({\n      steps,\n      infoBox,\n      tokenBalance,\n      transactionSucceeded\n    });\n  }\n\n  async updateData(){\n    let apy = null;\n    const steps = [];\n    let infoBox = null;\n    let swapFee = null;\n    let covTokens = null;\n    let tokenPrice = null;\n    let tokenAmount = null;\n    let contractInfo = null;\n    let collateralAmount = null;\n    let approveDescription = null;\n\n    const claimTokenConfig = this.state.selectedCoverage.tokens['Claim'];\n    const noClaimTokenConfig = this.state.selectedCoverage.tokens['NoClaim'];\n    const balancerClaimConfig = claimTokenConfig.balancerPool;\n    const balancerNoClaimConfig = noClaimTokenConfig.balancerPool;\n\n    await Promise.all([\n      this.props.initContract(claimTokenConfig.name,claimTokenConfig.address,claimTokenConfig.abi),\n      this.props.initContract(noClaimTokenConfig.name,noClaimTokenConfig.address,noClaimTokenConfig.abi),\n      this.props.initContract(balancerClaimConfig.name,balancerClaimConfig.address,balancerClaimConfig.abi),\n      this.props.initContract(balancerNoClaimConfig.name,balancerNoClaimConfig.address,balancerNoClaimConfig.abi)\n    ]);\n\n    const [\n      claimTokenBalance,\n      noClaimTokenBalance,\n      balancerPoolClaimBalance,\n      balancerPoolNoClaimBalance\n    ] = await Promise.all([\n      // Get Claim token balance\n      this.functionsUtil.getTokenBalance(claimTokenConfig.name,this.props.account),\n      // Get NOCLAIM token balance\n      this.functionsUtil.getTokenBalance(noClaimTokenConfig.name,this.props.account),\n      // Get Balancer Claim token Pool balance\n      this.functionsUtil.getTokenBalance(balancerClaimConfig.name,this.props.account),\n      // Get Balancer NOCLAIM token Pool balance\n      this.functionsUtil.getTokenBalance(balancerNoClaimConfig.name,this.props.account)\n    ]);\n\n    // Check if user has both Claim and NOCLAIM tokens\n    const hasMintedTokens = claimTokenBalance && noClaimTokenBalance && claimTokenBalance.gt(0) && noClaimTokenBalance.gt(0);\n\n    // Set Contract Info\n    switch (this.state.selectedAction){\n      case 'Mint':\n        contractInfo = this.props.toolProps.contract;\n      break;\n      case 'NoClaim':\n        contractInfo = noClaimTokenConfig.balancerPool;\n      break;\n      case 'Claim':\n        contractInfo = claimTokenConfig.balancerPool;\n      break;\n      default:\n      break;\n    }\n\n    const balancerTokenConfig = this.state.selectedCoverage.tokens[this.state.selectedAction];\n\n    if (contractInfo){\n      if (balancerTokenConfig){\n        [\n          swapFee,\n          covTokens,\n          tokenPrice\n        ] = await Promise.all([\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSwapFee'),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getBalance',[balancerTokenConfig.address]),\n          this.functionsUtil.genericContractCall(contractInfo.name,'getSpotPrice',[this.state.tokenConfig.address,balancerTokenConfig.address])\n        ]);\n\n        // Calculate yearly returns\n        if (tokenPrice){\n          const isClaim = this.state.selectedAction === 'Claim';\n          const expirationTimestamp = this.state.selectedCoverage.expirationTimestamp;\n          const days =  (expirationTimestamp*1000 - Date.now())/(60 * 60 * 24 * 1000);\n          tokenPrice = this.functionsUtil.fixTokenDecimals(tokenPrice,this.state.tokenConfig.decimals);\n          const apyPrice = isClaim ? tokenPrice : this.functionsUtil.BNify(1).minus(tokenPrice).div(tokenPrice);\n          apy = this.functionsUtil.BNify(100).times(apyPrice).times(365).div(days);\n        }\n\n        // Fix swap Fees\n        if (swapFee){\n          swapFee = this.functionsUtil.fixTokenDecimals(swapFee,18);\n        }\n      }\n\n      switch (this.state.selectedAction){\n        case 'Mint':\n          approveDescription = `Approve the Cover Protocol contract`;\n          infoBox = {\n            icon:'MonetizationOn',\n            text:`Stake ${this.state.selectedToken} to mint both CLAIM and NOCLAIM tokens in a 1:1 ratio then add them to the respective Balancer Pool to earn trading fees.<br /><small>Prior to expiry or an accepted claim, users can redeem back their collateral with both their CLAIM and NOCLAIM tokens. <a href=\"https://docs.coverprotocol.com/user-guide/redemption\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a></small>`\n          };\n          // Add Approve Step\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:hasMintedTokens,\n            description:`Mint CLAIM and NOCLAIM tokens`\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks3',\n            description:`Add your CLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolClaimBalance && balancerPoolClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['Claim'].balancerPool.address}/`,\n          });\n          // Add Liquidity to Balancer Step\n          steps.push({\n            icon:'Looks4',\n            description:`Add your NOCLAIM tokens to the Balancer Pool`,\n            completed:balancerPoolNoClaimBalance && balancerPoolNoClaimBalance.gt(0),\n            link:`https://pools.balancer.exchange/#/pool/${this.state.selectedCoverage.tokens['NoClaim'].balancerPool.address}/`,\n          });\n        break;\n        case 'NoClaim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your NOCLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong> if there is no successful attack on the protocol by the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'VerifiedUser',\n              text:`NOCLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold if there is no successful attack on the protocol by the expiry date.`\n            };\n          }\n\n          // Add Yearly cost and read more\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly return of buying and holding NOCLAIM until expiration is <strong>${apy.toFixed(2)}%</strong>` : null}</span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the NOCLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:noClaimTokenBalance && noClaimTokenBalance.gt(0),\n            description:`Buy NOCLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        case 'Claim':\n          if (this.state.swapInfo){\n            collateralAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.amount,this.state.tokenConfig.decimals);\n            tokenAmount = this.functionsUtil.fixTokenDecimals(this.state.swapInfo.tokenAmountOut,contractInfo.decimals);\n            const portfolioCoveredPerc = 32;//this.state.portfolio && this.state.portfolio.totalBalance.gt(0) ? tokenAmount.div(this.state.portfolio.totalBalance).times(100) : null;\n            infoBox = {\n              icon:'BeachAccess',\n              text:`By providing <strong>${collateralAmount.toFixed(4)} ${this.state.selectedToken}</strong> your CLAIM tokens will pay out <strong>~${tokenAmount.toFixed(4)} ${this.state.selectedToken}</strong>${ portfolioCoveredPerc ? ` <strong>(${portfolioCoveredPerc}% of your portfolio)</strong>` : '' } in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          } else {\n            infoBox = {\n              icon:'BeachAccess',\n              text:`CLAIM tokens will pay out 1 ${this.state.selectedToken} for each token you hold in the event that there is a successful attack on the protocol before the expiry date.`\n            };\n          }\n\n          infoBox.text+=`${apy ? `<br /><span style=\"color:${this.props.theme.colors.primary}\">The yearly cost of buying and holding CLAIM until expiration is <strong>${apy.toFixed(2)}%` : null}</strong></span><br /><small><a href=\"https://docs.coverprotocol.com/product/claims-guidelines\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" style=\"color:${this.props.theme.colors.primary}\">Read more</a> to understand how claims are assessed and paid out by Cover Protocol.</small>`;\n\n          // Add Approve Step\n          approveDescription = `Approve the CLAIM Balancer Pool contract`;\n          steps.push({\n            icon:'LooksOne',\n            description:approveDescription,\n            completed:this.state.contractApproved\n          });\n          // Add Mint Step\n          steps.push({\n            icon:'LooksTwo',\n            completed:claimTokenBalance && claimTokenBalance.gt(0),\n            description:`Buy CLAIM tokens with your ${this.state.selectedToken}`\n          });\n        break;\n        default:\n        break;\n      }\n\n      const transactionSucceeded = false;\n      this.setState({\n        apy,\n        steps,\n        infoBox,\n        swapFee,\n        covTokens,\n        tokenPrice,\n        contractInfo,\n        approveDescription,\n        transactionSucceeded\n      });\n    }\n  }\n\n  async loadData(){\n    const currTime = parseInt(Date.now()/1000);\n    const activeCoverages = this.props.toolProps.coverages.reduce( (output,c,index) => {\n      if (c.expirationTimestamp>currTime){\n        const expirationDate = this.functionsUtil.strToMoment(c.expirationTimestamp*1000).utc().format('YYYY-MM-DD HH:mm:ss')+' UTC';\n        const icon = `images/tokens/${c.collateral}.svg`;\n        const label = `Collateral: ${c.collateral} - Expiration: ${expirationDate}`;\n        output.push({\n          icon,\n          label,\n          data:c,\n          value:expirationDate,\n        });\n      }\n      return output;\n    },[]);\n\n    const portfolio = await this.functionsUtil.getAccountPortfolio();\n    const defaultCoverage = activeCoverages.length ? activeCoverages[0] : null;\n\n    this.setState({\n      portfolio,\n      defaultCoverage,\n      activeCoverages\n    },() => {\n      if (defaultCoverage){\n        this.selectCoverage(defaultCoverage);\n      }\n    });\n  }\n\n  async selectCoverage(coverage){\n    const selectedCoverage = coverage.data;\n    this.setState({\n      selectedCoverage\n    });\n  }\n\n  setAction(selectedAction){\n    this.setState({\n      selectedAction\n    });\n  }\n\n  render() {\n\n    const isMint = this.state.selectedAction === 'Mint';\n    const isBuyClaim = this.state.selectedAction === 'Claim';\n    const isBuyNoClaim = this.state.selectedAction === 'NoClaim';\n    const txAction = isMint ? this.state.selectedAction : `Buy ${this.state.selectedAction}`;\n\n    const CustomOptionValue = props => {\n      const label = props.label;\n      const tokenConfig = {\n        icon:props.data.icon\n      };\n\n      return (\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'row'}\n          justifyContent={'space-between'}\n        >\n          <Flex\n            alignItems={'center'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  width:'2em',\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    const CustomValueContainer = props => {\n\n      const options = props.selectProps.options;\n      const selectProps = options.indexOf(props.selectProps.value) !== -1 ? props.selectProps.value : null;\n\n      if (!selectProps){\n        return null;\n      }\n\n      const label = selectProps.label;\n      const tokenConfig = {\n        icon:selectProps.icon\n      };\n\n      return (\n        <Flex\n          style={{\n            flex:'1'\n          }}\n          justifyContent={'space-between'}\n          {...props.innerProps}\n        >\n          <Flex\n            p={0}\n            width={1}\n            {...props.innerProps}\n            alignItems={'center'}\n            flexDirection={'row'}\n            style={{cursor:'pointer'}}\n            justifyContent={'flex-start'}\n          >\n            <AssetField\n              token={label}\n              tokenConfig={tokenConfig}\n              fieldInfo={{\n                name:'icon',\n                props:{\n                  mr:2,\n                  height:'2em'\n                }\n              }}\n            />\n            <AssetField\n              token={label}\n              fieldInfo={{\n                name:'tokenName',\n                props:{\n                  fontSize:[1,2],\n                  fontWeight:500,\n                  color:'copyColor'\n                }\n              }}\n            />\n          </Flex>\n        </Flex>\n      );\n    }\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        {\n          !this.state.activeCoverages ? (\n            <Flex\n              mt={4}\n              flexDirection={'column'}\n            >\n              <FlexLoader\n                flexProps={{\n                  flexDirection:'row'\n                }}\n                loaderProps={{\n                  size:'30px'\n                }}\n                textProps={{\n                  ml:2\n                }}\n                text={'Loading active coverages...'}\n              />\n            </Flex>\n          ) : (\n            <Flex\n              width={1}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              {\n                !this.state.activeCoverages.length ? (\n                  <Text\n                    fontWeight={2}\n                    fontSize={[2,3]}\n                    color={'dark-gray'}\n                    textAlign={'center'}\n                  >\n                    There are no active coverages.\n                  </Text>\n                ) : (\n                  <Flex\n                    width={[1,0.46]}\n                    alignItems={'stretch'}\n                    flexDirection={'column'}\n                    justifyContent={'center'}\n                  >\n                    <Box\n                      width={1}\n                    >\n                      <Text mb={1}>\n                        Select Coverage:\n                      </Text>\n                      <GenericSelector\n                        {...this.props}\n                        name={'strategy'}\n                        isSearchable={false}\n                        options={this.state.activeCoverages}\n                        CustomOptionValue={CustomOptionValue}\n                        defaultValue={this.state.defaultCoverage}\n                        onChange={this.selectCoverage.bind(this)}\n                        CustomValueContainer={CustomValueContainer}\n                      />\n                    </Box>\n                    {\n                      this.state.selectedCoverage && (\n                        <Box\n                          mt={3}\n                          width={1}\n                        >\n                          <Text mb={1}>\n                            Select Action:\n                          </Text>\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={['column','row']}\n                            justifyContent={'space-between'}\n                          >\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isMint ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Add Liquidity'}\n                              imageSrc={'images/mint.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'mint CLAIM and NOCLAIM\\nand stake in Balancer Pool'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isMint}\n                              handleClick={ e => this.setAction('Mint') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy CLAIM'}\n                              imageSrc={'images/claim.svg'}\n                              isMobile={this.props.isMobile}\n                              subcaption={'protect in case of attacks\\nagainst the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyClaim}\n                              handleClick={ e => this.setAction('Claim') }\n                            />\n                            <ImageButton\n                              buttonProps={{\n                                mx:0,\n                                border:isBuyNoClaim ? 2 : 0\n                              }}\n                              width={[1,'32%']}\n                              caption={'Buy NOCLAIM'}\n                              isMobile={this.props.isMobile}\n                              imageSrc={'images/noclaim.svg'}\n                              subcaption={'get rewarded if no attack\\noccurs on the Idle protocol'}\n                              imageProps={{\n                                mb:2,\n                                height:this.props.isMobile ? '42px' : '52px'\n                              }}\n                              isActive={isBuyNoClaim}\n                              handleClick={ e => this.setAction('NoClaim') }\n                            />\n                          </Flex>\n                          {\n                            this.state.tokenConfig && this.state.tokenBalance && this.state.contractInfo &&\n                              <Box\n                                mt={2}\n                                mb={3}\n                                width={1}\n                              >\n                                <SendTxWithBalance\n                                  {...this.props}\n                                  action={txAction}\n                                  error={this.state.error}\n                                  steps={this.state.steps}\n                                  infoBox={this.state.infoBox}\n                                  tokenConfig={this.state.tokenConfig}\n                                  tokenBalance={this.state.tokenBalance}\n                                  contractInfo={this.state.contractInfo}\n                                  callback={this.transactionSucceeded.bind(this)}\n                                  contractApproved={this.contractApproved.bind(this)}\n                                  approveDescription={this.state.approveDescription}\n                                  balanceSelectorInfo={this.state.balanceSelectorInfo}\n                                  changeInputCallback={this.changeInputCallback.bind(this)}\n                                  getTransactionParams={this.getTransactionParams.bind(this)}\n                                >\n                                  <BuyModal\n                                    {...this.props}\n                                    showInline={true}\n                                    availableMethods={[]}\n                                    buyToken={this.state.selectedToken}\n                                  />\n                                </SendTxWithBalance>\n                              </Box>\n                          }\n                        </Box>\n                      )\n                    }\n                  </Flex>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CoverProtocol;\n","import Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport { Flex, Box, Text, Icon } from \"rimble-ui\";\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass TokenMigration extends Component {\n\n  state = {\n    tokenConfig:null,\n    selectedFromToken:null,\n    selectedDestToken:null,\n    migrationSucceeded:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async loadTokens(){\n    const selectedFromToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    if (selectedFromToken && selectedFromToken !== this.props.urlParams.param2){\n      this.changeFromToken(selectedFromToken);\n    }\n\n    this.selectFromToken(selectedFromToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n  }\n\n  changeFromToken = (selectedToken) => {\n    const convertTool = this.functionsUtil.getGlobalConfig(['tools','tokenMigration']);\n    this.props.goToSection(`tools/${convertTool.route}/${selectedToken}`);\n  }\n\n  selectFromToken = async (selectedFromToken) => {\n    const tokenInfo = this.props.toolProps.availableTokens[selectedFromToken];\n\n    let selectedDestToken = null;\n    const availableDestinationTokens = {};\n\n    const availableStrategies = typeof this.props.toolProps.availableStrategies !== 'undefined' ? this.props.toolProps.availableStrategies : Object.keys(this.props.availableStrategies);\n\n    availableStrategies.forEach( strategy => {\n      const strategyAvailableTokens =  this.props.availableStrategies[strategy];\n      const baseTokenConfig = strategyAvailableTokens[tokenInfo.baseToken];\n      if (!baseTokenConfig){\n        return false;\n      }\n\n      // Remove icon\n      delete baseTokenConfig.icon;\n\n      if (!selectedDestToken){\n        selectedDestToken = baseTokenConfig.idle.token;\n      }\n      baseTokenConfig.strategy = strategy;\n      baseTokenConfig.baseToken = tokenInfo.baseToken;\n      availableDestinationTokens[baseTokenConfig.idle.token] = baseTokenConfig;\n    });\n\n    this.setState({\n      tokenConfig:null,\n      selectedFromToken,\n      availableDestinationTokens\n    },() => {\n      this.selectDestToken(selectedDestToken);\n    });\n  }\n\n  selectDestToken = async (selectedDestToken) => {\n\n    const destTokenConfig = this.state.availableDestinationTokens[selectedDestToken];\n    const tokenInfo = this.props.toolProps.availableTokens[this.state.selectedFromToken];\n\n    const tokenConfig = {\n      token:destTokenConfig.baseToken,\n      address:destTokenConfig.address,\n      decimals:destTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = destTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:tokenInfo.abi,\n      name:tokenInfo.token,\n      token:tokenInfo.token,\n      address:tokenInfo.address\n    };\n    \n    const migrationContract = this.props.toolProps.migrationContract;\n\n    // Add migration function\n    if (tokenInfo.migrateFunction){\n      migrationContract.functions[0].name = tokenInfo.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(destTokenConfig.strategy,tokenInfo.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedDestToken\n    });\n  }\n\n  migrationCallback = () => {\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedFromToken){\n      return null;\n    }\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={true}\n              onChange={this.changeFromToken}\n              selectedToken={this.state.selectedFromToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            this.state.availableDestinationTokens && this.state.selectedDestToken && \n              <Box\n                mt={2}\n                width={1}\n              >\n                <Text mb={1}>\n                  Select destination asset:\n                </Text>\n                <AssetSelector\n                  {...this.props}\n                  id={'token-dest'}\n                  showBalance={false}\n                  onChange={this.selectDestToken}\n                  selectedToken={this.state.selectedDestToken}\n                  availableTokens={this.state.availableDestinationTokens}\n                />\n              </Box>\n          }\n          {\n            this.state.selectedFromToken && this.state.selectedDestToken ? (\n              <Migrate\n                {...this.props}\n                showActions={false}\n                getTokenPrice={false}\n                isMigrationTool={true}\n                tokenConfig={this.state.tokenConfig}\n                migrationCallback={this.migrationCallback}\n                selectedToken={this.state.selectedFromToken}\n                selectedStrategy={this.props.selectedStrategy}\n              >\n                {\n                  !this.props.account ? (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'column'}\n                      >\n                        <Icon\n                          size={'2.3em'}\n                          name={'Input'}\n                          color={'cellText'}\n                        />\n                        <Text\n                          mt={2}\n                          fontSize={2}\n                          color={'cellText'}\n                          textAlign={'center'}\n                        >\n                          Please connect with your wallet interact with Idle.\n                        </Text>\n                        <RoundButton\n                          buttonProps={{\n                            mt:2,\n                            width:[1,1/2]\n                          }}\n                          handleClick={this.props.connectAndValidateAccount}\n                        >\n                          Connect\n                        </RoundButton>\n                      </Flex>\n                    </DashboardCard>\n                  ) : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        mt:3\n                      }}\n                    >\n                      {\n                        this.state.migrationSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              Your {this.state.selectedFromToken} have been successfully migrated!\n                            </Text>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'MoneyOff'}\n                              color={'cellText'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You don't have any {this.state.selectedFromToken} in your wallet.\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Migrate>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default TokenMigration;\n","/*\n// batchDeposits[user][batchId] = amount\nmapping (address => mapping (uint256 => uint256)) public batchDeposits;\nmapping (uint256 => uint256) batchTotals; // in idleToken\nmapping (uint256 => uint256) batchRedeemedTotals; // in newIdleToken\n\nuint256 public currBatch;\naddress public idleToken;\naddress public newIdleToken;\naddress public underlying;\n\nfunction deposit() external\nfunction withdraw(uint256 batchId) external\n*/\n\nimport Migrate from '../Migrate/Migrate';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Box, Text, Icon, Link } from \"rimble-ui\";\nimport AssetSelector from '../AssetSelector/AssetSelector';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\n\nclass BatchMigration extends Component {\n\n  state = {\n    canClaim:false,\n    batchTotals:{},\n    canDeposit:true,\n    action:'deposit',\n    batchDeposits:{},\n    tokenConfig:null,\n    processing:{\n      claim:{\n        txHash:null,\n        loading:false\n      },\n    },\n    hasDeposited:false,\n    selectedToken:null,\n    batchCompleted:false,\n    claimSucceeded:false,\n    migrationSucceeded:false,\n    selectedTokenConfig:null,\n    migrationContractApproved:false,\n    availableDestinationTokens:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.loadTokens();\n  }\n\n  async checkBatchs(){\n\n    const migrationContractInfo = this.state.selectedTokenConfig.migrationContract;\n\n    await Promise.all([\n      this.props.initContract(migrationContractInfo.name,migrationContractInfo.address,migrationContractInfo.abi),\n      this.props.initContract(this.state.selectedTokenConfig.name,this.state.selectedTokenConfig.address,this.state.selectedTokenConfig.abi)\n    ]);\n\n    const [currBatchIndex,migrationContractApproved] = await Promise.all([\n      this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'currBatch'),\n      this.functionsUtil.checkTokenApproved(this.state.selectedTokenConfig.name,migrationContractInfo.address,this.props.account)\n    ]);\n\n    const newState = {};\n    const batchDeposits = {};\n    const batchTotals = {};\n    let batchCompleted = false;\n\n    if (currBatchIndex !== null){\n      for (let batchIndex = 0; batchIndex <= currBatchIndex ; batchIndex++){\n        let [batchTotal,batchDeposit] = await Promise.all([\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchTotals',[batchIndex]),\n          this.functionsUtil.genericContractCall(this.state.selectedTokenConfig.migrationContract.name,'batchDeposits',[this.props.account,batchIndex])\n        ]);\n        if (batchTotal && batchTotal !== null){\n          batchTotals[batchIndex] = this.functionsUtil.fixTokenDecimals(batchTotal,this.state.selectedTokenConfig.decimals);\n        }\n        if (batchDeposit !== null){\n          batchDeposit = this.functionsUtil.fixTokenDecimals(batchDeposit,this.state.selectedTokenConfig.decimals);\n          if (batchDeposit.gt(0)){\n\n            batchDeposits[batchIndex] = batchDeposit;\n            // Check claimable\n            if (batchIndex < currBatchIndex){\n              batchCompleted = true;\n            }\n          }\n        }\n      }\n\n      newState.batchDeposits = batchDeposits;\n    }\n\n    const hasDeposited = (batchDeposits && Object.keys(batchDeposits).length>0);\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    newState.claimSucceeded = false;\n    newState.batchTotals = batchTotals;\n    newState.batchCompleted = batchCompleted;\n    newState.hasDeposited = hasDeposited;\n    newState.canDeposit = !hasDeposited && batchMigrationDepositEnabled;\n    newState.canClaim = batchCompleted || hasDeposited;\n    newState.action = hasDeposited ? 'redeem' : 'deposit';\n    newState.migrationContractApproved = migrationContractApproved;\n\n    this.setState(newState);\n  }\n\n  async loadTokens(){\n    const selectedToken = this.props.urlParams.param2 && this.props.toolProps.availableTokens[this.props.urlParams.param2] ? this.props.urlParams.param2 : Object.keys(this.props.toolProps.availableTokens)[0];\n\n    await this.functionsUtil.asyncForEach(Object.keys(this.props.toolProps.availableTokens),async (token) => {\n      const tokenConfig = this.props.toolProps.availableTokens[token];\n      const tokenContract = this.functionsUtil.getContractByName(tokenConfig.token);\n      if (!tokenContract && tokenConfig.abi){\n        await this.props.initContract(tokenConfig.token,tokenConfig.address,tokenConfig.abi);\n      }\n    });\n\n    this.selectFromToken(selectedToken);\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const tokenFromChanged = prevProps.urlParams.param2 !== this.props.urlParams.param2;\n    if (tokenFromChanged){\n      await this.loadTokens();\n    }\n\n    const selectedTokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    if (selectedTokenChanged){\n      this.checkBatchs();\n    }\n  }\n\n  selectFromToken = async (selectedToken) => {\n\n    const selectedTokenConfig = this.props.toolProps.availableTokens[selectedToken];\n    const strategyAvailableTokens =  this.props.availableStrategies[selectedTokenConfig.strategy];\n\n    const baseTokenConfig = strategyAvailableTokens[selectedTokenConfig.baseToken];\n\n    const tokenConfig = {\n      token:selectedTokenConfig.baseToken,\n      address:selectedTokenConfig.address,\n      decimals:selectedTokenConfig.decimals\n    };\n\n    // Add Idle Token config\n    tokenConfig.idle = baseTokenConfig.idle;\n\n    // Add migration info\n    const oldContract = {\n      abi:selectedTokenConfig.abi,\n      name:selectedTokenConfig.name,\n      token:selectedTokenConfig.token,\n      address:selectedTokenConfig.address\n    };\n    \n    const migrationContract = selectedTokenConfig.migrationContract;\n\n    // Add migration function\n    if (baseTokenConfig.migrateFunction){\n      migrationContract.functions[0].name = baseTokenConfig.migrateFunction;\n    }\n\n    tokenConfig.migration = {\n      enabled:true,\n      oldContract,\n      migrationContract,\n      migrationSucceeded:false\n    };\n\n    await this.props.setStrategyToken(selectedTokenConfig.strategy,baseTokenConfig.baseToken);\n\n    this.setState({\n      tokenConfig,\n      selectedToken,\n      selectedTokenConfig\n    });\n  }\n\n  claim = async () => {\n    if (!this.state.batchCompleted){\n      return null;\n    }\n\n    const loading = true;\n    const claimableValue = 0;\n    const batchId = Object.keys(this.state.batchDeposits)[0];\n\n    const callbackClaim = (tx,error) => {\n      const txSucceeded = tx.status === 'success';\n\n      // Send Google Analytics event\n      const eventData = {\n        eventCategory: `BatchMigration`,\n        eventAction: 'Claim',\n        eventLabel: this.props.selectedToken,\n        eventValue: parseInt(claimableValue)\n      };\n\n      if (error){\n        eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n      }\n\n      // Send Google Analytics event\n      if (error || eventData.status !== 'error'){\n        this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n      }\n\n      this.setState((prevState) => ({\n        claimSucceeded:txSucceeded,\n        processing: {\n          ...prevState.processing,\n          claim:{\n            txHash:null,\n            loading:false\n          }\n        }\n      }));\n    };\n\n    const callbackReceiptClaim = (tx) => {\n      const txHash = tx.transactionHash;\n      this.setState((prevState) => ({\n        processing: {\n          ...prevState.processing,\n          claim:{\n            ...prevState.processing.claim,\n            txHash\n          }\n        }\n      }));\n    };\n\n    this.props.contractMethodSendWrapper(this.state.selectedTokenConfig.migrationContract.name, 'withdraw', [batchId], null, callbackClaim, callbackReceiptClaim);\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        claim:{\n          ...prevState.processing.claim,\n          loading\n        }\n      }\n    }));\n  }\n\n  setAction = (action) => {\n    if (action !== null && ['deposit','redeem'].includes(action.toLowerCase())){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  migrationCallback = () => {\n    this.checkBatchs();\n    this.setState({\n      migrationSucceeded:true\n    });\n  }\n\n  render() {\n\n    if (!this.state.selectedToken){\n      return null;\n    }\n\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    const batchId = this.state.batchDeposits && Object.keys(this.state.batchDeposits).length>0 ? Object.keys(this.state.batchDeposits)[0] : null;\n    const batchDeposit = this.state.batchDeposits && Object.values(this.state.batchDeposits).length>0 ? Object.values(this.state.batchDeposits)[0] : null;\n\n    return (\n      <Flex\n        width={1}\n        mt={[2,3]}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.36]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Box\n            width={1}\n          >\n            <Text mb={1}>\n              Select asset to migrate:\n            </Text>\n            <AssetSelector\n              {...this.props}\n              id={'token-from'}\n              showBalance={true}\n              isSearchable={false}\n              onChange={this.selectFromToken}\n              selectedToken={this.state.selectedToken}\n              availableTokens={this.props.toolProps.availableTokens}\n            />\n          </Box>\n          {\n            (this.state.canDeposit || this.state.canClaim) && \n              <DashboardCard\n                cardProps={{\n                  p:3,\n                  px:4,\n                  mt:3,\n                }}\n              >\n                <Flex\n                  alignItems={'center'}\n                  flexDirection={'column'}\n                > \n                  <Flex\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.migrationContractApproved ? 'CheckBox' : 'LooksOne'}\n                      color={ this.state.migrationContractApproved ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Approve the batch migration contract\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.hasDeposited ? 'CheckBox' : 'LooksTwo'}\n                      color={ this.state.hasDeposited ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Deposit your {this.state.selectedTokenConfig.token}\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.batchCompleted ? 'CheckBox' : 'Looks3'}\n                      color={ this.state.batchCompleted ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Wait for the batch to be migrated\n                    </Text>\n                  </Flex>\n                  <Flex\n                    mt={2}\n                    width={1}\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                  >\n                    <Icon\n                      size={'1.5em'}\n                      name={ this.state.claimSucceeded ? 'CheckBox' : 'Looks4'}\n                      color={ this.state.claimSucceeded ? this.props.theme.colors.transactions.status.completed : 'cellText'}\n                    />\n                    <Text\n                      ml={2}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'left'}\n                    >\n                      Claim your {this.state.selectedToken}V4\n                    </Text>\n                  </Flex>\n                </Flex>\n              </DashboardCard>\n          }\n          {\n            this.state.selectedToken ? (\n              <Box width={1}>\n                {\n                  this.state.migrationContractApproved && (this.state.canDeposit || this.state.canClaim) && \n                    <Flex\n                      mt={2}\n                      flexDirection={'column'}\n                    >\n                      <Text mb={2}>\n                        Choose the action:\n                      </Text>\n                      <Flex\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'space-between'}\n                      >\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canDeposit ? this.setAction('deposit') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canDeposit }\n                          isActive={ this.state.action === 'deposit' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'deposit'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Deposit\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            width:0.48,\n                            onMouseDown:() => {\n                              return this.state.canClaim ? this.setAction('redeem') : null;\n                            }\n                          }}\n                          isInteractive={true}\n                          isDisabled={ !this.state.canClaim }\n                          isActive={ this.state.action === 'redeem' }\n                        >\n                          <Flex\n                            my={1}\n                            alignItems={'center'}\n                            flexDirection={'row'}\n                            justifyContent={'center'}\n                          >\n                            <TransactionField\n                              transaction={{\n                                action:'redeem'\n                              }}\n                              fieldInfo={{\n                                name:'icon',\n                                props:{\n                                  mr:3\n                                }\n                              }}\n                            />\n                            <Text\n                              fontSize={3}\n                              fontWeight={3}\n                            >\n                              Claim\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      </Flex>\n                    </Flex>\n                }\n                {\n                  this.state.action === 'deposit' ? \n                    batchMigrationDepositEnabled ? (\n                      <Migrate\n                        {...this.props}\n                        showActions={false}\n                        migrationParams={[]}\n                        getTokenPrice={false}\n                        isMigrationTool={true}\n                        migrationIcon={'FileDownload'}\n                        waitText={'Deposit estimated in'}\n                        tokenConfig={this.state.tokenConfig}\n                        selectedToken={this.state.selectedToken}\n                        callbackApprove={this.checkBatchs.bind(this)}\n                        selectedStrategy={this.props.selectedStrategy}\n                        migrationCallback={this.migrationCallback.bind(this)}\n                        migrationText={`Deposit your ${this.state.selectedTokenConfig.token} and wait until it is converted to the new ${this.state.tokenConfig.idle.token}.`}\n                      >\n                        {\n                          !this.props.account ? (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                mt:3\n                              }}\n                            >\n                              <Flex\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                              >\n                                <Icon\n                                  size={'2.3em'}\n                                  name={'Input'}\n                                  color={'cellText'}\n                                />\n                                <Text\n                                  mt={2}\n                                  fontSize={2}\n                                  color={'cellText'}\n                                  textAlign={'center'}\n                                >\n                                  Please connect with your wallet interact with Idle.\n                                </Text>\n                                <RoundButton\n                                  buttonProps={{\n                                    mt:2,\n                                    width:[1,1/2]\n                                  }}\n                                  handleClick={this.props.connectAndValidateAccount}\n                                >\n                                  Connect\n                                </RoundButton>\n                              </Flex>\n                            </DashboardCard>\n                          ) : (\n                            <DashboardCard\n                              cardProps={{\n                                p:3,\n                                my:3\n                              }}\n                            >\n                              {\n                                batchId ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      color={'cellText'}\n                                      name={'HourglassEmpty'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      {\n                                        this.state.batchCompleted ? (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >The batch has been migrated, click on the \"Claim\" button to withdraw your tokens.</Text.span>\n                                        ) : (\n                                          <Text.span\n                                            color={'cellText'}\n                                          >\n                                            You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your tokens.\n                                            {\n                                              typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                              <Text.span\n                                                color={'cellText'}\n                                              >\n                                                <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                              </Text.span>\n                                            }\n                                          </Text.span>\n                                        )\n                                      }\n                                    </Text>\n                                  </Flex>\n                                ) : this.state.migrationSucceeded ? (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'DoneAll'}\n                                      color={this.props.theme.colors.transactions.status.completed}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You have successfully deposited your {this.state.selectedTokenConfig.token} into the batch!\n                                    </Text>\n                                  </Flex>\n                                ) : (\n                                  <Flex\n                                    alignItems={'center'}\n                                    flexDirection={'column'}\n                                  >\n                                    <Icon\n                                      size={'2.3em'}\n                                      name={'MoneyOff'}\n                                      color={'cellText'}\n                                    />\n                                    <Text\n                                      mt={2}\n                                      fontSize={2}\n                                      color={'cellText'}\n                                      textAlign={'center'}\n                                    >\n                                      You don't have any {this.state.selectedTokenConfig.token} in your wallet.\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                            </DashboardCard>\n                          )\n                        }\n                      </Migrate>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          my:3\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Text\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            Batch migration is disabled for this asset.\n                          </Text>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  : (\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        my:3\n                      }}\n                    >\n                      {\n                        this.state.processing.claim.loading ? (\n                          <Flex\n                            flexDirection={'column'}\n                          >\n                            <TxProgressBar {...this.props} waitText={`Claim estimated in`} endMessage={`Finalizing approve request...`} hash={this.state.processing.claim.txHash} />\n                          </Flex>\n                        ) : this.state.claimSucceeded ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              name={'DoneAll'}\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              You have successfully withdrawn your {this.state.selectedToken} V4!\n                            </Text>\n                            <Link\n                              mt={2}\n                              textAlign={'center'}\n                              hoverColor={'primary'}\n                              onClick={ e => this.props.goToSection(this.state.selectedTokenConfig.strategy+'/'+this.state.selectedTokenConfig.baseToken) }\n                            >\n                              Go to the Dashboard\n                            </Link>\n                          </Flex>\n                        ) : this.state.batchCompleted ? (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'FileUpload'}\n                            />\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              The batch has been migrated!<br />You can now claim your {this.state.tokenConfig.idle.token} V4.\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                              <RoundButton\n                                buttonProps={{\n                                  mt:3,\n                                  width:[1,0.5],\n                                  mainColor:this.props.theme.colors.redeem\n                                }}\n                                handleClick={ e => this.claim() }\n                              >\n                                Claim\n                              </RoundButton>\n                            </Flex>\n                          </Flex>\n                        ) : (\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            <Icon\n                              size={'2.3em'}\n                              color={'cellText'}\n                              name={'HourglassEmpty'}\n                            />\n                            <Text\n                              mt={2}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              <Text.span\n                                color={'cellText'}\n                              >\n                                You have successfully deposited {batchDeposit.toFixed(4)} {this.state.selectedTokenConfig.token}, please wait until the batch is migrated to claim your V4 tokens.\n                                {\n                                  typeof this.state.batchTotals[batchId] !== 'undefined' && \n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    <br />Batch pool: {this.state.batchTotals[batchId].toFixed(4)} {this.state.selectedTokenConfig.token}\n                                  </Text.span>\n                                }\n                              </Text.span>\n                            </Text>\n                          </Flex>\n                        )\n                      }\n                    </DashboardCard>\n                  )\n                }\n              </Box>\n            ) : null\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default BatchMigration;","import ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport CardIconButton from '../CardIconButton/CardIconButton';\nimport SendTxWithBalance from '../SendTxWithBalance/SendTxWithBalance';\nimport ExecuteTransaction from '../ExecuteTransaction/ExecuteTransaction';\nimport { Flex, Text, Heading, Input, Form, Field, Icon, Link, Loader, Button } from \"rimble-ui\";\n\nclass DeployB2BVesting extends Component {\n\n  state = {\n    actions:[],\n    processing: {\n      txHash:null,\n      loading:false,\n      actionIndex:[]\n    },\n    action:'deploy',\n    validated:false,\n    viewAction:null,\n    editAction:null,\n    newAction:false,\n    maxContracts:10,\n    tokenConfig:null,\n    tokenBalance:null,\n    contractInfo:null,\n    actionValid:false,\n    actionInputs:null,\n    claimedTokens:null,\n    deployedContracts:[],\n    contractDeployed:false,\n    inputs:[\n      {\n        name:'owner',\n        type:'address'\n      },\n      {\n        name:'recipient',\n        type:'address'\n      },\n      {\n        name:'vestingPeriod',\n        type:'uint256'\n      }\n    ]\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction(action){\n    this.setState({\n      action,\n      editAction:null,\n      viewAction:null,\n      claimedTokens:null,\n      contractDeployed:null\n    });\n  }\n\n  async cancelTransaction(){\n    this.setState({\n      processing: {\n        txHash:null,\n        loading:false,\n        actionIndex:[]\n      }\n    });\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadContracts();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    this.validateForm();\n    this.checkInputs();\n\n    const contractDeployed = prevState.contractDeployed !== this.state.contractDeployed && this.state.contractDeployed;\n    if (contractDeployed){\n      this.loadContracts();\n    }\n  }\n\n  async loadContracts(){\n    const tokenConfig = this.functionsUtil.getGlobalConfig(['govTokens','IDLE']);\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const fromBlock = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n    const proxyCreated = await this.functionsUtil.getContractPastEvents('ProxyFactory', 'ProxyCreated', {fromBlock, toBlock: 'latest'});\n    const deployedContractsAddresses = proxyCreated.filter( p => p.returnValues.implementation.toLowerCase() === vesterImplementation.address.toLowerCase() ).map( p => p.returnValues.proxy );\n    // console.log('proxyCreated',proxyCreated,'deployedContractsAddresses',deployedContractsAddresses);\n\n    const deployedContracts = [];\n    await this.functionsUtil.asyncForEach(deployedContractsAddresses, async (contractAddress) => {\n      const contractName = `b2bVesting_${contractAddress}`;\n      await this.props.initContract(contractName,contractAddress,vesterImplementation.abi);\n      const [\n        // initialized,\n        owner,\n        recipient,\n        vestingPeriod,\n        availableBalance,\n        depositAmounts,\n      ] = await Promise.all([\n          // this.functionsUtil.genericContractCall(contractName,'initialized'),\n          this.functionsUtil.genericContractCall(contractName,'owner'),\n          this.functionsUtil.genericContractCall(contractName,'recipient'),\n          this.functionsUtil.genericContractCall(contractName,'vestingPeriod'),\n          this.functionsUtil.getTokenBalance(tokenConfig.token,contractAddress),\n          this.functionsUtil.genericContractCall(contractName,'getDepositAmounts')\n      ]);\n\n      let totalDeposited = this.functionsUtil.BNify(0);\n      if (depositAmounts) {\n        totalDeposited = depositAmounts.reduce( (total,amount) => {\n          total = total.plus(amount);\n          return total;\n        },this.functionsUtil.BNify(0));\n\n        totalDeposited = this.functionsUtil.fixTokenDecimals(totalDeposited,tokenConfig.decimals);\n      }\n\n      // console.log(contractName,initialized,owner,recipient,vestingPeriod,depositAmounts,parseFloat(totalDeposited));\n\n      deployedContracts.push({\n        owner,\n        recipient,\n        contractName,\n        vestingPeriod,\n        totalDeposited,\n        contractAddress,\n        availableBalance\n      });\n    });\n    const tokenBalance = await this.functionsUtil.getTokenBalance('IDLE',this.props.account);\n\n    // console.log(deployedContracts);\n\n    this.setState({\n      tokenConfig,\n      tokenBalance,\n      deployedContracts\n    });\n  }\n\n  validateForm(){\n    const validated = Object.values(this.state.actions).length>0;\n    if (validated !== this.state.validated){\n      this.setState({\n        validated\n      });\n    }\n  }\n\n  getTransactionParams(amount){\n    const params = {\n      value:null,\n      methodName:'deposit',\n      methodParams:[amount]\n    };\n    return params;\n  }\n\n  claimCallback(tx){\n    // console.log('claimCallback',tx);\n    if (tx.status === 'success'){\n      this.loadContracts();\n\n      const claimedTokensLog = tx.txReceipt && tx.txReceipt.logs ? tx.txReceipt.logs.find( log => log.address.toLowerCase() === this.state.tokenConfig.address.toLowerCase() ) : null;\n      if (claimedTokensLog){\n        const claimedTokens = this.functionsUtil.fixTokenDecimals(parseInt(claimedTokensLog.data,16),this.state.tokenConfig.decimals);\n        this.setState({\n          claimedTokens\n        });\n      }\n    }\n  }\n\n  depositCallback(tx,amount,params){\n    // console.log('depositCallback',tx,amount,params);\n    if (tx.status === 'success'){\n      this.loadContracts();\n    }\n  }\n\n  getPatternByFieldType(type,returnString=false){\n    let fieldPattern = null;\n    switch (type){\n      case 'address':\n        fieldPattern = '^0x[a-fA-F0-9]{40}$';\n      break;\n      case 'address[]':\n        fieldPattern = '^((0x[a-fA-F0-9]{40})[,]?)+$';\n      break;\n      case 'string':\n        fieldPattern = '[\\\\w]+';\n      break;\n      case 'bool':\n        fieldPattern = '(0|1)';\n      break;\n      case 'uint256':\n      case 'uint8':\n        fieldPattern = '[\\\\d]+';\n      break;\n      default:\n        fieldPattern = null;\n      break;\n    }\n\n    if (!returnString && fieldPattern){\n      fieldPattern = new RegExp(fieldPattern);\n    }\n\n    return fieldPattern;\n  }\n\n  checkInputs(){\n\n    if (!this.state.actionInputs){\n      return false;\n    }\n\n    const inputs = this.state.inputs;\n    let actionValid = Object.values(this.state.actionInputs).length === inputs.length;\n\n    if (actionValid){\n      Object.values(this.state.actionInputs).forEach( (inputValue,inputIndex) => {\n        const inputInfo = inputs[inputIndex];\n        const fieldPattern = this.getPatternByFieldType(inputInfo.type);\n        const inputValid = fieldPattern ? inputValue.match(fieldPattern) !== null : true;\n        actionValid = actionValid && inputValid;\n        // console.log('checkInputs',inputInfo.name,inputInfo.type,inputValue,inputValid,actionValid);\n      });\n    }\n\n    if (actionValid !== this.state.actionValid){\n      this.setState({\n        actionValid\n      });\n    }\n  }\n\n  valueChange(e,inputIndex){\n    let actionValue = e.target.value;\n    this.setState({\n      actionValue\n    });\n  }\n\n  inputChange(e,inputIndex){\n    let inputValue = e.target.value;\n\n    this.setState((prevState) => ({\n      actionInputs:{\n        ...prevState.actionInputs,\n        [inputIndex]:inputValue\n      }\n    }));\n  }\n\n  deleteAction(){\n    if (this.state.editAction !== null){\n      let actions = this.state.actions;\n      if (actions[this.state.editAction]){\n        delete actions[this.state.editAction];\n        actions = Object.values(actions);\n        const editAction = null;\n        const actionInputs = null;\n\n        this.setState({\n          actions,\n          editAction,\n          actionInputs\n        });\n      }\n    }\n  }\n\n  addAction(){\n\n    // Check inputs number\n    const inputs = Object\n                    .values(this.state.actionInputs).filter( v => v.length>0 )\n                    .map( (inputValue,inputIndex) => {\n                      const inputInfo = this.state.inputs[inputIndex];\n                      switch (inputInfo.type){\n                        case 'address[]':\n                          inputValue = inputValue.split(',');\n                        break;\n                        case 'uint256[]':\n                          inputValue = inputValue.split(',').map( n => this.functionsUtil.toBN(n) );\n                        break;\n                        case 'uint256':\n                          inputValue = this.functionsUtil.toBN(inputValue);\n                        break;\n                        default:\n                          if (inputInfo.type.substr(-2) === '[]'){\n                            inputValue = inputValue.split(',');\n                          }\n                        break;\n                      }\n\n                      return inputValue;\n                    });\n\n    if (inputs.length<this.state.inputs.length){\n      return false;\n    }\n\n    const action = {\n      txError:null,\n      contractAddress:null,\n      inputs:this.state.actionInputs,\n    };\n\n    const newAction = false;\n    const actions = Object.values(this.state.actions);\n\n    if (this.state.editAction === null){\n      actions.push(action);\n    } else {\n      actions[this.state.editAction] = action;\n    }\n\n    const editAction = null;\n    const actionInputs = null;\n\n    this.setState({\n      actions,\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setEditAction(editAction){\n\n    if (!this.state.actions[editAction]){\n      return false;\n    }\n\n    if (editAction === this.state.editAction){\n      return false;\n    }\n\n    const action = this.state.actions[editAction];\n\n    const newAction = false;\n    const actionInputs = action.inputs;\n\n    this.setState({\n      newAction,\n      editAction,\n      actionInputs\n    });\n  }\n\n  setViewAction(viewAction){\n\n    if (viewAction !== this.state.viewAction){\n      const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n      const deployedContract = this.state.deployedContracts[viewAction];\n      const contractInfo = {\n        abi:vesterImplementation.abi,\n        name:deployedContract.contractName,\n        address:deployedContract.contractAddress\n      };\n      this.setState({\n        viewAction,\n        contractInfo,\n        claimedTokens:null\n      });\n    }\n  }\n\n  setNewAction(newAction){\n    if (newAction === this.state.newAction){\n      return false;\n    }\n\n    const editAction = null;\n\n    this.setState({\n      newAction,\n      editAction,\n    });\n  }\n\n  async handleSubmit(e){\n    e.preventDefault();\n\n    const vesterImplementation = this.props.toolProps.contracts.vesterImplementation;\n    const idleAddress = this.functionsUtil.getGlobalConfig(['govTokens','IDLE','address']);\n\n    const callback = (tx,error,actionIndex) => {\n      const txSucceeded = tx.status === 'success';\n      const actions = Object.values(this.state.actions);\n      const isLastAction = parseInt(actionIndex)===parseInt(this.state.actions.length)-1;\n      const contractDeployed = txSucceeded && isLastAction;\n      // console.log('callback_1 -',actionIndex,txSucceeded,contractDeployed,tx);\n      if (txSucceeded){\n        const clonedVesterAddress = tx.txReceipt.events && tx.txReceipt.events.ProxyCreated ? tx.txReceipt.events.ProxyCreated.returnValues[1] : `0x${tx.txReceipt.logs[0].data.substr(-40)}`;\n        actions[actionIndex].contractAddress = clonedVesterAddress;\n        // console.log('callback_2 -',actionIndex,actions[actionIndex].contractAddress);\n      } else {\n        actions[actionIndex].txError = true;\n      }\n\n      // console.log('callback_3 -',actionIndex,actions);\n\n      this.setState({\n        actions,\n        contractDeployed\n      },()=>{\n        if (isLastAction){\n          this.cancelTransaction();\n        }\n      });\n    };\n\n    const callbackReceipt = (tx,actionIndex) => {\n      const txHash = tx.transactionHash;\n      // console.log('callbackReceipt',actionIndex,tx);\n      const processing = Object.assign({},this.state.processing);\n      processing.txHash = txHash;\n      processing.actionIndex.push(actionIndex);\n      this.setState({\n        processing\n      });\n    };\n\n    this.state.actions.forEach((action,actionIndex) => {\n      const ownerAddress = action.inputs[0];\n      const recipientAddress = action.inputs[1];\n      const vestingPeriod = action.inputs[2];\n      const initSig = \"initialize(address,address,address,uint256)\";\n      const initData = this.props.web3.eth.abi.encodeParameters(\n        ['address','address','address','uint256'],\n        [ownerAddress,idleAddress,recipientAddress,vestingPeriod]\n      );\n      const methodParams = [vesterImplementation.address,initSig,initData];\n      this.functionsUtil.contractMethodSendWrapper('ProxyFactory', 'createAndCall', methodParams, (tx,error) => callback(tx,error,actionIndex), (tx) => callbackReceipt(tx,actionIndex) );\n    });\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        loading:true\n      }\n    }));\n\n    return false;\n  }\n\n  render() {\n\n    const depositContracts = this.props.account ? this.state.deployedContracts.filter( c => c.owner.toLowerCase() === this.props.account.toLowerCase() ) : [];\n    const claimContracts = this.props.account ? this.state.deployedContracts.filter( c => c.recipient.toLowerCase() === this.props.account.toLowerCase() ) : [];\n\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Flex\n          width={[1,0.42]}\n          alignItems={'stretch'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            flexDirection={'column'}\n          >\n            <Text\n              mb={2}\n            >\n              Choose the action:\n            </Text>\n            <Flex\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deploy'}\n                icon={'CloudUpload'}\n                iconColor={'deposit'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deploy' }\n                handleClick={ e => this.setAction('deploy') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Deposit'}\n                iconColor={'deposit'}\n                icon={'ArrowDownward'}\n                iconBgColor={'#ced6ff'}\n                isActive={ this.state.action === 'deposit' }\n                handleClick={ e => this.setAction('deposit') }\n              />\n              <CardIconButton\n                {...this.props}\n                cardProps={{\n                  px:3,\n                  py:3,\n                  width:0.32\n                }}\n                text={'Claim'}\n                iconColor={'redeem'}\n                icon={'ArrowUpward'}\n                iconBgColor={'#ceeff6'}\n                isActive={ this.state.action === 'claim' }\n                handleClick={ e => this.setAction('claim') }\n              />\n            </Flex>\n          </Flex>\n          <Flex\n            pb={2}\n            width={1}\n            my={[2,3]}\n            borderColor={'divider'}\n            borderBottom={'1px solid transparent'}\n          >\n            <Heading.h4\n              fontSize={[2,3]}\n              fontWeight={[2,3]}\n              style={{\n                textTransform:'capitalize'\n              }}\n            >\n              {this.state.action}\n            </Heading.h4>\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n          >\n            {\n              this.state.action === 'deploy' ? (\n                <Form\n                  width={1}\n                  validated={this.state.validated}\n                  onSubmit={this.handleSubmit.bind(this)}\n                >\n                  {\n                    Object.values(this.state.actions).map( (action,actionIndex) => {\n                      return (\n                        <DashboardCard\n                          cardProps={{\n                            py:2,\n                            px:3,\n                            mb:3,\n                            width:1\n                          }}\n                          titleParentProps={{\n                            ml:0,\n                            my:1,\n                            justifyContent:'center'\n                          }}\n                          titleProps={{\n                            fontSize:2,\n                            fontWeight:3\n                          }}\n                          isInteractive={true}\n                          key={`action_${actionIndex}`}\n                          title={ this.state.editAction === actionIndex ? 'Edit Contract' : null }\n                          handleClick={ e => /*action.contractAddress ? this.functionsUtil.openWindow(this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)) : */this.setEditAction(actionIndex) }\n                        >\n                          {\n                            this.state.editAction === actionIndex ? (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                              >\n                                {\n                                  this.state.inputs.map( (input,inputIndex) => {\n                                    const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                    const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                    return (\n                                      <Field\n                                        style={{\n                                          width:'100%',\n                                          display:'flex',\n                                          alignItems:'stretch',\n                                          flexDirection:'column'\n                                        }}\n                                        key={`input_${inputIndex}`}\n                                        label={`${input.name} (${input.type})`}\n                                      >\n                                        <Input\n                                          required\n                                          width={1}\n                                          type={fieldType}\n                                          pattern={fieldPattern}\n                                          borderColor={'cardBorder'}\n                                          backgroundColor={'cardBg'}\n                                          placeholder={`${input.name} (${input.type})`}\n                                          onChange={ e => this.inputChange(e,inputIndex) }\n                                          value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                        />\n                                      </Field>\n                                    )\n                                  })\n                                }\n                                <Flex\n                                  mb={2}\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    action.contractAddress ? (\n                                      <ExtLink\n                                        fontSize={1}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                        hoverColor={this.props.theme.colors.transactions.status.completed}\n                                        href={this.functionsUtil.getEtherscanAddressUrl(action.contractAddress)}\n                                      >\n                                        Deployed at {action.contractAddress}\n                                      </ExtLink>\n                                    ) : !this.state.processing.loading && (\n                                      <Flex\n                                        width={1}\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                        justifyContent={'center'}\n                                      >\n                                        <RoundButton\n                                          buttonProps={{\n                                            px:[0,4],\n                                            type:'button',\n                                            width:[1,'auto'],\n                                            disabled:!this.state.actionValid\n                                          }}\n                                          handleClick={this.addAction.bind(this)}\n                                        >\n                                          Save Contract\n                                        </RoundButton>\n                                        <Link\n                                          mt={2}\n                                          color={'red'}\n                                          hoverColor={'red'}\n                                          onClick={this.deleteAction.bind(this)}\n                                        >\n                                          Delete Contract\n                                        </Link>\n                                      </Flex>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            ) : (\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'row'}\n                                justifyContent={'space-between'}\n                              >\n                                <Text>\n                                  {this.functionsUtil.shortenHash(action.inputs[0])} - {this.functionsUtil.shortenHash(action.inputs[1])} - {action.inputs[2]} { action.contractAddress ? '- DEPLOYED' : '' }\n                                </Text>\n                                { \n                                  action.contractAddress ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        name={'Done'}\n                                        align={'center'}\n                                        size={this.props.isMobile ? '1.2em' : '1.8em'}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      />\n                                    </Flex>\n                                  ) : this.state.processing.loading && this.state.processing.actionIndex && this.state.processing.actionIndex.includes(parseInt(actionIndex)) ? (\n                                    <Loader size=\"28px\" />\n                                  ) : action.txError ? (\n                                    <Flex\n                                      p={'3px'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                    >\n                                      <Icon\n                                        color={'red'}\n                                        name={'Error'}\n                                        align={'center'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.8em' }\n                                      />\n                                    </Flex>\n                                  ) : (\n                                    <Flex\n                                      p={['4px','7px']}\n                                      borderRadius={'50%'}\n                                      alignItems={'center'}\n                                      justifyContent={'center'}\n                                      backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                                    >\n                                      <Icon\n                                        name={'Edit'}\n                                        align={'center'}\n                                        color={'redeem'}\n                                        size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                      />\n                                    </Flex>\n                                  )\n                                }\n                              </Flex>\n                            )\n                          }\n                        </DashboardCard>\n                      );\n                    })\n                  }\n                  {\n                    (!this.state.contractDeployed && !this.state.processing.loading && (!this.state.actions || Object.values(this.state.actions).length<this.state.maxContracts)) && (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        handleClick={ e => this.setNewAction(true) }\n                        title={ this.state.newAction ? 'Add Contract' : null }\n                      >\n                        {\n                          this.state.newAction ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  const fieldPattern = this.getPatternByFieldType(input.type,true);\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        width={1}\n                                        type={fieldType}\n                                        pattern={fieldPattern}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        placeholder={`${input.name} (${input.type})`}\n                                        onChange={ e => this.inputChange(e,inputIndex) }\n                                        value={this.state.actionInputs && this.state.actionInputs[inputIndex] ? this.state.actionInputs[inputIndex] : ''}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Flex\n                                width={1}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                              >\n                                <RoundButton\n                                  buttonProps={{\n                                    px:[0,4],\n                                    type:'button',\n                                    width:[1,'auto'],\n                                    disabled:!this.state.actionValid\n                                  }}\n                                  handleClick={this.addAction.bind(this)}\n                                >\n                                  Add Contract\n                                </RoundButton>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                Add Contract\n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'Add'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    )\n                  }\n                  <Flex\n                    mb={3}\n                    width={1}\n                    alignItems={'center'}\n                    justifyContent={'center'}\n                  >\n                    {\n                      this.state.contractDeployed ? (\n                        <DashboardCard\n                          cardProps={{\n                            py:3,\n                            px:4,\n                            width:[1,'100%']\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                            justifyContent={'center'}\n                          >\n                            <Icon\n                              name={'DoneAll'}\n                              align={'center'}\n                              size={ this.props.isMobile ? '1.4em' : '2.2em' }\n                              color={this.props.theme.colors.transactions.status.completed}\n                            />\n                            <Text\n                              mt={1}\n                              fontWeight={3}\n                              fontSize={[2,3]}\n                              color={'dark-gray'}\n                              textAlign={'center'}\n                            >\n                              B2B Vesting contracts have been deployed\n                            </Text>\n                          </Flex>\n                        </DashboardCard>\n                      ) : this.state.processing && this.state.processing.loading ? (\n                        <TxProgressBar\n                          {...this.props}\n                          hash={this.state.processing.txHash}\n                          waitText={`Deployment estimated in`}\n                          endMessage={`Finalizing deployment request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      ) : (\n                        <RoundButton\n                          buttonProps={{\n                            type:'submit',\n                            width:[1,'15em'],\n                            disabled:!this.state.validated\n                          }}\n                        >\n                          Deploy Contracts\n                        </RoundButton>\n                      )\n                    }\n                  </Flex>\n                </Form>\n              ) : this.state.action === 'deposit' ?\n                depositContracts.length>0 ?\n                  depositContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  <SendTxWithBalance\n                                    {...this.props}\n                                    action={this.state.action}\n                                    tokenConfig={this.state.tokenConfig}\n                                    tokenBalance={this.state.tokenBalance}\n                                    contractInfo={this.state.contractInfo}\n                                    callback={this.depositCallback.bind(this)}\n                                    getTransactionParams={this.getTransactionParams.bind(this)}\n                                    approveDescription={'You need to approve the Smart-Contract first'}\n                                  >\n                                    <DashboardCard\n                                      cardProps={{\n                                        p:3,\n                                      }}\n                                    >\n                                      <Flex\n                                        alignItems={'center'}\n                                        flexDirection={'column'}\n                                      >\n                                        <Icon\n                                          size={'2.3em'}\n                                          name={'MoneyOff'}\n                                          color={'cellText'}\n                                        />\n                                        <Text\n                                          mt={2}\n                                          fontSize={2}\n                                          color={'cellText'}\n                                          textAlign={'center'}\n                                        >\n                                          You don't have any $IDLE in your wallet.\n                                        </Text>\n                                      </Flex>\n                                    </DashboardCard>\n                                  </SendTxWithBalance>\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't deposit in any contract yet.\n                  </Text>\n                )\n              : this.state.action === 'claim' &&\n                claimContracts.length>0 ?\n                  claimContracts.map( (contractInfo,actionIndex) => {\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:3,\n                          width:1\n                        }}\n                        titleParentProps={{\n                          ml:0,\n                          my:1,\n                          justifyContent:'center'\n                        }}\n                        titleProps={{\n                          fontSize:2,\n                          fontWeight:3\n                        }}\n                        isInteractive={true}\n                        key={`action_${actionIndex}`}\n                        handleClick={ e => this.setViewAction(actionIndex) }\n                        title={ this.state.viewAction === actionIndex ? 'View Contract' : null }\n                      >\n                        {\n                          this.state.viewAction === actionIndex ? (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'center'}\n                            >\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Contract Address`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.contractAddress}\n                                />\n                              </Field>\n                              {\n                                this.state.inputs.map( (input,inputIndex) => {\n                                  const fieldType = ['uint256','bool'].includes(input.type) ? 'number' : 'text';\n                                  return (\n                                    <Field\n                                      style={{\n                                        width:'100%',\n                                        display:'flex',\n                                        alignItems:'stretch',\n                                        flexDirection:'column'\n                                      }}\n                                      key={`input_${inputIndex}`}\n                                      label={`${input.name} (${input.type})`}\n                                    >\n                                      <Input\n                                        required\n                                        readOnly\n                                        width={1}\n                                        type={fieldType}\n                                        borderColor={'cardBorder'}\n                                        backgroundColor={'cardBg'}\n                                        value={contractInfo[input.name]}\n                                      />\n                                    </Field>\n                                  )\n                                })\n                              }\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Total Deposited`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.totalDeposited.toFixed(6)}\n                                />\n                              </Field>\n                              <Field\n                                style={{\n                                  width:'100%',\n                                  display:'flex',\n                                  alignItems:'stretch',\n                                  flexDirection:'column'\n                                }}\n                                label={`Available Balance`}\n                              >\n                                <Input\n                                  required\n                                  readOnly\n                                  width={1}\n                                  type={'address'}\n                                  borderColor={'cardBorder'}\n                                  backgroundColor={'cardBg'}\n                                  value={contractInfo.availableBalance.toFixed(6)}\n                                />\n                              </Field>\n                              <Flex\n                                mb={2}\n                                width={1}\n                                alignItems={'center'}\n                                flexDirection={'column'}\n                                justifyContent={'center'}\n                                borderTop={'1px solid transparent'}\n                              >\n                                <Flex\n                                  width={1}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                >\n                                  {\n                                    this.state.claimedTokens && (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={this.props.theme.colors.transactions.status.completed}\n                                      >\n                                        You have successfully claimed {this.state.claimedTokens.toFixed(4)} {this.state.tokenConfig.token}\n                                      </Text>\n                                    )\n                                  }\n                                  {\n                                    contractInfo.availableBalance && contractInfo.availableBalance.gt(0.00000001) ? (\n                                      <ExecuteTransaction\n                                        params={[]}\n                                        {...this.props}\n                                        Component={Button}\n                                        componentProps={{\n                                          size:'medium',\n                                          value:'Claim',\n                                          mainColor:'redeem',\n                                        }}\n                                        methodName={'claim'}\n                                        action={this.state.action}\n                                        callback={this.claimCallback.bind(this)}\n                                        contractName={contractInfo.contractName}\n                                      />\n                                    ) : (\n                                      <Text\n                                        mb={2}\n                                        fontSize={2}\n                                        fontWeight={3}\n                                        color={'cellText'}\n                                      >\n                                        No balance available.\n                                      </Text>\n                                    )\n                                  }\n                                </Flex>\n                              </Flex>\n                            </Flex>\n                          ) : (\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              <Text>\n                                {this.functionsUtil.shortenHash(contractInfo.owner)} - {this.functionsUtil.shortenHash(contractInfo.recipient)} - {contractInfo.vestingPeriod} \n                              </Text>\n                              <Flex\n                                p={['4px','7px']}\n                                borderRadius={'50%'}\n                                alignItems={'center'}\n                                justifyContent={'center'}\n                                backgroundColor={ this.props.theme.colors.transactions.actionBg.redeem }\n                              >\n                                <Icon\n                                  name={'ZoomIn'}\n                                  align={'center'}\n                                  color={'redeem'}\n                                  size={ this.props.isMobile ? '1.2em' : '1.4em' }\n                                />\n                              </Flex>\n                            </Flex>\n                          )\n                        }\n                      </DashboardCard>\n                    );\n                  })\n                : (\n                  <Text\n                    textAlign={'center'}\n                  >\n                    You can't claim from any contract yet.\n                  </Text>\n                )\n            }\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default DeployB2BVesting;\n","import React, { Component } from 'react';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport ButtonLoader from '../ButtonLoader/ButtonLoader';\nimport TranchesList from '../TranchesList/TranchesList';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport { Flex, Box, Text, Input, Heading } from \"rimble-ui\";\n\nclass GaugesBoostCalculator extends Component {\n\n  state = {\n    periodOptions:{\n      365:{\n        label:'1y'\n      },\n      730:{\n        label:'2y'\n      },\n      1095:{\n        label:'3y'\n      },\n      1460:{\n        label:'4y'\n      }\n    },\n    loading:false,\n    idleAmount:'',\n    periodValue:'',\n    depositAmount:'',\n    periodValid:null,\n    stkIdleAmount:null,\n    selectedPeriod:null,\n    availableGauges:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const idleAmountChanged = prevState.idleAmount !== this.state.idleAmount;\n    const periodValueChanged = prevState.periodValue !== this.state.periodValue;\n    if (idleAmountChanged || periodValueChanged){\n      this.calculateStkIdleAmount();\n    }\n  }\n\n  calculateStkIdleAmount = () => {\n    let stkIdleAmount = this.functionsUtil.BNify(this.state.idleAmount).times(this.state.periodValue).div(1460);\n    if (stkIdleAmount.isNaN()){\n      stkIdleAmount = this.functionsUtil.BNify(0);\n    }\n    this.setState({\n      stkIdleAmount\n    });\n  }\n\n  changeDepositAmount = (e) => {\n    const depositAmount = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    this.setState({\n      depositAmount\n    });\n  }\n\n  changeIdleAmount = (e) => {\n    const idleAmount = e.target.value.length && !isNaN(e.target.value) ? Math.floor(e.target.value) : '';\n    this.setState({\n      idleAmount\n    });\n  }\n\n  changePeriod = (e,selectedPeriod=null) => {\n    const periodValue = e.target.value.length && !isNaN(e.target.value) ? e.target.value : '';\n    const periodValid = parseInt(periodValue)>=7 && parseInt(periodValue)<=1460;\n    this.setState({\n      periodValue,\n      periodValid,\n      selectedPeriod\n    });\n  }\n\n  selectPeriod = (selectedPeriod) => {\n    this.changePeriod({\n      target:{\n        value:selectedPeriod\n      }\n    },selectedPeriod);\n  }\n\n  async calculateGaugesData(){\n\n    if (this.functionsUtil.BNify(this.state.depositAmount).isNaN() || this.functionsUtil.BNify(this.state.idleAmount).isNaN() || this.functionsUtil.BNify(this.state.depositAmount).lte(0) || this.functionsUtil.BNify(this.state.idleAmount).lte(0) || !this.state.periodValid){\n      return false;\n    }\n\n    this.setState({\n      loading:true\n    });\n\n    const gaugesOrderKeys = {};\n    const availableGauges = {};\n\n    const depositAmount = this.functionsUtil.BNify(this.state.depositAmount);\n    const veTokenBalance = this.functionsUtil.BNify(this.state.stkIdleAmount);\n    const veTokenConfig = this.functionsUtil.getGlobalConfig(['tools','gauges','props','veToken']);\n\n    let dailyDistributionRate = await this.functionsUtil.genericContractCallCached('GaugeDistributor','rate');\n    dailyDistributionRate = this.functionsUtil.fixTokenDecimals(dailyDistributionRate,18).times(86400);\n\n    const gaugesConfigs = this.functionsUtil.getGlobalConfig(['tools','gauges','props','availableGauges']);\n    await this.functionsUtil.asyncForEach(Object.keys(gaugesConfigs), async (gaugeToken) => {\n      const gaugeConfig = gaugesConfigs[gaugeToken];\n      if (!availableGauges[gaugeConfig.protocol]){\n        availableGauges[gaugeConfig.protocol] = {};\n      }\n\n      const cdoConfig = this.props.availableTranches[gaugeConfig.protocol] ? this.props.availableTranches[gaugeConfig.protocol][gaugeToken] : null;\n      \n      if (cdoConfig){\n        const liquidityGaugeContract = this.functionsUtil.getContractByName(gaugeConfig.name);\n        if (!liquidityGaugeContract && gaugeConfig.abi){\n          await this.props.initContract(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi);\n        }\n        const underlyingTokenConfig = this.functionsUtil.getTokenConfig(gaugeConfig.underlyingToken);\n\n        let [\n          tokenConversionRate,\n          trancheVirtualPrice\n        ] = await Promise.all([\n          this.functionsUtil.getTokenConversionRate(underlyingTokenConfig),\n          this.functionsUtil.genericContractCallCached(cdoConfig.CDO.name, 'virtualPrice', [cdoConfig.AA.address])\n        ]);\n\n        trancheVirtualPrice = this.functionsUtil.fixTokenDecimals(trancheVirtualPrice,18);\n\n        const stakedBalance = depositAmount.div(tokenConversionRate).div(trancheVirtualPrice);\n\n        let [\n          gaugeNextWeight,\n          rewardsTokens,\n          gaugeTotalSupply,\n          userBoostInfo,\n          gaugeWorkingSupply,\n          gaugeWeight\n        ] = await Promise.all([\n          this.functionsUtil.getGaugeNextWeight(gaugeConfig),\n          this.functionsUtil.getGaugeRewardsTokens(gaugeConfig),\n          this.functionsUtil.getTokenTotalSupply(gaugeConfig.name),\n          this.functionsUtil.calculateGaugeBoost(gaugeToken,stakedBalance,veTokenBalance),\n          this.functionsUtil.genericContractCallCached(gaugeConfig.name,'working_supply'),\n          this.functionsUtil.genericContractCallCached('GaugeController','gauge_relative_weight',[gaugeConfig.address])\n        ]);\n\n        // console.log(gaugeConfig.name,tokenConversionRate,trancheVirtualPrice,stakedBalance.toFixed(),veTokenBalance.toFixed());\n\n        const userWorkingBalance = userBoostInfo.workingBalance;\n\n        const claimableRewardsTokens = Object.keys(rewardsTokens).reduce( (claimableRewards,token) => {\n          const tokenConfig = rewardsTokens[token];\n          claimableRewards[token] = this.functionsUtil.fixTokenDecimals(tokenConfig.balance,tokenConfig.decimals);\n          return claimableRewards;\n        },{});\n\n        gaugeWeight = this.functionsUtil.fixTokenDecimals(gaugeWeight,18);\n        gaugeNextWeight = this.functionsUtil.fixTokenDecimals(gaugeNextWeight,18);\n        gaugeTotalSupply = this.functionsUtil.fixTokenDecimals(gaugeTotalSupply,18);\n        const gaugeDistributionRate = dailyDistributionRate.times(gaugeWeight);\n\n        const gaugeUserShare = stakedBalance.div(gaugeTotalSupply.plus(stakedBalance));\n\n        const userBoostedShare = this.functionsUtil.BNify(userWorkingBalance).div(gaugeWorkingSupply);\n        let userBoostedDistribution = gaugeDistributionRate.times(userBoostedShare);\n        if (userBoostedDistribution.gt(gaugeDistributionRate)){\n          userBoostedDistribution = gaugeDistributionRate;\n        }\n\n        const claimableTokens = Object.keys(claimableRewardsTokens).length ? Object.keys(claimableRewardsTokens).map( token => {\n          let text = ``;\n          if (!this.functionsUtil.BNify(userBoostedDistribution).isNaN() && token.toLowerCase() === veTokenConfig.rewardToken.toLowerCase()){\n            text += `~${userBoostedDistribution.toFixed(4)} ${token}/day`;\n          } else if (rewardsTokens[token].rate){\n            let userDistributionRate = rewardsTokens[token].rate.times(gaugeUserShare);\n            if (userDistributionRate.gt(rewardsTokens[token].rate)){\n              userDistributionRate = rewardsTokens[token].rate;\n            }\n            text += `~${userDistributionRate.toFixed(4)} ${token}/day`;\n          }\n          return text;\n        }).join('<br />') : '-';\n\n        const distributionRate = Object.keys(rewardsTokens).length ? Object.keys(rewardsTokens).map( token => {\n          if (token.toLowerCase() === veTokenConfig.rewardToken.toLowerCase()){\n            return `${gaugeDistributionRate.toFixed(4)} ${token}/day`;\n          } else {\n            const tokenDistributionRate = rewardsTokens[token].rate;\n            return `${tokenDistributionRate.toFixed(4)} ${token}/day`;\n          }\n        }).join('<br />') : '-';\n\n        availableGauges[gaugeConfig.protocol][gaugeToken] = cdoConfig;\n        availableGauges[gaugeConfig.protocol][gaugeToken].rewardsTokens = rewardsTokens;\n        availableGauges[gaugeConfig.protocol][gaugeToken].totalSupply = gaugeTotalSupply;\n        availableGauges[gaugeConfig.protocol][gaugeToken].depositedAmount = stakedBalance;\n        availableGauges[gaugeConfig.protocol][gaugeToken].claimableTokens = claimableTokens;\n        availableGauges[gaugeConfig.protocol][gaugeToken].distributionRate = distributionRate;\n        availableGauges[gaugeConfig.protocol][gaugeToken].boost = userBoostInfo.boost.toFixed(2)+'x';\n        availableGauges[gaugeConfig.protocol][gaugeToken].weight = gaugeWeight.times(100).toFixed(2)+'%';\n        availableGauges[gaugeConfig.protocol][gaugeToken].nextWeight = gaugeNextWeight.times(100).toFixed(2)+'%';\n        availableGauges[gaugeConfig.protocol][gaugeToken].gaugeUserShare = this.functionsUtil.BNify(Math.min(gaugeUserShare.times(100),100)).toFixed(2)+'%';\n\n        gaugesOrderKeys[`${userBoostInfo.boost.toFixed(2)}_${gaugeWeight.times(100).toFixed(2)}_${gaugeConfig.protocol}_${gaugeToken}`] = {\n          gaugeToken,\n          gaugeConfig\n        };\n      }\n    });\n\n    const gaugesOrderedKeys = Object.keys(gaugesOrderKeys).sort().reverse().reduce(\n      (obj, key) => { \n        obj[key] = gaugesOrderKeys[key]; \n        return obj;\n      }, \n      {}\n    );\n\n\n    const availableGaugesSorted = {};\n    Object.values(gaugesOrderedKeys).forEach( g => {\n      if (!availableGaugesSorted[g.gaugeConfig.protocol]){\n        availableGaugesSorted[g.gaugeConfig.protocol] = {};\n      }\n      availableGaugesSorted[g.gaugeConfig.protocol][g.gaugeToken] = availableGauges[g.gaugeConfig.protocol][g.gaugeToken];\n    });\n\n    // console.log('availableGauges',availableGaugesSorted,gaugesOrderedKeys);\n    this.setState({\n      loading:false,\n      availableGauges:availableGaugesSorted\n    });\n  }\n\n  render() {\n    const govTokenConfig = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n      >\n        <Box\n          width={1}\n          maxWidth={['100%','35em']}\n        >\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              How many dollars do you want to deposit?\n            </Text>\n            <Input\n              min={0}\n              step={0.01}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              borderColor={'cardBorder'}\n              backgroundColor={'cardBg'}\n              boxShadow={'none !important'}\n              value={this.state.depositAmount}\n              placeholder={`Insert dollars amount`}\n              onChange={this.changeDepositAmount.bind(this)}\n              border={`1px solid ${this.props.theme.colors.cardBorder}`}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              How many {govTokenConfig} do you want to stake?\n            </Text>\n            <Input\n              min={0}\n              step={0.01}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              borderColor={'cardBorder'}\n              backgroundColor={'cardBg'}\n              boxShadow={'none !important'}\n              value={this.state.idleAmount}\n              onChange={this.changeIdleAmount.bind(this)}\n              placeholder={`Insert ${govTokenConfig} amount`}\n              border={`1px solid ${this.props.theme.colors.cardBorder}`}\n            />\n          </Box>\n          <Box\n            mt={2}\n            width={1}\n          >\n            <Text\n              mb={1}\n            >\n              For how many days?\n            </Text>\n            <Input\n              min={0}\n              step={1}\n              width={'100%'}\n              type={\"number\"}\n              required={true}\n              height={'3.4em'}\n              borderRadius={2}\n              fontWeight={500}\n              borderWidth={'1px'}\n              borderStyle={'solid'}\n              backgroundColor={'cardBg'}\n              boxShadow={'none !important'}\n              value={this.state.periodValue}\n              placeholder={'Insert days of staking'}\n              onChange={this.changePeriod.bind(this)}\n              borderColor={!this.state.periodValid && this.state.periodValue && this.state.periodValue.length>0 ? 'red' : 'cardBorder'}\n            />\n            {\n              !this.state.periodValid && this.state.periodValue && this.state.periodValue.length>0 && (\n                <Text\n                  my={1}\n                  fontSize={2}\n                  color={'red'}\n                >\n                  Enter a period between 1 week and 4 years!\n                </Text>\n              )\n            }\n            <Flex\n              mt={2}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'space-between'}\n            >\n              {\n                Object.keys(this.state.periodOptions).map( period => {\n                  const periodInfo = this.state.periodOptions[period];\n                  const isActive = this.state.selectedPeriod===period;\n                  const width = (1/Object.keys(this.state.periodOptions).length)-0.01;\n                  return (\n                    <DashboardCard\n                      cardProps={{\n                        p:2,\n                        width:width,\n                      }}\n                      isActive={isActive}\n                      isInteractive={true}\n                      key={`stakePeriod_${period}`}\n                      handleClick={e => this.selectPeriod(period)}\n                    >\n                      <Text\n                        fontSize={2}\n                        fontWeight={3}\n                        textAlign={'center'}\n                        color={this.props.isActive ? 'copyColor' : 'legend'}\n                      >\n                        {periodInfo.label}\n                      </Text>\n                    </DashboardCard>\n                  );\n                })\n              }\n            </Flex>\n          </Box>\n          <Flex\n            mt={2}\n            width={1}\n            justifyContent={'center'}\n          >\n            <ButtonLoader\n              buttonProps={{\n                my:2,\n                mx:[0, 2],\n                size:'medium',\n                borderRadius:4,\n                mainColor:'blue',\n                disabled:(this.functionsUtil.BNify(this.state.depositAmount).isNaN() || this.functionsUtil.BNify(this.state.idleAmount).isNaN() || this.functionsUtil.BNify(this.state.depositAmount).lte(0) || this.functionsUtil.BNify(this.state.idleAmount).lte(0) || !this.state.periodValid)\n              }}\n              buttonText={'CALCULATE BOOST'}\n              isLoading={this.state.loading}\n              handleClick={ e => this.calculateGaugesData(e) }\n            />\n          </Flex>\n        </Box>\n        {\n          this.state.availableGauges && (\n            <Flex\n              mt={3}\n              width={1}\n              mb={[3,4]}\n              flexDirection={'column'}\n            >\n              <Flex\n                pb={2}\n                width={1}\n                mb={[2,3]}\n                borderColor={'divider'}\n                borderBottom={'1px solid transparent'}\n              >\n                <Heading.h4\n                  fontSize={[2,4]}\n                  fontWeight={[3,4]}\n                >\n                  Available Gauges\n                </Heading.h4>\n              </Flex>\n              <TranchesList\n                handleClick={null}\n                enabledProtocols={[]}\n                colsProps={{\n                  fontSize:['10px','14px'],\n                }}\n                cols={[\n                  {\n                    title:'PROTOCOL', \n                    props:{\n                      width:[0.35, 0.12]\n                    },\n                    fields:[\n                      {\n                        name:'protocolIcon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        name:'protocolName'\n                      },\n                      {\n                        mobile:false,\n                        name:'experimentalBadge',\n                        props:{\n                          ml:1,\n                          height:'1.5em'\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    title:'TOKEN',\n                    props:{\n                      width:[0.16, 0.14],\n                    },\n                    fields:[\n                      {\n                        name:'tokenIcon',\n                        props:{\n                          mr:2,\n                          height:['1.4em','2em']\n                        }\n                      },\n                      {\n                        mobile:false,\n                        name:'tokenName'\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'WEIGHT',\n                    props:{\n                      width:[0.25,0.07],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','weight']\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'TOTAL SUPPLY',\n                    props:{\n                      width:[0.26, 0.1],\n                    },\n                    fields:[\n                      {\n                        type:'number',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','totalSupply'],\n                        props:{\n                          minPrecision:1,\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                          decimals:this.props.isMobile ? 2 : 3\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'REWARDS',\n                    props:{\n                      width:[0.23, 0.08],\n                    },\n                    fields:[\n                      {\n                        name:'custom',\n                        showLoader:true,\n                        type:'tokensList',\n                        path:['tokenConfig','rewardsTokens'],\n                        props:{\n                          \n                        }\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'DISTRIBUTION RATE',\n                    props:{\n                      width:[0.15, 0.13],\n                    },\n                    fields:[\n                      {\n                        type:'html',\n                        name:'custom',\n                        showLoader:true,\n                        props:{\n                          fontSize:1,\n                          lineHeight:1.3,\n                        },\n                        path:['tokenConfig','distributionRate'],\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'DEPOSITED',\n                    props:{\n                      color:'copyColor',\n                      width:[0.25,0.08],\n                    },\n                    fields:[\n                      {\n                        type:'number',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','depositedAmount'],\n                        props:{\n                          minPrecision:1,\n                          color:'copyColor',\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                          decimals:this.props.isMobile ? 2 : 3\n                        }\n                      }\n                    ]\n                  },\n                  {\n                    mobile:false,\n                    title:'POOL SHARE',\n                    props:{\n                      color:'copyColor',\n                      width:[0.27,0.09],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','gaugeUserShare'],\n                        props:{\n                          color:'copyColor',\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          },\n                        }\n                      },\n                    ],\n                  },\n                  {\n                    title:'BOOST',\n                    props:{\n                      color:'copyColor',\n                      width:[0.2,0.06],\n                    },\n                    fields:[\n                      {\n                        type:'text',\n                        name:'custom',\n                        showLoader:true,\n                        path:['tokenConfig','boost'],\n                        props:{\n                          color:'copyColor',\n                          flexProps:{\n                            justifyContent:'flex-start'\n                          }\n                        }\n                      },\n                    ],\n                  },\n                  {\n                    title:'CLAIMABLE REWARDS',\n                    props:{\n                      color:'copyColor',\n                      width:[0.39,0.13],\n                    },\n                    fields:[\n                      {\n                        type:'html',\n                        showLoader:true,\n                        props:{\n                          fontSize:[0,1],\n                          lineHeight:1.3,\n                          color:'copyColor'\n                        },\n                        name:'custom',\n                        path:['tokenConfig','claimableTokens']\n                      }\n                    ]\n                  },\n                ]}\n                {...this.props}\n                availableTranches={this.state.availableGauges}\n              />\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default GaugesBoostCalculator;\n","import Gauges from \"../Gauges/Gauges\";\nimport Staking from \"../Staking/Staking\";\nimport DAI from '../abis/tokens/DAI.json';\nimport IDLE from '../contracts/IDLE.json';\nimport Tranches from '../Tranches/Tranches';\nimport USDC from '../abis/tokens/USDC.json';\nimport WETH from '../abis/tokens/WETH.json';\nimport COMP from '../abis/compound/COMP.json';\nimport aToken from '../abis/aave/AToken.json';\nimport ERC20 from '../abis/tokens/ERC20.json';\nimport TokenSwap from '../TokenSwap/TokenSwap';\nimport yDAIv3 from '../abis/iearn/yDAIv3.json';\nimport LpStaking from '../LpStaking/LpStaking';\nimport stkIDLE from '../contracts/stkIDLE.json';\nimport yUSDCv3 from '../abis/iearn/yUSDCv3.json';\nimport yUSDTv3 from '../abis/iearn/yUSDTv3.json';\nimport ySUSDv3 from '../abis/iearn/ySUSDv3.json';\nimport yTUSDv3 from '../abis/iearn/yTUSDv3.json';\nimport Timelock from '../contracts/Timelock.json';\nimport CurveZap from '../abis/curve/CurveZap.json';\nimport CovToken from '../abis/cover/CovToken.json';\nimport B2BVester from '../contracts/B2BVester.json';\nimport Multicall from '../contracts/Multicall.json';\nimport IdleStaking from '../IdleStaking/IdleStaking';\n// import CurveSwap from '../abis/curve/CurveSwap.json';\nimport CurvePool from \"../abis/curve/CurvePool.json\";\nimport NexusMutual from \"../NexusMutual/NexusMutual\";\nimport CoverMint from \"../abis/cover/CoverMint.json\";\nimport LockedIDLE from \"../contracts/LockedIDLE.json\";\nimport LpStakingAbi from \"../contracts/LpStaking.json\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport TokenWrapper from \"../TokenWrapper/TokenWrapper\";\nimport PriceOracle from \"../contracts/PriceOracle.json\";\nimport FeeTreasury from \"../contracts/FeeTreasury.json\";\nimport IdleTokenV2 from \"../contracts/IdleTokenV2.json\";\nimport StrategyPage from \"../StrategyPage/StrategyPage\";\nimport BuyModal from \"../utilities/components/BuyModal\";\nimport IdleTokenV3 from \"../contracts/IdleTokenV3.json\";\nimport IdleTokenV4 from \"../contracts/IdleTokenV4.json\";\nimport BatchDeposit from \"../BatchDeposit/BatchDeposit\";\nimport ChildERC20 from '../abis/polygon/ChildERC20.json';\nimport EarlyRewards from '../contracts/EarlyRewards.json';\nimport MultiRewards from '../contracts/MultiRewards.json';\nimport PolygonBridge from '../PolygonBridge/PolygonBridge';\nimport CoverProtocol from '../CoverProtocol/CoverProtocol';\nimport CurveDeposit from '../abis/curve/CurveDeposit.json';\nimport VesterFactory from '../contracts/VesterFactory.json';\nimport GovernorAlpha from '../contracts/GovernorAlpha.json';\nimport GovernorBravo from '../contracts/GovernorBravo.json'\nimport EcosystemFund from '../contracts/EcosystemFund.json';\nimport Comptroller from '../abis/compound/Comptroller.json';\nimport erc20Forwarder from '../contracts/erc20Forwarder.json';\nimport BalancerPool from '../abis/balancer/BalancerPool.json';\nimport IdleController from '../contracts/IdleController.json';\nimport TokenMigration from '../TokenMigration/TokenMigration';\nimport BatchMigration from '../BatchMigration/BatchMigration';\nimport LiquidityGauge from '../contracts/LiquidityGauge.json';\nimport GaugeController from '../contracts/GaugeController.json';\nimport IdleBatchedMint from '../contracts/IdleBatchedMint.json';\nimport { RampInstantSDK } from '@ramp-network/ramp-instant-sdk';\nimport IdleProxyMinter from '../contracts/IdleProxyMinter.json';\nimport ERC20Predicate from '../abis/polygon/ERC20Predicate.json';\nimport EtherPredicate from '../abis/polygon/EtherPredicate.json';\nimport DepositManager from '../abis/polygon/DepositManager.json';\nimport GaugeDistributor from '../contracts/GaugeDistributor.json';\nimport IdleRebalancerV3 from '../contracts/IdleRebalancerV3.json';\nimport LiquidityGaugeV2 from '../abis/curve/LiquidityGaugeV2.json';\nimport DeployB2BVesting from '../DeployB2BVesting/DeployB2BVesting';\nimport RootChainManager from '../abis/polygon/RootChainManager.json';\nimport SushiV2Router02 from \"../abis/sushiswap/SushiV2Router02.json\";\nimport IdleBatchConverter from \"../contracts/IdleBatchConverter.json\";\nimport UniswapV2Router02 from \"../abis/uniswap/UniswapV2Router02.json\";\nimport ChildChainManager from '../abis/polygon/ChildChainManager.json';\nimport IdleDepositForwarder from \"../contracts/IdleDepositForwarder.json\";\nimport ProtocolDataProvider from '../abis/aave/ProtocolDataProvider.json';\nimport SushiLiquidityPool from \"../abis/sushiswap/SushiLiquidityPool.json\";\nimport NexusMutualIncidents from \"../abis/nexus/NexusMutualIncidents.json\";\nimport GaugeDistributorProxy from '../contracts/GaugeDistributorProxy.json';\nimport StakingFeeDistributor from \"../contracts/StakingFeeDistributor.json\";\nimport NexusMutualDistributor from \"../abis/nexus/NexusMutualDistributor.json\";\nimport BalancerExchangeProxy from \"../abis/balancer/BalancerExchangeProxy.json\";\nimport GaugesBoostCalculator from \"../GaugesBoostCalculator/GaugesBoostCalculator\";\nimport IdleConverterPersonalSignV4 from \"../contracts/IdleConverterPersonalSignV4.json\";\nimport MinimalInitializableProxyFactory from \"../contracts/MinimalInitializableProxyFactory.json\";\n\nconst env = process.env;\n\nconst globalConfigs = {\n  appName: \"Idle\",\n  version: \"v6.5\",\n  baseToken: \"ETH\",\n  baseURL: \"https://idle.finance\",\n  forumURL: \"https://gov.idle.finance\",\n  telegramURL: \"https://t.me/idlefinance\",\n  discordURL: \"https://discord.gg/mpySAJp\",\n  twitterURL: \"https://twitter.com/idlefinance\",\n  cache: {\n    TTL:300,\n    clearAll:true\n  },\n  theme: {\n    darkModeEnabled: true\n  },\n  environments: {\n    live: {\n      requiredNetwork: 1,\n      url: \"https://idle.finance\"\n    },\n    beta: {\n      requiredNetwork: 1,\n      url: \"https://beta.idle.finance\"\n    },\n    polygon: {\n      requiredNetwork: 137,\n      url: \"https://polygon.idle.finance\"\n    }\n  },\n  betaURL: \"https://beta.idle.finance\",\n  countries: {\n    USA: \"United States of America\",\n    GBR: \"United Kingdom\",\n    AUS: \"Australia\",\n    BRA: \"Brazil\",\n    CHN: \"China\",\n    CAN: \"Canada\",\n    EUR: \"Europe\",\n    HKG: \"Hong Kong\",\n    IND: \"India\",\n    MEX: \"Mexico\",\n    RUS: \"Russia\",\n    ZAF: \"South Africa\",\n    KOR: \"South Korea\"\n  },\n  logs: {\n    // Enable logs levels\n    errorsEnabled: false,\n    messagesEnabled: false\n  },\n  connectors: {\n    // Connectors props\n    metamask: {\n      enabled: true,\n      subcaption: \"Browser extension\"\n    },\n    opera: {\n      enabled: true,\n      subcaption: \"Opera injected wallet\"\n    },\n    dapper: {\n      enabled: true,\n      icon: \"dapper.png\",\n      subcaption: \"Browser extension\"\n    },\n    coinbase: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      subcaption: \"Connect with Coinbase wallet\"\n    },\n    trustwallet: {\n      enabled: true,\n      subcaption: \"Connect with Trust Wallet\"\n    },\n    walletconnect: {\n      enabled: true,\n      iconModal: \"walletconnect.png\",\n      subcaption: \"Connect with QR code\"\n    },\n    walletlink: {\n      enabled: true,\n      icon: \"coinbase.png\",\n      name: \"Coinbase Wallet\",\n      subcaption: \"Connect with QR code\"\n    },\n    gnosis: {\n      enabled: true,\n      // icon:'coinbase.png',\n      name: \"Gnosis Safe App\",\n      subcaption: \"Connect with Gnosis Safe App\"\n    },\n    fortmatic: {\n      enabled: true,\n      subcaption: \"Login with phone-number\"\n    },\n    portis: {\n      enabled: true,\n      subcaption: \"Login with e-mail\"\n    },\n    authereum: {\n      enabled: true,\n      subcaption: \"Cross-device wallet\"\n    },\n    torus: {\n      enabled: true,\n      icon: \"torus.png\",\n      subcaption: \"One-Click login for Web 3.0\"\n    },\n    trezor: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledger: {\n      enabled: true,\n      subcaption: \"Hardware wallet\"\n    },\n    ledgerlive: {\n      enabled: true,\n      subcaption: \"Ledger Live Browser\"\n    },\n    custom: {\n      enabled: true,\n      subcaption: \"Custom address\"\n    }\n  },\n  newsletterSubscription: {\n    endpoint: \"https://dev.lapisgroup.it/idle/newsletter.php\"\n  },\n  messages: {\n    scoreShort: \"Protocol Risk Score\",\n    apyShort: \"Annual Percentage Yield\",\n    totalProfitPerc: \"Total percentage profit generated on your balance\",\n    tokenPrice: \"The token price is calculated using Uniswap spot prices.\",\n    cheapRedeem: \"Amount of unlent funds available for low gas fees redeem\",\n    aprRatio:\"The % share of the underlying yield this tranche is currently receiving\",\n    gaugeBoost: \"Increase the boost by staking your IDLE tokens and increasing your voting power\",\n    curveBonusSlippage: \"Slippage or bonus depending on if the coin is low or high in the Curve Pool\",\n    distributionSpeed: \"The distribution indicates the amount of tokens distributed for the entire pool.\",\n    directMint: \"Pay an additional gas fee to rebalance the pool and help all users gain an additional APR\",\n    autoFarming:\"Tokens earned and re-invested for more underlying token which is deposited back into the strategy\",\n    performanceFee: \"This fee is charged on positive returns generated by Idle including accrued gov tokens except IDLE\",\n    userDistributionSpeed: \"The distribution indicates the amount of tokens distributed for your account based on your current pool share.\",\n    govTokenApr: \"Governance Token APR is calculated using the spot price from Uniswap and the current distribution speed for the specific pool.\",\n    stakingRewards: \"Current staking rewards received by this tranche. This requires users to deposit the tranche tokens in the respective Gauge\",\n    apyTranches: \"The annualized rate of return earned on an investment, taking into account the effect of auto-compounding interest and harvests\",\n    govTokenRedeemableBalance: \"The redeemable balance is re-calculated on every interaction with the smart-contract so, the shown balance may be lower than the real one.\",\n    riskScoreShort: \"It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.\",\n    redeemSkipGov: \"This feature allows you to save some gas by skipping the redeem of all or some of your accrued governance tokens, the skipped governance tokens will be given away to the entire pool\",\n    batchDepositExecutionSchedule: \"Batches are executed twice a week, usually on Sunday and Wednesday, and only when the pool size reaches at least 20,000$. The time of each execution will vary depending on the gas price of the Ethereum network.\",\n    riskAdjustedDisabledMessageDeposit: `The Risk Adjusted strategy is no longer available.<br />Please consider to deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to have a similar risk profile.`,\n    apyLong: \"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) the current estimated price of governance tokens from Uniswap spot prices. (IV) IDLE token distribution is referred to the entire pool.\",\n    riskScore: `It's a single, consistently, comparable value for measuring protocol risk, based on factors including smart contract risk, collateralization and liquidity.<br /><br />The model outputs a 0-10 score, where <strong>0 is the most risky and 10 is the most safe.</strong> Visit <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://defiscore.io/overview\">https://defiscore.io/overview</a> for further information.`,\n    curveInstructions: `<strong>Depositing into the pool:</strong><br />By depositing your funds into the Curve Pool you may incur in slippage or bonus depending on if the coin is low or high in the pool.<br /><br /><strong>Withdrawing share from the pool:</strong><br />When you redeem your tokens previously deposited in the Curve Pool you get back an uneven amounts of tokens, that can give slippage or bonus depending on if the coin is low or high in the pool.`,\n    yieldFarming: 'Strategies in Idle now will be able to support and distribute a vast range of yield opportunities across multiple protocols. Users will be able to receive their equivalent share of governance token that the protocol is receiving while allocating liquidity to yield farming opportunities. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://idlefinance.medium.com/idle-yield-farming-upgrade-18e4bc483c8f\" class=\"link\">Read more here</a>.',\n    riskAdjustedDisabledMessageRedeem: `The Risk Adjusted strategy is no longer available, please redeem your funds from this strategy. You can deposit in the <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://beta.idle.finance/#/dashboard/tranches/senior/idle\" class=\"link\">Senior Tranche</a> to maintain a similar risk profile and receive an incentive. <a target=\"_blank\" rel=\"nofollow noopener noreferrer\" href=\"https://gov.idle.finance/t/risk-adjusted-removal-for-tranches-migration/673\" class=\"link\">Read more here</a>.`,\n  },\n  analytics: {\n    google: {\n      events: {\n        enabled: true, // Enable Google Analytics events\n        debugEnabled: false, // Enable sending for test environments\n        addPostfixForTestnet: true // Append testnet to eventCategory\n      },\n      pageView: {\n        enabled: true\n      }\n    }\n  },\n  modals: {\n    // Enable modals\n    first_deposit_referral: false, // Referral share modal\n    first_deposit_share: true, // First deposit share modal\n    migrate: {\n      enabled: true,\n      availableNetworks: [1]\n    },\n    welcome: {\n      // Welcome modal\n      enabled: true,\n      frequency: 604800 // One week\n    }\n  },\n  dashboard: {\n    baseRoute: \"/dashboard\",\n    theme: {\n      mode: \"light\",\n      darkModeEnabled: true\n    }\n  },\n  governance: {\n    test: false,\n    enabled: true,\n    startBlock: 11333729,\n    availableNetworks: [1],\n    baseRoute: '/governance',\n    props: {\n      tokenName: 'IDLE',\n      availableContracts: {\n        IDLE,\n        FeeTreasury,\n        PriceOracle,\n        GovernorAlpha,\n        GovernorBravo,\n        EcosystemFund,\n        IdleController\n      }\n    },\n    proposals: {\n      18: {\n        description: `This IIP includes Governor bravo update, M1-2022 Leagues budget transfer, Idle Smart Treasury migration, and Enzyme Bug Bounty. For more information, check: <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://gov.idle.finance/t/iip-18-governor-bravo-update-m1-2022-leagues-budget-transfer-idle-smart-treasury-migration-and-enzyme-bug-bounty/895\">https://gov.idle.finance/t/iip-18-governor-bravo-update-m1-2022-leagues-budget-transfer-idle-smart-treasury-migration-and-enzyme-bug-bounty/895</a>.`,\n      },\n      12: {\n        description: 'Details in the gov forum post: <a class=\"link\" rel=\"nofollow noopener noreferrer\" target=\"_blank\" href=\"https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620\">https://gov.idle.finance/t/iip-12-enable-idle-lm-on-idlerai-and-fund-leagues-mandate/620</a>.'\n      },\n      7: {\n        description: `Upgrade of IdleTokenGovernance contract to include the following changes:<br />\n        <ul>\n          <li>support for EIP 3165 flashLoans (fee is set to 0.08% of the flash loaned amount redistributed to LP)</li>\n          <li>support for stkAAVE distribution</li>\n          <li>support for new cWBCT distribution</li>\n          <li>other minor updates for gas and redeems</li>\n        </ul>\n        See more in the gov forum post: <a class=\"link\" href=\"https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466\">https://gov.idle.finance/t/iip-7-idletoken-upgrade-stkaave-distribution/466</a>.`\n      }\n    },\n    contracts: {\n      delegates: \"IDLE\",\n      governance: {\n        v1:{\n          name:\"GovernorAlpha\",\n          toBlock:\"14057088\"\n        },\n        v2:{\n          name:\"GovernorBravo\",\n          toBlock:\"latest\"\n        }\n      }\n    }\n  },\n  curve: {\n    enabled: false,\n    params: {\n      n_coins: 3,\n      label: \"Curve\",\n      route: \"/dashboard/curve\",\n      image: \"images/protocols/curve.svg\",\n      imageInactive: \"images/protocols/curve-off.svg\"\n    },\n    rates: {\n      path: [\"apy\", \"day\", \"idle\"],\n      endpoint: \"https://stats.curve.fi/raw-stats/apys.json\"\n    },\n    poolContract: {\n      decimals: 18,\n      abi: CurvePool,\n      name: \"idleDAI+idleUSDC+idleUSDT\",\n      token: \"idleDAI+idleUSDC+idleUSDT\",\n      address: \"0x09f4b84a87fc81fc84220fd7287b613b8a9d4c05\"\n    },\n    depositContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\"\n    },\n    gaugeContract: {\n      abi: LiquidityGaugeV2,\n      name: \"LiquidityGaugeV2\",\n      address: \"0xd69ac8d9D25e99446171B5D0B3E4234dAd294890\"\n    },\n    zapContract: {\n      abi: CurveZap,\n      name: \"idleCurveZap\",\n      address: \"0x456974df1042ba7a46fd49512a8778ac3b840a21\"\n    },\n    migrationContract: {\n      abi: CurveDeposit,\n      name: \"idleCurveDeposit\",\n      address: \"0x83f252f036761a1e3d10daca8e16d7b21e3744d7\",\n      functions: [\n        {\n          label: \"Deposit\",\n          name: \"add_liquidity\"\n        }\n      ]\n    },\n    availableTokens: {\n      idleDAIYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"DAI\",\n        token: \"idleDAIYield\",\n        address: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 0\n        }\n      },\n      idleUSDCYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDC\",\n        token: \"idleUSDCYield\",\n        address: \"0x5274891bEC421B39D23760c04A6755eCB444797C\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 1\n        }\n      },\n      idleUSDTYield: {\n        decimals: 18,\n        enabled: true,\n        baseToken: \"USDT\",\n        token: \"idleUSDTYield\",\n        address: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n        migrationParams: {\n          n_coins: 3,\n          coinIndex: 2\n        }\n      }\n    }\n  },\n  permit: {\n    DAI: {\n      version: 1,\n      EIPVersion: null,\n      nonceMethod: \"nonces\",\n      name: \"Dai Stablecoin\",\n      type: [\n        { name: \"holder\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"expiry\", type: \"uint256\" },\n        { name: \"allowed\", type: \"bool\" }\n      ]\n    },\n    USDC: {\n      version: 2,\n      name: \"USD Coin\",\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    },\n    SLP: {\n      version: 1,\n      EIPVersion: 2612,\n      nonceMethod: \"nonces\",\n      name: \"SushiSwap LP Token\",\n      type: [\n        { name: \"owner\", type: \"address\" },\n        { name: \"spender\", type: \"address\" },\n        { name: \"value\", type: \"uint256\" },\n        { name: \"nonce\", type: \"uint256\" },\n        { name: \"deadline\", type: \"uint256\" }\n      ]\n    }\n  },\n  govTokens: {\n    IDLE: {\n      abi: IDLE,\n      decimals: 18,\n      token: \"IDLE\",\n      enabled: true,\n      showAUM: false, // Include IDLE balance in AUM\n      showAPR: false, // Include IDLE Apr\n      protocol: \"idle\",\n      showPrice: false, // Show price in Yield Farming section\n      showBalance: false, // Include IDLE balance in Portfolio Donut\n      aprTooltipMode: false,\n      distributionMode: \"block\",\n      availableNetworks: [1, 137],\n      distributionFrequency: \"day\", // Multiply distribution per block\n      color: \"hsl(162, 100%, 41%)\",\n      icon: \"images/tokens/IDLE.svg\",\n      addresses: {\n        1: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\",\n        137: \"0xc25351811983818c9fe6d8c580531819c8ade90f\"\n      },\n      address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // MAIN\n      disabledTokens: {\n        1: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"],\n        137: [\"idleDAIYield\", \"idleUSDCYield\", \"idleWETHYield\"],\n      }\n    },\n    COMP: {\n      abi: COMP,\n      decimals: 18,\n      token: \"COMP\",\n      enabled: true,\n      showAUM: true, // Include IDLE balance in AUM\n      showAPR: true, // Include COMP Apr\n      showPrice: true,\n      showBalance: true, // Include COMP balance in Portfolio Donut\n      disabledTokens: [],\n      protocol: \"compound\",\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      color: \"hsl(162, 100%, 41%)\",\n      address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    LDO: {\n      abi: ERC20,\n      token: \"LDO\",\n      decimals: 18,\n      enabled: true,\n      showAUM: true, // Include balance in AUM\n      showAPR: true, // Include Apr\n      showPrice: true,\n      protocol: \"lido\",\n      showBalance: true, // Include balance in Portfolio Donut\n      disabledTokens: [],\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      color: \"hsl(9, 86%, 75%)\",\n      distributionMode: \"block\",\n      distributionFrequency: \"day\",\n      address: \"0x5a98fcbea516cf06857215779fd812ca3bef1b32\" // MAIN\n      // address:'0x61460874a7196d6a22d1ee4922473664b3e95270' // KOVAN\n    },\n    stkAAVE: {\n      abi: aToken,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      showPrice: true,\n      token: 'stkAAVE',\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      aprTooltipMode: false,\n      availableNetworks: [1],\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      address: '0x4da27a545c0c5b758a6ba100e3a049001de870f5', // MAIN\n      addressForPrice: '0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9', // MAIN\n      disabledTokens: {\n        1: [\"idleTUSDYield\", \"idleSUSDYield\", \"idleFEIYield\"]\n      }\n    },\n    WMATIC: {\n      abi: ERC20,\n      decimals: 18,\n      showAUM: true, // Include stkAAVE balance in AUM\n      showAPR: true, // Include stkAAVE Apr\n      enabled: true,\n      token: 'WMATIC',\n      showPrice: true,\n      showBalance: true, // Include stkAAVE balance in Portfolio Donut\n      protocol: 'aavev2',\n      disabledTokens: [],\n      aprTooltipMode: false,\n      distributionMode: 'second',\n      color: 'hsl(314, 41%, 51%)',\n      distributionFrequency: 'day',\n      availableNetworks: [137, 80001],\n      // address:'0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889', // Mumbai\n      address: '0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270', // Polygon\n      addressForPrice: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0' // Mainnet\n    }\n  },\n  contracts: {\n    137: {\n      ProtocolDataProvider: {\n        abi: ProtocolDataProvider,\n        address: '0x7551b5D2763519d4e37e8B81929D336De671d46d'\n      },\n      ChildChainManager: {\n        abi: ChildChainManager,\n        // address:'0x2e5e27d50EFa501D90Ad3638ff8441a0C0C0d75e' // Mumbai\n        address: '0xA6FA4fB5f76172d178d61B04b0ecd319C5d1C0aa' // Matic\n      },\n      UniswapRouter: {\n        networkId: 1,\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0x1b02dA8Cb0d097eB8D57A175b88c7D8b47997506'\n      },\n    },\n    1: {\n      DepositManager: {\n        abi: DepositManager,\n        address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n      },\n      RootChainManager: {\n        abi: RootChainManager,\n        // address:'0xBbD7cBFA79faee899Eaf900F13C9065bF03B1A74' // Goerli\n        address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n      },\n      ProxyFactory: {\n        abi: MinimalInitializableProxyFactory,\n        address: \"0x91baced76e3e327ba7850ef82a7a8251f6e43fb8\"\n      },\n      LockedIDLE: {\n        abi: LockedIDLE,\n        address: '0xF241a0151841AE2E6ea750D50C5794b5EDC31D99'\n      },\n      FeeTreasury: {\n        abi: FeeTreasury,\n        address: '0x69a62c24f16d4914a48919613e8ee330641bcb94' // MAIN\n      },\n      PriceOracle: {\n        abi: PriceOracle,\n        address: '0x972A64d108e250dF98dbeac8170678501f5EF181' // MAIN\n        // address:'0xCab5760688db837Bb453FE1DFBC5eDeE6fa8F0FF' // KOVAN\n      },\n      Timelock: {\n        abi: Timelock,\n        address: '0xD6dABBc2b275114a2366555d6C481EF08FDC2556' // MAIN\n        // address:'0xfD88D7E737a06Aa9c62B950C1cB5eE63DA379AFd' // KOVAN\n      },\n      EcosystemFund: {\n        abi: EcosystemFund,\n        address: '0xb0aA1f98523Ec15932dd5fAAC5d86e57115571C7' // MAIN\n        // address:'0x125d3D6A8e546BD13802c309429CBB4db5737d57' // KOVAN\n      },\n      VesterFactory: {\n        abi: VesterFactory,\n        address: '0xbF875f2C6e4Cc1688dfe4ECf79583193B6089972' // MAIN\n        // address:'0x9b52f91578c8AfA8e2DF07d4D7726bB6b73Ec1FE' // KOVAN\n      },\n      IdleController: {\n        abi: IdleController,\n        address: '0x275DA8e61ea8E02d51EDd8d0DC5c0E62b4CDB0BE' // MAIN\n        // address:'0x8Ad5F0644b17208c81bA5BDBe689c9bcc7143d87' // KOVAN\n      },\n      EarlyRewards: {\n        abi: EarlyRewards,\n        address: '0xa1F71ED24ABA6c8Da8ca8C046bBc9804625d88Fc' // MAIN\n        // address:'0x07A94A60B54c6b2Da19e23D6E9123180Bf92ED40' // KOVAN\n      },\n      GovernorAlpha: {\n        abi: GovernorAlpha,\n        address: '0x2256b25CFC8E35c3135664FD03E77595042fe31B' // MAIN\n        // address:'0x782cB1dbd0bD4df95c2497819be3984EeA5c2c25' // KOVAN\n      },\n      GovernorBravo: {\n        abi: GovernorBravo,\n        address: '0x3D5Fc645320be0A085A32885F078F7121e5E5375'\n      },\n      Comptroller: {\n        abi: Comptroller,\n        address: '0x3d9819210a31b4961b30ef54be2aed79b9c9cd3b', // Main\n        // address:'0x5eae89dc1c671724a672ff0630122ee834098657' // Kovan\n      },\n      SushiswapRouter: {\n        abi: SushiV2Router02,\n        address: '0xd9e1cE17f2641f24aE83637ab66a2cca9C378B9F'\n      },\n      UniswapRouter: {\n        abi: UniswapV2Router02,\n        address: '0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D'\n      },\n      BalancerExchangeProxy: {\n        abi: BalancerExchangeProxy,\n        address: '0x3E66B66Fd1d0b02fDa6C811Da9E0547970DB2f21'\n      },\n      GaugeController:{\n        abi:GaugeController,\n        address:'0xaC69078141f76A1e257Ee889920d02Cc547d632f'\n      },\n      GaugeDistributor:{\n        abi:GaugeDistributor,\n        address:'0x1276A8ee84900bD8CcA6e9b3ccB99FF4771Fe329'\n      },\n      GaugeDistributorProxy:{\n        abi:GaugeDistributorProxy,\n        address:'0x074306BC6a6Fc1bD02B425dd41D742ADf36Ca9C6'\n      },\n      Multicall:{\n        abi:Multicall,\n        address:'0xeefba1e63905ef1d7acba5a8513c70307c1ce441'\n      }\n    }\n  },\n  tokens: {\n    DAI: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\"0xf47261b00000000000000000000000006b175474e89094c44da98b954eedeac495271d0f\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    },\n    USDC: {\n      zeroExInstant: {\n        orderSource: \"https://api.0x.org/sra/\",\n        assetData:\"0xf47261b0000000000000000000000000a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        affiliateInfo: {\n          feeRecipient: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n          feePercentage: 0.0025\n        }\n      }\n    }\n  },\n  tranchflash: {\n    subtitle: \"Make yield your own.\",\n    arrows: \"images/idlearrows.svg\",\n    name: \"perpetual yield tranches\",\n    helpcircle: \"images/help-circle.svg\",\n    juniorinfo:\"<b>Junior Tranches</b><br>Higher risk, leveraged for variable rate rewards\",\n    seniorinfo:\"<b>Senior Tranches</b><br>Lower risk, built-in coverage for variable rate rewards\",\n    desc: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\",\n    questions: [\n      {\n        desc: \"How it Works?\",\n        msg: \"This product aggregates user deposits into underlying markets and allocates the accrued yield on the sum between two different risk profile subsets. You get to choose the strategy according to your risk tolerance. Users are able to deposit funds into either the Junior or Senior Tranches in exchange for a token indicating their claim on their principal and whatever yield is allocated for them. These aggregated holdings are then deposited into the specified originating lending market, in this current version Idle Best-Yield strategy.\"\n      },\n      {\n        desc: \"What happens in a case of a default?\",\n        msg: \"In case of hack, an emergency shutdown can be triggered (by both the guardian, which would be a multi-sig wallet, and the owner which will be the Idle governance) in order to pause both deposits and redeems.<br />The redistribution of remaining funds can happens selectively, by allowing only Senior tranche holders to withdraw first directly in the main contract, or through a separate contract for more complex cases and resolutions (managed by the Idle governance).\"\n      }\n    ]\n  },\n  tranches: {\n    AA: {\n      color: {\n        hex: \"#337de5\",\n        rgb: [51, 125, 229],\n        hsl: [\"215\", \"77%\", \"55%\"]\n      },\n      type: \"AA\",\n      route: \"senior\",\n      icon: \"Security\",\n      image: \"images/SeniorTranche.svg\",\n      bubble: \"images/SeniorBubble.svg\",\n      baseName: \"senior\",\n      name: \"Senior Tranche\",\n      features: [\n        \"Covered by Junior tranches funds\",\n        \"Minimized risk exposure\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n        \"Stake to receive $IDLE tokens\"\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will also get the accrued rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"Senior Tranches provide a shielded access to optimized DeFi yields, thanks to an integrated funds' coverage given by Junior Tranches\",\n        deposit: \"By depositing in the Senior Tranche in case of Smart-Contract breach your funds are covered by the funds deposited in the Junior Tranche.\",\n        apy:\"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) additional APY derived from staking\",\n      }\n    },\n    BB: {\n      color: {\n        hex: \"#FAB325\",\n        rgb: [250, 179, 37],\n        hsl: [\"40\", \"95%\", \"56%\"]\n      },\n      type: \"BB\",\n      route: \"junior\",\n      icon: \"TrendingUp\",\n      image: \"images/JuniorTranche.svg\",\n      bubble: \"images/JuniorBubble.svg\",\n      baseName: \"junior\",\n      name: \"Junior Tranche\",\n      features: [\n        \"Leverage yield using Senior tranches funds\",\n        \"Higher risk exposure by protecting senior tranches\",\n        \"No locking period or epochs\",\n        \"Auto-Reinvest accrued tokens\",\n      ],\n      description: {\n        withdraw: \"You can withdraw your funds at any time from the tranche.\",\n        stake: \"Stake your tranche tokens to earn additional rewards and boost the APY.\",\n        unstake: \"By unstaking your tranche tokens you will also get the accrued rewards.\",\n        cantUnstake: \"To unstake your funds you just need to wait 10 blocks after your last stake transaction.\",\n        cantWithdraw: \"To withdraw your funds you just need to wait at least 1 block from the latest harvest transaction.\",\n        long: \"The Junior Tranches provide amplified optimized DeFi yields by carrying a higher grade of risks and protecting Senior Tranches\",\n        deposit: \"By depositing in the Junior Tranche in case of Smart-Contract breach your funds will be used to cover eventual losses on the Senior Tranche.\",\n        apy:\"APY is based on (I) the current yield advertised by the underlying protocol, (II) the current distribution rate of governance tokens provided by underlying lending protocols (III) additional APY derived from staking\",\n      }\n    }\n  },\n  extraicons: {\n    best: {\n      icon: \"images/sidebar/best-on.svg\",\n      iconDark: \"images/sidebar/best-on-dark.svg\",\n      iconInactive: \"images/sidebar/best-off.svg\",\n      iconInactiveDark: \"images/sidebar/best-off-dark.svg\",\n    },\n    gauges: {\n      icon: \"images/sidebar/gauges-on.svg\",\n      iconDark: \"images/sidebar/gauges-on-dark.svg\",\n      iconInactive: \"images/sidebar/gauges-off.svg\",\n      iconInactiveDark: \"images/sidebar/gauges-off-dark.svg\",\n    },\n    tranches: {\n      icon: \"images/sidebar/tranches-on.svg\",\n      iconDark: \"images/sidebar/tranches-on-dark.svg\",\n      iconInactive: \"images/strategies/tranches-off.svg\",\n      iconInactiveDark: \"images/strategies/tranches-off-dark.svg\"\n    },\n    risk: {\n      icon: \"images/sidebar/risk-on.svg\",\n      iconDark: \"images/sidebar/risk-on-dark.svg\",\n      iconInactive: \"images/sidebar/risk-off.svg\",\n      iconInactiveDark: \"images/sidebar/risk-off-dark.svg\"\n    },\n    stats: {\n      icon: \"images/sidebar/stats-on.svg\",\n      iconDark: \"images/sidebar/stats-on-dark.svg\",\n      iconInactive: \"images/sidebar/stats-off.svg\",\n      iconInactiveDark: \"images/sidebar/stats-off-dark.svg\"\n    },\n    tools: {\n      icon: \"images/sidebar/tools-on.svg\",\n      iconDark: \"images/sidebar/tools-on-dark.svg\",\n      iconInactive: \"images/sidebar/tools-off.svg\",\n      iconInactiveDark: \"images/sidebar/tools-off-dark.svg\"\n    },\n    forum: {\n      icon: \"images/sidebar/forum-on.svg\",\n      iconDark: \"images/sidebar/forum-on-dark.svg\",\n      iconInactive: \"images/sidebar/forum-off.svg\",\n      iconInactiveDark: \"images/sidebar/forum-off-dark.svg\"\n    },\n    stake: {\n      icon: \"images/sidebar/stake-on.svg\",\n      iconDark: \"images/sidebar/stake-on-dark.svg\",\n      iconInactive: \"images/sidebar/stake-off.svg\",\n      iconInactiveDark: \"images/sidebar/stake-off-dark.svg\"\n    },\n    leaderboard: {\n      icon: \"images/sidebar/leaderboard-on.svg\",\n      iconDark: \"images/sidebar/leaderboard-on-dark.svg\",\n      iconInactive: \"images/sidebar/leaderboard-off.svg\",\n      iconInactiveDark: \"images/sidebar/leaderboard-off-dark.svg\"\n    }, overview: {\n      icon: \"images/sidebar/overview-on.svg\",\n      iconDark: \"images/sidebar/overview-on-dark.svg\",\n      iconInactive: \"images/sidebar/overview-off.svg\",\n      iconInactiveDark: \"images/sidebar/overview-off-dark.svg\"\n    }, proposals: {\n      icon: \"images/sidebar/proposals-on.svg\",\n      iconDark: \"images/sidebar/proposals-on-dark.svg\",\n      iconInactive: \"images/sidebar/proposals-off.svg\",\n      iconInactiveDark: \"images/sidebar/proposals-off-dark.svg\"\n    }, delegate: {\n      icon: \"images/sidebar/delegate-on.svg\",\n      iconDark: \"images/sidebar/delegate-on-dark.svg\",\n      iconInactive: \"images/sidebar/delegate-off.svg\",\n      iconInactiveDark: \"images/sidebar/delegate-off-dark.svg\"\n    },\n  },\n  landingStrategies: {\n    tranches: {\n      networkId: 1,\n      visible: true,\n      token: \"stETH\",\n      type: \"tranche\",\n      enabledEnvs: [],\n      protocol: \"lido\",\n      color: \"#f32121\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      strategy: 'tranches',\n      component: Tranches,\n      iconName: \"Whatshot\",\n      availableNetworks: [1],\n      govTokensEnabled: true,\n      title: \"Perpetual Tranches\",\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      networkId: 1,\n      token: \"DAI\",\n      visible: true,\n      strategy: 'best',\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    polygon: {\n      token: \"DAI\",\n      visible: true,\n      networkId: 137,\n      enabledEnvs: [],\n      strategy: 'best',\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      availableNetworks: [],\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-on.svg\",\n      iconInactiveDark: \"images/strategies/best-on.svg\",\n      desc: \"Maximize your returns on Polygon across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    }\n  },\n  strategies: {\n    tranches: {\n      token: \"FEI\",\n      visible: true,\n      type: \"tranche\",\n      enabledEnvs: [],\n      protocol: \"idle\",\n      color: \"#f32121\",\n      comingSoon: false,\n      title: \"Tranches\",\n      addGovTokens: true,\n      titlePostfix: null,\n      component: Tranches,\n      iconName: \"Whatshot\",\n      availableNetworks: [1],\n      govTokensEnabled: true,\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/tranches-on.png\",\n      iconInactive: \"images/strategies/tranches-off.png\",\n      iconInactiveDark: \"images/strategies/tranches-white.png\",\n      desc: \"Diversify your risk profile with dynamic tranched yield derivatives\",\n      descShort: \"Tranches deposit assets (eg DAI) into yield sources (eg Idle Finance) and split the accrued interest between 2 classes of products with different risk profiles.\",\n      descLong: \"Choose the benefits of high-yield or low-risk, while enjoying the flexibility of Tranches. This comes with auto-compounding for accrued governance tokens and no locking period.\"\n    },\n    best: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#f32121\",\n      type: \"strategy\",\n      comingSoon: false,\n      addGovTokens: true,\n      titlePostfix: null,\n      title: \"Best-Yield\",\n      iconName: \"Whatshot\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      availableNetworks: [1, 137],\n      chartColor: \"hsl(40,95%,59%)\",\n      icon: \"images/strategies/best-on.svg\",\n      iconInactive: \"images/strategies/best-off.svg\",\n      iconInactiveDark: \"images/strategies/best-white.svg\",\n      desc: \"Maximize your returns across DeFi protocols\",\n      descLong: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols. Idle’s monitoring system automatically triggers a rebalance if it spots a better-performing allocation: this includes taking account of the total liquidity within the pool, incorporating underlying protocol rate functions and levels of supply and demand. As a user, you will end up with an higher return without constantly checking rates and burning gas on every transfer. Unlock your funds from a single protocol performance with this strategy.\",\n      descShort: \"The Best-Yield allocation strategy allows to maximize the interest rate returns by detecting the interest rate changes on different lending protocols.\"\n    },\n    risk: {\n      token: \"DAI\",\n      visible: true,\n      enabledEnvs: [],\n      color: \"#2196F3\",\n      type: \"strategy\",\n      comingSoon: false,\n      titlePostfix: null,\n      addGovTokens: true,\n      iconName: \"Security\",\n      availableNetworks: [1],\n      title: \"Risk-Adjusted\",\n      govTokensEnabled: true,\n      component: StrategyPage,\n      chartColor: \"hsl(211,67%,47%)\",\n      icon: \"images/strategies/risk-on.svg\",\n      iconInactive: \"images/strategies/risk-off.svg\",\n      iconInactiveDark: \"images/strategies/risk-white.svg\",\n      desc: \"Optimize your risk exposure across DeFi protocols\",\n      descLong: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.\",\n      descShort: \"The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.\"\n    }\n    /*\n    new:{\n      token:'DAI',\n      color:'#2196F3',\n      comingSoon:true,\n      addGovTokens:true,\n      iconName:'Adjust',\n      title:'Coming Soon',\n      chartColor:'hsl(211,67%,47%)',\n      icon:'images/strategies/solr-on.svg',\n      desc:'More strategies are coming soon!',\n      iconInactive:'images/strategies/solr-off.svg',\n      descLong:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level. The risk-management algorithm takes account of the total assets within a pool, incorporates underlying protocol rate functions and levels of supply and demand, skimming protocols with a bad score/rate mix, and finally determining an allocation that achieves the highest risk-return score possible after the rebalance happens.',\n      descShort:'The Risk-Adjusted allocation strategy provides a way to earn the best rate at the lowest risk-level.'\n    }\n    */\n  },\n  stats: {\n    enabled: true, // Enable endpoint\n    availableNetworks: [1, 137],\n    rates: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/rates/\",\n        137: \"https://api-polygon.idle.finance/rates/\"\n      }\n    },\n    tvls: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/tvls/\",\n        137: \"https://api-polygon.idle.finance/tvls/\"\n      }\n    },\n    aprs: {\n      TTL: 120,\n      endpoint: {\n        1: \"https://api.idle.finance/aprs/\",\n        137: \"https://api-polygon.idle.finance/aprs/\"\n      }\n    },\n    substack: {\n      TTL: 1800,\n      endpoint: {\n        1: \"https://api.idle.finance/substack/\",\n        137: \"https://api-polygon.idle.finance/substack/\"\n      }\n    },\n    scores: {\n      TTL: 300, // 5 minutes\n      endpoint: {\n        1: \"https://api.idle.finance/scores/\"\n      }\n    },\n    config: {\n      // timeout:60000,\n      headers: env.REACT_APP_IDLE_KEY ? { Authorization: `Bearer ${env.REACT_APP_IDLE_KEY}` } : {},\n    },\n    versions: {\n      /*\n      v2:{\n        label:'Idle V2',\n        startTimestamp:null,\n        additionalProtocols:[],\n        endTimestamp:1589752999,\n        enabledStrategies:['best'],\n        showPerformanceTooltip:false,\n        enabledTokens:['DAI','USDC'],\n      },\n      */\n      v3: {\n        label: \"Idle V3\",\n        additionalProtocols: [],\n        endTimestamp: 1597237542,\n        startTimestamp: 1589801874,\n        showPerformanceTooltip: false,\n        strategiesParams: {\n          risk: {\n            endTimestamp: 1597233922\n          }\n        },\n        enabledStrategies: [\"best\", \"risk\"],\n        enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"]\n      },\n      v4: {\n        label: \"Idle V4\",\n        endTimestamp: null,\n        startTimestamp: 1597442400, // 1598220000\n        enabledStrategies: [\"best\", \"risk\"],\n        showPerformanceTooltip: true,\n        strategiesParams: {\n          risk: {\n            startTimestamp: 1599183170\n          }\n        },\n        enabledTokens: ['DAI', 'USDC', 'USDT', 'TUSD', 'SUSD', 'WBTC', 'WETH', 'RAI', 'FEI'],\n        additionalProtocols: [\n          {\n            decimals: 16,\n            protocol: \"compound\",\n            name: \"compoundWithCOMP\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\"]\n          },\n          {\n            decimals: 18,\n            protocol: \"aavev2\",\n            name: \"aavev2WithStkAAVE\",\n            enabledTokens: [\"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\", \"WETH\", \"RAI\"]\n          }\n        ]\n      }\n    },\n    tokens: {\n      DAI: {\n        token:'DAI',\n        decimals: 18,\n        enabled: true,\n        color: {\n          rgb: [250, 184, 51],\n          hex: '#F7B24A',\n          hsl: ['40', '95%', '59%']\n        },\n        chart: {\n          labelTextColorModifiers: ['darker', 2]\n        },\n        startTimestamp: '2020-02-11',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        performanceTooltip: 'APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.',\n      },\n      ETH: {\n        token:'ETH',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      STETH: {\n        decimals: 18,\n        enabled: true,\n        token:'stETH',\n        label: 'stETH',\n        color: {\n          hex: '#00a3ff',\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        },\n        icon: \"images/tokens/stETH.svg\",\n        conversionRateField: \"stETHDAIPrice\",\n        address: '0xae7ab96520de3a18e5e111b5eaab095312d7fe84'\n      },\n      CVX: {\n        token:'CVX',\n        label: 'CVX',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#3a3a3a',\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        },\n        address: '0x4e3fbd56cd56c3e72c1403e103b45db9da5b9d2b'\n      },\n      LDO: {\n        token:'LDO',\n        label: 'LDO',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#f69988',\n          rgb: [246, 153, 136],\n          hsl: ['9', '86%', '75%']\n        },\n        address: '0x5a98fcbea516cf06857215779fd812ca3bef1b32'\n      },\n      MTA: {\n        token: 'MTA',\n        label: 'MTA',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#000',\n          rgb: [0, 0, 0],\n          hsl: ['0', '0%', '0%']\n        },\n        address: '0xa3BeD4E1c75D00fa6f4E5E6922DB7261B5E9AcD2'\n      },\n      CRV: {\n        decimals: 18,\n        label: 'CRV',\n        token: 'CRV',\n        enabled: true,\n        color: {\n          hex: '#3466a3',\n          rgb: [52, 102, 163],\n          hsl: ['213', '52%', '42%']\n        },\n        address: '0xD533a949740bb3306d119CC777fa900bA034cd52'\n      },\n      FRAX3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'FRAX3CRV',\n        token: 'FRAX3CRV',\n        icon: \"images/tokens/FRAX3CRV.png\",\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0xd632f22692FaC7611d2AA1C0D552930D43CAEd3B'\n      },\n      MIM3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'MIM3CRV',\n        token: 'MIM3CRV',\n        color: {\n          hex: '#9695f7',\n          rgb: [150, 149, 247],\n          hsl: ['241', '86%', '78%']\n        },\n        address: '0x5a6A4D54456819380173272A5E8E9B9904BdF41B'\n      },\n      ALUSD3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'ALUSD3CRV',\n        token: 'ALUSD3CRV',\n        icon: \"images/tokens/ALUSD3CRV.png\",\n        color: {\n          hex: '#ffbf93',\n          rgb: [255, 191, 147],\n          hsl: ['24, 100%, 79%']\n        },\n        address: '0x43b4FdFD4Ff969587185cDB6f0BD875c5Fc83f8c'\n      },\n      MUSD3CRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'MUSD3CRV',\n        token: 'MUSD3CRV',\n        icon: \"images/tokens/MUSD3CRV.png\",\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x1AEf73d49Dedc4b1778d0706583995958Dc862e6'\n      },\n      PBTCCRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'PBTCCRV',\n        token: 'PBTCCRV',\n        color: {\n          hex: '#ff6665',\n          rgb: [255, 102, 101],\n          hsl: ['0', '100%', '70%']\n        },\n        address: '0xC9467E453620f16b57a34a770C6bceBECe002587'\n      },\n      MUSD: {\n        decimals: 18,\n        enabled: true,\n        label: 'mUSD',\n        token: 'mUSD',\n        icon: \"images/tokens/mUSD.svg\",\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0xe2f2a5c287993345a840db3b0845fbc70f5935a5'\n      },\n      ANGLE: {\n        decimals: 18,\n        enabled: true,\n        label: 'ANGLE',\n        token: 'ANGLE',\n        color: {\n          hex: '#333',\n          rgb: [51, 51, 51],\n          hsl: ['0, 0%, 20%']\n        },\n        address: '0x31429d1856ad1377a8a0079410b297e1a9e214c2'\n      },\n      \"3EUR\": {\n        decimals: 18,\n        enabled: true,\n        label: '3EUR',\n        token: '3EUR',\n        color: {\n          hex: '#cc9768',\n          rgb: [204, 151, 104],\n          hsl: ['28', '50%', '60%']\n        },\n        conversionRateField: \"eurDAIPrice\",\n        address: '0xb9446c4Ef5EBE66268dA6700D26f96273DE3d571',\n        addressForPrice: '0x1a7e4e63778b4f12a199c062f3efdd288afcbce8',\n        addressForPriceFrom: '0x956f47f50a910163d8bf957cf5846d573e7f87ca'\n      },\n      STECRV: {\n        decimals: 18,\n        enabled: true,\n        label: 'steCRV',\n        token: 'steCRV',\n        icon: \"images/tokens/steCRV.svg\",\n        color: {\n          hex: '#81c8ff',\n          rgb: [129, 200, 255],\n          hsl: ['206', '100%', '75%']\n        },\n        conversionRateField: \"stETHDAIPrice\",\n        address: '0x06325440D014e39736583c165C2963BA99fAf14E',\n        addressForPrice: '0xae7ab96520de3a18e5e111b5eaab095312d7fe84'\n      },\n      SPELL: {\n        decimals: 18,\n        enabled: true,\n        label: 'SPELL',\n        token: 'SPELL',\n        icon: \"images/tokens/SPELL.png\",\n        color: {\n          hex: '#9695f7',\n          rgb: [150, 149, 247],\n          hsl: ['241', '86%', '78%']\n        },\n        address: '0x090185f2135308bad17527004364ebcc2d37e5f6'\n      },\n      MATIC: {\n        decimals: 18,\n        enabled: true,\n        token: 'MATIC',\n        color: {\n          hex: '#8247E5',\n          rgb: [130, 71, 229],\n          hsl: ['262, 75%, 59%']\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0'\n      },\n      USD: {\n        token: 'USD',\n        enabled: true,\n        color: {\n          hex: \"#85bb65\",\n          rgb: [133, 187, 101],\n          hsl: [\"98\", \"39%\", \"56%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        address: null,\n        startTimestamp: \"2020-02-04\"\n      },\n      USDC: {\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        color: {\n          hex: \"#2875C8\",\n          rgb: [40, 117, 200],\n          hsl: [\"211\", \"67%\", \"47%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 2]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        color: {\n          hex: \"#22a079\",\n          rgb: [34, 160, 121],\n          hsl: [\"161\", \"65%\", \"38%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        startTimestamp: \"2020-02-04\",\n        address: \"0xdac17f958d2ee523a2206206994597c13d831ec7\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        color: {\n          hex: \"0340a1\",\n          rgb: [3, 64, 161],\n          hsl: [\"217\", \"96%\", \"32%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x0000000000085d4780b73119b644ae5ecd22b376\"\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        color: {\n          hex: \"#1e1a31\",\n          rgb: [30, 26, 49],\n          hsl: [\"250\", \"31%\", \"15%\"]\n        },\n        chart: {\n          labelTextColorModifiers: [\"brighter\", 5]\n        },\n        startTimestamp: \"2020-06-22\",\n        address: \"0x57ab1ec28d129707052df4df418d58a2d46d5f51\"\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        color: {\n          hex: \"#eb9444\",\n          rgb: [235, 148, 68],\n          hsl: [\"29\", \"81%\", \"59%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"wbtcDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      WETH: {\n        decimals: 18,\n        token: 'WETH',\n        enabled: true,\n        color: {\n          hex: \"#ee1f79\",\n          rgb: [238, 31, 121],\n          hsl: [\"334\", \"86%\", \"53%\"]\n        },\n        startTimestamp: \"2021-02-16\",\n        conversionRateField: \"wethDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2\",\n        performanceTooltip:\n          \"APR is calculated proportionally to historical allocations of each lending protocol in the selected time period. This pool has 1% unlent reserve to help reduce gas costs.\"\n      },\n      COMP: {\n        decimals: 18,\n        token: 'COMP',\n        enabled: true,\n        color: {\n          hex: \"#00d395\",\n          rgb: [0, 211, 149],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        },\n        startTimestamp: \"2020-06-15\",\n        conversionRateField: \"compDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0xc00e94cb662c3520282e6f5717214004a7f26888\"\n      },\n      STKAAVE: {\n        decimals: 18,\n        enabled: true,\n        token: 'stkAAVE',\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        startTimestamp: \"2021-04-30\",\n        icon: \"images/tokens/stkAAVE.svg\",\n        conversionRateField: \"aaveDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x4da27a545c0c5b758a6ba100e3a049001de870f5\"\n      },\n      IDLE: {\n        decimals: 18,\n        token: 'IDLE',\n        enabled: true,\n        color: {\n          hex: \"#0d55bb\",\n          rgb: [13, 85, 187],\n          hsl: [\"215\", \"87%\", \"39%\"]\n        },\n        startTimestamp: \"2020-11-10\",\n        conversionRateField: \"idleDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n      },\n      RAI: {\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: \"#378879\",\n          rgb: [55, 136, 121],\n          hsl: [\"169\", \"42%\", \"37%\"]\n        },\n        disabledCharts: [\"score\"],\n        startTimestamp: \"2021-11-16\",\n        icon: \"images/tokens/RAI.png\",\n        conversionRateField: \"raiDAIPrice\",\n        chart: {\n          labelTextColorModifiers: [\"darker\", 4]\n        },\n        address: \"0x03ab458634910aad20ef5f1c8ee96f1d6ac54919\"\n      },\n      FEI: {\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        color: {\n          hex: '#229b6e',\n          rgb: [34, 155, 110],\n          hsl: ['158', '64%', '37%']\n        },\n        disabledCharts: ['score'],\n        startTimestamp: '2021-09-24',\n        conversionRateField: 'feiDAIPrice',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n      },\n      WMATIC: {\n        decimals: 18,\n        enabled: true,\n        token: 'WMATIC',\n        color: {\n          hex: '#2891f8',\n          rgb: [40, 145, 248],\n          hsl: ['210', '94%', '56%']\n        },\n        startTimestamp: '2021-05-25',\n        chart: {\n          labelTextColorModifiers: ['darker', 4]\n        },\n        address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0',\n      },\n      'idleDAI+idleUSDC+idleUSDT': {\n        decimals: 18,\n        enabled: false,\n        name: 'Curve.fi',\n        color: {\n          hex: '#ff0000',\n          rgb: [255, 0, 0],\n          hsl: ['0', '100%', '50%']\n        },\n        startTimestamp: \"2020-06-15\",\n        token: 'idleDAI+idleUSDC+idleUSDT'\n      }\n    },\n    protocols: {\n      compound: {\n        legend: true,\n        enabled: true,\n        label: \"Compound\",\n        color: {\n          rgb: [0, 209, 146],\n          hsl: [\"162\", \"100%\", \"41%\"]\n        }\n      },\n      aavev2WithStkAAVE: {\n        enabled: true,\n        label: \"Aave V2 + stkAAVE\",\n        startTimestamp: \"2021-05-08 14:30:00\",\n        // tokensProps:{\n        //   WETH:{\n        //     startTimestamp:'2021-05-19 12:20:00',\n        //   }\n        // },\n        color: {\n          hex: \"#B6509E\",\n          rgb: [182, 80, 158],\n          hsl: [\"314\", \"41%\", \"51%\"]\n        },\n        rateField: [\"rate\", \"aaveAdditionalAPR\"]\n      },\n      compoundWithCOMP: {\n        enabled: true,\n        label: \"Compound + COMP\",\n        color: {\n          rgb: [0, 153, 107],\n          hsl: [\"162\", \"100%\", \"30%\"]\n        },\n        rateField: [\"rate\", \"compoundAdditionalAPR\"]\n      },\n      fulcrum: {\n        legend: false,\n        enabled: false,\n        label: \"Fulcrum\",\n        color: {\n          rgb: [2, 138, 192],\n          hsl: [\"197\", \"98%\", \"38%\"]\n        }\n      },\n      dsr: {\n        label: \"DSR\",\n        enabled: false,\n        icon: \"CHAI.png\",\n        color: {\n          rgb: [222, 52, 67],\n          hsl: [\"355\", \"72%\", \"54%\"]\n        }\n      },\n      dydx: {\n        legend: true,\n        label: \"DyDx\",\n        enabled: true,\n        color: {\n          rgb: [87, 87, 90],\n          hsl: [\"240\", \"2%\", \"35%\"]\n        }\n      },\n      iearn: {\n        label: \"Yearn\",\n        enabled: true\n      },\n      aave: {\n        label: \"Aave V1\",\n        legend: false,\n        enabled: false,\n        color: {\n          rgb: [230, 131, 206],\n          hsl: [\"315\", \"66%\", \"71%\"]\n        }\n      },\n      aavev2: {\n        legend: true,\n        enabled: true,\n        icon: \"aave.svg\",\n        label: \"Aave V2\",\n        color: {\n          rgb: [151, 79, 141],\n          hsl: [\"308\", \"31%\", \"45%\"]\n        }\n      },\n      cream: {\n        legend: false,\n        enabled: true,\n        label: \"Cream\",\n        icon: \"cream.svg\",\n        color: {\n          rgb: [105, 226, 220],\n          hsl: [\"177\", \"68%\", \"65%\"]\n        }\n      },\n      lido: {\n        legend: false,\n        enabled: true,\n        label: \"Lido\",\n        icon: \"lido.png\",\n        color: {\n          rgb: [0, 163, 255],\n          hsl: ['202', '100%', '50%']\n        }\n      },\n      convex: {\n        legend: false,\n        enabled: true,\n        label: \"Convex\",\n        color: {\n          rgb: [58, 58, 58],\n          hsl: ['0', '0%', '23%']\n        }\n      },\n      mstable: {\n        legend: false,\n        enabled: true,\n        label: \"mStable\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: ['0', '0%', '0%']\n        }\n      },\n      fuse: {\n        legend: true,\n        enabled: true,\n        label: \"Fuse\",\n        icon: \"fuse.png\",\n        color: {\n          rgb: [0, 0, 0],\n          hsl: [\"0\", \"0%\", \"0%\"]\n        }\n      },\n      curve: {\n        label: \"\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      },\n      idle: {\n        label: \"Idle\",\n        enabled: true,\n        color: {\n          rgb: [0, 55, 255],\n          hsl: [\"227\", \"100%\", \"50%\"]\n        }\n      }\n    }\n  },\n  contract: {\n    methods: {\n      refreshIdleSpeed: {\n        enabled: true,\n        availableNetworks: [1]\n      },\n      redeem: {\n        skipRebalance: true,\n        metaTransactionsEnabled: false\n      },\n      deposit: {\n        skipMint: true,\n        minAmountForMint: 100000,\n        erc20ForwarderEnabled: true,\n        skipMintCheckboxEnabled: true,\n        metaTransactionsEnabled: false,\n        // Proxy contract for Meta Tx or ERC20 Forwarder\n        erc20ForwarderProxyContract: {\n          forwarder: {\n            enabled: true,\n            abi: erc20Forwarder,\n            name: \"erc20Forwarder\",\n            function: \"emitMessage\",\n            address: \"0xfaadbe5f0a19f0ebf92aeb73534cbc96b96e2bda\" // Main\n            // address:'0xCB3F801C91DEcaaE9b08b1eDb915F9677D8fdB4A' // Kovan\n          },\n          tokens: {\n            DAI: {\n              enabled: true,\n              permitType: \"DAI_Permit\",\n              abi: IdleDepositForwarder,\n              function: \"permitAndDeposit\", // foo\n              name: \"IdleDepositForwarderDAI\",\n              address: \"0xDe3c769cCD1878372864375e9f89956806B86daA\" // Main\n              // address:'0x1E32F1E96B9735E5D31a23e12fe8e6D9845a9072', // Kovan\n            },\n            USDC: {\n              enabled: true,\n              abi: IdleDepositForwarder,\n              permitType: \"EIP2612_Permit\",\n              name: \"IdleDepositForwarderUSDC\",\n              function: \"permitEIP2612AndDeposit\", // 'foo'\n              address: \"0x43bD6a78b37b50E3f52CAcec53F1202dbDe6a761\" // Main\n              // address:'0x8f9048CFAa27b1A1b77c32a0b87D2DcF5D016cb5', // Kovan\n            }\n          }\n        },\n        proxyContract: {\n          enabled: false,\n          abi: IdleProxyMinter,\n          name: \"IdleProxyMinter\",\n          function: \"mintIdleTokensProxy\",\n          address: \"0x7C4414aA6B0c6CB1Bc7e5BFb7433138426AC637a\"\n        }\n      },\n      migrate: {\n        skipRebalance: true,\n        minAmountForRebalance: 10000,\n        minAmountForRebalanceMetaTx: 10000\n      },\n      redeemGovTokens: {\n        enabled: true\n      },\n      redeemSkipGov: {\n        enabled: true,\n        disabledTokens: [\"idleDAISafe\", \"idleUSDCSafe\", \"idleUSDTSafe\"]\n      },\n      rebalance: {\n        enabled: true,\n        abi: IdleRebalancerV3\n      }\n    }\n  },\n  network: { // Network configurations\n    availableNetworks: {\n      1: {\n        version: 'v1',\n        name: 'Ethereum',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        network: 'mainnet',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Mainnet',\n      },\n      42: {\n        name: 'Kovan',\n        color: '#9064ff',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Kovan',\n      },\n      3: {\n        name: 'Ropsten',\n        color: '#ff4a8d',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Ropsten',\n      },\n      4: {\n        name: 'Rinkeby',\n        color: '#f6c343',\n        baseToken: 'ETH',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Rinkeby',\n      },\n      137: {\n        version: 'v1',\n        name: 'Polygon',\n        color: '#8247E5',\n        network: 'mainnet',\n        baseToken: 'MATIC',\n        explorer: 'polygon',\n        provider: 'polygon',\n        blocksPerCall: 1000000,\n        chainName: 'Matic(Polygon) Mainnet',\n      },\n      5: {\n        name: 'Görli',\n        color: '#3099f2',\n        baseToken: 'ETH',\n        version: 'mumbai',\n        network: 'testnet',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Testnet Görli',\n      },\n      1337: {\n        name: 'Hardhat',\n        baseToken: 'ETH',\n        color: '#4474f1',\n        provider: 'infura',\n        explorer: 'etherscan',\n        blocksPerCall: 1000000,\n        chainName: 'Ethereum Mainnet',\n      },\n      80001: {\n        name: 'Mumbai',\n        color: '#4474f1',\n        version: 'mumbai',\n        network: 'testnet',\n        baseToken: 'MATIC',\n        explorer: 'polygon',\n        provider: 'polygon',\n        blocksPerCall: 1000000,\n        chainName: 'Matic Testnet Mumbai',\n      }\n    },\n    isForked: false, // If TRUE the tx confirmation callback is fired on the receipt\n    requiredNetwork: 1, // { 1: Mainnet, 3: Ropsten, 42: Kovan }\n    blocksPerYear: 2371428,\n    secondsPerYear: 31536000,\n    requiredConfirmations: 1,\n    enabledNetworks: [1, 137],\n    defaultProvider: 'infura',\n    firstBlockNumber: 8119247,\n    accountBalanceMinimum: 0, // in ETH for gas fees\n    providers: {\n      alchemy:{\n        key: env.REACT_APP_ALCHEMY_KEY,\n        rpc:{\n          42:'https://eth-kovan.alchemyapi.io/v2/',\n          1:'https://eth-mainnet.alchemyapi.io/v2/',\n          137:'https://eth-mainnet.alchemyapi.io/v2/'\n        }\n      },\n      infura: {\n        key: env.REACT_APP_INFURA_KEY,\n        rpc: {\n          5: 'https://goerli.infura.io/v3/',\n          42: 'https://kovan.infura.io/v3/',\n          1: 'https://mainnet.infura.io/v3/',\n          1337: 'https://mainnet.infura.io/v3/',\n          137: 'https://mainnet.infura.io/v3/',\n          80001: 'https://goerli.infura.io/v3/'\n        }\n      },\n      polygon: {\n        enabled: true,\n        // key:env.REACT_APP_POLYGON_KEY,\n        key: env.REACT_APP_INFURA_KEY,\n        // key: env.REACT_APP_ALCHEMY_KEY,\n        baseUrl: {\n          137: 'https://polygonscan.com',\n          80001: 'https://explorer-mumbai.maticvigil.com'\n        },\n        networkPairs: {\n          1: 137,\n          137: 1,\n          5: 80001,\n          80001: 5\n        },\n        publicRpc: {\n          137: 'https://polygon-rpc.com'\n        },\n        rpc: {\n          // 1:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 5:'https://rpc-mumbai.maticvigil.com/v1/',\n          // 137:'https://rpc-mainnet.maticvigil.com/v1/',\n          // 80001:'https://rpc-mumbai.maticvigil.com/v1/'\n\n          1: 'https://polygon-mainnet.infura.io/v3/',\n          5: 'https://polygon-mainnet.infura.io/v3/',\n          137: 'https://polygon-mainnet.infura.io/v3/',\n          80001: 'https://polygon-mainnet.infura.io/v3/'\n\n          // 1: 'https://polygon-mainnet.g.alchemyapi.io/v2/',\n          // 5: 'https://polygon-mainnet.g.alchemyapi.io/v2/',\n          // 137: 'https://polygon-mainnet.g.alchemyapi.io/v2/',\n          // 80001: 'https://polygon-mainnet.g.alchemyapi.io/v2/'\n\n          // 1:'https://matic-mainnet.chainstacklabs.com/',\n          // 137:'https://matic-mainnet.chainstacklabs.com/',\n          // 5:'https://matic-mumbai.chainstacklabs.com/',\n          // 80001:'https://matic-mumbai.chainstacklabs.com/' \n        }\n      },\n      nexus: {\n        endpoints: {\n          1: \"https://api.nexusmutual.io/v1/\",\n          42: \"https://api.staging.nexusmutual.io/v1/\"\n        }\n      },\n      ens: {\n        enabled: true,\n        supportedNetworks: [1]\n      },\n      covalent: {\n        enabled: true,\n        key: env.REACT_APP_COVALENT_KEY,\n        endpoints: {\n          137: 'https://api.covalenthq.com/v1/137/',\n          80001: 'https://api.covalenthq.com/v1/80001/'\n        }\n      },\n      etherscan: {\n        enabled: true, // False for empty txs list (try new wallet)\n        keys: [\n          env.REACT_APP_ETHERSCAN_KEY,\n          env.REACT_APP_ETHERSCAN_KEY2,\n          env.REACT_APP_ETHERSCAN_KEY3,\n          env.REACT_APP_ETHERSCAN_KEY4\n        ],\n        endpoints: {\n          1: 'https://api.etherscan.io/api',\n          1337: 'https://api.etherscan.io/api',\n          5: 'https://api-goerli.etherscan.io/api',\n          42: 'https://api-kovan.etherscan.io/api'\n        },\n        baseUrl: {\n          1: 'https://etherscan.io',\n          1337: 'https://etherscan.io',\n          5: 'https://goerli.etherscan.io',\n          42: 'https://kovan.etherscan.io',\n        }\n      },\n      subgraph: {\n        tranches:{\n          enabled:true,\n          endpoint:\"https://api.thegraph.com/subgraphs/name/samster91/idle-tranches\",\n          entities:{\n            trancheInfos:[\n              'id',\n              'apr',\n              'timeStamp',\n              'blockNumber',\n              'totalSupply',\n              'virtualPrice',\n              'contractValue',\n            ]\n          }\n        }\n      },\n      snapshot: {\n        whitelist: [\n          \"0x9993ADB62085AcB05Fc493f7A1D10C11227A78fa\",\n          \"0xf12ce5807e3d3128B876aa1Cec0632D63547E22E\"\n        ],\n        endpoints: {\n          proposals: \"https://hub.snapshot.org/graphql\"\n        },\n        urls: {\n          proposals: \"https://signal.idle.finance/#/idlefinance.eth/proposal/\"\n        },\n        queries: {\n          proposals: `query Proposals {\n            proposals (\n            first: 20,\n            skip: 0,\n            where: {\n            space_in: [\"idlefinance.eth\"]\n            },\n            orderBy: \"created\",\n            orderDirection: desc\n            ) {\n            id\n            ipfs\n            strategies{\n              params\n            }\n            title\n            body\n            choices\n            start\n            end\n            snapshot\n            state\n            author\n            space {\n            id\n            name\n            }\n            }\n            }`,\n          proposalsActive: `query Proposals {\n              proposals (\n              first: 20,\n              skip: 0,\n              where: {\n              space_in: [\"idlefinance.eth\"],\n              state:\"active\"\n              },\n              orderBy: \"created\",\n              orderDirection: desc\n              ) {\n              id\n              ipfs\n              strategies{\n                params\n              }\n              title\n              body\n              choices\n              start\n              end\n              snapshot\n              state\n              author\n              space {\n              id\n              name\n              }\n              }\n              }`\n        }\n      },\n      biconomy: {\n        enabled: true,\n        enableLogin: false,\n        supportedNetworks: [1, 42],\n        disabledWallets: [\"authereum\",\"gnosis\"],\n        endpoints: {\n          limits: \"https://api.biconomy.io/api/v1/dapp/checkLimits\"\n        },\n        params: {\n          debug: false,\n          apiKey: env.REACT_APP_BICONOMY_KEY, // Mainnet\n          dappId: env.REACT_APP_BICONOMY_APPID,\n          apiId: \"36572ec9-ae5c-4c4a-9530-f3ae7c7ac829\"\n          // apiKey: env.REACT_APP_BICONOMY_KEY_KOVAN, // Kovan\n        }\n      },\n      simpleID: {\n        enabled: false,\n        supportedNetworks: [1],\n        getNetwork: (networkId, availableNetworks) => {\n          let networkName = null;\n          switch (networkId) {\n            case 1:\n              networkName = \"mainnet\";\n              break;\n            default:\n              networkName = availableNetworks[networkId]\n                ? availableNetworks[networkId].toLowerCase()\n                : \"mainnet\";\n              break;\n          }\n          return networkName;\n        },\n        params: {\n          appOrigin: window.location.origin,\n          appName: \"Idle\",\n          appId: \"eb4d1754-a76e-4c58-8422-54b5ca2395e7\",\n          renderNotifications: false,\n          network: \"mainnet\"\n        }\n      }\n    }\n  },\n  events: {\n    DAI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    },\n    FEI: {\n      fields: {\n        to: \"dst\",\n        from: \"src\",\n        value: \"wad\"\n      }\n    }\n  },\n  notifications: [\n    /*\n    {\n      enabled: true,\n      end: 1649980799000,\n      start: 1649256804107,\n      date: \"Apr 06, 2022 16:18 UTC\",\n      image: \"/images/tokens/LDO.svg\",\n      title: \"LDO rewards migration to Gauges\",\n      hash: \"/dashboard/tranches/senior/lido/stETH\",\n      text: \"The LDO rewards distribution is migrating from stETH senior tranche to stETH Gauge\"\n    },\n    */\n    {\n      enabled: false,\n      end: 1612282726374,\n      start: 1611677841027,\n      date: \"Jan 26, 2021 16:18 UTC\",\n      title: \"Cover Protocol Available\",\n      hash: \"/dashboard/tools/cover-protocol\",\n      image: \"/images/protocols/cover-logo.svg\",\n      text: \"Protect your portfolio with Cover Protocol\"\n    }\n  ],\n  tools: {\n    gauges: {\n      enabled: true,\n      label: \"Gauges\",\n      route: \"gauges\",\n      subComponent: Gauges,\n      availableNetworks: [1],\n      image: 'images/vote.svg',\n      imageInactive: 'images/vote-inactive.svg',\n      desc: \"Allocate your voting power into your preferred Gauge and earn rewards\",\n      props: {\n        WEIGHT_VOTE_DELAY:864000,\n        veToken:{\n          abi: stkIDLE,\n          decimals: 18,\n          token: \"stkIDLE\",\n          rewardToken: \"IDLE\",\n          address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n        },\n        contracts:{\n          MultiRewards:{\n            maxRewards:2,\n            abi:MultiRewards\n          }\n        },\n        availableGauges:{\n          stETH:{\n            protocol:'lido',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'stETH',\n            name: \"LiquidityGauge_aa_lido_steth\",\n            token: \"LiquidityGauge_aa_lido_steth\",\n            address:'0x675eC042325535F6e176638Dd2d4994F645502B9',\n            multiRewards:{\n              rewardTokens:['LDO'],\n              name:'multiRewards_aa_lido_stETH',\n              address:'0xA357AF9430e4504419A7A05e217D4A490Ecec6FA',\n            },\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_lido_stETH',\n              token: 'AA_lido_stETH',\n              address: '0x2688fc68c4eac90d9e5e1b94776cf14eade8d877'\n            }\n          },\n          ALUSD3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'ALUSD3CRV',\n            name: \"LiquidityGauge_aa_convex_alusd3crv\",\n            token: \"LiquidityGauge_aa_convex_alusd3crv\",\n            address:'0x21dDA17dFF89eF635964cd3910d167d562112f57',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_alusd3crv',\n              token: 'AA_convex_alusd3crv',\n              address: '0x790E38D85a364DD03F682f5EcdC88f8FF7299908'\n            }\n          },\n          FRAX3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'FRAX3CRV',\n            name: \"LiquidityGauge_aa_convex_frax3crv\",\n            token: \"LiquidityGauge_aa_convex_frax3crv\",\n            address:'0x7ca919Cf060D95B3A51178d9B1BCb1F324c8b693',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_frax3crv',\n              token: 'AA_convex_frax3crv',\n              address: '0x15794da4dcf34e674c18bbfaf4a67ff6189690f5'\n            }\n          },\n          MIM3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'MIM3CRV',\n            name: \"LiquidityGauge_aa_convex_mim3crv\",\n            token: \"LiquidityGauge_aa_convex_mim3crv\",\n            address:'0x8cC001dd6C9f8370dB99c1e098e13215377Ecb95',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_mim3crv',\n              token: 'AA_convex_mim3crv',\n              address: '0xFC96989b3Df087C96C806318436B16e44c697102'\n            }\n          },\n          \"3EUR\":{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'3EUR',\n            name: \"LiquidityGauge_aa_convex_3eur\",\n            token: \"LiquidityGauge_aa_convex_3eur\",\n            address:'0xDfB27F2fd160166dbeb57AEB022B9EB85EA4611C',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_3eur',\n              token: 'AA_convex_3eur',\n              address: '0x158e04225777BBEa34D2762b5Df9eBD695C158D2'\n            }\n          },\n          steCRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'steCRV',\n            name: \"LiquidityGauge_aa_convex_steCRV\",\n            token: \"LiquidityGauge_aa_convex_steCRV\",\n            address:'0x30a047d720f735Ad27ad384Ec77C36A4084dF63E',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_steCRV',\n              token: 'AA_convex_steCRV',\n              address: '0x060a53BCfdc0452F35eBd2196c6914e0152379A6'\n            }\n          },\n          MUSD3CRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'MUSD3CRV',\n            name: \"LiquidityGauge_aa_convex_musd3crv\",\n            token: \"LiquidityGauge_aa_convex_musd3crv\",\n            address:'0xAbd5e3888ffB552946Fc61cF4C816A73feAee42E',\n            multiRewards:{\n              rewardTokens:['MUSD'],\n              name:'multiRewards_aa_convex_musd3crv',\n              address:'0x7f366a2b4c4380fd9746cf10b4ded562c890b0b1',\n            },\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_musd3crv',\n              token: 'AA_convex_musd3crv',\n              address: '0x4585F56B06D098D4EDBFc5e438b8897105991c6A'\n            }\n          },\n          PBTCCRV:{\n            protocol:'convex',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            underlyingToken:'PBTCCRV',\n            name: \"LiquidityGauge_aa_convex_pbtccrv\",\n            token: \"LiquidityGauge_aa_convex_pbtccrv\",\n            address:'0x2bea05307b42707be6cce7a16d700a06ff93a29d',\n            multiRewards:{\n              rewardTokens:['PNT'],\n              name:'multiRewards_aa_convex_pbtccrv',\n              address:'0x7d4091D8b28d09b4135905213DE105C45d7F459d',\n            },\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_convex_pbtccrv',\n              token: 'AA_convex_pbtccrv',\n              address: '0x4657B96D587c4d46666C244B40216BEeEA437D0d'\n            }\n          },\n          /*\n          mUSD:{\n            protocol:'mstable',\n            abi:LiquidityGauge,\n            rewardTokens:['IDLE'],\n            name: \"LiquidityGauge_aa_mstable_musd\",\n            token: \"LiquidityGauge_aa_mstable_musd\",\n            address:'0x41653c7AF834F895Db778B1A31EF4F68Be48c37c',\n            trancheToken:{\n              abi: ERC20,\n              name: 'AA_mstable_musd',\n              token: 'AA_mstable_musd',\n              address: '0xfC558914b53BE1DfAd084fA5Da7f281F798227E7'\n            }\n          },\n          */\n        }\n      }\n    },\n    gaugesCalculator:{\n      icon: \"Tune\",\n      enabled: true,\n      route: \"gauges-calculator\",\n      availableNetworks: [1],\n      label: \"Gauges Boost Calculator\",\n      subComponent: GaugesBoostCalculator,\n      desc: \"Calculate your boost for each Gauge based on your voting power\",\n      props: {\n\n      }\n    },\n    stake: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      route: \"staking\",\n      subComponent: Staking,\n      availableNetworks: [1],\n      desc: \"Stake your IDLE tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          IDLE: {\n            component: IdleStaking,\n            contract: {\n              abi: stkIDLE,\n              decimals: 18,\n              name: \"stkIDLE\",\n              fromBlock: 12561464,\n              rewardToken: \"IDLE\",\n              address: \"0xaac13a116ea7016689993193fce4badc8038136f\" // Mainnet\n            },\n            feeDistributor: {\n              fromBlock: 12649361,\n              abi: StakingFeeDistributor,\n              name: \"StakingFeeDistributor\",\n              address: \"0xbabb82456c013fd7e3f25857e0729de8207f80e2\" // Mainnet\n            },\n            abi: IDLE,\n            name: \"IDLE\",\n            token: \"IDLE\",\n            decimals: 18,\n            enabled: true,\n            label: \"IDLE\",\n            icon: \"images/tokens/IDLE.svg\",\n            address: \"0x875773784Af8135eA0ef43b5a374AaD105c5D39e\", // Mainnet\n            poolLink:\n              \"https://etherscan.com/address/0x875773784Af8135eA0ef43b5a374AaD105c5D39e\"\n          },\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 120,\n              rewardToken: \"IDLE\",\n              address: \"0xcc0b9f7ed0e6bc7c2e69dbd247e8420f29aeb48d\" // Mainnet\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/ETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0xa7f11e026a0af768d285360a855f2bded3047530\", // Mainnet\n            poolLink:\n              \"https://analytics.sushi.com/pairs/0xa7f11e026a0af768d285360a855f2bded3047530\"\n          }\n        }\n      }\n    },\n    stakePolygon: {\n      enabled: true,\n      icon: \"Layers\",\n      label: \"Staking\",\n      subComponent: Staking,\n      availableNetworks: [137],\n      route: \"staking-polygon\",\n      desc: \"Stake your Sushi Swap LP tokens and earn $IDLE rewards\",\n      props: {\n        availableTokens: {\n          SLP: {\n            component: LpStaking,\n            contract: {\n              decimals: 24,\n              name: \"LpStaking\",\n              maxMultiplier: 3,\n              abi: LpStakingAbi,\n              maxBonusDays: 60,\n              rewardToken: \"IDLE\",\n              address: \"0x59CDF902b6A964CD5dB04d28f12b774bFB876Be9\" // Polygon\n            },\n            name: \"SLP\",\n            token: \"SLP\",\n            decimals: 18,\n            enabled: true,\n            abi: SushiLiquidityPool,\n            label: \"SushiSwap IDLE/WETH LP Token\",\n            icon: \"images/protocols/sushiswap.png\",\n            address: \"0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\", // Polygon\n            poolLink: \"https://analytics-polygon.sushi.com/pairs/0x5518a3af961eee8771657050c5cb23d2b3e2f6ee\"\n          }\n        }\n      }\n    },\n    nexusMutual: {\n      enabled: true,\n      icon: \"Security\",\n      route: \"coverage\",\n      label: \"Coverage\",\n      availableNetworks: [1],\n      desc: \"Buy Nexus Mutual coverage without KYC for your deposits\",\n      subComponent: NexusMutual,\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleDAIYield\",\n            token: \"idleDAIYield\", // Mainnet\n            // token:'idleDAIYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000011\",\n            realAddress: \"0x3fe7940616e5bc47b0775a0dccf6237893353bb4\", // Mainnet\n            // realAddress:'0xbd0b0205408509544815d377214d8f2cbe3e5381', // Kovan\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV4,\n            name: \"idleUSDTYield\",\n            token: \"idleUSDTYield\", // Mainnet\n            // token:'idleUSDTYieldMock', // Kovan\n            address: \"0x0000000000000000000000000000000000000012\",\n            realAddress: \"0xF34842d05A1c888Ca02769A633DF37177415C2f8\",\n            underlying: {\n              DAI: {\n                abi: ERC20,\n                name: \"DAI\", // Mainnet\n                token: \"DAI\",\n                decimals: 18,\n                // name:'DAIMock', // Kovan\n                address: \"0x6b175474e89094c44da98b954eedeac495271d0f\" // Mainnet\n                // address:'0x5C422252C6a47CdacF667521566Bf7bD5b0d769B' // Kovan\n              }\n            }\n          }\n        }\n      },\n      directProps: {\n        // startBlock:25858186, // Kovan\n        startBlock: 12783137, // Mainnet\n        // Yield token covers have a 14 days grace period\n        yieldTokenCoverGracePeriod: 14 * 24 * 60 * 60 * 1000,\n        contractInfo: {\n          abi: NexusMutualDistributor,\n          name: \"NexusMutualDistributor\",\n          // address:'0xe2d569dc064b3b91f514e775c6026e04d2c887a9' // Kovan\n          address: \"0xf2b36f823eae36e53a5408d8bd452748b24fbf76\" // Mainnet\n        },\n        incidentsInfo: {\n          abi: NexusMutualIncidents,\n          name: \"NexusMutualIncidents\",\n          // address:'0x322f9a880189E3FFFf59b74644e13e5763C5AdB9' // Kovan\n          address: \"0x8ceba69a8e96a4ce71aa65859dbdb180b489a719\" // Mainnet\n        }\n      }\n    },\n    b2bVesting: {\n      enabled: true,\n      visible: true,\n      icon: \"CloudUpload\",\n      label: \"B2B Vesting\",\n      availableNetworks: [1],\n      route: \"b2b-vesting-contract\",\n      subComponent: DeployB2BVesting,\n      desc: 'Deploy/Deposit/Claim for B2B Vesting Contracts<br /><small style=\"color:#ff9900\">(only for partners that joined the B2B Affiliate program)</small>',\n      props: {\n        contracts: {\n          vesterImplementation: {\n            abi: B2BVester,\n            address: \"0x3024656ae91d7bf724f613c314bc56030ba2344c\"\n          }\n        }\n      }\n    },\n    polygonBridge: {\n      enabled: true,\n      route: 'polygon-bridge',\n      availableNetworks: [1, 137],\n      subComponent: PolygonBridge,\n      label: 'Ethereum ⇔ Polygon Bridge',\n      image: 'images/protocols/polygon.svg',\n      desc: 'Transfer your tokens from Ethereum to Polygon and vice versa with Plasma and PoS Bridge.',\n      props: {\n        contracts: {\n          ERC20Predicate: {\n            abi: ERC20Predicate,\n            name: 'ERC20Predicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x40ec5B33f54e0E8A33A975908C5BA1c14e5BbbDf' // Mainnet\n          },\n          EtherPredicate: {\n            abi: EtherPredicate,\n            name: 'EtherPredicate',\n            // address:'0xdD6596F2029e6233DEFfaCa316e6A95217d4Dc34', // Goerli\n            address: '0x8484Ef722627bf18ca5Ae6BcF031c23E6e922B30' // Mainnet\n          },\n          DepositManager: {\n            abi: DepositManager,\n            name: 'DepositManager',\n            address: '0x401f6c983ea34274ec46f84d70b31c151321188b'\n          },\n          RootChainManager: {\n            name: 'RootChainManager',\n            address: '0xA0c68C638235ee32657e8f720a23ceC1bFc77C77' // Mainnet\n          },\n          StateSender: {\n            name: 'StateSender',\n            address: '0x28e4F3a7f651294B9564800b2D01f35189A5bFbE'\n          }\n        },\n        genericParams:{\n          erc20LogEventSignature: \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\"\n        },\n        availableTokens: {\n          /*\n          DERC20:{\n            decimals:18,\n            enabled:true,\n            name:'DERC20',\n            token:'DERC20',\n            rootToken:{\n              name:'DERC20',\n              abi:DummyERC20,\n              address:'0x655F2166b0709cd575202630952D71E2bB0d61Af' // Goerli\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'DummyERC20',\n              address:'0xfe4F5145f6e09952a5ba9e956ED0C25e3Fa4c7F1' // Mumbai\n            }\n          },\n          */\n          MATIC: {\n            name: 'MATIC',\n            token: 'MATIC',\n            decimals: 18,\n            enabled: true,\n            sendValue: true,\n            bridgeType: 'plasma',\n            rootToken: {\n              abi: ERC20,\n              name: 'MATIC',\n              address: '0x7D1AfA7B718fb893dB30A3aBc0Cfc608AaCfeBB0', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childMATIC',\n              address: '0x0000000000000000000000000000000000001010' // Matic\n            }\n          },\n          WETH: {\n            name: 'WETH',\n            token: 'ETH',\n            decimals: 18,\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken:{\n              name:'ETH',\n              address:'0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE'\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'maticWETH',\n              address: '0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          /*\n          WETH:{\n            name:'WETH',\n            token:'WETH',\n            decimals:18,\n            enabled:true,\n            sendValue:false,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'WETH',\n              address:'0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childWETH',\n              address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619' // Matic\n            }\n          },\n          */\n          DAI: {\n            name: 'DAI',\n            token: 'DAI',\n            decimals: 18,\n            enabled: true,\n            sendValue: false,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: DAI,\n              name: 'DAI',\n              // address:'0x6311344B50D2077BF9804d376EA4C2cEDcB75C1f', // Goerli\n              address: '0x6b175474e89094c44da98b954eedeac495271d0f', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childDAI',\n              // address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F', // Mumbai\n              address: '0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063' // Matic\n            }\n          },\n          USDC: {\n            decimals: 6,\n            name: 'USDC',\n            token: 'USDC',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: USDC,\n              name: 'USDC',\n              // address:'0x98339D8C260052B7ad81c28c16C0b98420f2B46a' // Goerli\n              address: '0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              // address:'0x6D4dd09982853F08d9966aC3cA4Eb5885F16f2b2' // Mubai\n              address: '0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174' // Matic\n            }\n          },\n          IDLE: {\n            decimals: 18,\n            name: 'IDLE',\n            token: 'IDLE',\n            enabled: true,\n            bridgeType: 'pos',\n            rootToken: {\n              abi: IDLE,\n              name: 'IDLE',\n              address: '0x875773784Af8135eA0ef43b5a374AaD105c5D39e', // Mainnet\n            },\n            childToken: {\n              abi: ChildERC20,\n              name: 'childUSDC',\n              address: '0xc25351811983818c9fe6d8c580531819c8ade90f' // Matic\n            }\n          },\n          /*\n          AAVE:{\n            decimals:18,\n            name:'AAVE',\n            token:'AAVE',\n            enabled:true,\n            bridgeType:'pos',\n            rootToken:{\n              abi:ERC20,\n              name:'AAVE',\n              address:'0x7fc66500c84a76ad7e9c93437bfc5ac33e2ddae9', // Mainnet\n            },\n            childToken:{\n              abi:ChildERC20,\n              name:'childAAVE',\n              address:'0xD6DF932A45C0f255f85145f286eA0b292B21C90B' // Matic\n            }\n          }\n          */\n        }\n      }\n    },\n    ethWrapper: {\n      enabled: true,\n      label: 'ETH Wrapper',\n      route: 'eth-wrapper',\n      availableNetworks: [1, 42],\n      subComponent: TokenWrapper,\n      image: 'images/tokens/WETH.svg',\n      desc: 'Wrap your ETH and get WETH. Unwrap your WETH and get back ETH.',\n      props: {\n        startContract: {\n          name: 'ETH',\n          token: 'ETH',\n          decimals: 18,\n          wrapMethod: 'deposit',\n        },\n        destContract: {\n          abi: WETH,\n          name: 'WETH',\n          decimals: 18,\n          token: 'WETH',\n          unwrapMethod: 'withdraw',\n          address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2'\n        },\n      }\n    },\n    coverProtocol: {\n      enabled: false,\n      availableNetworks: [1],\n      label: 'Cover Protocol',\n      route: 'cover-protocol',\n      subComponent: CoverProtocol,\n      image: 'images/protocols/cover-logo.svg',\n      desc: 'Get your Idle Portfolio covered against Smart Contract risk',\n      fileClaimUrl: 'https://app.coverprotocol.com/app/claims/new?protocol=IDLE',\n      props: {\n        contract: {\n          decimals: 18,\n          abi: CoverMint,\n          name: 'CoverMint',\n          address: '0x46f2f34742c1d9b9b220aabf0ff26bf59ec9f8a0'\n        },\n        coverages: [\n          {\n            collateral: \"DAI\",\n            expirationTimestamp: 1714470400,\n            tokens: {\n              Claim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                address: \"0xa7dac6774e5e40f56a0bf06af6cf9b1f3d037bcc\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_CLAIM\",\n                  address: \"0xeb2b9959c7943eb3c0bdb69ede25247bab4d1c6c\"\n                }\n              },\n              NoClaim: {\n                abi: CovToken,\n                name: \"COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                address: \"0x53df0bfa014b7522299c129c5a7b318f02adb469\",\n                balancerPool: {\n                  decimals: 18,\n                  abi: BalancerPool,\n                  name: \"BAL_COVER_IDLE_2021_02_28_DAI_0_NOCLAIM\",\n                  address: \"0xce0e9e7a1163badb7ee79cfe96b5148e178cab73\"\n                }\n              }\n            }\n          }\n        ]\n      }\n    },\n    batchDeposit: {\n      enabled: true,\n      icon: \"Storage\",\n      claimEnabled: true,\n      depositEnabled: false,\n      availableNetworks: [1],\n      route: \"batch-deposit\",\n      label: \"Batch Deposit\",\n      subComponent: BatchDeposit,\n      desc: \"Deposit your tokens in the batch and wait until its execution to claim your Idle Tokens V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintDAI\",\n              address: \"0x633fb4d38B24dC890b11Db2AE2B248D13F996A79\", // Main\n              // address:'0x1B7bA0361A15CCF62521cF7d2Cbb2Ba90b1521a7', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  usePermit: true,\n                  label: \"Deposit\",\n                  permitName: \"permitAndDeposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 6,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            minPoolSize: 20000,\n            migrationContract: {\n              abi: IdleBatchedMint,\n              name: \"IdleBatchedMintUSDC\",\n              address: \"0x562C4fd96F0652F5Fcfa96b0a33088B5a6eAeE9B\", // Main\n              // address:'0x3F35eB839f91b614195a47A593dB46b14cd7EaF8', // Kovan\n              functions: [\n                {\n                  name: \"deposit\",\n                  label: \"Deposit\",\n                  usePermit: true,\n                  permitName: \"permitEIP2612AndDepositUnlimited\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    batchMigration: {\n      enabled: true,\n      claimEnabled: true,\n      icon: \"FileDownload\",\n      depositEnabled: false,\n      availableNetworks: [1],\n      route: \"batch-migration\",\n      label: \"Batch Migration\",\n      subComponent: BatchMigration,\n      desc: \"Deposit your Idle Tokens V3 into a batch and wait until its conversion to the Idle Token V4\",\n      props: {\n        availableTokens: {\n          idleDAIYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"DAI\",\n            name: \"idleDAIYieldV3\",\n            token: \"idleDAIYieldV3\",\n            address: \"0x78751b12da02728f467a44eac40f5cbc16bd7934\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAI\",\n              address: \"0xe0BfD08dA4DAf8f8BA11d1c3802009E75f963497\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCYieldV3\",\n            token: \"idleUSDCYieldV3\",\n            address: \"0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDC\",\n              address: \"0x86c8b56d124c2a8e7ea8a9e6a7f8ed99dde5cca8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTYieldV3\",\n            token: \"idleUSDTYieldV3\",\n            address: \"0x63D27B3DA94A9E871222CB0A32232674B02D2f2D\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDT\",\n              address: \"0xee5c50c7c49dec47dde2f9b0233b9e14a8f00cf2\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleSUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"SUSD\",\n            name: \"idleSUSDYieldV3\",\n            token: \"idleSUSDYieldV3\",\n            address: \"0xe79e177d2a5c7085027d7c64c8f271c81430fc9b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterSUSD\",\n              address: \"0xE2eE519399a49f1A2004a25DA61e82867A69b9b1\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleTUSDYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"TUSD\",\n            name: \"idleTUSDYieldV3\",\n            token: \"idleTUSDYieldV3\",\n            address: \"0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterTUSD\",\n              address: \"0x174a273f0ea28e55b6dd13259aa43d262b863a86\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleWBTCYield: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"best\",\n            baseToken: \"WBTC\",\n            name: \"idleWBTCYieldV3\",\n            token: \"idleWBTCYieldV3\",\n            address: \"0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterWBTC\",\n              address: \"0xbfDC7d97559173B52EF2A2f1bC9BeCf97B0D401D\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleDAISafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"DAI\",\n            name: \"idleDAISafeV3\",\n            token: \"idleDAISafeV3\",\n            address: \"0x1846bdfDB6A0f5c473dEc610144513bd071999fB\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterDAISafe\",\n              address: \"0x08db226d63cE724A6091Ba82D28dFc76ceCa23d8\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDCSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDC\",\n            name: \"idleUSDCSafeV3\",\n            token: \"idleUSDCSafeV3\",\n            address: \"0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDCSafe\",\n              address: \"0xA6C89A31D59f9C68D9Cba28d690C5E52058fb472\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          },\n          idleUSDTSafe: {\n            decimals: 18,\n            abi: IdleTokenV3,\n            strategy: \"risk\",\n            baseToken: \"USDT\",\n            name: \"idleUSDTSafeV3\",\n            token: \"idleUSDTSafeV3\",\n            address: \"0x42740698959761baf1b06baa51efbd88cb1d862b\",\n            migrationContract: {\n              abi: IdleBatchConverter,\n              name: \"IdleBatchConverterUSDTSafe\",\n              address: \"0xd47B96Fb33b79a4Dd81a2bfa676eBB669166f619\",\n              functions: [\n                {\n                  label: \"Deposit\",\n                  name: \"deposit\"\n                }\n              ]\n            }\n          }\n        }\n      }\n    },\n    tokenMigration: {\n      enabled: true,\n      icon: \"SwapHoriz\",\n      route: \"convert\",\n      availableNetworks: [1],\n      label: \"Token Migration\",\n      desc: \"Easily convert your Compound, Fulcrum, Aave and iEarn tokens into Idle\",\n      subComponent: TokenMigration,\n      props: {\n        migrationContract: {\n          name: \"IdleConverterV4\",\n          abi: IdleConverterPersonalSignV4,\n          address: \"0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743\",\n          oldAddresses: [],\n          functions: [\n            {\n              label: \"Migrate\",\n              name: \"migrateFromToIdle\"\n            }\n          ]\n        },\n        availableStrategies: [\"best\", \"risk\"],\n        availableTokens: {\n          idleDAIv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            baseToken: \"DAI\",\n            abi: IdleTokenV2,\n            token: \"idleDAIOld\",\n            icon: \"images/tokens/idleDAI.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0x10eC0D497824e342bCB0EDcE00959142aAa766dD\"\n          },\n          cDAI: {\n            decimals: 8,\n            enabled: true,\n            token: \"cDAI\",\n            baseToken: \"DAI\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643\"\n          },\n          iDAI: {\n            decimals: 18,\n            enabled: false,\n            token: \"iDAI\",\n            baseToken: \"DAI\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x493c57c4763932315a328269e1adad09653b9081\"\n          },\n          aDAI: {\n            decimals: 18,\n            enabled: true,\n            token: \"aDAI\",\n            protocol: \"aave\",\n            baseToken: \"DAI\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d\"\n          },\n          yDAIv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv3\",\n            abi: yDAIv3.abi,\n            baseToken: \"DAI\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xC2cB1040220768554cf699b0d863A3cd4324ce32\"\n          },\n          yDAIv2: {\n            decimals: 18,\n            enabled: true,\n            token: \"yDAIv2\",\n            baseToken: \"DAI\",\n            abi: yDAIv3.abi,\n            protocol: \"iearn\",\n            icon: \"images/tokens/yDAI.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x16de59092dAE5CcF4A1E6439D611fd0653f0Bd01\"\n          },\n          idleUSDCv2: {\n            decimals: 18,\n            enabled: true,\n            protocol: \"idle\",\n            abi: IdleTokenV2,\n            baseToken: \"USDC\",\n            token: \"idleUSDCOld\",\n            icon: \"images/tokens/idleUSDC.svg\",\n            migrateFunction: \"migrateFromToIdle\",\n            address: \"0xeB66ACc3d011056B00ea521F8203580C2E5d3991\"\n          },\n          cUSDC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0x39aa39c021dfbae8fac545936693ac917d5e7563\"\n          },\n          iUSDC: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDC\",\n            baseToken: \"USDC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xf013406a0b1d544238083df0b93ad0d2cbe0f65f\"\n          },\n          aUSDC: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDC\",\n            protocol: \"aave\",\n            baseToken: \"USDC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x9bA00D6856a4eDF4665BcA2C2309936572473B7E\"\n          },\n          yUSDCv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv3\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x26EA744E5B887E5205727f55dFBE8685e3b21951\"\n          },\n          yUSDCv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDCv2\",\n            protocol: \"iearn\",\n            abi: yUSDCv3.abi,\n            baseToken: \"USDC\",\n            icon: \"images/tokens/yUSDC.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xd6aD7a6750A7593E092a9B218d66C0A814a3436e\"\n          },\n          cUSDT: {\n            decimals: 8,\n            enabled: true,\n            token: \"cUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9\"\n          },\n          iUSDT: {\n            decimals: 6,\n            enabled: false,\n            token: \"iUSDT\",\n            baseToken: \"USDT\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0x8326645f3aa6de6420102fdb7da9e3a91855045b\"\n          },\n          aUSDT: {\n            decimals: 6,\n            enabled: true,\n            token: \"aUSDT\",\n            protocol: \"aave\",\n            baseToken: \"USDT\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x71fc860F7D3A592A4a98740e39dB31d25db65ae8\"\n          },\n          yUSDTv3: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv3\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xE6354ed5bC4b393a5Aad09f21c46E101e692d447\"\n          },\n          yUSDTv2: {\n            decimals: 6,\n            enabled: true,\n            token: \"yUSDTv2\",\n            abi: yUSDTv3.abi,\n            protocol: \"iearn\",\n            baseToken: \"USDT\",\n            icon: \"images/tokens/yUSDT.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x83f798e925BcD4017Eb265844FDDAbb448f1707D\"\n          },\n          idleSUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"SUSD\",\n            token: \"idleSUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleSUSDYield.svg\",\n            address: \"0xb39ca0261a1b2986a6a9Fe38d344B56374963dE5\"\n          },\n          aSUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aSUSD\",\n            protocol: \"aave\",\n            baseToken: \"SUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x625aE63000f46200499120B906716420bd059240\"\n          },\n          ySUSDv3: {\n            decimals: 18,\n            enabled: true,\n            token: \"ySUSDv3\",\n            abi: ySUSDv3,\n            baseToken: \"SUSD\",\n            protocol: \"iearn\",\n            availableStrategies: [\"best\"],\n            icon: \"images/tokens/ySUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0xf61718057901f84c4eec4339ef8f0d86d2b45600\"\n          },\n          idleTUSDv2: {\n            decimals: 18,\n            enabled: true,\n            abi: IdleTokenV2,\n            protocol: \"idle\",\n            baseToken: \"TUSD\",\n            token: \"idleTUSDYieldOld\",\n            availableStrategies: [\"best\"],\n            migrateFunction: \"migrateFromToIdle\",\n            icon: \"images/tokens/idleTUSDYield.svg\",\n            address: \"0x7DB7A4a50b26602E56536189Aa94678C80F8E5b6\"\n          },\n          aTUSD: {\n            decimals: 6,\n            enabled: true,\n            token: \"aTUSD\",\n            protocol: \"aave\",\n            baseToken: \"TUSD\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0x4DA9b813057D04BAef4e5800E36083717b4a0341\"\n          },\n          yTUSDv3: {\n            decimals: 18,\n            enabled: true,\n            abi: yTUSDv3,\n            token: \"yTUSDv3\",\n            baseToken: \"TUSD\",\n            protocol: \"iearn\",\n            icon: \"images/tokens/yTUSDv3.png\",\n            migrateFunction: \"migrateFromIearnToIdle\",\n            address: \"0x73a052500105205d34daf004eab301916da8190f\"\n          },\n          cWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"cWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"compound\",\n            migrateFunction: \"migrateFromCompoundToIdle\",\n            address: \"0xc11b1268c1a384e55c48c2391d8d480264a3a7f4\"\n          },\n          iWBTC: {\n            decimals: 8,\n            enabled: false,\n            token: \"iWBTC\",\n            baseToken: \"WBTC\",\n            protocol: \"fulcrum\",\n            migrateFunction: \"migrateFromFulcrumToIdle\",\n            address: \"0xba9262578efef8b3aff7f60cd629d6cc8859c8b5\"\n          },\n          aWBTC: {\n            decimals: 8,\n            enabled: true,\n            token: \"aWBTC\",\n            protocol: \"aave\",\n            baseToken: \"WBTC\",\n            migrateFunction: \"migrateFromAaveToIdle\",\n            address: \"0xfc4b8ed459e00e5400be803a9bb3954234fd50e3\"\n          }\n        }\n      }\n    },\n    addFunds: {\n      enabled: true,\n      route: 'add-funds',\n      label: 'Add Funds',\n      availableNetworks: [1],\n      icon: 'AddCircleOutline',\n      desc: 'Buy tokens with your Bank account, Credit card or Ethereum Wallet',\n      subComponent: BuyModal,\n      directProps: {\n        showInline: true,\n        showAllTokens: true\n      }\n    },\n    tokenSwap: {\n      enabled: true,\n      icon: \"Sync\",\n      route: \"token-swap\",\n      label: \"Token Swap\",\n      availableNetworks: [1],\n      desc: \"Easily swap your tokens using Kyber Swap widget\",\n      subComponent: TokenSwap,\n      props: {\n        availableTokens: {\n          ETH: { token: \"ETH\" },\n          DAI: { token: \"DAI\" },\n          SUSD: { token: \"SUSD\" },\n          TUSD: { token: \"TUSD\" },\n          USDC: { token: \"USDC\" },\n          USDS: { token: \"USDS\" },\n          USDT: { token: \"USDT\" },\n          WBTC: { token: \"WBTC\" },\n          WETH: { token: \"WETH\" },\n          BUSD: { token: \"BUSD\" },\n          EURS: { token: \"EURS\" },\n          \"2KEY\": { token: \"2KEY\" },\n          ABT: { token: \"ABT\" },\n          ABYSS: { token: \"ABYSS\" },\n          AMPL: { token: \"AMPL\" },\n          ANT: { token: \"ANT\" },\n          BAM: { token: \"BAM\" },\n          BAND: { token: \"BAND\" },\n          BAT: { token: \"BAT\" },\n          BLZ: { token: \"BLZ\" },\n          BNT: { token: \"BNT\" },\n          BQX: { token: \"BQX\" },\n          BTU: { token: \"BTU\" },\n          CDT: { token: \"CDT\" },\n          CVC: { token: \"CVC\" },\n          DAT: { token: \"DAT\" },\n          DGX: { token: \"DGX\" },\n          EKG: { token: \"EKG\" },\n          ELF: { token: \"ELF\" },\n          ENJ: { token: \"ENJ\" },\n          EQUAD: { token: \"EQUAD\" },\n          FXC: { token: \"FXC\" },\n          GDC: { token: \"GDC\" },\n          GEN: { token: \"GEN\" },\n          GHT: { token: \"GHT\" },\n          GNO: { token: \"GNO\" },\n          IOST: { token: \"IOST\" },\n          KEY: { token: \"KEY\" },\n          KNC: { token: \"KNC\" },\n          LEND: { token: \"LEND\" },\n          LINK: { token: \"LINK\" },\n          LOOM: { token: \"LOOM\" },\n          LRC: { token: \"LRC\" },\n          MANA: { token: \"MANA\" },\n          MCO: { token: \"MCO\" },\n          MET: { token: \"MET\" },\n          MFG: { token: \"MFG\" },\n          MKR: { token: \"MKR\" },\n          MLN: { token: \"MLN\" },\n          MTL: { token: \"MTL\" },\n          MYB: { token: \"MYB\" },\n          NEXXO: { token: \"NEXXO\" },\n          NPXS: { token: \"NPXS\" },\n          OGN: { token: \"OGN\" },\n          OMG: { token: \"OMG\" },\n          OST: { token: \"OST\" },\n          PAX: { token: \"PAX\" },\n          PBTC: { token: \"PBTC\" },\n          PLR: { token: \"PLR\" },\n          PNK: { token: \"PNK\" },\n          POLY: { token: \"POLY\" },\n          POWR: { token: \"POWR\" },\n          PT: { token: \"PT\" },\n          QKC: { token: \"QKC\" },\n          QNT: { token: \"QNT\" },\n          RAE: { token: \"RAE\" },\n          REN: { token: \"REN\" },\n          REP: { token: \"REP\" },\n          REQ: { token: \"REQ\" },\n          RLC: { token: \"RLC\" },\n          RSR: { token: \"RSR\" },\n          RSV: { token: \"RSV\" },\n          SAN: { token: \"SAN\" },\n          SNT: { token: \"SNT\" },\n          SNX: { token: \"SNX\" },\n          SPIKE: { token: \"SPIKE\" },\n          SPN: { token: \"SPN\" },\n          TKN: { token: \"TKN\" },\n          TKX: { token: \"TKX\" },\n          TRYB: { token: \"TRYB\" },\n          UBT: { token: \"UBT\" },\n          UPP: { token: \"UPP\" },\n          ZRX: { token: \"ZRX\" }\n        }\n      },\n      directProps: {}\n    }\n  },\n  insurance: {\n    nexusMutual: {\n      label: \"Nexus Mutual\",\n      image: \"images/protocols/nexus-mutual.png\",\n      imageDark: \"images/protocols/nexus-mutual-white.png\"\n    },\n    coverProtocol: {\n      label: \"Cover Protocol\",\n      image: \"images/protocols/cover-logo.svg\",\n      imageDark: \"images/protocols/cover-logo.svg\"\n    }\n  },\n  payments: {\n    // Payment methods & providers\n    methods: {\n      bank: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/bank.png\",\n          caption: \"Bank Account\"\n        }\n      },\n      card: {\n        defaultProvider: null,\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/debit-card.png\",\n          caption: \"Credit Card\"\n        }\n      },\n      wallet: {\n        defaultProvider: \"zeroExInstant\",\n        showDefaultOnly: false,\n        props: {\n          imageSrc: \"images/ethereum-wallet.svg\",\n          caption: \"Ethereum Wallet\",\n          imageProps: {\n            padding: [\"0\", \"5px\"]\n          }\n        }\n      }\n    },\n    providers: {\n      wyre: {\n        enabled: true,\n        imageSrc: \"images/payments/wyre.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.75% fee ~\",\n        supportedMethods: [\"card\"],\n        supportedCountries: [\"USA\", \"GBR\", \"AUS\", \"BRA\", \"CHN\", \"MEX\", \"EUR\"],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        remoteResources: {},\n        env: \"prod\",\n        envParams: {\n          test: {\n            accountId: \"AC_Q2Y4AARC3TP\"\n          },\n          prod: {\n            accountId: \"AC_PQQBX33XVEQ\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                info.subcaption = `~ 0.75% fee ~\\nKYC REQUIRED`;\n                break;\n              case \"card\":\n                info.subcaption = `~ 3.2% fee ~\\n$250.00/day`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.wyre.env;\n          const envParams = globalConfigs.payments.providers.wyre.envParams[env];\n          const referrerAccountId = envParams.accountId;\n          const url = \"https://pay.sendwyre.com/purchase\";\n\n          const params = {\n            dest: `ethereum:${props.account}`,\n            destCurrency: buyParams.selectedToken ? buyParams.selectedToken : props.tokenConfig.wyre && props.tokenConfig.wyre.destCurrency ? props.tokenConfig.wyre.destCurrency : props.selectedToken,\n            referrerAccountId,\n            redirectUrl: globalConfigs.baseURL\n            // failureRedirectUrl:globalConfigs.baseURL\n          };\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const wyreWidget = document.getElementById(\"wyre-widget\");\n          if (!wyreWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"wyre-widget\" class=\"wyre-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"wyre-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                <a class=\"wyre-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('wyre-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                <div id=\"wyre-widget-container\" style=\"position:relative;z-index:2;width:400px;height:650px\">\n                  <iframe\n                    style=\"position:relative;z-index:2;\"\n                    frameborder=\"0\"\n                    height=\"100%\"\n                    src=\"${initParams}\"\n                    width=\"100%\"\n                  >\n                    <p>Your browser does not support iframes.</p>\n                  </iframe>\n                  <div id=\"wyre-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                    <div style=\"display:flex;flex-direction:row;align-items:center\">\n                      <img src=\"${globalConfigs.payments.providers.wyre.imageSrc}\" style=\"height:50px;\" />\n                      <h3 style=\"font-weight:600;font-style:italic;color:#000;padding-left:10px\">is loading...</h3>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add wyre Widget style (mobile)\n            if (!document.getElementById(\"wyreWidget_style\")) {\n              const wyreStyle = document.createElement(\"style\");\n              wyreStyle.id = \"wyreWidget_style\";\n              wyreStyle.innerHTML = `\n              @media (max-width: 40em){\n                #wyre-widget {\n                  align-items: flex-start !important;\n                }\n                #wyre-widget-overlay{\n                  background:#fff !important;\n                }\n                #wyre-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(wyreStyle);\n            }\n          }\n        }\n      },\n      ramp: {\n        enabled: true,\n        imageSrc: \"images/payments/ramp.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 2.5% fee ~\\nEUR / GBP`,\n        supportedMethods: [\"bank\", \"card\"],\n        badge: {\n          text: \"NO ID REQUIRED\",\n          color: \"#fff\",\n          bgColor: \"#0cade4\"\n        },\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CAN\",\n          \"EUR\",\n          \"HKG\",\n          \"IND\",\n          \"MEX\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        getInfo: props => {\n          const info = {};\n          switch (props.selectedMethod) {\n            case \"bank\":\n              info.supportedCountries = [\"GBR\", \"EUR\"];\n              info.subcaption = `~ 1.49-1.99% fee ~`;\n              break;\n            case \"card\":\n              info.supportedCountries = [\n                \"USA\",\n                \"GBR\",\n                \"AUS\",\n                \"BRA\",\n                \"CAN\",\n                \"EUR\",\n                \"HKG\",\n                \"IND\",\n                \"MEX\",\n                \"RUS\",\n                \"ZAF\",\n                \"KOR\"\n              ];\n              info.subcaption = `~ 2.90% fee ~`;\n              break;\n            default:\n              break;\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          return {\n            hostAppName: \"Idle\",\n            userAddress: props.account,\n            hostApiKey: env.REACT_APP_RAMP_KEY,\n            variant: props.isMobile ? \"mobile\" : \"desktop\",\n            hostLogoUrl: `${globalConfigs.baseURL}/images/idle-round.png`,\n            swapAsset: buyParams.selectedToken\n              ? buyParams.selectedToken\n              : props.tokenConfig.ramp && props.tokenConfig.ramp.swapAsset\n                ? props.tokenConfig.ramp.swapAsset\n                : props.selectedToken\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          new RampInstantSDK(initParams)\n            .on(\"*\", async event => {\n              const functionsUtil = new FunctionsUtil(props);\n              let tokenDecimals = null;\n              let tokenAmount = null;\n\n              switch (event.type) {\n                case \"PURCHASE_SUCCESSFUL\":\n                  // Update balance\n                  props.getAccountBalance();\n\n                  tokenDecimals = await props.getTokenDecimals();\n\n                  tokenAmount = event.payload.purchase.tokenAmount;\n                  tokenAmount = functionsUtil\n                    .BNify(tokenAmount.toString())\n                    .div(\n                      functionsUtil.BNify(\n                        Math.pow(10, parseInt(tokenDecimals)).toString()\n                      )\n                    )\n                    .toString();\n\n                  // Toast message\n                  window.toastProvider.addMessage(`Payment completed`, {\n                    secondaryMessage: `${tokenAmount} ${props.selectedToken} are now in your wallet`,\n                    colorTheme: \"light\",\n                    actionHref: \"\",\n                    actionText: \"\",\n                    variant: \"success\"\n                  });\n\n                  break;\n                default:\n                  break;\n              }\n            })\n            .show();\n        }\n      },\n      transak: {\n        enabled: true,\n        imageSrc: \"images/payments/transak.png\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: `~ 1.5% fee ~\\nALL CURRENCIES`,\n        supportedMethods: [\"bank\", \"card\"],\n        supportedCountries: [\n          \"USA\",\n          \"GBR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"EUR\",\n          \"IND\"\n        ],\n        supportedTokens: [\"ETH\", \"DAI\", \"USDC\", \"USDT\", \"TUSD\", \"SUSD\", \"WBTC\"],\n        remoteResources: { \"https://global.transak.com/v1/widget.js\": {} },\n        env: \"prod\",\n        badge: {\n          text: \"INSTANT\",\n          bgColor: \"#0069ee\"\n        },\n        envParams: {\n          test: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_TEST,\n            url: \"https://global.transak.com\"\n          },\n          prod: {\n            apiKey: env.REACT_APP_TRANSAK_KEY_PROD,\n            url: \"https://global.transak.com\"\n          }\n        },\n        getInfo: props => {\n          const info = {};\n\n          const selectedMethod = props.selectedMethod && props.selectedMethod;\n          let fee = selectedMethod === \"bank\" ? \"1.5%\" : \"4.5%\";\n\n          if (props.selectedCountry && props.selectedCountry.value) {\n            switch (props.selectedCountry.value.toUpperCase()) {\n              case \"GBR\":\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nGBP ONLY`;\n                break;\n              case \"IND\":\n                fee = \"1.0%\";\n                info.badge = {\n                  text: \"INSTANT\",\n                  bgColor: \"#0069ee\"\n                };\n                info.subcaption = `~ ${fee} fee ~\\nINR ONLY`;\n                break;\n              case \"EUR\":\n                if (selectedMethod === \"bank\") {\n                  info.badge = {\n                    text: \"SEPA\",\n                    color: \"#f7cb05 \",\n                    bgColor: \"#10288a\"\n                  };\n                } else {\n                  info.badge = {\n                    text: \"INSTANT\",\n                    bgColor: \"#0069ee\"\n                  };\n                }\n                info.subcaption = `~ ${fee} fee ~\\nEUR ONLY`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.transak.env;\n          const envParams =\n            globalConfigs.payments.providers.transak.envParams[env];\n\n          let fiatCurrency = null;\n\n          if (buyParams.selectedCountry && buyParams.selectedCountry.value) {\n            switch (buyParams.selectedCountry.value.toUpperCase()) {\n              case \"IND\":\n                fiatCurrency = \"INR\";\n                break;\n              case \"GBR\":\n                fiatCurrency = \"GBP\";\n                break;\n              case \"EUR\":\n                fiatCurrency = \"EUR\";\n                break;\n              case \"USA\":\n                fiatCurrency = \"USD\";\n                break;\n              default:\n                fiatCurrency = \"GBP\";\n                break;\n            }\n          }\n\n          let cryptoCurrencyCode = buyParams.selectedToken\n            ? buyParams.selectedToken.toLowerCase()\n            : props.tokenConfig.transak &&\n              props.tokenConfig.transak.currencyCode\n              ? props.tokenConfig.transak.currencyCode\n              : props.selectedToken;\n          cryptoCurrencyCode = cryptoCurrencyCode.toUpperCase();\n\n          const apiKey = envParams.apiKey;\n          const walletAddress = props.account;\n          const partnerCustomerId = props.account;\n          const disableWalletAddressForm = false;\n\n          return {\n            apiKey,\n            cryptoCurrencyCode,\n            walletAddress,\n            fiatCurrency,\n            partnerCustomerId,\n            disableWalletAddressForm,\n            width: \"100%\",\n            height: \"100%\"\n            // email,\n          };\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          if (window.transakGlobal) {\n            const transakWidget = document.getElementById(\"transak-widget\");\n            if (!transakWidget) {\n              const iframeBox = document.createElement(\"div\");\n              iframeBox.innerHTML = `\n                <div id=\"transak-widget\" class=\"transak-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                  <div id=\"transak-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\" onclick=\"document.getElementById('transak-widget').remove();\"></div>\n                  <a class=\"transak-close-button\" href=\"javascript:void(0);\" onclick=\"document.getElementById('transak-widget').remove();\" style=\"position:absolute;width:30px;height:30px;top:10px;right:10px;font-size:22px;line-height:30px;text-align:center;color:#fff;font-weight:bold;z-index:10;text-decoration:none\">✕</a>\n                  <div class=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\">\n                    <div id=\"transak-widget-container\" style=\"position:relative;z-index:2;width:500px;height:550px\"></div>\n                    <div id=\"transak-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:center\">\n                        <img src=\"${globalConfigs.payments.providers.transak.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"font-weight:600;font-style:italic;color:#0040ca\">is loading...</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              `;\n              document.body.appendChild(iframeBox);\n\n              // Add transak Widget style (mobile)\n              if (!document.getElementById(\"transakWidget_style\")) {\n                const transakStyle = document.createElement(\"style\");\n                transakStyle.id = \"transakWidget_style\";\n                transakStyle.innerHTML = `\n                @media (max-width: 40em){\n                  #transak-widget {\n                    align-items: flex-start !important;\n                  }\n                  #transak-widget-overlay{\n                    background:#fff !important;\n                  }\n                  #transak-widget-container{\n                    width:100vw;\n                    min-height: calc( 100vh - 60px ) !important;\n                  }\n                }`;\n                document.body.appendChild(transakStyle);\n              }\n            }\n\n            window.transakGlobal.render(initParams, \"transak-widget-container\");\n          }\n        }\n      },\n      moonpay: {\n        enabled: true,\n        imageSrc: \"images/payments/moonpay.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 4.5% fee ~\",\n        supportedMethods: [\"card\", \"bank\"],\n        supportedCountries: [\n          \"GBR\",\n          \"EUR\",\n          \"AUS\",\n          \"BRA\",\n          \"CHN\",\n          \"MEX\",\n          \"CAN\",\n          \"HKG\",\n          \"RUS\",\n          \"ZAF\",\n          \"KOR\"\n        ],\n        supportedTokens: [\"USDC\", \"DAI\", \"ETH\"],\n        env: \"prod\",\n        envParams: {\n          test: {\n            url: \"https://buy-staging.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_TEST\n          },\n          prod: {\n            url: \"https://buy.moonpay.io\",\n            apiKey: env.REACT_APP_MOONPAY_KEY_PROD\n          }\n        },\n        getInfo: props => {\n          const info = {};\n          if (props.selectedMethod && props.selectedMethod) {\n            switch (props.selectedMethod) {\n              case \"bank\":\n                if (props.selectedCountry && props.selectedCountry.value) {\n                  switch (props.selectedCountry.value.toUpperCase()) {\n                    case \"EUR\":\n                      info.badge = {\n                        text: \"SEPA\",\n                        color: \"#f7cb05 \",\n                        bgColor: \"#10288a\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nEUR ONLY`;\n                      break;\n                    case \"GBR\":\n                      info.badge = {\n                        text: \"GBP\"\n                      };\n                      info.subcaption = `~ 1.5% fee ~\\nGBP ONLY`;\n                      break;\n                    default:\n                      info.badge = null;\n                      info.subcaption = `~ 1.5% fee ~\\nEUR/GBP ONLY`;\n                      break;\n                  }\n                }\n                break;\n              case \"card\":\n                info.badge = null;\n                info.subcaption = `~ 5% fee ~`;\n                break;\n              default:\n                break;\n            }\n          }\n          return info;\n        },\n        getInitParams: (props, globalConfigs, buyParams) => {\n          const env = globalConfigs.payments.providers.moonpay.env;\n          const envParams =\n            globalConfigs.payments.providers.moonpay.envParams[env];\n          const apiKey = envParams.apiKey;\n          const params = {\n            apiKey,\n            currencyCode: buyParams.selectedToken\n              ? buyParams.selectedToken.toLowerCase()\n              : props.tokenConfig.moonpay &&\n                props.tokenConfig.moonpay.currencyCode\n                ? props.tokenConfig.moonpay.currencyCode\n                : props.selectedToken.toLowerCase(),\n            walletAddress: props.account,\n            baseCurrencyCode: \"USD\",\n            showWalletAddressForm: true\n          };\n\n          const methods = {\n            bank: {\n              GBR: \"gbp_bank_transfer\",\n              EUR: \"sepa_bank_transfer\"\n            },\n            card: \"credit_debit_card\"\n          };\n\n          const selectedCountry =\n            buyParams.selectedCountry && buyParams.selectedCountry.value\n              ? buyParams.selectedCountry.value.toUpperCase()\n              : null;\n\n          // Set payment method\n          if (buyParams.selectedMethod) {\n            switch (buyParams.selectedMethod) {\n              case \"bank\":\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod][\"EUR\"];\n                switch (selectedCountry) {\n                  case \"GBR\":\n                  case \"EUR\":\n                    params.enabledPaymentMethods =\n                      methods[buyParams.selectedMethod][selectedCountry];\n                    break;\n                  default:\n                    params.enabledPaymentMethods = Object.values(\n                      methods[buyParams.selectedMethod]\n                    ).join(\",\");\n                    break;\n                }\n                break;\n              case \"card\":\n              default:\n                params.enabledPaymentMethods =\n                  methods[buyParams.selectedMethod];\n                break;\n            }\n          }\n\n          // Set baseCurrencyCode\n          switch (selectedCountry) {\n            case \"GBR\":\n              params.baseCurrencyCode = \"GBP\";\n              break;\n            case \"EUR\":\n              params.baseCurrencyCode = \"EUR\";\n              break;\n            default:\n              params.baseCurrencyCode = \"USD\";\n              break;\n          }\n\n          let url = envParams.url;\n\n          // Safari Fix\n          var isSafari = navigator.userAgent.indexOf(\"Safari\") > -1;\n          if (isSafari) {\n            if (\n              !document.cookie.match(\n                /^(.*;)?\\s*moonpay-fixed\\s*=\\s*[^;]+(.*)?$/\n              )\n            ) {\n              document.cookie =\n                \"moonpay-fixed=fixed; expires=Tue, 19 Jan 2038 03:14:07 UTC; path=/\";\n              url += \"/safari_fix\";\n            }\n          }\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props, globalConfigs) => {\n          const moonpayWidget = document.getElementById(\"moonpay-widget\");\n          if (!moonpayWidget) {\n            const iframeBox = document.createElement(\"div\");\n            iframeBox.innerHTML = `\n              <div id=\"moonpay-widget\" class=\"moonpay-widget iframe-container\" style=\"position:fixed;display:flex;justify-content:center;align-items:center;top:0;left:0;width:100%;height:100%;z-index:999\">\n                <div id=\"moonpay-widget-overlay\" style=\"position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(0,0,0,0.7);z-index:1\"></div>\n                  <div id=\"moonpay-widget-container\" style=\"position:relative;z-index:2;width:500px;height:490px\">\n                    <iframe\n                      style=\"position:relative;z-index:2;\"\n                      frameborder=\"0\"\n                      height=\"100%\"\n                      src=\"${initParams}\"\n                      width=\"100%\"\n                    >\n                      <p>Your browser does not support iframes.</p>\n                    </iframe>\n                    <div id=\"moonpay-widget-loading-placeholder\" style=\"position:absolute;background:#fff;width:100%;height:100%;z-index:1;top:0;display:flex;justify-content:center;align-items:center;\">\n                      <div style=\"display:flex;flex-direction:row;align-items:end\">\n                        <img src=\"${globalConfigs.payments.providers.moonpay.imageSrc}\" style=\"height:50px;\" />\n                        <h3 style=\"padding-left:5px;font-weight:600;font-style:italic;\">is loading...</h3>\n                      </div>\n                    </div>\n                    <div id=\"moonpay-widget-footer\" style=\"position:relative;display:flex;justify-content:center;align-items:center;padding:8px 16px;width:100%;background:#fff;top:-20px;z-index:3\">\n                      <button style=\"background:#000;color:#fff;text-align:center;border-radius:5px;width:100%;height:51px;line-height:51px;font-weight:500;border:0;cursor:pointer\" onclick=\"document.getElementById('moonpay-widget').remove();\">Close</button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            `;\n            document.body.appendChild(iframeBox);\n\n            // Add Moonpay Widget style (mobile)\n            if (!document.getElementById(\"moonpayWidget_style\")) {\n              const moonpayStyle = document.createElement(\"style\");\n              moonpayStyle.id = \"moonpayWidget_style\";\n              moonpayStyle.innerHTML = `\n              @media (max-width: 40em){\n                #moonpay-widget {\n                  align-items: flex-start !important;\n                }\n                #moonpay-widget-overlay{\n                  background:#fff !important;\n                }\n                #moonpay-widget-container{\n                  width:100vw;\n                  min-height: calc( 100vh - 60px ) !important;\n                }\n              }`;\n              document.body.appendChild(moonpayStyle);\n            }\n          }\n        }\n      },\n      zeroExInstant: {\n        enabled: true,\n        imageSrc: \"images/payments/zeroexinstant.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        remoteResources: { \"https://instant.0x.org/v3/instant.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onSuccess,\n          onClose\n        ) => {\n          const tokenParams = globalConfigs.tokens[buyParams.selectedToken];\n          const connectorName = window.RimbleWeb3_context\n            ? window.RimbleWeb3_context.connectorName\n            : null;\n\n          if (!tokenParams.zeroExInstant) {\n            return null;\n          }\n\n          return {\n            networkId: globalConfigs.network.requiredNetwork,\n            chainId: globalConfigs.network.requiredNetwork,\n            provider:\n              connectorName &&\n                connectorName !== \"Injected\" &&\n                window.RimbleWeb3_context.connector[connectorName.toLowerCase()]\n                ? window.RimbleWeb3_context.connector[\n                  window.RimbleWeb3_context.connectorName.toLowerCase()\n                ].provider\n                : window.ethereum,\n            orderSource: tokenParams.zeroExInstant.orderSource,\n            affiliateInfo: tokenParams.zeroExInstant.affiliateInfo,\n            defaultSelectedAssetData: tokenParams.zeroExInstant.assetData,\n            availableAssetDatas: [tokenParams.zeroExInstant.assetData],\n            shouldDisableAnalyticsTracking: true,\n            onSuccess: onSuccess ? onSuccess : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount) => {\n          if (window.zeroExInstant && initParams) {\n            if (amount) {\n              initParams.defaultAssetBuyAmount = parseFloat(amount);\n            }\n            window.zeroExInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      kyberSwap: {\n        enabled: true,\n        imageSrc: \"images/payments/kyber.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Swap with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0.25% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\n          \"WETH\",\n          \"USDC\",\n          \"DAI\",\n          \"USDT\",\n          \"TUSD\",\n          \"SUSD\",\n          \"WBTC\",\n          \"RAI\",\n          \"FEI\"\n        ],\n        web3Subscription: {\n          // Data for web3 subscription\n          enabled: true,\n          contractAddress: \"0x818e6fecd516ecc3849daf6845e3ec868087b755\",\n          decodeLogsData: [\n            {\n              internalType: \"address\",\n              name: \"_startAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"address\",\n              name: \"_tokenAddress\",\n              type: \"address\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_startAmount\",\n              type: \"uint256\"\n            },\n            {\n              internalType: \"uint256\",\n              name: \"_tokenAmount\",\n              type: \"uint256\"\n            }\n          ]\n        },\n        remoteResources: {\n          \"https://widget.kyber.network/v0.7.5/widget.css\": {},\n          \"https://widget.kyber.network/v0.7.5/widget.js\": {\n            parentElement: document.body,\n            precall: (props, globalConfigs, providerInfo) => {\n              // Remove previous elements\n              const buttons = document.querySelectorAll(\".kyber-widget-button\");\n              for (let i = 0; i < buttons.length; i++) {\n                buttons[i].remove();\n              }\n\n              // const kyberWidgetScript = document.getElementById('kyber-widget-script');\n              // if (kyberWidgetScript){\n              //   kyberWidgetScript.remove();\n              // }\n\n              const scripts = document.querySelectorAll(\".script_kyberSwap\");\n              for (let i = 0; i < scripts.length; i++) {\n                scripts[i].remove();\n              }\n\n              const buttonId = props.buttonId\n                ? props.buttonId\n                : `kyber-swapper-${props.selectedToken}`;\n              if (!document.getElementById(buttonId)) {\n                const a = document.createElement(\"a\");\n                a.id = buttonId;\n                a.href = providerInfo.getInitParams(props, globalConfigs);\n                a.target = \"_blank\";\n                a.rel = \"nofollow noopener noreferrer\";\n                a.className = \"kyber-widget-button theme-ocean theme-supported\";\n                a.title = \"Swap with Kyber\";\n                a.style = \"display:none;\";\n                document.body.appendChild(a);\n              }\n            }\n          }\n        },\n        getInitParams: (props, globalConfigs, buyParams = null) => {\n          const baseToken = props.baseToken ? props.baseToken : \"ETH\";\n          const params = {\n            lang: \"en\",\n            type: \"swap\",\n            mode: \"iframe\",\n            theme: \"theme-ocean\",\n            paramForwarding: true,\n            // callback:globalConfigs.baseURL,\n            pinnedTokens: `${baseToken}_${props.selectedToken}`,\n            title: `Swap ${baseToken} for ${props.selectedToken}`,\n            defaultPair: `${baseToken}_${props.selectedToken}`,\n            commissionId: \"0x4215606a720477178AdFCd5A59775C63138711e8\",\n            network:\n              globalConfigs.network.requiredNetwork === 1 ? \"mainnet\" : \"test\"\n          };\n\n          const url = \"https://widget.kyber.network/v0.7.5/\";\n\n          return (\n            `${url}?` +\n            Object.keys(params)\n              .map(\n                k => encodeURIComponent(k) + \"=\" + encodeURIComponent(params[k])\n              )\n              .join(\"&\")\n          );\n        },\n        render: (initParams, amount, props) => {\n          const buttonId = props.buttonId\n            ? props.buttonId\n            : `kyber-swapper-${props.selectedToken}`;\n          const a = document.getElementById(buttonId);\n          if (a) {\n            a.click();\n\n            // Observe for pending transaction\n            /*\n            if (window.MutationObserver){\n              setTimeout(() => {\n\n                const observer = new window.MutationObserver(function(mutations) {\n                  mutations.forEach((m,i) => {\n                    if (m.addedNodes.length && m.target.className === 'kyber_widget-broadcast'){\n\n                      // Show persistent toast message\n                      window.showToastMessage({\n                        variant:'processing',\n                        message:'Pending deposit',\n                        secondaryMessage:'kyberSwap is processing your request'\n                      });\n\n                      observer.disconnect();\n                    } else if (m.target.id === 'kyber-widget' && m.removedNodes.length && m.removedNodes[0].firstChild.className.includes('kyber_widget-widget-container')) {\n                      observer.disconnect();\n                    }\n                  });\n                });\n                const target = document.querySelector('#kyber-widget');\n                observer.observe(target, { childList: true, subtree: true });\n              },1000);\n            }\n            */\n          }\n        }\n      },\n      airSwap: {\n        enabled: false,\n        imageSrc: \"images/payments/airswap.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: {\n          \"https://cdn.airswap.io/airswap-instant-widget.js\": {}\n        },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            env: \"production\",\n            mode: \"buy\",\n            token: props.tokenConfig.address,\n            baseToken: \"ETH\",\n            onComplete: onComplete ? onComplete : () => { },\n            onClose: onClose ? onClose : () => { }\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.AirSwapInstant) {\n            if (amount) {\n              initParams.amount = amount.toString();\n            }\n            window.AirSwapInstant.render(initParams, \"body\");\n          }\n        }\n      },\n      totle: {\n        enabled: false,\n        imageSrc: \"images/payments/totle.svg\",\n        imageProps: {\n          width: [\"100%\", \"auto\"],\n          height: [\"auto\", \"35px\"],\n          my: \"8px\"\n        },\n        caption: \"Buy with\",\n        captionPos: \"top\",\n        subcaption: \"~ 0% fee ~\",\n        supportedMethods: [\"wallet\"],\n        supportedTokens: [\"USDC\", \"DAI\"],\n        env: \"production\",\n        remoteResources: { \"https://widget.totle.com/latest/dist.js\": {} },\n        getInitParams: (\n          props,\n          globalConfigs,\n          buyParams,\n          onComplete,\n          onClose\n        ) => {\n          return {\n            sourceAssetAddress: null,\n            sourceAmountDecimal: null,\n            destinationAssetAddress: null,\n            destinationAmountDecimal: null,\n            apiKey: null,\n            partnerContractAddress: null\n          };\n        },\n        render: (initParams, amount, props) => {\n          if (window.TotleWidget) {\n            const nodeId = \"totle-widget\";\n            if (!document.getElementById(nodeId)) {\n              const totleWidgetContainer = document.createElement(\"div\");\n              totleWidgetContainer.id = nodeId;\n              document.body.appendChild(totleWidgetContainer);\n            }\n\n            window.TotleWidget.default.run(\n              initParams,\n              document.getElementById(nodeId)\n            );\n          }\n        }\n      }\n    }\n  }\n};\n\nexport default globalConfigs;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport TrancheField from '../TrancheField/TrancheField';\n\nclass TranchesList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledProtocols = this.props.enabledProtocols;\n    if (!enabledProtocols || !enabledProtocols.length){\n      enabledProtocols = Object.keys(this.props.availableTranches);\n    }\n    const depositedTokens=this.props.depositedTokens;\n    return (\n      <Flex id=\"tranches-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n          colsProps={this.props.colsProps}\n        />\n       {\n         this.props.isDeposit?\n       (\n         depositedTokens &&\n        <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            depositedTokens.map( token => {\n              const tokenConfig = this.props.availableTranches[token.protocol][token.token];\n              return (\n                <TableRow\n                  {...this.props}\n                  token={token.token}\n                  addTokenName={false}\n                  tranche={token.tranche}\n                  protocol={token.protocol}\n                  tokenConfig={tokenConfig}\n                  rowId={`tranche-col-${token.protocol}`}\n                  cardId={`tranche-card-${token.protocol}`}\n                  fieldComponent={this.props.fieldComponent || TrancheField}\n                  key={`tranche-${token.protocol}-${token.token+token.tranche}`}\n                  trancheConfig={token.tranche===\"AA\"?tokenConfig.AA:tokenConfig.BB}\n                />\n              )\n            })\n          }\n        </Flex>\n       ):\n       (\n         <Flex id=\"tranches-list\" flexDirection={'column'}>\n          {\n            enabledProtocols.map(protocol => {\n              const protocolConfig = this.props.availableTranches[protocol];\n              if (!protocolConfig){\n                return null;\n              }\n              const tranche = this.props.trancheType || null;\n              return Object.keys(protocolConfig).map( token => {\n                return(\n                  <TableRow\n                    {...this.props}\n                    token={token}\n                    tranche={tranche}\n                    protocol={protocol}\n                    rowId={`tranche-col-${protocol}`}\n                    tokenConfig={protocolConfig[token]}\n                    cardId={`tranche-card-${protocol}`}\n                    key={`tranche-${protocol}-${token}`}\n                    fieldComponent={this.props.fieldComponent || TrancheField}\n                  />\n                  )\n               })\n            })\n          }\n        </Flex>\n        )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TranchesList;\n","const address = '0xf5dce57282a584d2746faf1593d3121fcac444dc'; // mainnet\nconst abi = [\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"name\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x06fdde03\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"approve\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x095ea7b3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"reserveFactorMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x173b9904\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x17bfdfbc\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalSupply\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x18160ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"exchangeRateStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x182df0f5\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"src\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transferFrom\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x23b872dd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"pendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x26782247\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"decimals\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x313ce567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOfUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3af9e669\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"getCash\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x3b1d21a2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setComptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x4576b5db\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalBorrows\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x47bd3718\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"comptroller\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x5fe3b567\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_reduceReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x601a0bf1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"initialExchangeRateMantissa\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x675d972c\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"accrualBlockNumber\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6c540baf\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"underlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x6f307dc3\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"balanceOf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x70a08231\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"totalBorrowsCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x73acee98\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"totalReserves\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x8f840ddd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"symbol\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"string\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95d89b41\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"borrowBalanceStored\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x95dd9193\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"accrueInterest\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa6afed95\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"dst\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"transfer\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa9059cbb\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowIndex\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xaa5af0fd\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"supplyRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xae9d70b0\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"seize\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb2a02ff1\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setPendingAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xb71d1a0c\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"exchangeRateCurrent\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xbd6d894d\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"account\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"getAccountSnapshot\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc37f68e2\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [\n      {\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"allowance\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdd62ed3e\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [],\n    \"name\": \"_acceptAdmin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xe9c714f2\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"_setInterestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf2b3abbd\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"interestRateModel\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf3fdb15a\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"admin\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"address\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf851a440\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"borrowRatePerBlock\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf8f9da28\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"_setReserveFactor\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfca7820b\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": true,\n    \"inputs\": [],\n    \"name\": \"isCToken\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"bool\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xfe9c44ae\",\n    \"stateMutability\": \"view\",\n    \"type\": \"function\"\n  },\n  {\n    \"inputs\": [\n      {\n        \"name\": \"underlying_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"comptroller_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"interestRateModel_\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"initialExchangeRateMantissa_\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"name_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"symbol_\",\n        \"type\": \"string\"\n      },\n      {\n        \"name\": \"decimals_\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"constructor\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"constructor\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"interestAccumulated\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowIndex\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"AccrueInterest\",\n    \"signature\": \"0x875352fb3fadeb8c0be7cbbe8ff761b308fa7033470cd0287f02f3436fd76cb9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"minter\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"mintTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Mint\",\n    \"signature\": \"0x4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"redeemer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Redeem\",\n    \"signature\": \"0xe5b754fb1abb7f01b499791d0b820ae3b6af3424ac1c59768edb53f4ec31a929\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Borrow\",\n    \"signature\": \"0x13ed6866d4e1ee6da46f845c46d7e54120883d75c5ea9a2dacc1c4ca8984ab80\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"payer\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"accountBorrows\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"totalBorrows\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"RepayBorrow\",\n    \"signature\": \"0x1a2a22cb034d26d1854bdc6666a5b91fe25efbbb5dcad3b0355478d6f5c362a1\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"liquidator\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"seizeTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"LiquidateBorrow\",\n    \"signature\": \"0x298637f684da70674f26509b10f07ec2fbc77a335ab1e7d6215a4b2484d8bb52\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldPendingAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newPendingAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewPendingAdmin\",\n    \"signature\": \"0xca4f2f25d0898edd99413412fb94012f9e54ec8142f9b093e7720646a95b16a9\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldAdmin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newAdmin\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewAdmin\",\n    \"signature\": \"0xf9ffabca9c8276e99321725bcb43fb076a6c66a54b7f21c4e8146d8519b417dc\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldComptroller\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newComptroller\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewComptroller\",\n    \"signature\": \"0x7ac369dbd14fa5ea3f473ed67cc9d598964a77501540ba6751eb0b3decf5870d\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldInterestRateModel\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newInterestRateModel\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"NewMarketInterestRateModel\",\n    \"signature\": \"0xedffc32e068c7c95dfd4bdfd5c4d939a084d6b11c4199eac8436ed234d72f926\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"oldReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newReserveFactorMantissa\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"NewReserveFactor\",\n    \"signature\": \"0xaaa68312e2ea9d50e16af5068410ab56e1a1fd06037b1a35664812c30f821460\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"admin\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"reduceAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"newTotalReserves\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"ReservesReduced\",\n    \"signature\": \"0x3bad0c59cf2f06e7314077049f48a93578cd16f5ef92329f1dab1420a99c177e\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": false,\n        \"name\": \"error\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"info\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"detail\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Failure\",\n    \"signature\": \"0x45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa0\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"from\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"to\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Transfer\",\n    \"signature\": \"0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\",\n    \"type\": \"event\"\n  },\n  {\n    \"anonymous\": false,\n    \"inputs\": [\n      {\n        \"indexed\": true,\n        \"name\": \"owner\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": true,\n        \"name\": \"spender\",\n        \"type\": \"address\"\n      },\n      {\n        \"indexed\": false,\n        \"name\": \"amount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"Approval\",\n    \"signature\": \"0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\",\n    \"type\": \"event\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"mintAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"mint\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xa0712d68\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemTokens\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeem\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xdb006a75\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"redeemAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"redeemUnderlying\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x852a12e3\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrowAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"borrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xc5ebeaec\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x0e752702\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"name\": \"repayBorrowBehalf\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0x2608f818\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  },\n  {\n    \"constant\": false,\n    \"inputs\": [\n      {\n        \"name\": \"borrower\",\n        \"type\": \"address\"\n      },\n      {\n        \"name\": \"repayAmount\",\n        \"type\": \"uint256\"\n      },\n      {\n        \"name\": \"cTokenCollateral\",\n        \"type\": \"address\"\n      }\n    ],\n    \"name\": \"liquidateBorrow\",\n    \"outputs\": [\n      {\n        \"name\": \"\",\n        \"type\": \"uint256\"\n      }\n    ],\n    \"payable\": false,\n    \"signature\": \"0xf5e3c462\",\n    \"stateMutability\": \"nonpayable\",\n    \"type\": \"function\"\n  }\n];\nexport default { address, abi };\n","const address = '0x5592EC0cfb4dbc12D3aB100b257153436a1f0FEa'; // rinkeby\nconst abi = [{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"stop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"owner_\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name_\",\"type\":\"bytes32\"}],\"name\":\"setName\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stopped\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"authority_\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"push\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"dst\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"move\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"start\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"guy\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"src\",\"type\":\"address\"},{\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"pull\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"symbol_\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"authority\",\"type\":\"address\"}],\"name\":\"LogSetAuthority\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"LogSetOwner\",\"type\":\"event\"},{\"anonymous\":true,\"inputs\":[{\"indexed\":true,\"name\":\"sig\",\"type\":\"bytes4\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"foo\",\"type\":\"bytes32\"},{\"indexed\":true,\"name\":\"bar\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"fax\",\"type\":\"bytes\"}],\"name\":\"LogNote\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"guy\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"src\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"dst\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"wad\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}];\nexport default { address, abi };\n","import DAI from '../abis/tokens/DAI.json';\nimport CHAI from '../abis/chai/CHAI.json';\nimport cToken from '../abis/compound/cDAI';\nimport WETH from '../abis/tokens/WETH.json';\nimport USDC from '../abis/tokens/USDC.json';\nimport ERC20 from '../abis/tokens/ERC20.js';\nimport fToken from '../abis/fuse/fToken.json';\nimport aToken from '../abis/aave/AToken.json';\nimport yToken from '../abis/dydx/yToken.json';\nimport iToken from '../abis/fulcrum/iToken.json';\nimport crToken from '../abis/cream/crToken.json';\nimport IdleTokenV3 from '../contracts/IdleTokenV3.json';\nimport IdleTokenV4 from '../contracts/IdleTokenV4.json';\nimport IdleConverterPersonalSignV4 from '../contracts/IdleConverterPersonalSignV4.json';\n\nconst availableTokens = {\n  // Goerli\n  5:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aave',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n\n    }\n  },\n  80001:{ // Mumbai-Testnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x001B3B4d0F3714Ca98ba10F6042DaEbF0B1B7b6F',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x45a3598Ac8aDb2c6233979f710DC6a3D006238E0',\n        },\n        protocols:[\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x639cB7b21ee2161DF9c882483C9D55c90c20Ca3e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      /*\n      USDC:{\n        abi:USDC,\n        token:'USDC',\n        decimals:6,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols:[\n          {\n            decimals:16,\n            enabled:true,\n            token:'cUSDC',\n            abi:cToken.abi,\n            name:'compound',\n            address:'0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      */\n    },\n    risk:{\n      \n    }\n  },\n  137:{ // Matic Mainnet\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x8a999F5A3546F8243205b2c0eCb0627cC10003ab',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crDAI',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x4eCEDdF62277eD78623f9A94995c680f8fd6C00e',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amDAI',\n            address:'0x27F8D03b3a2196956ED754baDc28D73be8830A6e',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      USDC:{\n        abi:USDC,\n        decimals:6,\n        token:'USDC',\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(211, 67%, 47%)',\n        address:'0x2791Bca1f2de4661ED88A30C99A7a9449Aa84174',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'USDC'\n        },\n        ramp:{\n          swapAsset:'USDC'\n        },\n        defiPrime:{\n          token:'usdc'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleUSDCYield',\n          address:'0x1ee6470CD75D5686d0b2b90C0305Fa46fb0C89A1',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:16,\n            name:'cream',\n            enabled:true,\n            token:'crUSDC',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x73CF8c5D14Aa0EbC89f18272A568319F5BAB6cBD',\n          },\n          {\n            abi:aToken,\n            name:'aavev2',\n            enabled:true,\n            token:'amUSDC',\n            address:'0x1a13F4Ca1d028320A707D99520AbFefca3998b7F',\n            decimals:18,\n            functions:{\n\n            }\n          },\n        ]\n      },\n      WETH:{\n        abi:WETH,\n        token:'WETH',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x7ceB23fD6bC0adD59E62ac25578270cFf1b9f619',\n        deposit:{\n          minAmountForMint:5000,\n        },\n        wyre:{\n          destCurrency:'WETH'\n        },\n        ramp:{\n          swapAsset:'WETH'\n        },\n        defiPrime:{\n          token:'weth'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleWETHYield',\n          address:'0xfdA25D931258Df948ffecb66b5518299Df6527C4',\n        },\n        protocols:[\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            enabled:true,\n            token:'crWETH',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0x7ef18d0a9C3Fb1A716FF6c3ED0Edf52a2427F716',\n          },\n          {\n            abi:aToken,\n            decimals:18,\n            enabled:true,\n            token:'aWETH',\n            name:'aavev2',\n            address:'0x28424507fefb6f7f8E9D3860F56504E4e5f5f390',\n            functions:{\n\n            }\n          },\n        ]\n      },\n    },\n    risk:{\n      \n    }\n  },\n  // Ethereum\n  42:{\n    best:{\n      DAI:{\n        abi:DAI,\n        token:'DAI',\n        decimals:18,\n        enabled:true,\n        govTokensDisabled:false,\n        color:'hsl(40, 95%, 59%)',\n        address:'0x4f96fe3b7a6cf9725f59d353f723c1bdb64ca6aa',\n        deposit:{\n          minAmountForMint:10000,\n        },\n        wyre:{\n          destCurrency:'DAI'\n        },\n        ramp:{\n          swapAsset:'DAI'\n        },\n        defiPrime:{\n          token:'dai'\n        },\n        idle:{\n          abi:IdleTokenV4,\n          token:'idleDAIYield',\n          address:'0x295CA5bC5153698162dDbcE5dF50E436a58BA21e',\n        },\n        protocols:[\n          {\n            decimals:28,\n            token:'cDAI',\n            enabled:true,\n            abi:cToken.abi,\n            name:'compound',\n            address:'0xf0d0eb522cfa50b716b3b1604c4f0fa6f04376ad',\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        token: 'USDC',\n        decimals: 6,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xb7a4f3e9097c08da09517b5ab877f7a917224ede',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        ramp: {\n          swapAsset: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x0de23D3bc385a74E2196cfE827C8a640B8774B9f',\n        },\n        protocols: [\n          {\n            decimals: 16,\n            enabled: true,\n            token: 'cUSDC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4a92e71227d294f041bd82dd8f78591b75140d63',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          }\n        ]\n      },\n    },\n    risk: {\n\n    }\n  },\n  1337: {\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crRAI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  },\n  1: { // Mainnet\n    best: {\n      DAI: {\n        abi: DAI,\n        token: 'DAI',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAIYield',\n          address: '0x3fe7940616e5bc47b0775a0dccf6237893353bb4',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your DAI with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAIYieldV3',\n            address: '0x78751b12da02728f467a44eac40f5cbc16bd7934',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            token: 'idleDAI',\n            abi: IdleConverterPersonalSignV4,\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            enabled: false,\n            name: 'fulcrum',\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x028171bCA77440897B824Ca71D1c56caC55b68A3',\n            token: 'aDAIv2',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            abi: CHAI,\n            name: 'dsr',\n            enabled: true,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            abi: yToken,\n            name: 'dydx',\n            enabled: true,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCYield',\n          address: '0x5274891bEC421B39D23760c04A6755eCB444797C',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCYieldV3',\n            address: '0x12B98C621E8754Ae70d0fDbBC73D6208bC3e3cA6'\n          },\n          oldProtocols: [\n            {\n              abi: yToken,\n              name: 'dydx',\n              enabled: true,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.4,\n            abi: aToken,\n            decimals: 18,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aUSDCv2',\n            address: '0xBcca60bB61934080951369a648Fb03DF4F96263C',\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTYield',\n          address: '0xF34842d05A1c888Ca02769A633DF37177415C2f8',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your USDT with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTYieldV3',\n            address: '0x63D27B3DA94A9E871222CB0A32232674B02D2f2D'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDT',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            abi: aToken,\n            decimals: 18,\n            name: 'aavev2',\n            enabled: true,\n            token: 'aUSDTv2',\n            address: '0x3ed3b47dd13ec9a98b44e6204a523e766b225811',\n            functions: {\n\n            }\n          }\n        ]\n      },\n      SUSD: {\n        decimals: 18,\n        token: 'SUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(250, 31%, 15%)',\n        // icon:'images/tokens/SUSD.svg',\n        address: '0x57ab1ec28d129707052df4df418d58a2d46d5f51',\n        wyre: {\n          destCurrency: 'SUSD'\n        },\n        defiPrime: {\n          token: 'susd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleSUSDYield',\n          address: '0xf52cdcd458bf455aed77751743180ec4a595fd3f',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your SUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleSUSD',\n            name: 'idleSUSDYieldV3',\n            address: '0xe79e177d2a5c7085027d7c64c8f271c81430fc9b',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleSUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x625aE63000f46200499120B906716420bd059240',\n            token: 'aSUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.2,\n            name: 'aavev2',\n            enabled: true,\n            abi: aToken,\n            address: '0x6c5024cd4f8a59110119c56f8933403a539555eb',\n            token: 'aSUSDv2',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      TUSD: {\n        decimals: 18,\n        token: 'TUSD',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        skipMintForDeposit: false,\n        color: 'hsl(217, 100%, 20%)',\n        address: '0x0000000000085d4780b73119b644ae5ecd22b376',\n        wyre: {\n          destCurrency: 'TUSD'\n        },\n        defiPrime: {\n          token: 'tusd'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleTUSDYield',\n          address: '0xc278041fDD8249FE4c1Aad1193876857EEa3D68c',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your TUSD with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleTUSD',\n            name: 'idleTUSDYieldV3',\n            address: '0x51C77689A9c2e8cCBEcD4eC9770a1fA5fA83EeF1',\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleTUSD',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.8,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x4da9b813057d04baef4e5800e36083717b4a0341',\n            token: 'aTUSD',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aTUSDv2',\n            address: '0x101cc05f4A51C0319f570d5E146a8C625198e636',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      WETH: {\n        abi: WETH,\n        token: 'WETH',\n        decimals: 18,\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WETH'\n        },\n        ramp: {\n          swapAsset: 'WETH'\n        },\n        defiPrime: {\n          token: 'weth'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWETHYield',\n          address: '0xC8E6CA6E96a326dC448307A5fDE90a0b21fd7f80',\n        },\n        protocols: [\n          {\n            defiScore: 8.8,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x4Ddc2D193948926D02f9B1fE9e1daa0718270ED5',\n            token: 'cETH',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aavev2',\n            enabled: true,\n            address: '0x030bA81f1c18d280636F32af80b9AAd02Cf0854e',\n            token: 'aWETH',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n        ]\n      },\n      WBTC: {\n        decimals: 8,\n        token: 'WBTC',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(29, 81%, 59%)',\n        address: '0x2260fac5e5542a773aa44fbcfedf7c193bc2c599',\n        deposit: {\n          minAmountForMint: 5000,\n        },\n        wyre: {\n          destCurrency: 'WBTC'\n        },\n        defiPrime: {\n          token: 'wbtc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleWBTCYield',\n          address: '0x8C81121B15197fA0eEaEE1DC75533419DcfD3151',\n        },\n        migration: {\n          enabled: true,\n          message: 'Idle now supports yield farming and governance tokens distribution. Migrate now your WBTC with just one click!',\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleWBTC',\n            name: 'idleWBTCYieldV3',\n            address: '0xD6f279B7ccBCD70F8be439d25B9Df93AEb60eC55'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleWBTC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.9,\n            enabled: true,\n            token: 'cWBTC',\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0xccF4429DB6322D5C611ee964527D42E5d685DD6a',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            abi: iToken,\n            decimals: 18,\n            token: 'iWBTC',\n            enabled: false,\n            name: 'fulcrum',\n            address: '0xba9262578efef8b3aff7f60cd629d6cc8859c8b5',\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            name: 'aave',\n            enabled: true,\n            token: 'aWBTC',\n            address: '0xfc4b8ed459e00e5400be803a9bb3954234fd50e3',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 8.3,\n            abi: aToken,\n            enabled: true,\n            name: 'aavev2',\n            token: 'aWBTCv2',\n            address: '0x9ff58f4fFB29fA2266Ab25e75e2A8b3503311656',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      },\n      RAI: {\n        deposit: {},\n        token: 'RAI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(169,42%,37%)',\n        icon: 'images/tokens/RAI.png',\n        address: '0x03ab458634910aad20ef5f1c8ee96f1d6ac54919',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleRAIYield',\n          address: '0x5C960a3DCC01BE8a0f49c02A8ceBCAcf5D07fABe',\n        },\n        protocols: [\n          /*\n          {\n            abi:crToken,\n            decimals:28,\n            name:'cream',\n            token:'crRAI',\n            enabled:false,\n            functions:{\n              exchangeRate:{\n                name:'exchangeRateStored',\n                params:[]\n              }\n            },\n            address:'0xf8445c529d363ce114148662387eba5e62016e20',\n          },\n          */\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fRAI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x752F119bD4Ee2342CE35E2351648d21962c7CAfE',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aRAI',\n            enabled: true,\n            name: 'aavev2',\n            functions: {\n            },\n            address: '0xc9bc48c72154ef3e5425641a3c747242112a46af',\n          }\n        ]\n      },\n      FEI: {\n        deposit: {},\n        token: 'FEI',\n        decimals: 18,\n        enabled: true,\n        abi: ERC20.abi,\n        enabledEnvs: [],\n        defiScoreDisabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(158, 64%, 37%)',\n        address: '0x956f47f50a910163d8bf957cf5846d573e7f87ca',\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleFEIYield',\n          address: '0xb2d5CB72A621493fe83C6885E4A776279be595bC',\n        },\n        protocols: [\n          {\n            abi: crToken,\n            decimals: 28,\n            enabled: true,\n            name: 'cream',\n            token: 'crFEI',\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0x8C3B7a4320ba70f8239F83770c4015B5bc4e6F91',\n          },\n          {\n            abi: fToken,\n            decimals: 28,\n            name: 'fuse',\n            token: 'fFEI',\n            enabled: true,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n            address: '0xd8553552f8868C1Ef160eEdf031cF0BCf9686945',\n          },\n          {\n            abi: aToken,\n            decimals: 18,\n            token: 'aFEI',\n            enabled: true,\n            functions: {},\n            name: 'aavev2',\n            address: '0x683923dB55Fead99A79Fa01A27EeC3cB19679cC3',\n          }\n        ]\n      },\n    },\n    risk: {\n      DAI: {\n        abi: DAI,\n        decimals: 18,\n        token: 'DAI',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(40, 95%, 59%)',\n        address: '0x6b175474e89094c44da98b954eedeac495271d0f',\n        wyre: {\n          destCurrency: 'DAI'\n        },\n        ramp: {\n          swapAsset: 'DAI'\n        },\n        defiPrime: {\n          token: 'dai'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleDAISafe',\n          address: '0xa14ea0e11121e6e951e87c66afe460a00bcd6a16'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleDAI',\n            name: 'idleDAISafeV3',\n            address: '0x1846bdfDB6A0f5c473dEc610144513bd071999fB'\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0xf424b10e1e9691ae5fb530fe4c3e6b9971013d49',\n              token: 'yxDAIOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            enabled: true,\n            abi: cToken.abi,\n            name: 'compound',\n            address: '0x5d3a536E4D6DbD6114cc1Ead35777bAB948E3643',\n            token: 'cDAI',\n            decimals: 28,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x493c57c4763932315a328269e1adad09653b9081',\n            token: 'iDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0xfC1E690f61EFd961294b3e1Ce3313fBD8aa4f85d',\n            token: 'aDAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            name: 'dsr',\n            enabled: true,\n            abi: CHAI,\n            address: '0x06AF07097C9Eeb7fD685c692751D5C66dB49c215',\n            token: 'CHAI',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.7,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xb299BCDF056d17Bd1A46185eCA8bCE458B00DC4a',\n            token: 'yxDAI',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDC: {\n        abi: USDC,\n        decimals: 6,\n        token: 'USDC',\n        enabled: true,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xa0b86991c6218b36c1d19d4a2e9eb0ce3606eb48',\n        deposit: {\n          minAmountForMint: 10000,\n        },\n        wyre: {\n          destCurrency: 'USDC'\n        },\n        defiPrime: {\n          token: 'usdc'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDCSafe',\n          address: '0x3391bc034f2935ef0e1e41619445f998b2680d35'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDC',\n            name: 'idleUSDCSafeV3',\n            address: '0xcDdB1Bceb7a1979C6caa0229820707429dd3Ec6C',\n          },\n          oldProtocols: [\n            {\n              name: 'dydx',\n              enabled: true,\n              abi: yToken,\n              address: '0x0d81b042bb9939b4d32cdf7861774c442a2685ce',\n              token: 'yxUSDCOld',\n              decimals: 18,\n              functions: {\n                exchangeRate: {\n                  name: 'price',\n                  params: []\n                }\n              }\n            }\n          ],\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleUSDC',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 8.0,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0x39aa39c021dfbae8fac545936693ac917d5e7563',\n            token: 'cUSDC',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0xf013406a0b1d544238083df0b93ad0d2cbe0f65f',\n            token: 'iUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.4,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x9bA00D6856a4eDF4665BcA2C2309936572473B7E',\n            token: 'aUSDC',\n            decimals: 18,\n            functions: {\n\n            }\n          },\n          {\n            defiScore: 7.8,\n            name: 'dydx',\n            enabled: true,\n            abi: yToken,\n            address: '0xd2F45883627f26EC34825486ca4c25235A0da0C3',\n            token: 'yxUSDC',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'price',\n                params: []\n              }\n            }\n          }\n        ]\n      },\n      USDT: {\n        decimals: 6,\n        token: 'USDT',\n        enabled: true,\n        abi: ERC20.abi,\n        govTokensDisabled: false,\n        color: 'hsl(211, 67%, 47%)',\n        address: '0xdac17f958d2ee523a2206206994597c13d831ec7',\n        wyre: {\n          destCurrency: 'USDT'\n        },\n        defiPrime: {\n          token: 'usdt'\n        },\n        idle: {\n          abi: IdleTokenV4,\n          token: 'idleUSDTSafe',\n          address: '0x28fAc5334C9f7262b3A3Fe707e250E01053e07b5'\n        },\n        canDeposit: {\n          enabled: false,\n          disabledMessageRedeemKey: 'riskAdjustedDisabledMessageRedeem',\n          disabledMessageDepositKey: 'riskAdjustedDisabledMessageDeposit'\n        },\n        migration: {\n          enabled: true,\n          oldContract: {\n            abi: IdleTokenV3,\n            token: 'idleUSDT',\n            name: 'idleUSDTSafeV3',\n            address: '0x42740698959761baf1b06baa51efbd88cb1d862b'\n          },\n          migrationContract: {\n            abi: IdleConverterPersonalSignV4,\n            token: 'idleDAI',\n            name: 'IdleConverterV4',\n            address: '0xa55caa40b32a02becfad1d0d29c4f1cf38c4c743',\n            oldAddresses: [],\n            functions: [\n              {\n                label: 'Migrate',\n                name: 'migrateFromToIdle'\n              },\n            ]\n          }\n        },\n        protocols: [\n          {\n            defiScore: 7.9,\n            name: 'compound',\n            enabled: true,\n            abi: cToken.abi,\n            address: '0xf650c3d88d12db855b8bf7d11be6c55a4e07dcc9',\n            token: 'cUSDT',\n            decimals: 16,\n            functions: {\n              exchangeRate: {\n                name: 'exchangeRateStored',\n                params: []\n              }\n            },\n          },\n          {\n            name: 'fulcrum',\n            enabled: false,\n            abi: iToken,\n            address: '0x8326645f3aa6de6420102fdb7da9e3a91855045b',\n            token: 'iUSDT',\n            decimals: 18,\n            functions: {\n              exchangeRate: {\n                name: 'tokenPrice',\n                params: []\n              }\n            },\n          },\n          {\n            defiScore: 7.2,\n            name: 'aave',\n            enabled: true,\n            abi: aToken,\n            address: '0x71fc860F7D3A592A4a98740e39dB31d25db65ae8',\n            token: 'aUSDT',\n            decimals: 18,\n            functions: {\n\n            }\n          }\n        ]\n      }\n    }\n  }\n};\n\nexport default availableTokens;","import Footer from '../Footer/Footer';\nimport styles from './Tos.module.scss';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Heading } from 'rimble-ui'\n\nclass Tos extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} pb={[3,5]} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} pb={3} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.2em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                Terms of Service\n              </Heading.h1>\n              <Heading.h2 fontWeight={'400'} lineHeight={['1.4em', '2em']} fontSize={[2,3]} textAlign={'center'} color={'white'}>\n                Updated: November 28, 2019\n              </Heading.h2>\n            </Flex>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"70em\"]} mx={'auto'} textAlign={'center'}>\n              <Box className={styles.textContainer} alignItems={'center'} width={'100%'} minHeight={['auto','20em']} backgroundColor={'white'} color={'dark-gray'} p={[3,4]} boxShadow={'0 0 25px 5px rgba(102, 139, 255, 0.7)'} borderRadius={'15px'} style={{position:'relative'}}>\n                <Box id={'first-paragraph'} pb={3}>\n                  <Text pb={3}>\n                    These terms of service, together with any documents and additional terms they expressly incorporate by reference (collectively, these “Terms”), are entered into between Idle Labs Inc. (“Idle,” “we,” “us” and “our”) and you or the company or other legal entity you represent (“you” or “your”), and constitute a binding legal agreement.\n                  </Text>\n                  <Text pb={3}>\n                    Please read these Terms carefully, as these Terms govern your use of our Portal and our Services, and expressly cover your rights and obligations, and our disclaimers and limitations of legal liability, relating to such use. By accessing or using the Interface, you signify that you have read, understand, and agree to be bound by and to comply with these Terms, including the mandatory arbitration provision in Section 12. If you do not agree to these Terms, you must not access or use our Portal or the Services.\n                  </Text>\n                  <Text pb={3}>\n                    You must be able to form a legally binding contract online either on behalf of a company or as an individual. Accordingly, you represent that: (a) if you are agreeing to these Terms on behalf of a company or other legal entity, you have the legal authority to bind the company or other legal entity to these Terms; and (b) you are at least 18 years old (or the age of majority where you reside, whichever is older), can form a legally binding contract online, and have the full, right, power and authority to enter into and to comply with the obligations under these Terms.\n                  </Text>\n                  <Text pb={3}>\n                    In addition to the foregoing, you also represent and warrant that you are not a citizen or resident of a state, country, territory or other jurisdiction that is embargoed by the United States or where your use of the Portal or the Services would be illegal or otherwise violate any applicable law.  Specifically, you represent that you are not located in, organized in, or a resident of New York, Cuba, Iran, Syria, North Korea, the Crimea region, Venezuela, or any other jurisdiction where Applicable law prohibits you from accessing or using the Services; and you represent that you are not be named on the Office of Foreign Asset Control of the U.S. Department of the Treasury’s Specially Designated and Blocked Persons List.\n                   </Text>\n                  <Text>\n                    Please carefully review the disclosures and disclaimers set forth in Section 9 in their entirety before using any software developed by Idle. The information in Section 9 provides important details about the legal obligations associated with your use of the Idle open-source software. By accessing or using our Portal or our Services, you agree that Idle is a provider of open-source software that optimizes the allocation of your digital assets to third-party decentralized web protocols.  Idle is not affiliated with and has no control over these third-party protocols and is not responsible for any losses that occur as a result of interconnection with these third-party protocols. The Protocol is open-source software deployed on the Ethereum Blockchain.  While Idle developed and deployed the Protocol, the software operates in an autonomous fashion on a decentralized network and, as a result, Idle has no control over user transactions. You accordingly acknowledge that you use the Services at your own risk and agree that Idle will not be responsible for any losses that occur as a result of your use of the Services.\n                  </Text>\n                </Box>\n\n                <Box id={'key-definitions'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    1. KEY DEFINITIONS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    For the purpose of these Terms, the following capitalized terms shall have the following meanings:\n                  </Text>\n\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>1.1. “Affiliate”</strong> means, with respect to a party to these Terms, any legal entity that, directly or indirectly controls, is controlled by, or is under common control with such party.\n                    </li>\n                    <li>\n                      <strong>1.2. “Applicable Law”</strong> means any domestic or foreign law, rule, statute, regulation, by-law, order, protocol, code, decree, or other directive, requirement or guideline, published or in force which applies to or is otherwise intended to govern or regulate any person, property, transaction, activity, event or other matter, including any rule, order, judgment, directive or other requirement or guideline issued by any Governmental Authority having jurisdiction over Idle, you, the Portal or the Services, or as otherwise duly enacted, enforceable by law, the common law or equity.\n                    </li>\n                    <li>\n                      <strong>1.3. “Ether”</strong> means the Ethereum Blockchain utility token that may be used to purchase computational resources to run decentralized applications or perform actions on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.4. “Ethereum Address”</strong> means the unique public key digital asset identifier that points to an Ethereum-compatible wallet to which Ether may be sent or stored.\n                    </li>\n                    <li>\n                      <strong>1.5. “Ethereum Blockchain”</strong> means the underlying blockchain infrastructure which the Portal leverages to perform portions of the Services.\n                    </li>\n                    <li>\n                      <strong>1.6. “Governmental Authority”</strong> includes any domestic or foreign federal, provincial or state, municipal, local or other governmental, regulatory, judicial or administrative authority.\n                    </li>\n                    <li>\n                      <strong>1.7. “Portal”</strong> means the Idle site located at https://idle.finance and all associated sites linked thereto by Idle and its Affiliates, which includes, for certainty, Idle’s decentralized application layer on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.8. “Protocol”</strong> means the Idle decentralized web protocol, which optimizes the allocation of users’ digital assets to third-party decentralized web protocols.\n                    </li>\n                    <li>\n                      <strong>1.9. “Token”</strong> means an “ERC-20” digital asset issued on the Ethereum Blockchain.\n                    </li>\n                    <li>\n                      <strong>1.10. “Services”</strong> has the meaning set out in Section 3.1.\n                    </li>\n                    <li>\n                      <strong>1.11. “Third-Parties Services”</strong> means other services (such as fiat-to-token gateway, or token-to-token swap) provided by third parties services running on Ethereum Blockchain.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'modifications-terms'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    2. MODIFICATIONS TO THESE TERMS\n                  </Heading.h3>\n\n                  <Text py={2}>\n                    We reserve the right, in our sole discretion, to modify these Terms from time to time. If we make changes, we will provide you with notice of such changes, such as by sending an email, providing a notice through our Services or updating the date at the top of these Terms. Unless we say otherwise in our notice, any and all such modifications are effective immediately, and your continued use of our Services after we provide such notice will confirm your acceptance of the changes. If you do not agree to the amended Terms, you must stop using our Services.\n                  </Text>\n                </Box>\n\n                <Box id={'services'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    3. SERVICES\n                  </Heading.h3>\n                </Box>\n\n                <ul className={styles.list}>\n                  <li>\n                    <strong>3.1. Services</strong><br />\n                    The primary purpose of the Portal and Protocol is to enable users to interact with smart contracts that allocate their digital assets to third-party decentralized web protocols and enable users to receive an optimized allocation of digital assets from these protocols in return (the “Services”).\n                  </li>\n                  <li>\n                    <strong>3.2. Fees</strong><br />\n                    Use of the Services is provided to you at no charge. Fees are charged on-top of Third-Parties.\n                  </li>\n                  <li>\n                    <strong>3.3. Ethereum Gas Charges</strong><br />\n                    Some Services involve the use of the Ethereum Blockchain, which may require that you pay a fee, commonly known as “Ethereum Gas Charges,” for the computational resources required to perform a transaction on the Ethereum Blockchain. You acknowledge and agree that Idle has no control over: (a) any Ethereum Blockchain transactions; (b) the method of payment of any Ethereum Gas Charges; or (c) any actual payments of Ethereum Gas Charges. Accordingly, you must ensure that you have a sufficient balance of Ether stored at your Ethereum Address to complete any transaction on the Ethereum Blockchain before initiating such Ethereum Blockchain transaction. We will make reasonable efforts to notify you of any Ethereum Gas Charges before initiating any Services that require the use of the Ethereum Blockchain.\n                  </li>\n                  <li>\n                    <strong>3.4. Conditions and Restrictions</strong><br />\n                    We may, at any time and in our sole discretion, restrict your access to, or otherwise impose conditions or restrictions upon your use of, the Services or the Portal, with or without prior notice.\n                  </li>\n                  <li>\n                    <strong>3.5. No Broker, Legal or Fiduciary Relationship</strong><br />\n                    Idle is not your broker, lawyer, intermediary, agent, or advisor and has no fiduciary relationship or obligation to you regarding any other decisions or activities that you effect when using the Portal or the Services. Neither our communications nor any information that we provide to you is intended as, or shall be considered or construed as, advice.\n                  </li>\n                  <li>\n                    <strong>3.6. Your Responsibilities</strong><br />\n                    As a condition to accessing or using the Services or the Portal, you shall:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>only use the Services and the Portal for lawful purposes and in accordance with these Terms;</li>\n                      <li>ensure that, at all times, all information that you provide on the Portal is current, complete and accurate; and maintain the security and confidentiality of your Ethereum Address.</li>\n                      <li>shall be responsible for payment of all applicable taxes, if any, to which the Services might be subject and any and all other taxes which may apply to you.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.7. Unacceptable Use or Conduct</strong><br />\n                    As a condition to accessing or using the Portal or the Services, you will not:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>violate any Applicable Law, including, without limitation, any relevant and applicable anti-money laundering and anti-terrorist financing laws, such as the Bank Secrecy Act, each as may be amended;</li>\n                      <li>infringe on or misappropriate any contract, intellectual property or other third-party right, or commit a tort while using the Portal or the Services;</li>\n                      <li>use the Services in any manner that could interfere with, disrupt, negatively affect, or inhibit other users from fully enjoying the Services, or that could damage, disable, overburden, or impair the functioning of the Services in any manner;</li>\n                      <li>attempt to circumvent any content filtering techniques or security measures that Idle employs on the Portal, or attempt to access any service or area of the Portal or the Services that you are not authorized to access;</li>\n                      <li>use the Services to pay for, support, or otherwise engage in any illegal gambling activities, fraud, money-laundering, or terrorist activities, or other illegal activities;</li>\n                      <li>use any robot, spider, crawler, scraper, or other automated means or interface not provided by us, to access the Services or to extract data;</li>\n                      <li>introduce any malware, virus, Trojan horse, worm, logic bomb, drop-dead device, backdoor, shutdown mechanism or other harmful material into the Portal or the Services;</li>\n                      <li>provide false, inaccurate, or misleading information;</li>\n                      <li>post content or communications on the Portal that are, in our sole discretion, libelous, defamatory, profane, obscene, pornographic, sexually explicit, indecent, lewd, vulgar, suggestive, harassing, hateful, threatening, offensive, discriminatory, bigoted, abusive, inflammatory, fraudulent, deceptive or otherwise objectionable;</li>\n                      <li>post content on the Portal containing unsolicited promotions, political campaigning, or commercial messages or any chain messages or user content designed to deceive or trick the user of the Service;</li>\n                      <li>use the Portal or the Services from a jurisdiction that we have, in our sole discretion, or a relevant Governmental Authority has determined is a jurisdiction where the use of the Portal or the Services is prohibited; or</li>\n                      <li>encourage or induce any third party to engage in any of the activities prohibited under this Section 3.7.</li>\n                    </ul>\n                  </li>\n\n                  <li>\n                    <strong>3.8. Your Assumption of Risks</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>have the necessary technical expertise and ability to review and evaluate the security, integrity and operation of any transactions that you engage in through the Protocol;</li>\n                      <li>have the knowledge, experience, understanding, professional advice and information to make your own evaluation of the merits, risks and applicable compliance requirements under Applicable Law of engaging in transactions through the Protocol;</li>\n                      <li>acknowledge and understand that the Protocol allocates your digital assets to third-party decentralized web protocols to facilitate your lending and borrowing through these third-party protocols and that Idle is not responsible or liable for these transactions or the operation of these third-party protocols;</li>\n                      <li>know, understand and accept the risks associated with your Ethereum Address, the Ethereum Blockchain, Ether and Tokens; and</li>\n                      <li>accept the risks associated with lending, borrowing and trading Ether and Tokens, and are responsible for conducting your own independent analysis of the risks specific to any Ether and Tokens lent, borrowed or traded by you and your use of the Services.</li>\n                    </ul>\n                    You hereby assume, and agree that Idle will have no responsibility or liability for, such risks. You hereby irrevocably waive, release and discharge all claims, whether known or unknown to you, against Idle, its affiliates and their respective shareholders, members, directors, officers, employees, agents and representatives related to any of the risks set forth herein.\n                  </li>\n                  <li>\n                    <strong>3.9. Additional Representations</strong><br />\n                    You represent and warrant that you:\n                    <ul className={styles.list} style={{listStyle:'lower-alpha'}}>\n                      <li>are not using the Protocol to engage in the leveraged, margined, or financed purchase of digital assets; and</li>\n                      <li>are using the Protocol for the purpose of accessing third-party decentralized web protocols.</li>\n                    </ul>\n                  </li>\n                  <li>\n                    <strong>3.10. Your Content</strong><br />\n                    You hereby grant to us a royalty-free, fully paid-up, sublicensable, transferable, perpetual, irrevocable, non-exclusive, worldwide license to use, copy, modify, create derivative works of, display, perform, publish and distribute, in any form, medium or manner, any content that is available to other users via the Idle Platform as a result of your use of the Portal (collectively, “Your Content”) through your use of the Services or the Portal, including, without limitation, for promoting Idle (or its Affiliates), the Services or the Portal. You represent and warrant that: (a) you own Your Content or have the right to grant the rights and licenses in these Terms; and (b) Your Content and our use of Your Content, as licensed herein, does not and will not violate, misappropriate or infringe on any third party’s rights.\n                  </li>\n                </ul>\n\n                <Box id={'privacy-policy'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    4. PRIVACY POLICY\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please refer to our privacy policy available at https://idle.finance/privacy-policy for information about how we collect, use, share and otherwise process information about you.\n                  </Text>\n                </Box>\n\n                <Box id={'proprietary-rights'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    5. PROPRIETARY RIGHTS\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>5.1. Ownership of Services; License to Services</strong><br />\n                      Excluding any open source software (as further described in Section 5.2) or third-party software that the Portal or the Services incorporates, as between you and Idle, Idle owns the Portal and the Services, including all technology, content and other materials used, displayed or provided on the Portal or in connection with the Services (including all intellectual property rights subsisting therein), and hereby grants you a limited, revocable, transferable, license to access and use those portions of the Portal and the Services that are proprietary to Idle.\n                    </li>\n                    <li>\n                      <strong>5.2. Idle License; Open Source Software License; Limitations</strong><br />\n                      The Portal and the Services are governed by the most recent version of the open source license commonly known as the Apache 2.0 a copy of which (as it applies to the Portal and the Services) can be found at:  https://apache.org/licenses/LICENSE-2.0 (as of the date these Terms were last updated) and any other applicable licensing terms for the Portal and the Services in these Terms (collectively, the “Idle License”). You acknowledge that the Portal or the Services may use, incorporate or link to certain open-source components and that your use of the Portal or Services is subject to, and you will comply with any, applicable open-source licenses that govern any such open-source components (collectively, “Open-Source Licenses”). Without limiting the generality of the foregoing, you may not: (a) resell, lease, lend, share, distribute or otherwise permit any third party to use the Portal or the Services; (b) use the Portal or the Services for time-sharing or service bureau purposes; or (c) otherwise use the Portal or the Services in a manner that violates the Idle License or any other Open-Source Licenses.\n                    </li>\n                    <li>\n                      <strong>5.3. Trademarks</strong><br />\n                      Any of Idle’s product or service names, logos, and other marks used in the Portal or as a part of the Services, including Idle's name and logo are trademarks owned by Idle, its Affiliates or its applicable licensors. You may not copy, imitate or use them without Idle’s (or the applicable licensor’s) prior written consent.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'changes-suspension-termination'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    6. CHANGES; SUSPENSION; TERMINATION\n                  </Heading.h3>\n                  <ul className={styles.list}>\n                    <li>\n                      <strong>6.1. Changes to Services</strong><br />\n                      We may, at our sole discretion, from time to time and with or without prior notice to you, modify, suspend or disable, temporarily or permanently, the Services, in whole or in part, for any reason whatsoever, including, but not limited to, as a result of a security incident.\n                    </li>\n                    <li>\n                      <strong>6.2. No Liability</strong><br />\n                      We will not be liable for any losses suffered by you resulting from any modification to any Services or from any suspension or termination, for any reason, of your access to all or any portion of the Portal or the Services.\n                    </li>\n                    <li>\n                      <strong>6.3. Survival</strong><br />\n                      The following sections will survive any termination of your access to the Portal or the Services, regardless of the reasons for its expiration or termination, in addition to any other provision which by law or by its nature should survive: Sections 1, 4, 5, 6.3, and 7-14.\n                    </li>\n                  </ul>\n                </Box>\n\n                <Box id={'electronic-notices'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    7. ELECTRONIC NOTICES\n                  </Heading.h3>\n                  <Text py={2}>\n                    You consent to receive all communications, agreements, documents, receipts, notices, and disclosures electronically (collectively, our “Communications”) that we provide in connection with these Terms or any Services. You agree that we may provide our Communications to you by posting them on the Portal or by emailing them to you at the email address you provide in connection with using the Services, if any. You should maintain copies of our Communications by printing a paper copy or saving an electronic copy. You may also contact our support team to request additional electronic copies of our Communications by filing a support request at info@idle.finance.\n                  </Text>\n                </Box>\n\n                <Box id={'indemnification'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    8. INDEMNIFICATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    You will defend, indemnify, and hold harmless us, our Affiliates, and our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers and contractors (collectively, “Indemnified Parties”) from any claim, demand, lawsuit, action, proceeding, investigation, liability, damage, loss, cost or expense, including without limitation reasonable attorneys’ fees, arising out of or relating to (a) your use of, or conduct in connection with, the Portal, Services or Margin Tokens; (b) Ethereum Blockchain assets associated with your Ethereum Address; (c) any feedback or user content you provide to the Portal, if any; (d) your violation of these Terms; or (e) your infringement or misappropriation of the rights of any other person or entity. If you are obligated to indemnify any Indemnified Party, Idle (or, at its discretion, the applicable Indemnified Party) will have the right, in its sole discretion, to control any action or proceeding and to determine whether Idle wishes to settle, and if so, on what terms.\n                  </Text>\n                </Box>\n\n                <Box id={'disclosures-disclaimers'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    9. Disclosures; DISCLAIMERS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Idle is a developer of open-source software. Idle does not operate a digital asset exchange platform or execute peer-to-peer transactions through its Protocol and therefore has no oversight, involvement, or control with respect to your transactions, which are executed through third-party protocols and the Ethereum Blockchain.  The Protocol is an autonomous decentralized web protocol deployed to the Ethereum Blockchain that operates in a disintermediated fashion, and, as such, Idle does not participate in any of these transactions.  In each instance, when you interact with the Protocol, you are interacting with a smart contract that transfers your digital assets to a third-party protocol.\n                  </Text>\n                  <Text py={2}>\n                    [Under U.S. federal law, unless you are an “eligible contract participant” as defined in 7 U.S.C. § 1a(18), your transaction must settle within 28 days. Individuals who do not have more than $10 million invested on a discretionary basis (or $5 million if the transaction is for the purpose of managing risk associated with an asset owned or liability incurred, or reasonably likely to be owned or incurred) are not eligible contract participants and may not enter into transactions using the Idle open-source software that do not result in actual delivery of digital assets within 28 days.]\n                  </Text>\n                  <Text py={2}>\n                    You are responsible for complying with all laws and regulations applicable to your transactions, including, but not limited to, the Commodity Exchange Act and the regulations promulgated thereunder by the U.S. Commodity Futures Trading Commission (“CFTC”), and the federal securities laws and the regulations promulgated thereunder by the U.S. Securities and Exchange Commission (“SEC”).\n                  </Text>\n                  <Text py={2}>\n                    You understand that Idle is not registered or licensed by the CFTC, SEC, the Financial Crimes Enforcement Network or any financial regulatory authority. No financial regulatory authority has reviewed or approved the use of the Idle open-source software. This website and the Idle open-source software do not constitute advice or a recommendation concerning any commodity, security or other asset. Idle is not acting as an investment adviser or commodity trading adviser to any person.\n                  </Text>\n                  <Text py={2}>\n                    Idle does not own or control the underlying software protocols that enable the Protocol to function. In general, the underlying protocols are open-source and anyone can use, copy, modify, and distribute them. Idle is not responsible for operation of the underlying protocols, and Idle makes no guarantee of their functionality, security, or availability.\n                  </Text>\n                  <Text py={2}>\n                    To the maximum extent permitted under Applicable Law, the Portal and the Services (and any of their content or functionality) provided by or on behalf of us are provided on an “AS IS” and “AS AVAILABLE” basis, and we expressly disclaim, and you hereby waive, any representations, conditions or warranties of any kind, whether express or implied, legal, statutory or otherwise, or arising from statute, otherwise in law, course of dealing, or usage of trade, including, without limitation, the implied or legal warranties and conditions of merchantability, merchantable quality, quality or fitness for a particular purpose, title, security, availability, reliability, accuracy, quiet enjoyment and non-infringement of third party rights. Without limiting the foregoing, we do not represent or warrant that the Portal or the Services (including any data relating thereto) will be uninterrupted, available at any particular time or error-free. Further, we do not warrant that errors in the Portal or the Service are correctable or will be correctable.\n                  </Text>\n                  <Text py={2}>\n                    You acknowledge that your data on the Portal may become irretrievably lost or corrupted or temporarily unavailable due to a variety of causes, and agree that, to the maximum extent permitted under Applicable Law, we will not be liable for any loss or damage caused by denial-of-service attacks, software failures, viruses or other technologically harmful materials (including those which may infect your computer equipment), protocol changes by third party providers, Internet outages, force majeure events or other disasters, scheduled or unscheduled maintenance, or other causes either within or outside our control.\n                  </Text>\n                  <Text py={2}>\n                    The disclaimer of implied warranties contained herein may not apply if and to the extent such warranties cannot be excluded or limited under the Applicable Law of the jurisdiction in which you reside.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    10. EXCLUSION OF CONSEQUENTIAL AND RELATED DAMAGES\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall we (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) be liable for any incidental, indirect, special, punitive, consequential or similar damages or liabilities whatsoever (including, without limitation, damages for loss of data, information, revenue, goodwill, profits or other business or financial benefit) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any execution or settlement of a transaction, any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability, breach of warranties, or under any other theory of liability, and whether or not we have been advised of, knew of or should have known of the possibility of such damages and notwithstanding any failure of the essential purpose of these Terms or any limited remedy hereunder nor is Idle in any way responsible for the execution or settlement of transactions between users of Idle open-source software.\n                  </Text>\n                </Box>\n\n                <Box id={'exclusion-consequential-related-damages'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    11. LIMITATION OF LIABILITY\n                  </Heading.h3>\n                  <Text py={2}>\n                    In no event shall our aggregate liability (together with our Affiliates, including our and our Affiliates’ respective shareholders, members, directors, officers, employees, attorneys, agents, representatives, suppliers or contractors) arising out of or in connection with the Portal and the Services (and any of their content and functionality), any performance or non-performance of the Services, your Ether, Margin Tokens or any other product, service or other item provided by or on behalf of us, whether under contract, tort (including negligence), civil liability, statute, strict liability or other theory of liability exceed the amount of fees paid by you to us under these Terms, if any, in the twelve (12) month period immediately preceding the event giving rise to the claim for liability.\n                  </Text>\n                </Box>\n\n                <Box id={'dispute-resolution-arbitration'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    12. DISPUTE RESOLUTION AND ARBITRATION\n                  </Heading.h3>\n                  <Text py={2}>\n                    Please read the following section carefully because it requires you to arbitrate certain disputes and claims with Idle and limits the manner in which you can seek relief from us, unless you opt out of arbitration by following the instructions set forth below. In addition, arbitration precludes you from suing in court or having a jury trial.\n                    You and Idle agree that any dispute arising out of or related to these Terms or our Services is personal to you and Idle and that any dispute will be resolved solely through individual action, and will not be brought as a class arbitration, class action or any other type of representative proceeding.\n                  </Text>\n                  <Text py={2}>\n                    Except for small claims disputes in which you or Idle seeks to bring an individual action in small claims court located in the county of your billing address or disputes in which you or Idle seeks injunctive or other equitable relief for the alleged unlawful use of intellectual property, you and Idle waive your rights to a jury trial and to have any dispute arising out of or related to these Terms or our Services resolved in court. Instead, for any dispute or claim that you have against Idle or relating in any way to the Services, you agree to first contact Idle and attempt to resolve the claim informally by sending a written notice of your claim (“Notice”) to Idle by email at info@idle.finance or by certified mail addressed to info@idle.finance. The Notice must (a) include your name, residence address, email address, and telephone number; (b) describe the nature and basis of the claim; (c) set forth the specific relief sought. Our notice to you will be similar in form to that described above. If you and Idle cannot reach an agreement to resolve the claim within thirty (30) days after such Notice is received, then either party may submit the dispute to binding arbitration administered by JAMS or, under the limited circumstances set forth above, in court. All disputes submitted to JAMS will be resolved through confidential, binding arbitration before one arbitrator. Arbitration proceedings will be held in New York City, New York, in accordance with the JAMS Streamlined Arbitration Rules and Procedures (“JAMS Rules”). The most recent version of the JAMS Rules are available on the JAMS website and are hereby incorporated by reference. You either acknowledge and agree that you have read and understand the JAMS Rules or waive your opportunity to read the JAMS Rules and waive any claim that the JAMS Rules are unfair or should not apply for any reason.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that these Terms affect interstate commerce and that the enforceability of this Section 12 will be substantively and procedurally governed by the Federal Arbitration Act, 9 U.S.C. § 1, et seq. (the “FAA”), to the maximum extent permitted by applicable law. As limited by the FAA, these Terms and the JAMS Rules, the arbitrator will have exclusive authority to make all procedural and substantive decisions regarding any dispute and to grant any remedy that would otherwise be available in court, including the power to determine the question of arbitrability. The arbitrator may conduct only an individual arbitration and may not consolidate more than one individual’s claims, preside over any type of class or representative proceeding or preside over any proceeding involving more than one individual.\n                  </Text>\n                  <Text py={2}>\n                    The arbitrator, Idle, and you will maintain the confidentiality of any arbitration proceedings, judgments and awards, including, but not limited to, all information gathered, prepared and presented for purposes of the arbitration or related to the dispute(s) therein. The arbitrator will have the authority to make appropriate rulings to safeguard confidentiality, unless the law provides to the contrary. The duty of confidentiality does not apply to the extent that disclosure is necessary to prepare for or conduct the arbitration hearing on the merits, in connection with a court application for a preliminary remedy or in connection with a judicial challenge to an arbitration award or its enforcement, or to the extent that disclosure is otherwise required by law or judicial decision.\n                  </Text>\n                  <Text py={2}>\n                    You and Idle agree that for any arbitration you initiate, you will pay the filing fee and Idle will pay the remaining JAMS fees and costs. For any arbitration initiated by Idle, Idle will pay all JAMS fees and costs. You and Idle agree that the state or federal courts of the State of New York and the United States sitting in New York City, New York have exclusive jurisdiction over any appeals and the enforcement of an arbitration award.\n                  </Text>\n                  <Text py={2}>\n                    Any claim arising out of or related to these Terms or our Services must be filed within one year after such claim arose; otherwise, the claim is permanently barred, which means that you and Idle will not have the right to assert the claim.\n                  </Text>\n                  <Text py={2}>\n                    You have the right to opt out of binding arbitration within 30 days of the date you first accepted the terms of this Section 12 by emailing us at info@idle.finance. In order to be effective, the opt-out notice must include your full name and address and clearly indicate your intent to opt out of binding arbitration. By opting out of binding arbitration, you are agreeing to resolve disputes in accordance with Section 13.\n                  </Text>\n                  <Text py={2}>\n                    If any portion of this Section 12 is found to be unenforceable or unlawful for any reason, (a) the unenforceable or unlawful provision shall be severed from these Terms; (b) severance of the unenforceable or unlawful provision shall have no impact whatsoever on the remainder of this Section 12 or the parties’ ability to compel arbitration of any remaining claims on an individual basis pursuant to this Section 12; and (c) to the extent that any claims must therefore proceed on a class, collective, consolidated, or representative basis, such claims must be litigated in a civil court of competent jurisdiction and not in arbitration, and the parties agree that litigation of those claims shall be stayed pending the outcome of any individual claims in arbitration. Further, if any part of this Section 12 is found to prohibit an individual claim seeking public injunctive relief, that provision will have no effect to the extent such relief is allowed to be sought out of arbitration, and the remainder of this Section 12 will be enforceable.\n                  </Text>\n                </Box>\n\n                <Box id={'governing-law'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    13. GOVERNING LAW\n                  </Heading.h3>\n                  <Text py={2}>\n                    The interpretation and enforcement of these Terms, and any dispute related to these Terms, the Portal or the Services, will be governed by and construed and enforced in accordance with the laws of the State of Delaware, as applicable, without regard to conflict of law rules or principles (whether of the State of Delaware or any other jurisdiction) that would cause the application of the laws of any other jurisdiction. You agree that we may initiate a proceeding related to the enforcement or validity of our intellectual property rights in any court having jurisdiction. With respect to any other proceeding that is not subject to arbitration under these Terms, the state and federal courts located in Wilmington, Delaware, will have exclusive jurisdiction. You waive any objection to venue in any such courts.\n                  </Text>\n                </Box>\n\n                <Box id={'miscellaneous'} py={[2,3]}>\n                  <Heading.h3 color={'dark-gray'} textAlign={'left'} fontWeight={4} lineHeight={'initial'} fontSize={[3,4]}>\n                    14. MISCELLANEOUS\n                  </Heading.h3>\n                  <Text py={2}>\n                    Any right or remedy of Idle set forth in these Terms is in addition to, and not in lieu of, any other right or remedy whether described in these Terms, under Applicable Law, at law or in equity. Our failure or delay in exercising any right, power, or privilege under these Terms shall not operate as a waiver thereof. The invalidity or unenforceability of any of these Terms shall not affect the validity or enforceability of any other of these Terms, all of which shall remain in full force and effect. We will have no responsibility or liability for any failure or delay in performance of the Portal or any of the Services, or any loss or damage that you may incur, due to any circumstance or event beyond our control, including without limitation any flood, extraordinary weather conditions, earthquake, or other act of God, fire, war, insurrection, riot, labor dispute, accident, action of government, communications, power failure, or equipment or software malfunction. You may not assign or transfer any right to use the Portal or the Services, or any of your rights or obligations under these Terms, without our express prior written consent, including by operation of law or in connection with any change of control. We may assign or transfer any or all of our rights or obligations under these Terms, in whole or in part, without notice or obtaining your consent or approval. Headings of sections are for convenience only and shall not be used to limit or construe such sections. These Terms contain the entire agreement and supersede all prior and contemporaneous understandings between the parties regarding the Portal and the Services. In the event of any conflict between these Terms and any other agreement you may have with us, these Terms will control unless the other agreement specifically identifies these Terms and declares that the other agreement supersedes these Terms.\n                  </Text>\n                </Box>\n\n              </Box>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default Tos;\n","import baseColors, { blue, green, yellow, red } from \"./colors\";\nimport { tint, shade } from 'polished';\n\n// theme.js\nexport default {\n  breakpoints: ['52em', '64em'],\n  // breakpoints: ['40em', '52em', '64em', '80em'],\n  fontSizes: [12, 14, 16, 18, 21, 32, 38, 48, 54, 64, 72, 84],\n  fontWeights: [0, 300, 400, 600, 700, 800],\n  letterSpacings: [0, 1, 2, 4, 8],\n  lineHeights: {\n    solid: 1,\n    title: 1.25,\n    copy: 1.4\n  },\n  fonts: {\n    serif: '\"georgia regular\", athelas, times, serif',\n    sansSerif: '\"Inter\", -apple-system, sans-serif',\n    counter: '\"Roboto Mono\", Arial, -apple-system, sans-serif'\n  },\n  space: [0, 4, 8, 16, 32, 64, 128, 256],\n  radii: ['0', '4px', '8px', '16px', '2rem'],\n  width: [0, 16, 32, 64, 128, 256],\n  minWidths: [0, 16, 32, 64, 128, 256],\n  maxWidths: [0, 16, 32, 64, 128, 256, 512, 768, 1024, 1536],\n  heights: [0, 16, 32, 64, 128, 256],\n  minHeights: [0, 16, 32, 64, 128, 256],\n  maxHeights: [0, 16, 32, 64, 128, 256],\n  borders: [0, '1px solid #0d2034', '1px solid #475d7c'],\n  borderWidths: ['0', '1px', '2px', '4px'],\n  shadows: [\n    '0',\n    '0px 2px 4px rgba(0, 0, 0, 0.1)',\n    '0 7px 14px rgba(50,50,93,.1)',\n    '1px 1px 0px rgba(0,0,0,0.2)',\n    '0px 0px 16px 2px rgb(71,93,123,0.6)'\n  ],\n  opacity: {\n    disabled: 0.4,\n  },\n  colors: {\n    primary: '#fcfcfc',\n    'gradient-bg': 'linear-gradient(120deg, #f6d365 0%, #ea0d73 100%)',\n    'primary-light': blue.light[1],\n    'primary-dark': blue.dark[1],\n    bgBlue: '#0030e0',\n    blue: '#0036ff',\n    tick: \"#00b84a\",\n    'dark-blue': '#00219a',\n    skyBlue: '#00abfe',\n    lightBlue: '#79f4e1',\n    copyColor: '#fcfcfc',\n    subColor: '#a7a7a7',\n    black: baseColors.black,\n    'near-black': '#1e3657',\n    'dark-gray': '#fcfcfc',\n    'mid-gray': '#999',\n    gray: ' #e0e0e0',\n    grey: '#CCC',\n    silver: '#999',\n    'light-silver': '#aaa',\n    'moon-gray': '#ccc',\n    'light-gray': '#eee',\n    'near-white': '#a4aec6',\n    white: '#fff',\n    transparent: 'transparent',\n    green: '#00b84a',\n    /*\n    NEW COLORS\n    */\n    text: \"#C6CBD2\",\n    border: \"#546278\",\n    newblue: \"#2B65D9\",\n    alert: '#ff9900',\n    arrowActive: '#d8d8d8',\n    arrowInactive: '#4f4f4f',\n    selectBgFocused: '#1e3657',\n    selectBg: '#162e4d',\n    backButtonBg: '#162e4d',\n    lineChartStroke: '#a4aec6',\n    wrongNetworkBannerBg: '#0e2133',\n    dashboardBg: '#13273f',\n    statValue: '#a4aec6',\n    boxBorder: '#eeeeee',\n    cellTitle: '#a4aec6',\n    cellText: '#a4aec6',\n    divider: '#a4aec6',\n    counter: '#a4aec6',\n    redeem: '#00a9fe',\n    link: '#00a9fe',\n    deposit: '#0239ff',\n    migrate: '#00a9fe',\n    legend: '#c9c9c9',\n    cardBg: '#162e4d',\n    menuBg: '#162e4d',\n    menuHover: '#1e3657',\n    flashColor: '#bac5ff',\n    cardBgHover: '#1e3657',\n    cardBorder: '#0d2034',\n    pageActive: '#d8d8d8',\n    pageInactive: '#4f4f4f',\n    menuIconActive: '#2a65d9',\n    cardBgContrast: \"#1e3657\",\n    menuRightBorder: '#0d2034',\n    experimental: \"#8500ff\",\n    production: \"#00b84a\",\n    cardHoverShadow: '0px 0px 0px 1px rgb(45 74 114)',\n    transactions: {\n      action: {\n        send: '#10a0dd',\n        swap: '#3d53c0',\n        exit: '#10a0dd',\n        boost: '#ffff00',\n        redeem: '#10a0dd',\n        swapout: '#10a0dd',\n        deposit: '#3d53c0',\n        curvein: '#10a0dd',\n        receive: '#3d53c0',\n        migrate: '#3d53c0',\n        default: '#4f4f4f',\n        curveout: '#3d53c0',\n        withdraw: '#10a0dd',\n        curvedepositin: '#10a0dd',\n        curvedepositout: '#3d53c0'\n      },\n      actionBg: {\n        send: '#ceeff6',\n        swap: '#ced6ff',\n        exit: '#ceeff6',\n        boost: '#ff7979',\n        redeem: '#ceeff6',\n        swapout: '#ceeff6',\n        deposit: '#ced6ff',\n        curvein: '#ceeff6',\n        default: '#dadada',\n        receive: '#ced6ff',\n        migrate: '#ced6ff',\n        withdraw: '#ceeff6',\n        curveout: '#ced6ff',\n        curvedepositin: '#ceeff6',\n        curvedepositout: '#ced6ff'\n      },\n      status: {\n        completed: '#00b84a',\n        pending: '#a5a5a5',\n        failed: '#fa0000'\n      }\n    },\n    blacks: [\n      'rgba(0,0,0,.0125)',\n      'rgba(0,0,0,.025)',\n      'rgba(0,0,0,.05)',\n      'rgba(0,0,0,.1)',\n      'rgba(0,0,0,.2)',\n      'rgba(0,0,0,.3)',\n      'rgba(0,0,0,.4)',\n      'rgba(0,0,0,.5)',\n      'rgba(0,0,0,.6)',\n      'rgba(0,0,0,.7)',\n      'rgba(0,0,0,.8)',\n      'rgba(0,0,0,.9)',\n    ],\n    whites: [\n      'rgba(255,255,255,.0125)',\n      'rgba(255,255,255,.025)',\n      'rgba(255,255,255,.05)',\n      'rgba(255,255,255,.1)',\n      'rgba(255,255,255,.2)',\n      'rgba(255,255,255,.3)',\n      'rgba(255,255,255,.4)',\n      'rgba(255,255,255,.5)',\n      'rgba(255,255,255,.6)',\n      'rgba(255,255,255,.7)',\n      'rgba(255,255,255,.8)',\n      'rgba(255,255,255,.9)',\n    ],\n  },\n  zIndices: [0, 9, 99, 999, 9999],\n  messageStyle: {\n    base: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n    success: {\n      color: shade(0.4, green.base),\n      backgroundColor: tint(0.9, green.base),\n      borderColor: green.base,\n    },\n    warning: {\n      color: shade(0.4, yellow.base),\n      backgroundColor: tint(0.9, yellow.base),\n      borderColor: yellow.base,\n    },\n    danger: {\n      color: shade(0.4, red.base),\n      backgroundColor: tint(0.9, red.base),\n      borderColor: red.base,\n    },\n    info: {\n      color: '#fcfcfc',\n      borderColor: '#0d2034',\n      backgroundColor: '#162e4d',\n    },\n  },\n  buttons: {\n    primary: {\n      color: blue.text,\n      backgroundColor: blue.base,\n      // use css custom props\n      '--main-color': blue.base,\n      '--contrast-color': blue.text,\n    },\n    normal: {\n      color: baseColors.black,\n      '--contrast-color': baseColors.black,\n    },\n    success: {\n      '--main-color': green.base,\n      '--contrast-color': green.text,\n    },\n    danger: {\n      '--main-color': red.base,\n      '--contrast-color': red.text,\n    },\n  },\n  buttonSizes: {\n    small: {\n      fontSize: '0.75rem',\n      height: '2rem',\n      minWidth: '2rem',\n      padding: '0 1rem',\n    },\n    medium: {\n      fontSize: '1rem',\n      height: '3rem',\n      minWidth: '3rem',\n    },\n    large: {\n      fontSize: '1.5rem',\n      height: '4rem',\n      minWidth: '4rem',\n      borderRadius: '2rem'\n    },\n  },\n};\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class TorusConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Torus, initParams, ...rest } = kwargs;\n    super(rest);\n\n    this.torus = null;\n    this.Torus = Torus;\n    this.initParams = initParams;\n  }\n\n  async onActivation() {\n    if (!this.torus) {\n      this.torus = new this.Torus({\n        buttonPosition: \"bottom-right\" // default: bottom-left\n      });\n    }\n    await this.torus.init();\n    await this.torus.login();\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.torus.provider);\n    });\n  }\n\n  async getAccount(provider) {\n    const userInfo = await this.torus.getUserInfo();\n    if (userInfo){\n      return await this.torus.getPublicAddress({\n        verifier:userInfo.verifier,\n        verifierId:userInfo.verifierId\n      });\n    }\n    return null;\n  }\n\n  async onDeactivation() {\n    await this.torus.logout();\n  }\n\n  changeNetwork(network) {\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class AuthereumConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: Authereum, network, ...rest } = kwargs;\n    super(rest);\n\n    this.authereum = null;\n    this.Authereum = Authereum;\n    this.network = network;\n  }\n\n  async onActivation() {\n    if (!this.authereum) {\n      this.authereum = new this.Authereum(this.network);\n    }\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  async getProvider(){\n    return new Promise( async (resolve, reject) => {\n      resolve(this.authereum.getProvider());\n    });\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      const accounts = await provider.getAccounts();\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = await this.getProvider();\n    if (provider){\n      await provider.disable();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      api: this.Authereum,\n      network\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class GnosisSafeConnector extends Connector {\n\n  constructor(SafeAppConnector) {\n    super(...arguments);\n    this.safeLoaded = false;\n    this.SafeAppConnector = SafeAppConnector;\n    this.provider = new this.SafeAppConnector();\n    this.checkSafeApp();\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.SafeAppConnector();\n    }\n\n    if (this.provider){\n      await this.provider.activate();\n      return this.provider;\n    }\n  }\n\n  async getAccount() {\n    if (this.provider){\n      return await this.provider.getAccount();\n    }\n  }\n\n  async getProvider(){\n    if (this.provider){\n      return await this.provider.getProvider();\n    }\n  }\n\n  async getSafeInfo() {\n    if (this.provider){\n      return await this.provider.getSafeInfo();\n    }\n  }\n\n  async getChainId() {\n    if (this.provider){\n      return await this.provider.getChainId();\n    }\n  }\n\n  async checkSafeApp() {\n    if (this.provider){\n      const isSafeApp = await this.provider.isSafeApp();\n      this.safeLoaded = true;\n      return isSafeApp;\n    }\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.deactivate();\n      return this.provider;\n    }\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletLinkConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletLink, appName, infuraUrl, chainId, appLogoUrl, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.walletLink = null;\n    this.appName = appName;\n    this.chainId = chainId;\n    this.infuraUrl = infuraUrl;\n    this.appLogoUrl = appLogoUrl;\n    this.WalletLink = WalletLink;\n  }\n\n  async onActivation() {\n    if (!this.walletLink){\n      this.walletLink = new this.WalletLink({\n        darkMode: false,\n        appName: this.appName,\n        infuraUrl: this.infuraUrl,\n        appLogoUrl: this.appLogoUrl,\n      });\n    }\n\n    const provider = this.getProvider();\n    if (provider){\n      await provider.enable();\n      return provider;\n    }\n  }\n\n  getProvider(){\n    if (!this.provider){\n      this.provider = this.walletLink.makeWeb3Provider(this.infuraUrl, this.chainId);\n    }\n    return this.provider;\n  }\n\n  async getAccount(provider) {\n    if (provider){\n      // Use eth_RequestAccounts\n      const accounts = await provider.send('eth_requestAccounts');\n      if (accounts && accounts.length){\n        return accounts[0];\n      }\n    }\n    return null;\n  }\n\n  async disable() {\n    const provider = this.getProvider();\n    if (provider){\n      this.walletLink.disconnect();\n      await provider.close();\n      return provider;\n    }\n  }\n\n  changeNetwork(network) {\n    this.constructor({\n      network,\n      api: this.WalletLink,\n      appName: this.appName,\n      chainId: this.chainId,\n      infuraUrl: this.infuraUrl,\n      appLogoUrl: this.appLogoUrl,\n    })\n    super._web3ReactUpdateHandler({ updateNetworkId: true })\n  }\n}\n","import Connector from 'web3-react/dist/connectors/connector';\n\nexport default class WalletConnectConnector extends Connector {\n\n  constructor(kwargs) {\n    const { api: WalletConnectProvider, defaultNetwork, infuraId, ...rest } = kwargs;\n    super(rest);\n\n    this.provider = null;\n    this.WalletConnectProvider = WalletConnectProvider;\n    this.infuraId = infuraId;\n  }\n\n  async onActivation() {\n    if (!this.provider) {\n      this.provider = new this.WalletConnectProvider({\n        infuraId:this.infuraId\n      });\n    }\n\n    if (this.provider){\n      await this.provider.enable();\n      return this.provider;\n    }\n  }\n\n  async getProvider(){\n    return this.provider;\n  }\n\n  async disable() {\n    if (this.provider){\n      this.provider.close();\n      return this.provider;\n    }\n  }\n}\n","import WalletLink from 'walletlink';\nimport AuthereumApi from 'authereum';\nimport PortisApi from \"@portis/web3\";\nimport FortmaticApi from \"fortmatic\";\nimport TrezorApi from \"trezor-connect\";\nimport { Connectors } from \"web3-react\";\nimport TorusApi from '@toruslabs/torus-embed';\nimport globalConfigs from '../configs/globalConfigs';\nimport TorusConnector from './connectors/TorusConnector';\nimport AuthereumConnector from './connectors/AuthereumConnector';\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport GnosisSafeConnector from './connectors/GnosisSafeConnector';\nimport WalletLinkConnector from './connectors/WalletLinkConnector';\nimport { SafeAppConnector } from '@gnosis.pm/safe-apps-web3-react';\nimport WalletConnectConnector from './connectors/WalletConnectConnector';\n\nconst {\n  InjectedConnector,\n  NetworkOnlyConnector,\n  TrezorConnector,\n  LedgerConnector,\n  FortmaticConnector,\n  PortisConnector\n} = Connectors;\n\nconst env = process.env;\n\nconst manifestEmail = env.REACT_APP_TREZOR_MANIFEST_EMAIL; // trezor\nconst manifestAppUrl = env.REACT_APP_TREZOR_MANIFEST_URL; // trezor\nconst defaultNetwork = globalConfigs.network.requiredNetwork;\nconst fortmaticApiKey = env.REACT_APP_FORTMATIC_KEY_MAINNET;\nconst portisDAppId = env.REACT_APP_PORTIS_DAPP_ID;\nconst portisNetwork = env.REACT_APP_PORTIS_NETWORK;\n\nconst supportedNetworkURLs = {};\n  \nObject.keys(globalConfigs.network.providers.infura.rpc).forEach((networkId,index) => {\n  networkId = parseInt(networkId);\n  supportedNetworkURLs[networkId] = globalConfigs.network.providers.infura.rpc[networkId]+env.REACT_APP_INFURA_KEY;\n});\n\nconst Injected = new InjectedConnector({\n  supportedNetworks: globalConfigs.network.enabledNetworks\n});\n\nconst Infura = new NetworkOnlyConnector({\n  providerURL: supportedNetworkURLs[defaultNetwork]\n});\n\n\nconst Trezor = new TrezorConnector({\n  api: TrezorApi,\n  supportedNetworkURLs,\n  defaultNetwork,\n  manifestEmail,\n  manifestAppUrl\n});\n\nconst Ledger = new LedgerConnector({\n  supportedNetworkURLs,\n  defaultNetwork\n});\n\nconst WalletConnect = new WalletConnectConnector({\n  defaultNetwork,\n  supportedNetworkURLs,\n  api: WalletConnectProvider,\n  infuraId:env.REACT_APP_INFURA_KEY,\n  bridge: \"https://bridge.walletconnect.org\",\n});\n\nconst Fortmatic = new FortmaticConnector({\n  api: FortmaticApi,\n  apiKey: fortmaticApiKey,\n  logoutOnDeactivation: false\n});\n\nconst Portis = new PortisConnector({\n  api: PortisApi,\n  dAppId: portisDAppId,\n  network: portisNetwork\n});\n\nconst Authereum = new AuthereumConnector({\n  api: AuthereumApi,\n  network: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase()\n});\n\nconst walletLink = new WalletLinkConnector({\n  api: WalletLink,\n  darkMode: false,\n  chainId: defaultNetwork,\n  appName: globalConfigs.appName,\n  infuraUrl: supportedNetworkURLs[defaultNetwork],\n  appLogoUrl: 'https://idle.finance/images/idle-mark.png',\n});\n\nconst Torus = new TorusConnector({\n  api: TorusApi,\n  initParams:{\n    buildEnv: 'production', // default: production\n    enableLogging: false, // default: false\n    network: {\n      host: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase(), // default: mainnet\n      chainId: defaultNetwork, // default: 1\n      networkName: globalConfigs.network.availableNetworks[defaultNetwork].name.toLowerCase() // default: Main Ethereum Network\n    },\n    showTorusButton: false // default: true\n  }\n});\n\nconst gnosis = new GnosisSafeConnector(SafeAppConnector);\n\nexport default {\n  Injected,\n  Infura,\n  WalletConnect,\n  gnosis,\n  walletLink,\n  Fortmatic,\n  Portis,\n  Authereum,\n  Torus,\n  Trezor,\n  Ledger,\n};","import moment from 'moment';\nimport { id as keccak256 } from 'ethers/utils/hash';\n\nclass Multicall {\n  web3 = null;\n  multiCalls = {};\n  multiCallsMax = 35;\n  multiCallsStats = {\n    endDate:null,\n    startDate:null,\n    arrivedCount:0,\n    rejectedCount:0,\n    requestsTimes:{},\n    missingHashes:{},\n    processedCount:0,\n    resolvedHashes:{},\n    rejectedHashes:{},\n    totalElapsedTime:0,\n    maxProcessingBatches:0\n  };\n  processingBatches = 0;\n  selectedNetwork = null;\n  networksContracts = {\n    1:'0xeefba1e63905ef1d7acba5a8513c70307c1ce441',\n    137:'0x11ce4B23bD875D7F5C6a31084f55fDe1e9A87507'\n  };\n  multiCallsBatchId = 0;\n  multiCallsResults = {};\n  multiCallsTimeoutIds = {};\n  maxProcessingBatches = null;\n  multiCallsExecutionInterval = 500;\n\n  timeLog = (...props) => { console.log(moment().format('HH:mm:ss'), ...props); }\n\n  constructor(selectedNetwork=null,web3=null,multiCallsMax=null,multiCallsExecutionInterval=null) {\n    if (selectedNetwork){\n      this.setNetwork(selectedNetwork);\n    }\n    if (web3){\n      this.setWeb3(web3);\n    }\n    if (multiCallsMax){\n      this.multiCallsMax = multiCallsMax;\n    }\n    if (multiCallsExecutionInterval){\n      this.multiCallsExecutionInterval = multiCallsExecutionInterval;\n    }\n  }\n\n  clear(){\n    this.multiCalls = {};\n    this.multiCallsStats = {\n      endDate:null,\n      startDate:null,\n      arrivedCount:0,\n      rejectedCount:0,\n      requestsTimes:{},\n      missingHashes:{},\n      processedCount:0,\n      resolvedHashes:{},\n      rejectedHashes:{},\n      totalElapsedTime:0,\n      maxProcessingBatches:0\n    };\n    this.processingBatches = 0;\n    this.multiCallsBatchId = 0;\n    this.multiCallsResults = {};\n    this.multiCallsTimeoutIds = {};\n    this.maxProcessingBatches = null;\n  }\n\n  setNetwork(selectedNetwork){\n    this.selectedNetwork = selectedNetwork;\n  }\n\n  setWeb3(web3) {\n    this.web3 = web3;\n  }\n\n  makeMulticall = async (callData) => {\n    const callBatchId = this.multiCallsBatchId;\n    const callDataHash = JSON.stringify(callData);\n\n    // Skip rejected calls for more than 2 times\n    if (this.checkRejectedHash(callDataHash)>=1){\n      return 'REJECTED';\n    }\n\n    if (!this.multiCalls[this.multiCallsBatchId]){\n      this.multiCalls[this.multiCallsBatchId] = {};\n    }\n    this.multiCalls[this.multiCallsBatchId][callDataHash] = callData;\n\n    this.multiCallsStats.arrivedCount++;\n\n    if (!this.multiCallsStats.missingHashes[this.multiCallsBatchId]){\n      this.multiCallsStats.missingHashes[this.multiCallsBatchId] = {};\n    }\n    this.multiCallsStats.missingHashes[this.multiCallsBatchId][callDataHash] = this.multiCallsBatchId;\n\n    // this.timeLog('makeMulticall',this.multiCallsBatchId,callDataHash);\n\n    if (!this.multiCallsTimeoutIds[this.multiCallsBatchId]){\n      this.multiCallsTimeoutIds[this.multiCallsBatchId] = 0;\n    }\n\n    window.clearTimeout(this.multiCallsTimeoutIds[callBatchId]);\n    if (Object.values(this.multiCalls[callBatchId]).length>=this.multiCallsMax){\n      this.multiCallsBatchId++;\n      this.executeBatch(callBatchId);\n    } else {\n      this.multiCallsTimeoutIds[callBatchId] = setTimeout(() => {\n        this.multiCallsBatchId++;\n        this.executeBatch(callBatchId);\n      },this.multiCallsExecutionInterval);\n    }\n\n    const checkMulticallData = async (batchId,resultHash) => {\n      return new Promise( (resolve, reject) => {\n        const attempt = (count=0,maxCount=2000) => {\n\n          const maxCountReached = maxCount && count>=maxCount;\n          const resultIsDefined = this.multiCallsResults[batchId] && typeof this.multiCallsResults[batchId][resultHash] !== 'undefined';\n\n          if (resultIsDefined || maxCountReached){\n\n            // Force rejected response\n            if (maxCountReached && !resultIsDefined){\n              if (!this.multiCallsResults[batchId]){\n                this.multiCallsResults[batchId] = {};\n              }\n              this.multiCallsResults[batchId][resultHash] = 'REJECTED';\n            }\n\n            // Handle rejection\n            if (this.multiCallsResults[batchId][resultHash] === 'REJECTED'){\n              // this.timeLog('REJECTED',batchId,resultHash);\n\n              // Add hash to rejected hashes\n              this.addRejectedHash(resultHash);\n\n              resolve('REJECTED');\n            } else {\n              // this.timeLog('RESOLVED',batchId,resultHash);\n              this.addResolvedHash(resultHash);\n              resolve(this.multiCallsResults[batchId][resultHash]);\n            }\n\n            // Increment processed count\n            this.multiCallsStats.processedCount++;\n\n            // Remove hash from missing hashes\n            delete this.multiCallsStats.missingHashes[batchId][resultHash];\n          } else {\n            // this.timeLog('checkMulticallData_NOT-FOUND',resultHash);\n            window.setTimeout(()=>{\n              attempt(count+1);\n            },10);\n          }\n        }\n\n        attempt(0);\n      });\n    }\n\n    const data = await checkMulticallData(callBatchId,callDataHash);\n    return data;\n  }\n\n  checkResolvedHash = (callHash) => {\n    return !!this.multiCallsStats.resolvedHashes[callHash];\n  }\n\n  checkRejectedHash = (callHash) => {\n    return this.multiCallsStats.rejectedHashes[callHash] || false;\n  }\n\n  addResolvedHash = (callHash) => {\n    if (!this.multiCallsStats.resolvedHashes[callHash]){\n      this.multiCallsStats.resolvedHashes[callHash] = 0;\n    }\n    this.multiCallsStats.resolvedHashes[callHash]++;\n\n    if (this.checkRejectedHash(callHash)){\n      delete this.multiCallsStats.rejectedHashes[callHash];\n    }\n  }\n\n  addRejectedHash = (callHash,checkResolved=true) => {\n    if (checkResolved && this.checkResolvedHash(callHash)){\n      return false;\n    }\n    if (!this.multiCallsStats.rejectedHashes[callHash]){\n      this.multiCallsStats.rejectedHashes[callHash] = 0;\n    }\n    this.multiCallsStats.rejectedCount++;\n    this.multiCallsStats.rejectedHashes[callHash]++;\n  }\n\n  executeBatch = async (executeBatchId) => {\n\n    const asyncTimeout = (ms) => {\n      return new Promise(resolve => setTimeout(resolve, ms));\n    }\n\n    if (!this.web3 || !this.selectedNetwork || (this.maxProcessingBatches && this.processingBatches>=this.maxProcessingBatches)){\n      await asyncTimeout(10);\n      return await this.executeBatch(executeBatchId);\n    }\n\n    this.processingBatches++;\n\n    // Take maximum processing batches\n    this.multiCallsStats.maxProcessingBatches = Math.max(this.multiCallsStats.maxProcessingBatches,this.processingBatches);\n    \n    // this.timeLog('executeBatch_START',executeBatchId,this.processingBatches,this.multiCalls[executeBatchId]);\n\n    if (!this.multiCallsStats.startDate){\n      this.multiCallsStats.startDate = new Date();\n    }\n\n    const startDate = new Date();\n    const timeStart = parseFloat(Date.now()/1000);\n    const results = await this.executeMulticalls(Object.values(this.multiCalls[executeBatchId]),this.web3);\n\n    const endDate = new Date();\n    const hashes = Object.keys(this.multiCalls[executeBatchId]);\n    const elapsedTime = parseFloat(Date.now()/1000)-timeStart;\n    const requestsCount = Object.values(this.multiCalls[executeBatchId]).length;\n    const avgResolveTime = elapsedTime/requestsCount;\n    const status = results ? 'RESOLVED' : 'REJECTED';\n\n    this.multiCallsStats.requestsTimes[executeBatchId] = {\n      hashes,\n      status,\n      elapsedTime,\n      requestsCount,\n      avgResolveTime,\n      startDate,\n      endDate,\n    };\n\n    this.multiCallsResults[executeBatchId] = {};\n    \n    if (results) {\n      results.forEach( (r,i) => {\n        const callDataHash = Object.keys(this.multiCalls[executeBatchId])[i];\n        this.multiCallsResults[executeBatchId][callDataHash] = r;\n        // this.timeLog('SAVE',executeBatchId,callDataHash,this.multiCallsResults[executeBatchId][callDataHash]);\n      });\n      // delete this.multiCalls[executeBatchId][callDataHash];\n    } else {\n      Object.keys(this.multiCalls[executeBatchId]).forEach( callDataHash => {\n        this.multiCallsResults[executeBatchId][callDataHash] = 'REJECTED';\n      });\n      // delete this.multiCalls[executeBatchId];\n    }\n\n    this.processingBatches--;\n    if (this.processingBatches<0){\n      this.processingBatches = 0;\n    }\n\n    this.multiCallsStats.endDate = new Date();\n    this.multiCallsStats.totalElapsedTime = parseFloat(this.multiCallsStats.endDate.getTime()/1000)-parseFloat(this.multiCallsStats.startDate.getTime()/1000);\n\n    // delete this.multiCalls[executeBatchId];\n    // this.timeLog('executeBatch_END',executeBatchId,this.processingBatches,this.multiCalls[executeBatchId],results);\n  }\n\n  prepareMulticallData = (calls,web3=null) => {\n\n    web3 = this.web3 || web3;\n\n    if (!web3){\n      return false;\n    }\n\n    const strip0x = (str) => {\n      return str.replace(/^0x/, '');\n    }\n\n    // this.timeLog('prepareMulticallData',this.web3,this.props);\n\n    const values = [\n      calls.map(({ target, method, args, returnTypes }) => [\n        target,\n        keccak256(method).substr(0, 10) +\n          (args && args.length > 0\n            ? strip0x(web3.eth.abi.encodeParameters(args.map(a => a[1]), args.map(a => a[0])))\n            : '')\n      ])\n    ];\n    const calldata = web3.eth.abi.encodeParameters(\n      [\n        {\n          components: [{ type: 'address' }, { type: 'bytes' }],\n          name: 'data',\n          type: 'tuple[]'\n        }\n      ],\n      values\n    );\n\n    return '0x252dba42'+strip0x(calldata);\n  }\n\n  executeMulticalls = async (calls,web3=null) => {\n\n    web3 = this.web3 || web3;\n\n    const calldata = this.prepareMulticallData(calls,web3);\n\n    if (!calldata){\n      return null;\n    }\n\n    const contractAddress = this.networksContracts[this.selectedNetwork];\n\n    try {\n      const results = await web3.eth.call({\n        data: calldata,\n        to:contractAddress\n      });\n      const decodedParams = web3.eth.abi.decodeParameters(['uint256', 'bytes[]'], results);\n\n      // this.timeLog('makeMulticall',calls,results,decodedParams);\n\n      if (decodedParams && typeof decodedParams[1] !== 'undefined'){\n        return decodedParams[1].map( (d,i) => {\n          const returnTypes = calls[i].returnTypes;\n          const returnFields = calls[i].returnFields;\n          const output = Object.values(web3.eth.abi.decodeParameters(returnTypes,d));\n          if (returnTypes.length === 1){\n            return output[0];\n          }\n          const values = output.splice(0,returnTypes.length);\n          return values.reduce( (acc,v,j) => {\n            acc[j] = v;\n            acc[returnFields[j]] = v;\n            return acc;\n          },{});\n        });\n      }\n    } catch (err) {\n      // this.timeLog('makeMulticall',err);\n      return null;\n    }\n\n    return null;\n  }\n}\n\nexport default Multicall;","import React from \"react\";\nimport { Box, Flex, Text, Icon } from \"rimble-ui\";\n\nclass WrongNetworkBanner extends React.Component {\n  render() {\n    const bannerStyle = {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      right: 0,\n      width: \"100%\",\n      zIndex: 9999\n    };\n\n    return (\n      <Box style={bannerStyle} backgroundColor={'wrongNetworkBannerBg'} p={3}>\n        <Flex alignItems={\"center\"}>\n          <Box p={4}>\n            <Icon name=\"Warning\" color=\"gold\" size=\"30\" />\n          </Box>\n          <Flex flexDirection={\"column\"}>\n            <Text fontWeight={\"bold\"}>\n              Looks like you're on the wrong network\n            </Text>\n            <Text>\n              The network you are currently connected{\" \"}\n              <Text.span style={{ textTransform: \"capitalize\" }}>\n                ({this.props.network.current.name})\n              </Text.span>{\" \"}\n              is not supported - please switch to the correct network.\n            </Text>\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default WrongNetworkBanner;\n","import React from \"react\";\n\nimport WrongNetworkBanner from \"./components/WrongNetworkBanner\";\n\nclass NetworkUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        { this.props.network.isSupportedNetwork === false && this.props.web3 &&\n          <WrongNetworkBanner\n            network={this.props.network}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nexport default NetworkUtil;\n","import React from \"react\";\nimport { Box, Heading, Text, Modal, Link } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport RimbleUtil from \"@rimble/utils\";\n\nclass NoWeb3BrowserModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2\n          fontSize={4}\n          fontWeight={3}\n          lineHeight={\"1.375em\"}\n          my={3}\n        >\n          Switch browsers to use the Idle App\n        </Heading.h2>\n\n        {RimbleUtil.isMobileDevice() ? (\n          <Text my={4}>\n            You can't use our blockchain features, like increasing the count\n            value, in this browser. We recommend using{\" \"}\n            <Link\n              href=\"https://status.im/\"\n              title=\"status.im website\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Status\n            </Link>\n            ,{\" \"}\n            <Link\n              href=\"https://www.cipherbrowser.com/\"\n              title=\"Cipher Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Cipher\n            </Link>{\" \"}\n            or{\" \"}\n            <Link\n              href=\"https://wallet.coinbase.com/\"\n              title=\"Coinbase Wallet\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              Coinbase wallet\n            </Link>{\" \"}\n            browsers.\n          </Text>\n        ) : (\n          <Box>\n            <Text my={4}>\n              You can't use our blockchain features, like increasing the\n              count value, in this browser. Switch to{\" \"}\n              <Link\n                href=\"https://brave.com/download/\"\n                title=\"Download Brave browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Brave\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.mozilla.org/\"\n                title=\"Download FireFox browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                FireFox\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.opera.com/download\"\n                title=\"Download Opera Browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Opera\n              </Link>\n              , or{\" \"}\n              <Link\n                href=\"https://www.google.com/chrome/\"\n                title=\"Download Chrome browser\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Chrome\n              </Link>{\" \"}\n              to continue.\n            </Text>\n\n            <Text>\n              <Text.span bold>Rather use your phone?</Text.span> You can use\n              the Idle App in mobile browser wallets like{\" \"}\n              <Link\n                href=\"https://status.im/\"\n                title=\"status.im website\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Status\n              </Link>\n              ,{\" \"}\n              <Link\n                href=\"https://www.cipherbrowser.com/\"\n                title=\"Cipher Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Cipher\n              </Link>{\" \"}\n              or{\" \"}\n              <Link\n                href=\"https://wallet.coinbase.com/\"\n                title=\"Coinbase Wallet\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                Coinbase wallet\n              </Link>\n              .\n            </Text>\n          </Box>\n        )}\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWeb3BrowserModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Flex,\n  Icon,\n  Modal,\n  Link,\n  Button\n} from \"rimble-ui\";\n\nclass NoWalletModal extends React.Component {\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card p={5} maxWidth={\"600px\"}>\n          <Button.Text\n            icononly\n            icon={\"Close\"}\n            color={\"moon-gray\"}\n            position={\"absolute\"}\n            top={0}\n            right={0}\n            mt={3}\n            mr={3}\n            onClick={this.props.closeModal}\n          />\n\n          <Flex flexDirection={\"column\"} justifyContent={\"space-between\"}>\n            <Flex justifyContent={\"center\"} my={4}>\n              <Icon name=\"Warning\" color=\"gold\" size=\"40\" />\n            </Flex>\n\n            <Heading.h2 my={3}>No Wallet Available</Heading.h2>\n\n            <Text my={4}>\n              Your current browser does not have a blockchain connected wallet.\n              Try using MetaMask, Fortmatic, Portis.\n            </Text>\n\n            <Link\n              href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n              target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n            >\n              <Button.Outline size=\"small\">Get MetaMask Extension</Button.Outline>\n            </Link>\n          </Flex>\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default NoWalletModal;\n","// Checks for MetaMask\nconst GeneralUtil = {\n  hasMetaMask: () => {\n    let hasMetaMask = false;\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasMetaMask = typeof window.ethereum.isMetaMask !== \"undefined\";\n    } else if (typeof window.web3 !== 'undefined') {\n      hasMetaMask = typeof window.web3.currentProvider.isMetaMask !== 'undefined' && window.web3.currentProvider.isMetaMask;\n    }\n\n    return hasMetaMask;\n  },\n  isTrustWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isTrust !== 'undefined' && window.web3.currentProvider.isTrust;\n    }\n    return false;\n  },\n  isCoinbaseWallet: () => {\n    if (typeof window.web3 !== \"undefined\" && typeof window.web3.currentProvider !== 'undefined'){\n      return typeof window.web3.currentProvider.isCoinbaseWallet !== 'undefined' && window.web3.currentProvider.isCoinbaseWallet;\n    }\n    return false;\n  },\n  hasDapper: () => {\n    let hasDapper = typeof window.DapperEthereum !== 'undefined';\n\n    if (typeof window.ethereum !== \"undefined\") {\n      hasDapper = typeof window.ethereum.isDapper !== \"undefined\" && window.ethereum.isDapper;\n    }\n\n    return hasDapper;\n  },\n  isOpera: () => {\n    return /Opera|OPR\\//.test(navigator.userAgent);\n  },\n  // Current device is Android\n  isAndroid: () => {\n    const isAndroid = /android/i.test(navigator.userAgent) ? true : false;\n\n    return isAndroid;\n  },\n  // Current device is iOS\n  isIos() {\n    const isIos =\n      /iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream\n        ? true\n        : false;\n\n    return isIos;\n  }\n};\n\nexport default GeneralUtil;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Flex,\n  Modal,\n  Button,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\nimport RimbleUtils from \"@rimble/utils\";\n\nclass WrongNetworkModal extends React.Component {\n  renderContent = () => {\n    return (\n      <ModalCard.Body>\n        <Heading.h2 my={3}>\n          Switch to the {this.props.network.required.name} network in{\" \"}\n          {GeneralUtil.hasMetaMask() ? `MetaMask` : `Settings`}\n        </Heading.h2>\n\n        <Text my={4}>\n          The Idle App only works on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {this.props.network.required.name}\n          </Text.span>{\" \"}\n          network. You’re currently on the{\" \"}\n          <Text.span style={{ textTransform: \"capitalize\" }}>\n            {\" \"}\n            {this.props.network.current.name}\n          </Text.span>{\" \"}\n          network.\n        </Text>\n\n        {GeneralUtil.hasMetaMask() && !RimbleUtils.isMobileDevice() ? (\n          <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n            <Flex alignItems={\"center\"}>\n              <Box position={\"relative\"} width={\"4em\"}>\n                <Box>\n                  <Loader size={\"3em\"} />\n                </Box>\n              </Box>\n              <Box>\n                <Text fontWeight={4}>Waiting for the right network...</Text>\n                <Text fontWeight={2}>\n                  Go to your Wallet and to switch\n                </Text>\n              </Box>\n            </Flex>\n          </Box>\n        ) : null}\n\n        <Box display={[\"block\", \"none\"]}>\n          <Button onClick={this.props.closeModal} width={1}>\n            OK\n          </Button>\n        </Box>\n      </ModalCard.Body>\n    )\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <React.Fragment>\n            {this.renderContent()}\n          </React.Fragment>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default WrongNetworkModal;\n","import React from \"react\";\nimport { Heading, Text, Box, Flex, Icon } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nfunction TransactionFeeModal(props) {\n  return (\n    <Box>\n      <ModalCard.Header title={'Transaction fees, what are you paying for?'} subtitle={'You need to pay a fee to use the Ethereum blockchain.'} subtitle2={'This pays for someone to process your transaction and store the data.'}></ModalCard.Header>\n      <ModalCard.Body>\n        <Flex flexDirection={['column', 'row']}\n          justifyContent={\"space-between\"}\n          my={[0, 4]}>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"Fingerprint\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Undeniable proof</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You get a public record of any funds you send or receive, a bit like\n              a deed for a house.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"EnhancedEncryption\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unbreakable encryption</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              Your funds can only ever go to your intended recipients.\n            </Text>\n          </Box>\n          <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n            <Flex justifyContent={\"center\"} mb={3}>\n              <Icon\n                name=\"AccountBalance\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n              <Icon\n                name=\"NotInterested\"\n                color=\"skyBlue\"\n                size=\"4em\"\n              />\n            </Flex>\n            <Heading fontSize={2} textAlign={'center'}>Unparalleled control</Heading>\n            <Text fontSize={1} textAlign={'center'}>\n              You can pay or get paid without using any banks or companies.\n            </Text>\n          </Box>\n        </Flex>\n      </ModalCard.Body>\n    </Box>\n  );\n}\n\nexport default TransactionFeeModal;\n","import React from 'react'\nimport moment from 'moment';\nimport connectors from '../App/connectors';\nimport { useWeb3Context } from 'web3-react';\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport ImageButton from '../ImageButton/ImageButton';\nimport globalConfigs from '../configs/globalConfigs';\nimport styles from './Web3ConnectionButtons.module.scss';\nimport { Button, Box, Text, Flex, Link } from 'rimble-ui';\n\nconst LOG_ENABLED = false;\nconst customLog = (...props) => { if (LOG_ENABLED) console.log(moment().format('HH:mm:ss'),...props); };\n\nexport default function Web3ConnectionButtons(props) {\n  const context = useWeb3Context();\n\n  if (!context.active && !context.error) {\n    customLog('context loading', context);\n  } else if (context.error) {\n    customLog('context error', context);\n  } else {\n    customLog('context success', context);\n  }\n\n  const setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n    if (localStorage) {\n      localStorage.setItem('walletProvider', walletProvider);\n      localStorage.setItem('connectorName', connectorName);\n    }\n\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector(connectorName,walletProvider);\n    }\n    \n    // Close modal\n    if (typeof props.connectionCallback === 'function'){\n      props.connectionCallback();\n    }\n\n    return connectorName;\n    // return await context.setConnector(connectorName);\n  };\n\n  const unsetConnector = async () => {\n    context.unsetConnector();\n    if (props.setConnector && typeof props.setConnector === 'function'){\n      props.setConnector('Infura','Infura');\n    }\n  };\n\n  // Show provider fields to detect in-app browser\n  // alert(JSON.stringify(Object.keys(window.web3.currentProvider)));\n    \n  const isOpera = GeneralUtil.isOpera();\n  const isDapper = GeneralUtil.hasDapper();\n  const isMetamask = GeneralUtil.hasMetaMask();\n  const isTrustWallet = GeneralUtil.isTrustWallet();\n  const isGnosisSafe = !!connectors.gnosis.provider.safe;\n  const isCoinbaseWallet = GeneralUtil.isCoinbaseWallet();\n  const browserWalletDetected = isMetamask || isOpera || isDapper || isCoinbaseWallet || isTrustWallet;\n  \n  const allowedConnectors = props.allowedConnectors;\n  const registerPage = props.registerPage;\n\n  if (connectors.Portis) {\n    if (registerPage) {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = true;\n    } else {\n      connectors.Portis.options = connectors.Portis.options || {};\n      connectors.Portis.options.registerPageByDefault = false;\n    }\n  }\n\n  let basicConnectorsName = Object.keys(connectors).filter(c => c !== 'Infura');\n\n  if (allowedConnectors) {\n    basicConnectorsName = basicConnectorsName.filter(n => allowedConnectors.map((v) => { return v.toLowerCase(); }).indexOf(n.toLowerCase()) !== -1 );\n  }\n\n  // Handle Gnosis Safe connector\n  if (isGnosisSafe){\n    const injectedIndex = basicConnectorsName.indexOf('Injected');\n    // Remove Injected\n    basicConnectorsName.splice(injectedIndex,1);\n    // Remove Gnosis\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    basicConnectorsName.splice(gnosisIndex,1);\n    // Insert Gnosis in first place\n    basicConnectorsName.unshift('gnosis');\n  } else {\n    const gnosisIndex = basicConnectorsName.indexOf('gnosis');\n    // Remove Gnosis\n    basicConnectorsName.splice(gnosisIndex,1);\n  }\n\n  const buttons = basicConnectorsName.map( (connectorName,index) => {\n    switch (connectorName) {\n      case 'Injected':\n        if (browserWalletDetected) {\n          let name = null;\n          if (isMetamask) {\n            name = 'Metamask';\n          } else if (isOpera) {\n            name = 'Opera';\n          } else if (isDapper){\n            name = 'Dapper';\n          } else if (isCoinbaseWallet){\n            name = 'Coinbase';\n          } else if (isTrustWallet){\n            name = 'TrustWallet';\n          }\n\n          const connectorInfo = globalConfigs.connectors[name.toLowerCase()];\n          if (connectorInfo && connectorInfo.enabled){\n            const walletIcon = connectorInfo.icon ? connectorInfo.icon : `${name.toLowerCase()}.svg`;\n            return (\n              <Flex\n                width={1}\n                key={`wallet_${name}`}\n                justifyContent={'space-between'}\n                style={{\n                  flex:'0 100%',\n                }}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={name}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  imageProps={{width:'auto',height:'42px'}}\n                  imageSrc={`images/connectors/${walletIcon}`}\n                  handleClick={ async () => await setConnector(connectorName,name)}\n                  subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${name}` }\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  isMobile={true}\n                  width={[1,0.48]}\n                  caption={'Watch Address'}\n                  imageSrc={`images/tokens/ETH.svg`}\n                  subcaption={'Watch an Ethereum address'}\n                  imageProps={{width:'auto',height:'42px'}}\n                  handleClick={ e => props.setCustomAddress(true) }\n                />\n              </Flex>\n            )\n          }\n          return null;\n        } else {\n          const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={'Browser Wallet'}\n              key={`wallet_${connectorName}`}\n              imageProps={{width:'auto',height:'42px'}}\n              imageSrc={`images/connectors/browser-wallet.png`}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using a browser wallet`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n      default:\n        const connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n        if (connectorInfo && connectorInfo.enabled){\n          const walletIcon = connectorInfo.iconModal ? connectorInfo.iconModal : (connectorInfo.icon ? connectorInfo.icon : `${connectorName.toLowerCase()}.svg`);\n\n          let caption = connectorInfo.name ? connectorInfo.name : connectorName;\n          return (\n            <ImageButton\n              buttonProps={{\n                border:2\n              }}\n              isMobile={true}\n              caption={caption}\n              key={`wallet_${connectorName}`}\n              imageSrc={`images/connectors/${walletIcon}`}\n              imageProps={{width:'auto',height:'42px'}}\n              handleClick={ async () => await setConnector(connectorName) }\n              subcaption={ connectorInfo && connectorInfo.subcaption ? connectorInfo.subcaption : `Connect using ${connectorName}`}\n              buttonStyle={ props.isMobile ? {justifyContent:'flex-start',flex:'0 100%'} : {justifyContent:'flex-start',flex:'0 48%'} }\n            />\n          );\n        }\n        return null;\n    }\n  });\n\n  return (\n    <Box width={[1]}>\n      <Flex flexDirection={'column'} alignItems={\"center\"}>\n        {context.error && (\n          <Text.p textAlign=\"center\">\n            An error occurred, are you using an Ethereum browser such as\n            <Link href=\"https://metamask.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Metamask &nbsp;\n            </Link>\n             or\n            <Link href=\"https://www.meetdapper.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">\n              &nbsp; Dapper\n            </Link>\n            ?\n            If you do not have an Ethereum wallet follow the\n            \"I'm new to Ethereum\" flow when connecting.\n            If you do have a wallet, click Reset and retry one of the wallet listed below,\n            Generic wallet option is used for Ethereum browsers only.\n          </Text.p>\n        )}\n        {(context.active || (context.error && context.connectorName)) && context.connectorName !== 'Infura' && (\n          <Button.Outline\n            width={[1/2]}\n            className={[styles.button]}\n            mb={[1, 3]}\n            size={'large'}\n            key={'reset'}\n            onClick={async () => await unsetConnector()}\n          >\n            {context.active ? \"Deactivate Connector\" : \"Reset\"}\n          </Button.Outline>\n        )}\n      </Flex>\n      <Flex\n        flexWrap={'wrap'}\n        flexDirection={'row'}\n        justifyContent={'space-between'}\n      >\n        {buttons}\n      </Flex>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport {\n  Box,\n  Text,\n  Link,\n  Icon,\n  Flex,\n  Field,\n  Modal,\n  Input,\n  Loader,\n  Button,\n  Heading\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard.js';\nimport styles from './Header.module.scss';\nimport FunctionsUtil from '../FunctionsUtil.js';\nimport ImageButton from '../../ImageButton/ImageButton.js';\nimport TransactionFeeModal from \"./TransactionFeeModal.js\";\nimport Web3ConnectionButtons from \"../../Web3ConnectionButtons/Web3ConnectionButtons.js\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass ConnectionModal extends React.Component {\n  // TODO save pref in localstorage and do not show 'Before connecting' info every time\n  state = {\n    validated:false,\n    showTxFees:false,\n    customAddress:'',\n    currentSection:null,\n    showInstructions:false,\n    askCustomAddress:false,\n    closeRemainingTime:null,\n    customAddressError:false,\n    newToEthereumChoice:null\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  toggleShowTxFees = e => {\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  }\n\n  setStoredSection = () => {\n    let currentSection = null;\n    if (localStorage){\n      currentSection = localStorage.getItem('currentSection');\n      if (currentSection){\n        this.setState({\n          currentSection\n        });\n      }\n    }\n    return currentSection;\n  }\n\n  componentDidMount = () => {\n    this.loadUtils();\n    this.setStoredSection();\n  }\n\n  componentDidUpdate = () => {\n    this.loadUtils();\n  }\n\n  resetModal = e => {\n    this.setState({\n      showTxFees: false,\n      currentSection:null,\n      askCustomAddress:false,\n      showInstructions: false,\n      newToEthereumChoice:null,\n    });\n  }\n\n  setConnector = async (connectorName,name) => {\n    let walletProvider = connectorName === 'Injected' ? name : connectorName;\n\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory:'Connect',\n      eventLabel:walletProvider,\n      eventAction:'select_wallet'\n    });\n\n    if (this.props.setConnector && typeof this.props.setConnector === 'function'){\n      this.props.setConnector(connectorName,walletProvider);\n    }\n\n    // Set Wallet choice\n    this.setState({\n      newToEthereumChoice: connectorName\n    });\n\n    this.closeCountdown();\n\n    return connectorName;\n\n    // return await window.RimbleWeb3_context.setConnector(connectorName);\n  }\n\n  closeCountdown = () => {\n    const closeRemainingTime = this.state.closeRemainingTime ? this.state.closeRemainingTime-1 : 5;\n    if (!closeRemainingTime){\n      this.closeModal();\n    } else {\n      setTimeout(() => { this.closeCountdown() },1000);\n    }\n    this.setState({\n      closeRemainingTime\n    });\n  }\n\n  setWalletChoice = (e,choice) => {\n    e.preventDefault();\n    this.setState({\n      newToEthereumChoice: choice\n    });\n  }\n\n  closeModal = () => {\n    // Reset modal\n    this.resetModal();\n    // Set latest stored sections\n    this.setStoredSection();\n    // Close modal\n    this.props.closeModal();\n  }\n\n  setCurrentSection = (e,currentSection) => {\n    e.preventDefault();\n    this.setState({\n      currentSection\n    });\n\n    if (currentSection!=='instructions'){\n      // Send Google Analytics event\n      this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Connect',\n        eventAction: 'select_mode',\n        eventLabel: currentSection\n      });\n\n      this.functionsUtil.setLocalStorage('currentSection',currentSection);\n    }\n  }\n\n  connectCustomAddress = () => {\n    const addressValid = this.functionsUtil.checkAddress(this.state.customAddress);\n    if (addressValid){\n      this.setCustomAddress(false);\n      this.functionsUtil.setCustomAddress(this.state.customAddress);\n      this.setConnector('custom','custom');\n      setTimeout(() => { this.closeModal() },1000);\n      return true;\n    } else {\n      return this.setState({\n        customAddressError:true\n      });\n    }\n  }\n\n  updateCustomAddress = (e) => {\n    const customAddressError = false;\n    const customAddress = e.target.value;\n    const validated = this.functionsUtil.checkAddress(customAddress);\n    this.setState({\n      validated,\n      customAddress,\n      customAddressError\n    });\n  }\n\n  setCustomAddress = (askCustomAddress) => {\n    this.setState({\n      askCustomAddress\n    });\n  }\n\n  renderModalContent = () => {\n\n    const TOSacceptance = (\n      <Box>\n        <Text textAlign={'center'} fontSize={1} py={[2,3]}>By connecting, I accept Idle's <RouterLink to=\"/terms-of-service\" color={'primary'} style={{color:this.props.theme.colors.primary,textDecoration:'underline'}} target={'_blank'} rel=\"nofollow noopener noreferrer\">Terms of Service</RouterLink></Text>\n      </Box>\n    );\n\n    const newToEthereum = this.state.currentSection === 'new';\n    const showConnectionButtons = this.state.currentSection === 'wallet';\n    const showInstructions = this.state.currentSection === 'instructions';\n\n    if (showInstructions){\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Before you connect'} subtitle={'Connecting lets you use Idle via your Ethereum account.'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              flexDirection={['column', 'row']}\n              justifyContent={\"space-between\"}\n              my={[0, 3]}\n            >\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"Public\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>The blockchain is public</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  Your Ethereum account activity is public on the\n                  blockchain. Choose an account you don’t mind being\n                  linked with your activity here.\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]} mr={4}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"AccountBalanceWallet\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have some Ether for fees</Heading>\n                <Text fontSize={1} mb={3} textAlign={'center'}>\n                  You’ll need Ether to pay transaction fees. Buy Ether\n                  from exchanges like Coinbase or directly via enabled wallet\n                  such as Portis or Dapper.<br />\n                  <Link\n                    title=\"Learn about Ethereum transaction fees\"\n                    fontWeight={'0'}\n                    color={'blue'}\n                    textAlign={'center'}\n                    hoverColor={'blue'}\n                    href=\"#\"\n                    onClick={this.toggleShowTxFees}\n                  >\n                    What are transaction fees?\n                  </Link>\n                </Text>\n              </Box>\n              <Box flex={'1 1'} width={1} mt={[0, 0]} mb={[4, 0]}>\n                <Flex justifyContent={\"center\"} mb={3}>\n                  <Icon\n                    name=\"People\"\n                    color=\"skyBlue\"\n                    size=\"4em\"\n                  />\n                </Flex>\n                <Heading fontSize={2} textAlign={'center'}>Have the right account ready</Heading>\n                <Text fontSize={1} textAlign={'center'}>\n                  If you have multiple Ethereum accounts, check that the\n                  one you want to use is active in your browser.\n                </Text>\n              </Box>\n            </Flex>\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    if (this.state.askCustomAddress){\n      return (\n        <Box>\n          <ModalCard.Header\n            title={'Connect ETH wallet'}\n            icon={'images/idle-mark.png'}\n            subtitle={'And get started with Idle.'}\n          >\n          </ModalCard.Header>\n          <ModalCard.Body>\n            <Flex\n              width={1}\n              minWidth={[1,'30em']}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Field\n                width={1}\n                label={'Ethereum address'}\n              >\n                <Input\n                  required\n                  width={1}\n                  type={'text'}\n                  className={styles.input}\n                  borderColor={'cardBorder'}\n                  backgroundColor={'cardBg'}\n                  pattern={'^0x[a-fA-F0-9]{40}$'}\n                  value={this.state.customAddress}\n                  onChange={ e => this.updateCustomAddress(e) }\n                  placeholder={'Insert a valid Ethereum address'}\n                />\n              </Field>\n              {\n                this.state.customAddressError && (\n                  <Text\n                    mb={2}\n                    fontSize={2}\n                    color={'red'}\n                    fontWeight={3}\n                    textAlign={'center'}\n                  >\n                    Insert a valid Ethereum Address\n                  </Text>\n                )\n              }\n              <Button\n                px={[3,4]}\n                mx={'auto'}\n                fontWeight={3}\n                size={'medium'}\n                fontSize={[2,2]}\n                borderRadius={4}\n                contrastColor={'primary'}\n                className={[styles.gradientButton]}\n                onClick={ e => this.connectCustomAddress() }\n              >\n                CONNECT\n              </Button>\n            </Flex>\n            <Flex\n              pt={3}\n              alignItems={'center'}\n              justifyContent={'center'}\n            >\n              <Link\n                hoverColor={'blue'}\n                textAlign={'center'}\n                onClick={ e => this.setCustomAddress(false) }\n              >\n                Select another Wallet\n              </Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (showConnectionButtons) {\n      return (\n        <Box>\n          <ModalCard.Header title={'Select your Wallet'} subtitle={'And get started with Idle.'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex width={1} px={[0,5]} flexDirection={'column'} justifyContent={'center'}>\n              <Web3ConnectionButtons\n                width={1/2}\n                isMobile={this.props.isMobile}\n                setConnector={this.setConnector}\n                connectionCallback={this.closeModal}\n                size={this.props.isMobile ? 'medium' : 'large'}\n                setCustomAddress={this.setCustomAddress.bind(this)}\n              />\n            </Flex>\n            <Flex pt={3} alignItems={'center'} justifyContent={'center'}>\n              <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'new') }>I don't have a wallet</Link>\n            </Flex>\n            { TOSacceptance }\n          </ModalCard.Body>\n        </Box>\n      );\n    }\n\n    if (newToEthereum) {\n      return (\n        <React.Fragment>\n          <ModalCard.Header title={'Let\\'s create your first Ethereum wallet'} icon={'images/idle-mark.png'}></ModalCard.Header>\n          <ModalCard.Body>\n            {\n              !this.state.newToEthereumChoice ? (\n                <Flex width={1} px={[0,4]} flexDirection={'column'} justifyContent={'center'}>\n                  <Box mb={3}>\n                    <Text fontSize={[2,3]} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                      Connect with e-mail or phone number?\n                    </Text>\n                  </Box>\n                  <Flex mb={3} flexDirection={['column','row']} alignItems={'center'} justifyContent={'center'}>\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use e-mail'}\n                      imageSrc={'images/email.svg'}\n                      isMobile={this.props.isMobile}\n                      subcaption={'Powered by Portis'}\n                      handleClick={ e => this.setConnector('Portis','Portis') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                    <ImageButton\n                      buttonProps={{\n                        border:2\n                      }}\n                      caption={'Use phone number'}\n                      isMobile={this.props.isMobile}\n                      imageSrc={'images/mobile.svg'}\n                      subcaption={'Powered by Fortmatic'}\n                      handleClick={ e => this.setConnector('Fortmatic','Fortmatic') }\n                      imageProps={ this.props.isMobile ? {width:'auto',height:'42px'} : {mb:'3px',width:'auto',height:'55px'}}\n                    />\n                  </Flex>\n                  <Flex alignItems={'center'} justifyContent={'center'}>\n                    <Link textAlign={'center'} hoverColor={'blue'} onClick={ e => this.setCurrentSection(e,'wallet') }>I already have a wallet</Link>\n                  </Flex>\n                </Flex>\n              ) : (\n                <Box>\n                  <Text fontSize={3} textAlign={'center'} fontWeight={2} lineHeight={1.5}>\n                    We are connecting you to {this.state.newToEthereumChoice} wallet provider...\n                  </Text>\n                  <Flex\n                    mt={2}\n                    justifyContent={'center'}\n                    alignItems={'center'}\n                    textAlign={'center'}>\n                    <Loader size=\"40px\" /> <Text ml={2} color={'dark-gray'}>Closing in {this.state.closeRemainingTime} seconds...</Text>\n                  </Flex>\n                </Box>\n              )\n            }\n            { TOSacceptance }\n          </ModalCard.Body>\n        </React.Fragment>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <ModalCard.Header title={'Connect to Idle'} icon={'images/idle-mark.png'}></ModalCard.Header>\n        <ModalCard.Body>\n          {\n            <Flex\n              width={1}\n              px={[0,4]}\n              flexDirection={'column'}\n              justifyContent={'center'}\n            >\n              <Box mb={3}>\n                <Text\n                  fontWeight={2}\n                  fontSize={[2,3]}\n                  lineHeight={1.5}\n                  textAlign={'center'}\n                >\n                  How do you want to connect to Idle?\n                </Text>\n              </Box>\n              <Flex\n                mb={[2,3]}\n                alignItems={'center'}\n                justifyContent={'center'}\n                flexDirection={['column','row']}\n              >\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`Ethereum wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Choose your favourite'}\n                  imageSrc={'images/ethereum-wallet.svg'}\n                  handleClick={ e => this.setCurrentSection(e,'wallet') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n                <ImageButton\n                  buttonProps={{\n                    border:2\n                  }}\n                  caption={`New wallet`}\n                  isMobile={this.props.isMobile}\n                  subcaption={'Use email / phone'}\n                  imageSrc={'images/new-wallet.png'}\n                  handleClick={ e => this.setCurrentSection(e,'new') }\n                  imageProps={this.props.isMobile ? {width:'auto',height:'42px'} : {width:'auto',height:'55px',marginBottom:'5px'}}\n                />\n              </Flex>\n              <Flex\n                alignItems={'center'}\n                justifyContent={'center'}\n              >\n                <Link\n                  color={'primary'}\n                  hoverColor={'primary'}\n                  onClick={ e => this.setCustomAddress(true) }\n                >\n                  Watch Ethereum Address\n                </Link>\n              </Flex>\n            </Flex>\n          }\n          { TOSacceptance }\n        </ModalCard.Body>\n      </React.Fragment>\n    );\n  }\n\n  renderFooter = () => {\n\n    if (this.state.newToEthereumChoice || (this.state.currentSection && this.state.askCustomAddress)){\n      return null;\n    }\n\n    return (\n      <ModalCard.Footer>\n        { !this.state.currentSection ? (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={ e => this.setCurrentSection(e,'instructions') }\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              READ INSTRUCTIONS\n            </Button>\n          ) : (!this.state.askCustomAddress || this.state.currentSection==='instructions') && (\n            <Button\n              className={[styles.gradientButton,styles.empty]}\n              onClick={this.resetModal}\n              size={'medium'}\n              borderRadius={4}\n              contrastColor={'blue'}\n              fontWeight={3}\n              fontSize={[2,2]}\n              mx={'auto'}\n              px={[4,5]}\n            >\n              BACK\n            </Button>\n          )\n        }\n      </ModalCard.Footer>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.closeModal}>\n          {this.state.showTxFees === false ? (\n            <React.Fragment>\n              {this.renderModalContent()}\n              {this.renderFooter()}\n            </React.Fragment>\n          ) : (\n            <Box>\n              <TransactionFeeModal />\n              {this.renderFooter()}\n            </Box>\n          )}\n\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionModal;\n","import React from \"react\";\nimport {\n  Heading,\n  Text,\n  Modal,\n  Flex,\n  Box,\n  Loader\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport GeneralUtil from \"../GeneralUtil\";\n\nclass ConnectionPendingModal extends React.Component {\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>Connect Ethereum account</Heading.h2>\n\n        <Text my={4}>\n          Confirm the request that's just appeared. If you can't see a\n          request, open your{\" \"}\n          {GeneralUtil.hasMetaMask()\n            ? `MetaMask extension`\n            : `eth wallet settings`}\n          .\n        </Text>\n\n        <Box bg={\"#f6f6fc\"} p={3} display={[\"none\", \"block\"]}>\n          <Flex alignItems={\"center\"}>\n            <Box position={\"relative\"} width={\"4em\"}>\n              <Box>\n                <Loader size={\"3em\"} />\n              </Box>\n            </Box>\n            <Box>\n              <Text fontWeight={4}>\n                Waiting for connection confirmation...\n              </Text>\n              <Text fontWeight={2}>This won’t cost you any Ether</Text>\n            </Box>\n          </Flex>\n        </Box>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionPendingModal;\n","import React from \"react\";\nimport { Heading, Text, Flex, Button, Modal } from \"rimble-ui\";\nimport ModalCard from './ModalCard';\n\nclass UserRejectedConnectionModal extends React.Component {\n  sendMessageAgain = event => {\n    this.props.closeModal();\n    this.props.initAccount();\n  };\n\n  renderContent = () => {\n    return (\n      <React.Fragment>\n        <Heading.h2 my={3}>\n          You can't continue without connecting your account\n        </Heading.h2>\n\n        <Text my={4}>\n          To use our blockchain features you need to confirm the connection\n          request.\n        </Text>\n\n        <Flex flexDirection={['column', 'row']} justifyContent={\"flex-end\"} mt={4}>\n          <Button.Outline onClick={this.props.closeModal} mr={[0, 3]} mb={[3, 0]}>\n            Cancel connection\n          </Button.Outline>\n          <Button onClick={this.sendMessageAgain}>\n            Try again\n          </Button>\n        </Flex>\n      </React.Fragment>\n    );\n  }\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          <ModalCard.Body>\n            {this.renderContent()}\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default UserRejectedConnectionModal;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Modal,\n  Flex,\n  Box,\n  Button,\n  EthAddress,\n  QR,\n  Link\n} from \"rimble-ui\";\nimport TransactionFeeModal from \"./TransactionFeeModal\";\n\nclass LowFundsModal extends React.Component {\n  state = {\n    showSecondary: false,\n    showTxFees: false\n  };\n\n  toggleQRVisible = () => {\n    this.setState({\n      showSecondary: !this.state.showSecondary\n    });\n  };\n\n  toggleShowTxFees = e => {\n    console.log(\"showTxFees\", this.state.showTxFees);\n    e.preventDefault();\n\n    this.setState({\n      showTxFees: !this.state.showTxFees\n    });\n  };\n\n  render() {\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <Card\n          pr={[0, 5]}\n          pl={[0, 5]}\n          pt={[\"48px\", 5]}\n          pb={[\"97px\", 4]}\n          maxWidth={\"960px\"}\n          overflow={\"hidden\"}\n          position={\"relative\"}\n        >\n          <Box position={\"relative\"}>\n            <Flex\n              justifyContent={\"flex-end\"}\n              mr={[0, -5]}\n              mt={[\"-48px\", -5]}\n              position={\"absolute\"}\n              top={\"0\"}\n              left={\"0\"}\n              right={\"0\"}\n              bg={\"white\"}\n              zIndex={\"1\"}\n            >\n              <Button.Text\n                icononly\n                icon={\"Close\"}\n                color={\"moon-gray\"}\n                onClick={this.props.closeModal}\n              />\n            </Flex>\n          </Box>\n\n          {this.state.showSecondary === false &&\n          this.state.showTxFees === false ? (\n            <Box>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start primary content */}\n\n                  <Box alignContent=\"center\" py={3}>\n                    <Heading.h2>\n                      Not enough Ether for transaction fees\n                    </Heading.h2>\n                  </Box>\n                  <Text mb={4}>\n                    This is a blockchain action so you’ll have to pay a\n                    transaction fee. A few dollars worth of Ether should be\n                    enough but fees do change based on how busy the network is.{\" \"}\n                    <strong>Fund your account and try again.</strong>{\" \"}\n                    <Link\n                      title=\"Learn about Ethereum transaction fees\"\n                      as={\"a\"}\n                      href=\"#\"\n                      onClick={this.toggleShowTxFees}\n                    >\n                      What are transaction fees?\n                    </Link>\n                  </Text>\n\n                  <Heading.h3>How to add funds</Heading.h3>\n\n                  <Flex\n                    alignItems={\"stretch\"}\n                    mx={0}\n                    mb={[4, 5]}\n                    mt={[3, 4]}\n                    flexWrap={[\"wrap\", \"no-wrap\"]}\n                  >\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>Buy ETH from an exchange</Heading.h5>\n                          <Text fontSize=\"1\">\n                            You can buy ETH from exchanges like Coinbase and\n                            send it to your account. If you don’t already have\n                            a Coinbase account, it can take a while to get set\n                            up.\n                          </Text>\n                        </Box>\n\n                        <Button.Outline my={3}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"OpenInNew\" mr={2} />\n                            Go to CoinBase\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                    <Box p={[1, 2]} width={[1, 1 / 2]}>\n                      <Flex\n                        flexDirection={\"column\"}\n                        justifyContent={\"space-between\"}\n                        height={\"100%\"}\n                      >\n                        <Box>\n                          <Heading.h5>\n                            Send ETH from another account\n                          </Heading.h5>\n                          <Text fontSize=\"1\">\n                            If you have ETH in another Ethereum account, you\n                            can send it to this account using your public\n                            Ethereum address or QR code.\n                          </Text>\n                        </Box>\n                        <Button.Outline my={3} onClick={this.toggleQRVisible}>\n                          <Flex alignItems={\"center\"}>\n                            <Icon name=\"FilterCenterFocus\" mr={2} />\n                            Show account QR code\n                          </Flex>\n                        </Button.Outline>\n                      </Flex>\n                    </Box>\n                  </Flex>\n                  {/* End primary content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex pt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button onClick={this.props.closeModal} width={[1, \"auto\"]}>\n                    Back to Idle\n                  </Button>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showSecondary ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start secondary content */}\n                  <Flex my={3} justifyContent={\"center\"}>\n                    <QR\n                      size={130}\n                      value={\n                        this.props.account ? this.props.account : \"1234512345\"\n                      }\n                    />\n                  </Flex>\n\n                  <EthAddress my={4} address={this.props.account} />\n                  <Flex mb={3} />\n                  {/* End secondary content */}\n                </Box>\n              </Box>\n\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start secondary footer */}\n                <Flex borderTop={1} borderColor={\"#eee\"} />\n                <Flex mt={4} justifyContent={[\"center\", \"flex-end\"]}>\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleQRVisible}\n                  >\n                    Go back\n                  </Button.Outline>\n                </Flex>\n                {/* End secondary footer */}\n              </Box>\n            </Box>\n          ) : null}\n\n          {this.state.showTxFees ? (\n            <Box mb={3}>\n              <Box\n                style={{ overflow: \"auto\" }}\n                maxHeight={\"calc(100vh - 195px)\"}\n              >\n                <Box px={[4, 0]} pt={[0, 0]} pb={[4, 5]}>\n                  {/* Start tx fee content */}\n                  <TransactionFeeModal />\n                  {/* End tx fee content */}\n                </Box>\n              </Box>\n              <Box\n                position={\"absolute\"}\n                bottom={\"0\"}\n                left={\"0\"}\n                right={\"0\"}\n                px={[4, 5]}\n                pt={0}\n                pb={4}\n                bg={\"white\"}\n              >\n                {/* Start primary footer */}\n                <Flex\n                  pt={4}\n                  justifyContent={[\"center\", \"flex-end\"]}\n                  borderTop={1}\n                  borderColor={\"#eee\"}\n                >\n                  <Button.Outline\n                    width={[1, \"auto\"]}\n                    onClick={this.toggleShowTxFees}\n                  >\n                    Go Back\n                  </Button.Outline>\n                </Flex>\n                {/* End primary footer */}\n              </Box>\n            </Box>\n          ) : null}\n        </Card>\n      </Modal>\n    );\n  }\n}\n\nexport default LowFundsModal;\n","import React from \"react\";\n\nimport NoWeb3BrowserModal from \"./components/NoWeb3BrowserModal\";\nimport NoWalletModal from \"./components/NoWalletModal\";\nimport WrongNetworkModal from \"./components/WrongNetworkModal\";\n\nimport ConnectionModal from \"./components/ConnectionModal\";\nimport ConnectionPendingModal from \"./components/ConnectionPendingModal\";\nimport UserRejectedConnectionModal from \"./components/UserRejectedConnectionModal\";\n\nimport LowFundsModal from \"./components/LowFundsModal\";\n\nclass ConnectionModalUtil extends React.Component {\n  render() {\n    return (\n      <div>\n        <NoWeb3BrowserModal\n          closeModal={this.props.modals.methods.closeNoWeb3BrowserModal}\n          isOpen={this.props.modals.data.noWeb3BrowserModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <NoWalletModal\n          closeModal={this.props.modals.methods.closeNoWalletModal}\n          isOpen={this.props.modals.data.noWalletModalIsOpen}\n          transaction={this.props.transaction}\n        />\n\n        <WrongNetworkModal\n          closeModal={this.props.modals.methods.closeWrongNetworkModal}\n          isOpen={this.props.modals.data.wrongNetworkModalIsOpen}\n          network={this.props.network}\n        />\n\n        <ConnectionModal\n          {...this.props}\n          isMobile={this.props.isMobile}\n          setConnector={this.props.setConnector}\n          currentNetwork={this.props.network.current}\n          validateAccount={this.props.validateAccount}\n          closeModal={this.props.modals.methods.closeConnectionModal}\n          isOpen={ this.props.modals.data.connectionModalIsOpen && !this.props.accountValidated }\n        />\n\n        <ConnectionPendingModal\n          closeModal={this.props.modals.methods.closeConnectionPendingModal}\n          isOpen={this.props.modals.data.accountConnectionPending}\n          currentNetwork={this.props.network.current}\n        />\n        <UserRejectedConnectionModal\n          closeModal={\n            this.props.modals.methods.closeUserRejectedConnectionModal\n          }\n          isOpen={this.props.modals.data.userRejectedConnect}\n          initAccount={this.props.initAccount}\n        />\n\n        <LowFundsModal\n          closeModal={this.props.modals.methods.closeLowFundsModal}\n          isOpen={this.props.modals.data.lowFundsModalIsOpen}\n          currentNetwork={this.props.network.current}\n          account={this.props.account}\n        />\n      </div>\n    );\n  }\n}\n\nexport default ConnectionModalUtil;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Flex,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass ConnectionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    // Disconnect to Infura only if the wallet is not logged\n    if (!this.props.account){\n      // await this.props.context.setFirstValidConnector(['Infura']);\n      // this.props.context.setConnector('Infura');\n      this.props.context.unsetConnector();\n      this.props.setConnector('Infura',null);\n      await this.props.context.setFirstValidConnector(['Infura']);\n    }\n    this.props.modals.methods.closeConnectionErrorModal();\n  }\n\n  render() {\n\n    const walletProvider = this.functionsUtil.getWalletProvider();\n    const isLedger = (walletProvider && walletProvider.toLowerCase() === 'ledger') || (typeof this.props.modals.data.connectionError === 'string' && this.props.modals.data.connectionError.toLowerCase().includes('ledger'));\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ isLedger ? 'Ledger Error' : `Connection Error` } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to connect with your { isLedger ? 'Ledger' : 'account' }:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.connectionError}\"</Text.span><br />\n                {\n                  isLedger ? (\n                    <Text.span>\n                      Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n\n                    </Text.span>\n                  ) : 'Make sure that your wallet is unlocked and try again.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ConnectionErrorModal;","import React from \"react\";\nimport {\n  Text,\n  Link,\n  Flex,\n  Modal,\n  Button\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport FunctionsUtil from '../FunctionsUtil';\n\nclass TransactionErrorModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  async closeModal(e){\n    e.preventDefault();\n    this.props.modals.methods.closeTransactionErrorModal();\n  }\n\n  render() {\n\n    const isLedgerError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('ledger');\n    const isSlowTxError = typeof this.props.modals.data.transactionError === 'string' && this.props.modals.data.transactionError.toLowerCase().includes('not mined within 50 blocks');\n\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={ e => this.closeModal(e) }>\n          <ModalCard.Header title={ 'Transaction Error' } icon={'images/warning.svg'}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={1} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text.p color={'dark-gray'} textAlign={'center'}>\n                The following error occured while trying to send a transaction:<br />\n                <Text.span color={'red'} fontWeight={3}>\"{this.props.modals.data.transactionError}\"</Text.span><br />\n                {\n                  isLedgerError ? (\n                    <Text.span\n                      fontSize={1}\n                    >\n                      <br />Make sure that your Ledger is <strong>connected</strong> and <strong>unlocked</strong>. Also check that both <strong>Contract data</strong> and <strong>Browser support</strong> are enabled in the Ledger settings.<br />\n                      We also suggest you to connect your Ledger with Metamask, read the <Link fontSize={1} color={'blue'} hoverColor={'blue'} target={'_blank'} rel={\"nofollow noopener noreferrer\"} href={'https://metamask.zendesk.com/hc/en-us/articles/360020394612-How-to-connect-a-Trezor-or-Ledger-Hardware-Wallet'}>instructions here</Link>.\n                    </Text.span>\n                  ) : isSlowTxError ? 'This could happen when the gas price is low, check the transaction status with your Wallet.' : 'Make sure that your have enough funds in your wallet.'\n                }\n              </Text.p>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <Button\n                my={2}\n                mx={[0, 2]}\n                borderRadius={4}\n                mainColor={'blue'}\n                size={this.props.isMobile ? 'small' : 'medium'}\n                onClick={ async (e) => { await this.closeModal(e); } }\n              >\n              GOT IT\n              </Button>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default TransactionErrorModal;","import Web3 from \"web3\";\nimport React from 'react';\nimport BigNumber from 'bignumber.js';\nimport SimpleID from 'simpleid-js-sdk';\nimport NetworkUtil from \"./NetworkUtil\";\nimport { Biconomy } from \"@biconomy/mexa\";\nimport * as Sentry from '@sentry/browser';\nimport FunctionsUtil from './FunctionsUtil';\nimport globalConfigs from '../configs/globalConfigs';\nimport { POSClient, use } from '@maticnetwork/maticjs';\nimport ConnectionModalUtil from \"./ConnectionModalsUtil\";\nimport { Web3ClientPlugin } from '@maticnetwork/maticjs-web3';\n// import detectEthereumProvider from '@metamask/detect-provider';\nimport { IFrameEthereumProvider } from '@ledgerhq/iframe-provider';\nimport ConnectionErrorModal from './components/ConnectionErrorModal';\nimport TransactionErrorModal from './components/TransactionErrorModal';\n\nrequire('dotenv').config();\n\nconst RimbleTransactionContext = React.createContext({\n  web3: {},\n  account: {},\n  biconomy: {},\n  simpleID: {},\n  contracts: [],\n  web3Infura: {},\n  web3Polygon: {},\n  tokenConfig: {},\n  transactions: {},\n  permitClient: {},\n  web3Providers: {},\n  accountBalance: {},\n  maticPOSClient: {},\n  initWeb3: () => {},\n  accountValidated: {},\n  maticPlasmaClient :{},\n  initAccount: () => {},\n  accountBalanceLow: {},\n  contractsNetworks: {},\n  initSimpleID: () => {},\n  initContract: () => {},\n  erc20ForwarderClient: {},\n  accountBalanceToken: {},\n  checkPreflight: () => {},\n  validateAccount: () => {},\n  network: {\n    current: {},\n    required: {},\n    checkNetwork: () => {},\n    isCorrectNetwork: null,\n    isSupportedNetwork: null,\n  },\n  accountInizialized: false,\n  getTokenDecimals: () => {},\n  rejectValidation: () => {},\n  getAccountBalance: () => {},\n  contractsInitialized: false,\n  accountValidationPending: {},\n  initializeContracts: () => {},\n  rejectAccountConnect: () => {},\n  enableUnderlyingWithdraw: false,\n  connectAndValidateAccount: () => {},\n  modals: {\n    data: {\n      connectionError: {},\n      lowFundsModalIsOpen: {},\n      noWalletModalIsOpen: {},\n      userRejectedConnect: {},\n      connectionModalIsOpen: {},\n      userRejectedValidation: {},\n      wrongNetworkModalIsOpen: {},\n      accountValidationPending: {},\n      accountConnectionPending: {},\n      noWeb3BrowserModalIsOpen: {},\n      transactionConnectionModalIsOpen: {},\n    },\n    methods: {\n      openLowFundsModal: () => {},\n      closeLowFundsModal: () => {},\n      openWrongNetworkModal: () => {},\n      closeWrongNetworkModal: () => {},\n      openNoWeb3BrowserModal: () => {},\n      closeNoWeb3BrowserModal: () => {},\n      openConnectionErrorModal: () => {},\n      closeConnectionErrorModal: () => {},\n      openTransactionErrorModal: () => {},\n      closeTransactionErrorModal: () => {},\n      openConnectionPendingModal: () => {},\n      closeConnectionPendingModal: () => {},\n      openUserRejectedConnectionModal: () => {},\n      openUserRejectedValidationModal: () => {},\n      closeUserRejectedConnectionModal: () => {},\n      closeUserRejectedValidationModal: () => {},\n    }\n  },\n  transaction: {\n    data: {\n      transactions: {}\n    },\n    meta: {},\n    methods: {}\n  }\n});\n\nlet setConnectorName = null;\nlet biconomyLoginProcessing = false;\n\nclass RimbleTransaction extends React.Component {\n  static Consumer = RimbleTransactionContext.Consumer;\n\n  componentUnmounted = false;\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    const props = Object.assign({},this.props);\n    props.web3 = this.state.web3;\n    props.account = this.state.account;\n    props.contracts = this.state.contracts;\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(props);\n    }\n  }\n\n  componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    await this.checkNetwork();\n\n    // detect Network account change\n    if (window.ethereum){\n      window.ethereum.on('networkChanged', async (networkId) => {\n        this.handleNetworkChanged(networkId);\n        // window.location.reload();\n      });\n    }\n\n    window.initWeb3 = this.initWeb3;\n    window.initAccount = this.initAccount;\n  }\n\n  handleNetworkChanged = async (networkId=null) => {\n    this.functionsUtil.removeStoredItem('cachedRequests');\n    this.functionsUtil.removeStoredItem('cachedRequests_polygon');\n    this.functionsUtil.removeStoredItem('transactions');\n    await this.props.clearCachedData(async () => {\n      // console.log(networkId,this.state.network);\n      // const network = await this.checkNetwork();\n      // if (network.isCorrectNetwork){\n      //   window.location.reload();\n      // }\n\n      if (this.state.network.required && networkId && parseInt(networkId) === parseInt(this.state.network.required.id)){\n        window.location.reload();\n      } else {\n        this.setState({\n          web3:null,\n          contracts:[],\n          biconomy:null,\n          permitClient:null,\n          contractsNetworks:{},\n          networkInitialized:false,\n          erc20ForwarderClient:null,\n          contractsInitialized:false\n        },() => {\n          this.checkNetwork();\n        });\n      }\n    });\n  }\n\n  componentDidMount = async () => {\n    // this.initSimpleID();\n    // this.initWeb3();\n\n    this.connectGnosisSafe();\n\n    // TEST - Manually triggers transaction error\n    // this.openTransactionErrorModal(null,'Your Ledger device is Ineligible');\n\n    window.testTransaction = (method) => {\n      const transaction = this.createTransaction();\n      transaction.method = method;\n      this.addTransaction(transaction);\n      return transaction;\n    }\n\n    window.updateTransaction = (transaction,hash,status,params) => {\n      // Add meta data to transaction\n      transaction.status = status;\n      transaction.params = params;\n      transaction.type = \"contract\";\n      transaction.created = Date.now();\n      transaction.transactionHash = hash;\n\n      // console.log('window.updateTransaction',transaction);\n\n      this.updateTransaction(transaction);\n      return transaction;\n    }\n  }\n\n  connectGnosisSafe = () => {\n    const gnosisSafeLoaded = this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      const walletProvider = this.functionsUtil.getWalletProvider();\n      const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n      // console.log('connectGnosisSafe - isGnosisSafe',this.props.connectors.gnosis.provider.safe,isGnosisSafe,walletProvider);\n      if (isGnosisSafe){\n        // console.log('connectGnosisSafe - select gnosis connector');\n        this.props.setConnector('gnosis','gnosis');\n      } else if (walletProvider === 'gnosis') {\n        // console.log('connectGnosisSafe - Reset to Infura, isGnosisSafe = false');\n        this.props.setConnector('Infura',null);\n      }\n    }\n  }\n\n  componentDidUpdate = async (prevProps, prevState) => {\n\n    this.loadUtils();\n\n    // console.log('componentDidUpdate',prevProps.connectorName,this.props.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active,(this.props.context.error ? this.props.context.error.message : null));\n\n    const gnosisSafeLoaded = !this.state.gnosisSafeLoaded && this.props.connectors.gnosis.safeLoaded;\n    if (gnosisSafeLoaded){\n      // console.log('gnosisSafeLoaded');\n      this.setState({\n        gnosisSafeLoaded:true\n      },() => {\n        this.connectGnosisSafe();\n      });\n    }\n\n    if ((prevProps.connectorName !== this.props.connectorName && this.props.connectorName) || (this.props.context.active && prevProps.context.active !== this.props.context.active)){\n      // console.log('componentDidUpdate',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active,this.state.networkInitialized);\n      this.initWeb3();\n    } else if ( prevProps.context !== this.props.context ){\n      if (this.props.context.error instanceof Error && this.props.context.error.message.length){\n        const errorMessage = this.props.context.error.message;\n        const isWalletConnectClosedModalError = (errorMessage === 'User closed WalletConnect modal' || errorMessage === 'User closed modal');\n        // this.functionsUtil.customLog('componentDidUpdate',setConnectorName,errorMessage);\n        if (setConnectorName === 'WalletConnect' && isWalletConnectClosedModalError){\n          // this.functionsUtil.customLog('WalletConnect disconnected! Set Infura connector');\n          this.props.setConnector('Infura',null);\n          // this.functionsUtil.removeStoredItem('walletProvider');\n          // this.functionsUtil.removeStoredItem('connectorName');\n          // this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:'Infura'}));\n          setConnectorName = null;\n          // await this.props.context.setConnector('Infura');\n        } else if (!isWalletConnectClosedModalError) {\n          this.openConnectionErrorModal(null,errorMessage);\n        } else {\n          // console.log('initWeb3_2',prevProps.connectorName,this.props.connectorName,prevProps.context.active,this.props.context.active);\n          this.initWeb3();\n        }\n      // WalletConnect double trigger initWeb3\n      } else if (this.props.context.active && this.props.context.connectorName!=='WalletConnect' && this.props.connectorName==='WalletConnect'){\n        // console.log('initWeb3_3',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n        this.initWeb3();\n      }\n    } else if ((this.props.context.connectorName && this.props.context.connectorName !== this.props.connectorName) || prevProps.customAddress !== this.props.customAddress){\n      // console.log('initWeb3_4',prevProps.context.connectorName,this.props.context.connectorName,prevProps.context.active,this.props.context.active);\n      this.initWeb3();\n    }\n\n    const currentNetworkChanged = this.state.networkInitialized && prevState.network.current.id !== this.state.network.current.id;\n    if (currentNetworkChanged){\n      // console.log('currentNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.initWeb3();\n    }\n\n    const requiredNetworkChanged = prevState.network.required.id !== this.state.network.required.id;\n    if (requiredNetworkChanged){\n      // console.log('requiredNetworkChanged',this.state.networkInitialized,JSON.stringify(prevState.network),JSON.stringify(this.state.network));\n      this.setState({\n        contracts:[],\n        contractsNetworks:{},\n        contractsInitialized:false\n      }, () => {\n        this.props.setNetwork(this.state.network);\n        this.initWeb3();\n      });\n    }\n\n    const availableStrategiesChanged = (!prevProps.availableStrategies && this.props.availableStrategies) || (prevProps.availableStrategies && this.props.availableStrategies && JSON.stringify(Object.keys(prevProps.availableStrategies)) !== JSON.stringify(Object.keys(this.props.availableStrategies)));\n    // console.log('availableStrategiesChanged',this.props.availableStrategies,availableStrategiesChanged);\n    if (availableStrategiesChanged){\n      await this.initializeContracts();\n    }\n\n    const customAddressChanged = prevProps.customAddress !== this.props.customAddress;\n    const contextAccountChanged = prevProps.context.account !== this.props.context.account;\n    const accountDisconnected = prevProps.connectorName !== this.props.connectorName && this.props.connectorName === 'Infura';\n    if (contextAccountChanged){\n      // console.log('contextAccountChanged',prevProps.context.account,this.props.context.account,contextAccountChanged);\n    }\n\n    if (accountDisconnected){\n      // console.log('accountDisconnected',prevProps.connectorName,this.props.connectorName,accountDisconnected);\n    }\n\n    if (customAddressChanged || contextAccountChanged || accountDisconnected){\n      this.initAccount();\n    }\n\n    // const availableTokensChanged = prevProps.availableTokens && this.props.availableTokens && JSON.stringify(Object.keys(prevProps.availableTokens)) !== JSON.stringify(Object.keys(this.props.availableTokens));\n\n    // Reset tokenDecimals if token is changed\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken;\n    if (tokenChanged){\n      this.setState({\n        tokenDecimals: null\n      });\n    }\n\n    // this.functionsUtil.customLog(prevProps.enableUnderlyingWithdraw,this.props.enableUnderlyingWithdraw,this.state.enableUnderlyingWithdraw);\n    if (prevProps.enableUnderlyingWithdraw !== this.props.enableUnderlyingWithdraw){\n      this.setState({\n        enableUnderlyingWithdraw:this.props.enableUnderlyingWithdraw\n      });\n    }\n\n    const accountChanged = prevState.account !== this.state.account;\n    if (accountChanged){\n      this.initMaticPosClient();\n    }\n\n    if (localStorage){\n      const context = JSON.parse(localStorage.getItem('context'));\n      if (!context || (this.props.context.active !== context.active || this.props.context.connectorName !== context.connectorName)){\n        this.functionsUtil.setLocalStorage('context',JSON.stringify({active:this.props.context.active,connectorName:this.props.context.connectorName}));\n      }\n    }\n\n    const selectedNetworkChanged = prevProps.config.requiredNetwork !== this.props.config.requiredNetwork;\n    if (selectedNetworkChanged){\n      // console.log('selectedNetworkChanged',JSON.stringify(prevProps.config.requiredNetwork),this.props.config.requiredNetwork);\n      this.handleNetworkChanged();\n    }\n  }\n\n  initMaticPosClient = async () => {\n    let maticPOSClient = null;\n    let maticPlasmaClient = null;\n\n    // const infuraConfig = globalConfigs.network.providers.infura;\n    const networkId = this.state.network.required.id;\n    const polygonConfig = globalConfigs.network.providers.polygon;\n\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const networkConfig = availableNetworks[networkId];\n\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers','infura','rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers','infura','key']);\n\n      const maticProvider = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      const parentProvider = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n      // install web3 plugin\n      use(Web3ClientPlugin);\n\n      maticPOSClient = new POSClient();\n\n      const maticPOSClientConfig = {\n        parent: {\n          provider: parentProvider,\n          defaultConfig: {\n            from : this.state.account\n          }\n        },\n        child: {\n          provider: maticProvider,\n          defaultConfig: {\n            from : this.state.account\n          }\n        },\n        network: networkConfig.network,\n        version: networkConfig.version\n      };\n\n      await maticPOSClient.init(maticPOSClientConfig);\n    }\n\n    window.maticPOSClient = maticPOSClient;\n    window.maticPlasmaClient = maticPlasmaClient;\n\n    this.setState({\n      maticPOSClient,\n      maticPlasmaClient\n    });\n  }\n\n  // Initialize a web3 provider\n  initWeb3 = async (connectorName=null) => {\n\n    // Detect ethereum provider\n    // const metamaskProvider = await detectEthereumProvider();\n    // if (metamaskProvider && (!window.ethereum || window.ethereum !== metamaskProvider)){\n    //   window.ethereum = metamaskProvider;\n    // }\n    if (!this.state.networkInitialized){\n      return false;\n    }\n\n    const context = this.props.context;\n    const networkId = this.state.network.required.id;\n    const walletProvider = this.functionsUtil.getWalletProvider();\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - START',networkId,walletProvider);\n\n    const defaultProvider = this.functionsUtil.getGlobalConfig(['network','defaultProvider']);\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','availableNetworks']);\n    const networkConfig = availableNetworks[networkId];\n    const provider = networkConfig ? networkConfig.provider : defaultProvider;\n    const web3RpcKey = this.functionsUtil.getGlobalConfig(['network','providers',provider,'key']);\n    const web3Rpc = this.functionsUtil.getGlobalConfig(['network','providers',provider,'rpc',networkId])+web3RpcKey;\n\n    // console.log('initWeb3',web3Rpc);\n\n    const useWeb3Provider = this.state.network.isCorrectNetwork;\n    const web3InfuraRpc = this.functionsUtil.getGlobalConfig(['network','providers',defaultProvider,'rpc',networkId])+this.functionsUtil.getGlobalConfig(['network','providers',defaultProvider,'key']);\n\n    const enabledNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n    const web3Providers = Object.keys(availableNetworks).filter( netId => enabledNetworks.includes(parseInt(netId)) ).reduce( (acc,netId) => {\n      const networkConfig = availableNetworks[netId];\n      const providerConfig = this.functionsUtil.getGlobalConfig(['network','providers',networkConfig.provider]);\n      const providerRpc = providerConfig.rpc[netId]+providerConfig.key;\n      acc[netId] = new Web3(new Web3.providers.HttpProvider(providerRpc));\n      return acc;\n    },{});\n\n    let web3Polygon = null;\n    const web3Infura = new Web3(new Web3.providers.HttpProvider(web3InfuraRpc));\n\n    const polygonConfig = globalConfigs.network.providers.polygon;\n    const currentNetwork = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId]);\n    const polygonNetworkId = currentNetwork.provider === 'polygon' ? networkId : this.functionsUtil.getGlobalConfig(['network','providers','polygon','networkPairs',networkId]);\n    if (polygonConfig && polygonConfig.enabled && polygonConfig.rpc && Object.keys(polygonConfig.rpc).includes(parseInt(polygonNetworkId).toString())){\n      const web3PolygonRpc = polygonConfig.rpc[polygonNetworkId]+this.functionsUtil.getGlobalConfig(['network','providers','polygon','key']);\n      web3Polygon = new Web3(new Web3.providers.HttpProvider(web3PolygonRpc));\n      window.web3Polygon = web3Polygon;\n    }\n\n    let web3 = useWeb3Provider ? context.library : null;\n\n    // 0x Instant Wallet Provider Injection\n    if (!window.RimbleWeb3_context || context.connectorName !== window.RimbleWeb3_context.connectorName){\n      window.RimbleWeb3_context = context;\n    }\n\n    // Reset setConnectorName if force connectorName\n    if (connectorName){\n      setConnectorName = null;\n    } else {\n      connectorName = this.props.connectorName;\n    }\n\n    // if (connectorName !== 'Infura' && connectorName !== 'Injected' && !context.library){\n    //   connectorName = 'Infura';\n    //   this.props.setConnector('Infura',null);\n    //   if (web3 && typeof web3.currentProvider.disable === 'function'){\n    //     web3.currentProvider.disable();\n    //   } else if (context.connector && typeof context.connector.disable === 'function'){\n    //     context.connector.disable();\n    //   }\n    // }\n\n    // const last_context = localStorage ? JSON.parse(localStorage.getItem('context')) : null;\n\n    // this.functionsUtil.customLog('initWeb3',context.active,connectorName,context.connectorName,context.connector,(web3 && web3.currentProvider ? web3.currentProvider.disable : null),(context.connector ? context.connector.disable : null));\n    if (context && connectorName === 'Infura' && connectorName !== context.connectorName){\n      if (web3 && typeof web3.currentProvider.disable === 'function'){\n        web3.currentProvider.disable();\n      } else if (context.connector && typeof context.connector.disable === 'function'){\n        context.connector.disable();\n      }\n      web3 = null;\n      setConnectorName = null;\n    }\n\n    const connectorNameChanged = (context.connectorName && context.connectorName !== connectorName) || (connectorName !== 'Infura' && connectorName !== setConnectorName);\n\n    if (connectorName !== 'ledgerLive'){\n      if (!context.active || connectorNameChanged) {\n        // Select preferred web3 provider\n        if (connectorName && connectorNameChanged){\n\n          if (connectorName === 'gnosis' && !this.state.gnosisSafeLoaded){\n            return false;\n          }\n\n          // this.functionsUtil.customLog('initWeb3 set connector',connectorName);\n          setConnectorName = connectorName;\n          await context.setConnector(connectorName);\n          // await context.setFirstValidConnector([connectorName, 'Infura']);\n\n          // console.log('initWeb3 - setConnector('+connectorName+') and return web3');\n          return web3;\n        }\n      }\n    }\n\n    let web3Host = web3Rpc;\n    let web3Provider = null;\n\n    // console.log('initWeb3-PRE',connectorName,web3,context);\n\n    if (!web3) { // safety web3 implementation\n      if (window.ethereum) {\n        this.functionsUtil.customLog(\"Using modern web3 provider.\");\n        web3Provider = window.ethereum;\n      } else if (window.web3) {\n        this.functionsUtil.customLog(\"Legacy web3 provider. Try updating.\");\n        web3Provider = window.web3;\n      } else {\n        this.functionsUtil.customLog(\"Non-Ethereum browser detected. Using Infura fallback.\");\n        web3Host = web3InfuraRpc;\n      }\n    } else {\n      web3Provider = web3.currentProvider;\n    }\n\n    let forceCallback = false;\n\n    if ((!connectorName || connectorName === 'Infura') && web3Provider && typeof web3Provider.enable === 'function'){\n      try {\n        await web3Provider.enable();\n      } catch (connectionError){\n        web3Provider = null;\n        web3Host = web3InfuraRpc;\n        forceCallback = true;\n      }\n    }\n\n    // Ledger Live\n    if (connectorName === 'ledgerLive'){\n      web3Provider = new IFrameEthereumProvider();\n    }\n\n    // Injected web3 provider\n    if (web3Provider && useWeb3Provider){\n      web3 = new Web3(web3Provider);\n    // Infura\n    } else if (web3Host) {\n      web3 = web3Providers[networkId];\n    }\n\n    // console.log('initWeb3',connectorName,web3,context,web3Provider/*,web3Provider===context.library.currentProvider*/);\n\n    const web3Callback = async (initWeb3Index) => {\n\n      // console.log('web3Callback - CHECK INDEX',initWeb3Index,this.state.initWeb3Index,initWeb3Index === this.state.initWeb3Index);\n      if (initWeb3Index !== this.state.initWeb3Index){\n        return false;\n      }\n\n      window.web3Injected = this.state.web3;\n      // window.web3InfuraInjected = this.state.web3Infura;\n\n      if (typeof this.props.callbackAfterLogin === 'function'){\n        this.props.callbackAfterLogin();\n        this.props.setCallbackAfterLogin(null);\n      }\n\n      if (typeof this.props.callbackWeb3 === 'function'){\n        this.props.callbackWeb3(this.state.web3);\n      }\n\n      // console.log('web3Callback',this.state.network,this.state.biconomy,this.state.web3);\n\n      // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initWeb3 - web3Callback');\n\n      // After setting the web3 provider, check network\n      try {\n        // console.log('checkNetwork_call');\n        // Check network after injected web3 loaded\n        const isGnosisSafe = this.props.connectors.gnosis.safeLoaded && !!this.props.connectors.gnosis.provider.safe;\n        if (!this.state.network.isCorrectNetwork && isGnosisSafe){\n          await this.checkNetwork();\n        }\n\n        if (this.state.network.isSupportedNetwork){\n          await this.initializeContracts();\n          if (context.active && context.connectorName===connectorName && context.account){\n            // Login with biconomy\n            if (this.state.biconomy){\n              const biconomy = this.state.biconomy;\n              const biconomyInfo = globalConfigs.network.providers.biconomy;\n              if (biconomyInfo.enableLogin && !biconomy.isLogin && !biconomyLoginProcessing){\n                biconomyLoginProcessing = true;\n                biconomy.login(context.account, (error, response) => {\n                  // this.functionsUtil.customLog('biconomy login',error,response);\n                  // Failed to login with Biconomy\n                  if (error) {\n                    return this.setState({\n                      biconomy:false,\n                    },() => {\n                      this.initAccount(context.account);\n                    });\n                  }\n\n                  biconomyLoginProcessing = false;\n\n                  if (response.transactionHash) {\n                    this.initAccount(context.account);\n                  } else if(response.userContract) {\n                    this.initAccount(context.account);\n                  }\n                });\n                return false;\n              }\n            }\n\n            await this.initAccount(context.account);\n          } else {\n            await this.initAccount();\n            // await this.setState({\n            //   accountInizialized: true,\n            //   account: this.props.customAddress\n            // });\n          }\n        }\n      // Initialize Infura Web3 and display error\n      } catch (error) {\n        this.openConnectionErrorModal(null,error.message);\n      }\n    }\n\n    // Save original web3 connector in case Mexa initialization fails\n    const originalWeb3 = web3;\n    const initWeb3Index = parseInt(this.state.initWeb3Index)+1;\n\n\n    this.setState({\n      web3Infura,\n      web3Polygon,\n      initWeb3Index,\n      web3Providers,\n    },() => {\n      // this.checkNetwork();\n    });\n\n    const currentNetworkId = this.state.network.current.id;\n    const biconomyInfo = globalConfigs.network.providers.biconomy;\n\n    // console.log('check biconomy enabled',this.state.network,currentNetworkId,biconomyInfo.supportedNetworks.includes(currentNetworkId));\n\n    if (connectorName !== 'Infura' && biconomyInfo && biconomyInfo.enabled && biconomyInfo.supportedNetworks.includes(currentNetworkId) && (!walletProvider || !biconomyInfo.disabledWallets.includes(walletProvider.toLowerCase()))){\n\n      const biconomyWeb3Provider = web3Provider ? web3Provider : new Web3.providers.HttpProvider(web3Host);\n      if (this.state.biconomy === null || this.state.biconomy.currentProvider !== biconomyWeb3Provider ){\n        const biconomy = new Biconomy(biconomyWeb3Provider,biconomyInfo.params);\n        if (biconomy && typeof biconomy.onEvent === 'function'){\n\n          // Reset contracts initialized\n          this.setState({\n            accountInizialized:false,\n            contractsInitialized:false\n          });\n\n          web3 = new Web3(biconomy);\n          biconomy.onEvent(biconomy.READY, () => {\n            if (this.componentUnmounted || this.state.biconomy === false || (this.state.biconomy === biconomy && web3 !== this.state.web3)){\n              // console.log('biconomy already loaded',biconomyWeb3Provider,this.state.biconomy===biconomy);\n              return false;\n            }\n            \n            const permitClient = biconomy.permitClient;\n            const erc20ForwarderClient = biconomy.erc20ForwarderClient;\n\n            const newState = {\n              web3,\n              biconomy,\n              web3Infura,\n              permitClient,\n              web3Providers,\n              erc20ForwarderClient\n            };\n            // console.log('biconomy',newState);\n\n            if (web3 !== this.state.web3){\n              this.setState(newState, () => web3Callback(initWeb3Index));\n            }\n          }).onEvent(biconomy.ERROR, (error, message) => {\n            console.error('Biconomy error',error,message,this.state.biconomy);\n            web3 = originalWeb3;\n            // Handle error while initializing mexa\n            if (this.state.biconomy !== false){\n              this.setState({\n                web3,\n                biconomy:false\n              }, () => web3Callback(initWeb3Index));\n            }\n          });\n        } else {\n          this.setState({\n            web3,\n            biconomy:false\n          }, () => web3Callback(initWeb3Index));\n        }\n      }\n    } else {\n      if (web3 !== this.state.web3){\n        this.setState({\n          web3\n        }, () => web3Callback(initWeb3Index) );\n      } else if (context.account || forceCallback){\n        web3Callback(initWeb3Index);\n      }\n    }\n\n    return web3;\n  }\n\n  initContract = async (name, address, abi, useInfuraProvider=false) => {\n    // console.log(`initContract: ${name} - addr: ${address}`);\n    return await this.createContract(name, address, abi, useInfuraProvider);\n  }\n\n  initContractWithoutSet = (name, address, abi, networkId=null) => {\n    // Reset networkId is equal to injected\n    if (networkId && parseInt(networkId) === parseInt(this.state.network.required.id) && this.state.network.isCorrectNetwork){\n      networkId = null;\n    }\n    const web3Provider = networkId && this.state.web3Providers[networkId] ? this.state.web3Providers[networkId] : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    if (!web3Provider){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      return {name, contract};\n    } catch (error) {\n      this.functionsUtil.customLogError(\"Could not create contract.\",name,address,error);\n    }\n\n    return null;\n  }\n\n  createContract = async (name, address, abi, useInfuraProvider=false) => {\n\n    const web3Provider = useInfuraProvider && this.state.web3Infura ? this.state.web3Infura : (this.state.network.isCorrectNetwork ? this.state.web3 : this.state.web3Providers[this.state.network.required.id]);\n\n    // if (name==='ERC20Predicate'){\n    //   console.log('createContract',this.state.network,web3Provider);\n    // }\n\n    if (!web3Provider || !abi){\n      return null;\n    }\n\n    // Create contract on initialized web3 provider with given abi and address\n    try {\n      const contract = new web3Provider.eth.Contract(abi, address);\n      const contractInfo = {name, contract};\n\n      this.setState(prevState => {\n        // Remove old contract\n        const contracts = prevState.contracts.filter( c => c.name !== contractInfo.name );\n        // Insert updated contract\n        contracts.push(contractInfo);\n        return {\n          contracts\n        };\n      });\n\n      return contractInfo;\n    } catch (error) {\n      console.error(\"Could not create contract.\",name,address,abi,error);\n    }\n\n    return null;\n  }\n\n  initSimpleID = () => {\n\n    if (this.state.simpleID){\n      return this.state.simpleID;\n    }\n\n    const simpleIDInfo = globalConfigs.network.providers.simpleID;\n    let simpleID = null;\n    const networkId = this.state.network.current.id || this.state.network.required.id;\n\n    if (simpleIDInfo && simpleIDInfo.enabled && simpleIDInfo.supportedNetworks.indexOf(networkId) !== -1 ){\n      const simpleIDParams = simpleIDInfo.params;\n      simpleIDParams.network = simpleIDInfo.getNetwork(this.state.network.current.id,globalConfigs.network.availableNetworks);\n      simpleID = new SimpleID(simpleIDParams);\n    }\n\n    window.simpleID = simpleID;\n\n    this.setState({\n      simpleID\n    });\n\n    return simpleID;\n  }\n\n  initAccount = async (account=false) => {\n    \n    const customAddress = this.props.customAddress;\n    const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n\n    if (customAddress){\n      // Set custom account\n      return this.setState({\n        account:customAddress,\n        accountInizialized:true,\n      },()=>{\n        this.getAccountBalance();\n      });\n    } else if (this.props.connectorName === 'Infura' || !this.props.connectorName || !this.props.context.active){\n      return this.setState({\n        account:null,\n        accountInizialized:true\n      });\n    }\n\n    // console.log('initAccount_1',this.props.connectorName,this.props.context,this.props.context.account,account,this.state.account);\n\n    try {\n\n      if (this.props.context.active && this.props.context.connectorName===this.props.connectorName && this.props.context.account){\n        account = this.props.context.account;\n      }\n\n      if (!account){\n        const wallets = await this.state.web3.eth.getAccounts();\n\n        if (wallets && wallets.length){\n          account = wallets[0];\n        }\n      }\n\n      if (!account){\n        account = this.props.context.account;\n      }\n\n      if (!account || this.state.account === account){\n        return this.setState({\n          accountInizialized: true\n        });\n      }\n\n      // console.log('initAccount_2',account);\n\n      // Request account access if needed\n      if (account){\n\n        // Send address info to SimpleID\n        const simpleID = this.initSimpleID();\n\n        if (simpleID){\n\n          const notifications = await simpleID.notifications();\n\n          if (notifications && notifications.length && window.$crisp){\n\n            let shownNotifications = [];\n            if (localStorage){\n              shownNotifications = localStorage.getItem('shownNotifications') && JSON.parse(localStorage.getItem('shownNotifications')) ? JSON.parse(localStorage.getItem('shownNotifications')) : [];\n            }\n\n            notifications.forEach((n,i) => {\n\n              const notificationId = n.name;\n\n              // Show notification if not shown already\n              if (shownNotifications.indexOf(notificationId) === -1){\n                window.$crisp.push([\"do\", \"message:show\", [\"text\", this.functionsUtil.normalizeSimpleIDNotification(n.content) ]]);\n\n                // Save notification id\n                shownNotifications.push(notificationId);\n              }\n            });\n\n            // Store shown notification\n            if (localStorage){\n              this.functionsUtil.setLocalStorage('shownNotifications',JSON.stringify(shownNotifications));\n            }\n          }\n        }\n\n        // Send Google Analytics connection event\n        this.functionsUtil.sendGoogleAnalyticsEvent({\n          eventCategory: 'Connect',\n          eventAction: 'connected',\n          eventLabel: walletProvider\n        });\n\n        // this.functionsUtil.customLog('initAccount',account);\n\n        // Set custom account\n        this.setState({\n          account,\n          // web3SocketProvider,\n          accountInizialized: true\n        },()=>{\n          // After account is complete, get the balance\n          this.getAccountBalance();\n        });\n\n        // TODO subscribe for account changes, no polling\n        // set a state flag which indicates if the subscribe handler has been\n        // called at least once\n      } else {\n        return this.setState({\n          account:null,\n          accountInizialized: true,\n        });\n      }\n    } catch (error) {\n\n      this.setState({\n        accountInizialized: true\n      });\n\n      // User denied account access...\n      this.functionsUtil.customLog(\"User cancelled connect request. Error:\", error);\n\n      // console.log(error);\n\n      // Catch ledger error\n      if (error && error.message && error.message.includes('MULTIPLE_OPEN_CONNECTIONS_DISALLOWED')) {\n        return;\n      }\n\n      // Send Sentry connection error\n      const isError = error instanceof Error;\n      if (this.functionsUtil.checkUrlOrigin() && isError){\n        Sentry.captureException(error);\n      }\n\n      // Reject Connect\n      // this.rejectAccountConnect(error);\n    }\n  }\n\n  // TODO: Can this be moved/combined?\n  rejectAccountConnect = error => {\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  getAccountBalance = async (increaseAmount) => {\n\n    if (!this.state.web3){\n      return false;\n    }\n\n    increaseAmount = increaseAmount ? this.functionsUtil.BNify(increaseAmount) : null;\n\n    try {\n\n      let [\n        accountBalance,\n        accountBalanceToken,\n        tokenDecimals\n      ] = await Promise.all([\n        this.state.web3.eth.getBalance(this.state.account), // Get ETH balance\n        this.getTokenBalance(this.state.account), // Get token balance\n        this.getTokenDecimals()\n      ]);\n\n      // console.log('getAccountBalance',this.state.web3,this.state.account,accountBalance,accountBalanceToken,tokenDecimals);\n\n      if (accountBalance) {\n\n        // Convert to wei if decimals found\n        if (accountBalance.toString().includes('.')){\n          accountBalance = this.state.web3.utils.toWei(accountBalance);\n        }\n\n        // Convert to Eth amount\n        accountBalance = this.state.web3.utils.fromWei(\n          accountBalance,\n          'ether'\n        );\n\n        accountBalance = this.functionsUtil.BNify(accountBalance).toString();\n\n        this.setState({\n          accountBalance\n        });\n\n        this.functionsUtil.customLog(\"account balance: \", accountBalance);\n      }\n\n      // this.functionsUtil.customLog('accountBalance',res,(accountBalanceToken ? accountBalanceToken.toString() : null),tokenDecimals,increaseAmount);\n\n      if (accountBalanceToken) {\n\n        accountBalanceToken = this.functionsUtil.BNify(accountBalanceToken);\n\n        // Increase balance amount if passed and balance didn't change\n        if (increaseAmount && this.state.accountBalanceToken && this.functionsUtil.normalizeTokenAmount(this.state.accountBalanceToken,tokenDecimals).toString() === accountBalanceToken.toString()){\n          accountBalanceToken = accountBalanceToken.plus(increaseAmount);\n        }\n        \n        accountBalanceToken = this.functionsUtil.fixTokenDecimals(accountBalanceToken,tokenDecimals).toString();\n\n        // this.functionsUtil.customLog('increaseAmount',(increaseAmount ? increaseAmount.toString() : '0'),(this.state.accountBalanceToken ? this.state.accountBalanceToken.toString() : '0'),(accountBalanceToken ? accountBalanceToken.toString() : 'ERROR'));\n        // this.functionsUtil.customLog(`account balance ${this.props.selectedToken}: `, accountBalanceToken);\n\n        this.setState({\n          accountBalanceToken,\n          [`accountBalance${this.props.selectedToken}`]:accountBalanceToken\n        });\n\n      } else {\n        this.functionsUtil.customLog('accountBalanceToken is not set:',accountBalanceToken);\n      }\n    } catch (error) {\n      this.functionsUtil.customLog(\"Failed to get account balance.\", error);\n    }\n  }\n\n  initializeContracts = async () => {\n\n    if (!this.state.web3 || !this.props.availableStrategies){\n      return false;\n    }\n\n    // console.log('initializeContracts',this.state.web3Providers);\n\n    // console.log(this.functionsUtil.strToMoment().format('HH:mm:ss'),'initializeContracts - START',this.state.network.required.id,this.props.availableStrategies,this.props.availableStrategiesNetworks);\n\n    const contracts = [];\n    const contractsNetworks = {};\n    const requiredNetworkId = parseInt(this.state.network.required.id);\n    const availableNetworks = this.functionsUtil.getGlobalConfig(['network','enabledNetworks']);\n\n    if (this.props.availableStrategiesNetworks){\n      Object.keys(this.props.availableStrategiesNetworks).forEach( networkId => {\n        contractsNetworks[networkId] = [];\n        const strategies = this.props.availableStrategiesNetworks[networkId];\n        Object.keys(strategies).forEach( strategy => {\n          const availableTokens = this.props.availableStrategiesNetworks[networkId][strategy];\n          Object.keys(availableTokens).forEach( token => {\n            const tokenConfig = availableTokens[token];\n\n            this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi, networkId));\n\n            this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n            contractsNetworks[networkId].push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi, networkId));\n\n            tokenConfig.protocols.forEach(async (p,i) => {\n              this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n              contractsNetworks[networkId].push(this.initContractWithoutSet(p.token, p.address, p.abi, networkId));\n            });\n          })\n        });\n      });\n    }\n\n    // console.log('initializeContracts',this.state.network,this.state.web3,contracts,this.props.availableStrategies);\n\n    const contractsToInitialize = this.functionsUtil.getGlobalConfig(['contracts',requiredNetworkId]);\n    if (contractsToInitialize){\n      Object.keys(contractsToInitialize).forEach( contractName => {\n        const contractInfo = contractsToInitialize[contractName];\n        if (contractInfo.address !== null && contractInfo.abi !== null){\n          const networkId = contractInfo.networkId ? parseInt(contractInfo.networkId) : requiredNetworkId;\n          // console.log('initializeContracts, init contract', requiredNetworkId, contractName, contractInfo.address);\n          contracts.push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n          contractsNetworks[requiredNetworkId].push(this.initContractWithoutSet(contractName, contractInfo.address, contractInfo.abi, networkId));\n        }\n      });\n    }\n\n    const govTokens = this.functionsUtil.getGlobalConfig(['govTokens']);\n    if (govTokens){\n      Object.keys(govTokens).forEach( token => {\n        const govTokenConfig = govTokens[token];\n        if (!govTokenConfig.enabled){\n          return;\n        }\n        availableNetworks.forEach( networkId => {\n\n          if (govTokenConfig.availableNetworks && !govTokenConfig.availableNetworks.includes(networkId)){\n            return;\n          }\n\n          // Initialize govToken contracts\n          const contractAddress = govTokenConfig.addresses && govTokenConfig.addresses[networkId] ? govTokenConfig.addresses[networkId] : govTokenConfig.address;\n          this.functionsUtil.customLog('initializeContracts, init contract', token, contractAddress);\n          if (parseInt(networkId) === parseInt(requiredNetworkId)){\n            contracts.push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi));\n          }\n          contractsNetworks[networkId].push(this.initContractWithoutSet(token, contractAddress, govTokenConfig.abi, networkId));\n        });\n      });\n    }\n\n    if (this.props.availableStrategies){\n      // Initialize Tokens Contracts\n      Object.keys(this.props.availableStrategies).forEach( strategy => {\n        const availableTokens = this.props.availableStrategies[strategy];\n        Object.keys(availableTokens).forEach( token => {\n          const tokenConfig = availableTokens[token];\n\n          this.functionsUtil.customLog('initializeContracts, init contract',token, tokenConfig.address);\n          contracts.push(this.initContractWithoutSet(token, tokenConfig.address, tokenConfig.abi));\n\n          // Initialize idleTokens contracts\n          this.functionsUtil.customLog('initializeContracts, init contract',tokenConfig.idle.token, tokenConfig.idle.address);\n          contracts.push(this.initContractWithoutSet(tokenConfig.idle.token, tokenConfig.idle.address, tokenConfig.idle.abi));\n\n          // Initialize protocols contracts\n          tokenConfig.protocols.forEach(async (p,i) => {\n            this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n            contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n          });\n\n          // Check migration contract\n          if (tokenConfig.migration){\n\n            if (tokenConfig.migration.oldContract){\n              const oldContract = tokenConfig.migration.oldContract;\n              this.functionsUtil.customLog('initializeContracts, init '+oldContract.name+' contract',oldContract);\n              contracts.push(this.initContractWithoutSet(oldContract.name, oldContract.address, oldContract.abi));\n            }\n\n            // Initialize protocols contracts\n            if (tokenConfig.migration.oldProtocols){\n              tokenConfig.migration.oldProtocols.forEach(async (p,i) => {\n                this.functionsUtil.customLog('initializeContracts, init '+p.token+' contract',p);\n                contracts.push(this.initContractWithoutSet(p.token, p.address, p.abi));\n              });\n            }\n\n            if (tokenConfig.migration.migrationContract){\n              const migrationContract = tokenConfig.migration.migrationContract;\n              this.functionsUtil.customLog('initializeContracts, init '+migrationContract.name+' contract',migrationContract);\n              contracts.push(this.initContractWithoutSet(migrationContract.name, migrationContract.address, migrationContract.abi));\n            }\n          }\n        })\n      });\n    }\n\n    const tranchesConfig = this.functionsUtil.getGlobalConfig(['strategies','tranches']);\n    if (this.props.availableTranches){\n      Object.keys(this.props.availableTranches).forEach( protocol => {\n        const tokens = this.props.availableTranches[protocol];\n        Object.keys(tokens).forEach( token => {\n          const tokenConfig = tokens[token];\n          if (!tranchesConfig.availableNetworks || tranchesConfig.availableNetworks.includes(requiredNetworkId)){\n            if (tokenConfig.abi){\n              contracts.push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi));\n            }\n            contracts.push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi));\n            contracts.push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi));\n          }\n\n          if (tokenConfig.abi){\n            contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.token,tokenConfig.address,tokenConfig.abi,1));\n          }\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.AA.name,tokenConfig.AA.address,tokenConfig.AA.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.BB.name,tokenConfig.BB.address,tokenConfig.BB.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.CDO.name,tokenConfig.CDO.address,tokenConfig.CDO.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.AA.CDORewards.name,tokenConfig.AA.CDORewards.address,tokenConfig.AA.CDORewards.abi,1));\n          contractsNetworks[1].push(this.initContractWithoutSet(tokenConfig.BB.CDORewards.name,tokenConfig.BB.CDORewards.address,tokenConfig.BB.CDORewards.abi,1));\n        });\n      });\n    }\n\n    const gaugesAvailableNetworks = this.functionsUtil.getGlobalConfig(['tools','gauges','availableNetworks']);\n    const gauges = this.functionsUtil.getGlobalConfig(['tools','gauges','props','availableGauges']);\n    Object.keys(gauges).forEach(gaugeToken => {\n      const gaugeConfig = gauges[gaugeToken];\n      if (gaugesAvailableNetworks.includes(requiredNetworkId)){\n        contracts.push(this.initContractWithoutSet(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi));\n      }\n      contractsNetworks[1].push(this.initContractWithoutSet(gaugeConfig.name,gaugeConfig.address,gaugeConfig.abi,1));\n    });\n\n    const newContracts = Object.assign([],this.state.contracts);\n    contracts.forEach( contractInfo => {\n      if (contractInfo){\n        const contractFound = newContracts.find( c => c.name===contractInfo.name );\n        if (!contractFound){\n          newContracts.push(contractInfo);\n        } else {\n          const contractIndex = newContracts.indexOf(contractFound);\n          newContracts[contractIndex] = contractInfo;\n        }\n      }\n    });\n\n    // console.log('initializeContracts',newContracts);\n\n    const newState = {\n      contractsNetworks,\n      contracts:newContracts,\n      contractsInitialized:true\n    };\n\n    return this.setState(newState);\n  }\n\n  getContractByName = async (contractName) => {\n    let contract = this.state.contracts.find(c => c.name === contractName);\n\n    if (!contract && this.props.tokenConfig) {\n      const tokenConfig = this.props.tokenConfig;\n      contract = await this.initContract(contractName, tokenConfig.address, tokenConfig.abi);\n    }\n\n    return contract ? contract.contract : null;\n  }\n\n  getTokenDecimals = async () => {\n    let tokenDecimals = null;\n\n    if (!this.state.tokenDecimals){\n\n      tokenDecimals = await this.functionsUtil.getTokenDecimals(this.props.selectedToken);\n\n      this.setState({\n        tokenDecimals\n      });\n    } else {\n      tokenDecimals = await (new Promise( async (resolve, reject) => {\n        resolve(this.state.tokenDecimals);\n      }));\n    }\n\n    return tokenDecimals;\n  }\n\n  getTokenBalance = async (account) => {\n    const contract = await this.getContractByName(this.props.selectedToken);\n\n    if (!contract) {\n      this.functionsUtil.customLogError('Wrong contract name', this.props.selectedToken);\n      return null;\n    }\n\n    if (!contract.methods['balanceOf']){\n      this.customLogError('Wrong method name balanceOf');\n      return null;\n    }\n\n    return await contract.methods.balanceOf(account).call().catch(error => {\n      this.functionsUtil.customLog(`Failed to get ${this.props.selectedToken} balance`, error);\n    });\n  }\n\n  determineAccountLowBalance = () => {\n    // If provided a minimum from config then use it, else default to 1\n    const accountBalanceMinimum =\n      typeof this.props.config !== \"undefined\" &&\n      typeof this.props.config.accountBalanceMinimum !== \"undefined\"\n        ? this.props.config.accountBalanceMinimum\n        : 1;\n    // Determine if the account balance is low\n    const accountBalanceLow =\n      this.state.accountBalance < accountBalanceMinimum;\n\n    this.setState({\n      accountBalanceLow\n    });\n  }\n\n  connectAndValidateAccount = async (callbackAfterLogin) => {\n    // Check for account\n    if (!this.state.account) {\n      this.props.setCallbackAfterLogin(callbackAfterLogin);\n      // Show modal to connect account\n      this.openConnectionModal();\n    }\n  }\n\n  getRequiredNetwork = () => {\n     const networkId = typeof this.props.config !== \"undefined\" && typeof this.props.config.requiredNetwork !== \"undefined\" ? this.props.config.requiredNetwork : globalConfigs.network.requiredNetwork;\n     const networkName = networkId && globalConfigs.network.availableNetworks[networkId] ? globalConfigs.network.availableNetworks[networkId].name : 'unknown';\n     return {\n       id: networkId,\n       name: networkName\n     };\n   }\n\n   getCurrentNetwork = async (networkId=null) => {\n     const currentWeb3 = this.functionsUtil.getCurrentWeb3();\n\n     // console.log('getCurrentNetwork',this.state.web3,currentWeb3);\n\n     networkId = parseInt(networkId) || await currentWeb3.eth.net.getId();\n     const networkName = this.functionsUtil.getGlobalConfig(['network','availableNetworks',networkId,'name']) || await currentWeb3.eth.net.getNetworkType();\n\n     return {\n       id:networkId,\n       name:networkName\n     }\n   }\n\n  getNetworkId = async () => {\n    try {\n      return this.state.web3.eth.net.getId((error, networkId) => {\n        let current = { ...this.state.network.current };\n        current.id = networkId;\n        let network = Object.assign({},this.state.network);\n        network.current = current;\n        network.isCorrectNetwork = globalConfigs.network.enabledNetworks.includes(networkId);\n        this.setState({ network });\n      });\n    } catch (error) {\n      this.functionsUtil.customLog(\"Could not get network ID: \", error);\n    }\n  }\n\n  checkNetwork = async (networkId=null) => {\n    const network = {...this.state.network};\n\n    network.required = this.getRequiredNetwork();\n    network.current = await this.getCurrentNetwork(networkId);\n\n    const networkInitialized = !!network.current.id;\n    network.isCorrectNetwork = !networkInitialized || network.current.id === network.required.id;\n    network.isSupportedNetwork = !network.current.id || globalConfigs.network.enabledNetworks.includes(network.current.id);\n\n    const currentNetworkChanged = network.current.id && network.current.id !== this.state.network.current.id;\n    const requiredNetworkChanged = network.required.id && network.required.id !== this.state.network.required.id;\n\n    const updateNetwork = !this.state.network.current.id || currentNetworkChanged || requiredNetworkChanged || !this.state.networkInitialized;\n\n    // console.log('checkNetwork','networkId:'+networkId,', curr: '+this.state.network.current.id,', netID: '+network.current.id,', required: '+network.required.id,', correct: '+network.isCorrectNetwork,', update: '+updateNetwork);\n    if (updateNetwork){\n      this.setState({\n        network,\n        networkInitialized\n      });\n    }\n\n    return network;\n  }\n\n  contractMethodSendWrapper = async (contractName, contractMethod, params = [], value = null, callback = null, callback_receipt = null, gasLimit = null, txData = null) => {\n    // Is it on the correct network?\n    if (!this.state.network.isCorrectNetwork) {\n      // wrong network modal\n      this.state.modals.methods.openWrongNetworkModal();\n      return false;\n    }\n\n    // Is a wallet connected and verified?\n    if (!this.state.account) {\n      this.openConnectionModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_not_connected');\n      }\n      return false;\n    }\n\n    // Are there a minimum amount of funds?\n    if (this.state.accountBalanceLow) {\n      this.openLowFundsModal();\n      if (typeof callback === 'function') {\n        callback(null,'account_balance_low');\n      }\n      return false;\n    }\n\n    // Is the contract loaded?\n\n    // Create new tx and add to collection\n    // Maybe this needs to get moved out of the wrapper?\n    let transaction = this.createTransaction(txData);\n    transaction.method = contractMethod;\n\n    this.addTransaction(transaction);\n\n    // Add meta data to transaction\n    transaction.type = \"contract\";\n    transaction.status = \"started\";\n    transaction.params = params;\n\n    // Show toast for starting transaction\n    this.updateTransaction(transaction);\n\n    const { account, contracts } = this.state;\n    let contract = contracts.find(c => c.name === contractName);\n    if (!contract) {\n      if (typeof callback === 'function') {\n        callback(null,'contract_not_found');\n      }\n      return this.functionsUtil.customLog(`No contract with name ${contractName}`);\n    }\n\n    contract = contract.contract;\n\n    // Does the method exists?\n    // if (typeof contract.methods[contractMethod] === 'undefined'){\n    //   return false;\n    // }\n\n    let manualConfirmationTimeoutId = null;\n\n    try {\n\n      if (!value){\n        value = this.functionsUtil.BNify(0);\n      }\n\n      this.functionsUtil.customLog('contractMethodSendWrapper',contractName,contract._address,account,contractMethod,params,(value ? { from: account, value } : { from: account }));\n\n      // estimate gas price\n      let gas = await contract.methods[contractMethod](...params)\n        .estimateGas(value ? { from: account, value } : { from: account })\n        .catch(e => console.error(e));\n\n      if (gas) {\n\n        gas = this.functionsUtil.BNify(gas);\n        gas = gas.plus(gas.times(this.functionsUtil.BNify('0.2'))); // Increase 20% of enstimation\n\n        // Check if gas is under the gasLimit param\n        if (gasLimit && gas.lt(this.functionsUtil.BNify(gasLimit))){\n          gas = this.functionsUtil.BNify(gasLimit);\n        }\n\n        // Convert gasLimit toBN with web3 utils\n        gas = this.state.web3.utils.toBN(gas.integerValue(BigNumber.ROUND_FLOOR));\n      }\n\n      const confirmationCallback = (confirmationNumber, receipt) => {\n\n        // this.functionsUtil.customLog('confirmationCallback', confirmationNumber, receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // this.functionsUtil.customLog('txOnConfirmation', receipt);\n        // Update confirmation count on each subsequent confirmation that's received\n        transaction.confirmationCount += 1;\n\n        const call_callback = !globalConfigs.network.isForked && typeof callback === 'function' && transaction.confirmationCount===1;\n\n        // How many confirmations should be received before informing the user\n        const confidenceThreshold = this.props.config.requiredConfirmations || 1;\n\n        if (transaction.confirmationCount === 1) {\n          // Initial confirmation receipt\n          transaction.status = \"confirmed\";\n        } else if (transaction.confirmationCount < confidenceThreshold) {\n          // Not enough confirmations to match threshold\n        }\n\n        if (transaction.confirmationCount === confidenceThreshold) {\n          // Confirmations match threshold\n          // Check the status from result since we are confident in the result\n          if (receipt.status) {\n            transaction.status = \"success\";\n          } else if (!receipt.status) {\n            transaction.status = \"error\";\n          }\n        } else if (transaction.confirmationCount > confidenceThreshold) {\n          // Confidence threshold met\n        }\n\n\n        if (call_callback){\n          // Update transaction with receipt details\n          if (receipt){\n            transaction.txReceipt = receipt;\n          }\n          transaction.recentEvent = \"confirmation\";\n          this.updateTransaction(transaction);\n          \n          callback(transaction);\n\n          this.functionsUtil.customLog('Confirmed', confirmationNumber, receipt, transaction);\n        }\n      };\n\n      const manualConfirmation = (transactionHash,timeout) => {\n        if (!transactionHash){\n          return false;\n        }\n        this.state.web3.eth.getTransactionReceipt(transactionHash,(err,txReceipt) => {\n          if (txReceipt && txReceipt.status){\n            this.functionsUtil.customLog('Tx manualConfirmation', txReceipt);\n            confirmationCallback(1,txReceipt);\n          } else {\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(transactionHash,timeout) , timeout);\n          }\n        });\n      };\n\n      const receiptCallback = receipt => {\n\n        // this.functionsUtil.customLog('txOnReceipt', receipt);\n\n        if (manualConfirmationTimeoutId){\n          window.clearTimeout(manualConfirmationTimeoutId);\n        }\n\n        // Received receipt, met total number of confirmations\n        if (receipt){\n          transaction.txReceipt = receipt;\n        }\n        transaction.recentEvent = \"receipt\";\n\n        // If the network is forked use the receipt for confirmation\n        if (globalConfigs.network.isForked){\n          transaction.status = \"success\";\n          if (typeof callback === 'function') {\n            callback(transaction);\n          }\n        } else {\n          this.updateTransaction(transaction);\n\n          // Transaction mined, wait for manual confirmation\n          if (receipt.status){\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(receipt.transactionHash,4000), 2000);\n          }\n        }\n      };\n\n      // const networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n      // const common = { customChain:{ chainId: 1337, networkId: 1337 } };\n\n      return contract.methods[contractMethod](...params)\n        .send(value ? { from: account, value, gas/*, common*/ } : { from: account, gas/*, common*/ })\n        .on(\"transactionHash\", hash => {\n          this.functionsUtil.customLog('txOnTransactionHash', hash);\n\n          if (!hash){\n            this.functionsUtil.customLog('Skip transactionHash due to hash empty', hash);\n            return false;\n          }\n\n          transaction.transactionHash = hash;\n          transaction.status = \"pending\";\n          transaction.recentEvent = \"transactionHash\";\n          this.updateTransaction(transaction);\n\n          if (callback_receipt){\n            callback_receipt(transaction);\n          }\n\n          // Wait for manual confirmation only for mobile\n          if (this.props.isMobile){\n            if (manualConfirmationTimeoutId){\n              window.clearTimeout(manualConfirmationTimeoutId);\n            }\n            manualConfirmationTimeoutId = window.setTimeout( () => manualConfirmation(hash,60000), 20000);\n          }\n        })\n        .on(\"receipt\", receiptCallback)\n        .on(\"confirmation\", confirmationCallback)\n        .on(\"error\", error => {\n\n          console.log('Tx error',error);\n          \n          const isDeniedTx = error && error.message && typeof error.message.includes === 'function' ? error.message.includes('User denied transaction signature') : false;\n          \n          // Set error on transaction\n          transaction.status = \"error\";\n          transaction.recentEvent = \"error\";\n          this.updateTransaction(transaction);\n\n\n          // Show ToastProvider\n          if (!isDeniedTx){\n            window.toastProvider.addMessage(\"Something went wrong\", {\n              icon: 'Block',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n              colorTheme: 'light',\n              secondaryMessage: \"Please retry\",\n            });\n\n            const isError = error instanceof Error;\n\n            if (typeof error.message !== 'undefined'){\n              this.openTransactionErrorModal(null,error.message);\n            } else if (this.functionsUtil.checkUrlOrigin() && isError){\n              Sentry.captureException(error);\n            }\n          }\n\n          if (typeof callback === 'function') {\n            callback(transaction,error);\n          }\n        });\n    } catch (error) {\n\n      console.log('Tx catch error',error);\n\n      transaction.status = \"error\";\n      this.updateTransaction(transaction);\n\n      // TODO: should this be a custom error? What is the error here?\n      // TODO: determine how to handle error messages globally\n      window.toastProvider.addMessage(\"Something went really wrong, we are sorry\", {\n        icon: 'Block',\n        actionHref: \"\",\n        actionText: \"\",\n        variant: \"failure\",\n        colorTheme: 'light',\n        secondaryMessage: \"Try refreshing the page :(\",\n      });\n\n      const isDeniedTx = error && error.message ? error.message.includes('User denied transaction signature') : false;\n\n      const isError = error instanceof Error;\n      if ( this.functionsUtil.checkUrlOrigin() && isError && !isDeniedTx){\n        Sentry.captureException(error);\n      }\n\n      if (typeof callback === 'function') {\n        // this.functionsUtil.customLog('Tx Failed',error,transaction,typeof callback);\n        callback(transaction,error);\n      }\n\n      return false;\n    }\n  }\n\n  // Create tx\n  createTransaction = (txData=null) => {\n    let transaction = {\n      ...txData\n    };\n    transaction.txReceipt = {};\n    transaction.created = Date.now();\n    transaction.confirmationCount = 0;\n    transaction.status = \"initialized\";\n    transaction.lastUpdated = Date.now();\n    transaction.token = this.props.selectedToken;\n    transaction.strategy = this.props.selectedStrategy;\n    transaction.networkId = this.functionsUtil.getGlobalConfig(['network','requiredNetwork']);\n    return transaction;\n  }\n\n  addTransaction = transaction => {\n    const transactions = { ...this.state.transactions };\n    transactions[`tx${transaction.created}`] = transaction;\n    this.setState({ transactions });\n  }\n\n  // Add/update transaction in state\n  updateTransaction = updatedTransaction => {\n    const transactions = { ...this.state.transactions };\n    const transaction = { ...updatedTransaction };\n    transaction.lastUpdated = Date.now();\n    transactions[`tx${updatedTransaction.created}`] = transaction;\n    this.setState({ transactions });\n\n    // Save transactions in localStorage only if pending or succeeded\n    // console.log('updateTransaction',transaction);\n    if (transaction.transactionHash){\n      // Clear cached data\n      this.functionsUtil.clearCachedData();\n\n      // Store transaction\n      this.functionsUtil.addStoredTransaction(`tx${transaction.created}`,transaction);\n    }\n\n    return transaction;\n  }\n\n  // CONNECTION MODAL METHODS\n  closeConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = false;\n    // this.functionsUtil.customLog(\"this.state\", this.state);\n    this.setState({ modals });\n  }\n\n  openConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionModalIsOpen = true;\n    this.setState({ modals: modals });\n  }\n\n  closeConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = false;\n    this.setState({ modals });\n  }\n\n  openConnectionPendingModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.accountConnectionPending = true;\n    modals.data.transactionConnectionModalIsOpen = false;\n    modals.data.connectionModalIsOpen = false;\n\n    this.setState({ modals });\n  }\n\n  closeTransactionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = false;\n    this.setState({ modals });\n  }\n\n  openTransactionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.transactionError = error;\n\n    this.setState({ modals });\n  }\n\n  closeConnectionErrorModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n\n    if (!this.state.modals.data.connectionError){\n      return false;\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.connectionError = false;\n    this.setState({ modals });\n  }\n\n  openConnectionErrorModal = (e,error) => {\n    if (typeof e !== \"undefined\" && e) {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n\n    // Handle generic error\n    if (error==='[object Object]'){\n      error = 'Unable to access to the wallet.'\n    }\n    \n    if (this.state.modals.data.connectionError !== error){\n      // console.log('openConnectionErrorModal',typeof error,typeof error === 'object' ? JSON.stringify(error) : error);\n      modals.data.connectionError = error;\n      this.setState({ modals });\n    }\n  }\n\n  closeUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = false;\n    this.setState({ modals });\n  }\n\n  openUserRejectedConnectionModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.userRejectedConnect = true;\n    this.setState({ modals });\n  }\n\n  closeNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWeb3BrowserModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWeb3BrowserModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openNoWalletModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.noWalletModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openWrongNetworkModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.wrongNetworkModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  closeLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = false;\n    this.setState({ modals });\n  }\n\n  openLowFundsModal = e => {\n    if (typeof e !== \"undefined\") {\n      e.preventDefault();\n    }\n\n    let modals = { ...this.state.modals };\n    modals.data.lowFundsModalIsOpen = true;\n    this.setState({ modals });\n  }\n\n  state = {\n    web3: null,\n    context:null,\n    account: null,\n    contracts: [],\n    biconomy: null,\n    simpleID: null,\n    web3Infura:null,\n    initWeb3Index:0,\n    transactions: {},\n    web3Providers:{},\n    CrispClient: null,\n    permitClient:null,\n    tokenDecimals:null,\n    maticPOSClient: null,\n    accountBalance: null,\n    contractsNetworks: {},\n    web3Subscription: null,\n    accountValidated: null,\n    gnosisSafeLoaded:false,\n    maticPlasmaClient:null,\n    accountBalanceDAI: null,\n    initWeb3: this.initWeb3,\n    accountBalanceLow: null,\n    networkInitialized:false,\n    accountInizialized:false,\n    erc20ForwarderClient:null,\n    subscribedTransactions:{},\n    contractsInitialized:false,\n    initAccount: this.initAccount,\n    accountValidationPending: null,\n    initSimpleID: this.initSimpleID,\n    initContract: this.initContract,\n    checkPreflight: this.checkPreflight,\n    validateAccount: this.validateAccount,\n    rejectValidation: this.rejectValidation,\n    getTokenDecimals: this.getTokenDecimals,\n    getAccountBalance: this.getAccountBalance,\n    initializeContracts: this.initializeContracts,\n    rejectAccountConnect: this.rejectAccountConnect,\n    contractMethodSendWrapper: this.contractMethodSendWrapper,\n    connectAndValidateAccount: this.connectAndValidateAccount,\n    enableUnderlyingWithdraw: this.props.enableUnderlyingWithdraw,\n    network: {\n      current: {},\n      required: {},\n      isCorrectNetwork: null,\n      checkNetwork: this.checkNetwork\n    },\n    modals: {\n      data: {\n        connectionError: null,\n        lowFundsModalIsOpen: null,\n        userRejectedConnect: null,\n        connectionModalIsOpen: null,\n        userRejectedValidation: null,\n        wrongNetworkModalIsOpen: null,\n        accountConnectionPending: null,\n        accountValidationPending: null,\n        transactionConnectionModalIsOpen: null,\n        noWalletModalIsOpen: this.noWalletModalIsOpen,\n        noWeb3BrowserModalIsOpen: this.noWeb3BrowserModalIsOpen,\n      },\n      methods: {\n        openLowFundsModal: this.openLowFundsModal,\n        openNoWalletModal: this.openNoWalletModal,\n        closeNoWalletModal: this.closeNoWalletModal,\n        closeLowFundsModal: this.closeLowFundsModal,\n        openConnectionModal: this.openConnectionModal,\n        closeConnectionModal: this.closeConnectionModal,\n        openWrongNetworkModal: this.openWrongNetworkModal,\n        closeWrongNetworkModal: this.closeWrongNetworkModal,\n        openNoWeb3BrowserModal: this.openNoWeb3BrowserModal,\n        closeNoWeb3BrowserModal: this.closeNoWeb3BrowserModal,\n        openConnectionErrorModal: this.openConnectionErrorModal,\n        closeConnectionErrorModal: this.closeConnectionErrorModal,\n        openTransactionErrorModal: this.openTransactionErrorModal,\n        closeTransactionErrorModal: this.closeTransactionErrorModal,\n        openConnectionPendingModal: this.openConnectionPendingModal,\n        closeConnectionPendingModal: this.closeConnectionPendingModal,\n        openUserRejectedValidationModal: this.openUserRejectedValidationModal,\n        openUserRejectedConnectionModal: this.openUserRejectedConnectionModal,\n        closeUserRejectedValidationModal: this.closeUserRejectedValidationModal,\n        closeUserRejectedConnectionModal: this.closeUserRejectedConnectionModal,\n      }\n    },\n    transaction: {\n      data: {\n        transactions: null\n      },\n      meta: {},\n      methods: {}\n    }\n  }\n\n  render() {\n    const connectionErrorModalOpened = typeof this.state.modals.data.connectionError === 'string' && this.state.modals.data.connectionError.length>0;\n    const transactionErrorModalOpened = typeof this.state.modals.data.transactionError === 'string' && this.state.modals.data.transactionError.length>0;\n    return (\n      <div>\n        <RimbleTransactionContext.Provider\n          {...this.props}\n          value={this.state}\n        />\n        <ConnectionModalUtil\n          {...this.props}\n          modals={this.state.modals}\n          network={this.state.network}\n          account={this.state.account}\n          isMobile={this.props.isMobile}\n          initAccount={this.state.initAccount}\n          setConnector={this.props.setConnector}\n          validateAccount={this.state.validateAccount}\n          accountValidated={this.state.accountValidated}\n          accountConnectionPending={this.state.accountConnectionPending}\n          accountValidationPending={this.state.accountValidationPending}\n        />\n        <TransactionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={transactionErrorModalOpened}\n        />\n        <ConnectionErrorModal\n          modals={this.state.modals}\n          account={this.state.account}\n          context={this.props.context}\n          isOpen={connectionErrorModalOpened}\n          setConnector={this.props.setConnector}\n        />\n        <NetworkUtil\n          web3={this.state.web3}\n          theme={this.props.theme}\n          network={this.state.network}\n          currentSection={this.props.currentSection}\n        />\n      </div>\n    );\n  }\n}\n\nexport default RimbleTransaction;\n","import React from \"react\";\nimport ExtLink from '../../ExtLink/ExtLink';\nimport FunctionsUtil from '../FunctionsUtil';\nimport { Box, Flex, Image, Text, Link, Icon } from \"rimble-ui\";\n// import NetworkIndicator from \"../../NetworkIndicator/NetworkIndicator\";\n\nimport {\n  Link as RouterLink\n} from \"react-router-dom\";\n\nclass Header extends React.Component {\n  state = {\n\n  };\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  async componentDidMount() {\n\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n\n    this.loadUtils();\n\n    if (this.props.network && !this.props.network.isCorrectNetwork){\n      return false;\n    }\n  }\n\n  render() {\n\n    let logoSrc = 'images/logo.svg';\n    let logoHeight = ['35px','48px'];\n    const isChristmas = this.functionsUtil.checkChristmas();\n    if (isChristmas){\n      logoHeight = ['42px','70px'];\n      logoSrc = 'images/logo-christmas.svg';\n    }\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n\n    return (\n      <Box\n        style={{\n          left: '0',\n          right: '0',\n          zIndex: 99,\n          position: 'absolute',\n        }}\n      >\n        <Flex\n          p={2}\n          alignItems={'center'}\n          justifyContent={'center'}\n          backgroundColor={'dark-blue'}\n          flexDirection={['column','row']}\n        >\n          <Text\n            color={'white'}\n            textAlign={'center'}\n          >\n            stkIDLE Gauges are now live at full throttle with $IDLE rewards!\n          </Text>\n          <ExtLink\n            pr={2}\n            py={1}\n            mt={[1,0]}\n            ml={[0,2]}\n            pl={'12px'}\n            color={'white'}\n            style={{\n              display:'flex',\n              borderRadius:'8px',\n              flexDirection:'row',\n              alignItems:'flex-end'\n            }}\n            backgroundColor={'#0037ff'}\n            href={'https://medium.com/idle-finance/introducing-stkidle-gauges-a-new-stakers-centric-paradigm-for-pyts-and-lps-8c0ef167232e'}\n          >\n            Discover More\n            <Icon\n              ml={1}\n              size={'1.3em'}\n              color={'white'}\n              name={'KeyboardArrowRight'}\n            >\n            </Icon>\n          </ExtLink>\n        </Flex>\n        <Flex\n          pt={[3,4]}\n          mx={'auto'}\n          bg={\"transparent\"}\n          width={['98%','100%']}\n          maxWidth={['100%','100em']}\n          alignItems={['center','flex-start']}\n        >\n          <Flex\n            ml={[3, 5]}\n            width={[0.5, 3/12]}\n          >\n            <RouterLink\n              to=\"/\"\n            >\n              <Image\n                src={logoSrc}\n                position={'relative'}\n                height={logoHeight}\n              />\n            </RouterLink>\n          </Flex>\n          <Flex\n            width={[0.5,8/12]}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={\"flex-end\"}\n          >\n            <Flex\n              pr={[3,0]}\n              alignItems={'center'}\n              flexDirection={'row'}\n            >\n              {\n                governanceEnabled && \n                  <Link\n                    fontSize={3}\n                    color={'white'}\n                    hoverColor={'white'}\n                    fontFamily={'sansSerif'}\n                    textAlign={['center','left']}\n                    onClick={ (e) => window.location.hash='#/governance' }\n                  >\n                    Governance\n                  </Link>\n              }\n              {\n                !this.props.isMobile && (\n                  <>\n                    <Link\n                      mx={4}\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('contacts').offsetTop,300)}}\n                    >\n                      Contact Us\n                    </Link>\n                    <Link\n                      fontSize={3}\n                      color={'white'}\n                      hoverColor={'white'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                      onClick={(e) => {this.functionsUtil.scrollTo(document.getElementById('faq').offsetTop,300)}}\n                    >\n                      FAQs\n                    </Link>\n                  </>\n                )\n              }\n            </Flex>\n            {\n              /*\n              <Flex\n                ml={4}\n              >\n                <NetworkIndicator\n                  {...this.props}\n                />\n              </Flex>\n              */\n            }\n          </Flex>\n        </Flex>\n      </Box>\n    );\n  }\n}\n\nexport default Header;\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}","import Footer from '../Footer/Footer';\nimport React, { Component } from 'react';\nimport styles from './PageNotFound.module.scss';\nimport { Box, Flex, Heading, Button } from 'rimble-ui'\nimport Header_styles from '../utilities/components/Header.module.scss';\nimport {\n  Link as RouterLink,\n} from \"react-router-dom\";\n\nclass PageNotFound extends Component {\n  state = {};\n\n  render() {\n    return (\n      <Box>\n        <Box className={styles.headerContainer} px={[3,6]} pt={['2em', '3em']}>\n          <Box className={styles.headerBgFiller}></Box>\n          <Box position={'relative'} zIndex={10}>\n            <Flex flexDirection={'column'} alignItems={'center'} maxWidth={[\"50em\", \"60em\"]} mx={'auto'} textAlign={'center'} pt={['8vh', '8vh']}>\n              <Heading.h1 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.3em'} fontSize={['2.5em',7]} textAlign={'center'} color={'white'}>\n                This page doesn't exist!\n              </Heading.h1>\n              <Heading.h3 fontFamily={'sansSerif'} lineHeight={'1.1em'} mb={'0.6em'} fontWeight={2} fontSize={['1.5em',4]} textAlign={'center'} color={'white'}>\n                Sorry, the page you are looking for cannot be found.\n              </Heading.h3>\n              <RouterLink to=\"/\" style={{textDecoration:'none'}}>\n                <Button\n                  className={Header_styles.gradientButton}\n                  borderRadius={4}\n                  size={this.props.isMobile ? 'medium' : 'medium'}\n                  mainColor={'blue'}\n                  contrastColor={'white'}\n                  fontWeight={3}\n                  fontSize={[2,2]}\n                  mx={'auto'}\n                  px={[4,5]}\n                  mt={2}\n                >\n                  GO TO HOMEPAGE\n                </Button>\n              </RouterLink>\n            </Flex>\n          </Box>\n        </Box>\n        <Footer />\n      </Box>\n    );\n  }\n}\n\nexport default PageNotFound;\n","import React from \"react\";\nimport { Box, Flex, Text } from \"rimble-ui\";\n\nclass NetworkOverview extends React.Component {\n  getNetworkCircleColor = () => {\n    let circleColor = \"#333\";\n    if (this.props.network) {\n      switch (this.props.network.id) {\n        case 1:\n          circleColor = \"#56b3ae\";\n          break;\n        case 2:\n          circleColor = \"#000\";\n          break;\n        case 3:\n          circleColor = \"#ed5a8d\";\n          break;\n        case 4:\n          circleColor = \"#efc35c\";\n          break;\n        case 42:\n          circleColor = \"#6a5ff6\";\n          break;\n        default:\n          circleColor = \"#ccc\";\n      }\n    }\n\n    return circleColor;\n  };\n\n  render() {\n    const networkCircle = {\n      borderRadius: \"50%\",\n      backgroundColor: this.getNetworkCircleColor(),\n      height: \"1em\",\n      width: \"1em\"\n    };\n\n    return (\n      <Flex alignItems={\"center\"}>\n        <Box style={networkCircle} mr={2} />\n        <Text style={{ textTransform: \"capitalize\" }}>\n          {this.props.network.name}\n        </Text>\n      </Flex>\n    );\n  }\n}\n\nexport default NetworkOverview;\n","import React from \"react\";\nimport {\n  Card,\n  Heading,\n  Text,\n  Icon,\n  Flex,\n  ToastMessage,\n  Box,\n  Button,\n  Link\n} from \"rimble-ui\";\nimport NetworkOverview from \"../utilities/components/NetworkOverview\";\n\nconst DebuggerButtons = props => (\n  <Box mt={4} borderTop={1} borderColor=\"#E8E8E8\" pt={3}>\n    <Heading.h4 textAlign={\"center\"}>Show Modal</Heading.h4>\n    <Button\n      onClick={props.modals.methods.openWrongNetworkModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Blocking Wrong Network\n    </Button>\n\n    <Button\n      onClick={props.modals.methods.openConnectionModal}\n      size=\"small\"\n      mr={2}\n      mb={2}\n    >\n      Connection\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openConnectionPendingModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Pending\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openUserRejectedConnectionModal}\n      mr={2}\n      mb={2}\n    >\n      Connection Rejected\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={event => {\n        props.modals.methods.openLowFundsModal(event);\n      }}\n      mr={2}\n      mb={2}\n    >\n      Low Funds\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWeb3BrowserModal}\n      mr={2}\n      mb={2}\n    >\n      Not Web3 Browser\n    </Button>\n    <Button\n      size=\"small\"\n      onClick={props.modals.methods.openNoWalletModal}\n      mr={2}\n      mb={2}\n    >\n      No Wallet\n    </Button>\n  </Box>\n);\n\nclass Web3Debugger extends React.Component {\n  render() {\n    return (\n      <Card width={\"600px\"} mx={\"auto\"} px={4}>\n        <Heading.h3 textAlign={\"center\"}>Get Connected</Heading.h3>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            <Icon name=\"Check\" color={\"green\"} mr={2} />\n            <Text>Modern & Web3 Capable Browser</Text>\n          </Flex>\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.web3 ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Browser-connected Wallet</Text>\n          </Flex>\n\n          {!this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">You do not have a wallet.</Text>\n              </Flex>\n\n              <Link\n                href=\"https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn?hl=en\"\n                target=\"_blank\" rel=\"nofollow noopener noreferrer\"\n              >\n                <Button.Outline size=\"small\">\n                  Get MetaMask Extension\n                </Button.Outline>\n              </Link>\n            </Flex>\n          ) : null}\n        </Box>\n\n        {this.props.web3 ? (\n          <Flex\n            py={3}\n            my={3}\n            borderTop={1}\n            borderBottom={1}\n            borderColor={\"#E8E8E8\"}\n            textAlign={\"center\"}\n            justifyContent={\"space-around\"}\n            alignItems={\"center\"}\n          >\n            <Button\n              size=\"small\"\n              onClick={this.props.connectAndValidateAccount}\n              disabled={!this.props.web3}\n            >\n              Connect and verify\n            </Button>\n            <Text>- or -</Text>\n            <Button size=\"small\" disabled>\n              Initiate On-Chain Action\n            </Button>\n          </Flex>\n        ) : null}\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.network.isCorrectNetwork ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Correct Network</Text>\n          </Flex>\n\n          {this.props.web3 && !this.props.network.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Box>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Current network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.current} />\n                  </Flex>\n                  <Flex alignItems={\"center\"}>\n                    <Text\n                      mr={2}\n                      color=\"#999\"\n                      style={{ textTransform: \"capitalize\" }}\n                    >\n                      Required network:\n                    </Text>\n                    <NetworkOverview network={this.props.network.required} />\n                  </Flex>\n                </Box>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.checkNetwork}>\n                Check Network\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.web3 && this.props.isCorrectNetwork ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <NetworkOverview network={this.props.network.current} />\n            </Flex>\n          ) : null}\n        </Box>\n\n        <Box>\n          <Flex alignItems={\"center\"}>\n            {this.props.account && this.props.accountValidated ? (\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n            ) : (\n              <Icon name=\"Close\" color={\"red\"} mr={2} />\n            )}\n            <Text>Wallet connected and verified</Text>\n          </Flex>\n\n          {!this.props.account &&\n          this.props.web3 &&\n          !this.props.userRejectedConnect ? (\n            <Flex ml={4} alignItems={\"center\"} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Not connected to this dApp.</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n          {this.props.account && this.props.web3 ? (\n            <Flex ml={4} alignItems={\"center\"}>\n              <Icon name=\"Check\" color={\"green\"} mr={2} />\n              <Box>\n                <Text color=\"#999\">Connected wallet {this.props.account}</Text>\n                <Text color={this.props.accountBalanceLow ? \"red\" : \"#999\"}>\n                  Account balance {this.props.accountBalance}\n                </Text>\n              </Box>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedConnect ? (\n            <Flex ml={4} justifyContent={\"space-between\"}>\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">User rejected Connect request</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.initAccount}>\n                Connect\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {(this.props.accountValidated === null ||\n            this.props.accountValidated === false) &&\n          this.props.web3 ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Info\" mr={2} color=\"#999\" />\n                <Text color=\"#999\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.accountValidated === false ? (\n            <Flex\n              ml={4}\n              my={1}\n              alignItems={\"center\"}\n              justifyContent={\"space-between\"}\n            >\n              <Flex alignItems={\"center\"}>\n                <Icon name=\"Error\" mr={2} color=\"red\" />\n                <Text color=\"red\">Account not verified</Text>\n              </Flex>\n\n              <Button.Outline size=\"small\" onClick={this.props.validateAccount}>\n                Validate\n              </Button.Outline>\n            </Flex>\n          ) : null}\n\n          {this.props.userRejectedValidation === false ? (\n            <Flex ml={4}>\n              <Icon name=\"Error\" mr={2} color=\"red\" />\n              <Text color=\"red\">Account not verified</Text>\n            </Flex>\n          ) : null}\n        </Box>\n\n        <DebuggerButtons {...this.props} />\n\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </Card>\n    );\n  }\n}\n\nexport default Web3Debugger;\n","const TransactionToastMessages = {\n    initialized: {\n      message: \"{action} request initialized\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    started: {\n      message: \"{action} request submitted\",\n      secondaryMessage: \"Confirm with your wallet provider\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"default\",\n      icon: \"InfoOutline\"\n    },\n    pending: {\n      message: \"Processing {action} request...\",\n      secondaryMessage: \"This may take a few minutes\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: \"InfoOutline\"\n    },\n    confirmed: {\n      message: \"First block confirmed\",\n      secondaryMessage: \"Your {action} request is in progress\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"processing\",\n      icon: 'CheckCircle'\n    },\n    success: {\n      message: \"{action} request completed\",\n      variant: \"success\",\n      icon: 'CheckCircle'\n    },\n    error: {\n      message: \"{action} request failed\",\n      secondaryMessage: \"Could not complete transaction.\",\n      actionHref: \"\",\n      actionText: \"\",\n      variant: \"failure\",\n      icon: \"Block\"\n    }\n  };\n\n  export default TransactionToastMessages;\n","import React from \"react\";\nimport { ToastMessage } from \"rimble-ui\";\nimport TransactionToastMessages from \"./TransactionToastMessages\";\n\nclass TransactionToastUtil extends React.Component {\n  // Determines if collections are same size\n  collectionHasNewObject = (prevCollection, currentCollection) => {\n    return (\n      typeof prevCollection === \"undefined\" ||\n      Object.keys(prevCollection).length !==\n        Object.keys(currentCollection).length\n    );\n  };\n\n  // Returns object from currentCollection that doesn't exist in prevCollection\n  getNewObjectFromCollection = (prevCollection, currentCollection) => {\n    if (typeof prevCollection !== \"undefined\") {\n      const objectKey = Object.keys(currentCollection).filter(key => {\n        return !Object.keys(prevCollection).includes(key);\n      });\n      return currentCollection[objectKey];\n    } else {\n      return Object.keys(currentCollection).map(key => {\n        return currentCollection[key];\n      });\n    }\n  };\n\n  // Compare two collections of objects, return single object from current collection that differs from prev collection\n  getUpdatedObjectFromCollection = (prevCollection, currentCollection) => {\n    const updatedTransaction = Object.keys(prevCollection)\n      .map(key => {\n        if (\n          prevCollection[key].lastUpdated !== currentCollection[key].lastUpdated\n        ) {\n          return currentCollection[key];\n        } else {\n          return null;\n        }\n      })\n      .filter(object => object !== null);\n    return updatedTransaction[0];\n  };\n\n  // Returns an transaction from a collection based on a given identifier\n  getTransactionFromCollection = (identifier, collection) => {\n    const object = collection[`tx${identifier}`];\n    return object;\n  };\n\n  // Returns either a new object or finds an updated object in a collection against a previous collection\n  getUpdatedTransaction = (prevCollection, currentCollection) => {\n    let tx = null;\n    let currentTx = {};\n    let prevTx = {};\n\n    if (this.collectionHasNewObject(prevCollection, currentCollection)) {\n      tx = this.getNewObjectFromCollection(prevCollection, currentCollection);\n    } else {\n      currentTx = this.getUpdatedObjectFromCollection(\n        prevCollection,\n        currentCollection\n      );\n      if (currentTx) {\n        prevTx = this.getTransactionFromCollection(\n          currentTx.created,\n          prevCollection\n        );\n      } else {\n        return false;\n      }\n\n      if (currentTx.status !== prevTx.status) {\n        tx = currentTx;\n      }\n    }\n    return tx;\n  };\n\n  // Check for updates to the transactions collection\n  processTransactionUpdates = prevProps => {\n    let tx = null;\n    if (Object.keys(this.props.transactions).length) {\n      tx = this.getUpdatedTransaction(\n        prevProps.transactions,\n        this.props.transactions\n      );\n    }\n\n    if (tx) {\n      this.showTransactionToast(tx);\n    }\n  };\n\n  showTransactionToast = transaction => {\n    // console.log(\"showTransactionToast: \", { ...transaction });\n    // Get text info for toast\n    let toastMeta = this.getTransactionToastMeta(transaction);\n    toastMeta.colorTheme = this.props.themeMode;\n    toastMeta.closeElem = true;\n    // console.log('toastMeta',toastMeta);\n\n    // Show toast\n    window.toastProvider.addMessage(\".\", toastMeta);\n  };\n\n  getTransactionToastMeta = transaction => {\n    let transactionToastMeta = {};\n    let status = transaction.status;\n\n    switch (status) {\n      case \"initialized\":\n        transactionToastMeta = TransactionToastMessages.initialized;\n        break;\n      case \"started\":\n        transactionToastMeta = TransactionToastMessages.started;\n        break;\n      case \"pending\":\n        transactionToastMeta = TransactionToastMessages.pending;\n        break;\n      case \"confirmed\":\n        transactionToastMeta = TransactionToastMessages.confirmed;\n        break;\n      case \"success\":\n        transactionToastMeta = TransactionToastMessages.success;\n        break;\n      case \"error\":\n        transactionToastMeta = TransactionToastMessages.error;\n        break;\n      default:\n        // do nothing\n        break;\n    }\n\n    let transactionAction = '';\n    switch (transaction.method){\n      case 'redeemIdleToken':\n        transactionAction = 'Redeem';\n      break;\n      case 'redeemGovTokens':\n        transactionAction = 'Redeem (Gov Tokens)';\n      break;\n      case 'mintIdleToken':\n      case 'mintIdleTokensProxy':\n        transactionAction = 'Lending';\n      break;\n      case 'migrateFromToIdle':\n      case 'migrateFromCompoundToIdle':\n      case 'migrateFromFulcrumToIdle':\n      case 'migrateFromAaveToIdle':\n      case 'migrateFromIearnToIdle':\n      case 'bridgeIdleV1ToIdleV2':\n        transactionAction = 'Migration';\n      break;\n      case 'executeMetaTransaction':\n        transactionAction = 'Meta-Tx';\n      break;\n      case 'approve':\n        transactionAction = 'Approve';\n      break;\n      case 'rebalance':\n        transactionAction = 'Rebalance';\n      break;\n      default:\n        transactionAction = transaction.method.charAt(0).toUpperCase() + transaction.method.substr(1);\n      break;\n    }\n\n    transactionToastMeta = JSON.parse(JSON.stringify(transactionToastMeta));\n\n    let newMessage = transactionToastMeta.message.replace('{action}',transactionAction);\n    newMessage = newMessage.charAt(0).toUpperCase() + newMessage.slice(1);\n    transactionToastMeta.message = newMessage;\n    transactionToastMeta.closeElem = true;\n    transactionToastMeta.colorTheme = this.props.themeMode;\n\n    return transactionToastMeta;\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    this.processTransactionUpdates(prevProps);\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastMessage.Provider ref={node => (window.toastProvider = node)} />\n      </div>\n    );\n  }\n}\n\nexport default TransactionToastUtil;\n","import Web3 from \"web3\";\nimport jQuery from \"jquery\";\nimport theme from \"../theme\";\nimport Tos from \"../Tos/Tos\";\nimport themeDark from \"../theme-dark\";\nimport connectors from \"./connectors\";\nimport Web3Provider from \"web3-react\";\nimport { Web3Consumer } from \"web3-react\";\nimport Multicall from '../utilities/Multicall';\nimport CookieConsent from \"react-cookie-consent\";\nimport RimbleWeb3 from \"../utilities/RimbleWeb3\";\nimport FlexLoader from \"../FlexLoader/FlexLoader\";\nimport React, { Component, Suspense } from \"react\";\nimport GeneralUtil from \"../utilities/GeneralUtil\";\nimport Header from \"../utilities/components/Header\";\nimport globalConfigs from \"../configs/globalConfigs\";\nimport ScrollToTop from \"../ScrollToTop/ScrollToTop\";\nimport FunctionsUtil from \"../utilities/FunctionsUtil\";\nimport PageNotFound from \"../PageNotFound/PageNotFound\";\nimport Web3Debugger from \"../Web3Debugger/Web3Debugger\";\nimport availableTokens from \"../configs/availableTokens\";\nimport availableTranches from \"../configs/availableTranches\";\nimport TransactionToastUtil from \"../utilities/TransactionToastUtil\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { ThemeProvider, Box, Text, Link, Image, Flex } from \"rimble-ui\";\n\n// Lazy Loading\nconst Landing = React.lazy(() => import(\"../Landing/Landing\"));\nconst Dashboard = React.lazy(() => import(\"../Dashboard/Dashboard\"));\nconst Governance = React.lazy(() => import(\"../Governance/Governance\"));\n\nclass App extends Component {\n  state = {\n    web3:null,\n    network: null,\n    cachedData: {},\n    buyToken: null,\n    currentEnv: null,\n    selectedTab: '1',\n    route: \"default\", // or 'onboarding'\n    themeMode: 'light',\n    connecting: false,\n    tokenConfig: null,\n    genericError: null,\n    customAddress: null,\n    connectorName: null,\n    selectedToken: null,\n    selectedTheme: theme,\n    currentSection: null,\n    walletProvider: null,\n    availableTokens: null,\n    buyModalOpened: false,\n    selectedProtocol: null,\n    selectedStrategy: null,\n    toastMessageProps: null,\n    callbackAfterLogin: null,\n    width: window.innerWidth,\n    availableStrategies: null,\n    height: window.innerHeight,\n    config:globalConfigs.network,\n    unsubscribeFromHistory: null,\n    enableUnderlyingWithdraw: false,\n    availableStrategiesNetworks: null\n  };\n\n  // Utils\n  multiCall = null;\n  functionsUtil = null;\n  loadUtils() {\n    const newProps = {\n      ...this.props,\n      web3:this.state.web3\n    };\n\n    if (this.functionsUtil) {\n      this.functionsUtil.setProps(newProps);\n    } else {\n      this.functionsUtil = new FunctionsUtil(newProps);\n    }\n\n\n    if (!this.multiCall){\n      this.multiCall = new Multicall();\n    }\n\n    if (this.state.network){\n      const requiredNetworkId = this.state.network.required.id;\n      this.multiCall.setNetwork(requiredNetworkId);\n    }\n\n    if (this.state.web3){\n      this.multiCall.setWeb3(this.state.web3);\n    }\n\n    window.multiCall = this.multiCall;\n  }\n\n  closeToastMessage = (e) => {\n    if (e) {\n      e.preventDefault();\n    }\n    this.setState({\n      toastMessageProps: null\n    });\n  }\n\n  showToastMessage = (props) => {\n    this.setState({\n      toastMessageProps: props\n    });\n  }\n\n  processCustomParam = (props, prevProps) => {\n    // const params = props ? props.match.params : null;\n    // const prevParams = prevProps ? prevProps.match.params : null;\n\n    // Reset params\n    /*\n    if ( prevParams && params && prevParams.customParam !== params.customParam && (!params || !params.customParam || params.customParam === undefined)){\n      this.setState({\n        customAddress:null,\n        enableUnderlyingWithdraw:false\n      });\n    } else if (params && typeof params.customParam === 'string') {\n      // Check if custom address\n      if (params.customParam.toLowerCase().match(/0x[\\w]{40}/) && this.state.customAddress !== params.customParam){\n        this.setCustomAddress(params.customParam);\n      } else if (params && params.customParam === 'withdraw' && !this.state.enableUnderlyingWithdraw){\n        this.setState({\n          customAddress:null,\n          enableUnderlyingWithdraw:true\n        });\n      }\n    }\n    */\n  }\n\n  clearCachedData = async (callback = null, clear_all = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    const requiredNetworkId = this.state.network.required.id;\n\n    const cachedData = { ...this.state.cachedData };\n    if (cachedData[requiredNetworkId]){\n      Object.keys(cachedData[requiredNetworkId]).forEach(key => {\n        const data = cachedData[requiredNetworkId][key];\n        if (data.expirationDate !== null) {\n          delete cachedData[requiredNetworkId][key];\n        }\n      });\n    }\n\n    const storedCachedData = clear_all ? {} : this.functionsUtil.getStoredItem('cachedData');\n    if (storedCachedData && storedCachedData[requiredNetworkId]){\n      Object.keys(storedCachedData[requiredNetworkId]).forEach( key => {\n        const storedData = storedCachedData[requiredNetworkId][key];\n        if (storedData.expirationDate !== null){\n          delete storedCachedData[requiredNetworkId][key];\n        }\n      });\n    }\n\n    this.functionsUtil.setLocalStorage('cachedData', storedCachedData, true);\n\n    await this.setState({\n      cachedData\n    }, () => {\n      if (typeof callback === 'function') {\n        callback();\n      }\n    });\n\n    return true;\n  }\n\n  setCachedData = (key, data, TTL = null, useLocalStorage = false) => {\n\n    if (!this.state.network){\n      return false;\n    }\n\n    key = key.toLowerCase();\n    const currentTime = parseInt(Date.now()/1000);\n    const requiredNetworkId = this.state.network.required.id;\n    const cachedKeyFound = this.state.cachedData[requiredNetworkId] ? this.state.cachedData[requiredNetworkId][key] : null;\n\n    let storedCachedData = this.functionsUtil.getStoredItem('cachedData',true,{});\n    const storedKeyFound = storedCachedData[requiredNetworkId] ? storedCachedData[requiredNetworkId][key] : null;\n\n    const update_stored_key = useLocalStorage && (!storedKeyFound || ((storedKeyFound.expirationDate !== null && storedKeyFound.expirationDate <= currentTime) || JSON.stringify(storedKeyFound.data) !== JSON.stringify(data)));\n    const update_key = !cachedKeyFound || ((cachedKeyFound.expirationDate !== null && cachedKeyFound.expirationDate <= currentTime) || JSON.stringify(cachedKeyFound.data) !== JSON.stringify(data)) || update_stored_key;\n\n    let output = false;\n\n    if (update_key) {\n      const expirationDate = TTL ? currentTime + (TTL) : null;\n\n      // Save cached data in local storage\n      if (useLocalStorage) {\n        if (!storedCachedData) {\n          storedCachedData = {};\n          storedCachedData[requiredNetworkId] = {};\n        }\n\n        // const storedData = typeof data === 'object' ? JSON.stringify(data) : data;\n\n        storedCachedData = {\n          ...storedCachedData,\n          [requiredNetworkId]:{\n            ...storedCachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        };\n        \n        this.functionsUtil.setLocalStorage('cachedData',storedCachedData,true);\n      }\n\n      // Set new cached data state\n      this.setState((prevState) => ({\n        cachedData: {\n          ...prevState.cachedData,\n          [requiredNetworkId]:{\n            ...prevState.cachedData[requiredNetworkId],\n            [key]: {\n              data,\n              expirationDate\n            }\n          }\n        }\n      }), () => {\n        window.cachedData = this.state.cachedData;\n      });\n\n      output = true;\n    }\n\n    return output;\n  }\n\n  setCallbackAfterLogin = (callbackAfterLogin) => {\n    this.setState({\n      callbackAfterLogin\n    });\n  }\n\n  setCustomAddress = (customAddress) => {\n    // Reset customAddress if not well formatted\n    if (customAddress && !customAddress.toLowerCase().match(/0x[\\w]{40}/)) {\n      customAddress = null;\n    }\n\n    if (customAddress !== this.state.customAddress) {\n      this.setState({\n        customAddress,\n        enableUnderlyingWithdraw: false\n      });\n    }\n  }\n\n  async selectTab(e, tabIndex) {\n    return this.setState(state => ({ ...state, selectedTab: tabIndex }));\n  }\n\n  async loadAvailableTokens() {\n    const newState = {};\n    const availableStrategies = {};\n    const availableStrategiesNetworks = {};\n    const requiredNetwork = this.state.network && this.state.network.isCorrectNetwork ? (this.state.network.current.id || this.state.network.required.id) : this.state.config.requiredNetwork;\n\n    // console.log('loadAvailableTokens_1',this.state.network,requiredNetwork,availableTokens);\n\n    // Load available strategies\n    Object.keys(availableTokens).filter( networkId => this.functionsUtil.getGlobalConfig(['network','enabledNetworks']).includes(parseInt(networkId)) ).forEach (networkId => {\n      availableStrategiesNetworks[networkId] = {};\n      Object.keys(availableTokens[networkId]).forEach((strategy) => {\n\n        availableStrategiesNetworks[networkId][strategy] = Object.keys(availableTokens[networkId][strategy]).reduce((enabledTokens, token) => {\n          const tokenConfig = availableTokens[networkId][strategy][token];\n          const envEnabled = !tokenConfig.enabledEnvs || !tokenConfig.enabledEnvs.length || tokenConfig.enabledEnvs.includes(this.state.currentEnv);\n          if (tokenConfig.enabled && envEnabled) {\n            enabledTokens[token] = tokenConfig;\n          }\n          return enabledTokens;\n        }, {});\n\n        if (parseInt(networkId) === parseInt(requiredNetwork)){\n          availableStrategies[strategy] = availableStrategiesNetworks[networkId][strategy];\n        }\n      });\n    });\n\n    newState.availableStrategies = availableStrategies;\n    newState.availableStrategiesNetworks = availableStrategiesNetworks;\n\n    // console.log('availableStrategiesNetworks',availableStrategiesNetworks);\n\n    // Load strategy\n    const selectedStrategy = this.state.selectedStrategy;\n    if (selectedStrategy && availableStrategies[selectedStrategy]) {\n      newState.availableTokens = availableStrategies[selectedStrategy];\n\n      // Load token\n      const selectedToken = this.state.selectedToken;\n      if (selectedToken && newState.availableTokens[selectedToken]) {\n        newState.tokenConfig = newState.availableTokens[selectedToken];\n      }\n    }\n\n    // console.log('loadAvailableTokens',newState);\n\n    await this.setState(newState);\n  }\n\n  async setStrategyToken(selectedStrategy, selectedToken,selectedProtocol=null) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    // console.log(selectedToken,selectedProtocol)\n    const newState = {\n      tokenConfig: !selectedToken ? null : this.state.tokenConfig,\n      availableTokens: !selectedToken ? null : this.state.availableTokens,\n      selectedToken: !selectedToken ? selectedToken : this.state.selectedToken,\n      selectedStrategy: !selectedStrategy ? selectedStrategy : this.state.selectedStrategy,\n    };\n    // console.log(\"here\",newState.selectedToken)\n\n    if (selectedStrategy && this.state.availableStrategies && selectedStrategy !== this.state.selectedStrategy && Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())) {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n    else if(selectedStrategy==='tranches'&&selectedStrategy!==this.state.selectedStrategy)\n    {\n      newState.selectedStrategy = selectedStrategy.toLowerCase();\n    }\n\n      \n     if (selectedToken && selectedToken !== this.state.selectedToken) {\n       // console.log(\"Step1\")\n        if(selectedStrategy==='tranches') {\n          // console.log(\"Step2\");\n          // console.log(availableTranches);\n          if(availableTranches && Object.keys(availableTranches[selectedProtocol]).includes(selectedToken)) {\n            newState.selectedToken = selectedToken;\n            newState.availableTokens = availableTranches;\n            newState.selectedProtocol = selectedProtocol;\n            newState.tokenConfig = availableTranches[selectedProtocol][selectedToken];\n          }\n        }\n      else if (this.state.availableTokens && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableTokens[selectedToken];\n      } \n      else if (this.state.availableStrategies && Object.keys(this.state.availableStrategies[selectedStrategy]).includes(selectedToken.toUpperCase())) {\n        newState.selectedToken = selectedToken.toUpperCase();\n        newState.tokenConfig = this.state.availableStrategies[selectedStrategy][newState.selectedToken];\n        newState.availableTokens = this.state.availableStrategies[selectedStrategy];\n      }\n    }\n\n    // console.log('setStrategyToken',selectedStrategy,selectedToken,newState);\n    // console.log(newState);\n    await this.setState(newState, callback);\n  }\n\n\n  async setRequiredNetwork(requiredNetwork,forceChangeChain=false){\n    requiredNetwork = parseInt(requiredNetwork);\n    if (globalConfigs.network.enabledNetworks.includes(requiredNetwork)){\n      this.functionsUtil.setLocalStorage('requiredNetwork',requiredNetwork);\n      // console.log('setRequiredNetwork',requiredNetwork,forceChangeChain);\n      if (forceChangeChain || (this.state.currentSection && this.state.currentSection !== 'landing')){\n        this.functionsUtil.addEthereumChain(requiredNetwork);\n      }\n      return await this.setState(prevState => ({\n        config:{\n          ...prevState.config,\n          requiredNetwork\n        }\n      }));\n    }\n  }\n\n  async setStrategy(selectedStrategy) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n    console.log(\"availabble\",this.state.availableStrategies)\n\n    if (selectedStrategy && selectedStrategy !== this.state.selectedStrategy && (Object.keys(this.state.availableStrategies).includes(selectedStrategy.toLowerCase())||selectedStrategy==='tranches')) {\n      selectedStrategy = selectedStrategy.toLowerCase();\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    } else if (!selectedStrategy) {\n      await this.setState({\n        selectedStrategy\n      }, callback);\n    }\n  }\n\n  async setToken(selectedToken) {\n\n    const callback = () => {\n      this.loadAvailableTokens();\n    }\n\n    if (selectedToken && selectedToken !== this.state.selectedToken && Object.keys(this.state.availableTokens).includes(selectedToken.toUpperCase())) {\n      selectedToken = selectedToken.toUpperCase();\n      const newState = {\n        selectedToken\n      };\n      newState.tokenConfig = this.state.availableTokens[selectedToken];\n      await this.setState(newState, callback);\n    } else if (!selectedToken) {\n      await this.setState({\n        selectedToken,\n        tokenConfig: null\n      }, callback);\n    }\n  }\n\n  async componentWillMount() {\n\n    this.loadUtils();\n\n    window.BNify = this.functionsUtil.BNify;\n\n    // Suppress warnings and errors in production\n    const isProduction = window.location.origin.toLowerCase().includes(globalConfigs.baseURL.toLowerCase());\n    if (isProduction) {\n      window.console.warn = () => { };\n      window.console.error = () => { };\n    }\n\n    window.jQuery = jQuery;\n\n    if (window.localStorage) {\n      this.functionsUtil.removeStoredItem('context');\n    }\n\n    const themeMode = this.functionsUtil.getStoredItem('themeMode', false);\n    if (themeMode) {\n      this.setThemeMode(themeMode);\n    }\n\n    const requiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',false);\n    if (requiredNetwork){\n      this.setRequiredNetwork(requiredNetwork);\n    }\n\n    window.closeIframe = (w) => {\n      const iFrames = document.getElementsByTagName('iframe');\n      for (let i = 0; i < iFrames.length; i++) {\n        const iframe = iFrames[i];\n        if (iframe.contentWindow === w) {\n          window.jQuery(iframe).parents('.iframe-container')[0].remove();\n        }\n      }\n    }\n\n    window.addEventListener('resize', this.handleWindowSizeChange);\n\n    this.loadCurrentEnvironment();\n    this.loadCustomAddress();\n  }\n\n  async loadCurrentEnvironment() {\n    const currentEnv = this.functionsUtil.getCurrentEnvironment();\n    this.setState({\n      currentEnv\n    }, async () => {\n      // const envRequiredNetwork = this.functionsUtil.getGlobalConfig(['environments',this.state.currentEnv,'requiredNetwork']);\n      // const storedRequiredNetwork = this.functionsUtil.getStoredItem('requiredNetwork',null);\n      // if (!storedRequiredNetwork || parseInt(storedRequiredNetwork) !== parseInt(envRequiredNetwork)){\n      //   const requiredNetwork = storedRequiredNetwork || envRequiredNetwork;\n      //   console.log('setRequiredNetwork',requiredNetwork);\n      //   await this.setRequiredNetwork(requiredNetwork);\n      // }\n      this.loadAvailableTokens();\n    })\n  }\n\n  loadCustomAddress() {\n    if (!this.state.customAddress) {\n      const walletProvider = this.functionsUtil.getWalletProvider('Infura');\n      if (walletProvider === 'custom') {\n        const customAddress = this.functionsUtil.getCustomAddress();\n        if (customAddress && customAddress !== this.state.customAddress) {\n          this.setState({\n            customAddress\n          });\n        }\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleWindowSizeChange);\n  }\n\n  checkClientVersion(){\n    // Clear all localStorage data except walletProvider and connectorName if version has changed\n    const version = this.functionsUtil.getStoredItem('version', false);\n    const clientVersionChanged = version !== globalConfigs.version;\n    if (clientVersionChanged) {\n      console.log(`Client version updated from ${version} to ${globalConfigs.version}`);\n      const clearAllCache = this.functionsUtil.getGlobalConfig(['cache','clearAll']);\n      // Clear cached data\n      this.clearCachedData(() => {\n        // Reset Localstorage\n        this.functionsUtil.clearStoredData(['walletProvider', 'connectorName', 'themeMode', 'requiredNetwork']);\n        this.functionsUtil.setLocalStorage('version', globalConfigs.version);\n      }, clearAllCache);\n    }\n\n    console.log(`Client Version: ${globalConfigs.version}`);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const currentSectionChanged = prevState.currentSection !== this.state.currentSection;\n    if (currentSectionChanged) {\n      if (this.state.currentSection === 'landing') {\n        this.setThemeMode('light', false);\n      } else {\n        // Get stored Mode\n        const themeMode = this.functionsUtil.getStoredItem('themeMode', false) || this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'mode']);\n        this.setThemeMode(themeMode);\n      }\n    }\n\n    const networkInitialized = !prevState.network && this.state.network;\n    if (networkInitialized){\n      this.checkClientVersion();\n    }\n\n    const tokenChanged = prevState.selectedToken !== this.state.selectedToken;\n    const strategyChanged = prevState.selectedStrategy !== this.state.selectedStrategy;\n    const networkChanged = JSON.stringify(prevState.network) !== JSON.stringify(this.state.network);\n\n    if (tokenChanged || strategyChanged || networkChanged) {\n      this.loadAvailableTokens();\n    }\n  }\n\n  componentDidMount() {\n\n    // Close iFrame\n    // if (window.self !== window.top && window.top.location.href.indexOf(globalConfigs.baseURL) !== -1 && typeof window.parent.closeIframe === 'function' ){\n    //   window.parent.closeIframe(window.self);\n    // }\n\n    window.showToastMessage = this.showToastMessage;\n    window.closeToastMessage = this.closeToastMessage;\n\n    if (localStorage) {\n      let connectorName = localStorage.getItem('connectorName') ? localStorage.getItem('connectorName') : 'Infura';\n      let walletProvider = localStorage.getItem('walletProvider') ? localStorage.getItem('walletProvider') : 'Infura';\n\n      // Check Ledger Live\n      const isLedgerLive = window.location.href.includes(\"ledger-live=1\");\n      if (isLedgerLive) {\n        connectorName = 'ledgerLive';\n        walletProvider = 'ledger';\n      }\n      // console.log('isLedgerLive',isLedgerLive,connectorName,walletProvider);\n\n      this.setConnector(connectorName, walletProvider);\n    }\n  }\n\n  handleWindowSizeChange = () => {\n    const newState = {\n      width: this.state.width,\n      height: this.state.height,\n    };\n\n    const widthChanged = window.innerWidth !== this.state.width;\n    const heightChanged = window.innerHeight !== this.state.height;\n\n    if (widthChanged || heightChanged) {\n      if (widthChanged) {\n        newState.width = window.innerWidth;\n      }\n      if (heightChanged) {\n        newState.height = window.innerHeight;\n      }\n      return this.setState(newState);\n    }\n\n    return null;\n  };\n\n  showRoute(route) {\n    return this.setState({ route });\n  }\n\n  closeBuyModal(e) {\n    if (e) {\n      e.preventDefault();\n    }\n    return this.setState({\n      buyToken: null,\n      buyModalOpened: false\n    });\n  }\n\n  openBuyModal(e, buyToken) {\n    e.preventDefault();\n\n    return this.setState({\n      buyToken,\n      buyModalOpened: true\n    });\n  }\n\n  async logout() {\n    // Reset Custom Address\n    this.setState({\n      customAddress: null\n    });\n    // Clear cached data\n    this.clearCachedData(() => {\n      // Reset Localstorage except some keys\n      this.functionsUtil.clearStoredData(['version', 'themeMode', 'lastLogin', 'cachedData','requiredNetwork']);\n    });\n  }\n\n  setNetwork(network) {\n    this.setState({\n      network,\n      availableStrategies:null\n    },() => {\n      this.loadUtils();\n    });\n  }\n\n  setWeb3(web3) {\n    this.setState({\n      web3\n    }, () => {\n      this.loadUtils();\n    });\n  }\n\n  setConnector(connectorName, walletProvider) {\n\n    let connectorInfo = globalConfigs.connectors[connectorName.toLowerCase()];\n    if (!connectorInfo && walletProvider) {\n      connectorInfo = globalConfigs.connectors[walletProvider.toLowerCase()];\n    }\n\n    // console.log('setConnector - BEFORE',connectorInfo,connectorName,walletProvider);\n\n    if ((connectorInfo && !connectorInfo.enabled) || (connectorName !== 'Injected' && !Object.keys(globalConfigs.connectors).includes(connectorName.toLowerCase())) || (walletProvider && !Object.keys(globalConfigs.connectors).includes(walletProvider.toLowerCase()))) {\n      connectorName = 'Infura';\n      walletProvider = 'Infura';\n    } else if (connectorName === 'Injected') {\n      const hasMetamask = GeneralUtil.hasMetaMask();\n      const hasDapper = GeneralUtil.hasDapper()\n\n      // Check if injected connector is valid\n      switch (walletProvider) {\n        case 'Metamask':\n          if (!hasMetamask && hasDapper) {\n            walletProvider = 'Dapper';\n          }\n          break;\n        case 'Dapper':\n          if (!hasDapper && hasMetamask) {\n            walletProvider = 'Metamask';\n          }\n          break;\n        default:\n          break;\n      }\n    }\n\n    this.functionsUtil.setLocalStorage('connectorName', connectorName);\n    this.functionsUtil.setLocalStorage('walletProvider', walletProvider);\n\n    return this.setState({\n      connectorName,\n      walletProvider\n    }, () => {\n      this.loadCustomAddress();\n    });\n  }\n\n  setThemeMode(themeMode, store = true) {\n    let selectedTheme = null;\n\n    // Check Dark Mode Enabled\n    const darkModeEnabled = this.functionsUtil.getGlobalConfig(['dashboard', 'theme', 'darkModeEnabled']);\n    if (themeMode === 'dark' && !darkModeEnabled) {\n      themeMode = 'light';\n    }\n\n    switch (themeMode) {\n      default:\n      case 'light':\n        selectedTheme = theme;\n        break;\n      case 'dark':\n        selectedTheme = themeDark;\n        break;\n    }\n\n    if (store) {\n      this.functionsUtil.setLocalStorage('themeMode', themeMode);\n    }\n\n    this.setState({\n      themeMode,\n      selectedTheme\n    });\n  }\n\n  setCurrentSection(currentSection) {\n    this.setState({\n      currentSection\n    });\n  }\n\n  render() {\n    const isMobile = this.state.width <= 768;\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance', 'enabled']);\n\n    // console.log(this.state.selectedToken,this.state.tokenConfig);\n\n    const SuspenseLoader = (\n      <Flex\n        width={1}\n        minHeight={'100vh'}\n        alignItems={'center'}\n        flexDirection={'column'}\n        justifyContent={'center'}\n        backgroundColor={'selectBg'}\n      >\n        <FlexLoader\n          textProps={{\n            textSize: 4,\n            fontWeight: 2\n          }}\n          loaderProps={{\n            mb: 3,\n            size: '80px',\n            color: 'primary'\n          }}\n          flexProps={{\n            my: 3,\n            flexDirection: 'column'\n          }}\n          text={''}\n        />\n      </Flex>\n    );\n\n    return (\n      <Router>\n        <ScrollToTop />\n        <ThemeProvider\n          theme={this.state.selectedTheme}\n        >\n          <Web3Provider\n            web3Api={Web3}\n            connectors={connectors}\n            libraryName={'web3.js'}\n          >\n            <Web3Consumer\n              recreateOnNetworkChange={false}\n              recreateOnAccountChange={false}\n            >\n              {context => {\n                //console.log('Web3Consumer render',context);\n                return (\n                  <RimbleWeb3\n                    context={context}\n                    isMobile={isMobile}\n                    connectors={connectors}\n                    config={this.state.config}\n                    theme={this.state.selectedTheme}\n                    cachedData={this.state.cachedData}\n                    tokenConfig={this.state.tokenConfig}\n                    availableTranches={availableTranches}\n                    callbackWeb3={this.setWeb3.bind(this)}\n                    setNetwork={this.setNetwork.bind(this)}\n                    customAddress={this.state.customAddress}\n                    selectedToken={this.state.selectedToken}\n                    connectorName={this.state.connectorName}\n                    currentSection={this.state.currentSection}\n                    walletProvider={this.state.walletProvider}\n                    setConnector={this.setConnector.bind(this)}\n                    availableTokens={this.state.availableTokens}\n                    setCachedData={this.setCachedData.bind(this)}\n                    clearCachedData={this.clearCachedData.bind(this)}\n                    callbackAfterLogin={this.state.callbackAfterLogin}\n                    availableStrategies={this.state.availableStrategies}\n                    setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                    enableUnderlyingWithdraw={this.state.enableUnderlyingWithdraw}\n                    availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                  >\n                    <RimbleWeb3.Consumer>\n                      {({\n                        web3,\n                        modals,\n                        network,\n                        account,\n                        initWeb3,\n                        simpleID,\n                        biconomy,\n                        contracts,\n                        web3Infura,\n                        web3Polygon,\n                        transaction,\n                        initAccount,\n                        initContract,\n                        checkNetwork,\n                        transactions,\n                        initSimpleID,\n                        permitClient,\n                        tokenDecimals,\n                        maticPOSClient,\n                        accountBalance,\n                        needsPreflight,\n                        validateAccount,\n                        rejectValidation,\n                        accountValidated,\n                        getTokenDecimals,\n                        getAccountBalance,\n                        contractsNetworks,\n                        accountBalanceLow,\n                        networkInitialized,\n                        accountInizialized,\n                        accountBalanceToken,\n                        userRejectedConnect,\n                        initializeContracts,\n                        erc20ForwarderClient,\n                        rejectAccountConnect,\n                        contractsInitialized,\n                        userRejectedValidation,\n                        accountValidationPending,\n                        connectAndValidateAccount,\n                        contractMethodSendWrapper,\n                        initContractCustomProvider\n                      }) => {\n                        return (\n                          <Box>\n                            <Switch>\n                              <Route\n                                path=\"/dashboard/:section?/:param1?/:param2?/:param3?\"\n                                render={\n                                  (props) => \n                                    <Suspense\n                                      fallback={SuspenseLoader}\n                                    >\n                                      <Dashboard\n                                        {...props}\n                                        web3={web3}\n                                        modals={modals}\n                                        network={network}\n                                        context={context}\n                                        account={account}\n                                        isDashboard={true}\n                                        initWeb3={initWeb3}\n                                        biconomy={biconomy}\n                                        isMobile={isMobile}\n                                        simpleID={simpleID}\n                                        contracts={contracts}\n                                        web3Infura={web3Infura}\n                                        web3Polygon={web3Polygon}\n                                        initAccount={initAccount}\n                                        multiCall={this.multiCall}\n                                        permitClient={permitClient}\n                                        initSimpleID={initSimpleID}\n                                        initContract={initContract}\n                                        transactions={transactions}\n                                        buyToken={this.state.buyToken}\n                                        logout={this.logout.bind(this)}\n                                        maticPOSClient={maticPOSClient}\n                                        accountBalance={accountBalance}\n                                        themeMode={this.state.themeMode}\n                                        theme={this.state.selectedTheme}\n                                        validateAccount={validateAccount}\n                                        currentEnv={this.state.currentEnv}\n                                        connecting={this.state.connecting}\n                                        cachedData={this.state.cachedData}\n                                        setToken={this.setToken.bind(this)}\n                                        accountValidated={accountValidated}\n                                        getTokenDecimals={getTokenDecimals}\n                                        rejectValidation={rejectValidation}\n                                        tokenConfig={this.state.tokenConfig}\n                                        contractsNetworks={contractsNetworks}\n                                        availableTranches={availableTranches}\n                                        getAccountBalance={getAccountBalance}\n                                        accountBalanceLow={accountBalanceLow}\n                                        accountInizialized={accountInizialized}\n                                        networkInitialized={networkInitialized}\n                                        selectedToken={this.state.selectedToken}\n                                        connectorName={this.state.connectorName}\n                                        setStrategy={this.setStrategy.bind(this)}\n                                        userRejectedConnect={userRejectedConnect}\n                                        accountBalanceToken={accountBalanceToken}\n                                        initializeContracts={initializeContracts}\n                                        walletProvider={this.state.walletProvider}\n                                        buyModalOpened={this.state.buyModalOpened}\n                                        erc20ForwarderClient={erc20ForwarderClient}\n                                        contractsInitialized={contractsInitialized}\n                                        openBuyModal={this.openBuyModal.bind(this)}\n                                        rejectAccountConnect={rejectAccountConnect}\n                                        handleMenuClick={this.selectTab.bind(this)}\n                                        setConnector={this.setConnector.bind(this)}\n                                        setThemeMode={this.setThemeMode.bind(this)}\n                                        availableTokens={this.state.availableTokens}\n                                        closeBuyModal={this.closeBuyModal.bind(this)}\n                                        setCachedData={this.setCachedData.bind(this)}\n                                        selectedStrategy={this.state.selectedStrategy}\n                                        selectedProtocol={this.state.selectedProtocol}\n                                        userRejectedValidation={userRejectedValidation}\n                                        clearCachedData={this.clearCachedData.bind(this)}\n                                        setStrategyToken={this.setStrategyToken.bind(this)}\n                                        accountValidationPending={accountValidationPending}\n                                        availableStrategies={this.state.availableStrategies}\n                                        setCurrentSection={this.setCurrentSection.bind(this)}\n                                        connectAndValidateAccount={connectAndValidateAccount}\n                                        contractMethodSendWrapper={contractMethodSendWrapper}\n                                        setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                        initContractCustomProvider={initContractCustomProvider}\n                                        setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                        availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                      />\n                                    </Suspense>\n\n                                }\n                              >\n                              </Route>\n                              {\n                                governanceEnabled && (\n                                  <Route\n                                    path=\"/governance/:section?/:item_id?\"\n                                    render={\n                                      (props) =>\n                                        <Suspense\n                                          fallback={SuspenseLoader}\n                                        >\n                                          <Governance\n                                            {...props}\n                                            web3={web3}\n                                            modals={modals}\n                                            network={network}\n                                            context={context}\n                                            account={account}\n                                            initWeb3={initWeb3}\n                                            biconomy={biconomy}\n                                            isMobile={isMobile}\n                                            simpleID={simpleID}\n                                            isGovernance={true}\n                                            contracts={contracts}\n                                            web3Infura={web3Infura}\n                                            web3Polygon={web3Polygon}\n                                            initAccount={initAccount}\n                                            multiCall={this.multiCall}\n                                            initSimpleID={initSimpleID}\n                                            initContract={initContract}\n                                            checkNetwork={checkNetwork}\n                                            transactions={transactions}\n                                            buyToken={this.state.buyToken}\n                                            logout={this.logout.bind(this)}\n                                            accountBalance={accountBalance}\n                                            themeMode={this.state.themeMode}\n                                            theme={this.state.selectedTheme}\n                                            validateAccount={validateAccount}\n                                            currentEnv={this.state.currentEnv}\n                                            connecting={this.state.connecting}\n                                            cachedData={this.state.cachedData}\n                                            setToken={this.setToken.bind(this)}\n                                            accountValidated={accountValidated}\n                                            getTokenDecimals={getTokenDecimals}\n                                            rejectValidation={rejectValidation}\n                                            tokenConfig={this.state.tokenConfig}\n                                            contractsNetworks={contractsNetworks}\n                                            getAccountBalance={getAccountBalance}\n                                            accountBalanceLow={accountBalanceLow}\n                                            accountInizialized={accountInizialized}\n                                            networkInitialized={networkInitialized}\n                                            selectedToken={this.state.selectedToken}\n                                            connectorName={this.state.connectorName}\n                                            setStrategy={this.setStrategy.bind(this)}\n                                            userRejectedConnect={userRejectedConnect}\n                                            accountBalanceToken={accountBalanceToken}\n                                            initializeContracts={initializeContracts}\n                                            walletProvider={this.state.walletProvider}\n                                            buyModalOpened={this.state.buyModalOpened}\n                                            contractsInitialized={contractsInitialized}\n                                            openBuyModal={this.openBuyModal.bind(this)}\n                                            rejectAccountConnect={rejectAccountConnect}\n                                            handleMenuClick={this.selectTab.bind(this)}\n                                            setConnector={this.setConnector.bind(this)}\n                                            setThemeMode={this.setThemeMode.bind(this)}\n                                            availableTokens={this.state.availableTokens}\n                                            closeBuyModal={this.closeBuyModal.bind(this)}\n                                            setCachedData={this.setCachedData.bind(this)}\n                                            selectedStrategy={this.state.selectedStrategy}\n                                            userRejectedValidation={userRejectedValidation}\n                                            clearCachedData={this.clearCachedData.bind(this)}\n                                            setStrategyToken={this.setStrategyToken.bind(this)}\n                                            accountValidationPending={accountValidationPending}\n                                            availableStrategies={this.state.availableStrategies}\n                                            setCurrentSection={this.setCurrentSection.bind(this)}\n                                            connectAndValidateAccount={connectAndValidateAccount}\n                                            contractMethodSendWrapper={contractMethodSendWrapper}\n                                            setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                            setCallbackAfterLogin={this.setCallbackAfterLogin.bind(this)}\n                                            availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                          />\n                                        </Suspense>\n                                    }\n                                  >\n                                  </Route>\n                                )\n                              }\n                              <Route>\n                                <Header\n                                  modals={modals}\n                                  network={network}\n                                  context={context}\n                                  account={account}\n                                  initWeb3={initWeb3}\n                                  isMobile={isMobile}\n                                  contracts={contracts}\n                                  initAccount={initAccount}\n                                  multiCall={this.multiCall}\n                                  initContract={initContract}\n                                  buyToken={this.state.buyToken}\n                                  accountBalance={accountBalance}\n                                  logout={this.logout.bind(this)}\n                                  validateAccount={validateAccount}\n                                  connecting={this.state.connecting}\n                                  accountValidated={accountValidated}\n                                  getTokenDecimals={getTokenDecimals}\n                                  rejectValidation={rejectValidation}\n                                  setToken={e => { this.setToken(e) }}\n                                  tokenConfig={this.state.tokenConfig}\n                                  contractsNetworks={contractsNetworks}\n                                  getAccountBalance={getAccountBalance}\n                                  accountBalanceLow={accountBalanceLow}\n                                  networkInitialized={networkInitialized}\n                                  selectedToken={this.state.selectedToken}\n                                  connectorName={this.state.connectorName}\n                                  userRejectedConnect={userRejectedConnect}\n                                  accountBalanceToken={accountBalanceToken}\n                                  walletProvider={this.state.walletProvider}\n                                  buyModalOpened={this.state.buyModalOpened}\n                                  contractsInitialized={contractsInitialized}\n                                  openBuyModal={this.openBuyModal.bind(this)}\n                                  rejectAccountConnect={rejectAccountConnect}\n                                  handleMenuClick={this.selectTab.bind(this)}\n                                  setConnector={this.setConnector.bind(this)}\n                                  availableTokens={this.state.availableTokens}\n                                  closeBuyModal={this.closeBuyModal.bind(this)}\n                                  userRejectedValidation={userRejectedValidation}\n                                  accountValidationPending={accountValidationPending}\n                                  connectAndValidateAccount={connectAndValidateAccount}\n                                  setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                  availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                />\n\n                                {\n                                  this.state.route === \"onboarding\" && (\n                                    <Web3Debugger\n                                      web3={web3}\n                                      account={account}\n                                      accountBalance={accountBalance}\n                                      accountBalanceToken={accountBalanceToken}\n                                      accountBalanceLow={accountBalanceLow}\n                                      initAccount={initAccount}\n                                      rejectAccountConnect={rejectAccountConnect}\n                                      userRejectedConnect={userRejectedConnect}\n                                      accountValidated={accountValidated}\n                                      accountValidationPending={accountValidationPending}\n                                      rejectValidation={rejectValidation}\n                                      userRejectedValidation={userRejectedValidation}\n                                      validateAccount={validateAccount}\n                                      connectAndValidateAccount={connectAndValidateAccount}\n                                      modals={modals}\n                                      network={network}\n                                      transaction={transaction}\n                                    />\n                                  )\n                                }\n\n                                {\n                                  this.state.route === \"default\" && (\n                                    <Switch>\n                                      <Route exact path=\"/\"\n                                        render={(props) =>\n                                          <Suspense\n                                            fallback={SuspenseLoader}\n                                          >\n                                            <Landing\n                                              {...props}\n                                              web3={web3}\n                                              network={network}\n                                              account={account}\n                                              isMobile={isMobile}\n                                              simpleID={simpleID}\n                                              contracts={contracts}\n                                              multiCall={this.multiCall}\n                                              initContract={initContract}\n                                              innerWidth={this.state.width}\n                                              logout={this.logout.bind(this)}\n                                              innerHeight={this.state.height}\n                                              accountBalance={accountBalance}\n                                              themeMode={this.state.themeMode}\n                                              theme={this.state.selectedTheme}\n                                              setToken={e => {this.setToken(e)}}\n                                              cachedData={this.state.cachedData}\n                                              currentEnv={this.state.currentEnv}\n                                              connecting={this.state.connecting}\n                                              selectedTab={this.state.selectedTab}\n                                              tokenConfig={this.state.tokenConfig}\n                                              accountBalanceLow={accountBalanceLow}\n                                              getAccountBalance={getAccountBalance}\n                                              availableTranches={availableTranches}\n                                              contractsNetworks={contractsNetworks}\n                                              networkInitialized={networkInitialized}\n                                              customAddress={this.state.customAddress}\n                                              selectedToken={this.state.selectedToken}\n                                              accountBalanceToken={accountBalanceToken}\n                                              closeToastMessage={this.closeToastMessage}\n                                              contractsInitialized={contractsInitialized}\n                                              openBuyModal={this.openBuyModal.bind(this)}\n                                              setThemeMode={this.setThemeMode.bind(this)}\n                                              processCustomParam={this.processCustomParam}\n                                              availableTokens={this.state.availableTokens}\n                                              setCachedData={this.setCachedData.bind(this)}\n                                              updateSelectedTab={this.selectTab.bind(this)}\n                                              toastMessageProps={this.state.toastMessageProps}\n                                              clearCachedData={this.clearCachedData.bind(this)}\n                                              availableStrategies={this.state.availableStrategies}\n                                              setCurrentSection={this.setCurrentSection.bind(this)}\n                                              connectAndValidateAccount={connectAndValidateAccount}\n                                              setRequiredNetwork={this.setRequiredNetwork.bind(this)}\n                                              availableStrategiesNetworks={this.state.availableStrategiesNetworks}\n                                            />\n                                            <CookieConsent\n                                              expires={365}\n                                              buttonText={\"Ok\"}\n                                              location={\"bottom\"}\n                                              acceptOnScroll={true}\n                                              cookieName={\"cookieAccepted\"}\n                                              acceptOnScrollPercentage={5}\n                                              style={{ background: \"rgba(255,255,255,0.95)\", zIndex: '9999999' }}\n                                              buttonStyle={{ display: isMobile ? \"block\" : \"none\", backgroundColor: '#0036ff', color: 'white', marginTop: isMobile ? \"0px\" : \"15px\" }}\n                                            >\n                                              <Flex flexDirection={'row'} alignItems={['flex-start', 'center']} justifyContent={'flex-start'} maxHeight={['150px', 'initial']} style={isMobile ? { overflowY: 'scroll' } : null}>\n                                                <Image display={['none', 'block']} src={'images/cookie.svg'} width={'42px'} height={'42px'} />\n                                                <Text pl={[0, 3]} color={'dark-gray'} fontSize={1} textAlign={'justify'}>\n                                                  This website or its third-party tools process personal data (e.g. browsing data or IP addresses) and use cookies or other identifiers, which are necessary for its functioning and required to achieve the purposes illustrated in the cookie policy. To learn more, please refer to the <Link href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'} target={'_blank'} rel=\"nofollow noopener noreferrer\" hoverColor={'blue'}>cookie policy</Link>.\n                                                  You accept the use of cookies or other identifiers by closing or dismissing this notice, by scrolling this page, by clicking a link or button or by continuing to browse otherwise.\n                                              </Text>\n                                              </Flex>\n                                            </CookieConsent>\n                                          </Suspense>\n                                        }\n                                      ></Route>\n                                      <Route exact path=\"/terms-of-service\">\n                                        <Tos />\n                                      </Route>\n                                      <Route>\n                                        <PageNotFound />\n                                      </Route>\n                                    </Switch>\n                                  )\n                                }\n                              </Route>\n                            </Switch>\n                            <TransactionToastUtil\n                              transactions={transactions}\n                              themeMode={this.state.themeMode}\n                            />\n                          </Box>\n                        )\n                      }}\n                    </RimbleWeb3.Consumer>\n                  </RimbleWeb3>\n                );\n              }}\n            </Web3Consumer>\n          </Web3Provider>\n        </ThemeProvider>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as Sentry from '@sentry/browser';\nimport App from './App/App';\nimport * as serviceWorker from './serviceWorker';\n\nif (window.location.hostname !== 'localhost') {\n  Sentry.init({\n    dsn: \"https://56f5c0bce273442390d7f25698fefe53@sentry.io/1547544\",\n    beforeSend(event, hint) {\n      let output = event;\n      const error = hint.originalException;\n      if (error && error.message){\n        if (error.message.match(/Failed to subscribe to new newBlockHeaders/i)){\n          output = false;\n        }\n      }\n      return output;\n    }\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();","import theme from '../theme';\nimport React, { Component } from 'react';\nimport styles from './TransactionListFilters.module.scss';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TableCellHeader from '../TableCellHeader/TableCellHeader';\nimport { Flex, Text, Icon, Radio, Button, Link } from \"rimble-ui\";\n\nclass TransactionListFilters extends Component {\n\n  state = {\n    maxWidth:0.4,\n    minWidth:0.18,\n    maxHeight:425,\n    isOpened:false,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null\n    }\n  }\n\n  setFilter = (filter,value) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:value\n      }\n    }));\n  }\n\n  applyFilters = (toggle=true) => {\n    if (typeof this.props.applyFilters === 'function'){\n      this.props.applyFilters(this.state.activeFilters);\n    }\n    if (toggle){\n      this.toggleOpened();\n    }\n  }\n\n  resetFilter = (filter) => {\n    this.setState((prevState) => ({\n      activeFilters:{\n        ...prevState.activeFilters,\n        [filter]:null\n      }\n    }),() => {\n      this.applyFilters(false);\n    });\n  }\n\n  resetFilters = (toggle=true) => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null\n      }\n    },() => {\n      if (typeof this.props.resetFilters === 'function'){\n        this.props.resetFilters();\n      }\n      if (toggle){\n        this.toggleOpened();\n      }\n    })\n  }\n\n  toggleOpened = () => {\n    this.setState((prevState) => ({\n      isOpened: !prevState.isOpened\n    }));\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={3}\n        top={0}\n        width={1}\n        zIndex={1}\n        flexDirection={'column'}\n        alignItems={'flex-start'}\n        justifyContent={'center'}\n        position={['relative','absolute']}\n      >\n        <DashboardCard\n          cardProps={{\n            py:2,\n            px:3,\n            width:[1, this.state.isOpened ? this.state.maxWidth : this.state.minWidth ],\n            style:{\n              transition:'width 0.3s ease-in-out'\n            }\n          }}\n          isInteractive={ !this.state.isOpened }\n          handleClick={ !this.state.isOpened ? this.toggleOpened : null }\n        >\n          <Flex\n            width={1}\n            style={{\n              cursor:'pointer'\n            }}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'space-between'}\n            onClick={ this.state.isOpened ? this.toggleOpened : null }\n          >\n            <Text\n              fontSize={2}\n              fontWeight={500}\n              color={'copyColor'}\n            >\n              Filters\n            </Text>\n            <Icon\n              color={'copyColor'}\n              size={ this.props.isMobile ? '1.3em' : '1.5em'}\n              name={ this.state.isOpened ? 'Close' : 'Tune' }\n            />\n          </Flex>\n          <Flex\n            flexDirection={'column'}\n            style={{\n              overflow:'hidden',\n              transition:'max-height 0.3s ease-in-out',\n              maxHeight:this.state.isOpened ? this.state.maxHeight : 0\n            }}\n          >\n            <Flex\n              mt={2}\n              py={2}\n              width={1}\n              flexDirection={'row'}\n              borderTop={`1px solid ${theme.colors.divider}`}\n            >\n              {\n                Object.keys(this.props.filters).map((filterCategory) => {\n                  const filterValues = this.props.filters[filterCategory];\n                  return (\n                    <Flex\n                      flexDirection={'column'}\n                      key={`filter_${filterCategory}`}\n                      style={{\n                        flexBasis:'0',\n                        flex:'1 1 0px'\n                      }}\n                    >\n                      <TableCellHeader\n                        pb={2}\n                        fontWeight={3}\n                        fontSize={[0,2]}\n                        color={'cellText'}\n                      >\n                        {filterCategory.toUpperCase()}\n                      </TableCellHeader>\n                      {\n                        Object.keys(filterValues).map((filterValue) => {\n                          const filterLabel = filterValues[filterValue];\n                          const isChecked = this.state.activeFilters[filterCategory]===filterValue;\n                          return (\n                            <Radio\n                              my={2}\n                              fontSize={[0,2]}\n                              label={filterLabel}\n                              checked={isChecked}\n                              className={styles.radioBtn}\n                              key={`filter_${filterCategory}_${filterValue}`}\n                              onChange={ e => this.setFilter(filterCategory,filterValue) }\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                  );\n                })\n              }\n            </Flex>\n            <Flex\n              flexDirection={'row'}\n            >\n              <Button.Text\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.applyFilters}\n              >\n                Apply filters\n              </Button.Text>\n              <Button.Text\n                ml={3}\n                fontWeight={4}\n                fontSize={[2,3]}\n                mainColor={'copyColor'}\n                onClick={this.resetFilters}\n              >\n                Reset\n              </Button.Text>\n            </Flex>\n          </Flex>\n        </DashboardCard>\n        {\n          !this.state.isOpened && this.props.activeFilters && Object.values(this.props.activeFilters).filter( v => (v !== null) ).length>0 &&\n            <Flex\n              mt={3}\n              width={1}\n              flexDirection={['column','row']}\n              alignItems={['flex-start','flex-end']}\n              justifyContent={['flex-end','flex-start']}\n            >\n              {\n                Object.keys(this.props.activeFilters).map((filterName) => {\n                  const filterValue = this.props.activeFilters[filterName];\n                  if (filterValue !== null){\n                    const filterLabel = this.props.filters[filterName][filterValue];\n                    return (\n                      <DashboardCard\n                        cardProps={{\n                          py:2,\n                          px:3,\n                          mb:[2,0],\n                          mr:[0,3],\n                          width:[1,this.state.minWidth]\n                        }}\n                        isInteractive={true}\n                        key={`filter_${filterName}`}\n                      >\n                        <Flex\n                          width={1}\n                          style={{\n                            cursor:'pointer'\n                          }}\n                          alignItems={'center'}\n                          flexDirection={'row'}\n                          justifyContent={'space-between'}\n                          onClick={e => this.resetFilter(filterName)}\n                        >\n                          <Text\n                            fontSize={2}\n                            fontWeight={500}\n                            color={'cellText'}\n                            style={{\n                              textTransform:'capitalize'\n                            }}\n                          >\n                            {filterLabel}\n                          </Text>\n                          <Icon\n                            name={'Close'}\n                            color={'cellText'}\n                            size={ this.props.isMobile ? '1.3em' : '1.5em'}\n                          />\n                        </Flex>\n                      </DashboardCard>\n                    );\n                  }\n                  return null;\n                })\n              }\n              <Link\n                mt={[2,0]}\n                fontSize={[3,2]}\n                fontWeight={[3]}\n                color={'dark-gray'}\n                hoverColor={'copyColor'}\n                textAlign={['center','left']}\n                onClick={ e => this.resetFilters(false) }\n              >\n                Clear all filters\n              </Link>\n            </Flex>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionListFilters;","import React, { Component } from 'react';\n// import style from './TransactionsList.module.scss';\nimport TableRow from '../TableRow/TableRow';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Heading, Text, Link, Icon } from \"rimble-ui\";\nimport TransactionField from '../TransactionField/TransactionField';\nimport TransactionListFilters from '../TransactionListFilters/TransactionListFilters';\n\nclass TransactionsList extends Component {\n\n  state = {\n    page:1,\n    prevTxs:{},\n    txsPerPage:5,\n    loading:false,\n    totalTxs:null,\n    totalPages:null,\n    activeFilters:{\n      status:null,\n      assets:null,\n      actions:null,\n    },\n    filters:{\n      actions:{\n        deposit:'Deposit',\n        redeem:'Redeem',\n        send:'Send',\n        receive:'Receive',\n        migrate:'Migrate',\n        swap:'Swap-In',\n        swapout:'Swap-Out',\n        withdraw:'Withdraw',\n        // curvein:'CurveIn',\n        // curveout:'CurveOut',\n        // curvezapin:'CurveZapIn',\n        // curvezapout:'CurveZapOut',\n      },\n      status:{\n        completed:'Completed',\n        pending:'Pending',\n        failed:'Failed'\n      },\n      assets:{}\n    },\n    renderedTxs:null,\n    processedTxs:null,\n    lastBlockNumber:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processTxs(page);\n    this.setState({\n      page\n    });\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n    this.loadTxs();\n  }\n\n  applyFilters = activeFilters => {\n    this.setState({\n      activeFilters\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  resetFilters = () => {\n    this.setState({\n      activeFilters:{\n        status:null,\n        assets:null,\n        actions:null,\n      }\n    },() => {\n      this.processTxs();\n    });\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n    const transactionsChanged = JSON.stringify(prevProps.transactions) !== JSON.stringify(this.props.transactions);\n    const tokenChanged = JSON.stringify(prevProps.enabledTokens) !== JSON.stringify(this.props.enabledTokens);\n\n    if (tokenChanged || transactionsChanged){\n      this.setState({\n        page:1,\n        prevTxs:{}\n      },()=>{\n        this.loadTxs();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processTxs();\n    }\n  }\n\n  async loadTxs(count,endBlockNumber='latest'){\n    if (!this.props.account){\n      return false;\n    }\n\n    count = count ? count : 0;\n\n    this.setState({\n      loading:true\n    });\n\n    const firstBlockNumber = this.functionsUtil.getGlobalConfig(['network','firstBlockNumber']);\n\n    // Take last block number, is null take first block number\n    let prevTxs = {...this.state.prevTxs};\n    let lastBlockNumber = Math.max(firstBlockNumber,this.state.lastBlockNumber);\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    const assets = {...this.state.filters.assets};\n\n    enabledTokens.forEach((token) => {\n      assets[token] = token;\n    });\n\n    let actions = this.props.availableActions || {...this.state.filters.actions};\n    \n    const enabledActions = typeof this.props.enabledActions !== 'undefined' ? this.props.enabledActions : [];\n\n    if (enabledActions.length){\n      actions = {};\n      enabledActions.forEach( action => {\n        actions[action.toLowerCase()] = action;\n      });\n    }\n\n    const etherscanTxs = this.props.transactionsList || await this.functionsUtil.getEtherscanTxs(this.props.account,lastBlockNumber,'latest',enabledTokens);\n\n    // console.log('TransactionsList',etherscanTxs);\n\n    // Merge new txs with previous ones\n    if (etherscanTxs && etherscanTxs.length){\n      etherscanTxs.forEach((tx) => {\n        if (tx.hashKey){\n          prevTxs[tx.hashKey] = tx;\n        } else {\n          prevTxs[`t${tx.timeStamp}`] = tx;\n        }\n      });\n    }\n\n    const lastTx = Object.values(prevTxs).pop();\n\n    // Update last block number\n    if (lastTx && lastTx.blockNumber && (!this.state.lastBlockNumber || lastTx.blockNumber>this.state.lastBlockNumber)){\n      lastBlockNumber = parseInt(lastTx.blockNumber)+1;\n    }\n\n    return this.setState( prevState => ({\n      prevTxs,\n      loading:false,\n      lastBlockNumber,\n      filters:{\n        ...prevState.filters,\n        assets,\n        actions\n      }\n    }), () => {\n      this.processTxs()\n    });\n  };\n\n  processTxs = (page=null) => {\n\n    page = page ? page : this.state.page;\n\n    const availableActions = Object.keys(this.state.filters.actions).map( action => (action.toLowerCase()) );\n\n    // Sort prevTxs by timeStamp\n    const txsIndexes = Object.values(this.state.prevTxs)\n                        .filter(tx => (!!parseFloat(tx.value))) // Filter txs with value\n                        .filter(tx => (\n                          (this.state.activeFilters.status === null || (tx.status && tx.status.toLowerCase() === this.state.activeFilters.status.toLowerCase())) && \n                          (this.state.activeFilters.assets === null || (tx.token && tx.token.toLowerCase() === this.state.activeFilters.assets.toLowerCase())) &&\n                          ( tx.action && availableActions.includes(tx.action.toLowerCase()) && (this.state.activeFilters.actions === null || (tx.action.toLowerCase() === this.state.activeFilters.actions.toLowerCase()) ))\n                        )) // Filter by activeFilters\n                        .sort((a,b) => (a.timeStamp > b.timeStamp) ? -1 : 1 );\n\n    // Calculate max number of pages\n    const totalTxs = txsIndexes.length;\n    const totalPages = Math.ceil(totalTxs/this.state.txsPerPage);\n\n    const processedTxs = [];\n\n    // console.log(this.state.prevTxs,txsIndexes);\n\n    txsIndexes.forEach((tx, i) => {\n      const selectedToken = tx.token;\n      const tokenConfig = this.props.availableTokens && this.props.availableTokens[selectedToken] ? this.props.availableTokens[selectedToken] : this.functionsUtil.getGlobalConfig(['stats','tokens',selectedToken.toUpperCase()]);\n      const decimals = Math.min(tokenConfig.decimals,8);\n      \n      const date = new Date(tx.timeStamp*1000);\n      const action = tx.action ? tx.action : this.functionsUtil.getTxAction(tx,tokenConfig);\n\n      const parsedValue = parseFloat(tx.tokenAmount);\n\n      const amount = parsedValue ? (this.props.isMobile ? parsedValue.toFixed(4) : parsedValue.toFixed(decimals)) : '-';\n      const momentDate = this.functionsUtil.strToMoment(date);\n\n      // Save new params\n      tx.action = action;\n      tx.amount = amount;\n      tx.momentDate = momentDate;\n      tx.status = tx.status ? tx.status : 'Completed';\n\n      if (i>=((page-1)*this.state.txsPerPage) && i<((page-1)*this.state.txsPerPage)+this.state.txsPerPage) {\n        processedTxs.push(tx);\n      }\n    });\n\n    // console.log('processedTxs',this.state.page,txsIndexes,processedTxs);\n\n    const loading = false;\n  \n    this.setState({\n      loading,\n      totalTxs,\n      totalPages,\n      processedTxs\n    });\n  }\n\n  render() {\n\n    const hasActiveFilters = Object.values(this.state.activeFilters).filter( v => (v !== null) ).length>0;\n\n    // console.log('processedTxs',this.state.processedTxs);\n    const processedTxs = this.state.processedTxs ? Object.values(this.state.processedTxs) : null;\n\n    return (\n      <Flex flexDirection={'column'} width={1} m={'0 auto'}>\n        {\n          this.state.loading ? (\n            <FlexLoader\n              flexProps={{\n                flexDirection:'row',\n                minHeight:this.props.height\n              }}\n              loaderProps={{\n                size:'30px'\n              }}\n              textProps={{\n                ml:2\n              }}\n              text={'Loading transactions...'}\n            />\n          ) : (\n            <Flex\n              width={1}\n              position={'relative'}\n              flexDirection={'column'}\n              id={'transactions-list-container'}\n              pt={[0, hasActiveFilters ? '116px' : 5]}\n            >\n              <TransactionListFilters\n                {...this.props}\n                filters={this.state.filters}\n                activeFilters={this.state.activeFilters}\n                resetFilters={this.resetFilters.bind(this)}\n                applyFilters={this.applyFilters.bind(this)}\n              />\n              {\n                processedTxs && processedTxs.length ? (\n                  <Flex\n                    width={1}\n                    flexDirection={'column'}\n                  >\n                    <TableHeader\n                      cols={this.props.cols}\n                      isMobile={this.props.isMobile}\n                    />\n                    <Flex\n                      id={'transactions-list'}\n                      flexDirection={'column'}\n                    >\n                      {\n                        processedTxs.map( (tx,index) => {\n                          const txHash = tx.hash;\n                          const txHashKey = tx.hashKey;\n                          const handleClick = (e) => {\n                            return (txHash ? window.open(this.functionsUtil.getEtherscanTransactionUrl(txHash)) : null);\n                          };\n\n                          return (\n                            <TableRow\n                              {...this.props}\n                              rowProps={{\n                                isInteractive:true\n                              }}\n                              hash={txHash}\n                              transaction={tx}\n                              key={`tx-${index}`}\n                              handleClick={handleClick}\n                              rowId={`tx-col-${txHashKey}`}\n                              cardId={`tx-card-${txHashKey}`}\n                              fieldComponent={TransactionField}\n                            />\n                          );\n                        })\n                      }\n                    </Flex>\n                    <Flex\n                      height={'50px'}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'flex-end'}\n                      id={'transactions-list-pagination'}\n                    >\n                      <Flex mr={3}>\n                        <Link mr={1} onClick={ e => this.prevPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowLeft'}\n                            size={'2em'}\n                            color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                        <Link onClick={ e => this.nextPage(e) }>\n                          <Icon\n                            name={'KeyboardArrowRight'}\n                            size={'2em'}\n                            color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                          />\n                        </Link>\n                      </Flex>\n                      <Flex alignItems={'center'}>\n                        <Text \n                          fontSize={1}\n                          fontWeight={3}\n                          color={'cellText'}\n                        >\n                          Page {this.state.page} of {this.state.totalPages}\n                        </Text>\n                      </Flex>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Heading.h3 textAlign={'center'} fontFamily={'sansSerif'} fontWeight={2} fontSize={[2]} color={'dark-gray'}>\n                    There are no transactions\n                  </Heading.h3>\n                )\n              }\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TransactionsList;\n","import React, { Component } from 'react';\nimport styles from './Migrate.module.scss';\nimport FlexLoader from '../FlexLoader/FlexLoader';\nimport RoundButton from '../RoundButton/RoundButton';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport DashboardCard from '../DashboardCard/DashboardCard';\nimport TxProgressBar from '../TxProgressBar/TxProgressBar';\nimport TransactionField from '../TransactionField/TransactionField';\nimport FastBalanceSelector from '../FastBalanceSelector/FastBalanceSelector';\nimport { Box, Flex, Text, Icon, Checkbox, Input, Link, Image } from \"rimble-ui\";\n\nclass Migrate extends Component {\n\n  state = {\n    nonce:0,\n    loading:true,\n    action:'migrate',\n    processing:{\n      approve:{\n        txHash:null,\n        loading:false\n      },\n      migrate:{\n        txHash:null,\n        loading:false\n      },\n      redeem:{\n        txHash:null,\n        loading:false\n      }\n    },\n    inputValue:{},\n    usePermit:false,\n    oldTokenName:null,\n    oldIdleTokens:null,\n    skipMigration:false,\n    buttonDisabled:true,\n    migrationEnabled:null,\n    fastBalanceSelector:{},\n    oldContractBalance:null,\n    biconomyLimitReached:false,\n    metaTransactionsEnabled:true,\n    oldContractTokenDecimals:null,\n    migrationContractApproved:null,\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  setAction = (action) => {\n    if (action !== null){\n      this.setState({\n        action\n      });\n    }\n  }\n\n  toggleSkipMigration = (skipMigration) => {\n    this.setState({\n      skipMigration\n    });\n\n    if (typeof this.props.toggleSkipMigration === 'function'){\n      this.props.toggleSkipMigration(skipMigration);\n    }\n  }\n\n  changeInputValue = (e) => {\n    if (!this.state.action){\n      return false;\n    }\n    const amount = e.target.value.length && !isNaN(e.target.value) ? this.functionsUtil.BNify(e.target.value) : this.functionsUtil.BNify(0);\n\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: null\n      },\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  checkButtonDisabled = (amount=null) => {\n    if (!this.state.action){\n      return false;\n    }\n    if (!amount){\n      amount = this.state.inputValue[this.state.action];\n    }\n    let buttonDisabled = true;\n    if (amount){\n      buttonDisabled = amount.lte(0);\n      switch (this.state.action){\n        case 'migrate':\n        case 'redeem':\n          buttonDisabled = buttonDisabled || amount.gt(this.state.oldIdleTokens);\n        break;\n        default:\n        break;\n      }\n    }\n    this.setState({\n      buttonDisabled\n    });\n  }\n\n  setInputValue = () => {\n    if (!this.state.action || this.state.fastBalanceSelector[this.state.action] === null){\n      return false;\n    }\n\n    let amount = null;\n    const selectedPercentage = this.functionsUtil.BNify(this.state.fastBalanceSelector[this.state.action]).div(100);\n\n    switch(this.state.action){\n      case 'migrate':\n      case 'redeem':\n        amount = this.state.oldIdleTokens ? this.functionsUtil.BNify(this.state.oldIdleTokens).times(selectedPercentage) : null;\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      inputValue:{\n        ...prevState.inputValue,\n        [this.state.action]: amount\n      }\n    }));\n  }\n\n  setFastBalanceSelector = (percentage) => {\n    if (!this.state.action){\n      return false;\n    }\n    this.setState((prevState) => ({\n      fastBalanceSelector:{\n        ...prevState.fastBalanceSelector,\n        [this.state.action]: percentage\n      }\n    }));\n  }\n\n  executeAction = async () => {\n\n    const inputValue = this.state.inputValue[this.state.action];\n\n    if (this.state.buttonDisabled || !inputValue || this.functionsUtil.BNify(inputValue).lte(0)){\n      return false;\n    }\n\n    const loading = true;\n\n    switch (this.state.action){\n      case 'redeem':\n\n        if (!this.props.tokenConfig.migration || !this.props.tokenConfig.migration.oldContract){\n          return false;\n        }\n\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n\n        const idleTokenToRedeem = this.functionsUtil.normalizeTokenAmount(inputValue,18);\n\n        // Get amounts for best allocations\n        const _skipRebalance = true;\n        let paramsForRedeem = null;\n\n        /*\n        if (this.props.account){\n          const callParams = { from: this.props.account, gas: this.props.web3.utils.toBN(5000000) };\n          paramsForRedeem = await this.functionsUtil.genericContractCall(oldContractName,'getParamsForRedeemIdleToken',[idleTokenToRedeem, _skipRebalance],callParams);\n        }\n        */\n\n        const _clientProtocolAmountsRedeem = paramsForRedeem && paramsForRedeem.length ? paramsForRedeem[1] : [];\n        const gasLimitRedeem = _clientProtocolAmountsRedeem.length && _clientProtocolAmountsRedeem.indexOf('0') === -1 ? this.functionsUtil.BNify(1500000) : this.functionsUtil.BNify(1000000);\n\n        const callbackRedeem = (tx,error) => {\n          const txSucceeded = tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: `Redeem_old`,\n            eventAction: this.props.selectedToken,\n            eventLabel: tx.status,\n            eventValue: parseInt(inputValue)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (txSucceeded){\n            this.setState((prevState) => ({\n              inputValue:{\n                ...prevState.inputValue,\n                [this.state.action]: this.functionsUtil.BNify(0)\n              }\n            }));\n          }\n        };\n\n        const callbackReceiptRedeem = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              [this.state.action]:{\n                ...prevState.processing[this.state.action],\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.props.contractMethodSendWrapper(oldContractName, 'redeemIdleToken', [\n          idleTokenToRedeem, _skipRebalance, _clientProtocolAmountsRedeem\n        ], null, callbackRedeem, callbackReceiptRedeem, gasLimitRedeem);\n      break;\n      default:\n      break;\n    }\n\n    this.setState((prevState) => ({\n      processing: {\n        ...prevState.processing,\n        [this.state.action]:{\n          ...prevState.processing[this.state.action],\n          loading\n        }\n      }\n    }));\n  }\n\n  componentWillMount(){\n    this.loadUtils();\n    this.checkMigration();\n  }\n\n  componentDidMount(){\n    \n  }\n\n  componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n\n    const accountChanged = prevProps.account !== this.props.account;\n    const biconomyChanged = prevProps.biconomy !== this.props.biconomy;\n    const usePermitChanged = prevProps.usePermit !== this.props.usePermit;\n    const tokenChanged = prevProps.selectedToken !== this.props.selectedToken || (!prevProps.tokenConfig && this.props.tokenConfig);\n\n    if (tokenChanged || accountChanged || biconomyChanged || usePermitChanged){\n      this.checkMigration();\n    }\n\n    const actionChanged = this.state.action !== prevState.action;\n    const fastBalanceSelectorChanged = this.state.fastBalanceSelector[this.state.action] !== prevState.fastBalanceSelector[this.state.action];\n    if (actionChanged || fastBalanceSelectorChanged){\n      this.setInputValue();\n    }\n\n    const inputValueChanged = prevState.inputValue !== this.state.inputValue;\n    if (inputValueChanged){\n      this.checkButtonDisabled();\n    }\n\n    const contractApprovedChanged = prevState.migrationContractApproved !== this.state.migrationContractApproved;\n    if (contractApprovedChanged){\n      // console.log(this.props.selectedToken,'contractApprovedChanged',this.state.migrationContractApproved);\n      if (typeof this.props.callbackApprove === 'function'){\n        this.props.callbackApprove(this.state.migrationContractApproved);\n      }\n    }\n  }\n\n  toggleMetaTransactionsEnabled = (metaTransactionsEnabled) => {\n    this.setState({\n      metaTransactionsEnabled\n    });\n  }\n\n  checkMigrationContractApproved = async () => {\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.migrationContract){\n      const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n      const migrationContractName = migrationContractInfo.name;\n      const migrationContract = this.functionsUtil.getContractByName(migrationContractName);\n      if (migrationContract){\n        const oldContractName = this.props.tokenConfig.migration.oldContract.name;\n        const tokenApproved = await this.functionsUtil.checkTokenApproved(oldContractName,migrationContractInfo.address,this.props.account);\n        return tokenApproved;\n      }\n    }\n    return false;\n  }\n\n  checkMigration = async () => {\n\n    if (!this.props.tokenConfig || !this.props.account){\n      return false;\n    }\n\n    let loading = true;\n    this.setState({\n      loading,\n      processing:{\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n\n    let migrationEnabled = false;\n    let oldTokenName = 'idleTokens';\n    let oldIdleTokensConverted = null;\n    let oldContractTokenDecimals = null;\n    let migrationContractApproved = false;\n    let oldTokenPrice = this.functionsUtil.BNify(0);\n    let oldIdleTokens = this.functionsUtil.BNify(0);\n    let oldContractBalance = this.functionsUtil.BNify(0);\n    const getTokenPrice = this.props.getTokenPrice !== undefined ? this.props.getTokenPrice : true;\n\n    // Check migration contract enabled and balance\n    if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.enabled){\n      const oldContractInfo = this.props.tokenConfig.migration.oldContract;\n      const oldContractABI = oldContractInfo.abi;\n      const oldContractName = oldContractInfo.name;\n      let oldContract = this.functionsUtil.getContractByName(oldContractName);\n\n      // Initialize contract\n      if (!oldContract && oldContractABI){\n        oldContract = await this.props.initContract(oldContractName,oldContractInfo.address,oldContractABI);\n      }\n\n      let migrationContract = this.functionsUtil.getContractByName(this.props.tokenConfig.migration.migrationContract.name);\n\n      if (!migrationContract && this.props.tokenConfig.migration.migrationContract.abi){\n        migrationContract = await this.props.initContract(this.props.tokenConfig.migration.migrationContract.name,this.props.tokenConfig.migration.migrationContract.address,this.props.tokenConfig.migration.migrationContract.abi);\n      }\n\n      if (oldContract && migrationContract){\n\n        oldTokenName = this.props.tokenConfig.migration.oldContract.token;\n\n        [\n          oldContractTokenDecimals,\n          migrationContractApproved,\n          oldContractBalance,\n          oldTokenPrice,\n        ] = await Promise.all([\n          // Get old contract token decimals\n          this.functionsUtil.getTokenDecimals(oldContractName),\n          // Check migration contract approval\n          this.checkMigrationContractApproved(),\n          // Check old contractBalance\n          this.functionsUtil.getContractBalance(oldContractName,this.props.account),\n          // Get token price\n          (getTokenPrice ? this.functionsUtil.genericContractCall(oldContractName,'tokenPrice') : null)\n        ]);\n\n        // console.log('Migration',oldContractName,oldContract,migrationContractApproved,this.props.selectedToken,this.props.account,oldContractBalance ? oldContractBalance.toString() : null,oldTokenPrice ? oldTokenPrice.toString() : null);\n\n        if (oldContractBalance){\n          // Convert old idleTokens\n          oldIdleTokens = this.functionsUtil.fixTokenDecimals(oldContractBalance,oldContractTokenDecimals);\n          if (oldTokenPrice){\n            oldTokenPrice = this.functionsUtil.fixTokenDecimals(oldTokenPrice,this.props.tokenConfig.decimals);\n            oldIdleTokensConverted = this.functionsUtil.BNify(oldIdleTokens).times(this.functionsUtil.BNify(oldTokenPrice));\n          }\n          // Enable migration if old contract balance if greater than 0\n          migrationEnabled = this.functionsUtil.BNify(oldContractBalance).gt(0);\n        }\n      }\n    }\n    \n    loading = false;\n\n    // If use Permit don't ask for Approve\n    const usePermit = this.props.usePermit;\n\n    const newState = {\n      loading,\n      usePermit,\n      oldTokenName,\n      oldIdleTokens,\n      migrationEnabled,\n      oldContractBalance,\n      oldIdleTokensConverted,\n      oldContractTokenDecimals,\n      migrationContractApproved\n    };\n\n    if (this.props.biconomy){\n      const biconomyLimits = await this.functionsUtil.checkBiconomyLimits(this.props.account);\n      if (biconomyLimits && !biconomyLimits.allowed){\n        newState.biconomyLimitReached = true;\n      }\n    }\n\n    if (typeof this.props.migrationEnabledCallback === 'function'){\n      this.props.migrationEnabledCallback(migrationEnabled);\n    }\n\n    // console.log('checkMigration',this.props.selectedToken,'usePermit',this.props.usePermit,'migrationContractApproved',newState.migrationContractApproved);\n\n    // Set migration contract balance\n    return this.setState(newState);\n  }\n\n  disapproveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n      this.disableERC20(null,this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address);\n    }\n  }\n\n  cancelTransaction = async () => {\n    this.setState({\n      processing: {\n        approve:{\n          txHash:null,\n          loading:false\n        },\n        migrate:{\n          txHash:null,\n          loading:false\n        },\n        redeem:{\n          txHash:null,\n          loading:false\n        }\n      },\n    });\n  }\n\n  approveMigration = async (e) => {\n    if (e){\n      e.preventDefault();\n    }\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      if (!migrationContractApproved){\n\n        const callbackApprove = (tx,error) => {\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: 'approve',\n            eventLabel: tx ? tx.status : null\n          };\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // console.log('callbackApprove',tx,error);\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          this.setState((prevState) => ({\n            migrationContractApproved: txSucceeded, // True\n            processing: {\n              ...prevState.processing,\n              approve:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n\n          if (typeof this.props.callbackApprove === 'function' && txSucceeded){\n            this.props.callbackApprove(tx);\n          }\n\n          this.checkMigration();\n        };\n\n        const callbackReceiptApprove = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              approve:{\n                ...prevState.processing.approve,\n                txHash\n              }\n            }\n          }));\n        };\n\n        this.functionsUtil.enableERC20(this.props.tokenConfig.migration.oldContract.name,migrationContractInfo.address,callbackApprove,callbackReceiptApprove);\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            approve:{\n              txHash:null,\n              loading:true\n            }\n          },\n          migrationContractApproved:false\n        }));\n      } else {\n        this.setState({\n          migrationContractApproved:true\n        });\n      }\n    }\n  }\n\n  migrate = async (e,migrationMethod) => {\n    e.preventDefault();\n\n    const migrationContractInfo = this.props.tokenConfig.migration.migrationContract;\n    const migrationContract = this.functionsUtil.getContractByName(migrationContractInfo.name);\n    if (migrationContract){\n\n      // Check if the migration contract is approved\n      // const migrationContractApproved = await this.checkMigrationContractApproved();\n\n      // if (!migrationContractApproved){\n      //   return this.approveMigration();\n      // } else {\n        const callbackMigrate = (tx,error) => {\n\n          if (!error && tx && tx.status === 'error'){\n            error = {\n              message:'Unknown error'\n            };\n          } else if (!tx && error){\n            tx = {\n              status:'error'\n            };\n          }\n\n          const txSucceeded = tx && tx.status === 'success';\n\n          // Send Google Analytics event\n          const eventData = {\n            eventCategory: 'Migrate',\n            eventAction: migrationMethod,\n            eventLabel: tx ? tx.status : null,\n            eventValue: parseInt(oldIdleTokens)\n          };\n\n          if (error){\n            eventData.eventLabel = this.functionsUtil.getTransactionError(error);\n          }\n\n          // Send Google Analytics event\n          if (error || eventData.status !== 'error'){\n            this.functionsUtil.sendGoogleAnalyticsEvent(eventData);\n          }\n\n          // console.log('callbackMigrate',tx,tx.status,txSucceeded,error,this.props.migrationCallback);\n\n          if (txSucceeded){\n            // Toast message\n            window.toastProvider.addMessage(`Migration completed`, {\n              secondaryMessage: `Your funds has been migrated`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"success\",\n            });\n\n            if (this.props.migrationCallback && typeof this.props.migrationCallback === 'function'){\n              this.props.migrationCallback(tx);\n            }\n\n          } else { // Show migration error toast only for real error\n            window.toastProvider.addMessage(`Migration error`, {\n              secondaryMessage: `The migration has failed, try again...`,\n              colorTheme: 'light',\n              actionHref: \"\",\n              actionText: \"\",\n              variant: \"failure\",\n            });\n\n            // Check migration if failed\n            this.checkMigration();\n          }\n\n          this.setState((prevState) => ({\n            migrationEnabled:txSucceeded ? false : true,\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                txHash:null,\n                loading:false\n              }\n            }\n          }));\n        }\n\n        const callbackReceiptMigrate = (tx) => {\n          const txHash = tx.transactionHash;\n          this.setState((prevState) => ({\n            processing: {\n              ...prevState.processing,\n              migrate:{\n                ...prevState.processing.migrate,\n                txHash\n              }\n            }\n          }));\n        };\n\n        const callbackPermit = () => {\n          if (typeof this.props.callbackPermit === 'function'){\n            this.props.callbackPermit();\n          }\n        }\n\n        const useMetaTx = this.props.useMetaTx !== false && this.props.biconomy && this.state.metaTransactionsEnabled && !this.state.biconomyLimitReached;\n\n        // Call migration contract function to migrate funds\n        const oldIdleTokens = this.state.oldIdleTokens;\n        const toMigrate = this.props.showBalanceSelector ? this.functionsUtil.integerValue(this.functionsUtil.normalizeTokenAmount(this.state.inputValue[this.state.action],this.state.oldContractTokenDecimals)) : this.functionsUtil.integerValue(this.state.oldContractBalance);\n        // const toMigrate =  this.functionsUtil.normalizeTokenAmount('1',this.state.oldContractTokenDecimals).toString(); // TEST AMOUNT\n\n        let _skipRebalance = typeof this.props.tokenConfig.skipMintForDeposit !== 'undefined' ? this.props.tokenConfig.skipMintForDeposit : this.functionsUtil.getGlobalConfig(['contract','methods','migrate','skipRebalance']);\n\n        // Mint if someone mint over X amount\n        let minAmountForRebalance = null;\n        \n        if (_skipRebalance){\n\n          // Check if the amount is over a certain amount to rebalance the pool\n          if (useMetaTx){\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalanceMetaTx']);\n          } else {\n            minAmountForRebalance = this.functionsUtil.getGlobalConfig(['contract','methods','migrate','minAmountForRebalance']);\n          }\n\n          if (minAmountForRebalance){\n            const amountToDeposit = await this.functionsUtil.convertTokenBalance(oldIdleTokens,this.props.selectedToken,this.props.tokenConfig,false);\n            if (amountToDeposit.gte(this.functionsUtil.BNify(minAmountForRebalance))){\n              _skipRebalance = false;\n            }\n          }\n        }\n\n        let migrationParams = this.props.migrationParams ? this.props.migrationParams : [toMigrate,this.props.tokenConfig.migration.oldContract.address,this.props.tokenConfig.idle.address,this.props.tokenConfig.address,_skipRebalance];\n\n        if (typeof migrationParams === 'function'){\n          migrationParams = migrationParams(toMigrate);\n        }\n\n        // Check if Biconomy is enabled\n        if (useMetaTx){\n          const functionSignature = migrationContract.methods[migrationMethod](...migrationParams).encodeABI();\n          this.functionsUtil.sendBiconomyTxWithPersonalSign(migrationContractInfo.name, functionSignature, callbackMigrate, callbackReceiptMigrate);\n          // this.functionsUtil.sendBiconomyTx(migrationContractInfo.name, migrationContractInfo.address, functionSignature, callbackMigrate, callbackReceiptMigrate);\n        } else {\n          const permitContract = this.functionsUtil.getContractByName(this.props.tokenConfig.name);\n          const functionInfo = migrationContractInfo.functions.find( f => f.name === migrationMethod );\n          if (this.props.usePermit && permitContract){\n            this.functionsUtil.sendTxWithPermit(this.props.tokenConfig.name, this.props.account, migrationContractInfo.name, functionInfo.permitName, migrationParams, callbackMigrate, callbackReceiptMigrate, callbackPermit);\n          } else {\n            // Send migration tx\n            this.functionsUtil.contractMethodSendWrapper(migrationContractInfo.name, migrationMethod, migrationParams, callbackMigrate, callbackReceiptMigrate);\n          }\n        }\n\n        // debugger;\n\n        this.setState((prevState) => ({\n          processing: {\n            ...prevState.processing,\n            migrate:{\n              txHash:null,\n              loading:true\n            }\n          }\n        }));\n      // }\n    }\n\n    return false;\n  }\n\n  render() {\n\n    if (!this.props.tokenConfig || !this.props.selectedToken){\n      return null;\n    }\n\n    const contractApproved = this.props.usePermit || this.state.migrationContractApproved;\n    const batchMigrationInfo = this.functionsUtil.getGlobalConfig(['tools','batchMigration']);\n    const batchMigrationEnabled = batchMigrationInfo.enabled && typeof batchMigrationInfo.props.availableTokens[this.props.tokenConfig.idle.token] !== 'undefined';\n    const batchMigrationDepositEnabled = batchMigrationInfo.depositEnabled;\n\n    // console.log('contractApproved',contractApproved,this.props.usePermit,this.state.migrationContractApproved);\n\n    const SkipMigrationComponent = (props) => (\n      <DashboardCard\n        cardProps={{\n          pt:2,\n          pb:3,\n          px:2,\n          mb:2,\n          display:'flex',\n          alignItems:'center',\n          flexDirection:'column',\n          justifyContent:'center',\n          mt:this.state.skipMigration ? 3 : 2,\n        }}\n      >\n        <Flex\n          width={1}\n          alignItems={'center'}\n          flexDirection={'column'}\n          justifyContent={'center'}\n        >\n          <Icon\n            size={'1.8em'}\n            color={'cellText'}\n            name={'FastForward'}\n          />\n        </Flex>\n        <Checkbox\n          required={false}\n          checked={this.state.skipMigration}\n          label={`Skip migration and deposit in Idle v4`}\n          onChange={ e => this.toggleSkipMigration(e.target.checked) }\n        />\n      </DashboardCard>\n    );\n\n    const biconomyEnabled = this.functionsUtil.getGlobalConfig(['network','providers','biconomy','enabled']) && !this.state.biconomyLimitReached;\n\n    return (\n      this.state.loading && this.props.account ? (\n        <DashboardCard\n          cardProps={{\n            p:3,\n            mt:3,\n            minHeight:'195px',\n            style:{\n              display:'flex',\n              alignItems:'center',\n              justifyContent:'center'\n            }\n          }}\n        >\n          <FlexLoader\n            flexProps={{\n              flexDirection:'row'\n            }}\n            loaderProps={{\n              size:'30px'\n            }}\n            textProps={{\n              ml:2\n            }}\n            text={'Checking migration...'}\n          />\n        </DashboardCard>\n      ) : (\n        (this.state.migrationEnabled && !this.state.skipMigration) ? (\n          <Box width={1}>\n            {\n              !this.props.isMigrationTool &&\n              <Flex\n                mt={3}\n                flexDirection={'column'}\n              >\n                <DashboardCard\n                  cardProps={{\n                    p:3,\n                  }}\n                >\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'column'}\n                  >\n                    <Icon\n                      size={'2.3em'}\n                      color={'cellText'}\n                      name={ this.props.isMigrationTool ? 'SwapHoriz' : 'Warning' }\n                    />\n                    <Text\n                      mt={1}\n                      fontSize={2}\n                      color={'cellText'}\n                      textAlign={'center'}\n                    >\n                      { this.props.migrateTextBefore !== null ? this.props.migrateTextBefore : null }\n                      { this.props.migrateTextBefore !== null &&\n                        <br />\n                      }\n                      You { !this.props.isMigrationTool ? 'still' : '' } have <strong>{this.state.oldIdleTokens.toFixed(4)} {this.state.oldTokenName} {this.state.oldIdleTokensConverted ? `(${this.state.oldIdleTokensConverted.toFixed(4)} ${this.props.selectedToken})` : ''}</strong> to migrate.<br />\n                      { this.props.migrateText !== null ? this.props.migrateText : 'Please use the section below to migrate or redeem your old tokens.' }\n                    </Text>\n                  </Flex>\n                </DashboardCard>\n              </Flex>\n            }\n            {\n              (this.props.showActions === undefined || this.props.showActions) && \n                <Flex\n                  mt={2}\n                  flexDirection={'column'}\n                >\n                  {\n                    !this.props.isMigrationTool && \n                      <SkipMigrationComponent />\n                  }\n                  <Text mb={2}>\n                    Choose the action:\n                  </Text>\n                  <Flex\n                    alignItems={'center'}\n                    flexDirection={'row'}\n                    justifyContent={'space-between'}\n                  >\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('migrate');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'migrate' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'migrate'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Migrate\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                    <DashboardCard\n                      cardProps={{\n                        p:3,\n                        width:0.48,\n                        onMouseDown:() => {\n                          this.setAction('redeem');\n                        }\n                      }}\n                      isInteractive={true}\n                      isActive={ this.state.action === 'redeem' }\n                    >\n                      <Flex\n                        my={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <TransactionField\n                          transaction={{\n                            action:'redeem'\n                          }}\n                          fieldInfo={{\n                            name:'icon',\n                            props:{\n                              mr:3\n                            }\n                          }}\n                        />\n                        <Text\n                          fontSize={3}\n                          fontWeight={3}\n                        >\n                          Redeem\n                        </Text>\n                      </Flex>\n                    </DashboardCard>\n                  </Flex>\n                </Flex>\n            }\n            {\n              this.state.action === 'migrate' ? (\n                <Flex\n                  mt={1}\n                  mb={3}\n                  flexDirection={'column'}\n                >\n                  {\n                    (batchMigrationEnabled && batchMigrationDepositEnabled && !this.props.isMigrationTool) &&\n                      <Flex\n                        mb={3}\n                        width={1}\n                        alignItems={'center'}\n                        flexDirection={'row'}\n                        justifyContent={'center'}\n                      >\n                        <Link\n                          textAlign={'center'}\n                          hoverColor={'primary'}\n                          href={`/#/dashboard/tools/${batchMigrationInfo.route}/${this.props.tokenConfig.idle.token}`}\n                        >\n                          Gas fees too high? Save gas with our Batch Migrator!\n                        </Link>\n                        <Icon\n                          ml={1}\n                          size={'1em'}\n                          color={'primary'}\n                          name={'LocalGasStation'}\n                        />\n                      </Flex>\n                  }\n                  {\n                    contractApproved ? (\n                      this.state.processing.migrate.loading ? (\n                        <Flex\n                          mt={3}\n                          flexDirection={'column'}\n                        >\n                          <TxProgressBar\n                            {...this.props}\n                            hash={this.state.processing.migrate.txHash}\n                            endMessage={`Finalizing migration request...`}\n                            cancelTransaction={this.cancelTransaction.bind(this)}\n                            waitText={ this.props.waitText ? this.props.waitText : 'Migration estimated in'}\n                            sendingMessage={ this.props.biconomy && this.state.metaTransactionsEnabled ? 'Sending meta-transaction...' : 'Sending transaction...' }\n                          />\n                        </Flex>\n                      ) : this.props.showBalanceSelector ? (\n                        <Flex\n                          mt={1}\n                          flexDirection={'column'}\n                        >\n                          <Flex\n                            mb={3}\n                            width={1}\n                            flexDirection={'column'}\n                          >\n                            <Flex\n                              mb={1}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={this.props.balanceSelectorInfo ? 'space-between' : 'flex-end'}\n                            >\n                              {\n                                this.props.balanceSelectorInfo && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                  >\n                                    <Text\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      textAlign={'left'}\n                                      style={{\n                                        maxWidth:'100%',\n                                        overflow:'hidden',\n                                        whiteSpace:'nowrap',\n                                        textOverflow:'ellipsis'\n                                      }}\n                                      color={this.props.balanceSelectorInfo.color ? this.props.balanceSelectorInfo.color : 'copyColor'}\n                                    >\n                                      {this.props.balanceSelectorInfo.text}\n                                    </Text>\n                                  </Flex>\n                                )\n                              }\n                              {\n                                this.state.oldIdleTokens && (\n                                  <Flex\n                                    width={1}\n                                    maxWidth={'50%'}\n                                    alignItems={'center'}\n                                    flexDirection={'row'}\n                                    justifyContent={'flex-end'}\n                                  >\n                                    <Link\n                                      fontSize={1}\n                                      fontWeight={3}\n                                      color={'dark-gray'}\n                                      textAlign={'right'}\n                                      hoverColor={'copyColor'}\n                                      onClick={ (e) => this.setFastBalanceSelector(100) }\n                                    >\n                                      Balance: {this.state.oldIdleTokens.toFixed(6)} {this.props.selectedToken}\n                                    </Link>\n                                  </Flex>\n                                )\n                              }\n                            </Flex>\n                            <Input\n                              min={0}\n                              type={\"number\"}\n                              required={true}\n                              height={'3.4em'}\n                              borderRadius={2}\n                              fontWeight={500}\n                              borderColor={'cardBorder'}\n                              backgroundColor={'cardBg'}\n                              boxShadow={'none !important'}\n                              placeholder={'Insert amount'}\n                              onChange={this.changeInputValue.bind(this)}\n                              border={`1px solid ${this.props.theme.colors.divider}`}\n                              value={this.state.inputValue[this.state.action] ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toFixed() : ''}\n                            />\n                            <Flex\n                              mt={2}\n                              alignItems={'center'}\n                              flexDirection={'row'}\n                              justifyContent={'space-between'}\n                            >\n                              {\n                                [25,50,75,100].map( percentage => (\n                                  <FastBalanceSelector\n                                    percentage={percentage}\n                                    key={`selector_${percentage}`}\n                                    onMouseDown={()=>this.setFastBalanceSelector(percentage)}\n                                    isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(percentage)}\n                                  />\n                                ))\n                              }\n                            </Flex>\n                          </Flex>\n                          <Flex\n                            mt={1}\n                            width={1}\n                            alignItems={'center'}\n                            justifyContent={'center'}\n                          >\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      width:[1,0.5],\n                                      disabled:this.state.buttonDisabled,\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                          </Flex>\n                        </Flex>\n                      ) : (\n                        <DashboardCard\n                          cardProps={{\n                            p:3,\n                            mt:2,\n                          }}\n                        >\n                          <Flex\n                            alignItems={'center'}\n                            flexDirection={'column'}\n                          >\n                            {\n                              this.props.migrationImage ? (\n                                <Image\n                                  {...this.props.migrationImage}\n                                />\n                              ) : (\n                                <Icon\n                                  size={'2.3em'}\n                                  color={'cellText'}\n                                  name={ this.props.migrationIcon ? this.props.migrationIcon : (this.props.isMigrationTool ? 'SwapHoriz' : 'Repeat') }\n                                />\n                              )\n                            }\n                            <Text\n                              mt={1}\n                              fontSize={2}\n                              color={'cellText'}\n                              textAlign={'center'}\n                            >\n                              {\n                                this.props.migrationText ? (\n                                  <Text.span\n                                    migrationTextProps={this.props.migrationTextProps}\n                                    dangerouslySetInnerHTML={{\n                                      __html:this.props.migrationText\n                                    }}\n                                  >\n                                  </Text.span>\n                                ) : (\n                                  <Text.span\n                                    color={'cellText'}\n                                  >\n                                    You are one step away from the migration of your { this.props.isMigrationTool ? this.state.oldIdleTokens.toFixed(4) : 'old' } {this.state.oldTokenName}{ this.props.isMigrationTool ? ` into the Idle ${this.props.tokenConfig.token} ${this.props.selectedStrategy} strategy` : '' }!\n                                  </Text.span>\n                                )\n                              }\n                            </Text>\n                            <Flex\n                              width={1}\n                              alignItems={'center'}\n                              flexDirection={'column'}\n                              justifyContent={'space-between'}\n                            >\n                            {\n                              biconomyEnabled && \n                                <Flex\n                                  py={3}\n                                  px={2}\n                                  mt={2}\n                                  width={1}\n                                  borderRadius={2}\n                                  alignItems={'center'}\n                                  flexDirection={'column'}\n                                  justifyContent={'center'}\n                                  backgroundColor={'dashboardBg'}\n                                  border={`1px solid ${this.props.theme.colors.boxBorder}`}\n                                >\n                                  <Text\n                                    mt={1}\n                                    fontSize={1}\n                                    color={'cellText'}\n                                    textAlign={'center'}\n                                  >\n                                    {\n                                      this.props.biconomy ?\n                                        `Meta-Transactions allow you to migrate without spending a dime! But, if you are stuck, please disable it and try again.`\n                                      :\n                                        'Your wallet does not support Meta-transactions, you are still able to migrate with a normal transaction.'\n                                    }\n                                  </Text>\n                                  {\n                                  this.props.biconomy &&\n                                    <Checkbox\n                                      mt={2}\n                                      required={false}\n                                      label={\"Migrate with Meta-Transaction\"}\n                                      checked={this.state.metaTransactionsEnabled}\n                                      onChange={ e => this.toggleMetaTransactionsEnabled(e.target.checked) }\n                                    />\n                                  }\n                                </Flex>\n                            }\n                            {\n                              this.props.tokenConfig.migration.migrationContract.functions.map((functionInfo,i) => {\n                                const functionName = functionInfo.name;\n                                return (\n                                  <RoundButton\n                                    buttonProps={{\n                                      mt:3,\n                                      width:[1,0.5],\n                                      mainColor:this.props.theme.colors.migrate\n                                    }}\n                                    key={`migrate_${i}`}\n                                    handleClick={ e => this.migrate(e,functionName) }\n                                  >\n                                    { functionInfo.label }\n                                  </RoundButton>\n                                )\n                              })\n                            }\n                            </Flex>\n                          </Flex>\n                        </DashboardCard>\n                      )\n                    ) : this.state.processing.approve.loading ? (\n                      <Flex\n                        mt={3}\n                        flexDirection={'column'}\n                      >\n                        <TxProgressBar\n                          {...this.props}\n                          waitText={`Approve estimated in`}\n                          hash={this.state.processing.approve.txHash}\n                          endMessage={`Finalizing approve request...`}\n                          cancelTransaction={this.cancelTransaction.bind(this)}\n                        />\n                      </Flex>\n                    ) : (\n                      <DashboardCard\n                        cardProps={{\n                          p:3,\n                          mt:2,\n                        }}\n                      >\n                        <Flex\n                          alignItems={'center'}\n                          flexDirection={'column'}\n                        >\n                          <Icon\n                            size={'2.3em'}\n                            name={'LockOpen'}\n                            color={'cellText'}\n                          />\n                          <Text\n                            mt={1}\n                            fontSize={2}\n                            color={'cellText'}\n                            textAlign={'center'}\n                          >\n                            {\n                              this.props.approveText ? this.props.approveText : `To migrate your ${ !this.props.isMigrationTool ? 'old' : '' } ${this.state.oldTokenName} you need to approve our Smart-Contract first.`\n                            }\n                          </Text>\n                          <RoundButton\n                            buttonProps={{\n                              mt:3,\n                              width:[1,1/2]\n                            }}\n                            handleClick={this.approveMigration.bind(this)}\n                          >\n                            Approve\n                          </RoundButton>\n                        </Flex>\n                      </DashboardCard>\n                    )\n                  }\n                </Flex>\n              ) : (\n                !this.state.processing[this.state.action].loading ? (\n                  <Flex\n                    mt={3}\n                    flexDirection={'column'}\n                  >\n                    <Input\n                      min={0}\n                      type={\"number\"}\n                      required={true}\n                      height={'3.4em'}\n                      borderRadius={2}\n                      fontWeight={500}\n                      className={styles.input}\n                      borderColor={'cardBorder'}\n                      backgroundColor={'cardBg'}\n                      boxShadow={'none !important'}\n                      onChange={this.changeInputValue.bind(this)}\n                      border={`1px solid ${this.props.theme.colors.divider}`}\n                      placeholder={`Insert ${this.state.oldTokenName} amount`}\n                      value={this.state.inputValue[this.state.action] !== null ? this.functionsUtil.BNify(this.state.inputValue[this.state.action]).toString() : ''}\n                    />\n                    <Flex\n                      mt={3}\n                      alignItems={'center'}\n                      flexDirection={'row'}\n                      justifyContent={'space-between'}\n                    >\n                      <FastBalanceSelector\n                        percentage={25}\n                        onMouseDown={()=>this.setFastBalanceSelector(25)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(25)}\n                      />\n                      <FastBalanceSelector\n                        percentage={50}\n                        onMouseDown={()=>this.setFastBalanceSelector(50)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(50)}\n                      />\n                      <FastBalanceSelector\n                        percentage={75}\n                        onMouseDown={()=>this.setFastBalanceSelector(75)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(75)}\n                      />\n                      <FastBalanceSelector\n                        percentage={100}\n                        onMouseDown={()=>this.setFastBalanceSelector(100)}\n                        isActive={this.state.fastBalanceSelector[this.state.action] === parseInt(100)}\n                      />\n                    </Flex>\n                    <Flex\n                      mt={3}\n                      justifyContent={'center'}\n                    >\n                      <RoundButton\n                        buttonProps={{\n                          width:[1,1/2],\n                          disabled:this.state.buttonDisabled,\n                          style:{\n                            textTransform:'capitalize'\n                          }\n                        }}\n                        handleClick={this.state.buttonDisabled ? null : this.executeAction.bind(this) }\n                      >\n                        {this.state.action}\n                      </RoundButton>\n                    </Flex>\n                  </Flex>\n                ) : (\n                  <Flex\n                    mt={4}\n                    flexDirection={'column'}\n                  >\n                    <TxProgressBar\n                      {...this.props}\n                      cancelTransaction={this.cancelTransaction.bind(this)}\n                      hash={this.state.processing[this.state.action].txHash}\n                      endMessage={`Finalizing ${this.state.action} request...`}\n                      waitText={`${this.functionsUtil.capitalize(this.state.action)} estimated in`}\n                    />\n                  </Flex>\n                )\n              )\n            }\n          </Box>\n        ) : (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'column'}\n            justifyContent={'center'}\n          >\n            {\n              (!this.props.isMigrationTool && this.state.migrationEnabled) && \n                <SkipMigrationComponent />\n            }\n            {\n              this.props.children ? this.props.children : null\n            }\n          </Flex>\n        )\n      )\n    )\n  }\n}\n\nexport default Migrate;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass ChartCustomTooltipRow extends Component {\n\n  async componentWillMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps,prevState){\n\n  }\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default ChartCustomTooltipRow;\n","import { Flex } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport AssetField from '../AssetField/AssetField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsList extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentDidMount(){\n    this.loadUtils();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render() {\n\n    let enabledTokens = this.props.enabledTokens;\n    if (!enabledTokens || !enabledTokens.length){\n      enabledTokens = Object.keys(this.props.availableTokens);\n    }\n\n    return (\n      <Flex id=\"assets-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"assets-list\" flexDirection={'column'}>\n          {\n            enabledTokens.map(token => {\n              const tokenConfig = this.props.availableTokens ? this.props.availableTokens[token] : null;\n              if (!tokenConfig){\n                return null;\n              }\n              return (\n                <TableRow\n                  token={token}\n                  {...this.props}\n                  key={`asset-${token}`}\n                  tokenConfig={tokenConfig}\n                  rowId={`asset-col-${token}`}\n                  cardId={`asset-card-${token}`}\n                  fieldComponent={this.props.fieldComponent || AssetField}\n                />\n              );\n            })\n          }\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsList;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__38P6I\",\"link\":\"Footer_link__13yZU\"};","import React from \"react\";\nimport styles from './ModalCard.module.scss';\nimport { Box, Flex, Card, Button, Heading, Image } from \"rimble-ui\";\n\nconst ModalCard = ({children, closeFunc, ...props}) => (\n  <Card\n    p={0}\n    border={0}\n    mx={'auto'}\n    my={'auto'}\n    height={'auto'}\n    borderRadius={2}\n    overflow={'auto'}\n    width={ props.width ? props.width : 'auto' }\n    minWidth={ props.minWidth ? props.minWidth : 'auto' }\n    maxWidth={ props.maxWidth ? props.maxWidth : '960px'}\n  >\n    <Box\n      top={'0'}\n      zIndex={1}\n      right={'0'}\n      position={\"absolute\"}\n    >\n      <Button.Text\n        icononly\n        icon={\"Close\"}\n        size={'2.5em'}\n        onClick={closeFunc}\n        mainColor={ props.mainColor ? props.mainColor :  'copyColor' }\n      />\n    </Box>\n    <Flex\n      height={'100%'}\n      flex={'1 1 auto'}\n      flexDirection={'column'}\n      className={[ props.bgLayer ? styles.bg : null]}\n      style={{\n        overflow: 'auto',\n        backgroundRepeat:'no-repeat',\n        backgroundPosition:'bottom right',\n        backgroundSize: !props.background ? '65%' : null,\n        backgroundImage:'url(/images/bg-bottom-right.png)',\n        background: props.background ? props.background : null,\n      }}\n      backgroundColor={'cardBg'}\n    >\n      {children}\n    </Flex>\n  </Card>\n);\n\nModalCard.Header = (props) => (\n  <Box\n    width={1}\n    mb={[2,3]}\n    pb={[2,2]}\n    pt={ props.pt ? props.pt : (props.icon ? 3 : [5,3]) }\n    borderBottom={ props.borderBottom ? props.borderBottom : '1px solid #eee' }\n  >\n    <Flex\n      px={[1,2]}\n      alignItems={'center'}\n      flexDirection={'column'}\n    >\n      { props.icon && <Image width={ props.iconHeight ? props.iconHeight : '50px' } src={props.icon} /> }\n      <Heading.h3\n        mb={0}\n        fontSize={[3,3]}\n        color={'copyColor'}\n        textAlign={'center'}\n        mt={props.icon ? 2 : 0}\n        fontFamily={'sansSerif'}\n        {...props.titleProps}\n      >\n        {props.title}\n      </Heading.h3>\n      {\n        props.subtitle &&\n        <Heading.h4\n          pt={[1,2]}\n          fontWeight={2}\n          fontSize={[2,2]}\n          lineHeight={1.5}\n          color={'dark-gray'}\n          textAlign={'center'}\n          {...props.subtitleProps}\n        >\n          {props.subtitle}\n        </Heading.h4>\n      }\n      {\n        props.subtitle2 &&\n        <Heading.h4 pt={0} fontSize={[2,2]} textAlign={'center'} fontWeight={2} lineHeight={1.5} color={'dark-gray'}>\n          {props.subtitle2}\n        </Heading.h4>\n      }\n    </Flex>\n  </Box>\n);\n\nModalCard.Body = ({children, ...props}) => (\n  <Box\n    width={1}\n    px={[3,5]}\n    {...props}\n  >\n    {children}\n  </Box>\n);\n/*\nModalCard.Body = ({children, ...props}) => (\n  <Flex flex={'1 1 auto'} style={{ overflow: 'auto' }} >\n    <Box width={1} px={[4,5]} py={[3,4]} m={'auto'}>\n      {children}\n    </Box>\n  </Flex>\n);\n*/\n\nModalCard.Footer = ({children, ...props}) => (\n  <Flex\n    flex={'1 0 auto'}\n    justifyContent={'center'}\n    borderTop={1}\n    borderColor={'light-gray'}\n    px={[0,3]}\n    py={3}\n  >\n    {children}\n  </Flex>\n);\n\n\nModalCard.BackButton = ({onClick, ...props}) => (\n  <Box\n    position={'absolute'}\n    top={'0'}\n    left={'0'}\n    m={3}\n    bg={'white'}\n  >\n    <Button.Outline\n      onClick={onClick}\n      icononly\n      icon={'ArrowBack'}\n      size={'2.5em'}\n    />\n  </Box>\n);\n\nexport default ModalCard;\n","import { tint, shade, readableColor } from 'polished';\n\n// rimble base colors\nconst baseColors = {\n  black: '#000e1a',\n  white: '#FFF',\n  blue: '#0036ff',\n  darkBlue: '#0028be',\n  green: '#28C081',\n  yellow: '#FD9D28',\n  red: '#DC2C10',\n  blurple: '#4E3FCE',\n  consensysblue: '#3259D6',\n};\n\n// rimble palette\nconst colors = {\n  blurple: {\n    base: baseColors.blurple,\n    text: readableColor(baseColors.blurple),\n    light: [null, tint(0.2, baseColors.blurple)],\n    dark: [null, shade(0.2, baseColors.blurple)],\n  },\n  blue: {\n    base: baseColors.blue,\n    text: readableColor(baseColors.blue),\n    light: [null, tint(0.9, baseColors.blue)],\n    dark: [null, shade(0.4, baseColors.blue)],\n  },\n  green: {\n    base: baseColors.green,\n    text: baseColors.white,\n    light: [null, tint(0.9, baseColors.green)],\n    dark: [null, shade(0.4, baseColors.green)],\n  },\n  yellow: {\n    base: baseColors.yellow,\n    text: readableColor(baseColors.yellow),\n    light: [null, tint(0.9, baseColors.yellow)],\n    dark: [null, shade(0.4, baseColors.yellow)],\n  },\n  red: {\n    base: baseColors.red,\n    text: readableColor(baseColors.red),\n    light: [null, tint(0.9, baseColors.red)],\n    dark: [null, shade(0.4, baseColors.red)],\n  },\n};\n\nconst blurple = colors.blurple;\nconst blue = colors.blue;\nconst green = colors.green;\nconst yellow = colors.yellow;\nconst red = colors.red;\n\nexport { blurple };\nexport { blue };\nexport { green };\nexport { yellow };\nexport { red };\nexport default baseColors;\n","import Title from '../Title/Title';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { Box, Flex, Text, Loader } from \"rimble-ui\";\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass AssetsUnderManagement extends Component {\n\n  state = {\n    totalAUM:null,\n    totalAUMEndOfYear:null\n  }\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.loadTotalAUM();\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    this.loadUtils();\n    const contractsInitialized = prevProps.contractsInitialized !== this.props.contractsInitialized;\n    const availableStrategiesChanged = !prevProps.availableStrategies && JSON.stringify(prevProps.availableStrategies) !== JSON.stringify(this.props.availableStrategies);\n    if (availableStrategiesChanged || contractsInitialized){\n      this.loadTotalAUM();\n    }\n  }\n\n  async loadTotalAUM(){\n\n    const allNetworks = this.props.allNetworks || false;\n\n    if (!this.props.availableStrategies || !this.props.contractsInitialized || (allNetworks && this.state.totalAUM)){\n      return true;\n    }\n\n    if (this.props.totalAUM && this.props.totalAUMEndOfYear){\n      return this.setState({\n        totalAUM:this.props.totalAUM,\n        totalAUMEndOfYear:this.props.totalAUMEndOfYear\n      });\n    }\n\n    const aggregatedStatsMethodParams = this.props.aggregatedStatsMethodParams || [true,allNetworks];\n\n    const {\n      avgAPY,\n      totalAUM\n    } = typeof this.props.aggregatedStatsMethod === 'function' ? await this.props.aggregatedStatsMethod(...aggregatedStatsMethodParams) : await this.functionsUtil.getAggregatedStats(...aggregatedStatsMethodParams);\n\n    let totalAUMEndOfYear = this.functionsUtil.BNify(0);\n    if (!this.functionsUtil.BNify(totalAUM).isNaN() && !this.functionsUtil.BNify(avgAPY).isNaN()){\n      totalAUMEndOfYear = totalAUM.plus(totalAUM.times(avgAPY.div(100)));\n    }\n\n    return this.setState({\n      totalAUM,\n      totalAUMEndOfYear\n    });\n  }\n\n  render() {\n    return this.state.totalAUM ? (\n      <Box\n        width={1}\n        {...this.props.flexProps}\n      >\n        <CountUp\n          delay={0}\n          decimals={4}\n          decimal={'.'}\n          separator={''}\n          useEasing={false}\n          duration={31536000}\n          start={parseFloat(this.state.totalAUM)}\n          end={parseFloat(this.state.totalAUMEndOfYear)}\n          formattingFn={ n => '$ '+this.functionsUtil.formatMoney(n,4) }\n        >\n          {({ countUpRef, start }) => (\n            <span\n              style={ this.props.counterStyle ? this.props.counterStyle : {\n                display:'block',\n                color:'dark-gray',\n                whiteSpace:'nowrap',\n                fontFamily:this.props.theme.fonts.counter,\n                fontWeight:this.props.theme.fontWeights[5],\n                textAlign: this.props.isMobile ? 'center' : 'right',\n                fontSize: this.props.isMobile ? '1.6em' : this.props.theme.fontSizes[6]\n              }}\n              ref={countUpRef}\n            />\n          )}\n        </CountUp>\n        {\n          (typeof this.props.subtitle === 'undefined' || this.props.subtitle) && (\n            <Title\n              fontWeight={3}\n              fontSize={[2,2]}\n              color={'cellTitle'}\n              textAlign={['center','right']}\n              {...this.props.subtitleProps}\n            >\n              <Text.span fontWeight={'inherit'} color={'inherit'} fontSize={'inherit'}>{this.props.subtitle || 'Assets Under Management'}</Text.span>\n            </Title>\n          )\n        }\n      </Box>\n    ) : (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={this.props.loaderAlign || 'center'}\n      >\n        <Loader\n          size={\"30px\"}\n        />\n      </Flex>\n    );\n  }\n}\n\nexport default AssetsUnderManagement;\n","import { Flex, Icon } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass VariationNumber extends Component {\n\n  render() {\n\n    const IconDirection = () => (\n      <Icon\n        color={ this.props.direction === 'up' ?  '#6dd400' : '#f7b500' }\n        name={ this.props.direction === 'up' ?  'ArrowDropUp' : 'ArrowDropDown' }\n        size={ this.props.iconSize ? this.props.iconSize : ( this.props.isMobile ? '1.4em' : '2em') }\n      />\n    );\n\n    return (\n      <Flex\n        alignItems={'center'}\n        flexDirection={'row'}\n        width={ this.props.width ? this.props.width : 1 }\n        justifyContent={this.props.justifyContent ? this.props.justifyContent : 'center'}\n      >\n        {\n          (!this.props.iconPos || this.props.iconPos==='left') &&\n            <IconDirection />\n        }\n        {this.props.children}\n        {\n          this.props.iconPos==='right' &&\n            <IconDirection />\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default VariationNumber;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInput\":\"GenericSelector_searchInput__vl2hJ\",\"genericSelector\":\"GenericSelector_genericSelector__1Nqkd\",\"dark\":\"GenericSelector_dark__zCOnP\",\"searchInputHidden\":\"GenericSelector_searchInputHidden__2Zm1B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loading-dots\":\"LoadingSpinner_loading-dots__2-3YZ\",\"loading-dots--dot\":\"LoadingSpinner_loading-dots--dot__2Y25C\",\"dot-keyframes\":\"LoadingSpinner_dot-keyframes__3SU_M\"};","import React, { Component } from 'react';\nimport { Flex, Loader, Text } from \"rimble-ui\";\n\nclass FlexLoader extends Component {\n  render() {\n    return (\n      <Flex\n        width={1}\n        alignItems={'center'}\n        justifyContent={'center'}\n        {...this.props.flexProps}\n      >\n        <Loader {...this.props.loaderProps} />\n        {\n          this.props.text &&\n            <Text {...this.props.textProps}>{this.props.text}</Text>\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default FlexLoader;\n","import React, { Component } from 'react';\nimport {\n  Flex, Box\n} from \"rimble-ui\";\nimport styles from './LoadingSpinner.module.scss';\n\nclass LoadingSpinner extends Component {\n  render() {\n    return (\n      <Flex\n        alignItems={'center'}\n        justifyContent={'center'}\n      >\n        <Box className={[styles[\"loading-dots\"]]}>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n          <Box className={[styles[\"loading-dots--dot\"]]} mx={[1,2]}></Box>\n        </Box>\n      </Flex>\n    );\n  }\n}\n\nexport default LoadingSpinner;\n","import React, { Component } from \"react\";\nimport { Flex, Button } from \"rimble-ui\";\nimport LoadingSpinner from \"../LoadingSpinner/LoadingSpinner.js\";\n\nclass ButtonLoader extends Component {\n  render() {\n    return (\n      <Button onClick={this.props.handleClick} {...this.props.buttonProps}>\n        <Flex\n          flexDirection={\"column\"}\n          alignItems={\"center\"}\n          justifyContent={\"center\"}\n        >\n          <Flex width={1} display={this.props.isLoading ? \"flex\" : \"none\"}>\n            <LoadingSpinner />\n          </Flex>\n          <Flex width={1} display={this.props.isLoading ? \"none\" : \"flex\"}>\n            {this.props.buttonText}\n          </Flex>\n        </Flex>\n      </Button>\n    );\n  }\n}\n\nexport default ButtonLoader;\n","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport CustomField from '../CustomField/CustomField';\nimport TooltipText from '../TooltipText/TooltipText';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Flex, Icon, Tooltip } from \"rimble-ui\";\n\nclass TrancheField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n    // console.log('componentDidMount',this.props.protocol,this.props.token,this.props.tranche);\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const trancheChanged = prevProps.tranche !== this.props.tranche;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const protocolChanged = prevProps.protocol !== this.props.protocol;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || protocolChanged || trancheChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      // console.log('componentDidUpdate-1',fieldChanged,tokenChanged,protocolChanged,trancheChanged,accountChanged,transactionsChanged,(contractsInitialized && !this.state.ready));\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      // console.log('componentDidUpdate-2',mobileChanged,themeModeChanged);\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n\n    if (this.componentUnmounted || !this.props.protocol || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return false;\n    }\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    const formatValue = typeof this.props.formatValue !== 'undefined' ? this.props.formatValue : true;\n    const addTokenName = typeof this.props.addTokenName !== 'undefined' ? this.props.addTokenName : true;\n\n    const tranchesConfig = this.functionsUtil.getGlobalConfig(['tranches']);\n    const seniorTrancheName = this.functionsUtil.capitalize(tranchesConfig.AA.baseName);\n    const juniorTrancheName = this.functionsUtil.capitalize(tranchesConfig.BB.baseName);\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const endTimestamp = parseInt(Date.now()/1000);\n          const startTimestamp = endTimestamp-(7*24*60*60);\n\n          // Check for cached data\n          let aprChartData = [];\n          const cachedDataKey = `trancheAprChart_${this.props.tokenConfig.address}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n            const [\n              apiResults_aa,\n              apiResults_bb\n            ] = await Promise.all([\n              this.functionsUtil.getSubgraphTrancheInfo(this.props.tokenConfig.AA.address,startTimestamp,endTimestamp),\n              this.functionsUtil.getSubgraphTrancheInfo(this.props.tokenConfig.BB.address,startTimestamp,endTimestamp)\n            ]);\n\n            let itemIndex = 0;\n            let maxChartValue = 0;\n            const totalItems_aa = apiResults_aa.length;\n            const totalItems_bb = apiResults_bb.length;\n\n            aprChartData.push({\n              color:tranchesConfig.AA.color.hex,\n              id:`${this.props.token} ${seniorTrancheName} APY`,\n              data:apiResults_aa.map((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.apr2apy(this.functionsUtil.fixTokenDecimals(d.apr,18).div(100)).times(100));\n                maxChartValue = Math.max(maxChartValue,y);\n                const itemPos = Math.floor(itemIndex++/totalItems_aa*100);\n                return { x, y, itemPos };\n              })\n            });\n\n            itemIndex = 0;\n            aprChartData.push({\n              color:tranchesConfig.BB.color.hex,\n              id:`${this.props.token} ${juniorTrancheName} APY`,\n              data:apiResults_bb.map((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timeStamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.apr2apy(this.functionsUtil.fixTokenDecimals(d.apr,18).div(100)).times(100));\n                maxChartValue = Math.max(maxChartValue,y);\n                const itemPos = Math.floor(itemIndex++/totalItems_bb*100);\n                return { x, y, itemPos };\n              })\n            });\n\n            if (aprChartData.length && aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = this.props.parentId && document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        default:\n          output = await this.functionsUtil.loadTrancheField(fieldName,fieldProps,this.props.protocol,this.props.token,this.props.tranche,this.props.tokenConfig,this.props.trancheConfig,this.props.account,addGovTokens,formatValue,addTokenName);\n          if (output !== undefined && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    let output = null;\n    const fieldInfo = this.props.fieldInfo;\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    // const tokenName = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token,'label']) || this.functionsUtil.capitalize(this.props.token);\n\n    // const tokenConfig = this.props.tokenConfig;// || this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token]);\n    const maxPrecision = fieldProps && parseInt(fieldProps.maxPrecision)>=0 ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && parseInt(fieldProps.decimals)>=0 ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && parseInt(fieldProps.minPrecision)>=0 ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    // console.log('TrancheField',fieldInfo.name,fieldProps);\n    const flexProps = fieldProps.flexProps;\n    delete fieldProps.flexProps;\n\n    switch (fieldInfo.name){\n      case 'protocolIcon':\n        const protocolConfig = this.functionsUtil.getGlobalConfig(['stats', 'protocols', this.props.protocol]);\n        const protocolIcon = protocolConfig && protocolConfig.icon ? protocolConfig.icon : `${this.props.protocol}.svg`;\n        output = (\n          <Image src={`images/protocols/${protocolIcon}`} {...fieldProps} />\n        );\n      break;\n      case 'experimentalBadge':\n        output = null;\n        if (this.state.experimentalBadge && this.functionsUtil.BNify(this.state.experimentalBadge).gt(0)){\n          const limitCap = this.functionsUtil.abbreviateNumber(this.state.experimentalBadge, 2, maxPrecision, 0) + ` ${this.props.token}`;\n          output = (\n            <Tooltip\n              placement={'top'}\n              message={`This pool is experimental and has a cap limit of ${limitCap}`}\n            >\n              <Image src={`images/experimental.png`} {...fieldProps} />\n            </Tooltip>\n          );\n        }\n      break;\n      case 'statusBadge':\n        output = null;\n        let badgeText = null;\n        let badgeColor = null;\n\n        if (!this.state.statusBadge){\n          output = loader;\n        } else {\n          if (this.functionsUtil.BNify(this.state.statusBadge).gt(0)){\n            badgeText = 'Experimental';\n            badgeColor = 'experimental';\n          } else {\n            badgeText = 'Production';\n            badgeColor = 'production';\n          }\n          output = (\n            <Flex\n              px={2}\n              py={1}\n              borderRadius={2}\n              alignItems={'center'}\n              justifyContent={'center'}\n              backgroundColor={badgeColor}\n            >\n              <Text\n                fontSize={1}\n                fontWeight={3}\n                color={'white'}\n              >\n                {badgeText}\n              </Text>\n            </Flex>\n          );\n        }\n      break;\n      case 'trancheTypeIcon':\n        const trancheDetails = this.functionsUtil.getGlobalConfig(['tranches',this.props.tranche]);\n        output = (\n          <Flex\n            p={'6px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={`rgba(${trancheDetails.color.rgb.join(',')},0.2)`}\n            {...flexProps}\n          >\n            <Icon\n              {...fieldProps}\n              align={'center'}\n              name={trancheDetails.icon}\n              color={trancheDetails.color.hex}\n            />\n          </Flex>\n        );\n      break;\n      case 'tokenIcon':\n        const tokenConfig = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]);\n        const tokenIcon = tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`;\n        output = (\n          <Image src={tokenIcon} {...fieldProps} />\n        );\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'custom':\n        output = (\n          <CustomField\n            row={this.props}\n            fieldInfo={fieldInfo}\n          />\n        );\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesCounter && this.state.feesCounter.feesStart && this.state.feesCounter.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesCounter.feesEnd)}\n            start={parseFloat(this.state.feesCounter.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsCounter && this.state.earningsCounter.earningsStart && this.state.earningsCounter.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCounter.earningsEnd)}\n            start={parseFloat(this.state.earningsCounter.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'trancheApyWithTooltip':\n        if (this.state[fieldInfo.name]){\n          let tooltipMessage = [`${this.props.token}: ${this.state[fieldInfo.name].baseApy.toFixed(decimals)+'%'}`];\n          Object.keys(this.state[fieldInfo.name].tokensApy).forEach( govToken => {\n            const value = this.state[fieldInfo.name].tokensApy[govToken].toFixed(decimals);\n            tooltipMessage.push(`${govToken}: ${value}%`);\n            // return `${govToken}: ${value}%`;\n          });//.join(\"; \");\n          tooltipMessage = tooltipMessage.join('; ');\n          const formattedApy = this.state[fieldInfo.name].formattedApy;\n          if (Object.keys(this.state[fieldInfo.name].tokensApy).length>0){\n            output = (\n              <TooltipText\n                tooltipProps={{\n                  placement:\"right\"\n                }}\n                text={formattedApy}\n                textProps={fieldProps}\n                message={tooltipMessage}\n              />\n            );\n          } else {\n            output = (<Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedApy}}></Text>);\n          }\n        } else {\n          output = (this.state[fieldInfo.name] === undefined ? loader : null);\n        }\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'govTokens':\n      case 'autoFarming':\n      case 'stakingRewards':\n        output = this.state[fieldInfo.name] && Object.keys(this.state[fieldInfo.name]).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.keys(this.state[fieldInfo.name]).map( (govToken,govTokenIndex) => {\n                const govTokenConfig = this.state[fieldInfo.name][govToken];\n                return (\n                  <AssetField\n                    token={govToken}\n                    tokenConfig={govTokenConfig}\n                    key={`asset_${govTokenIndex}`}\n                    fieldInfo={{\n                      name:'iconTooltip',\n                      tooltipProps:{\n                        message:`${govToken}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govToken] ? `: ${this.state.getGovTokensDistributionSpeed[govToken].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                      },\n                      props:{\n                        borderRadius:'50%',\n                        position:'relative',\n                        height:['1.4em','2em'],\n                        ml:govTokenIndex ? '-10px' : 0,\n                        zIndex:Object.values(this.state[fieldInfo.name]).length-govTokenIndex,\n                        boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                      }\n                    }}\n                  />\n                );\n              })\n            }\n          </Flex>\n        ) : this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps} dangerouslySetInnerHTML={{__html:formattedValue}}></Text>\n        ) : (this.state[fieldInfo.name] === undefined ? loader : null)\n      break;\n    }\n    return output;\n  }\n}\n\nexport default TrancheField;\n","import { Button } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass RoundButton extends Component {\n  render() {\n    const buttonProps = Object.assign({\n      width:1,\n      fontWeight:3,\n      height:'45px',\n      fontSize:[2,3],\n      boxShadow:null,\n      borderRadius:4,\n      mainColor:'blue'\n    },this.props.buttonProps);\n\n    return (\n       <Button\n        {...buttonProps}\n        onClick={this.props.handleClick}\n       >\n        {this.props.children}\n       </Button>\n    );\n  }\n}\n\nexport default RoundButton;\n","import { Link } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass ExtLink extends Component {\n\n  render() {\n    return (\n      <Link\n        color={'link'}\n        target={'_blank'}\n        rel={'nofollow noopener noreferrer'}\n        {...this.props}\n      >\n        {this.props.children}\n      </Link>\n    );\n  }\n}\n\nexport default ExtLink;\n","import {\n  Link as RouterLink,\n} from \"react-router-dom\";\nimport ExtLink from '../ExtLink/ExtLink';\nimport React, { Component } from 'react';\nimport styles from './Footer.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Flex, Text, Heading, Image, Link } from 'rimble-ui';\n\nclass Footer extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount() {\n    this.loadUtils();\n  }\n\n  render() {\n    const currYear = new Date().getFullYear();\n    const governanceEnabled = this.functionsUtil.getGlobalConfig(['governance','enabled']);\n    const columnWidth = governanceEnabled ? 1/4 : 1/3;\n    return (\n      <Flex\n        pl={0}\n        id={\"footer\"}\n        alignItems={'center'}\n        flexDirection={'column'}\n        className={styles.footer}\n        backgroundColor={'white'}\n        justifyContent={'flex-start'}\n      >\n        <Flex\n          width={1}\n          px={[3,6]}\n          justifyContent={'center'}\n        >\n          <Flex\n            width={1}\n            height={['auto','100%']}\n            alignItems={'flex-start'}\n            maxWidth={['35em','70em']}\n            justifyContent={'flex-start'}\n            flexDirection={['column','row']}\n          >\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Resources\n              </Heading.h3>\n              <Flex width={1} flexDirection={'column'}>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://developers.idle.finance'}\n                >\n                  <span role=\"img\" aria-label=\"documentation\">📚</span> Documentation\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://idlelabs.notion.site/Idle-Brand-Assets-fd63e4161cb64c999531646c7549bc4b'}\n                >\n                  <span role=\"img\" aria-label=\"brand-assets\">🎨</span> Brand Assets\n                </ExtLink>\n                <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                  <RouterLink\n                    color={'blue'}\n                    to=\"/terms-of-service\"\n                    className={styles.link}\n                  >\n                    <Text\n                      fontWeight={3}\n                      color={'blue'}\n                      fontSize={[3,2]}\n                      hoverColor={'blue'}\n                      fontFamily={'sansSerif'}\n                      textAlign={['center','left']}\n                    >\n                      <span role=\"img\" aria-label=\"terms-of-service\">📑</span> Terms of Service\n                    </Text>\n                  </RouterLink>\n                </Flex>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749'}\n                >\n                  <span role=\"img\" aria-label=\"privacy-policy\">🕵️‍♂️</span> Privacy Policy\n                </ExtLink>\n                <ExtLink\n                  pb={[3,2]}\n                  color={'blue'}\n                  fontSize={[3,2]}\n                  hoverColor={'blue'}\n                  fontFamily={'sansSerif'}\n                  textAlign={['center','left']}\n                  href={'https://www.iubenda.com/privacy-policy/61211749/cookie-policy'}\n                >\n                  <span role=\"img\" aria-label=\"cookie-policy\">🍪</span> Cookie Policy\n                </ExtLink>\n              </Flex>\n            </Flex>\n            {\n              governanceEnabled && \n                <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n                  <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                    Governance\n                  </Heading.h3>\n                  <Flex width={1} flexDirection={'column'}>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        to={\"/governance\"}\n                        className={styles.link}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-overview\">🏛</span> Overview\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/proposals\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-proposals\">💡</span> Proposals\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <RouterLink\n                        color={'blue'}\n                        className={styles.link}\n                        to={\"/governance/leaderboard\"}\n                      >\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-leaderboard\">📋</span> Leaderboard\n                        </Text>\n                      </RouterLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://gov.idle.finance/\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🤝</span> Forum\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                    <Flex pb={[3,2]} width={1} justifyContent={['center','flex-start']}>\n                      <ExtLink href=\"https://www.notion.so/idlelabs/ffe8115b7b53489ab0a7f84e656e4bb0?v=916250f54ff24daabad72cf095fd6d88\">\n                        <Text textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} fontWeight={3} color={'blue'} hoverColor={'blue'}>\n                          <span role=\"img\" aria-label=\"governance-forum\">🌎</span> Team\n                        </Text>\n                      </ExtLink>\n                    </Flex>\n                  </Flex>\n                </Flex>\n            }\n            <Flex width={[1,columnWidth]} flexDirection={'column'} height={['auto','100%']}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Start a Conversation\n              </Heading.h3>\n              <Link textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,2]} color={'blue'} hoverColor={'blue'}>\n                <span role=\"img\" aria-label=\"email\">✉️</span> info@idle.finance\n              </Link>\n            </Flex>\n            <Flex width={[1,columnWidth]} flexDirection={'column'}>\n              <Heading.h3 textAlign={['center','left']} fontFamily={'sansSerif'} fontSize={[3,3]} my={3} color={'dark-gray'}>\n                Explore\n              </Heading.h3>\n              <Flex flexDirection={'row'} justifyContent={['space-evenly','flex-start']}>\n                <ExtLink href=\"https://twitter.com/idlefinance\">\n                  <Image src=\"images/social/twitter.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://t.me/idlefinance\">\n                  <Image src=\"images/social/telegram.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://discord.gg/mpySAJp\">\n                  <Image src=\"images/social/discord.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://medium.com/@idlefinance\">\n                  <Image src=\"images/social/medium.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://github.com/Idle-Labs/\">\n                  <Image src=\"images/social/github.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://www.linkedin.com/company/idlefinance\">\n                  <Image src=\"images/social/linkedin.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n                <ExtLink href=\"https://defipulse.com/defi-list\">\n                  <Image src=\"images/social/defi-pulse.png\" height={'2.4em'} mr={['auto',3]} my={[2,0]} boxShadow={1} borderRadius={'7px'} />\n                </ExtLink>\n              </Flex>\n            </Flex>\n          </Flex>\n        </Flex>\n        <Flex\n          width={1}\n          height={['auto','100%']}\n          flexDirection={'column'}\n          alignItems={['center','flex-end']}\n          justifyContent={['center','flex-end']}\n        >\n          <Flex\n            p={2}\n            width={1}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={'dark-blue'}\n            flexDirection={['column','row']}\n          >\n            <Text\n              color={'white'}\n              textAlign={['center','flex-end']}\n            >\n              &copy; {currYear} - Idle Labs Inc.\n            </Text>\n            <RouterLink\n              color={'blue'}\n              to={'/terms-of-service'}\n              style={{textDecoration:'none'}}\n            >\n              <Text\n                pl={2}\n                color={'#0df'}\n                textAlign={['center','flex-end']}\n              >\n                Terms of Service\n              </Text>\n            </RouterLink>\n          </Flex>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport styles from './TableCellHeader.module.scss';\nimport { Flex, Heading, Icon, Link, Tooltip } from \"rimble-ui\";\n\nclass TableCellHeader extends Component {\n  render() {\n\n    const ColTitle = (props) => (\n      <Heading.h4\n        fontWeight={[3,4]}\n        color={'cellTitle'}\n        style={{\n          width:'100%',\n          whiteSpace:'nowrap'\n        }}\n        fontSize={['10px',3]}\n        lineHeight={'initial'}\n        {...props}\n        {...props.colsProps}\n      >\n        {props.children}\n      </Heading.h4>\n    );\n\n    return (\n      <Flex\n        width={this.props.width}\n      >\n        {\n          (this.props.desc && this.props.desc.length>1) ? (\n            <Flex\n              alignItems={'center'}\n            >\n              <ColTitle\n                {...this.props}\n              />\n              <Link\n                style={{\n                  cursor:'pointer'\n                }}\n                onClick={ e => this.props.openTooltipModal(this.props.title,this.props.desc) }\n              >\n                <Tooltip\n                  placement={'top'}\n                  message={'Click to read the description'}\n                >\n                  <Icon\n                    ml={1}\n                    name={\"Info\"}\n                    color={'cellTitle'}\n                    className={styles.tooltip}\n                    size={ this.props.isMobile ? '1em' : '1.2em'}\n                  />\n                </Tooltip>\n              </Link>\n            </Flex>\n          ) : (\n            <ColTitle\n              {...this.props}\n            />\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default TableCellHeader;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass CustomTooltip extends Component {\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default CustomTooltip;","import React, { Component } from 'react';\nimport { Flex, Box, Text } from \"rimble-ui\";\n\nclass CustomTooltipRow extends Component {\n\n  render() {\n    return (\n      <Flex\n        mb={2}\n        width={1}\n        alignItems={'center'}\n        flexDirection={'row'}\n      >\n        <Flex\n          pr={2}\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-start'}\n        > \n          {\n            this.props.color && \n            <Box\n              mr={2}\n              width={'10px'}\n              height={'10px'}\n              borderRadius={'50%'}\n              backgroundColor={this.props.color}\n            >\n            </Box>\n          }\n          <Text\n            fontSize={1}\n            fontWeight={2}\n            textAlign={'left'}\n            color={'dark-gray'}\n            style={{\n              whiteSpace:'nowrap',\n              textTransform:'capitalize'\n            }}\n          >\n            {this.props.label}\n          </Text>\n        </Flex>\n        <Flex\n          style={{\n            flexBasis:'0',\n            flex:'1 1 0px'\n          }}\n          alignItems={'center'}\n          justifyContent={'flex-end'}\n        >\n          <Text\n            fontSize={1}\n            fontWeight={3}\n            color={'cellText'}\n            textAlign={'right'}\n            style={{\n              whiteSpace:'nowrap'\n            }}\n            dangerouslySetInnerHTML={{\n              __html: this.props.value\n            }}\n          >\n          </Text>\n        </Flex>\n      </Flex>\n    );\n  }\n}\n\nexport default CustomTooltipRow;","import { Heading } from \"rimble-ui\";\nimport React, { Component } from 'react';\n\nclass Title extends Component {\n  render() {\n    const props = {\n      fontWeight:4,\n      fontSize:[4,6],\n      color:'copyColor',\n      textAlign:'center',\n      lineHeight:'initial',\n    };\n\n    // Replace props\n    if (this.props && Object.keys(this.props).length){\n      Object.keys(this.props).forEach(p => {\n        props[p] = this.props[p];\n      });\n    }\n\n    const HeadingComponent = this.props.component ? this.props.component : Heading.h1;\n\n    return (\n      <HeadingComponent\n        {...props}\n      >\n        {this.props.children}\n      </HeadingComponent>\n    );\n  }\n}\n\nexport default Title;\n","import { Flex, Text } from \"rimble-ui\";\nimport React, { Component } from 'react';\nimport DashboardCard from '../DashboardCard/DashboardCard';\n\nclass ChartCustomTooltip extends Component {\n\n  async componentWillMount(){\n\n  }\n\n  async componentDidUpdate(prevProps,prevState){\n    \n  }\n\n  render() {\n    return (\n      <DashboardCard\n        key={this.props.point.id}\n        cardProps={{\n          py:2,\n          px:3,\n          width:1,\n          left: this.props.point.data.itemPos && this.props.point.data.itemPos>50 ? '-110%' : '0'\n        }}\n      >\n        <Flex\n          width={1}\n          flexDirection={'column'}\n        >\n          {\n            this.props.point.data.xFormatted && \n              <Text\n                mb={2}\n                fontSize={1}\n                fontWeight={3}\n                color={'cellText'}\n                textAlign={'left'}\n              >\n                {this.props.point.data.xFormatted}\n              </Text>\n          }\n          {this.props.children}\n        </Flex>\n      </DashboardCard>\n    );\n  }\n}\n\nexport default ChartCustomTooltip;\n","import React, { Component } from 'react';\nimport TableRow from '../TableRow/TableRow';\nimport { Flex, Link, Icon, Text } from \"rimble-ui\";\nimport CustomField from '../CustomField/CustomField';\nimport TableHeader from '../TableHeader/TableHeader';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass CustomList extends Component {\n\n  state = {\n    page:1,\n    rowsPerPage:5,\n    totalPages:null,\n    processedRows:null\n  };\n\n  // Utils\n  functionsUtil = null;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n    this.processRows();\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const rowsChanged = JSON.stringify(prevProps.rows) !== JSON.stringify(this.props.rows);\n\n    if (rowsChanged){\n      this.setState({\n        page:1,\n      },()=>{\n        this.processRows();\n      })\n      return false;\n    }\n    const pageChanged = prevState.page !== this.state.page;\n    if (pageChanged){\n      this.processRows();\n    }\n  }\n\n  processRows = (page=null) => {\n    page = page ? page : this.state.page;\n\n    const totalRows = this.props.rows.length;\n    const totalPages = Math.ceil(totalRows/this.state.rowsPerPage);\n    \n    let processedRows = [];\n    if (this.props.paginationEnabled){\n      this.props.rows.forEach((row, i) => {\n        if (i>=((page-1)*this.state.rowsPerPage) && i<((page-1)*this.state.rowsPerPage)+this.state.rowsPerPage) {\n          processedRows.push(row);\n        }\n      });\n    } else {\n      processedRows = this.props.rows;\n    }\n\n    this.setState({\n      totalPages,\n      processedRows\n    });\n  }\n\n  prevPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.max(1,this.state.page-1);\n    this.setState({\n      page\n    });\n  }\n\n  nextPage(e){\n    if (e){\n      e.preventDefault();\n    }\n    const page = Math.min(this.state.totalPages,this.state.page+1);this.processRows(page);\n    this.setState({\n      page\n    });\n  }\n\n  render() {\n\n    return (\n      <Flex id=\"custom-list-container\" width={1} flexDirection={'column'}>\n        <TableHeader\n          {...this.props}\n          cols={this.props.cols}\n          isMobile={this.props.isMobile}\n        />\n        <Flex id=\"custom-list\" flexDirection={'column'}>\n          {\n            this.state.processedRows.map( (row,rowIndex) => {\n              return (\n                <TableRow\n                  row={row}\n                  {...this.props}\n                  key={`asset-${rowIndex}`}\n                  fieldComponent={CustomField}\n                  rowId={`asset-col-${rowIndex}`}\n                  cardId={`asset-card-${rowIndex}`}\n                />\n              );\n            })\n          }\n        </Flex>\n        {\n          this.props.paginationEnabled && (\n            <Flex\n              height={'50px'}\n              alignItems={'center'}\n              flexDirection={'row'}\n              justifyContent={'flex-end'}\n              id={'transactions-list-pagination'}\n            >\n              <Flex mr={3}>\n                <Link mr={1} onClick={ e => this.prevPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowLeft'}\n                    size={'2em'}\n                    color={ this.state.page>1 ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n                <Link onClick={ e => this.nextPage(e) }>\n                  <Icon\n                    name={'KeyboardArrowRight'}\n                    size={'2em'}\n                    color={ this.state.page<this.state.totalPages ? 'arrowActive' : 'arrowInactive' }\n                  />\n                </Link>\n              </Flex>\n              <Flex alignItems={'center'}>\n                <Text \n                  fontSize={1}\n                  fontWeight={3}\n                  color={'cellText'}\n                >\n                  Page {this.state.page} of {this.state.totalPages}\n                </Text>\n              </Flex>\n            </Flex>\n          )\n        }\n      </Flex>\n    );\n  }\n}\n\nexport default CustomList;","import React, { Component } from 'react';\nimport {\n  Button,\n  Flex,\n  Box,\n  Text\n} from \"rimble-ui\";\nimport styles from './TwitterShareButton.module.scss';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\n\nclass TwitterShareButton extends Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  share = () => {\n    // Send Google Analytics event\n    this.functionsUtil.sendGoogleAnalyticsEvent({\n      eventCategory: 'Share',\n      eventAction: 'twitter',\n      eventLabel: this.props.parent\n    });\n\n    const w = Math.min(window.innerWidth,600);\n    const h = 350;\n    const x = (window.innerWidth-w)/2;\n    const y = 150;\n    window.open(`https://twitter.com/intent/tweet?text=${this.props.tweet}`,\"_blank\",`toolbar=yes,scrollbars=no,resizable=no,top=${y},left=${x},width=${w},height=${h}`);\n  }\n\n  render() {\n    return (\n        <Button\n          borderRadius={1}\n          mainColor={'#2aa6f2'}\n          contrastColor={'white'}\n          onClick={ e => { this.share() } }\n        >\n          <Flex flexDirection={'row'} alignItems={'center'} justifyContent={'center'}>\n            <Box className={styles.twitterIcon} />\n            <Text color={'white'} fontWeight={3} ml={2}>{ this.props.text ? this.props.text : 'Tweet' }</Text>\n          </Flex>\n        </Button>\n    );\n  }\n}\n\nexport default TwitterShareButton;\n","import React from \"react\";\nimport {\n  Text,\n  Modal,\n  Link,\n  Flex\n} from \"rimble-ui\";\nimport ModalCard from './ModalCard';\nimport TwitterShareButton from '../../TwitterShareButton/TwitterShareButton.js';\nimport Confetti from 'react-confetti/dist/react-confetti';\nimport FunctionsUtil from '../../utilities/FunctionsUtil';\n\nclass ShareModal extends React.Component {\n\n  // Utils\n  functionsUtil = null;\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  componentWillMount() {\n    this.loadUtils();\n  }\n\n  componentDidMount() {\n    this.loadUtils();\n  }\n\n  componentDidUpdate() {\n    this.loadUtils();\n  }\n\n  closeModal = async (action) => {\n    const globalConfigs = this.functionsUtil.getGlobalConfigs();\n    // Send Google Analytics event\n    if (globalConfigs.analytics.google.events.enabled){\n      await this.functionsUtil.sendGoogleAnalyticsEvent({\n        eventCategory: 'Share',\n        eventAction: action,\n        eventLabel: 'ShareModal'\n      });\n      this.props.closeModal();\n    } else {\n      this.props.closeModal();\n    }\n  }\n\n  render() {\n    const tweet = window.escape(this.props.tweet);\n    const customText = {__html: this.props.text};\n    return (\n      <Modal isOpen={this.props.isOpen}>\n        <ModalCard closeFunc={this.props.closeModal}>\n          {\n            this.props.confettiEnabled &&\n            <Confetti\n              style={{ position: 'fixed','zIndex':9999 }}\n              run={true}\n              recycle={true}\n              width={window.innerWidth}\n              height={window.innerHeight}\n            />\n          }\n          <ModalCard.Header title={this.props.title} icon={this.props.icon}></ModalCard.Header>\n          <ModalCard.Body>\n            <Flex my={3} width={1} flexDirection={'column'} mx={'auto'}>\n              <Text color={'dark-gray'} textAlign={'center'} fontSize={3} mb={2} dangerouslySetInnerHTML={customText}></Text>\n            </Flex>\n            <Flex mb={3} flexDirection={'column'} alignItems={'center'} justifyContent={'center'}>\n              <TwitterShareButton tweet={tweet} text={'Share now'} parent={'ShareModal'} />\n              <Link mt={2} onClick={ e => this.closeModal('continue_without_sharing') } hoverColor={'blue'}>continue without sharing</Link>\n            </Flex>\n          </ModalCard.Body>\n        </ModalCard>\n      </Modal>\n    );\n  }\n}\n\nexport default ShareModal;","import React, { Component } from 'react';\nimport AssetField from '../AssetField/AssetField';\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport { Text, Icon, Image, Button, Link, Flex, Loader } from \"rimble-ui\";\n\nclass CustomField extends Component {\n\n  state = {};\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    \n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText'\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    let output = null;\n    let CustomComponent = null;\n    let componentHasChildren = false;\n    const fieldType = fieldInfo.type;\n    const fieldPath = fieldInfo.path;\n    const showLoader = !!fieldInfo.showLoader;\n    let customValue = fieldPath ? this.functionsUtil.getArrayPath(fieldPath,this.props.row) : null;\n\n    // Add custom field extra props\n    if (fieldPath){\n      const customFieldName = Object.values(fieldPath).pop();\n      if (this.props.row[`${customFieldName}Props`]){\n        const customFieldProps = this.props.row[`${customFieldName}Props`];\n        // Replace props\n        if (customFieldProps && Object.keys(customFieldProps).length){\n          Object.keys(customFieldProps).forEach(p => {\n            fieldProps[p] = customFieldProps[p];\n          });\n        }\n      }\n    }\n\n    switch (fieldType){\n      case 'image':\n        CustomComponent = Image;\n        fieldProps.src = customValue;\n      break;\n      case 'number':\n        customValue = customValue ? this.functionsUtil.BNify(customValue).toString() : null;\n        CustomComponent = SmartNumber;\n        fieldProps.number = customValue;\n      break;\n      case 'link':\n        CustomComponent = Link;\n      break;\n      case 'icon':\n        CustomComponent = Icon;\n        fieldProps.name = customValue;\n      break;\n      case 'bgIcon':\n        CustomComponent = (props) => (\n          <Flex\n            p={'5px'}\n            borderRadius={'50%'}\n            alignItems={'center'}\n            justifyContent={'center'}\n            backgroundColor={props.bgColor}\n          >\n            <Icon\n              align={'center'}\n              name={customValue}\n              color={props.color}\n              size={this.props.isMobile ? '1em' : '1.4em'}\n            />\n          </Flex>\n        );\n        fieldProps.name = customValue;\n      break;\n      case 'button':\n        CustomComponent = Button;\n        componentHasChildren = true;\n        customValue = fieldInfo.label || fieldProps.label;\n        fieldProps.onClick=() => fieldProps.handleClick(this.props)\n      break;\n      case 'html':\n        output = (<Text {...fieldProps} dangerouslySetInnerHTML={{\n          __html: customValue\n        }} />);\n      break;\n      case 'tokensList':\n        output = customValue && Object.keys(customValue).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n            {...fieldInfo.parentProps}\n          >\n            {\n              Object.keys(customValue).map( (token,tokenIndex) => {\n                const tokenConfig = customValue[token];\n                return (\n                  <AssetField\n                    token={token}\n                    tokenConfig={tokenConfig}\n                    key={`asset_${tokenIndex}`}\n                    fieldInfo={{\n                      name:'iconTooltip',\n                      tooltipProps:{\n                        message:`${token}`\n                      },\n                      props:{\n                        borderRadius:'50%',\n                        position:'relative',\n                        height:['1.4em','2em'],\n                        ml:tokenIndex ? '-10px' : 0,\n                        zIndex:Object.values(customValue).length-tokenIndex,\n                        boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                      }\n                    }}\n                  />\n                );\n              })\n            }\n          </Flex>\n        ) : null;\n      break;\n      default:\n        CustomComponent = Text;\n        componentHasChildren = true;\n      break;\n    }\n\n    if (!customValue && showLoader){\n      return (<Loader size=\"20px\" />);\n    }\n\n    return CustomComponent ? (componentHasChildren ? (<CustomComponent {...fieldProps}>{customValue}</CustomComponent>) : (<CustomComponent {...fieldProps} />) ) : output;\n  }\n}\n\nexport default CustomField;","import { Line } from '@nivo/line';\nimport CountUp from 'react-countup';\nimport React, { Component } from 'react';\nimport { linearGradientDef } from '@nivo/core'\nimport SmartNumber from '../SmartNumber/SmartNumber';\nimport FunctionsUtil from '../utilities/FunctionsUtil';\nimport GenericChart from '../GenericChart/GenericChart';\nimport CustomTooltip from '../CustomTooltip/CustomTooltip';\nimport VariationNumber from '../VariationNumber/VariationNumber';\nimport AllocationChart from '../AllocationChart/AllocationChart';\nimport CustomTooltipRow from '../CustomTooltip/CustomTooltipRow';\nimport { Image, Text, Loader, Button, Tooltip, Icon, Flex, Link } from \"rimble-ui\";\n\nclass AssetField extends Component {\n\n  state = {\n    ready:false\n  };\n\n  // Utils\n  functionsUtil = null;\n  componentUnmounted = false;\n\n  loadUtils(){\n    if (this.functionsUtil){\n      this.functionsUtil.setProps(this.props);\n    } else {\n      this.functionsUtil = new FunctionsUtil(this.props);\n    }\n  }\n\n  async componentWillUnmount(){\n    this.componentUnmounted = true;\n  }\n\n  async componentWillMount(){\n    this.loadUtils();\n  }\n\n  async componentDidMount(){\n    this.loadField();\n  }\n\n  async setStateSafe(newState,callback=null) {\n    if (!this.componentUnmounted){\n      return this.setState(newState,callback);\n    }\n    return null;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    this.loadUtils();\n\n    const tokenChanged = prevProps.token !== this.props.token;\n    const accountChanged = prevProps.account !== this.props.account;\n    const mobileChanged = prevProps.isMobile !== this.props.isMobile;\n    const themeModeChanged = prevProps.themeMode !== this.props.themeMode;\n    const fieldChanged = prevProps.fieldInfo.name !== this.props.fieldInfo.name;\n    const contractsInitialized = !prevProps.contractsInitialized && this.props.contractsInitialized;\n    const requiredNetworkChanged = (!prevProps.network && this.props.network) || (prevProps.network && this.props.network && JSON.stringify(prevProps.network.required) !== JSON.stringify(this.props.network.required));\n    const transactionsChanged = prevProps.transactions && this.props.transactions && Object.values(prevProps.transactions).filter(tx => (tx.status==='success')).length !== Object.values(this.props.transactions).filter(tx => (tx.status==='success')).length;\n\n    if (fieldChanged || tokenChanged || accountChanged || transactionsChanged || contractsInitialized || requiredNetworkChanged){\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.loadField();\n      });\n    } else if (mobileChanged || themeModeChanged){\n      const oldState = Object.assign({},this.state);\n      this.setStateSafe({\n        ready:false\n      },() => {\n        this.setState(oldState);\n      });\n    }\n  }\n\n  loadField = async(fieldName=null) => {\n    // Exit if component unmounted\n    // console.log('loadField',this.props.fieldInfo.name,this.props.account,this.props.token,this.props.tokenConfig);\n\n    if (this.componentUnmounted || !this.props.token || !this.props.tokenConfig || !this.props.contractsInitialized){\n      return null;\n    }\n\n    const isRisk = this.props.selectedStrategy === 'risk';\n\n    const setState = fieldName === null;\n    const fieldInfo = this.props.fieldInfo;\n    if (!fieldName){\n      fieldName = fieldInfo.name;\n    }\n\n    const fieldProps = fieldInfo.props;\n    const addGovTokens = typeof this.props.addGovTokens !== 'undefined' ? this.props.addGovTokens : true;\n    // const addCurveApy = typeof this.props.addCurveApy !== 'undefined' ? this.props.addCurveApy : false;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const tokenConfigStats = this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]);\n\n    let output = null;\n    if (this.props.token){\n      switch (fieldName){\n        case 'tokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              tokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'govTokens':\n          const govTokens = this.functionsUtil.getTokenGovTokens(this.props.tokenConfig);\n          const getGovTokensDistributionSpeed = await this.functionsUtil.getGovTokensDistributionSpeed(this.props.tokenConfig);\n          this.setStateSafe({\n            govTokens,\n            getGovTokensDistributionSpeed\n          });\n        break;\n        case 'tokenPrice':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenPrice = '-';\n            if (typeof this.props.tokenConfig.showPrice === 'undefined' || this.props.tokenConfig.showPrice){\n              tokenPrice = output.toString();\n            }\n            this.setStateSafe({\n              tokenPrice\n            });\n          }\n        break;\n        case 'fee':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              fee:output.toString()\n            });\n          }\n        break;\n        case 'amountToMigrate':\n          const {\n            oldContractBalanceFormatted\n          } = await this.functionsUtil.checkMigration(this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (setState && oldContractBalanceFormatted){\n            this.setStateSafe({\n              amountToMigrate:oldContractBalanceFormatted.toString()\n            });\n            output = oldContractBalanceFormatted;\n          }\n        break;\n        case 'amountLent':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              amountLent:output.toString()\n            });\n          }\n        break;\n        case 'idleTokenBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              idleTokenBalance:output.toString()\n            });\n          }\n        break;\n        case 'redeemableBalanceCounterCurve':\n          const {\n            redeemableBalanceCurveEnd,\n            redeemableBalanceCurveStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceCurveStart && redeemableBalanceCurveEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceCurveEnd,\n                redeemableBalanceCurveStart\n              });\n            }\n\n            output = {\n              redeemableBalanceCurveEnd,\n              redeemableBalanceCurveStart\n            };\n          }\n        break;\n        case 'redeemableBalanceCounter':\n          const {\n            redeemableBalanceEnd,\n            redeemableBalanceStart\n          } = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n\n          if (redeemableBalanceStart && redeemableBalanceEnd){\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                redeemableBalanceEnd,\n                redeemableBalanceStart\n              });\n            }\n\n            output = {\n              redeemableBalanceEnd,\n              redeemableBalanceStart\n            };\n          }\n        break;\n        case 'earnings':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earnings:output.toString()\n            });\n          }\n        break;\n        case 'feesCounter':\n          const [earningsCounter,feePercentage] = await Promise.all([\n            this.loadField('earningsCounter'),\n            this.functionsUtil.getTokenFees(this.props.tokenConfig)\n          ]);\n\n          if (earningsCounter && earningsCounter.earningsStart && earningsCounter.earningsEnd && feePercentage){\n\n            const feesStart = earningsCounter.earningsStart.times(feePercentage);\n            const feesEnd = earningsCounter.earningsEnd.times(feePercentage);\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                feesEnd,\n                feesStart\n              });\n            }\n\n            output = {\n              feesEnd,\n              feesStart\n            };\n          }\n        break;\n        case 'earningsCounterCurve':\n          const [curveApy,earningsCurveStart,amountLentCurve] = await Promise.all([\n            this.functionsUtil.getCurveAPY(),\n            this.functionsUtil.loadAssetField('earningsCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLentCurve',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n          if (amountLentCurve && earningsCurveStart && curveApy){\n            const earningsCurveEnd = amountLentCurve.gt(0) ? amountLentCurve.times(curveApy.div(100)).plus(earningsCurveStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsCurveEnd,\n                earningsCurveStart\n              });\n            }\n\n            output = {\n              earningsCurveEnd,\n              earningsCurveStart\n            };\n          }\n        break;\n        case 'earningsCounter':\n          let [tokenAPY2,earningsStart,amountLent2] = await Promise.all([\n            this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('earnings',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens),\n            this.functionsUtil.loadAssetField('amountLent',this.props.token,this.props.tokenConfig,this.props.account,addGovTokens)\n          ]);\n\n\n          if (amountLent2 && earningsStart && tokenAPY2){\n            const earningsEnd = amountLent2.gt(0) ? amountLent2.times(tokenAPY2.div(100)).plus(earningsStart) : 0;\n\n            if (setState){\n              this.setStateSafe({\n                ready:true,\n                earningsEnd,\n                earningsStart\n              });\n            }\n\n            output = {\n              earningsEnd,\n              earningsStart\n            };\n          }\n        break;\n        case 'redeemableBalance':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              redeemableBalance:output.toString()\n            });\n          }\n        break;\n        case 'score':\n          const tokenScore = await this.functionsUtil.getTokenScore(this.props.tokenConfig,isRisk);\n          if (setState){\n            this.setStateSafe({\n              score:tokenScore ? tokenScore : false\n            });\n          }\n          output = tokenScore;\n        break;\n        case 'pool':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              poolSize:output.toString()\n            });\n          }\n        break;\n        case 'earningsPercCurve':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPercCurveDirection:parseFloat(output)>0 ? 'up' : 'down',\n              earningsPercCurve:parseFloat(output).toFixed(decimals)\n            });\n          }\n        break;\n        case 'earningsPerc':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              earningsPerc:parseFloat(output).toFixed(decimals),\n              earningsPercDirection:parseFloat(output)>0 ? 'up' : 'down'\n            });\n          }\n        break;\n        case 'apr':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            let tokenAPR = '-';\n            if (typeof this.props.tokenConfig.showAPR === 'undefined' || this.props.tokenConfig.showAPR){\n              tokenAPR = parseFloat(output).toFixed(decimals);\n            }\n            this.setStateSafe({\n              tokenAPR\n            });\n          }\n        break;\n        case 'oldApy':\n          if (this.props.tokenConfig.migration && this.props.tokenConfig.migration.oldContract){\n            const oldTokenConfig = Object.assign({},this.props.tokenConfig);\n            oldTokenConfig.idle = Object.assign({},this.props.tokenConfig.migration.oldContract);\n            oldTokenConfig.protocols = Object.values(this.props.tokenConfig.protocols);\n\n            // Override token with name\n            oldTokenConfig.idle.token = oldTokenConfig.idle.name;\n\n            // Replace protocols with old protocols\n            if (oldTokenConfig.migration.oldProtocols){\n              oldTokenConfig.migration.oldProtocols.forEach( oldProtocol => {\n                const foundProtocol = oldTokenConfig.protocols.find( p => (p.name === oldProtocol.name) );\n                if (foundProtocol){\n                  const protocolPos = oldTokenConfig.protocols.indexOf(foundProtocol);\n                  oldTokenConfig.protocols[protocolPos] = oldProtocol;\n                }\n              });\n            }\n\n            output = await this.functionsUtil.loadAssetField('apy',this.props.token,oldTokenConfig,this.props.account,false);\n\n          } else {\n            output = await this.loadField('apyNoGov');\n          }\n\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                oldAPY:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                oldAPY:false\n              });\n            }\n          }\n        break;\n        case 'apyNoGov':\n          output = await this.functionsUtil.loadAssetField('apy',this.props.token,this.props.tokenConfig,this.props.account,false);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                tokenAPYNoGov:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPYNoGov:false\n              });\n            }\n          }\n        break;\n        case 'curveApy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveApy:parseFloat(output).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveApy:false\n              });\n            }\n          }\n        break;\n        case 'curveAvgSlippage':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              this.setStateSafe({\n                curveAvgSlippage:(parseFloat(output)*100).toFixed(decimals)\n              });\n            } else {\n              this.setStateSafe({\n                curveAvgSlippage:false\n              });\n            }\n          }\n        break;\n\n        case 'apy':\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          // console.log(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens,output);\n          // debugger;\n          if (output && setState){\n            if (!output.isNaN()){\n              const tokenAPY = parseFloat(output).toFixed(decimals);\n              const showTooltip = !this.props.isMobile && (fieldInfo.showTooltip !== undefined && fieldInfo.showTooltip);\n              const govTokensAprs = showTooltip ? await this.functionsUtil.getGovTokensAprs(this.props.token,this.props.tokenConfig) : null;\n              this.setStateSafe({\n                tokenAPY,\n                govTokensAprs\n              });\n            } else {\n              this.setStateSafe({\n                tokenAPY:false\n              });\n            }\n          }\n        break;\n        case 'allocationChart':\n          let allocationChartWidth = 0;\n          let allocationChartHeight = 0;\n\n          const resizeAllocationChart = () => {\n            const allocationChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (allocationChartRowElement){\n              const $allocationChartRowElement = window.jQuery(allocationChartRowElement);\n              allocationChartWidth = $allocationChartRowElement.innerWidth()-parseFloat($allocationChartRowElement.css('padding-right'))-parseFloat($allocationChartRowElement.css('padding-left'));\n              allocationChartHeight = $allocationChartRowElement.innerHeight();\n\n              // Make it a square\n              allocationChartWidth = parseInt(allocationChartWidth)>0 ? Math.min(allocationChartWidth,allocationChartHeight) : allocationChartHeight;\n              allocationChartHeight = allocationChartWidth;\n\n\n              if (allocationChartWidth !== this.state.allocationChartWidth){\n                if (setState){\n                  this.setStateSafe({\n                    allocationChartWidth,\n                    allocationChartHeight\n                  });\n                }\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAllocationChart();\n          window.removeEventListener('resize', resizeAllocationChart.bind(this));\n          window.addEventListener('resize', resizeAllocationChart.bind(this));\n\n          if (setState){\n            this.setStateSafe({\n              allocationChartWidth,\n              allocationChartHeight\n            });\n          }\n        break;\n        case 'aprChart':\n          // Set start timestamp for v3 tokens\n          const aprChartEndTimestamp = isRisk ? this.functionsUtil.getGlobalConfig(['stats','versions','v3','endTimestamp']) : null;\n          const aprChartStartTimestamp = isRisk ? aprChartEndTimestamp-(7*24*60*60) : Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).format('DD/MM/YYYY 00:00:00'),'DD/MM/YYYY HH:mm:ss').subtract(7,'days')._d.getTime()/1000));\n\n          // Check for cached data\n          let aprChartData = null;\n          const cachedDataKey = `aprChart_${this.props.tokenConfig.address}_${isRisk}`;\n          const cachedData = this.functionsUtil.getCachedData(cachedDataKey);\n\n          aprChartData = [{\n            id:this.props.token,\n            color: this.props.color ? this.props.color : 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: []\n          }];\n\n          if (cachedData !== null && cachedData[0] && cachedData[0].data && cachedData[0].data.length>0){\n            aprChartData = cachedData;\n          } else {\n\n            // FAKE CHART DATA\n            if (this.props.token === 'COMP'){\n              aprChartData[0].data = [];\n              const startTimestamp = new Date().getTime();\n              let y = 20;\n              for (var i=0; i<=16; i++) {\n                const mDate = this.functionsUtil.strToMoment(startTimestamp).add(i,'day');\n                const x = mDate.format(\"YYYY/MM/DD HH:mm\");\n                // Grow\n                if ((i>=5 && i<=10) || (i>=13)){\n                  y+=Math.random()*4+2; // Risk\n                  // y+=Math.random()*7+4; // Best\n                // Decrease\n                } else {\n                  y-=Math.random()*3+1; // Risk\n                  // y-=Math.random()*3+1; // Best\n                }\n                aprChartData[0].data.push({x,y});\n              }\n            } else {\n              const frequencySeconds = this.functionsUtil.getFrequencySeconds('hour',12);\n\n              // console.log('apiResultsAprChart',this.props.tokenConfig.token,this.props.tokenConfig.address,this.props.network.required);\n\n              const apiResultsAprChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,aprChartStartTimestamp,aprChartEndTimestamp,false,frequencySeconds);\n\n              let itemIndex = 0;\n              const totalItems = apiResultsAprChart.length;\n\n              apiResultsAprChart.forEach((d,i) => {\n                const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n                const y = parseFloat(this.functionsUtil.fixTokenDecimals(d.idleRate,18));\n                const itemPos = Math.floor(itemIndex++/totalItems*100);\n                aprChartData[0].data.push({ x, y, itemPos });\n              });\n            }\n\n            if (aprChartData[0].data.length>0){\n              this.functionsUtil.setCachedData(cachedDataKey,aprChartData);\n            }\n          }\n\n          // Add same value\n          if (aprChartData[0].data.length === 1){\n            const newPoint = Object.assign({},aprChartData[0].data[0]);\n            newPoint.x = this.functionsUtil.strToMoment(newPoint,\"YYYY/MM/DD HH:mm\").add(1,'hours').format(\"YYYY/MM/DD HH:mm\")\n            aprChartData[0].data.push(newPoint);\n          }\n\n          let aprChartWidth = 0;\n          let aprChartHeight = 0;\n\n          const resizeAprChart = () => {\n            const aprChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (aprChartRowElement){\n              const $aprChartRowElement = window.jQuery(aprChartRowElement);\n              aprChartWidth = $aprChartRowElement.innerWidth()-parseFloat($aprChartRowElement.css('padding-right'))-parseFloat($aprChartRowElement.css('padding-left'));\n              aprChartHeight = $aprChartRowElement.innerHeight();\n              if (aprChartWidth !== this.state.aprChartWidth || !this.state.aprChartHeight){\n                this.setStateSafe({\n                  aprChartWidth,\n                  aprChartHeight: this.state.aprChartHeight ? this.state.aprChartHeight : aprChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizeAprChart();\n          window.removeEventListener('resize', resizeAprChart.bind(this));\n          window.addEventListener('resize', resizeAprChart.bind(this));\n\n          // Set chart type\n          const aprChartType = Line;\n\n          const aprChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            axisLeft:null,\n            animate:false,\n            axisBottom:null,\n            enableArea:true,\n            areaOpacity:0.1,\n            curve:'monotoneX',\n            enableGridX:false,\n            enableGridY:false,\n            pointBorderWidth:2,\n            isInteractive:true,\n            colors:d => d.color,\n            defs:[\n              linearGradientDef('gradientArea', [\n                  { offset: 0, color: '#faf047' },\n                  { offset: 50, color: '#e4b400' },\n              ])\n            ],\n            enableSlices:this.props.isMobile ? false : 'x',\n            yFormat:value => parseFloat(value).toFixed(2)+'%',\n            fill:[\n              { match: { id: this.props.token } , id: 'gradientArea' },\n            ],\n            margin: { top: 10, right: 0, bottom: 0, left: 0 },\n            sliceTooltip:(slideData) => {\n              const { slice } = slideData;\n              const point = slice.points[0];\n              return (\n                <CustomTooltip\n                  point={point}\n                >\n                  {\n                  typeof slice.points === 'object' && slice.points.length &&\n                    slice.points.map(point => {\n                      const protocolName = point.serieId;\n                      const protocolEarning = point.data.yFormatted;\n                      // const protocolApy = point.data.apy;\n                      return (\n                        <CustomTooltipRow\n                          key={point.id}\n                          color={point.color}\n                          label={protocolName}\n                          value={protocolEarning}\n                        />\n                      );\n                    })\n                  }\n                </CustomTooltip>\n              );\n            }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                aprChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              aprChartType,\n              aprChartData,\n              aprChartProps,\n              aprChartWidth,\n              aprChartHeight\n            });\n          }\n          output = aprChartData;\n        break;\n        case 'performanceChart':\n          let firstTokenPrice = null;\n          let firstIdleBlock = null;\n          /*\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const performanceChartRowElement = document.getElementById(this.props.rowId) ? document.getElementById(this.props.rowId) : document.getElementById(this.props.parentId);\n          if (performanceChartRowElement){\n            performanceChartWidth = parseFloat(performanceChartRowElement.offsetWidth)>0 ? performanceChartRowElement.offsetWidth* (this.props.colProps ? this.props.colProps.width : 1) : 0;\n            performanceChartHeight = parseFloat(performanceChartRowElement.offsetHeight);\n          }\n          */\n\n          let performanceChartWidth = 0;\n          let performanceChartHeight = 0;\n\n          const resizePerformanceChart = () => {\n            const PerformanceChartRowElement = document.getElementById(this.props.parentId) ? document.getElementById(this.props.parentId) : document.getElementById(this.props.rowId);\n            if (PerformanceChartRowElement){\n              const $PerformanceChartRowElement = window.jQuery(PerformanceChartRowElement);\n              performanceChartWidth = $PerformanceChartRowElement.innerWidth()-parseFloat($PerformanceChartRowElement.css('padding-right'))-parseFloat($PerformanceChartRowElement.css('padding-left'));\n              performanceChartHeight = $PerformanceChartRowElement.innerHeight();\n              if (performanceChartWidth !== this.state.performanceChartWidth || !this.state.performanceChartHeight){\n                this.setStateSafe({\n                  performanceChartWidth,\n                  performanceChartHeight: this.state.performanceChartHeight ? this.state.performanceChartHeight : performanceChartHeight\n                });\n              }\n            }\n          }\n\n          // Set chart width and Height and set listener\n          resizePerformanceChart();\n          window.removeEventListener('resize', resizePerformanceChart.bind(this));\n          window.addEventListener('resize', resizePerformanceChart.bind(this));\n\n          const apr_end_date = this.functionsUtil.strToMoment(this.functionsUtil.strToMoment(new Date()).subtract(1,'day').format('YYYY-MM-DD 23:59'),'YYYY-MM-DD HH:mm');\n          const apr_start_date = apr_end_date.clone().subtract(1,'week');\n\n          // Set start timestamp for v3 tokens\n          const apr_start_timestamp =  Math.max(this.functionsUtil.getGlobalConfig(['stats','versions','v3','startTimestamp']),parseInt(apr_start_date._d.getTime()/1000));\n          // const apr_end_timestamp = parseInt(apr_end_date._d.getTime()/1000);\n\n          let apiResultsPerformanceChart = await this.functionsUtil.getTokenApiData(this.props.tokenConfig.address,isRisk,apr_start_timestamp,null,false,43200);\n\n          const idleTokenPerformance = apiResultsPerformanceChart.map((d,i) => {\n            let y = 0;\n            const x = this.functionsUtil.strToMoment(d.timestamp*1000).format(\"YYYY/MM/DD HH:mm\");\n            const tokenPrice = this.functionsUtil.fixTokenDecimals(d.idlePrice,this.props.tokenConfig.decimals);\n\n            if (!firstTokenPrice){\n              firstTokenPrice = tokenPrice;\n            } else {\n              y = parseFloat(tokenPrice.div(firstTokenPrice).minus(1).times(100));\n            }\n\n            if (firstIdleBlock === null){\n              firstIdleBlock = parseInt(d.blocknumber);\n            }\n\n            return { x, y };\n          });\n\n          const performanceChartData = [{\n            id:'Idle',\n            color: 'hsl('+tokenConfigStats.color.hsl.join(',')+')',\n            data: idleTokenPerformance\n          }];\n\n          // Set chart type\n          const performanceChartType = Line;\n\n          const performanceChartProps = {\n            pointSize:0,\n            lineWidth:1,\n            useMesh:false,\n            animate:false,\n            axisLeft:null,\n            axisBottom:null,\n            enableArea:true,\n            enableGridX:false,\n            enableGridY:false,\n            curve:'monotoneX',\n            enableSlices:false,\n            pointBorderWidth:1,\n            colors:d => d.color,\n            pointLabelYOffset:-12,\n            margin: { top: 0, right: 0, bottom: 0, left: 0 }\n          };\n\n          if (this.props.chartProps){\n            // Replace props\n            if (this.props.chartProps && Object.keys(this.props.chartProps).length){\n              Object.keys(this.props.chartProps).forEach(p => {\n                performanceChartProps[p] = this.props.chartProps[p];\n              });\n            }\n          }\n\n          if (setState){\n            this.setStateSafe({\n              ready:true,\n              performanceChartType,\n              performanceChartData,\n              performanceChartProps,\n              performanceChartWidth,\n              performanceChartHeight\n            });\n          }\n          output = performanceChartData;\n        break;\n        case 'custom':\n          const path = fieldInfo.path;\n          output = this.functionsUtil.getArrayPath(path,this.props.tokenConfig);\n          if (output){\n            this.setStateSafe({\n              [fieldName]:output\n            });\n          }\n        break;\n        default:\n          output = await this.functionsUtil.loadAssetField(fieldName,this.props.token,this.props.tokenConfig,this.props.account,addGovTokens);\n          if (output && setState){\n            this.setStateSafe({\n              ready:true,\n              [fieldName]:output\n            });\n          }\n        break;\n      }\n    }\n\n    return output;\n  }\n\n  render(){\n    const fieldInfo = this.props.fieldInfo;\n    let output = null;\n\n    const showLoader = fieldInfo.showLoader === undefined || fieldInfo.showLoader;\n    const loader = showLoader ? (<Loader size=\"20px\" />) : null;\n\n    const fieldProps = {\n      fontWeight:3,\n      fontSize:[0,2],\n      color:'cellText',\n      flexProps:{\n        justifyContent:'flex-start'\n      }\n    };\n\n    // Replace props\n    if (fieldInfo.props && Object.keys(fieldInfo.props).length){\n      Object.keys(fieldInfo.props).forEach(p => {\n        fieldProps[p] = fieldInfo.props[p];\n      });\n    }\n\n    // Merge with funcProps\n    if (fieldInfo.funcProps && Object.keys(fieldInfo.funcProps).length){\n      Object.keys(fieldInfo.funcProps).forEach(p => {\n        if (typeof fieldInfo.funcProps[p]==='function'){\n          fieldProps[p] = fieldInfo.funcProps[p](this.props);\n        }\n      });\n    }\n\n    const tokenConfigStats = this.props.token ? this.functionsUtil.getGlobalConfig(['stats','tokens',this.props.token.toUpperCase()]) : null;\n    const tokenConfig = this.props.tokenConfig || tokenConfigStats;\n      \n    const maxPrecision = fieldProps && fieldProps.maxPrecision ? fieldProps.maxPrecision : 5;\n    const decimals = fieldProps && fieldProps.decimals ? fieldProps.decimals : ( this.props.isMobile ? 2 : 3 );\n    const minPrecision = fieldProps && fieldProps.minPrecision ? fieldProps.minPrecision : ( this.props.isMobile ? 3 : 4 );\n\n    const tokenIcon = tokenConfigStats && tokenConfigStats.icon ? tokenConfigStats.icon : (tokenConfig && tokenConfig.icon ? tokenConfig.icon : `images/tokens/${this.props.token}.svg`);\n\n    switch (fieldInfo.name){\n      case 'iconTooltip':\n        output = (\n          <Tooltip\n            placement={'top'}\n            message={this.props.token}\n            {...fieldInfo.tooltipProps}\n          >\n            <Image src={tokenIcon} {...fieldProps} />\n          </Tooltip>\n        );\n      break;\n      case 'icon':\n        output = (\n          <Image src={tokenIcon} {...fieldProps} />\n        );\n      break;\n      case 'tokenName':\n        const tokenName = tokenConfigStats && tokenConfigStats.label ? tokenConfigStats.label : this.props.token;\n        output = (\n          <Text {...fieldProps}>{tokenName}</Text>\n        );\n      break;\n      case 'strategyIcon':\n        const strategyIcon = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'icon']);\n        if (strategyIcon){\n          output = (\n            <Image src={strategyIcon} {...fieldProps} />\n          );\n        }\n      break;\n      case 'strategyName':\n        const strategyName = this.functionsUtil.getGlobalConfig(['strategies',this.props.tokenConfig.strategy,'title']);\n        output = (\n          <Text {...fieldProps}>{strategyName}</Text>\n        );\n      break;\n      case 'tokenBalance':\n        output = this.state.tokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenBalance} />\n        ) : loader\n      break;\n      case 'fee':\n        output = this.state.fee ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.fee} />\n        ) : loader\n      break;\n      case 'tokenPrice':\n        output = this.state.tokenPrice ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.tokenPrice} />\n        ) : loader\n      break;\n      case 'amountToMigrate':\n        output = this.state.amountToMigrate ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.amountToMigrate} />\n        ) : loader\n      break;\n      case 'idleTokenBalance':\n        output = this.state.idleTokenBalance ? (\n          <SmartNumber {...fieldProps} minPrecision={minPrecision} number={this.state.idleTokenBalance} />\n        ) : loader\n      break;\n      case 'redeemableBalanceCounterCurve':\n        output = this.state.ready && this.state.redeemableBalanceCurveStart && this.state.redeemableBalanceCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceCurveEnd)}\n            start={parseFloat(this.state.redeemableBalanceCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalanceCounter':\n        output = this.state.ready && this.state.redeemableBalanceStart && this.state.redeemableBalanceEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.redeemableBalanceEnd)}\n            start={parseFloat(this.state.redeemableBalanceStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'feesCounter':\n        output = this.state.ready && this.state.feesStart && this.state.feesEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.feesEnd)}\n            start={parseFloat(this.state.feesStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounterCurve':\n        output = this.state.ready && this.state.earningsCurveStart && this.state.earningsCurveEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsCurveEnd)}\n            start={parseFloat(this.state.earningsCurveStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'earningsCounter':\n        output = this.state.ready && this.state.earningsStart && this.state.earningsEnd ? (\n          <CountUp\n            delay={0}\n            decimal={'.'}\n            separator={''}\n            useEasing={false}\n            duration={31536000}\n            decimals={decimals}\n            end={parseFloat(this.state.earningsEnd)}\n            start={parseFloat(this.state.earningsStart)}\n            formattingFn={ n => this.functionsUtil.abbreviateNumber(n,decimals,maxPrecision,minPrecision) }\n          >\n            {({ countUpRef, start }) => (\n              <span style={fieldProps.style} ref={countUpRef} />\n            )}\n          </CountUp>\n        ) : loader\n      break;\n      case 'redeemableBalance':\n        output = this.state.redeemableBalance ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.redeemableBalance} />\n        ) : loader\n      break;\n      case 'govTokens':\n        output = this.state.govTokens && Object.keys(this.state.govTokens).length>0 ? (\n          <Flex\n            width={1}\n            alignItems={'center'}\n            flexDirection={'row'}\n            justifyContent={'flex-start'}\n          >\n            {\n              Object.values(this.state.govTokens).map( (govTokenConfig,govTokenIndex) => (\n                <AssetField\n                  token={govTokenConfig.token}\n                  tokenConfig={govTokenConfig}\n                  key={`asset_${govTokenIndex}`}\n                  fieldInfo={{\n                    name:'iconTooltip',\n                    tooltipProps:{\n                      message:`${govTokenConfig.token}`+(this.state.getGovTokensDistributionSpeed && this.state.getGovTokensDistributionSpeed[govTokenConfig.token] ? `: ${this.state.getGovTokensDistributionSpeed[govTokenConfig.token].toFixed(decimals)}/${govTokenConfig.distributionFrequency} (for the whole pool)` : '')\n                    },\n                    props:{\n                      borderRadius:'50%',\n                      position:'relative',\n                      height:['1.1em','2em'],\n                      ml:govTokenIndex ? '-10px' : 0,\n                      zIndex:Object.values(this.state.govTokens).length-govTokenIndex,\n                      boxShadow:['1px 1px 1px 0px rgba(0,0,0,0.1)','1px 2px 3px 0px rgba(0,0,0,0.1)'],\n                    }\n                  }}\n                />\n              ))\n            }\n          </Flex>\n        ) : this.state.govTokens ? (\n          <Text {...fieldProps}>-</Text>\n        ) : loader\n      break;\n      case 'amountLentCurve':\n        output = this.state.amountLentCurve ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLentCurve} />\n        ) : loader\n      break;\n      case 'amountLent':\n        output = this.state.amountLent ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.amountLent} />\n        ) : loader\n      break;\n      case 'pool':\n        output = this.state.poolSize ? (\n          <SmartNumber {...fieldProps} decimals={decimals} minPrecision={minPrecision} maxPrecision={maxPrecision} number={this.state.poolSize} />\n        ) : loader\n      break;\n      case 'score':\n        output = (this.props.tokenConfig && this.props.tokenConfig.defiScoreDisabled) ? (<Text {...fieldProps}>N/A</Text>) : (this.state.score !== undefined && this.state.score !== null && this.functionsUtil.BNify(this.state.score).gt(0)) ? (\n          <SmartNumber {...fieldProps} decimals={2} number={this.state.score} />\n        ) : (this.functionsUtil.BNify(this.state.score).lte(0) ? (<Text {...fieldProps}>-</Text>) : loader)\n      break;\n      case 'earningsPerc':\n        output = this.state.earningsPerc ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPerc}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsPercCurve':\n        output = this.state.earningsPercCurve ?\n          (typeof fieldInfo.showDirection === 'undefined' || fieldInfo.showDirection) ? (\n            <VariationNumber\n              isMobile={this.props.isMobile}\n              direction={this.state.earningsPercCurveDirection}\n            >\n              <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n            </VariationNumber>\n          ) : (\n            <Text {...fieldProps}>{this.state.earningsPercCurve}%</Text>\n          )\n        : loader\n      break;\n      case 'earningsCurve':\n        output = this.state.earningsCurve ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earningsCurve}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'earnings':\n        output = this.state.earnings ? (\n          <VariationNumber\n            direction={'up'}\n            isMobile={this.props.isMobile}\n          >\n            <SmartNumber\n              {...fieldProps}\n              decimals={decimals}\n              minPrecision={minPrecision}\n              number={this.state.earnings}\n            />\n          </VariationNumber>\n        ) : loader\n      break;\n      case 'idleDistribution':\n        const governanceTokenName = this.functionsUtil.getGlobalConfig(['governance','props','tokenName']);\n        const idleTokenConfig = this.functionsUtil.getGlobalConfig(['govTokens',governanceTokenName]);\n        output = this.state.idleDistribution ? (\n          <Text {...fieldProps}>+{this.state.idleDistribution.toFixed(decimals)} IDLE/{idleTokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'userDistributionSpeed':\n        output = this.state.userDistributionSpeed ? (\n          <Text {...fieldProps}>{this.state.userDistributionSpeed.toFixed(decimals)}/{this.props.tokenConfig.distributionFrequency}</Text>\n        ) : loader\n      break;\n      case 'distributionSpeed':\n        output = this.state.distributionSpeed ? (\n          <Text {...fieldProps}>{this.state.distributionSpeed.toFixed(decimals)}</Text>\n        ) : loader\n      break;\n      case 'apr':\n        output = this.state.tokenAPR ? (\n          <Text {...fieldProps}>{this.state.tokenAPR}{!isNaN(parseFloat(this.state.tokenAPR)) ? '%' : ''}</Text>\n        ) : loader\n      break;\n      case 'oldApy':\n        output = this.state.oldAPY !== undefined ? (\n          <Text {...fieldProps}>{this.state.oldAPY !== false ? this.state.oldAPY : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apyNoGov':\n        output = this.state.tokenAPYNoGov !== undefined ? (\n          <Text {...fieldProps}>{this.state.tokenAPYNoGov !== false ? this.state.tokenAPYNoGov : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveApy':\n        output = this.state.curveApy !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveApy !== false ? this.state.curveApy : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'curveAvgSlippage':\n        output = this.state.curveAvgSlippage !== undefined ? (\n          <Text {...fieldProps}>{this.state.curveAvgSlippage !== false ? this.state.curveAvgSlippage : '-' }<small>%</small></Text>\n        ) : loader\n      break;\n      case 'apy':\n        output = this.state.tokenAPY !== undefined ? (\n          <Flex\n            alignItems={'center'}\n            flexDirection={'row'}\n          >\n            <Text {...fieldProps}>{this.state.tokenAPY !== false ? this.state.tokenAPY : '-' }<small>%</small></Text>\n            {\n              this.state.govTokensAprs && Object.keys(this.state.govTokensAprs).length>0 && \n                <AssetField\n                  fieldInfo={{\n                    name:'tooltip',\n                    props:{\n                      iconProps:{\n                        ml:1\n                      },\n                      placement:'top',\n                      message:Object.keys(this.state.govTokensAprs).map( govToken => {\n                        const distributionFrequency = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'distributionFrequency']);\n                        const tooltipMode = this.functionsUtil.getGlobalConfig(['govTokens',govToken,'aprTooltipMode']);\n                        let value = this.state.govTokensAprs[govToken].toFixed(decimals);\n                        switch (tooltipMode){\n                          default:\n                          case 'apr':\n                            value += '%';\n                          break;\n                          case 'distribution':\n                            value = `${value}/${distributionFrequency}`;\n                          break;\n                        }\n                        return `${govToken}: ${value}`\n                      }).join('; ')\n                    }\n                  }}\n                />\n            }\n          </Flex>\n        ) : loader\n      break;\n      case 'button':\n        const buttonLabel = typeof fieldInfo.label === 'function' ? fieldInfo.label(this.props) : fieldInfo.label;\n        output = (\n          <Button {...fieldProps} onClick={() => fieldProps.handleClick(this.props) }>{buttonLabel}</Button>\n        );\n      break;\n      case 'performanceChart':\n        output = this.state.performanceChartData ? (\n          <GenericChart\n            {...this.state.performanceChartProps}\n            type={this.state.performanceChartType}\n            data={this.state.performanceChartData}\n            width={this.state.performanceChartWidth}\n            height={this.state.performanceChartHeight}\n          />\n        ) : loader\n      break;\n      case 'allocationChart':\n        output = this.state.allocationChartWidth && this.state.allocationChartHeight ? (\n          <AllocationChart\n            {...this.props}\n            loaderProps={{\n              size:'20px'\n            }}\n            loaderText={''}\n            selectedToken={this.props.token}\n            width={this.state.allocationChartWidth}\n            height={this.state.allocationChartHeight}\n            inline={typeof this.props.inline !== 'undefined' ? this.props.inline : true}\n            showLoader={typeof this.props.showLoader !== 'undefined' ? this.props.showLoader : false}\n          />\n        ) : loader\n      break;\n      case 'tooltip':\n        output = (\n          <Tooltip\n            {...fieldProps}\n          >\n            <Icon\n              ml={2}\n              name={\"Info\"}\n              size={'1em'}\n              color={'cellTitle'}\n              {...fieldProps.iconProps}\n            />\n          </Tooltip>\n        );\n      break;\n      case 'aprChart':\n        output = this.state.aprChartData ? (\n          <GenericChart\n            {...this.state.aprChartProps}\n            type={this.state.aprChartType}\n            data={this.state.aprChartData}\n            width={this.state.aprChartWidth}\n            height={this.state.aprChartHeight}\n          />\n        ) : loader\n      break;\n      case 'custom':\n        let CustomComponent = null;\n        let customValue = this.state[fieldInfo.name];\n        switch (fieldInfo.type){\n          case 'number':\n            customValue = this.functionsUtil.BNify(customValue).toString();\n            CustomComponent = SmartNumber;\n            fieldProps.number = customValue;\n          break;\n          case 'link':\n            CustomComponent = Link;\n          break;\n          case 'icon':\n            CustomComponent = Icon;\n            fieldProps.name = customValue;\n          break;\n          default:\n            CustomComponent = Text;\n          break;\n        }\n\n        // Custom Field Props\n        const customFieldName = Object.values(fieldInfo.path).pop();\n        if (this.props.tokenConfig[`${customFieldName}Props`]){\n          const customFieldProps = this.props.tokenConfig[`${customFieldName}Props`];\n          // Replace props\n          if (customFieldProps && Object.keys(customFieldProps).length){\n            Object.keys(customFieldProps).forEach(p => {\n              fieldProps[p] = customFieldProps[p];\n            });\n          }\n        }\n\n        output = customValue ? (\n          <CustomComponent {...fieldProps}>{customValue}</CustomComponent>\n        ) : loader\n      break;\n      default:\n        let formattedValue = this.state[fieldInfo.name];\n        if (this.state[fieldInfo.name] && this.state[fieldInfo.name]._isBigNumber){\n          formattedValue = this.state[fieldInfo.name].toFixed(decimals);\n        }\n        output = this.state[fieldInfo.name] ? (\n          <Text {...fieldProps}>{formattedValue}</Text>\n        ) : loader\n      break;\n    }\n    return output;\n  }\n}\n\nexport default AssetField;\n","import React, { Component } from \"react\";\nimport { Button, Image, Flex, Text, Icon, Box } from 'rimble-ui';\n\nclass ImageButton extends Component {\n\n  render() {\n\n    const isMobile = typeof this.props.isMobile !== 'undefined' ? this.props.isMobile : false;\n    const image = this.props.imageSrc ? (<Image width={'auto'} src={this.props.imageSrc} {...this.props.imageProps} />) : ( this.props.iconName ? (<Icon name={this.props.iconName} {...this.props.iconProps} />) : null );\n    const caption = (<Text textAlign={ isMobile ? 'left' : 'center'} fontSize={2} fontWeight={3} color={'dark-gray'}>{this.props.caption}</Text>);\n\n    return (\n        <Button\n          color={'white'}\n          borderRadius={3}\n          px={ isMobile ? [3,4] : 4 }\n          py={ isMobile ? 0 : [3,4] }\n          my={ isMobile ? 2 : [2,2] }\n          mx={ isMobile ? 0 : [0,2] }\n          onClick={ this.props.handleClick }\n          height={ isMobile ? '58px' : ['150px','170px']}\n          mainColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          contrastColor={this.props.isActive ? 'cardBgHover' : 'cardBg'}\n          width={this.props.width ? this.props.width : (isMobile ? '100%' : ['150px','170px'])}\n          style={this.props.buttonStyle ? this.props.buttonStyle : (isMobile ? {justifyContent:'flex-start'} : null)}\n          {...this.props.buttonProps}\n        >\n          <>\n            {\n              this.props.badge && (\n                <Box\n                  position={'absolute'}\n                  borderRadius={'16px'}\n                  backgroundColor={ this.props.badge.bgColor ? this.props.badge.bgColor : 'blue' }\n                  style={ isMobile ? {right:'-25px',top:'-17px'} : {right:'-25px',top:'-25px'} }\n                  px={['5px','7px']}\n                  py={['1px','3px']}\n                >\n                  <Text\n                    fontWeight={3}\n                    fontSize={'10px'}\n                    color={ this.props.badge.color ? this.props.badge.color : '#fff' }\n                  >\n                  {this.props.badge.text}\n                  </Text>\n                </Box>\n              )\n            }\n            <Flex flexDirection={ isMobile ? 'row' : 'column'} justifyContent={ isMobile ? 'flex-start' : 'center'} alignItems={'center'}>\n              <Flex width={ isMobile ? '45px' : 1 } mr={ isMobile ? 2 : 0 } justifyContent={ isMobile ? 'flex-start' : 'center' }>\n                { this.props.captionPos && this.props.captionPos === 'top' ? caption : image }\n              </Flex>\n              <Flex width={ isMobile ? 'auto' : 1 } flexDirection={'column'} justifyContent={ isMobile ? 'flex-start' : 'center' } >\n                { this.props.captionPos && this.props.captionPos === 'top' ? image : caption }\n                {\n                  this.props.subcaption && this.props.subcaption.split('\\n').map((v,i) => {\n                    // Smaller caption for second line\n                    if (i){\n                      v = (<small>{v}</small>);\n                    }\n                    return (\n                      <Text key={`subcaption_${i}`} lineHeight={'1.3'} textAlign={ isMobile ? 'left' : 'center'} color={'darkGray'} fontWeight={1} fontSize={1}>{v}</Text>\n                    );\n                  })\n                }\n              </Flex>\n            </Flex>\n          </>\n        </Button>\n    );\n  }\n}\nexport default ImageButton;\n"],"sourceRoot":""}